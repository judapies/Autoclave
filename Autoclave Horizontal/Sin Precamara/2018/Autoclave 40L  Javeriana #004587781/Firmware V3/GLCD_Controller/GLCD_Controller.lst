CCS PCH C Compiler, Version 4.104, 5967               27-abr.-18 15:22

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclave Horizontal\Sin Precamara\2018\Autoclave 40L  Javeriana #0045877XX\Firmware V3\GLCD_Controller\GLCD_Controller.lst

               ROM used: 27648 bytes (84%)
                         Largest free fragment is 5116
               RAM used: 1285 (63%) at main() level
                         1335 (65%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2B88
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0ECA
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,NOVREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0F98:  MOVLW  05
0F9A:  MOVWF  FEA
0F9C:  MOVLW  02
0F9E:  MOVWF  FE9
0FA0:  MOVF   FEF,W
0FA2:  BZ    0FC0
0FA4:  MOVLW  0F
0FA6:  MOVWF  01
0FA8:  CLRF   00
0FAA:  DECFSZ 00,F
0FAC:  BRA    0FAA
0FAE:  DECFSZ 01,F
0FB0:  BRA    0FA8
0FB2:  MOVLW  8F
0FB4:  MOVWF  00
0FB6:  DECFSZ 00,F
0FB8:  BRA    0FB6
0FBA:  NOP   
0FBC:  DECFSZ FEF,F
0FBE:  BRA    0FA4
0FC0:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
1918:  MOVLW  08
191A:  MOVWF  01
191C:  MOVLW  11
191E:  MOVWF  00
1920:  DECFSZ 00,F
1922:  BRA    1920
1924:  BCF    F8A.1
1926:  BCF    F93.1
1928:  MOVLW  11
192A:  MOVWF  00
192C:  DECFSZ 00,F
192E:  BRA    192C
1930:  MOVLB  5
1932:  RLCF   x05,F
1934:  BCF    F8A.0
1936:  BTFSC  FD8.0
1938:  BSF    F93.0
193A:  BTFSS  FD8.0
193C:  BCF    F93.0
193E:  BSF    F93.1
1940:  BTFSS  F81.1
1942:  BRA    1940
1944:  DECFSZ 01,F
1946:  BRA    194A
1948:  BRA    194E
194A:  MOVLB  0
194C:  BRA    191C
194E:  MOVLW  11
1950:  MOVWF  00
1952:  DECFSZ 00,F
1954:  BRA    1952
1956:  BCF    F8A.1
1958:  BCF    F93.1
195A:  NOP   
195C:  BSF    F93.0
195E:  MOVLW  11
1960:  MOVWF  00
1962:  DECFSZ 00,F
1964:  BRA    1962
1966:  MOVLW  11
1968:  MOVWF  00
196A:  DECFSZ 00,F
196C:  BRA    196A
196E:  BSF    F93.1
1970:  BTFSS  F81.1
1972:  BRA    1970
1974:  CLRF   01
1976:  MOVLW  11
1978:  MOVWF  00
197A:  DECFSZ 00,F
197C:  BRA    197A
197E:  BTFSC  F81.0
1980:  BSF    01.0
1982:  BCF    F8A.1
1984:  BCF    F93.1
1986:  BCF    F8A.0
1988:  BCF    F93.0
198A:  MOVLB  0
198C:  RETLW  00
198E:  MOVLW  08
1990:  MOVLB  5
1992:  MOVWF  x05
1994:  MOVFF  00,506
1998:  BSF    F93.0
199A:  MOVLW  11
199C:  MOVWF  00
199E:  DECFSZ 00,F
19A0:  BRA    199E
19A2:  BSF    F93.1
19A4:  BTFSS  F81.1
19A6:  BRA    19A4
19A8:  BTFSC  F81.0
19AA:  BSF    FD8.0
19AC:  BTFSS  F81.0
19AE:  BCF    FD8.0
19B0:  RLCF   01,F
19B2:  MOVLW  11
19B4:  MOVWF  00
19B6:  DECFSZ 00,F
19B8:  BRA    19B6
19BA:  BCF    F93.1
19BC:  BCF    F8A.1
19BE:  DECFSZ x05,F
19C0:  BRA    1998
19C2:  BSF    F93.0
19C4:  MOVLW  11
19C6:  MOVWF  00
19C8:  DECFSZ 00,F
19CA:  BRA    19C8
19CC:  BCF    F8A.0
19CE:  MOVF   x06,W
19D0:  BTFSS  FD8.2
19D2:  BCF    F93.0
19D4:  NOP   
19D6:  BSF    F93.1
19D8:  BTFSS  F81.1
19DA:  BRA    19D8
19DC:  MOVLW  11
19DE:  MOVWF  00
19E0:  DECFSZ 00,F
19E2:  BRA    19E0
19E4:  BCF    F8A.1
19E6:  BCF    F93.1
19E8:  MOVLW  11
19EA:  MOVWF  00
19EC:  DECFSZ 00,F
19EE:  BRA    19EC
19F0:  BCF    F8A.0
19F2:  BCF    F93.0
19F4:  MOVLB  0
19F6:  GOTO   1F44 (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
1114:  BCF    F93.2
1116:  BSF    F8A.2
....................    output_low(GLCD_E); 
1118:  BCF    F93.7
111A:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
111C:  BCF    F93.3
111E:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
1120:  BCF    F93.4
1122:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
1124:  BCF    F93.5
1126:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1128:  MOVLB  5
112A:  CLRF   x17
112C:  MOVLW  C0
112E:  MOVWF  x18
1130:  MOVLB  0
1132:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1134:  MOVLW  01
1136:  MOVLB  5
1138:  MOVWF  x17
113A:  MOVLW  C0
113C:  MOVWF  x18
113E:  MOVLB  0
1140:  RCALL  0FC2
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
1142:  MOVLB  5
1144:  CLRF   x17
1146:  MOVLW  40
1148:  MOVWF  x18
114A:  MOVLB  0
114C:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
114E:  MOVLW  01
1150:  MOVLB  5
1152:  MOVWF  x17
1154:  MOVLW  40
1156:  MOVWF  x18
1158:  MOVLB  0
115A:  RCALL  0FC2
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
115C:  MOVLB  5
115E:  CLRF   x17
1160:  MOVLW  B8
1162:  MOVWF  x18
1164:  MOVLB  0
1166:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
1168:  MOVLW  01
116A:  MOVLB  5
116C:  MOVWF  x17
116E:  MOVLW  B8
1170:  MOVWF  x18
1172:  MOVLB  0
1174:  RCALL  0FC2
....................  
....................    if(mode == ON) 
1176:  MOVLB  5
1178:  DECFSZ x01,W
117A:  BRA    1198
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
117C:  CLRF   x17
117E:  MOVLW  3F
1180:  MOVWF  x18
1182:  MOVLB  0
1184:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1186:  MOVLW  01
1188:  MOVLB  5
118A:  MOVWF  x17
118C:  MOVLW  3F
118E:  MOVWF  x18
1190:  MOVLB  0
1192:  RCALL  0FC2
....................    } 
....................    else 
1194:  BRA    11B0
1196:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
1198:  CLRF   x17
119A:  MOVLW  3E
119C:  MOVWF  x18
119E:  MOVLB  0
11A0:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
11A2:  MOVLW  01
11A4:  MOVLB  5
11A6:  MOVWF  x17
11A8:  MOVLW  3E
11AA:  MOVWF  x18
11AC:  MOVLB  0
11AE:  RCALL  0FC2
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
11B0:  MOVLB  5
11B2:  CLRF   x02
11B4:  MOVLB  0
11B6:  RCALL  1002
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
11B8:  RCALL  105C
....................    #endif 
.................... } 
11BA:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
105C:  MOVLB  5
105E:  CLRF   x13
1060:  MOVLW  16
1062:  MOVWF  x12
....................    p2 = displayData.right; 
1064:  MOVLW  02
1066:  MOVWF  x15
1068:  MOVLW  16
106A:  MOVWF  x14
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
106C:  CLRF   x10
106E:  MOVF   x10,W
1070:  SUBLW  07
1072:  BNC   1110
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1074:  BCF    F93.5
1076:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
1078:  CLRF   x17
107A:  MOVLW  40
107C:  MOVWF  x18
107E:  MOVLB  0
1080:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1082:  MOVLW  01
1084:  MOVLB  5
1086:  MOVWF  x17
1088:  MOVLW  40
108A:  MOVWF  x18
108C:  MOVLB  0
108E:  RCALL  0FC2
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1090:  MOVLB  5
1092:  MOVF   x10,W
1094:  IORLW  B8
1096:  MOVWF  x16
1098:  CLRF   x17
109A:  MOVWF  x18
109C:  MOVLB  0
109E:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
10A0:  MOVLB  5
10A2:  MOVF   x10,W
10A4:  IORLW  B8
10A6:  MOVWF  x16
10A8:  MOVLW  01
10AA:  MOVWF  x17
10AC:  MOVFF  516,518
10B0:  MOVLB  0
10B2:  RCALL  0FC2
....................       output_high(GLCD_DI);                     // Set for data 
10B4:  BCF    F93.5
10B6:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
10B8:  MOVLB  5
10BA:  CLRF   x11
10BC:  MOVF   x11,W
10BE:  SUBLW  3F
10C0:  BNC   110C
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
10C2:  MOVFF  513,03
10C6:  MOVF   x12,W
10C8:  INCF   x12,F
10CA:  BTFSC  FD8.2
10CC:  INCF   x13,F
10CE:  MOVWF  FE9
10D0:  MOVFF  03,FEA
10D4:  MOVFF  FEF,516
10D8:  CLRF   x17
10DA:  MOVFF  516,518
10DE:  MOVLB  0
10E0:  RCALL  0FC2
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
10E2:  MOVLB  5
10E4:  MOVFF  515,03
10E8:  MOVF   x14,W
10EA:  INCF   x14,F
10EC:  BTFSC  FD8.2
10EE:  INCF   x15,F
10F0:  MOVWF  FE9
10F2:  MOVFF  03,FEA
10F6:  MOVFF  FEF,516
10FA:  MOVLW  01
10FC:  MOVWF  x17
10FE:  MOVFF  516,518
1102:  MOVLB  0
1104:  RCALL  0FC2
....................       } 
1106:  MOVLB  5
1108:  INCF   x11,F
110A:  BRA    10BC
....................    } 
110C:  INCF   x10,F
110E:  BRA    106E
.................... } 
1110:  MOVLB  0
1112:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
11BC:  MOVLB  5
11BE:  CLRF   x34
11C0:  RRCF   x2F,W
11C2:  MOVWF  x33
11C4:  RRCF   x33,F
11C6:  RRCF   x33,F
11C8:  MOVLW  1F
11CA:  ANDWF  x33,F
....................    temp *= 64; 
11CC:  RLCF   x33,F
11CE:  RLCF   x34,F
11D0:  RLCF   x33,F
11D2:  RLCF   x34,F
11D4:  RLCF   x33,F
11D6:  RLCF   x34,F
11D8:  RLCF   x33,F
11DA:  RLCF   x34,F
11DC:  RLCF   x33,F
11DE:  RLCF   x34,F
11E0:  RLCF   x33,F
11E2:  RLCF   x34,F
11E4:  MOVLW  C0
11E6:  ANDWF  x33,F
....................    temp += x; 
11E8:  MOVF   x2E,W
11EA:  ADDWF  x33,F
11EC:  MOVLW  00
11EE:  ADDWFC x34,F
....................  
....................    if(x > 63) 
11F0:  MOVF   x2E,W
11F2:  SUBLW  3F
11F4:  BC    1210
....................    { 
....................       p = displayData.right + temp - 64; 
11F6:  MOVLW  16
11F8:  ADDWF  x33,W
11FA:  MOVWF  x35
11FC:  MOVLW  02
11FE:  ADDWFC x34,W
1200:  MOVWF  x36
1202:  MOVLW  40
1204:  SUBWF  x35,W
1206:  MOVWF  x31
1208:  MOVLW  00
120A:  SUBWFB x36,W
120C:  MOVWF  x32
....................    } 
....................    else 
120E:  BRA    121C
....................    { 
....................       p = displayData.left + temp; 
1210:  MOVLW  16
1212:  ADDWF  x33,W
1214:  MOVWF  x31
1216:  MOVLW  00
1218:  ADDWFC x34,W
121A:  MOVWF  x32
....................    } 
....................  
....................    if(color) 
121C:  MOVF   x30,F
121E:  BZ    124A
....................    { 
....................       bit_set(*p, y%8); 
1220:  MOVFF  532,03
1224:  MOVFF  531,FE9
1228:  MOVFF  532,FEA
122C:  MOVF   x2F,W
122E:  ANDLW  07
1230:  MOVWF  x35
1232:  MOVLW  01
1234:  MOVWF  00
1236:  MOVF   x35,W
1238:  MOVWF  01
123A:  BZ    1244
123C:  BCF    FD8.0
123E:  RLCF   00,F
1240:  DECFSZ 01,F
1242:  BRA    123C
1244:  MOVF   00,W
1246:  IORWF  FEF,F
....................    } 
....................    else 
1248:  BRA    1274
....................    { 
....................       bit_clear(*p, y%8); 
124A:  MOVFF  532,03
124E:  MOVFF  531,FE9
1252:  MOVFF  532,FEA
1256:  MOVF   x2F,W
1258:  ANDLW  07
125A:  MOVWF  x35
125C:  MOVLW  01
125E:  MOVWF  00
1260:  MOVF   x35,W
1262:  MOVWF  01
1264:  BZ    126E
1266:  BCF    FD8.0
1268:  RLCF   00,F
126A:  DECFSZ 01,F
126C:  BRA    1266
126E:  MOVF   00,W
1270:  XORLW  FF
1272:  ANDWF  FEF,F
....................    } 
.................... } 
1274:  MOVLB  0
1276:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
1002:  MOVLB  5
1004:  CLRF   x05
1006:  MOVLW  16
1008:  MOVWF  x04
....................    p2 = displayData.right; 
100A:  MOVLW  02
100C:  MOVWF  x07
100E:  MOVLW  16
1010:  MOVWF  x06
....................    data = 0xFF * color; 
1012:  MOVF   x02,W
1014:  MULLW  FF
1016:  MOVFF  FF3,503
....................  
....................    for(i=0; i<512; ++i) 
101A:  CLRF   x09
101C:  CLRF   x08
101E:  MOVF   x09,W
1020:  SUBLW  01
1022:  BNC   1058
....................    { 
....................       *p1++ = data; 
1024:  MOVFF  505,03
1028:  MOVF   x04,W
102A:  INCF   x04,F
102C:  BTFSC  FD8.2
102E:  INCF   x05,F
1030:  MOVWF  FE9
1032:  MOVFF  03,FEA
1036:  MOVFF  503,FEF
....................       *p2++ = data; 
103A:  MOVFF  507,03
103E:  MOVF   x06,W
1040:  INCF   x06,F
1042:  BTFSC  FD8.2
1044:  INCF   x07,F
1046:  MOVWF  FE9
1048:  MOVFF  03,FEA
104C:  MOVFF  503,FEF
....................    } 
1050:  INCF   x08,F
1052:  BTFSC  FD8.2
1054:  INCF   x09,F
1056:  BRA    101E
.................... } 
1058:  MOVLB  0
105A:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0FC2:  MOVLB  5
0FC4:  MOVF   x17,F
0FC6:  BZ    0FCE
....................       output_high(GLCD_CS2); 
0FC8:  BCF    F93.4
0FCA:  BSF    F8A.4
....................    else 
0FCC:  BRA    0FD2
....................       output_high(GLCD_CS1); 
0FCE:  BCF    F93.3
0FD0:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0FD2:  BCF    F93.6
0FD4:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0FD6:  CLRF   F95
0FD8:  MOVFF  518,F8C
....................    delay_cycles(50); 
0FDC:  MOVLW  10
0FDE:  MOVWF  00
0FE0:  DECFSZ 00,F
0FE2:  BRA    0FE0
0FE4:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0FE6:  BCF    F93.7
0FE8:  BSF    F8A.7
....................    delay_cycles(250); 
0FEA:  MOVLW  53
0FEC:  MOVWF  00
0FEE:  DECFSZ 00,F
0FF0:  BRA    0FEE
....................    output_low(GLCD_E); 
0FF2:  BCF    F93.7
0FF4:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0FF6:  BCF    F93.3
0FF8:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0FFA:  BCF    F93.4
0FFC:  BCF    F8A.4
.................... } 
0FFE:  MOVLB  0
1000:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
1430:  MOVLW  01
1432:  MOVLB  5
1434:  MOVWF  x27
1436:  MOVWF  x28
1438:  CLRF   x2D
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
143A:  MOVF   x1E,W
143C:  SUBWF  x20,W
143E:  MOVWF  x2E
1440:  MOVF   x2E,W
1442:  BTFSS  x2E.7
1444:  BRA    144C
1446:  MOVLW  00
1448:  BSF    FD8.0
144A:  SUBFWB x2E,W
144C:  CLRF   03
144E:  MOVWF  x25
1450:  MOVFF  03,526
....................    dy = abs((signed int8)(y2 - y1)); 
1454:  MOVF   x1F,W
1456:  SUBWF  x21,W
1458:  MOVWF  x2E
145A:  MOVF   x2E,W
145C:  BTFSS  x2E.7
145E:  BRA    1466
1460:  MOVLW  00
1462:  BSF    FD8.0
1464:  SUBFWB x2E,W
1466:  CLRF   03
1468:  MOVWF  x23
146A:  MOVFF  03,524
....................    #endif 
....................  
....................    if(x1 > x2) 
146E:  MOVF   x1E,W
1470:  SUBWF  x20,W
1472:  BC    1478
....................       addx = -1; 
1474:  MOVLW  FF
1476:  MOVWF  x27
....................    if(y1 > y2) 
1478:  MOVF   x1F,W
147A:  SUBWF  x21,W
147C:  BC    1482
....................       addy = -1; 
147E:  MOVLW  FF
1480:  MOVWF  x28
....................  
....................    if(dx >= dy) 
1482:  MOVF   x24,W
1484:  SUBWF  x26,W
1486:  BNC   14FE
1488:  BNZ   1490
148A:  MOVF   x23,W
148C:  SUBWF  x25,W
148E:  BNC   14FE
....................    { 
....................       dy *= 2; 
1490:  BCF    FD8.0
1492:  RLCF   x23,F
1494:  RLCF   x24,F
....................       P = dy - dx; 
1496:  MOVF   x25,W
1498:  SUBWF  x23,W
149A:  MOVWF  00
149C:  MOVF   x26,W
149E:  SUBWFB x24,W
14A0:  MOVFF  00,529
14A4:  MOVWF  x2A
....................       diff = P - dx; 
14A6:  MOVF   x25,W
14A8:  SUBWF  x29,W
14AA:  MOVWF  x2B
14AC:  MOVF   x26,W
14AE:  SUBWFB x2A,W
14B0:  MOVWF  x2C
....................  
....................       for(; i<=dx; ++i) 
14B2:  MOVF   x26,F
14B4:  BNZ   14BC
14B6:  MOVF   x2D,W
14B8:  SUBWF  x25,W
14BA:  BNC   14FC
....................       { 
....................          glcd_pixel(x1, y1, color); 
14BC:  MOVFF  51E,52E
14C0:  MOVFF  51F,52F
14C4:  MOVFF  522,530
14C8:  MOVLB  0
14CA:  RCALL  11BC
....................  
....................          if(P < 0) 
14CC:  MOVLB  5
14CE:  BTFSC  x2A.7
14D0:  BRA    14D4
14D2:  BRA    14E4
....................          { 
....................             P  += dy; 
14D4:  MOVF   x23,W
14D6:  ADDWF  x29,F
14D8:  MOVF   x24,W
14DA:  ADDWFC x2A,F
....................             x1 += addx; 
14DC:  MOVF   x27,W
14DE:  ADDWF  x1E,W
14E0:  MOVWF  x1E
....................          } 
....................          else 
14E2:  BRA    14F8
....................          { 
....................             P  += diff; 
14E4:  MOVF   x2B,W
14E6:  ADDWF  x29,F
14E8:  MOVF   x2C,W
14EA:  ADDWFC x2A,F
....................             x1 += addx; 
14EC:  MOVF   x27,W
14EE:  ADDWF  x1E,W
14F0:  MOVWF  x1E
....................             y1 += addy; 
14F2:  MOVF   x28,W
14F4:  ADDWF  x1F,W
14F6:  MOVWF  x1F
....................          } 
....................       } 
14F8:  INCF   x2D,F
14FA:  BRA    14B2
....................    } 
....................    else 
14FC:  BRA    156A
....................    { 
....................       dx *= 2; 
14FE:  BCF    FD8.0
1500:  RLCF   x25,F
1502:  RLCF   x26,F
....................       P = dx - dy; 
1504:  MOVF   x23,W
1506:  SUBWF  x25,W
1508:  MOVWF  00
150A:  MOVF   x24,W
150C:  SUBWFB x26,W
150E:  MOVFF  00,529
1512:  MOVWF  x2A
....................       diff = P - dy; 
1514:  MOVF   x23,W
1516:  SUBWF  x29,W
1518:  MOVWF  x2B
151A:  MOVF   x24,W
151C:  SUBWFB x2A,W
151E:  MOVWF  x2C
....................  
....................       for(; i<=dy; ++i) 
1520:  MOVF   x24,F
1522:  BNZ   152A
1524:  MOVF   x2D,W
1526:  SUBWF  x23,W
1528:  BNC   156A
....................       { 
....................          glcd_pixel(x1, y1, color); 
152A:  MOVFF  51E,52E
152E:  MOVFF  51F,52F
1532:  MOVFF  522,530
1536:  MOVLB  0
1538:  RCALL  11BC
....................  
....................          if(P < 0) 
153A:  MOVLB  5
153C:  BTFSC  x2A.7
153E:  BRA    1542
1540:  BRA    1552
....................          { 
....................             P  += dx; 
1542:  MOVF   x25,W
1544:  ADDWF  x29,F
1546:  MOVF   x26,W
1548:  ADDWFC x2A,F
....................             y1 += addy; 
154A:  MOVF   x28,W
154C:  ADDWF  x1F,W
154E:  MOVWF  x1F
....................          } 
....................          else 
1550:  BRA    1566
....................          { 
....................             P  += diff; 
1552:  MOVF   x2B,W
1554:  ADDWF  x29,F
1556:  MOVF   x2C,W
1558:  ADDWFC x2A,F
....................             x1 += addx; 
155A:  MOVF   x27,W
155C:  ADDWF  x1E,W
155E:  MOVWF  x1E
....................             y1 += addy; 
1560:  MOVF   x28,W
1562:  ADDWF  x1F,W
1564:  MOVWF  x1F
....................          } 
....................       } 
1566:  INCF   x2D,F
1568:  BRA    1520
....................    } 
.................... } 
156A:  MOVLB  0
156C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
156E:  MOVLB  5
1570:  MOVF   x17,F
1572:  BZ    15D0
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1574:  MOVF   x15,W
1576:  SUBWF  x13,W
1578:  BC    1584
....................       { 
....................          xmin = x1; 
157A:  MOVFF  513,51A
....................          xmax = x2; 
157E:  MOVFF  515,51B
....................       } 
....................       else 
1582:  BRA    158C
....................       { 
....................          xmin = x2; 
1584:  MOVFF  515,51A
....................          xmax = x1; 
1588:  MOVFF  513,51B
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
158C:  MOVF   x16,W
158E:  SUBWF  x14,W
1590:  BC    159C
....................       { 
....................          ymin = y1; 
1592:  MOVFF  514,51C
....................          ymax = y2; 
1596:  MOVFF  516,51D
....................       } 
....................       else 
159A:  BRA    15A4
....................       { 
....................          ymin = y2; 
159C:  MOVFF  516,51C
....................          ymax = y1; 
15A0:  MOVFF  514,51D
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
15A4:  MOVF   x1A,W
15A6:  SUBWF  x1B,W
15A8:  BNC   15CE
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
15AA:  MOVFF  51C,519
15AE:  MOVF   x19,W
15B0:  SUBWF  x1D,W
15B2:  BNC   15CA
....................          { 
....................             glcd_pixel(xmin, i, color); 
15B4:  MOVFF  51A,52E
15B8:  MOVFF  519,52F
15BC:  MOVFF  518,530
15C0:  MOVLB  0
15C2:  RCALL  11BC
....................          } 
15C4:  MOVLB  5
15C6:  INCF   x19,F
15C8:  BRA    15AE
....................       } 
15CA:  INCF   x1A,F
15CC:  BRA    15A4
....................    } 
....................    else 
15CE:  BRA    162C
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
15D0:  MOVFF  513,51E
15D4:  MOVFF  514,51F
15D8:  MOVFF  515,520
15DC:  MOVFF  514,521
15E0:  MOVFF  518,522
15E4:  MOVLB  0
15E6:  RCALL  1430
....................       glcd_line(x1, y2, x2, y2, color); 
15E8:  MOVFF  513,51E
15EC:  MOVFF  516,51F
15F0:  MOVFF  515,520
15F4:  MOVFF  516,521
15F8:  MOVFF  518,522
15FC:  RCALL  1430
....................       glcd_line(x1, y1, x1, y2, color); 
15FE:  MOVFF  513,51E
1602:  MOVFF  514,51F
1606:  MOVFF  513,520
160A:  MOVFF  516,521
160E:  MOVFF  518,522
1612:  RCALL  1430
....................       glcd_line(x2, y1, x2, y2, color); 
1614:  MOVFF  515,51E
1618:  MOVFF  514,51F
161C:  MOVFF  515,520
1620:  MOVFF  516,521
1624:  MOVFF  518,522
1628:  RCALL  1430
162A:  MOVLB  5
....................    } 
.................... } 
162C:  MOVLB  0
162E:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2174:  MOVLB  5
2176:  CLRF   x06
....................    b = radius; 
2178:  MOVFF  503,507
....................    P = 1 - radius; 
217C:  MOVLW  01
217E:  BSF    FD8.0
2180:  SUBFWB x03,W
2182:  MOVWF  x08
....................  
....................    do 
....................    { 
....................       if(fill) 
2184:  MOVF   x04,F
2186:  BZ    2252
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
2188:  MOVF   x06,W
218A:  SUBWF  x01,W
218C:  MOVWF  x09
218E:  MOVF   x07,W
2190:  ADDWF  x02,W
2192:  MOVWF  x0A
2194:  MOVF   x06,W
2196:  ADDWF  x01,W
2198:  MOVWF  x0B
219A:  MOVF   x07,W
219C:  ADDWF  x02,W
219E:  MOVWF  x0C
21A0:  MOVFF  509,51E
21A4:  MOVFF  50A,51F
21A8:  MOVFF  50B,520
21AC:  MOVWF  x21
21AE:  MOVFF  505,522
21B2:  MOVLB  0
21B4:  CALL   1430
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
21B8:  MOVLB  5
21BA:  MOVF   x06,W
21BC:  SUBWF  x01,W
21BE:  MOVWF  x09
21C0:  MOVF   x07,W
21C2:  SUBWF  x02,W
21C4:  MOVWF  x0A
21C6:  MOVF   x06,W
21C8:  ADDWF  x01,W
21CA:  MOVWF  x0B
21CC:  MOVF   x07,W
21CE:  SUBWF  x02,W
21D0:  MOVWF  x0C
21D2:  MOVFF  509,51E
21D6:  MOVFF  50A,51F
21DA:  MOVFF  50B,520
21DE:  MOVWF  x21
21E0:  MOVFF  505,522
21E4:  MOVLB  0
21E6:  CALL   1430
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
21EA:  MOVLB  5
21EC:  MOVF   x07,W
21EE:  SUBWF  x01,W
21F0:  MOVWF  x09
21F2:  MOVF   x06,W
21F4:  ADDWF  x02,W
21F6:  MOVWF  x0A
21F8:  MOVF   x07,W
21FA:  ADDWF  x01,W
21FC:  MOVWF  x0B
21FE:  MOVF   x06,W
2200:  ADDWF  x02,W
2202:  MOVWF  x0C
2204:  MOVFF  509,51E
2208:  MOVFF  50A,51F
220C:  MOVFF  50B,520
2210:  MOVWF  x21
2212:  MOVFF  505,522
2216:  MOVLB  0
2218:  CALL   1430
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
221C:  MOVLB  5
221E:  MOVF   x07,W
2220:  SUBWF  x01,W
2222:  MOVWF  x09
2224:  MOVF   x06,W
2226:  SUBWF  x02,W
2228:  MOVWF  x0A
222A:  MOVF   x07,W
222C:  ADDWF  x01,W
222E:  MOVWF  x0B
2230:  MOVF   x06,W
2232:  SUBWF  x02,W
2234:  MOVWF  x0C
2236:  MOVFF  509,51E
223A:  MOVFF  50A,51F
223E:  MOVFF  50B,520
2242:  MOVWF  x21
2244:  MOVFF  505,522
2248:  MOVLB  0
224A:  CALL   1430
....................       } 
....................       else 
224E:  BRA    2340
2250:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2252:  MOVF   x01,W
2254:  ADDWF  x06,W
2256:  MOVWF  x09
2258:  MOVF   x02,W
225A:  ADDWF  x07,W
225C:  MOVWF  x0A
225E:  MOVFF  509,52E
2262:  MOVWF  x2F
2264:  MOVFF  505,530
2268:  MOVLB  0
226A:  CALL   11BC
....................          glcd_pixel(b+x, a+y, color); 
226E:  MOVLB  5
2270:  MOVF   x01,W
2272:  ADDWF  x07,W
2274:  MOVWF  x09
2276:  MOVF   x02,W
2278:  ADDWF  x06,W
227A:  MOVWF  x0A
227C:  MOVFF  509,52E
2280:  MOVWF  x2F
2282:  MOVFF  505,530
2286:  MOVLB  0
2288:  CALL   11BC
....................          glcd_pixel(x-a, b+y, color); 
228C:  MOVLB  5
228E:  MOVF   x06,W
2290:  SUBWF  x01,W
2292:  MOVWF  x09
2294:  MOVF   x02,W
2296:  ADDWF  x07,W
2298:  MOVWF  x0A
229A:  MOVFF  509,52E
229E:  MOVWF  x2F
22A0:  MOVFF  505,530
22A4:  MOVLB  0
22A6:  CALL   11BC
....................          glcd_pixel(x-b, a+y, color); 
22AA:  MOVLB  5
22AC:  MOVF   x07,W
22AE:  SUBWF  x01,W
22B0:  MOVWF  x09
22B2:  MOVF   x02,W
22B4:  ADDWF  x06,W
22B6:  MOVWF  x0A
22B8:  MOVFF  509,52E
22BC:  MOVWF  x2F
22BE:  MOVFF  505,530
22C2:  MOVLB  0
22C4:  CALL   11BC
....................          glcd_pixel(b+x, y-a, color); 
22C8:  MOVLB  5
22CA:  MOVF   x01,W
22CC:  ADDWF  x07,W
22CE:  MOVWF  x09
22D0:  MOVF   x06,W
22D2:  SUBWF  x02,W
22D4:  MOVWF  x0A
22D6:  MOVFF  509,52E
22DA:  MOVWF  x2F
22DC:  MOVFF  505,530
22E0:  MOVLB  0
22E2:  CALL   11BC
....................          glcd_pixel(a+x, y-b, color); 
22E6:  MOVLB  5
22E8:  MOVF   x01,W
22EA:  ADDWF  x06,W
22EC:  MOVWF  x09
22EE:  MOVF   x07,W
22F0:  SUBWF  x02,W
22F2:  MOVWF  x0A
22F4:  MOVFF  509,52E
22F8:  MOVWF  x2F
22FA:  MOVFF  505,530
22FE:  MOVLB  0
2300:  CALL   11BC
....................          glcd_pixel(x-a, y-b, color); 
2304:  MOVLB  5
2306:  MOVF   x06,W
2308:  SUBWF  x01,W
230A:  MOVWF  x09
230C:  MOVF   x07,W
230E:  SUBWF  x02,W
2310:  MOVWF  x0A
2312:  MOVFF  509,52E
2316:  MOVWF  x2F
2318:  MOVFF  505,530
231C:  MOVLB  0
231E:  CALL   11BC
....................          glcd_pixel(x-b, y-a, color); 
2322:  MOVLB  5
2324:  MOVF   x07,W
2326:  SUBWF  x01,W
2328:  MOVWF  x09
232A:  MOVF   x06,W
232C:  SUBWF  x02,W
232E:  MOVWF  x0A
2330:  MOVFF  509,52E
2334:  MOVWF  x2F
2336:  MOVFF  505,530
233A:  MOVLB  0
233C:  CALL   11BC
....................       } 
....................  
....................       if(P < 0) 
2340:  MOVLB  5
2342:  BTFSC  x08.7
2344:  BRA    2348
2346:  BRA    2364
....................          P += 3 + 2 * a++; 
2348:  MOVF   x06,W
234A:  INCF   x06,F
234C:  MOVWF  x09
234E:  MOVLW  02
2350:  MOVWF  x0A
2352:  MOVFF  509,50B
2356:  MOVLB  0
2358:  RCALL  2126
235A:  MOVF   01,W
235C:  ADDLW  03
235E:  MOVLB  5
2360:  ADDWF  x08,F
....................       else 
2362:  BRA    2386
....................          P += 5 + 2 * (a++ - b--); 
2364:  MOVF   x06,W
2366:  INCF   x06,F
2368:  MOVWF  x09
236A:  MOVF   x07,W
236C:  DECF   x07,F
236E:  SUBWF  x09,W
2370:  MOVWF  x09
2372:  MOVLW  02
2374:  MOVWF  x0A
2376:  MOVFF  509,50B
237A:  MOVLB  0
237C:  RCALL  2126
237E:  MOVF   01,W
2380:  ADDLW  05
2382:  MOVLB  5
2384:  ADDWF  x08,F
....................     } while(a <= b); 
2386:  MOVF   x06,W
2388:  XORLW  80
238A:  MOVWF  00
238C:  MOVF   x07,W
238E:  XORLW  80
2390:  SUBWF  00,W
2392:  BTFSC  FD8.2
2394:  BRA    2184
2396:  BTFSS  FD8.0
2398:  BRA    2184
.................... } 
239A:  MOVLB  0
239C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
1278:  MOVFF  515,03
127C:  MOVLB  5
127E:  MOVFF  514,FE9
1282:  MOVFF  515,FEA
1286:  MOVF   FEF,F
1288:  BTFSC  FD8.2
128A:  BRA    142C
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
128C:  MOVFF  515,03
1290:  MOVFF  514,FE9
1294:  MOVFF  515,FEA
1298:  MOVF   FEF,W
129A:  SUBLW  52
129C:  BNC   12EC
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
129E:  MOVFF  515,03
12A2:  MOVFF  514,FE9
12A6:  MOVFF  515,FEA
12AA:  MOVLW  20
12AC:  SUBWF  FEF,W
12AE:  MULLW  05
12B0:  MOVF   FF3,W
12B2:  CLRF   03
12B4:  MOVWF  x21
12B6:  MOVLW  05
12B8:  MOVWF  FEA
12BA:  MOVLW  1C
12BC:  MOVWF  FE9
12BE:  CLRF   x25
12C0:  MOVFF  521,524
12C4:  MOVFF  FF2,522
12C8:  BCF    FF2.7
12CA:  MOVLW  05
12CC:  MOVWF  01
12CE:  CLRF   FF7
12D0:  MOVF   x21,W
12D2:  MOVLB  0
12D4:  CALL   0096
12D8:  TBLRD*-
12DA:  TBLRD*+
12DC:  MOVFF  FF5,FEE
12E0:  DECFSZ 01,F
12E2:  BRA    12DA
12E4:  MOVLB  5
12E6:  BTFSC  x22.7
12E8:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
12EA:  BRA    1356
12EC:  MOVFF  515,03
12F0:  MOVFF  514,FE9
12F4:  MOVFF  515,FEA
12F8:  MOVF   FEF,W
12FA:  SUBLW  7E
12FC:  BNC   134C
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
12FE:  MOVFF  515,03
1302:  MOVFF  514,FE9
1306:  MOVFF  515,FEA
130A:  MOVLW  53
130C:  SUBWF  FEF,W
130E:  MULLW  05
1310:  MOVF   FF3,W
1312:  CLRF   03
1314:  MOVWF  x21
1316:  MOVLW  05
1318:  MOVWF  FEA
131A:  MOVLW  1C
131C:  MOVWF  FE9
131E:  CLRF   x25
1320:  MOVFF  521,524
1324:  MOVFF  FF2,522
1328:  BCF    FF2.7
132A:  MOVLW  05
132C:  MOVWF  01
132E:  CLRF   FF7
1330:  MOVF   x21,W
1332:  MOVLB  0
1334:  CALL   01B0
1338:  TBLRD*-
133A:  TBLRD*+
133C:  MOVFF  FF5,FEE
1340:  DECFSZ 01,F
1342:  BRA    133A
1344:  MOVLB  5
1346:  BTFSC  x22.7
1348:  BSF    FF2.7
....................       else 
134A:  BRA    1356
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
134C:  CLRF   x1C
134E:  CLRF   x1D
1350:  CLRF   x1E
1352:  CLRF   x1F
1354:  CLRF   x20
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1356:  MOVFF  515,03
135A:  MOVF   x14,W
135C:  MOVWF  FE9
135E:  MOVFF  03,FEA
1362:  MOVF   FEF,W
1364:  XORLW  0A
1366:  MOVLB  0
1368:  BZ    1370
136A:  XORLW  07
136C:  BZ    1380
136E:  BRA    1386
....................          case '\n': 
....................             y += 7*size + 1; 
1370:  MOVLB  5
1372:  MOVF   x16,W
1374:  MULLW  07
1376:  MOVF   FF3,W
1378:  ADDLW  01
137A:  ADDWF  x13,F
....................             continue; 
137C:  BRA    141E
137E:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1380:  MOVLB  5
1382:  CLRF   x12
....................             continue; 
1384:  BRA    141E
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1386:  MOVLB  5
1388:  MOVF   x16,W
138A:  MULLW  05
138C:  MOVF   FF3,W
138E:  ADDWF  x12,W
1390:  SUBLW  7F
1392:  BC    13A0
....................       { 
....................          x = 0;                           // Set x at far left position 
1394:  CLRF   x12
....................          y += 7*size + 1;                 // Set y at next position down 
1396:  MOVF   x16,W
1398:  MULLW  07
139A:  MOVF   FF3,W
139C:  ADDLW  01
139E:  ADDWF  x13,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
13A0:  CLRF   x18
13A2:  MOVF   x18,W
13A4:  SUBLW  04
13A6:  BNC   141E
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
13A8:  CLRF   x19
13AA:  MOVF   x19,W
13AC:  SUBLW  06
13AE:  BNC   1416
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
13B0:  CLRF   03
13B2:  MOVF   x18,W
13B4:  ADDLW  1C
13B6:  MOVWF  FE9
13B8:  MOVLW  05
13BA:  ADDWFC 03,W
13BC:  MOVWF  FEA
13BE:  MOVFF  FEF,521
13C2:  MOVFF  521,00
13C6:  MOVF   x19,W
13C8:  MOVWF  01
13CA:  BZ    13D4
13CC:  BCF    FD8.0
13CE:  RRCF   00,F
13D0:  DECFSZ 01,F
13D2:  BRA    13CC
13D4:  BTFSS  00.0
13D6:  BRA    1412
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
13D8:  CLRF   x1A
13DA:  MOVF   x16,W
13DC:  SUBWF  x1A,W
13DE:  BC    1412
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
13E0:  CLRF   x1B
13E2:  MOVF   x16,W
13E4:  SUBWF  x1B,W
13E6:  BC    140E
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
13E8:  MOVF   x1B,W
13EA:  ADDWF  x12,W
13EC:  MOVWF  x21
13EE:  MOVF   x19,W
13F0:  MULWF  x16
13F2:  MOVF   FF3,W
13F4:  ADDWF  x13,W
13F6:  ADDWF  x1A,W
13F8:  MOVWF  x22
13FA:  MOVFF  521,52E
13FE:  MOVWF  x2F
1400:  MOVFF  517,530
1404:  MOVLB  0
1406:  RCALL  11BC
....................                   } 
1408:  MOVLB  5
140A:  INCF   x1B,F
140C:  BRA    13E2
....................                } 
140E:  INCF   x1A,F
1410:  BRA    13DA
....................             } 
....................          } 
1412:  INCF   x19,F
1414:  BRA    13AA
....................       } 
1416:  INCF   x18,F
1418:  MOVF   x16,W
141A:  ADDWF  x12,F
141C:  BRA    13A2
....................    } 
141E:  INCF   x14,F
1420:  BTFSC  FD8.2
1422:  INCF   x15,F
1424:  INCF   x12,F
1426:  MOVLB  0
1428:  BRA    1278
142A:  MOVLB  5
.................... } 
142C:  MOVLB  0
142E:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
1630:  MOVLB  5
1632:  MOVFF  501,01
1636:  MOVFF  502,03
163A:  MOVFF  501,507
163E:  MOVFF  502,508
1642:  MOVLW  04
1644:  MOVWF  FEA
1646:  MOVLW  E1
1648:  MOVWF  FE9
164A:  MOVFF  502,FE2
164E:  MOVFF  501,FE1
1652:  MOVF   FE7,F
1654:  MOVFF  FE6,FEE
1658:  BNZ   1652
....................    if(sombreado==2) 
165A:  MOVF   x05,W
165C:  SUBLW  02
165E:  BNZ   1688
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1660:  MOVLW  01
1662:  ADDWF  x03,W
1664:  MOVWF  x07
1666:  MOVLW  01
1668:  ADDWF  x04,W
166A:  MOVWF  x08
166C:  MOVFF  507,512
1670:  MOVWF  x13
1672:  MOVLW  04
1674:  MOVWF  x15
1676:  MOVLW  E1
1678:  MOVWF  x14
167A:  MOVFF  506,516
167E:  MOVLW  01
1680:  MOVWF  x17
1682:  MOVLB  0
1684:  RCALL  1278
1686:  MOVLB  5
....................    if(sombreado==1) 
1688:  DECFSZ x05,W
168A:  BRA    16D6
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
168C:  MOVF   x06,W
168E:  MULLW  08
1690:  MOVF   FF3,W
1692:  ADDWF  x04,W
1694:  MOVWF  x07
1696:  CLRF   x13
1698:  MOVFF  504,514
169C:  MOVLW  7F
169E:  MOVWF  x15
16A0:  MOVFF  507,516
16A4:  MOVLW  01
16A6:  MOVWF  x17
16A8:  MOVWF  x18
16AA:  MOVLB  0
16AC:  RCALL  156E
16AE:  MOVLW  01
16B0:  MOVLB  5
16B2:  ADDWF  x03,W
16B4:  MOVWF  x07
16B6:  MOVLW  01
16B8:  ADDWF  x04,W
16BA:  MOVWF  x08
16BC:  MOVFF  507,512
16C0:  MOVWF  x13
16C2:  MOVLW  04
16C4:  MOVWF  x15
16C6:  MOVLW  E1
16C8:  MOVWF  x14
16CA:  MOVFF  506,516
16CE:  CLRF   x17
16D0:  MOVLB  0
16D2:  RCALL  1278
16D4:  MOVLB  5
....................    if(sombreado==0) 
16D6:  MOVF   x05,F
16D8:  BNZ   1724
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
16DA:  MOVF   x06,W
16DC:  MULLW  08
16DE:  MOVF   FF3,W
16E0:  ADDWF  x04,W
16E2:  MOVWF  x07
16E4:  CLRF   x13
16E6:  MOVFF  504,514
16EA:  MOVLW  7F
16EC:  MOVWF  x15
16EE:  MOVFF  507,516
16F2:  MOVLW  01
16F4:  MOVWF  x17
16F6:  CLRF   x18
16F8:  MOVLB  0
16FA:  RCALL  156E
16FC:  MOVLW  01
16FE:  MOVLB  5
1700:  ADDWF  x03,W
1702:  MOVWF  x07
1704:  MOVLW  01
1706:  ADDWF  x04,W
1708:  MOVWF  x08
170A:  MOVFF  507,512
170E:  MOVWF  x13
1710:  MOVLW  04
1712:  MOVWF  x15
1714:  MOVLW  E1
1716:  MOVWF  x14
1718:  MOVFF  506,516
171C:  MOVLW  01
171E:  MOVWF  x17
1720:  MOVLB  0
1722:  RCALL  1278
....................    glcd_update(); 
1724:  MOVLB  0
1726:  RCALL  105C
.................... } 
1728:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
2424:  MOVLB  5
2426:  MOVF   x05,W
2428:  SUBLW  02
242A:  BNZ   24A0
....................    { 
....................       sprintf(voltage, "%03u", digito); 
242C:  MOVLW  05
242E:  MOVWF  x00
2430:  MOVLW  07
2432:  MOVLB  4
2434:  MOVWF  xFF
2436:  MOVFF  502,510
243A:  MOVLW  03
243C:  MOVLB  5
243E:  MOVWF  x11
2440:  MOVLB  0
2442:  RCALL  239E
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2444:  MOVLB  5
2446:  MOVF   x06,W
2448:  MULLW  12
244A:  MOVF   FF3,W
244C:  ADDWF  x03,W
244E:  MOVWF  x10
2450:  MOVF   x06,W
2452:  MULLW  08
2454:  MOVF   FF3,W
2456:  ADDWF  x04,W
2458:  MOVWF  x11
245A:  MOVFF  503,513
245E:  MOVFF  504,514
2462:  MOVFF  510,515
2466:  MOVWF  x16
2468:  MOVLW  01
246A:  MOVWF  x17
246C:  MOVWF  x18
246E:  MOVLB  0
2470:  CALL   156E
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2474:  MOVLW  01
2476:  MOVLB  5
2478:  ADDWF  x03,W
247A:  MOVWF  x10
247C:  MOVLW  01
247E:  ADDWF  x04,W
2480:  MOVWF  x11
2482:  MOVFF  510,512
2486:  MOVWF  x13
2488:  MOVLW  05
248A:  MOVWF  x15
248C:  MOVLW  07
248E:  MOVWF  x14
2490:  MOVFF  506,516
2494:  CLRF   x17
2496:  MOVLB  0
2498:  CALL   1278
....................    } 
....................    else 
249C:  BRA    2572
249E:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
24A0:  MOVLW  05
24A2:  MOVWF  x00
24A4:  MOVLW  07
24A6:  MOVLB  4
24A8:  MOVWF  xFF
24AA:  MOVFF  502,510
24AE:  MOVLW  1B
24B0:  MOVLB  5
24B2:  MOVWF  x11
24B4:  MOVLB  0
24B6:  RCALL  239E
....................     
....................       if(sombreado==1) 
24B8:  MOVLB  5
24BA:  DECFSZ x05,W
24BC:  BRA    2516
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24BE:  MOVF   x06,W
24C0:  MULLW  05
24C2:  MOVF   FF3,W
24C4:  ADDWF  x03,W
24C6:  MOVWF  x10
24C8:  MOVF   x06,W
24CA:  MULLW  08
24CC:  MOVF   FF3,W
24CE:  ADDWF  x04,W
24D0:  MOVWF  x11
24D2:  MOVFF  503,513
24D6:  MOVFF  504,514
24DA:  MOVFF  510,515
24DE:  MOVWF  x16
24E0:  MOVLW  01
24E2:  MOVWF  x17
24E4:  MOVWF  x18
24E6:  MOVLB  0
24E8:  CALL   156E
24EC:  MOVLW  01
24EE:  MOVLB  5
24F0:  ADDWF  x03,W
24F2:  MOVWF  x10
24F4:  MOVLW  01
24F6:  ADDWF  x04,W
24F8:  MOVWF  x11
24FA:  MOVFF  510,512
24FE:  MOVWF  x13
2500:  MOVLW  05
2502:  MOVWF  x15
2504:  MOVLW  07
2506:  MOVWF  x14
2508:  MOVFF  506,516
250C:  CLRF   x17
250E:  MOVLB  0
2510:  CALL   1278
2514:  MOVLB  5
....................       if(sombreado==0) 
2516:  MOVF   x05,F
2518:  BNZ   2574
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
251A:  MOVF   x06,W
251C:  MULLW  05
251E:  MOVF   FF3,W
2520:  ADDWF  x03,W
2522:  MOVWF  x10
2524:  MOVF   x06,W
2526:  MULLW  08
2528:  MOVF   FF3,W
252A:  ADDWF  x04,W
252C:  MOVWF  x11
252E:  MOVFF  503,513
2532:  MOVFF  504,514
2536:  MOVFF  510,515
253A:  MOVWF  x16
253C:  MOVLW  01
253E:  MOVWF  x17
2540:  CLRF   x18
2542:  MOVLB  0
2544:  CALL   156E
2548:  MOVLW  01
254A:  MOVLB  5
254C:  ADDWF  x03,W
254E:  MOVWF  x10
2550:  MOVLW  01
2552:  ADDWF  x04,W
2554:  MOVWF  x11
2556:  MOVFF  510,512
255A:  MOVWF  x13
255C:  MOVLW  05
255E:  MOVWF  x15
2560:  MOVLW  07
2562:  MOVWF  x14
2564:  MOVFF  506,516
2568:  MOVLW  01
256A:  MOVWF  x17
256C:  MOVLB  0
256E:  CALL   1278
2572:  MOVLB  5
....................    } 
....................    glcd_update(); 
2574:  MOVLB  0
2576:  CALL   105C
.................... } 
257A:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2078:  MOVLB  5
207A:  MOVF   x01,W
207C:  SUBLW  05
207E:  BNZ   2122
....................    for( i = 0 ; i < 64 ; i ++ ) 
2080:  CLRF   x02
2082:  MOVF   x02,W
2084:  SUBLW  3F
2086:  BNC   2122
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2088:  CLRF   x03
208A:  MOVF   x03,W
208C:  SUBLW  0F
208E:  BNC   211E
....................       {     
....................          for(k=7;k>-1;k--) 
2090:  MOVLW  07
2092:  MOVWF  x04
2094:  MOVF   x04,W
2096:  XORLW  80
2098:  SUBLW  7F
209A:  BC    211A
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
209C:  CLRF   x06
209E:  MOVFF  502,505
20A2:  CLRF   x08
20A4:  MOVLW  10
20A6:  MOVWF  x07
20A8:  MOVLB  0
20AA:  BRA    2054
20AC:  MOVFF  02,506
20B0:  MOVFF  01,505
20B4:  MOVLB  5
20B6:  MOVF   x03,W
20B8:  ADDWF  01,W
20BA:  MOVWF  01
20BC:  MOVLW  00
20BE:  ADDWFC 02,W
20C0:  MOVWF  03
20C2:  MOVF   01,W
20C4:  MOVFF  FF2,505
20C8:  BCF    FF2.7
20CA:  MOVFF  03,FF7
20CE:  MOVLB  0
20D0:  CALL   02A6
20D4:  MOVLB  5
20D6:  BTFSC  x05.7
20D8:  BSF    FF2.7
20DA:  MOVWF  x05
20DC:  MOVLW  07
20DE:  BSF    FD8.0
20E0:  SUBFWB x04,W
20E2:  MOVWF  x06
20E4:  MOVFF  505,00
20E8:  MOVF   x06,W
20EA:  MOVWF  01
20EC:  BZ    20F6
20EE:  BCF    FD8.0
20F0:  RRCF   00,F
20F2:  DECFSZ 01,F
20F4:  BRA    20EE
20F6:  BTFSS  00.0
20F8:  BRA    2116
....................                glcd_pixel( j*8+k,i, ON ); 
20FA:  MOVF   x03,W
20FC:  MULLW  08
20FE:  MOVF   FF3,W
2100:  ADDWF  x04,W
2102:  MOVWF  x05
2104:  MOVWF  x2E
2106:  MOVFF  502,52F
210A:  MOVLW  01
210C:  MOVWF  x30
210E:  MOVLB  0
2110:  CALL   11BC
2114:  MOVLB  5
....................          }   
2116:  DECF   x04,F
2118:  BRA    2094
....................       } 
211A:  INCF   x03,F
211C:  BRA    208A
....................    } 
211E:  INCF   x02,F
2120:  BRA    2082
....................    } 
....................     
.................... } 
2122:  MOVLB  0
2124:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0ECA:  MOVLW  15
0ECC:  MOVWF  FCF
0ECE:  MOVLW  A0
0ED0:  MOVWF  FCE
....................    tiempos++; 
0ED2:  MOVLB  4
0ED4:  INCF   xAC,F
0ED6:  BTFSC  FD8.2
0ED8:  INCF   xAD,F
....................    tiempos3++; 
0EDA:  INCF   xAE,F
0EDC:  BTFSC  FD8.2
0EDE:  INCF   xAF,F
....................    tiempoctrl++; 
0EE0:  INCF   xB0,F
0EE2:  BTFSC  FD8.2
0EE4:  INCF   xB1,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0EE6:  MOVF   xAF,F
0EE8:  BNZ   0EF0
0EEA:  MOVF   xAE,W
0EEC:  SUBLW  27
0EEE:  BC    0F02
0EF0:  MOVF   xAA,W
0EF2:  SUBLW  02
0EF4:  BNZ   0F02
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0EF6:  CLRF   xAF
0EF8:  CLRF   xAE
0EFA:  BSF    x95.7
0EFC:  INCF   xB6,F
0EFE:  BTFSC  FD8.2
0F00:  INCF   xB7,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0F02:  MOVF   xAC,W
0F04:  SUBLW  C8
0F06:  BNZ   0F90
0F08:  MOVF   xAD,F
0F0A:  BNZ   0F90
....................    {tiempos=0;Lectura=1;tinicio++; 
0F0C:  CLRF   xAD
0F0E:  CLRF   xAC
0F10:  BSF    x95.6
0F12:  INCF   xB8,F
0F14:  BTFSC  FD8.2
0F16:  INCF   xB9,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0F18:  DECFSZ xA8,W
0F1A:  BRA    0F54
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0F1C:  INCF   xBE,F
....................       if(Testerilizacion[0]>9) 
0F1E:  BTFSC  xBE.7
0F20:  BRA    0F2C
0F22:  MOVF   xBE,W
0F24:  SUBLW  09
0F26:  BC    0F2C
....................          {Testerilizacion[0]=0; 
0F28:  CLRF   xBE
....................           Testerilizacion[1]++;} 
0F2A:  INCF   xBF,F
....................        if(Testerilizacion[1]>5) 
0F2C:  BTFSC  xBF.7
0F2E:  BRA    0F3A
0F30:  MOVF   xBF,W
0F32:  SUBLW  05
0F34:  BC    0F3A
....................          {Testerilizacion[1]=0; 
0F36:  CLRF   xBF
....................           Testerilizacion[2]++;} 
0F38:  INCF   xC0,F
....................          if(Testerilizacion[2]>9) 
0F3A:  BTFSC  xC0.7
0F3C:  BRA    0F48
0F3E:  MOVF   xC0,W
0F40:  SUBLW  09
0F42:  BC    0F48
....................             {Testerilizacion[2]=0; 
0F44:  CLRF   xC0
....................              Testerilizacion[3]++;} 
0F46:  INCF   xC1,F
....................             if(Testerilizacion[3]>5) 
0F48:  BTFSC  xC1.7
0F4A:  BRA    0F54
0F4C:  MOVF   xC1,W
0F4E:  SUBLW  05
0F50:  BC    0F54
....................                {Testerilizacion[3]=0;} 
0F52:  CLRF   xC1
....................       }        
....................        
....................     if(tiempo_secado==1) 
0F54:  DECFSZ xA9,W
0F56:  BRA    0F90
....................       { 
....................                       
....................       Tsecado[0]++; 
0F58:  INCF   xC6,F
....................       if(Tsecado[0]>9) 
0F5A:  BTFSC  xC6.7
0F5C:  BRA    0F68
0F5E:  MOVF   xC6,W
0F60:  SUBLW  09
0F62:  BC    0F68
....................          {Tsecado[0]=0; 
0F64:  CLRF   xC6
....................           Tsecado[1]++;} 
0F66:  INCF   xC7,F
....................        if(Tsecado[1]>5) 
0F68:  BTFSC  xC7.7
0F6A:  BRA    0F76
0F6C:  MOVF   xC7,W
0F6E:  SUBLW  05
0F70:  BC    0F76
....................          {Tsecado[1]=0; 
0F72:  CLRF   xC7
....................           Tsecado[2]++;} 
0F74:  INCF   xC8,F
....................          if(Tsecado[2]>9) 
0F76:  BTFSC  xC8.7
0F78:  BRA    0F84
0F7A:  MOVF   xC8,W
0F7C:  SUBLW  09
0F7E:  BC    0F84
....................             {Tsecado[2]=0; 
0F80:  CLRF   xC8
....................              Tsecado[3]++;} 
0F82:  INCF   xC9,F
....................             if(Tsecado[3]>5) 
0F84:  BTFSC  xC9.7
0F86:  BRA    0F90
0F88:  MOVF   xC9,W
0F8A:  SUBLW  05
0F8C:  BC    0F90
....................                {Tsecado[3]=0;} 
0F8E:  CLRF   xC9
....................       }   
....................    } 
....................    } 
....................     
0F90:  BCF    F9E.0
0F92:  MOVLB  0
0F94:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
26BC:  MOVLW  07
26BE:  MOVLB  5
26C0:  ADDWF  x03,W
26C2:  MOVWF  x04
26C4:  MOVFF  501,513
26C8:  MOVFF  503,514
26CC:  MOVFF  502,515
26D0:  MOVWF  x16
26D2:  MOVLW  01
26D4:  MOVWF  x17
26D6:  CLRF   x18
26D8:  MOVLB  0
26DA:  CALL   156E
.................... } 
26DE:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%3.1f",adc); // Converts adc to text 
*
2A50:  MOVLW  05
2A52:  MOVLB  5
2A54:  MOVWF  x00
2A56:  MOVLW  08
2A58:  MOVLB  4
2A5A:  MOVWF  xFF
2A5C:  MOVLW  02
2A5E:  MOVWF  FE9
2A60:  MOVFF  504,514
2A64:  MOVFF  503,513
2A68:  MOVFF  502,512
2A6C:  MOVFF  501,511
2A70:  MOVLW  01
2A72:  MOVLB  5
2A74:  MOVWF  x15
2A76:  MOVLB  0
2A78:  BRA    289C
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2A7A:  MOVLB  5
2A7C:  MOVF   x07,W
2A7E:  MULLW  1B
2A80:  MOVF   FF3,W
2A82:  ADDWF  x05,W
2A84:  MOVWF  x11
2A86:  MOVF   x07,W
2A88:  MULLW  08
2A8A:  MOVF   FF3,W
2A8C:  ADDWF  x06,W
2A8E:  MOVWF  x12
2A90:  MOVFF  505,513
2A94:  MOVFF  506,514
2A98:  MOVFF  511,515
2A9C:  MOVWF  x16
2A9E:  MOVLW  01
2AA0:  MOVWF  x17
2AA2:  CLRF   x18
2AA4:  MOVLB  0
2AA6:  CALL   156E
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2AAA:  MOVFF  505,512
2AAE:  MOVFF  506,513
2AB2:  MOVLW  05
2AB4:  MOVLB  5
2AB6:  MOVWF  x15
2AB8:  MOVLW  08
2ABA:  MOVWF  x14
2ABC:  MOVFF  507,516
2AC0:  MOVLW  01
2AC2:  MOVWF  x17
2AC4:  MOVLB  0
2AC6:  CALL   1278
.................... } 
2ACA:  GOTO   64CA (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
257C:  MOVFF  4C5,502
2580:  MOVLW  24
2582:  MOVLB  5
2584:  MOVWF  x03
2586:  CLRF   x04
2588:  CLRF   x05
258A:  MOVLW  01
258C:  MOVWF  x06
258E:  MOVLB  0
2590:  RCALL  2424
2592:  MOVFF  4C4,502
2596:  MOVLW  2A
2598:  MOVLB  5
259A:  MOVWF  x03
259C:  CLRF   x04
259E:  CLRF   x05
25A0:  MOVLW  01
25A2:  MOVWF  x06
25A4:  MOVLB  0
25A6:  RCALL  2424
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
25A8:  MOVLW  04
25AA:  MOVWF  FEA
25AC:  MOVLW  E1
25AE:  MOVWF  FE9
25B0:  MOVFF  FF2,501
25B4:  BCF    FF2.7
25B6:  MOVLW  00
25B8:  CALL   06BE
25BC:  TBLRD*-
25BE:  TBLRD*+
25C0:  MOVF   FF5,W
25C2:  MOVWF  FEE
25C4:  IORLW  00
25C6:  BNZ   25BE
25C8:  MOVLB  5
25CA:  BTFSC  x01.7
25CC:  BSF    FF2.7
25CE:  MOVLW  04
25D0:  MOVWF  x02
25D2:  MOVLW  E1
25D4:  MOVWF  x01
25D6:  MOVLW  31
25D8:  MOVWF  x03
25DA:  CLRF   x04
25DC:  MOVLW  02
25DE:  MOVWF  x05
25E0:  MOVLW  01
25E2:  MOVWF  x06
25E4:  MOVLB  0
25E6:  CALL   1630
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
25EA:  MOVFF  4C3,502
25EE:  MOVLW  36
25F0:  MOVLB  5
25F2:  MOVWF  x03
25F4:  CLRF   x04
25F6:  CLRF   x05
25F8:  MOVLW  01
25FA:  MOVWF  x06
25FC:  MOVLB  0
25FE:  RCALL  2424
2600:  MOVFF  4C2,502
2604:  MOVLW  3C
2606:  MOVLB  5
2608:  MOVWF  x03
260A:  CLRF   x04
260C:  CLRF   x05
260E:  MOVLW  01
2610:  MOVWF  x06
2612:  MOVLB  0
2614:  RCALL  2424
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
2616:  MOVFF  4CD,502
261A:  MOVLW  24
261C:  MOVLB  5
261E:  MOVWF  x03
2620:  MOVLW  08
2622:  MOVWF  x04
2624:  CLRF   x05
2626:  MOVLW  01
2628:  MOVWF  x06
262A:  MOVLB  0
262C:  RCALL  2424
262E:  MOVFF  4CC,502
2632:  MOVLW  2A
2634:  MOVLB  5
2636:  MOVWF  x03
2638:  MOVLW  08
263A:  MOVWF  x04
263C:  CLRF   x05
263E:  MOVLW  01
2640:  MOVWF  x06
2642:  MOVLB  0
2644:  RCALL  2424
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
2646:  MOVLW  04
2648:  MOVWF  FEA
264A:  MOVLW  E1
264C:  MOVWF  FE9
264E:  MOVFF  FF2,501
2652:  BCF    FF2.7
2654:  MOVLW  00
2656:  CALL   06BE
265A:  TBLRD*-
265C:  TBLRD*+
265E:  MOVF   FF5,W
2660:  MOVWF  FEE
2662:  IORLW  00
2664:  BNZ   265C
2666:  MOVLB  5
2668:  BTFSC  x01.7
266A:  BSF    FF2.7
266C:  MOVLW  04
266E:  MOVWF  x02
2670:  MOVLW  E1
2672:  MOVWF  x01
2674:  MOVLW  31
2676:  MOVWF  x03
2678:  MOVLW  08
267A:  MOVWF  x04
267C:  MOVLW  02
267E:  MOVWF  x05
2680:  MOVLW  01
2682:  MOVWF  x06
2684:  MOVLB  0
2686:  CALL   1630
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
268A:  MOVFF  4CB,502
268E:  MOVLW  36
2690:  MOVLB  5
2692:  MOVWF  x03
2694:  MOVLW  08
2696:  MOVWF  x04
2698:  CLRF   x05
269A:  MOVLW  01
269C:  MOVWF  x06
269E:  MOVLB  0
26A0:  RCALL  2424
26A2:  MOVFF  4CA,502
26A6:  MOVLW  3C
26A8:  MOVLB  5
26AA:  MOVWF  x03
26AC:  MOVLW  08
26AE:  MOVWF  x04
26B0:  CLRF   x05
26B2:  MOVLW  01
26B4:  MOVWF  x06
26B6:  MOVLB  0
26B8:  RCALL  2424
.................... } 
26BA:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
185E:  MOVLW  05
1860:  MOVLB  5
1862:  MOVWF  x00
1864:  MOVLW  07
1866:  MOVLB  4
1868:  MOVWF  xFF
186A:  MOVFF  503,510
186E:  MOVLW  1F
1870:  MOVLB  5
1872:  MOVWF  x11
1874:  MOVLB  0
1876:  BRA    177E
....................     
....................    if(sombreado==1) 
1878:  MOVLB  5
187A:  DECFSZ x06,W
187C:  BRA    18CC
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
187E:  MOVLW  12
1880:  ADDWF  x04,W
1882:  MOVWF  x10
1884:  MOVLW  18
1886:  ADDWF  x05,W
1888:  MOVWF  x11
188A:  MOVFF  504,513
188E:  MOVFF  505,514
1892:  MOVFF  510,515
1896:  MOVWF  x16
1898:  MOVLW  01
189A:  MOVWF  x17
189C:  MOVWF  x18
189E:  MOVLB  0
18A0:  RCALL  156E
18A2:  MOVLW  02
18A4:  MOVLB  5
18A6:  ADDWF  x04,W
18A8:  MOVWF  x10
18AA:  MOVLW  01
18AC:  ADDWF  x05,W
18AE:  MOVWF  x11
18B0:  MOVFF  510,512
18B4:  MOVWF  x13
18B6:  MOVLW  05
18B8:  MOVWF  x15
18BA:  MOVLW  07
18BC:  MOVWF  x14
18BE:  MOVLW  02
18C0:  MOVWF  x16
18C2:  CLRF   x17
18C4:  MOVLB  0
18C6:  RCALL  1278
....................    else    
18C8:  BRA    1916
18CA:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
18CC:  MOVLW  12
18CE:  ADDWF  x04,W
18D0:  MOVWF  x10
18D2:  MOVLW  18
18D4:  ADDWF  x05,W
18D6:  MOVWF  x11
18D8:  MOVFF  504,513
18DC:  MOVFF  505,514
18E0:  MOVFF  510,515
18E4:  MOVWF  x16
18E6:  CLRF   x17
18E8:  CLRF   x18
18EA:  MOVLB  0
18EC:  RCALL  156E
18EE:  MOVLW  02
18F0:  MOVLB  5
18F2:  ADDWF  x04,W
18F4:  MOVWF  x10
18F6:  MOVLW  01
18F8:  ADDWF  x05,W
18FA:  MOVWF  x11
18FC:  MOVFF  510,512
1900:  MOVWF  x13
1902:  MOVLW  05
1904:  MOVWF  x15
1906:  MOVLW  07
1908:  MOVWF  x14
190A:  MOVLW  02
190C:  MOVWF  x16
190E:  MOVLW  01
1910:  MOVWF  x17
1912:  MOVLB  0
1914:  RCALL  1278
....................  
.................... } 
1916:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
1FBE:  BSF    F93.0
1FC0:  MOVLW  11
1FC2:  MOVWF  00
1FC4:  DECFSZ 00,F
1FC6:  BRA    1FC4
1FC8:  BSF    F93.1
1FCA:  MOVLW  11
1FCC:  MOVWF  00
1FCE:  DECFSZ 00,F
1FD0:  BRA    1FCE
1FD2:  BCF    F8A.0
1FD4:  BCF    F93.0
1FD6:  MOVLW  11
1FD8:  MOVWF  00
1FDA:  DECFSZ 00,F
1FDC:  BRA    1FDA
1FDE:  BCF    F8A.1
1FE0:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FE2:  MOVFF  502,505
1FE6:  RCALL  1918
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
1FE8:  MOVFF  503,505
1FEC:  RCALL  1918
....................    i2c_write(dato);        // Dato a transmitir 
1FEE:  MOVFF  504,505
1FF2:  RCALL  1918
....................    i2c_stop();             // Fin comunicación 
1FF4:  BCF    F93.0
1FF6:  NOP   
1FF8:  BSF    F93.1
1FFA:  BTFSS  F81.1
1FFC:  BRA    1FFA
1FFE:  MOVLW  11
2000:  MOVWF  00
2002:  DECFSZ 00,F
2004:  BRA    2002
2006:  BRA    2008
2008:  NOP   
200A:  BSF    F93.0
200C:  MOVLW  11
200E:  MOVWF  00
2010:  DECFSZ 00,F
2012:  BRA    2010
....................  } 
2014:  GOTO   204A (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1ED8:  BSF    F93.0
1EDA:  MOVLW  11
1EDC:  MOVWF  00
1EDE:  DECFSZ 00,F
1EE0:  BRA    1EDE
1EE2:  BSF    F93.1
1EE4:  MOVLW  11
1EE6:  MOVWF  00
1EE8:  DECFSZ 00,F
1EEA:  BRA    1EE8
1EEC:  BCF    F8A.0
1EEE:  BCF    F93.0
1EF0:  MOVLW  11
1EF2:  MOVWF  00
1EF4:  DECFSZ 00,F
1EF6:  BRA    1EF4
1EF8:  BCF    F8A.1
1EFA:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1EFC:  MOVFF  501,505
1F00:  MOVLB  0
1F02:  RCALL  1918
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1F04:  MOVFF  502,505
1F08:  RCALL  1918
....................    i2c_start();            // Reinicio 
1F0A:  BSF    F93.0
1F0C:  MOVLW  11
1F0E:  MOVWF  00
1F10:  DECFSZ 00,F
1F12:  BRA    1F10
1F14:  BSF    F93.1
1F16:  MOVLW  11
1F18:  MOVWF  00
1F1A:  DECFSZ 00,F
1F1C:  BRA    1F1A
1F1E:  BTFSS  F81.1
1F20:  BRA    1F1E
1F22:  BCF    F8A.0
1F24:  BCF    F93.0
1F26:  MOVLW  11
1F28:  MOVWF  00
1F2A:  DECFSZ 00,F
1F2C:  BRA    1F2A
1F2E:  BCF    F8A.1
1F30:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1F32:  MOVLW  01
1F34:  MOVLB  5
1F36:  ADDWF  x01,W
1F38:  MOVWF  x03
1F3A:  MOVWF  x05
1F3C:  MOVLB  0
1F3E:  RCALL  1918
....................    dato=i2c_read(0);       // Lectura del dato 
1F40:  CLRF   00
1F42:  BRA    198E
1F44:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
1F48:  BCF    F93.0
1F4A:  NOP   
1F4C:  BSF    F93.1
1F4E:  BTFSS  F81.1
1F50:  BRA    1F4E
1F52:  MOVLW  11
1F54:  MOVWF  00
1F56:  DECFSZ 00,F
1F58:  BRA    1F56
1F5A:  BRA    1F5C
1F5C:  NOP   
1F5E:  BSF    F93.0
1F60:  MOVLW  11
1F62:  MOVWF  00
1F64:  DECFSZ 00,F
1F66:  BRA    1F64
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
1F86:  MOVFF  498,456
....................    SlaveA0Tx[1]=EVDesfogue; 
1F8A:  MOVFF  499,457
....................    SlaveA0Tx[2]=EVAgua; 
1F8E:  MOVFF  49A,458
....................    SlaveA0Tx[3]=EVTrampa; 
1F92:  MOVFF  49B,459
....................    SlaveA0Tx[4]=MotorPuerta; 
1F96:  MOVFF  49C,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
1F9A:  MOVFF  49D,45B
....................    SlaveA0Tx[6]=BombaVacio; 
1F9E:  MOVFF  49E,45C
....................    SlaveA0Tx[7]=BombaAgua; 
1FA2:  MOVFF  49F,45D
....................    SlaveA0Tx[8]=Control; 
1FA6:  MOVFF  4A0,45E
....................    SlaveA0Tx[9]=Setpoint; 
1FAA:  MOVFF  4A5,45F
....................    SlaveA0Tx[10]=20; 
1FAE:  MOVLW  14
1FB0:  MOVLB  4
1FB2:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
1FB4:  MOVFF  4B4,462
.................... } 
1FB8:  MOVLB  0
1FBA:  GOTO   201A (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1E08:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1E0C:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1E10:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1E14:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1E18:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1E1C:  MOVLB  5
1E1E:  CLRF   x02
1E20:  MOVFF  41B,501
1E24:  MOVLB  0
1E26:  RCALL  19FA
1E28:  MOVFF  03,4BD
1E2C:  MOVFF  02,4BC
1E30:  MOVFF  01,4BB
1E34:  MOVFF  00,4BA
....................    Alarma=txbuf[6]; 
1E38:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1E3C:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1E40:  MOVFF  41E,4AB
....................    Decimal=txbuf[9]; 
1E44:  MOVFF  41F,4A1
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1E48:  MOVLB  5
1E4A:  CLRF   x02
1E4C:  MOVFF  4A1,501
1E50:  MOVLB  0
1E52:  RCALL  19FA
1E54:  MOVFF  00,501
1E58:  MOVFF  01,502
1E5C:  MOVFF  02,503
1E60:  MOVFF  03,504
1E64:  MOVFF  03,508
1E68:  MOVFF  02,507
1E6C:  MOVFF  01,506
1E70:  MOVFF  00,505
1E74:  MOVLB  5
1E76:  CLRF   x0C
1E78:  CLRF   x0B
1E7A:  MOVLW  20
1E7C:  MOVWF  x0A
1E7E:  MOVLW  82
1E80:  MOVWF  x09
1E82:  MOVLB  0
1E84:  BRA    1A30
1E86:  BCF    FD8.1
1E88:  MOVFF  4BD,508
1E8C:  MOVFF  4BC,507
1E90:  MOVFF  4BB,506
1E94:  MOVFF  4BA,505
1E98:  MOVFF  03,50C
1E9C:  MOVFF  02,50B
1EA0:  MOVFF  01,50A
1EA4:  MOVFF  00,509
1EA8:  RCALL  1B90
1EAA:  MOVFF  03,4BD
1EAE:  MOVFF  02,4BC
1EB2:  MOVFF  01,4BB
1EB6:  MOVFF  00,4BA
.................... } 
1EBA:  GOTO   1F84 (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
2018:  BRA    1F86
....................    for(i=0;i<13;i++) 
201A:  MOVLB  4
201C:  CLRF   xA4
201E:  MOVF   xA4,W
2020:  SUBLW  0C
2022:  BNC   2050
....................    { 
....................       direccion=0xA0; 
2024:  MOVLW  A0
2026:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
2028:  CLRF   03
202A:  MOVF   xA4,W
202C:  ADDLW  56
202E:  MOVWF  FE9
2030:  MOVLW  04
2032:  ADDWFC 03,W
2034:  MOVWF  FEA
2036:  MOVFF  FEF,501
203A:  MOVFF  487,502
203E:  MOVFF  4A4,503
2042:  MOVFF  501,504
2046:  MOVLB  0
2048:  BRA    1FBE
....................    }  
204A:  MOVLB  4
204C:  INCF   xA4,F
204E:  BRA    201E
.................... } 
2050:  MOVLB  0
2052:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
1EBE:  MOVLB  4
1EC0:  CLRF   xA4
1EC2:  MOVF   xA4,W
1EC4:  SUBLW  09
1EC6:  BNC   1F80
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1EC8:  MOVLW  A0
1ECA:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1ECC:  MOVFF  4A4,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1ED0:  MOVFF  487,501
1ED4:  MOVFF  488,502
....................       txbuf[i]=(int8)dato; 
*
1F68:  CLRF   03
1F6A:  MOVLB  4
1F6C:  MOVF   xA4,W
1F6E:  ADDLW  16
1F70:  MOVWF  FE9
1F72:  MOVLW  04
1F74:  ADDWFC 03,W
1F76:  MOVWF  FEA
1F78:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
1F7C:  INCF   xA4,F
1F7E:  BRA    1EC2
....................    Lee_Vector(); 
1F80:  MOVLB  0
1F82:  BRA    1E08
.................... } 
1F84:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2B88:  CLRF   FF8
2B8A:  BCF    FD0.7
2B8C:  BSF    07.7
2B8E:  CLRF   FEA
2B90:  CLRF   FE9
2B92:  MOVLB  4
2B94:  CLRF   x86
2B96:  CLRF   x87
2B98:  CLRF   x88
2B9A:  CLRF   x8D
2B9C:  MOVLW  01
2B9E:  MOVWF  x8E
2BA0:  CLRF   x8F
2BA2:  CLRF   x90
2BA4:  CLRF   x91
2BA6:  CLRF   x92
2BA8:  CLRF   x93
2BAA:  CLRF   x94
2BAC:  BCF    x95.0
2BAE:  BCF    x95.1
2BB0:  BCF    x95.2
2BB2:  BCF    x95.3
2BB4:  BSF    x95.4
2BB6:  BCF    x95.5
2BB8:  BCF    x95.6
2BBA:  BCF    x95.7
2BBC:  BCF    x96.0
2BBE:  BCF    x96.1
2BC0:  BCF    x96.2
2BC2:  BCF    x96.3
2BC4:  BCF    x96.4
2BC6:  BCF    x96.5
2BC8:  BCF    x96.6
2BCA:  BCF    x96.7
2BCC:  BCF    x97.0
2BCE:  BCF    x97.1
2BD0:  BCF    x97.2
2BD2:  BCF    x97.3
2BD4:  BCF    x97.4
2BD6:  CLRF   x98
2BD8:  CLRF   x99
2BDA:  CLRF   x9A
2BDC:  CLRF   x9B
2BDE:  CLRF   x9C
2BE0:  CLRF   x9D
2BE2:  CLRF   x9E
2BE4:  CLRF   x9F
2BE6:  CLRF   xA0
2BE8:  CLRF   xA1
2BEA:  CLRF   xA2
2BEC:  MOVWF  xA3
2BEE:  CLRF   xA4
2BF0:  CLRF   xA5
2BF2:  CLRF   xA6
2BF4:  MOVWF  xA7
2BF6:  CLRF   xA8
2BF8:  CLRF   xA9
2BFA:  CLRF   xAA
2BFC:  CLRF   xAB
2BFE:  CLRF   xAD
2C00:  CLRF   xAC
2C02:  CLRF   xAF
2C04:  CLRF   xAE
2C06:  CLRF   xB1
2C08:  CLRF   xB0
2C0A:  CLRF   xB3
2C0C:  MOVLW  0F
2C0E:  MOVWF  xB2
2C10:  CLRF   xB5
2C12:  CLRF   xB4
2C14:  CLRF   xB7
2C16:  CLRF   xB6
2C18:  CLRF   xB9
2C1A:  CLRF   xB8
2C1C:  CLRF   xBD
2C1E:  CLRF   xBC
2C20:  CLRF   xBB
2C22:  CLRF   xBA
2C24:  MOVF   FC1,W
2C26:  ANDLW  C0
2C28:  IORLW  0F
2C2A:  MOVWF  FC1
2C2C:  MOVLW  07
2C2E:  MOVWF  FB4
2C30:  MOVLW  6B
2C32:  MOVWF  x89
2C34:  MOVLW  50
2C36:  MOVWF  x8A
2C38:  MOVLW  61
2C3A:  MOVWF  x8B
2C3C:  CLRF   x8C
2C3E:  CLRF   xBE
2C40:  CLRF   xBF
2C42:  CLRF   xC0
2C44:  CLRF   xC1
2C46:  CLRF   xC2
2C48:  CLRF   xC3
2C4A:  CLRF   xC4
2C4C:  CLRF   xC5
2C4E:  CLRF   xC6
2C50:  CLRF   xC7
2C52:  CLRF   xC8
2C54:  CLRF   xC9
2C56:  CLRF   xCA
2C58:  CLRF   xCB
2C5A:  CLRF   xCC
2C5C:  CLRF   xCD
2C5E:  CLRF   xCE
2C60:  CLRF   xCF
2C62:  CLRF   xD0
2C64:  CLRF   xD1
2C66:  CLRF   xD2
2C68:  CLRF   xD3
2C6A:  CLRF   xD4
2C6C:  CLRF   xD5
2C6E:  CLRF   xFF
2C70:  MOVLB  5
2C72:  CLRF   x00
....................    Display_on; 
2C74:  BSF    F8D.0
2C76:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2C78:  MOVLB  4
2C7A:  CLRF   x88
2C7C:  MOVF   x88,W
2C7E:  SUBLW  0F
2C80:  BNC   2CB6
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2C82:  CLRF   03
2C84:  MOVF   x88,W
2C86:  ADDLW  56
2C88:  MOVWF  FE9
2C8A:  MOVLW  04
2C8C:  ADDWFC 03,W
2C8E:  MOVWF  FEA
2C90:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2C92:  CLRF   03
2C94:  MOVF   x88,W
2C96:  ADDLW  66
2C98:  MOVWF  FE9
2C9A:  MOVLW  04
2C9C:  ADDWFC 03,W
2C9E:  MOVWF  FEA
2CA0:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2CA2:  CLRF   03
2CA4:  MOVF   x88,W
2CA6:  ADDLW  76
2CA8:  MOVWF  FE9
2CAA:  MOVLW  04
2CAC:  ADDWFC 03,W
2CAE:  MOVWF  FEA
2CB0:  CLRF   FEF
....................    } 
2CB2:  INCF   x88,F
2CB4:  BRA    2C7C
....................    set_tris_a(0XFF); 
2CB6:  MOVLW  FF
2CB8:  MOVWF  F92
....................    setup_adc(OFF); 
2CBA:  BCF    FC2.0
....................    input_a(); 
2CBC:  MOVWF  F92
....................    UP; 
2CBE:  BSF    F92.0
....................    delay_ms(1000);    
2CC0:  MOVLW  04
2CC2:  MOVLB  5
2CC4:  MOVWF  x01
2CC6:  MOVLW  FA
2CC8:  MOVWF  x02
2CCA:  MOVLB  0
2CCC:  CALL   0F98
2CD0:  MOVLB  5
2CD2:  DECFSZ x01,F
2CD4:  BRA    2CC6
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2CD6:  MOVLW  85
2CD8:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2CDA:  BSF    F9D.0
....................    enable_interrupts(global); 
2CDC:  MOVLW  C0
2CDE:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2CE0:  MOVFF  FF2,501
2CE4:  BCF    FF2.7
2CE6:  CLRF   FA9
2CE8:  BCF    FA6.6
2CEA:  BCF    FA6.7
2CEC:  BSF    FA6.0
2CEE:  MOVF   FA8,W
2CF0:  BTFSC  x01.7
2CF2:  BSF    FF2.7
2CF4:  MOVLB  4
2CF6:  MOVWF  xC2
2CF8:  MOVFF  FF2,501
2CFC:  BCF    FF2.7
2CFE:  MOVLW  01
2D00:  MOVWF  FA9
2D02:  BCF    FA6.6
2D04:  BCF    FA6.7
2D06:  BSF    FA6.0
2D08:  MOVF   FA8,W
2D0A:  MOVLB  5
2D0C:  BTFSC  x01.7
2D0E:  BSF    FF2.7
2D10:  MOVLB  4
2D12:  MOVWF  xC3
2D14:  MOVFF  FF2,501
2D18:  BCF    FF2.7
2D1A:  MOVLW  02
2D1C:  MOVWF  FA9
2D1E:  BCF    FA6.6
2D20:  BCF    FA6.7
2D22:  BSF    FA6.0
2D24:  MOVF   FA8,W
2D26:  MOVLB  5
2D28:  BTFSC  x01.7
2D2A:  BSF    FF2.7
2D2C:  MOVLB  4
2D2E:  MOVWF  xC4
2D30:  MOVFF  FF2,501
2D34:  BCF    FF2.7
2D36:  MOVLW  03
2D38:  MOVWF  FA9
2D3A:  BCF    FA6.6
2D3C:  BCF    FA6.7
2D3E:  BSF    FA6.0
2D40:  MOVF   FA8,W
2D42:  MOVLB  5
2D44:  BTFSC  x01.7
2D46:  BSF    FF2.7
2D48:  MOVLB  4
2D4A:  MOVWF  xC5
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2D4C:  MOVFF  FF2,501
2D50:  BCF    FF2.7
2D52:  MOVLW  04
2D54:  MOVWF  FA9
2D56:  BCF    FA6.6
2D58:  BCF    FA6.7
2D5A:  BSF    FA6.0
2D5C:  MOVF   FA8,W
2D5E:  MOVLB  5
2D60:  BTFSC  x01.7
2D62:  BSF    FF2.7
2D64:  MOVLB  4
2D66:  MOVWF  xCA
2D68:  MOVFF  FF2,501
2D6C:  BCF    FF2.7
2D6E:  MOVLW  05
2D70:  MOVWF  FA9
2D72:  BCF    FA6.6
2D74:  BCF    FA6.7
2D76:  BSF    FA6.0
2D78:  MOVF   FA8,W
2D7A:  MOVLB  5
2D7C:  BTFSC  x01.7
2D7E:  BSF    FF2.7
2D80:  MOVLB  4
2D82:  MOVWF  xCB
2D84:  MOVFF  FF2,501
2D88:  BCF    FF2.7
2D8A:  MOVLW  06
2D8C:  MOVWF  FA9
2D8E:  BCF    FA6.6
2D90:  BCF    FA6.7
2D92:  BSF    FA6.0
2D94:  MOVF   FA8,W
2D96:  MOVLB  5
2D98:  BTFSC  x01.7
2D9A:  BSF    FF2.7
2D9C:  MOVLB  4
2D9E:  MOVWF  xCC
2DA0:  MOVFF  FF2,501
2DA4:  BCF    FF2.7
2DA6:  MOVLW  07
2DA8:  MOVWF  FA9
2DAA:  BCF    FA6.6
2DAC:  BCF    FA6.7
2DAE:  BSF    FA6.0
2DB0:  MOVF   FA8,W
2DB2:  MOVLB  5
2DB4:  BTFSC  x01.7
2DB6:  BSF    FF2.7
2DB8:  MOVLB  4
2DBA:  MOVWF  xCD
2DBC:  MOVFF  FF2,501
2DC0:  BCF    FF2.7
2DC2:  MOVLW  08
2DC4:  MOVWF  FA9
2DC6:  BCF    FA6.6
2DC8:  BCF    FA6.7
2DCA:  BSF    FA6.0
2DCC:  MOVF   FA8,W
2DCE:  MOVLB  5
2DD0:  BTFSC  x01.7
2DD2:  BSF    FF2.7
2DD4:  MOVLB  4
2DD6:  MOVWF  xA5
....................    Nivel=read_eeprom(9); 
2DD8:  MOVFF  FF2,501
2DDC:  BCF    FF2.7
2DDE:  MOVLW  09
2DE0:  MOVWF  FA9
2DE2:  BCF    FA6.6
2DE4:  BCF    FA6.7
2DE6:  BSF    FA6.0
2DE8:  MOVF   FA8,W
2DEA:  MOVLB  5
2DEC:  BTFSC  x01.7
2DEE:  BSF    FF2.7
2DF0:  MOVLB  4
2DF2:  CLRF   xB5
2DF4:  MOVWF  xB4
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2DF6:  MOVFF  FF2,501
2DFA:  BCF    FF2.7
2DFC:  MOVLW  0A
2DFE:  MOVWF  FA9
2E00:  BCF    FA6.6
2E02:  BCF    FA6.7
2E04:  BSF    FA6.0
2E06:  MOVF   FA8,W
2E08:  MOVLB  5
2E0A:  BTFSC  x01.7
2E0C:  BSF    FF2.7
2E0E:  MOVLB  4
2E10:  MOVWF  xD2
2E12:  MOVFF  FF2,501
2E16:  BCF    FF2.7
2E18:  MOVLW  0B
2E1A:  MOVWF  FA9
2E1C:  BCF    FA6.6
2E1E:  BCF    FA6.7
2E20:  BSF    FA6.0
2E22:  MOVF   FA8,W
2E24:  MOVLB  5
2E26:  BTFSC  x01.7
2E28:  BSF    FF2.7
2E2A:  MOVLB  4
2E2C:  MOVWF  xD3
2E2E:  MOVFF  FF2,501
2E32:  BCF    FF2.7
2E34:  MOVLW  0C
2E36:  MOVWF  FA9
2E38:  BCF    FA6.6
2E3A:  BCF    FA6.7
2E3C:  BSF    FA6.0
2E3E:  MOVF   FA8,W
2E40:  MOVLB  5
2E42:  BTFSC  x01.7
2E44:  BSF    FF2.7
2E46:  MOVLB  4
2E48:  MOVWF  xD4
2E4A:  MOVFF  FF2,501
2E4E:  BCF    FF2.7
2E50:  MOVLW  0D
2E52:  MOVWF  FA9
2E54:  BCF    FA6.6
2E56:  BCF    FA6.7
2E58:  BSF    FA6.0
2E5A:  MOVF   FA8,W
2E5C:  MOVLB  5
2E5E:  BTFSC  x01.7
2E60:  BSF    FF2.7
2E62:  MOVLB  4
2E64:  MOVWF  xD5
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2E66:  MOVLW  01
2E68:  MOVLB  5
2E6A:  MOVWF  x01
2E6C:  MOVLB  0
2E6E:  CALL   1114
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2E72:  MOVLB  5
2E74:  CLRF   x02
2E76:  MOVLB  0
2E78:  CALL   1002
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2E7C:  MOVLW  04
2E7E:  MOVWF  FEA
2E80:  MOVLW  E1
2E82:  MOVWF  FE9
2E84:  MOVFF  FF2,501
2E88:  BCF    FF2.7
2E8A:  MOVLW  00
2E8C:  CALL   06DA
2E90:  TBLRD*-
2E92:  TBLRD*+
2E94:  MOVF   FF5,W
2E96:  MOVWF  FEE
2E98:  IORLW  00
2E9A:  BNZ   2E92
2E9C:  MOVLB  5
2E9E:  BTFSC  x01.7
2EA0:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2EA2:  MOVLW  04
2EA4:  MOVWF  x02
2EA6:  MOVLW  E1
2EA8:  MOVWF  x01
2EAA:  CLRF   x03
2EAC:  CLRF   x04
2EAE:  CLRF   x05
2EB0:  MOVLW  02
2EB2:  MOVWF  x06
2EB4:  MOVLB  0
2EB6:  CALL   1630
....................    strcpy(Menus.Letra,"Autoclave Horizontal"); 
2EBA:  MOVLW  04
2EBC:  MOVWF  FEA
2EBE:  MOVLW  E1
2EC0:  MOVWF  FE9
2EC2:  MOVFF  FF2,501
2EC6:  BCF    FF2.7
2EC8:  MOVLW  00
2ECA:  CALL   0700
2ECE:  TBLRD*-
2ED0:  TBLRD*+
2ED2:  MOVF   FF5,W
2ED4:  MOVWF  FEE
2ED6:  IORLW  00
2ED8:  BNZ   2ED0
2EDA:  MOVLB  5
2EDC:  BTFSC  x01.7
2EDE:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
2EE0:  MOVLW  04
2EE2:  MOVWF  x02
2EE4:  MOVLW  E1
2EE6:  MOVWF  x01
2EE8:  CLRF   x03
2EEA:  MOVLW  14
2EEC:  MOVWF  x04
2EEE:  CLRF   x05
2EF0:  MOVLW  01
2EF2:  MOVWF  x06
2EF4:  MOVLB  0
2EF6:  CALL   1630
....................    strcpy(Menus.Letra," 40 Litros  "); 
2EFA:  MOVLW  04
2EFC:  MOVWF  FEA
2EFE:  MOVLW  E1
2F00:  MOVWF  FE9
2F02:  MOVFF  FF2,501
2F06:  BCF    FF2.7
2F08:  MOVLW  00
2F0A:  CALL   0730
2F0E:  TBLRD*-
2F10:  TBLRD*+
2F12:  MOVF   FF5,W
2F14:  MOVWF  FEE
2F16:  IORLW  00
2F18:  BNZ   2F10
2F1A:  MOVLB  5
2F1C:  BTFSC  x01.7
2F1E:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
2F20:  MOVLW  04
2F22:  MOVWF  x02
2F24:  MOVLW  E1
2F26:  MOVWF  x01
2F28:  CLRF   x03
2F2A:  MOVLW  23
2F2C:  MOVWF  x04
2F2E:  CLRF   x05
2F30:  MOVLW  02
2F32:  MOVWF  x06
2F34:  MOVLB  0
2F36:  CALL   1630
....................    delay_ms(1000); 
2F3A:  MOVLW  04
2F3C:  MOVLB  5
2F3E:  MOVWF  x01
2F40:  MOVLW  FA
2F42:  MOVWF  x02
2F44:  MOVLB  0
2F46:  CALL   0F98
2F4A:  MOVLB  5
2F4C:  DECFSZ x01,F
2F4E:  BRA    2F40
....................    delay_ms(1000); 
2F50:  MOVLW  04
2F52:  MOVWF  x01
2F54:  MOVLW  FA
2F56:  MOVWF  x02
2F58:  MOVLB  0
2F5A:  CALL   0F98
2F5E:  MOVLB  5
2F60:  DECFSZ x01,F
2F62:  BRA    2F54
....................    delay_ms(1000); 
2F64:  MOVLW  04
2F66:  MOVWF  x01
2F68:  MOVLW  FA
2F6A:  MOVWF  x02
2F6C:  MOVLB  0
2F6E:  CALL   0F98
2F72:  MOVLB  5
2F74:  DECFSZ x01,F
2F76:  BRA    2F68
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2F78:  CLRF   x02
2F7A:  MOVLB  0
2F7C:  CALL   1002
....................    displayContrasena(Contrasena[0],20,30,1); 
2F80:  MOVFF  4CE,503
2F84:  MOVLW  14
2F86:  MOVLB  5
2F88:  MOVWF  x04
2F8A:  MOVLW  1E
2F8C:  MOVWF  x05
2F8E:  MOVLW  01
2F90:  MOVWF  x06
2F92:  MOVLB  0
2F94:  CALL   185E
....................    displayContrasena(Contrasena[1],40,30,0); 
2F98:  MOVFF  4CF,503
2F9C:  MOVLW  28
2F9E:  MOVLB  5
2FA0:  MOVWF  x04
2FA2:  MOVLW  1E
2FA4:  MOVWF  x05
2FA6:  CLRF   x06
2FA8:  MOVLB  0
2FAA:  CALL   185E
....................    displayContrasena(Contrasena[2],60,30,0); 
2FAE:  MOVFF  4D0,503
2FB2:  MOVLW  3C
2FB4:  MOVLB  5
2FB6:  MOVWF  x04
2FB8:  MOVLW  1E
2FBA:  MOVWF  x05
2FBC:  CLRF   x06
2FBE:  MOVLB  0
2FC0:  CALL   185E
....................    displayContrasena(Contrasena[3],80,30,0); 
2FC4:  MOVFF  4D1,503
2FC8:  MOVLW  50
2FCA:  MOVLB  5
2FCC:  MOVWF  x04
2FCE:  MOVLW  1E
2FD0:  MOVWF  x05
2FD2:  CLRF   x06
2FD4:  MOVLB  0
2FD6:  CALL   185E
....................    set_tris_a(0XFF); 
2FDA:  MOVLW  FF
2FDC:  MOVWF  F92
....................    setup_adc(OFF); 
2FDE:  BCF    FC2.0
....................    setup_adc_ports(NO_ANALOGS); 
2FE0:  MOVF   FC1,W
2FE2:  ANDLW  C0
2FE4:  IORLW  0F
2FE6:  MOVWF  FC1
....................    input_a(); 
2FE8:  MOVLW  FF
2FEA:  MOVWF  F92
....................    UP; 
2FEC:  BSF    F92.0
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
2FEE:  CALL   1EBE
....................        
....................       Envio_Esclavos(); 
2FF2:  CALL   2018
....................       glcd_update(); 
2FF6:  CALL   105C
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
2FFA:  BSF    F92.0
2FFC:  BTFSC  F80.0
2FFE:  BRA    3012
3000:  BSF    F92.1
3002:  BTFSC  F80.1
3004:  BRA    3012
3006:  BSF    F92.2
3008:  BTFSC  F80.2
300A:  BRA    3012
300C:  BSF    F92.3
300E:  BTFSS  F80.3
3010:  BRA    301A
....................       { 
....................          tinicio=0; 
3012:  MOVLB  4
3014:  CLRF   xB9
3016:  CLRF   xB8
3018:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
301A:  MOVLB  4
301C:  MOVF   xB9,W
301E:  SUBLW  37
3020:  BC    303E
3022:  XORLW  FF
3024:  BNZ   302C
3026:  MOVF   xB8,W
3028:  SUBLW  3F
302A:  BC    303E
....................          glcd_fillscreen(OFF); 
302C:  MOVLB  5
302E:  CLRF   x02
3030:  MOVLB  0
3032:  CALL   1002
....................          Display_off; 
3036:  BCF    F8D.0
3038:  BCF    F96.0
....................       } 
303A:  BRA    301A
303C:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
303E:  MOVF   xA2,F
3040:  BTFSS  FD8.2
3042:  BRA    35D8
....................        
....................       strcpy(Menus.Letra,"Clave"); 
3044:  MOVLW  04
3046:  MOVWF  FEA
3048:  MOVLW  E1
304A:  MOVWF  FE9
304C:  MOVFF  FF2,501
3050:  BCF    FF2.7
3052:  MOVLW  00
3054:  MOVLB  0
3056:  CALL   0758
305A:  TBLRD*-
305C:  TBLRD*+
305E:  MOVF   FF5,W
3060:  MOVWF  FEE
3062:  IORLW  00
3064:  BNZ   305C
3066:  MOVLB  5
3068:  BTFSC  x01.7
306A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
306C:  MOVLW  04
306E:  MOVWF  x02
3070:  MOVLW  E1
3072:  MOVWF  x01
3074:  MOVLW  1E
3076:  MOVWF  x03
3078:  CLRF   x04
307A:  MOVLW  01
307C:  MOVWF  x05
307E:  MOVLW  02
3080:  MOVWF  x06
3082:  MOVLB  0
3084:  CALL   1630
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
3088:  BSF    F92.0
308A:  BTFSS  F80.0
308C:  BRA    3164
....................       { 
....................          if(Flanco == 0) 
308E:  MOVLB  4
3090:  BTFSC  x95.0
3092:  BRA    3162
....................          { 
....................             Flanco = 1;delay_ms(30); 
3094:  BSF    x95.0
3096:  MOVLW  1E
3098:  MOVLB  5
309A:  MOVWF  x02
309C:  MOVLB  0
309E:  CALL   0F98
....................             for(i=1;i<=4;i++) 
30A2:  MOVLW  01
30A4:  MOVLB  4
30A6:  MOVWF  xA4
30A8:  MOVF   xA4,W
30AA:  SUBLW  04
30AC:  BNC   3162
....................             { 
....................                if(unidad==i) 
30AE:  MOVF   xA4,W
30B0:  SUBWF  xA3,W
30B2:  BNZ   312A
....................                { 
....................                   Contrasena[i-1]++; 
30B4:  MOVLW  01
30B6:  SUBWF  xA4,W
30B8:  CLRF   03
30BA:  ADDLW  CE
30BC:  MOVWF  FE9
30BE:  MOVLW  04
30C0:  ADDWFC 03,W
30C2:  MOVWF  FEA
30C4:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
30C6:  MOVLW  01
30C8:  SUBWF  xA4,W
30CA:  CLRF   03
30CC:  ADDLW  CE
30CE:  MOVWF  FE9
30D0:  MOVLW  04
30D2:  ADDWFC 03,W
30D4:  MOVWF  FEA
30D6:  BTFSC  FEF.7
30D8:  BRA    30F2
30DA:  MOVF   FEF,W
30DC:  SUBLW  09
30DE:  BC    30F2
....................                   { 
....................                      Contrasena[i-1]=0; 
30E0:  MOVLW  01
30E2:  SUBWF  xA4,W
30E4:  CLRF   03
30E6:  ADDLW  CE
30E8:  MOVWF  FE9
30EA:  MOVLW  04
30EC:  ADDWFC 03,W
30EE:  MOVWF  FEA
30F0:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
30F2:  MOVLW  01
30F4:  SUBWF  xA4,W
30F6:  CLRF   03
30F8:  ADDLW  CE
30FA:  MOVWF  FE9
30FC:  MOVLW  04
30FE:  ADDWFC 03,W
3100:  MOVWF  FEA
3102:  MOVFF  FEF,501
3106:  MOVF   xA4,W
3108:  MULLW  14
310A:  MOVFF  FF3,502
310E:  MOVLB  5
3110:  MOVFF  501,503
3114:  MOVFF  502,504
3118:  MOVLW  1E
311A:  MOVWF  x05
311C:  MOVLW  01
311E:  MOVWF  x06
3120:  MOVLB  0
3122:  CALL   185E
....................                } 
....................                else 
3126:  BRA    315C
3128:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
312A:  MOVLW  01
312C:  SUBWF  xA4,W
312E:  CLRF   03
3130:  ADDLW  CE
3132:  MOVWF  FE9
3134:  MOVLW  04
3136:  ADDWFC 03,W
3138:  MOVWF  FEA
313A:  MOVFF  FEF,501
313E:  MOVF   xA4,W
3140:  MULLW  14
3142:  MOVFF  FF3,502
3146:  MOVLB  5
3148:  MOVFF  501,503
314C:  MOVFF  502,504
3150:  MOVLW  1E
3152:  MOVWF  x05
3154:  CLRF   x06
3156:  MOVLB  0
3158:  CALL   185E
....................                } 
....................             } 
315C:  MOVLB  4
315E:  INCF   xA4,F
3160:  BRA    30A8
....................          } 
....................       } 
....................          else 
3162:  BRA    3168
....................             {Flanco = 0;} 
3164:  MOVLB  4
3166:  BCF    x95.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3168:  BSF    F92.1
316A:  BTFSS  F80.1
316C:  BRA    3240
....................       { 
....................          if(Flanco2 == 0) 
316E:  BTFSC  x95.2
3170:  BRA    323E
....................             {Flanco2 = 1;delay_ms(30); 
3172:  BSF    x95.2
3174:  MOVLW  1E
3176:  MOVLB  5
3178:  MOVWF  x02
317A:  MOVLB  0
317C:  CALL   0F98
....................                for(i=1;i<=4;i++) 
3180:  MOVLW  01
3182:  MOVLB  4
3184:  MOVWF  xA4
3186:  MOVF   xA4,W
3188:  SUBLW  04
318A:  BNC   323E
....................                { 
....................                   if(unidad==i) 
318C:  MOVF   xA4,W
318E:  SUBWF  xA3,W
3190:  BNZ   3206
....................                   {Contrasena[i-1]--;  
3192:  MOVLW  01
3194:  SUBWF  xA4,W
3196:  CLRF   03
3198:  ADDLW  CE
319A:  MOVWF  FE9
319C:  MOVLW  04
319E:  ADDWFC 03,W
31A0:  MOVWF  FEA
31A2:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
31A4:  MOVLW  01
31A6:  SUBWF  xA4,W
31A8:  CLRF   03
31AA:  ADDLW  CE
31AC:  MOVWF  FE9
31AE:  MOVLW  04
31B0:  ADDWFC 03,W
31B2:  MOVWF  FEA
31B4:  BTFSC  FEF.7
31B6:  BRA    31BA
31B8:  BRA    31CE
....................                         {Contrasena[i-1]=9;} 
31BA:  MOVLW  01
31BC:  SUBWF  xA4,W
31BE:  CLRF   03
31C0:  ADDLW  CE
31C2:  MOVWF  FE9
31C4:  MOVLW  04
31C6:  ADDWFC 03,W
31C8:  MOVWF  FEA
31CA:  MOVLW  09
31CC:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
31CE:  MOVLW  01
31D0:  SUBWF  xA4,W
31D2:  CLRF   03
31D4:  ADDLW  CE
31D6:  MOVWF  FE9
31D8:  MOVLW  04
31DA:  ADDWFC 03,W
31DC:  MOVWF  FEA
31DE:  MOVFF  FEF,501
31E2:  MOVF   xA4,W
31E4:  MULLW  14
31E6:  MOVFF  FF3,502
31EA:  MOVLB  5
31EC:  MOVFF  501,503
31F0:  MOVFF  502,504
31F4:  MOVLW  1E
31F6:  MOVWF  x05
31F8:  MOVLW  01
31FA:  MOVWF  x06
31FC:  MOVLB  0
31FE:  CALL   185E
....................                   else 
3202:  BRA    3238
3204:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3206:  MOVLW  01
3208:  SUBWF  xA4,W
320A:  CLRF   03
320C:  ADDLW  CE
320E:  MOVWF  FE9
3210:  MOVLW  04
3212:  ADDWFC 03,W
3214:  MOVWF  FEA
3216:  MOVFF  FEF,501
321A:  MOVF   xA4,W
321C:  MULLW  14
321E:  MOVFF  FF3,502
3222:  MOVLB  5
3224:  MOVFF  501,503
3228:  MOVFF  502,504
322C:  MOVLW  1E
322E:  MOVWF  x05
3230:  CLRF   x06
3232:  MOVLB  0
3234:  CALL   185E
....................                }       
3238:  MOVLB  4
323A:  INCF   xA4,F
323C:  BRA    3186
....................             }      
....................       } 
....................          else 
323E:  BRA    3242
....................             {Flanco2 = 0;}   
3240:  BCF    x95.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3242:  BSF    F92.2
3244:  BTFSS  F80.2
3246:  BRA    32E0
....................       { 
....................          if(Flanco1 == 0) 
3248:  BTFSC  x95.1
324A:  BRA    32DE
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
324C:  BSF    x95.1
324E:  MOVLW  1E
3250:  MOVLB  5
3252:  MOVWF  x02
3254:  MOVLB  0
3256:  CALL   0F98
325A:  MOVLB  4
325C:  INCF   xA3,F
....................                for(i=1;i<=4;i++) 
325E:  MOVLW  01
3260:  MOVWF  xA4
3262:  MOVF   xA4,W
3264:  SUBLW  04
3266:  BNC   32DE
....................                { 
....................                   if(unidad==i) 
3268:  MOVF   xA4,W
326A:  SUBWF  xA3,W
326C:  BNZ   32A6
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
326E:  MOVLW  01
3270:  SUBWF  xA4,W
3272:  CLRF   03
3274:  ADDLW  CE
3276:  MOVWF  FE9
3278:  MOVLW  04
327A:  ADDWFC 03,W
327C:  MOVWF  FEA
327E:  MOVFF  FEF,501
3282:  MOVF   xA4,W
3284:  MULLW  14
3286:  MOVFF  FF3,502
328A:  MOVLB  5
328C:  MOVFF  501,503
3290:  MOVFF  502,504
3294:  MOVLW  1E
3296:  MOVWF  x05
3298:  MOVLW  01
329A:  MOVWF  x06
329C:  MOVLB  0
329E:  CALL   185E
....................                   else 
32A2:  BRA    32D8
32A4:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
32A6:  MOVLW  01
32A8:  SUBWF  xA4,W
32AA:  CLRF   03
32AC:  ADDLW  CE
32AE:  MOVWF  FE9
32B0:  MOVLW  04
32B2:  ADDWFC 03,W
32B4:  MOVWF  FEA
32B6:  MOVFF  FEF,501
32BA:  MOVF   xA4,W
32BC:  MULLW  14
32BE:  MOVFF  FF3,502
32C2:  MOVLB  5
32C4:  MOVFF  501,503
32C8:  MOVFF  502,504
32CC:  MOVLW  1E
32CE:  MOVWF  x05
32D0:  CLRF   x06
32D2:  MOVLB  0
32D4:  CALL   185E
....................                } 
32D8:  MOVLB  4
32DA:  INCF   xA4,F
32DC:  BRA    3262
....................             } 
....................       } 
....................          else 
32DE:  BRA    32E2
....................             {Flanco1 = 0;}   
32E0:  BCF    x95.1
....................      
....................       if(unidad>4) 
32E2:  MOVF   xA3,W
32E4:  SUBLW  04
32E6:  BTFSC  FD8.0
32E8:  BRA    35D8
....................       {glcd_fillScreen(OFF);unidad=4; 
32EA:  MOVLB  5
32EC:  CLRF   x02
32EE:  MOVLB  0
32F0:  CALL   1002
32F4:  MOVLW  04
32F6:  MOVLB  4
32F8:  MOVWF  xA3
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
32FA:  MOVF   xCE,W
32FC:  SUBLW  03
32FE:  BNZ   33E6
3300:  MOVF   xCF,W
3302:  SUBLW  08
3304:  BNZ   33E6
3306:  MOVF   xD0,W
3308:  SUBLW  09
330A:  BNZ   33E6
330C:  MOVF   xD1,W
330E:  SUBLW  02
3310:  BNZ   33E6
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3312:  MOVLW  0A
3314:  MOVWF  FA9
3316:  CLRF   FA8
3318:  BCF    FA6.6
331A:  BCF    FA6.7
331C:  BSF    FA6.2
331E:  MOVF   FF2,W
3320:  MOVWF  00
3322:  BCF    FF2.7
3324:  MOVLB  F
3326:  MOVLW  55
3328:  MOVWF  FA7
332A:  MOVLW  AA
332C:  MOVWF  FA7
332E:  BSF    FA6.1
3330:  BTFSC  FA6.1
3332:  BRA    3330
3334:  BCF    FA6.2
3336:  MOVF   00,W
3338:  IORWF  FF2,F
333A:  MOVLW  14
333C:  MOVLB  5
333E:  MOVWF  x02
3340:  MOVLB  0
3342:  CALL   0F98
3346:  MOVLW  0B
3348:  MOVWF  FA9
334A:  CLRF   FA8
334C:  BCF    FA6.6
334E:  BCF    FA6.7
3350:  BSF    FA6.2
3352:  MOVF   FF2,W
3354:  MOVWF  00
3356:  BCF    FF2.7
3358:  MOVLB  F
335A:  MOVLW  55
335C:  MOVWF  FA7
335E:  MOVLW  AA
3360:  MOVWF  FA7
3362:  BSF    FA6.1
3364:  BTFSC  FA6.1
3366:  BRA    3364
3368:  BCF    FA6.2
336A:  MOVF   00,W
336C:  IORWF  FF2,F
336E:  MOVLW  14
3370:  MOVLB  5
3372:  MOVWF  x02
3374:  MOVLB  0
3376:  CALL   0F98
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
337A:  MOVLW  0C
337C:  MOVWF  FA9
337E:  CLRF   FA8
3380:  BCF    FA6.6
3382:  BCF    FA6.7
3384:  BSF    FA6.2
3386:  MOVF   FF2,W
3388:  MOVWF  00
338A:  BCF    FF2.7
338C:  MOVLB  F
338E:  MOVLW  55
3390:  MOVWF  FA7
3392:  MOVLW  AA
3394:  MOVWF  FA7
3396:  BSF    FA6.1
3398:  BTFSC  FA6.1
339A:  BRA    3398
339C:  BCF    FA6.2
339E:  MOVF   00,W
33A0:  IORWF  FF2,F
33A2:  MOVLW  14
33A4:  MOVLB  5
33A6:  MOVWF  x02
33A8:  MOVLB  0
33AA:  CALL   0F98
33AE:  MOVLW  0D
33B0:  MOVWF  FA9
33B2:  CLRF   FA8
33B4:  BCF    FA6.6
33B6:  BCF    FA6.7
33B8:  BSF    FA6.2
33BA:  MOVF   FF2,W
33BC:  MOVWF  00
33BE:  BCF    FF2.7
33C0:  MOVLB  F
33C2:  MOVLW  55
33C4:  MOVWF  FA7
33C6:  MOVLW  AA
33C8:  MOVWF  FA7
33CA:  BSF    FA6.1
33CC:  BTFSC  FA6.1
33CE:  BRA    33CC
33D0:  BCF    FA6.2
33D2:  MOVF   00,W
33D4:  IORWF  FF2,F
33D6:  MOVLW  14
33D8:  MOVLB  5
33DA:  MOVWF  x02
33DC:  MOVLB  0
33DE:  CALL   0F98
....................              reset_cpu();}         
33E2:  RESET
33E4:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
33E6:  MOVF   xD2,W
33E8:  SUBWF  xCE,W
33EA:  BNZ   34BC
33EC:  MOVF   xD3,W
33EE:  SUBWF  xCF,W
33F0:  BNZ   34BC
33F2:  MOVF   xD4,W
33F4:  SUBWF  xD0,W
33F6:  BNZ   34BC
33F8:  MOVF   xD5,W
33FA:  SUBWF  xD1,W
33FC:  BNZ   34BC
....................          { 
....................             glcd_fillScreen(OFF); 
33FE:  MOVLB  5
3400:  CLRF   x02
3402:  MOVLB  0
3404:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
3408:  MOVLW  04
340A:  MOVWF  FEA
340C:  MOVLW  E1
340E:  MOVWF  FE9
3410:  MOVFF  FF2,501
3414:  BCF    FF2.7
3416:  MOVLW  00
3418:  CALL   0758
341C:  TBLRD*-
341E:  TBLRD*+
3420:  MOVF   FF5,W
3422:  MOVWF  FEE
3424:  IORLW  00
3426:  BNZ   341E
3428:  MOVLB  5
342A:  BTFSC  x01.7
342C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
342E:  MOVLW  04
3430:  MOVWF  x02
3432:  MOVLW  E1
3434:  MOVWF  x01
3436:  MOVLW  1E
3438:  MOVWF  x03
343A:  CLRF   x04
343C:  CLRF   x05
343E:  MOVLW  02
3440:  MOVWF  x06
3442:  MOVLB  0
3444:  CALL   1630
....................             strcpy(Menus.Letra,"Correcta"); 
3448:  MOVLW  04
344A:  MOVWF  FEA
344C:  MOVLW  E1
344E:  MOVWF  FE9
3450:  MOVFF  FF2,501
3454:  BCF    FF2.7
3456:  MOVLW  00
3458:  CALL   0778
345C:  TBLRD*-
345E:  TBLRD*+
3460:  MOVF   FF5,W
3462:  MOVWF  FEE
3464:  IORLW  00
3466:  BNZ   345E
3468:  MOVLB  5
346A:  BTFSC  x01.7
346C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
346E:  MOVLW  04
3470:  MOVWF  x02
3472:  MOVLW  E1
3474:  MOVWF  x01
3476:  MOVLW  0F
3478:  MOVWF  x03
347A:  MOVLW  1E
347C:  MOVWF  x04
347E:  CLRF   x05
3480:  MOVLW  02
3482:  MOVWF  x06
3484:  MOVLB  0
3486:  CALL   1630
....................             Menu=1;glcd_update();delay_ms(1000); 
348A:  MOVLW  01
348C:  MOVLB  4
348E:  MOVWF  xA2
3490:  MOVLB  0
3492:  CALL   105C
3496:  MOVLW  04
3498:  MOVLB  5
349A:  MOVWF  x01
349C:  MOVLW  FA
349E:  MOVWF  x02
34A0:  MOVLB  0
34A2:  CALL   0F98
34A6:  MOVLB  5
34A8:  DECFSZ x01,F
34AA:  BRA    349C
....................             glcd_fillScreen(OFF);unidad=1; 
34AC:  CLRF   x02
34AE:  MOVLB  0
34B0:  CALL   1002
34B4:  MOVLW  01
34B6:  MOVLB  4
34B8:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
34BA:  BRA    35D8
....................          { 
....................             glcd_fillScreen(OFF); 
34BC:  MOVLB  5
34BE:  CLRF   x02
34C0:  MOVLB  0
34C2:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
34C6:  MOVLW  04
34C8:  MOVWF  FEA
34CA:  MOVLW  E1
34CC:  MOVWF  FE9
34CE:  MOVFF  FF2,501
34D2:  BCF    FF2.7
34D4:  MOVLW  00
34D6:  CALL   0758
34DA:  TBLRD*-
34DC:  TBLRD*+
34DE:  MOVF   FF5,W
34E0:  MOVWF  FEE
34E2:  IORLW  00
34E4:  BNZ   34DC
34E6:  MOVLB  5
34E8:  BTFSC  x01.7
34EA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
34EC:  MOVLW  04
34EE:  MOVWF  x02
34F0:  MOVLW  E1
34F2:  MOVWF  x01
34F4:  MOVLW  1E
34F6:  MOVWF  x03
34F8:  CLRF   x04
34FA:  CLRF   x05
34FC:  MOVLW  02
34FE:  MOVWF  x06
3500:  MOVLB  0
3502:  CALL   1630
....................             strcpy(Menus.Letra,"Incorrecta"); 
3506:  MOVLW  04
3508:  MOVWF  FEA
350A:  MOVLW  E1
350C:  MOVWF  FE9
350E:  MOVFF  FF2,501
3512:  BCF    FF2.7
3514:  MOVLW  00
3516:  CALL   079C
351A:  TBLRD*-
351C:  TBLRD*+
351E:  MOVF   FF5,W
3520:  MOVWF  FEE
3522:  IORLW  00
3524:  BNZ   351C
3526:  MOVLB  5
3528:  BTFSC  x01.7
352A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
352C:  MOVLW  04
352E:  MOVWF  x02
3530:  MOVLW  E1
3532:  MOVWF  x01
3534:  CLRF   x03
3536:  MOVLW  1E
3538:  MOVWF  x04
353A:  CLRF   x05
353C:  MOVLW  02
353E:  MOVWF  x06
3540:  MOVLB  0
3542:  CALL   1630
....................             Menu=0;glcd_update();delay_ms(1000); 
3546:  MOVLB  4
3548:  CLRF   xA2
354A:  MOVLB  0
354C:  CALL   105C
3550:  MOVLW  04
3552:  MOVLB  5
3554:  MOVWF  x01
3556:  MOVLW  FA
3558:  MOVWF  x02
355A:  MOVLB  0
355C:  CALL   0F98
3560:  MOVLB  5
3562:  DECFSZ x01,F
3564:  BRA    3556
....................             glcd_fillScreen(OFF);unidad=1; 
3566:  CLRF   x02
3568:  MOVLB  0
356A:  CALL   1002
356E:  MOVLW  01
3570:  MOVLB  4
3572:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3574:  CLRF   xCE
3576:  CLRF   xCF
3578:  CLRF   xD0
357A:  CLRF   xD1
....................             displayContrasena(Contrasena[0],20,30,1); 
357C:  MOVFF  4CE,503
3580:  MOVLW  14
3582:  MOVLB  5
3584:  MOVWF  x04
3586:  MOVLW  1E
3588:  MOVWF  x05
358A:  MOVLW  01
358C:  MOVWF  x06
358E:  MOVLB  0
3590:  CALL   185E
....................             displayContrasena(Contrasena[1],40,30,0); 
3594:  MOVFF  4CF,503
3598:  MOVLW  28
359A:  MOVLB  5
359C:  MOVWF  x04
359E:  MOVLW  1E
35A0:  MOVWF  x05
35A2:  CLRF   x06
35A4:  MOVLB  0
35A6:  CALL   185E
....................             displayContrasena(Contrasena[2],60,30,0); 
35AA:  MOVFF  4D0,503
35AE:  MOVLW  3C
35B0:  MOVLB  5
35B2:  MOVWF  x04
35B4:  MOVLW  1E
35B6:  MOVWF  x05
35B8:  CLRF   x06
35BA:  MOVLB  0
35BC:  CALL   185E
....................             displayContrasena(Contrasena[3],80,30,0); 
35C0:  MOVFF  4D1,503
35C4:  MOVLW  50
35C6:  MOVLB  5
35C8:  MOVWF  x04
35CA:  MOVLW  1E
35CC:  MOVWF  x05
35CE:  CLRF   x06
35D0:  MOVLB  0
35D2:  CALL   185E
35D6:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
35D8:  DECFSZ xA2,W
35DA:  BRA    3A10
....................        
....................       if(visual==1) 
35DC:  BTFSS  x95.4
35DE:  BRA    3996
....................       { 
....................          if(Opcion>6) 
35E0:  MOVF   xA7,W
35E2:  SUBLW  06
35E4:  BC    35EA
....................          {Opcion=1;} 
35E6:  MOVLW  01
35E8:  MOVWF  xA7
....................          if(Opcion<1) 
35EA:  MOVF   xA7,F
35EC:  BNZ   35F2
....................          {Opcion=6;} 
35EE:  MOVLW  06
35F0:  MOVWF  xA7
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
35F2:  MOVLW  04
35F4:  MOVWF  FEA
35F6:  MOVLW  E1
35F8:  MOVWF  FE9
35FA:  MOVFF  FF2,501
35FE:  BCF    FF2.7
3600:  MOVLW  00
3602:  MOVLB  0
3604:  CALL   07C2
3608:  TBLRD*-
360A:  TBLRD*+
360C:  MOVF   FF5,W
360E:  MOVWF  FEE
3610:  IORLW  00
3612:  BNZ   360A
3614:  MOVLB  5
3616:  BTFSC  x01.7
3618:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
361A:  MOVLW  04
361C:  MOVWF  x02
361E:  MOVLW  E1
3620:  MOVWF  x01
3622:  MOVLW  1E
3624:  MOVWF  x03
3626:  CLRF   x04
3628:  MOVLW  01
362A:  MOVWF  x05
362C:  MOVWF  x06
362E:  MOVLB  0
3630:  CALL   1630
....................        
....................          if(Opcion==1)    
3634:  MOVLB  4
3636:  DECFSZ xA7,W
3638:  BRA    3680
....................             {strcpy(Menus.Letra,"Caucho"); 
363A:  MOVLW  04
363C:  MOVWF  FEA
363E:  MOVLW  E1
3640:  MOVWF  FE9
3642:  MOVFF  FF2,501
3646:  BCF    FF2.7
3648:  MOVLW  00
364A:  MOVLB  0
364C:  CALL   07EC
3650:  TBLRD*-
3652:  TBLRD*+
3654:  MOVF   FF5,W
3656:  MOVWF  FEE
3658:  IORLW  00
365A:  BNZ   3652
365C:  MOVLB  5
365E:  BTFSC  x01.7
3660:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
3662:  MOVLW  04
3664:  MOVWF  x02
3666:  MOVLW  E1
3668:  MOVWF  x01
366A:  CLRF   x03
366C:  MOVLW  0A
366E:  MOVWF  x04
3670:  MOVLW  01
3672:  MOVWF  x05
3674:  MOVWF  x06
3676:  MOVLB  0
3678:  CALL   1630
....................          else 
367C:  BRA    36C2
367E:  MOVLB  4
....................             {strcpy(Menus.Letra,"Caucho"); 
3680:  MOVLW  04
3682:  MOVWF  FEA
3684:  MOVLW  E1
3686:  MOVWF  FE9
3688:  MOVFF  FF2,501
368C:  BCF    FF2.7
368E:  MOVLW  00
3690:  MOVLB  0
3692:  CALL   07EC
3696:  TBLRD*-
3698:  TBLRD*+
369A:  MOVF   FF5,W
369C:  MOVWF  FEE
369E:  IORLW  00
36A0:  BNZ   3698
36A2:  MOVLB  5
36A4:  BTFSC  x01.7
36A6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
36A8:  MOVLW  04
36AA:  MOVWF  x02
36AC:  MOVLW  E1
36AE:  MOVWF  x01
36B0:  CLRF   x03
36B2:  MOVLW  0A
36B4:  MOVWF  x04
36B6:  CLRF   x05
36B8:  MOVLW  01
36BA:  MOVWF  x06
36BC:  MOVLB  0
36BE:  CALL   1630
....................           
....................          if(Opcion==2)    
36C2:  MOVLB  4
36C4:  MOVF   xA7,W
36C6:  SUBLW  02
36C8:  BNZ   3710
....................             {strcpy(Menus.Letra,"Liquidos"); 
36CA:  MOVLW  04
36CC:  MOVWF  FEA
36CE:  MOVLW  E1
36D0:  MOVWF  FE9
36D2:  MOVFF  FF2,501
36D6:  BCF    FF2.7
36D8:  MOVLW  00
36DA:  MOVLB  0
36DC:  CALL   080E
36E0:  TBLRD*-
36E2:  TBLRD*+
36E4:  MOVF   FF5,W
36E6:  MOVWF  FEE
36E8:  IORLW  00
36EA:  BNZ   36E2
36EC:  MOVLB  5
36EE:  BTFSC  x01.7
36F0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
36F2:  MOVLW  04
36F4:  MOVWF  x02
36F6:  MOVLW  E1
36F8:  MOVWF  x01
36FA:  CLRF   x03
36FC:  MOVLW  13
36FE:  MOVWF  x04
3700:  MOVLW  01
3702:  MOVWF  x05
3704:  MOVWF  x06
3706:  MOVLB  0
3708:  CALL   1630
....................          else 
370C:  BRA    3752
370E:  MOVLB  4
....................             {strcpy(Menus.Letra,"Liquidos"); 
3710:  MOVLW  04
3712:  MOVWF  FEA
3714:  MOVLW  E1
3716:  MOVWF  FE9
3718:  MOVFF  FF2,501
371C:  BCF    FF2.7
371E:  MOVLW  00
3720:  MOVLB  0
3722:  CALL   080E
3726:  TBLRD*-
3728:  TBLRD*+
372A:  MOVF   FF5,W
372C:  MOVWF  FEE
372E:  IORLW  00
3730:  BNZ   3728
3732:  MOVLB  5
3734:  BTFSC  x01.7
3736:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
3738:  MOVLW  04
373A:  MOVWF  x02
373C:  MOVLW  E1
373E:  MOVWF  x01
3740:  CLRF   x03
3742:  MOVLW  13
3744:  MOVWF  x04
3746:  CLRF   x05
3748:  MOVLW  01
374A:  MOVWF  x06
374C:  MOVLB  0
374E:  CALL   1630
....................              
....................           if(Opcion==3)    
3752:  MOVLB  4
3754:  MOVF   xA7,W
3756:  SUBLW  03
3758:  BNZ   37A0
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
375A:  MOVLW  04
375C:  MOVWF  FEA
375E:  MOVLW  E1
3760:  MOVWF  FE9
3762:  MOVFF  FF2,501
3766:  BCF    FF2.7
3768:  MOVLW  00
376A:  MOVLB  0
376C:  CALL   0832
3770:  TBLRD*-
3772:  TBLRD*+
3774:  MOVF   FF5,W
3776:  MOVWF  FEE
3778:  IORLW  00
377A:  BNZ   3772
377C:  MOVLB  5
377E:  BTFSC  x01.7
3780:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
3782:  MOVLW  04
3784:  MOVWF  x02
3786:  MOVLW  E1
3788:  MOVWF  x01
378A:  CLRF   x03
378C:  MOVLW  1C
378E:  MOVWF  x04
3790:  MOVLW  01
3792:  MOVWF  x05
3794:  MOVWF  x06
3796:  MOVLB  0
3798:  CALL   1630
....................          else 
379C:  BRA    37E2
379E:  MOVLB  4
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
37A0:  MOVLW  04
37A2:  MOVWF  FEA
37A4:  MOVLW  E1
37A6:  MOVWF  FE9
37A8:  MOVFF  FF2,501
37AC:  BCF    FF2.7
37AE:  MOVLW  00
37B0:  MOVLB  0
37B2:  CALL   0832
37B6:  TBLRD*-
37B8:  TBLRD*+
37BA:  MOVF   FF5,W
37BC:  MOVWF  FEE
37BE:  IORLW  00
37C0:  BNZ   37B8
37C2:  MOVLB  5
37C4:  BTFSC  x01.7
37C6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
37C8:  MOVLW  04
37CA:  MOVWF  x02
37CC:  MOVLW  E1
37CE:  MOVWF  x01
37D0:  CLRF   x03
37D2:  MOVLW  1C
37D4:  MOVWF  x04
37D6:  CLRF   x05
37D8:  MOVLW  01
37DA:  MOVWF  x06
37DC:  MOVLB  0
37DE:  CALL   1630
....................              
....................          if(Opcion==4)    
37E2:  MOVLB  4
37E4:  MOVF   xA7,W
37E6:  SUBLW  04
37E8:  BNZ   3830
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
37EA:  MOVLW  04
37EC:  MOVWF  FEA
37EE:  MOVLW  E1
37F0:  MOVWF  FE9
37F2:  MOVFF  FF2,501
37F6:  BCF    FF2.7
37F8:  MOVLW  00
37FA:  MOVLB  0
37FC:  CALL   0860
3800:  TBLRD*-
3802:  TBLRD*+
3804:  MOVF   FF5,W
3806:  MOVWF  FEE
3808:  IORLW  00
380A:  BNZ   3802
380C:  MOVLB  5
380E:  BTFSC  x01.7
3810:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
3812:  MOVLW  04
3814:  MOVWF  x02
3816:  MOVLW  E1
3818:  MOVWF  x01
381A:  CLRF   x03
381C:  MOVLW  25
381E:  MOVWF  x04
3820:  MOVLW  01
3822:  MOVWF  x05
3824:  MOVWF  x06
3826:  MOVLB  0
3828:  CALL   1630
....................          else 
382C:  BRA    3872
382E:  MOVLB  4
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
3830:  MOVLW  04
3832:  MOVWF  FEA
3834:  MOVLW  E1
3836:  MOVWF  FE9
3838:  MOVFF  FF2,501
383C:  BCF    FF2.7
383E:  MOVLW  00
3840:  MOVLB  0
3842:  CALL   0860
3846:  TBLRD*-
3848:  TBLRD*+
384A:  MOVF   FF5,W
384C:  MOVWF  FEE
384E:  IORLW  00
3850:  BNZ   3848
3852:  MOVLB  5
3854:  BTFSC  x01.7
3856:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
3858:  MOVLW  04
385A:  MOVWF  x02
385C:  MOVLW  E1
385E:  MOVWF  x01
3860:  CLRF   x03
3862:  MOVLW  25
3864:  MOVWF  x04
3866:  CLRF   x05
3868:  MOVLW  01
386A:  MOVWF  x06
386C:  MOVLB  0
386E:  CALL   1630
....................              
....................          if(Opcion==5)    
3872:  MOVLB  4
3874:  MOVF   xA7,W
3876:  SUBLW  05
3878:  BNZ   38C0
....................             {strcpy(Menus.Letra,"Personalizado"); 
387A:  MOVLW  04
387C:  MOVWF  FEA
387E:  MOVLW  E1
3880:  MOVWF  FE9
3882:  MOVFF  FF2,501
3886:  BCF    FF2.7
3888:  MOVLW  00
388A:  MOVLB  0
388C:  CALL   0890
3890:  TBLRD*-
3892:  TBLRD*+
3894:  MOVF   FF5,W
3896:  MOVWF  FEE
3898:  IORLW  00
389A:  BNZ   3892
389C:  MOVLB  5
389E:  BTFSC  x01.7
38A0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
38A2:  MOVLW  04
38A4:  MOVWF  x02
38A6:  MOVLW  E1
38A8:  MOVWF  x01
38AA:  CLRF   x03
38AC:  MOVLW  2E
38AE:  MOVWF  x04
38B0:  MOVLW  01
38B2:  MOVWF  x05
38B4:  MOVWF  x06
38B6:  MOVLB  0
38B8:  CALL   1630
....................          else 
38BC:  BRA    3902
38BE:  MOVLB  4
....................             {strcpy(Menus.Letra,"Personalizado"); 
38C0:  MOVLW  04
38C2:  MOVWF  FEA
38C4:  MOVLW  E1
38C6:  MOVWF  FE9
38C8:  MOVFF  FF2,501
38CC:  BCF    FF2.7
38CE:  MOVLW  00
38D0:  MOVLB  0
38D2:  CALL   0890
38D6:  TBLRD*-
38D8:  TBLRD*+
38DA:  MOVF   FF5,W
38DC:  MOVWF  FEE
38DE:  IORLW  00
38E0:  BNZ   38D8
38E2:  MOVLB  5
38E4:  BTFSC  x01.7
38E6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
38E8:  MOVLW  04
38EA:  MOVWF  x02
38EC:  MOVLW  E1
38EE:  MOVWF  x01
38F0:  CLRF   x03
38F2:  MOVLW  2E
38F4:  MOVWF  x04
38F6:  CLRF   x05
38F8:  MOVLW  01
38FA:  MOVWF  x06
38FC:  MOVLB  0
38FE:  CALL   1630
....................              
....................          if(Opcion==6)    
3902:  MOVLB  4
3904:  MOVF   xA7,W
3906:  SUBLW  06
3908:  BNZ   3950
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
390A:  MOVLW  04
390C:  MOVWF  FEA
390E:  MOVLW  E1
3910:  MOVWF  FE9
3912:  MOVFF  FF2,501
3916:  BCF    FF2.7
3918:  MOVLW  00
391A:  MOVLB  0
391C:  CALL   08B8
3920:  TBLRD*-
3922:  TBLRD*+
3924:  MOVF   FF5,W
3926:  MOVWF  FEE
3928:  IORLW  00
392A:  BNZ   3922
392C:  MOVLB  5
392E:  BTFSC  x01.7
3930:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
3932:  MOVLW  04
3934:  MOVWF  x02
3936:  MOVLW  E1
3938:  MOVWF  x01
393A:  CLRF   x03
393C:  MOVLW  37
393E:  MOVWF  x04
3940:  MOVLW  01
3942:  MOVWF  x05
3944:  MOVWF  x06
3946:  MOVLB  0
3948:  CALL   1630
....................          else 
394C:  BRA    3992
394E:  MOVLB  4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3950:  MOVLW  04
3952:  MOVWF  FEA
3954:  MOVLW  E1
3956:  MOVWF  FE9
3958:  MOVFF  FF2,501
395C:  BCF    FF2.7
395E:  MOVLW  00
3960:  MOVLB  0
3962:  CALL   08B8
3966:  TBLRD*-
3968:  TBLRD*+
396A:  MOVF   FF5,W
396C:  MOVWF  FEE
396E:  IORLW  00
3970:  BNZ   3968
3972:  MOVLB  5
3974:  BTFSC  x01.7
3976:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
3978:  MOVLW  04
397A:  MOVWF  x02
397C:  MOVLW  E1
397E:  MOVWF  x01
3980:  CLRF   x03
3982:  MOVLW  37
3984:  MOVWF  x04
3986:  CLRF   x05
3988:  MOVLW  01
398A:  MOVWF  x06
398C:  MOVLB  0
398E:  CALL   1630
....................             visual=0; 
3992:  MOVLB  4
3994:  BCF    x95.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
3996:  BSF    F92.0
3998:  BTFSS  F80.0
399A:  BRA    39B6
....................          {  if(Flanco == 0)  
399C:  BTFSC  x95.0
399E:  BRA    39B4
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
39A0:  BSF    x95.0
39A2:  MOVLW  1E
39A4:  MOVLB  5
39A6:  MOVWF  x02
39A8:  MOVLB  0
39AA:  CALL   0F98
39AE:  MOVLB  4
39B0:  DECF   xA7,F
39B2:  BSF    x95.4
....................                } 
....................          } 
....................             else 
39B4:  BRA    39B8
....................                {Flanco = 0;} 
39B6:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
39B8:  BSF    F92.1
39BA:  BTFSS  F80.1
39BC:  BRA    39D8
....................          {  if(Flanco2 == 0)  
39BE:  BTFSC  x95.2
39C0:  BRA    39D6
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
39C2:  BSF    x95.2
39C4:  MOVLW  1E
39C6:  MOVLB  5
39C8:  MOVWF  x02
39CA:  MOVLB  0
39CC:  CALL   0F98
39D0:  MOVLB  4
39D2:  INCF   xA7,F
39D4:  BSF    x95.4
....................                }      
....................          } 
....................             else 
39D6:  BRA    39DA
....................                {Flanco2 = 0;}   
39D8:  BCF    x95.2
....................                 
....................        if(RIGHT)//Si oprime SET 
39DA:  BSF    F92.2
39DC:  BTFSS  F80.2
39DE:  BRA    3A0E
....................          {  if(Flanco1 == 0)  
39E0:  BTFSC  x95.1
39E2:  BRA    3A0C
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
39E4:  BSF    x95.1
39E6:  MOVLW  1E
39E8:  MOVLB  5
39EA:  MOVWF  x02
39EC:  MOVLB  0
39EE:  CALL   0F98
39F2:  MOVLW  03
39F4:  MOVLB  4
39F6:  ADDWF  xA7,W
39F8:  MOVWF  xA2
39FA:  MOVLW  01
39FC:  MOVWF  xA7
39FE:  MOVLB  5
3A00:  CLRF   x02
3A02:  MOVLB  0
3A04:  CALL   1002
3A08:  MOVLB  4
3A0A:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3A0C:  BRA    3A10
....................                {Flanco1 = 0;}   
3A0E:  BCF    x95.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
3A10:  MOVF   xA2,W
3A12:  SUBLW  04
3A14:  BTFSS  FD8.2
3A16:  BRA    3D44
....................        
....................       if(visual==1) 
3A18:  BTFSS  x95.4
3A1A:  BRA    3B70
....................       { 
....................          glcd_imagen(2); //Guante 
3A1C:  MOVLW  02
3A1E:  MOVLB  5
3A20:  MOVWF  x01
3A22:  MOVLB  0
3A24:  CALL   2078
....................          strcpy(Menus.Letra,"Caucho"); 
3A28:  MOVLW  04
3A2A:  MOVWF  FEA
3A2C:  MOVLW  E1
3A2E:  MOVWF  FE9
3A30:  MOVFF  FF2,501
3A34:  BCF    FF2.7
3A36:  MOVLW  00
3A38:  CALL   07EC
3A3C:  TBLRD*-
3A3E:  TBLRD*+
3A40:  MOVF   FF5,W
3A42:  MOVWF  FEE
3A44:  IORLW  00
3A46:  BNZ   3A3E
3A48:  MOVLB  5
3A4A:  BTFSC  x01.7
3A4C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3A4E:  MOVLW  04
3A50:  MOVWF  x02
3A52:  MOVLW  E1
3A54:  MOVWF  x01
3A56:  MOVLW  14
3A58:  MOVWF  x03
3A5A:  CLRF   x04
3A5C:  MOVLW  01
3A5E:  MOVWF  x05
3A60:  MOVLW  02
3A62:  MOVWF  x06
3A64:  MOVLB  0
3A66:  CALL   1630
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3A6A:  MOVLW  04
3A6C:  MOVWF  FEA
3A6E:  MOVLW  E1
3A70:  MOVWF  FE9
3A72:  MOVFF  FF2,501
3A76:  BCF    FF2.7
3A78:  MOVLW  00
3A7A:  CALL   07EC
3A7E:  TBLRD*-
3A80:  TBLRD*+
3A82:  MOVF   FF5,W
3A84:  MOVWF  FEE
3A86:  IORLW  00
3A88:  BNZ   3A80
3A8A:  MOVLB  5
3A8C:  BTFSC  x01.7
3A8E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3A90:  MOVLW  04
3A92:  MOVWF  x02
3A94:  MOVLW  E1
3A96:  MOVWF  x01
3A98:  MOVLW  07
3A9A:  MOVWF  x03
3A9C:  MOVLW  37
3A9E:  MOVWF  x04
3AA0:  CLRF   x05
3AA2:  MOVLW  01
3AA4:  MOVWF  x06
3AA6:  MOVLB  0
3AA8:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3AAC:  MOVLW  04
3AAE:  MOVWF  FEA
3AB0:  MOVLW  E1
3AB2:  MOVWF  FE9
3AB4:  MOVFF  FF2,501
3AB8:  BCF    FF2.7
3ABA:  MOVLW  00
3ABC:  CALL   08E0
3AC0:  TBLRD*-
3AC2:  TBLRD*+
3AC4:  MOVF   FF5,W
3AC6:  MOVWF  FEE
3AC8:  IORLW  00
3ACA:  BNZ   3AC2
3ACC:  MOVLB  5
3ACE:  BTFSC  x01.7
3AD0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3AD2:  MOVLW  04
3AD4:  MOVWF  x02
3AD6:  MOVLW  E1
3AD8:  MOVWF  x01
3ADA:  CLRF   x03
3ADC:  MOVLW  1A
3ADE:  MOVWF  x04
3AE0:  CLRF   x05
3AE2:  MOVLW  01
3AE4:  MOVWF  x06
3AE6:  MOVLB  0
3AE8:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
3AEC:  MOVLW  04
3AEE:  MOVWF  FEA
3AF0:  MOVLW  E1
3AF2:  MOVWF  FE9
3AF4:  MOVFF  FF2,501
3AF8:  BCF    FF2.7
3AFA:  MOVLW  00
3AFC:  CALL   090C
3B00:  TBLRD*-
3B02:  TBLRD*+
3B04:  MOVF   FF5,W
3B06:  MOVWF  FEE
3B08:  IORLW  00
3B0A:  BNZ   3B02
3B0C:  MOVLB  5
3B0E:  BTFSC  x01.7
3B10:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3B12:  MOVLW  04
3B14:  MOVWF  x02
3B16:  MOVLW  E1
3B18:  MOVWF  x01
3B1A:  CLRF   x03
3B1C:  MOVLW  24
3B1E:  MOVWF  x04
3B20:  CLRF   x05
3B22:  MOVLW  01
3B24:  MOVWF  x06
3B26:  MOVLB  0
3B28:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3B2C:  MOVLW  04
3B2E:  MOVWF  FEA
3B30:  MOVLW  E1
3B32:  MOVWF  FE9
3B34:  MOVFF  FF2,501
3B38:  BCF    FF2.7
3B3A:  MOVLW  00
3B3C:  CALL   093C
3B40:  TBLRD*-
3B42:  TBLRD*+
3B44:  MOVF   FF5,W
3B46:  MOVWF  FEE
3B48:  IORLW  00
3B4A:  BNZ   3B42
3B4C:  MOVLB  5
3B4E:  BTFSC  x01.7
3B50:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3B52:  MOVLW  04
3B54:  MOVWF  x02
3B56:  MOVLW  E1
3B58:  MOVWF  x01
3B5A:  CLRF   x03
3B5C:  MOVLW  2E
3B5E:  MOVWF  x04
3B60:  CLRF   x05
3B62:  MOVLW  01
3B64:  MOVWF  x06
3B66:  MOVLB  0
3B68:  CALL   1630
....................          visual=0; 
3B6C:  MOVLB  4
3B6E:  BCF    x95.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3B70:  BSF    F92.3
3B72:  BTFSS  F80.3
3B74:  BRA    3B96
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3B76:  MOVLW  1E
3B78:  MOVLB  5
3B7A:  MOVWF  x02
3B7C:  MOVLB  0
3B7E:  CALL   0F98
3B82:  MOVLW  01
3B84:  MOVLB  4
3B86:  MOVWF  xA2
3B88:  MOVLB  5
3B8A:  CLRF   x02
3B8C:  MOVLB  0
3B8E:  CALL   1002
3B92:  MOVLB  4
3B94:  BSF    x95.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3B96:  BSF    F92.2
3B98:  BTFSS  F80.2
3B9A:  BRA    3D44
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
3B9C:  CLRF   xC2
3B9E:  CLRF   xC3
3BA0:  MOVLW  05
3BA2:  MOVWF  xC4
3BA4:  MOVLW  02
3BA6:  MOVWF  xC5
3BA8:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3BAA:  CLRF   xCA
3BAC:  CLRF   xCB
3BAE:  MOVLW  05
3BB0:  MOVWF  xCC
3BB2:  MOVLW  01
3BB4:  MOVWF  xCD
3BB6:  CLRF   xB3
3BB8:  CLRF   xB2
3BBA:  MOVLW  79
3BBC:  MOVWF  xA5
3BBE:  MOVLW  14
3BC0:  MOVWF  xA2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3BC2:  MOVWF  xA2
3BC4:  MOVLW  0F
3BC6:  MOVLB  5
3BC8:  MOVWF  x13
3BCA:  MOVLW  12
3BCC:  MOVWF  x14
3BCE:  MOVLW  1E
3BD0:  MOVWF  x15
3BD2:  MOVLW  35
3BD4:  MOVWF  x16
3BD6:  CLRF   x17
3BD8:  MOVLW  01
3BDA:  MOVWF  x18
3BDC:  MOVLB  0
3BDE:  CALL   156E
3BE2:  MOVLB  4
3BE4:  CLRF   xA9
3BE6:  MOVLW  C0
3BE8:  IORWF  FF2,F
3BEA:  MOVLB  5
3BEC:  CLRF   x02
3BEE:  MOVLB  0
3BF0:  CALL   1002
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3BF4:  MOVLW  04
3BF6:  MOVWF  FEA
3BF8:  MOVLW  E1
3BFA:  MOVWF  FE9
3BFC:  MOVFF  FF2,501
3C00:  BCF    FF2.7
3C02:  MOVLW  00
3C04:  CALL   0966
3C08:  TBLRD*-
3C0A:  TBLRD*+
3C0C:  MOVF   FF5,W
3C0E:  MOVWF  FEE
3C10:  IORLW  00
3C12:  BNZ   3C0A
3C14:  MOVLB  5
3C16:  BTFSC  x01.7
3C18:  BSF    FF2.7
3C1A:  MOVLW  04
3C1C:  MOVWF  x02
3C1E:  MOVLW  E1
3C20:  MOVWF  x01
3C22:  CLRF   x03
3C24:  MOVLW  37
3C26:  MOVWF  x04
3C28:  MOVLW  02
3C2A:  MOVWF  x05
3C2C:  MOVLW  01
3C2E:  MOVWF  x06
3C30:  MOVLB  0
3C32:  CALL   1630
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3C36:  MOVLW  0F
3C38:  MOVLB  5
3C3A:  MOVWF  x13
3C3C:  MOVLW  12
3C3E:  MOVWF  x14
3C40:  MOVLW  1E
3C42:  MOVWF  x15
3C44:  MOVLW  35
3C46:  MOVWF  x16
3C48:  CLRF   x17
3C4A:  MOVLW  01
3C4C:  MOVWF  x18
3C4E:  MOVLB  0
3C50:  CALL   156E
....................          glcd_imagen(5); 
3C54:  MOVLW  05
3C56:  MOVLB  5
3C58:  MOVWF  x01
3C5A:  MOVLB  0
3C5C:  CALL   2078
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3C60:  MOVLW  04
3C62:  MOVWF  FEA
3C64:  MOVLW  E1
3C66:  MOVWF  FE9
3C68:  MOVFF  FF2,501
3C6C:  BCF    FF2.7
3C6E:  MOVLW  00
3C70:  CALL   098C
3C74:  TBLRD*-
3C76:  TBLRD*+
3C78:  MOVF   FF5,W
3C7A:  MOVWF  FEE
3C7C:  IORLW  00
3C7E:  BNZ   3C76
3C80:  MOVLB  5
3C82:  BTFSC  x01.7
3C84:  BSF    FF2.7
3C86:  MOVLW  04
3C88:  MOVWF  x02
3C8A:  MOVLW  E1
3C8C:  MOVWF  x01
3C8E:  CLRF   x03
3C90:  CLRF   x04
3C92:  MOVLW  02
3C94:  MOVWF  x05
3C96:  MOVLW  01
3C98:  MOVWF  x06
3C9A:  MOVLB  0
3C9C:  CALL   1630
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3CA0:  MOVLW  04
3CA2:  MOVWF  FEA
3CA4:  MOVLW  E1
3CA6:  MOVWF  FE9
3CA8:  MOVFF  FF2,501
3CAC:  BCF    FF2.7
3CAE:  MOVLW  00
3CB0:  CALL   09AE
3CB4:  TBLRD*-
3CB6:  TBLRD*+
3CB8:  MOVF   FF5,W
3CBA:  MOVWF  FEE
3CBC:  IORLW  00
3CBE:  BNZ   3CB6
3CC0:  MOVLB  5
3CC2:  BTFSC  x01.7
3CC4:  BSF    FF2.7
3CC6:  MOVLW  04
3CC8:  MOVWF  x02
3CCA:  MOVLW  E1
3CCC:  MOVWF  x01
3CCE:  CLRF   x03
3CD0:  MOVLW  08
3CD2:  MOVWF  x04
3CD4:  MOVLW  02
3CD6:  MOVWF  x05
3CD8:  MOVLW  01
3CDA:  MOVWF  x06
3CDC:  MOVLB  0
3CDE:  CALL   1630
....................          glcd_circle(95,40,2,NO,ON); 
3CE2:  MOVLW  5F
3CE4:  MOVLB  5
3CE6:  MOVWF  x01
3CE8:  MOVLW  28
3CEA:  MOVWF  x02
3CEC:  MOVLW  02
3CEE:  MOVWF  x03
3CF0:  CLRF   x04
3CF2:  MOVLW  01
3CF4:  MOVWF  x05
3CF6:  MOVLB  0
3CF8:  CALL   2174
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3CFC:  MOVLW  04
3CFE:  MOVWF  FEA
3D00:  MOVLW  E1
3D02:  MOVWF  FE9
3D04:  MOVFF  FF2,501
3D08:  BCF    FF2.7
3D0A:  MOVLW  00
3D0C:  CALL   09D0
3D10:  TBLRD*-
3D12:  TBLRD*+
3D14:  MOVF   FF5,W
3D16:  MOVWF  FEE
3D18:  IORLW  00
3D1A:  BNZ   3D12
3D1C:  MOVLB  5
3D1E:  BTFSC  x01.7
3D20:  BSF    FF2.7
3D22:  MOVLW  04
3D24:  MOVWF  x02
3D26:  MOVLW  E1
3D28:  MOVWF  x01
3D2A:  MOVLW  66
3D2C:  MOVWF  x03
3D2E:  MOVLW  28
3D30:  MOVWF  x04
3D32:  MOVLW  02
3D34:  MOVWF  x05
3D36:  MOVWF  x06
3D38:  MOVLB  0
3D3A:  CALL   1630
....................          MuestraTiemposProgramados(); 
3D3E:  CALL   257C
3D42:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
3D44:  MOVF   xA2,W
3D46:  SUBLW  05
3D48:  BTFSS  FD8.2
3D4A:  BRA    3F10
....................        
....................       if(visual==1) 
3D4C:  BTFSS  x95.4
3D4E:  BRA    3EA6
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
3D50:  MOVLW  04
3D52:  MOVLB  5
3D54:  MOVWF  x01
3D56:  MOVLB  0
3D58:  CALL   2078
....................          strcpy(Menus.Letra,"Liquidos"); 
3D5C:  MOVLW  04
3D5E:  MOVWF  FEA
3D60:  MOVLW  E1
3D62:  MOVWF  FE9
3D64:  MOVFF  FF2,501
3D68:  BCF    FF2.7
3D6A:  MOVLW  00
3D6C:  CALL   080E
3D70:  TBLRD*-
3D72:  TBLRD*+
3D74:  MOVF   FF5,W
3D76:  MOVWF  FEE
3D78:  IORLW  00
3D7A:  BNZ   3D72
3D7C:  MOVLB  5
3D7E:  BTFSC  x01.7
3D80:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3D82:  MOVLW  04
3D84:  MOVWF  x02
3D86:  MOVLW  E1
3D88:  MOVWF  x01
3D8A:  MOVLW  14
3D8C:  MOVWF  x03
3D8E:  CLRF   x04
3D90:  MOVLW  01
3D92:  MOVWF  x05
3D94:  MOVLW  02
3D96:  MOVWF  x06
3D98:  MOVLB  0
3D9A:  CALL   1630
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
3D9E:  MOVLW  04
3DA0:  MOVWF  FEA
3DA2:  MOVLW  E1
3DA4:  MOVWF  FE9
3DA6:  MOVFF  FF2,501
3DAA:  BCF    FF2.7
3DAC:  MOVLW  00
3DAE:  CALL   080E
3DB2:  TBLRD*-
3DB4:  TBLRD*+
3DB6:  MOVF   FF5,W
3DB8:  MOVWF  FEE
3DBA:  IORLW  00
3DBC:  BNZ   3DB4
3DBE:  MOVLB  5
3DC0:  BTFSC  x01.7
3DC2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3DC4:  MOVLW  04
3DC6:  MOVWF  x02
3DC8:  MOVLW  E1
3DCA:  MOVWF  x01
3DCC:  MOVLW  07
3DCE:  MOVWF  x03
3DD0:  MOVLW  37
3DD2:  MOVWF  x04
3DD4:  MOVLW  02
3DD6:  MOVWF  x05
3DD8:  MOVLW  01
3DDA:  MOVWF  x06
3DDC:  MOVLB  0
3DDE:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3DE2:  MOVLW  04
3DE4:  MOVWF  FEA
3DE6:  MOVLW  E1
3DE8:  MOVWF  FE9
3DEA:  MOVFF  FF2,501
3DEE:  BCF    FF2.7
3DF0:  MOVLW  00
3DF2:  CALL   08E0
3DF6:  TBLRD*-
3DF8:  TBLRD*+
3DFA:  MOVF   FF5,W
3DFC:  MOVWF  FEE
3DFE:  IORLW  00
3E00:  BNZ   3DF8
3E02:  MOVLB  5
3E04:  BTFSC  x01.7
3E06:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3E08:  MOVLW  04
3E0A:  MOVWF  x02
3E0C:  MOVLW  E1
3E0E:  MOVWF  x01
3E10:  CLRF   x03
3E12:  MOVLW  1A
3E14:  MOVWF  x04
3E16:  CLRF   x05
3E18:  MOVLW  01
3E1A:  MOVWF  x06
3E1C:  MOVLB  0
3E1E:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
3E22:  MOVLW  04
3E24:  MOVWF  FEA
3E26:  MOVLW  E1
3E28:  MOVWF  FE9
3E2A:  MOVFF  FF2,501
3E2E:  BCF    FF2.7
3E30:  MOVLW  00
3E32:  CALL   09EC
3E36:  TBLRD*-
3E38:  TBLRD*+
3E3A:  MOVF   FF5,W
3E3C:  MOVWF  FEE
3E3E:  IORLW  00
3E40:  BNZ   3E38
3E42:  MOVLB  5
3E44:  BTFSC  x01.7
3E46:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3E48:  MOVLW  04
3E4A:  MOVWF  x02
3E4C:  MOVLW  E1
3E4E:  MOVWF  x01
3E50:  CLRF   x03
3E52:  MOVLW  24
3E54:  MOVWF  x04
3E56:  CLRF   x05
3E58:  MOVLW  01
3E5A:  MOVWF  x06
3E5C:  MOVLB  0
3E5E:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3E62:  MOVLW  04
3E64:  MOVWF  FEA
3E66:  MOVLW  E1
3E68:  MOVWF  FE9
3E6A:  MOVFF  FF2,501
3E6E:  BCF    FF2.7
3E70:  MOVLW  00
3E72:  CALL   0A1C
3E76:  TBLRD*-
3E78:  TBLRD*+
3E7A:  MOVF   FF5,W
3E7C:  MOVWF  FEE
3E7E:  IORLW  00
3E80:  BNZ   3E78
3E82:  MOVLB  5
3E84:  BTFSC  x01.7
3E86:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
3E88:  MOVLW  04
3E8A:  MOVWF  x02
3E8C:  MOVLW  E1
3E8E:  MOVWF  x01
3E90:  CLRF   x03
3E92:  MOVLW  2E
3E94:  MOVWF  x04
3E96:  CLRF   x05
3E98:  MOVLW  01
3E9A:  MOVWF  x06
3E9C:  MOVLB  0
3E9E:  CALL   1630
....................          visual=0; 
3EA2:  MOVLB  4
3EA4:  BCF    x95.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
3EA6:  BSF    F92.3
3EA8:  BTFSS  F80.3
3EAA:  BRA    3ECC
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3EAC:  MOVLW  1E
3EAE:  MOVLB  5
3EB0:  MOVWF  x02
3EB2:  MOVLB  0
3EB4:  CALL   0F98
3EB8:  MOVLW  01
3EBA:  MOVLB  4
3EBC:  MOVWF  xA2
3EBE:  MOVLB  5
3EC0:  CLRF   x02
3EC2:  MOVLB  0
3EC4:  CALL   1002
3EC8:  MOVLB  4
3ECA:  BSF    x95.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
3ECC:  BSF    F92.2
3ECE:  BTFSS  F80.2
3ED0:  BRA    3F10
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
3ED2:  CLRF   xC2
3ED4:  CLRF   xC3
3ED6:  CLRF   xC4
3ED8:  MOVLW  02
3EDA:  MOVWF  xC5
3EDC:  BSF    x95.5
3EDE:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
3EE0:  CLRF   xCA
3EE2:  CLRF   xCB
3EE4:  CLRF   xCC
3EE6:  CLRF   xCD
3EE8:  MOVLW  79
3EEA:  MOVWF  xA5
3EEC:  MOVLW  0E
3EEE:  MOVWF  xA2
3EF0:  MOVLW  04
3EF2:  MOVLB  5
3EF4:  MOVWF  x01
3EF6:  MOVLW  AF
3EF8:  MOVWF  x02
3EFA:  MOVLB  0
3EFC:  CALL   0F98
3F00:  MOVLB  5
3F02:  DECFSZ x01,F
3F04:  BRA    3EF6
3F06:  CLRF   x02
3F08:  MOVLB  0
3F0A:  CALL   1002
3F0E:  MOVLB  4
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
3F10:  MOVF   xA2,W
3F12:  SUBLW  06
3F14:  BTFSS  FD8.2
3F16:  BRA    40DC
....................        
....................       if(visual==1) 
3F18:  BTFSS  x95.4
3F1A:  BRA    4070
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
3F1C:  MOVLW  03
3F1E:  MOVLB  5
3F20:  MOVWF  x01
3F22:  MOVLB  0
3F24:  CALL   2078
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
3F28:  MOVLW  04
3F2A:  MOVWF  FEA
3F2C:  MOVLW  E1
3F2E:  MOVWF  FE9
3F30:  MOVFF  FF2,501
3F34:  BCF    FF2.7
3F36:  MOVLW  00
3F38:  CALL   0A46
3F3C:  TBLRD*-
3F3E:  TBLRD*+
3F40:  MOVF   FF5,W
3F42:  MOVWF  FEE
3F44:  IORLW  00
3F46:  BNZ   3F3E
3F48:  MOVLB  5
3F4A:  BTFSC  x01.7
3F4C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3F4E:  MOVLW  04
3F50:  MOVWF  x02
3F52:  MOVLW  E1
3F54:  MOVWF  x01
3F56:  CLRF   x03
3F58:  CLRF   x04
3F5A:  MOVLW  01
3F5C:  MOVWF  x05
3F5E:  MOVLW  02
3F60:  MOVWF  x06
3F62:  MOVLB  0
3F64:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
3F68:  MOVLW  04
3F6A:  MOVWF  FEA
3F6C:  MOVLW  E1
3F6E:  MOVWF  FE9
3F70:  MOVFF  FF2,501
3F74:  BCF    FF2.7
3F76:  MOVLW  00
3F78:  CALL   0832
3F7C:  TBLRD*-
3F7E:  TBLRD*+
3F80:  MOVF   FF5,W
3F82:  MOVWF  FEE
3F84:  IORLW  00
3F86:  BNZ   3F7E
3F88:  MOVLB  5
3F8A:  BTFSC  x01.7
3F8C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3F8E:  MOVLW  04
3F90:  MOVWF  x02
3F92:  MOVLW  E1
3F94:  MOVWF  x01
3F96:  MOVLW  07
3F98:  MOVWF  x03
3F9A:  MOVLW  37
3F9C:  MOVWF  x04
3F9E:  MOVLW  02
3FA0:  MOVWF  x05
3FA2:  MOVLW  01
3FA4:  MOVWF  x06
3FA6:  MOVLB  0
3FA8:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3FAC:  MOVLW  04
3FAE:  MOVWF  FEA
3FB0:  MOVLW  E1
3FB2:  MOVWF  FE9
3FB4:  MOVFF  FF2,501
3FB8:  BCF    FF2.7
3FBA:  MOVLW  00
3FBC:  CALL   08E0
3FC0:  TBLRD*-
3FC2:  TBLRD*+
3FC4:  MOVF   FF5,W
3FC6:  MOVWF  FEE
3FC8:  IORLW  00
3FCA:  BNZ   3FC2
3FCC:  MOVLB  5
3FCE:  BTFSC  x01.7
3FD0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3FD2:  MOVLW  04
3FD4:  MOVWF  x02
3FD6:  MOVLW  E1
3FD8:  MOVWF  x01
3FDA:  CLRF   x03
3FDC:  MOVLW  1A
3FDE:  MOVWF  x04
3FE0:  CLRF   x05
3FE2:  MOVLW  01
3FE4:  MOVWF  x06
3FE6:  MOVLB  0
3FE8:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3FEC:  MOVLW  04
3FEE:  MOVWF  FEA
3FF0:  MOVLW  E1
3FF2:  MOVWF  FE9
3FF4:  MOVFF  FF2,501
3FF8:  BCF    FF2.7
3FFA:  MOVLW  00
3FFC:  CALL   0A6C
4000:  TBLRD*-
4002:  TBLRD*+
4004:  MOVF   FF5,W
4006:  MOVWF  FEE
4008:  IORLW  00
400A:  BNZ   4002
400C:  MOVLB  5
400E:  BTFSC  x01.7
4010:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4012:  MOVLW  04
4014:  MOVWF  x02
4016:  MOVLW  E1
4018:  MOVWF  x01
401A:  CLRF   x03
401C:  MOVLW  24
401E:  MOVWF  x04
4020:  CLRF   x05
4022:  MOVLW  01
4024:  MOVWF  x06
4026:  MOVLB  0
4028:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
402C:  MOVLW  04
402E:  MOVWF  FEA
4030:  MOVLW  E1
4032:  MOVWF  FE9
4034:  MOVFF  FF2,501
4038:  BCF    FF2.7
403A:  MOVLW  00
403C:  CALL   0A1C
4040:  TBLRD*-
4042:  TBLRD*+
4044:  MOVF   FF5,W
4046:  MOVWF  FEE
4048:  IORLW  00
404A:  BNZ   4042
404C:  MOVLB  5
404E:  BTFSC  x01.7
4050:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4052:  MOVLW  04
4054:  MOVWF  x02
4056:  MOVLW  E1
4058:  MOVWF  x01
405A:  CLRF   x03
405C:  MOVLW  2E
405E:  MOVWF  x04
4060:  CLRF   x05
4062:  MOVLW  01
4064:  MOVWF  x06
4066:  MOVLB  0
4068:  CALL   1630
....................          visual=0; 
406C:  MOVLB  4
406E:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4070:  BSF    F92.3
4072:  BTFSS  F80.3
4074:  BRA    4096
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4076:  MOVLW  1E
4078:  MOVLB  5
407A:  MOVWF  x02
407C:  MOVLB  0
407E:  CALL   0F98
4082:  MOVLW  01
4084:  MOVLB  4
4086:  MOVWF  xA2
4088:  MOVLB  5
408A:  CLRF   x02
408C:  MOVLB  0
408E:  CALL   1002
4092:  MOVLB  4
4094:  BSF    x95.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
4096:  BSF    F92.2
4098:  BTFSS  F80.2
409A:  BRA    40DC
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
409C:  CLRF   xC2
409E:  CLRF   xC3
40A0:  MOVLW  05
40A2:  MOVWF  xC4
40A4:  MOVLW  01
40A6:  MOVWF  xC5
40A8:  BSF    x95.5
40AA:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
40AC:  CLRF   xCA
40AE:  CLRF   xCB
40B0:  CLRF   xCC
40B2:  CLRF   xCD
40B4:  MOVLW  79
40B6:  MOVWF  xA5
40B8:  MOVLW  0E
40BA:  MOVWF  xA2
40BC:  MOVLW  04
40BE:  MOVLB  5
40C0:  MOVWF  x01
40C2:  MOVLW  AF
40C4:  MOVWF  x02
40C6:  MOVLB  0
40C8:  CALL   0F98
40CC:  MOVLB  5
40CE:  DECFSZ x01,F
40D0:  BRA    40C2
40D2:  CLRF   x02
40D4:  MOVLB  0
40D6:  CALL   1002
40DA:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
40DC:  MOVF   xA2,W
40DE:  SUBLW  07
40E0:  BTFSS  FD8.2
40E2:  BRA    4422
....................        
....................       if(visual==1) 
40E4:  BTFSS  x95.4
40E6:  BRA    423A
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
40E8:  MOVLW  01
40EA:  MOVLB  5
40EC:  MOVWF  x01
40EE:  MOVLB  0
40F0:  CALL   2078
....................          strcpy(Menus.Letra,"Tex & Ins"); 
40F4:  MOVLW  04
40F6:  MOVWF  FEA
40F8:  MOVLW  E1
40FA:  MOVWF  FE9
40FC:  MOVFF  FF2,501
4100:  BCF    FF2.7
4102:  MOVLW  00
4104:  CALL   0A9C
4108:  TBLRD*-
410A:  TBLRD*+
410C:  MOVF   FF5,W
410E:  MOVWF  FEE
4110:  IORLW  00
4112:  BNZ   410A
4114:  MOVLB  5
4116:  BTFSC  x01.7
4118:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
411A:  MOVLW  04
411C:  MOVWF  x02
411E:  MOVLW  E1
4120:  MOVWF  x01
4122:  CLRF   x03
4124:  CLRF   x04
4126:  MOVLW  01
4128:  MOVWF  x05
412A:  MOVLW  02
412C:  MOVWF  x06
412E:  MOVLB  0
4130:  CALL   1630
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
4134:  MOVLW  04
4136:  MOVWF  FEA
4138:  MOVLW  E1
413A:  MOVWF  FE9
413C:  MOVFF  FF2,501
4140:  BCF    FF2.7
4142:  MOVLW  00
4144:  CALL   0860
4148:  TBLRD*-
414A:  TBLRD*+
414C:  MOVF   FF5,W
414E:  MOVWF  FEE
4150:  IORLW  00
4152:  BNZ   414A
4154:  MOVLB  5
4156:  BTFSC  x01.7
4158:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
415A:  MOVLW  04
415C:  MOVWF  x02
415E:  MOVLW  E1
4160:  MOVWF  x01
4162:  CLRF   x03
4164:  MOVLW  37
4166:  MOVWF  x04
4168:  MOVLW  02
416A:  MOVWF  x05
416C:  MOVLW  01
416E:  MOVWF  x06
4170:  MOVLB  0
4172:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
4176:  MOVLW  04
4178:  MOVWF  FEA
417A:  MOVLW  E1
417C:  MOVWF  FE9
417E:  MOVFF  FF2,501
4182:  BCF    FF2.7
4184:  MOVLW  00
4186:  CALL   08E0
418A:  TBLRD*-
418C:  TBLRD*+
418E:  MOVF   FF5,W
4190:  MOVWF  FEE
4192:  IORLW  00
4194:  BNZ   418C
4196:  MOVLB  5
4198:  BTFSC  x01.7
419A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
419C:  MOVLW  04
419E:  MOVWF  x02
41A0:  MOVLW  E1
41A2:  MOVWF  x01
41A4:  CLRF   x03
41A6:  MOVLW  1A
41A8:  MOVWF  x04
41AA:  CLRF   x05
41AC:  MOVLW  01
41AE:  MOVWF  x06
41B0:  MOVLB  0
41B2:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
41B6:  MOVLW  04
41B8:  MOVWF  FEA
41BA:  MOVLW  E1
41BC:  MOVWF  FE9
41BE:  MOVFF  FF2,501
41C2:  BCF    FF2.7
41C4:  MOVLW  00
41C6:  CALL   090C
41CA:  TBLRD*-
41CC:  TBLRD*+
41CE:  MOVF   FF5,W
41D0:  MOVWF  FEE
41D2:  IORLW  00
41D4:  BNZ   41CC
41D6:  MOVLB  5
41D8:  BTFSC  x01.7
41DA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
41DC:  MOVLW  04
41DE:  MOVWF  x02
41E0:  MOVLW  E1
41E2:  MOVWF  x01
41E4:  CLRF   x03
41E6:  MOVLW  24
41E8:  MOVWF  x04
41EA:  CLRF   x05
41EC:  MOVLW  01
41EE:  MOVWF  x06
41F0:  MOVLB  0
41F2:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
41F6:  MOVLW  04
41F8:  MOVWF  FEA
41FA:  MOVLW  E1
41FC:  MOVWF  FE9
41FE:  MOVFF  FF2,501
4202:  BCF    FF2.7
4204:  MOVLW  00
4206:  CALL   0AC0
420A:  TBLRD*-
420C:  TBLRD*+
420E:  MOVF   FF5,W
4210:  MOVWF  FEE
4212:  IORLW  00
4214:  BNZ   420C
4216:  MOVLB  5
4218:  BTFSC  x01.7
421A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
421C:  MOVLW  04
421E:  MOVWF  x02
4220:  MOVLW  E1
4222:  MOVWF  x01
4224:  CLRF   x03
4226:  MOVLW  2E
4228:  MOVWF  x04
422A:  CLRF   x05
422C:  MOVLW  01
422E:  MOVWF  x06
4230:  MOVLB  0
4232:  CALL   1630
....................          visual=0; 
4236:  MOVLB  4
4238:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
423A:  BSF    F92.3
423C:  BTFSS  F80.3
423E:  BRA    4260
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4240:  MOVLW  1E
4242:  MOVLB  5
4244:  MOVWF  x02
4246:  MOVLB  0
4248:  CALL   0F98
424C:  MOVLW  01
424E:  MOVLB  4
4250:  MOVWF  xA2
4252:  MOVLB  5
4254:  CLRF   x02
4256:  MOVLB  0
4258:  CALL   1002
425C:  MOVLB  4
425E:  BSF    x95.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
4260:  BSF    F92.2
4262:  BTFSS  F80.2
4264:  BRA    4422
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
4266:  CLRF   xC2
4268:  CLRF   xC3
426A:  MOVLW  05
426C:  MOVWF  xC4
426E:  MOVLW  02
4270:  MOVWF  xC5
4272:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
4274:  CLRF   xCA
4276:  CLRF   xCB
4278:  CLRF   xCC
427A:  MOVLW  01
427C:  MOVWF  xCD
427E:  MOVLW  79
4280:  MOVWF  xA5
4282:  MOVLW  14
4284:  MOVWF  xA2
4286:  MOVLW  04
4288:  MOVLB  5
428A:  MOVWF  x01
428C:  MOVLW  AF
428E:  MOVWF  x02
4290:  MOVLB  0
4292:  CALL   0F98
4296:  MOVLB  5
4298:  DECFSZ x01,F
429A:  BRA    428C
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
429C:  MOVLW  14
429E:  MOVLB  4
42A0:  MOVWF  xA2
42A2:  MOVLW  0F
42A4:  MOVLB  5
42A6:  MOVWF  x13
42A8:  MOVLW  12
42AA:  MOVWF  x14
42AC:  MOVLW  1E
42AE:  MOVWF  x15
42B0:  MOVLW  35
42B2:  MOVWF  x16
42B4:  CLRF   x17
42B6:  MOVLW  01
42B8:  MOVWF  x18
42BA:  MOVLB  0
42BC:  CALL   156E
42C0:  MOVLB  4
42C2:  CLRF   xA9
42C4:  MOVLW  C0
42C6:  IORWF  FF2,F
42C8:  MOVLB  5
42CA:  CLRF   x02
42CC:  MOVLB  0
42CE:  CALL   1002
....................          strcpy(Menus.Letra,"Calentando"); 
42D2:  MOVLW  04
42D4:  MOVWF  FEA
42D6:  MOVLW  E1
42D8:  MOVWF  FE9
42DA:  MOVFF  FF2,501
42DE:  BCF    FF2.7
42E0:  MOVLW  00
42E2:  CALL   0966
42E6:  TBLRD*-
42E8:  TBLRD*+
42EA:  MOVF   FF5,W
42EC:  MOVWF  FEE
42EE:  IORLW  00
42F0:  BNZ   42E8
42F2:  MOVLB  5
42F4:  BTFSC  x01.7
42F6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
42F8:  MOVLW  04
42FA:  MOVWF  x02
42FC:  MOVLW  E1
42FE:  MOVWF  x01
4300:  CLRF   x03
4302:  MOVLW  37
4304:  MOVWF  x04
4306:  MOVLW  02
4308:  MOVWF  x05
430A:  MOVLW  01
430C:  MOVWF  x06
430E:  MOVLB  0
4310:  CALL   1630
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
4314:  MOVLW  0F
4316:  MOVLB  5
4318:  MOVWF  x13
431A:  MOVLW  12
431C:  MOVWF  x14
431E:  MOVLW  1E
4320:  MOVWF  x15
4322:  MOVLW  35
4324:  MOVWF  x16
4326:  CLRF   x17
4328:  MOVLW  01
432A:  MOVWF  x18
432C:  MOVLB  0
432E:  CALL   156E
....................          glcd_imagen(5); 
4332:  MOVLW  05
4334:  MOVLB  5
4336:  MOVWF  x01
4338:  MOVLB  0
433A:  CALL   2078
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
433E:  MOVLW  04
4340:  MOVWF  FEA
4342:  MOVLW  E1
4344:  MOVWF  FE9
4346:  MOVFF  FF2,501
434A:  BCF    FF2.7
434C:  MOVLW  00
434E:  CALL   098C
4352:  TBLRD*-
4354:  TBLRD*+
4356:  MOVF   FF5,W
4358:  MOVWF  FEE
435A:  IORLW  00
435C:  BNZ   4354
435E:  MOVLB  5
4360:  BTFSC  x01.7
4362:  BSF    FF2.7
4364:  MOVLW  04
4366:  MOVWF  x02
4368:  MOVLW  E1
436A:  MOVWF  x01
436C:  CLRF   x03
436E:  CLRF   x04
4370:  MOVLW  02
4372:  MOVWF  x05
4374:  MOVLW  01
4376:  MOVWF  x06
4378:  MOVLB  0
437A:  CALL   1630
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
437E:  MOVLW  04
4380:  MOVWF  FEA
4382:  MOVLW  E1
4384:  MOVWF  FE9
4386:  MOVFF  FF2,501
438A:  BCF    FF2.7
438C:  MOVLW  00
438E:  CALL   09AE
4392:  TBLRD*-
4394:  TBLRD*+
4396:  MOVF   FF5,W
4398:  MOVWF  FEE
439A:  IORLW  00
439C:  BNZ   4394
439E:  MOVLB  5
43A0:  BTFSC  x01.7
43A2:  BSF    FF2.7
43A4:  MOVLW  04
43A6:  MOVWF  x02
43A8:  MOVLW  E1
43AA:  MOVWF  x01
43AC:  CLRF   x03
43AE:  MOVLW  08
43B0:  MOVWF  x04
43B2:  MOVLW  02
43B4:  MOVWF  x05
43B6:  MOVLW  01
43B8:  MOVWF  x06
43BA:  MOVLB  0
43BC:  CALL   1630
....................          glcd_circle(95,40,2,NO,ON); 
43C0:  MOVLW  5F
43C2:  MOVLB  5
43C4:  MOVWF  x01
43C6:  MOVLW  28
43C8:  MOVWF  x02
43CA:  MOVLW  02
43CC:  MOVWF  x03
43CE:  CLRF   x04
43D0:  MOVLW  01
43D2:  MOVWF  x05
43D4:  MOVLB  0
43D6:  CALL   2174
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
43DA:  MOVLW  04
43DC:  MOVWF  FEA
43DE:  MOVLW  E1
43E0:  MOVWF  FE9
43E2:  MOVFF  FF2,501
43E6:  BCF    FF2.7
43E8:  MOVLW  00
43EA:  CALL   09D0
43EE:  TBLRD*-
43F0:  TBLRD*+
43F2:  MOVF   FF5,W
43F4:  MOVWF  FEE
43F6:  IORLW  00
43F8:  BNZ   43F0
43FA:  MOVLB  5
43FC:  BTFSC  x01.7
43FE:  BSF    FF2.7
4400:  MOVLW  04
4402:  MOVWF  x02
4404:  MOVLW  E1
4406:  MOVWF  x01
4408:  MOVLW  66
440A:  MOVWF  x03
440C:  MOVLW  28
440E:  MOVWF  x04
4410:  MOVLW  02
4412:  MOVWF  x05
4414:  MOVWF  x06
4416:  MOVLB  0
4418:  CALL   1630
....................          MuestraTiemposProgramados(); 
441C:  CALL   257C
4420:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
4422:  MOVF   xA2,W
4424:  SUBLW  08
4426:  BTFSS  FD8.2
4428:  BRA    4806
....................          
....................          if(visual==1) 
442A:  BTFSS  x95.4
442C:  BRA    4752
....................          { 
....................             if(Opcion>5) 
442E:  MOVF   xA7,W
4430:  SUBLW  05
4432:  BC    4438
....................             {Opcion=1;} 
4434:  MOVLW  01
4436:  MOVWF  xA7
....................             if(Opcion<1) 
4438:  MOVF   xA7,F
443A:  BNZ   4440
....................             {Opcion=5;} 
443C:  MOVLW  05
443E:  MOVWF  xA7
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
4440:  MOVLW  04
4442:  MOVWF  FEA
4444:  MOVLW  E1
4446:  MOVWF  FE9
4448:  MOVFF  FF2,501
444C:  BCF    FF2.7
444E:  MOVLW  00
4450:  MOVLB  0
4452:  CALL   0AEA
4456:  TBLRD*-
4458:  TBLRD*+
445A:  MOVF   FF5,W
445C:  MOVWF  FEE
445E:  IORLW  00
4460:  BNZ   4458
4462:  MOVLB  5
4464:  BTFSC  x01.7
4466:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4468:  MOVLW  04
446A:  MOVWF  x02
446C:  MOVLW  E1
446E:  MOVWF  x01
4470:  CLRF   x03
4472:  CLRF   x04
4474:  MOVLW  01
4476:  MOVWF  x05
4478:  MOVWF  x06
447A:  MOVLB  0
447C:  CALL   1630
....................        
....................             if(Opcion==1)    
4480:  MOVLB  4
4482:  DECFSZ xA7,W
4484:  BRA    44CC
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
4486:  MOVLW  04
4488:  MOVWF  FEA
448A:  MOVLW  E1
448C:  MOVWF  FE9
448E:  MOVFF  FF2,501
4492:  BCF    FF2.7
4494:  MOVLW  00
4496:  MOVLB  0
4498:  CALL   0B1A
449C:  TBLRD*-
449E:  TBLRD*+
44A0:  MOVF   FF5,W
44A2:  MOVWF  FEE
44A4:  IORLW  00
44A6:  BNZ   449E
44A8:  MOVLB  5
44AA:  BTFSC  x01.7
44AC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
44AE:  MOVLW  04
44B0:  MOVWF  x02
44B2:  MOVLW  E1
44B4:  MOVWF  x01
44B6:  CLRF   x03
44B8:  MOVLW  0A
44BA:  MOVWF  x04
44BC:  MOVLW  01
44BE:  MOVWF  x05
44C0:  MOVWF  x06
44C2:  MOVLB  0
44C4:  CALL   1630
....................             else 
44C8:  BRA    450E
44CA:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
44CC:  MOVLW  04
44CE:  MOVWF  FEA
44D0:  MOVLW  E1
44D2:  MOVWF  FE9
44D4:  MOVFF  FF2,501
44D8:  BCF    FF2.7
44DA:  MOVLW  00
44DC:  MOVLB  0
44DE:  CALL   0B1A
44E2:  TBLRD*-
44E4:  TBLRD*+
44E6:  MOVF   FF5,W
44E8:  MOVWF  FEE
44EA:  IORLW  00
44EC:  BNZ   44E4
44EE:  MOVLB  5
44F0:  BTFSC  x01.7
44F2:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
44F4:  MOVLW  04
44F6:  MOVWF  x02
44F8:  MOVLW  E1
44FA:  MOVWF  x01
44FC:  CLRF   x03
44FE:  MOVLW  0A
4500:  MOVWF  x04
4502:  CLRF   x05
4504:  MOVLW  01
4506:  MOVWF  x06
4508:  MOVLB  0
450A:  CALL   1630
....................              
....................             if(Opcion==2)    
450E:  MOVLB  4
4510:  MOVF   xA7,W
4512:  SUBLW  02
4514:  BNZ   455C
....................                {strcpy(Menus.Letra,"T. Secado"); 
4516:  MOVLW  04
4518:  MOVWF  FEA
451A:  MOVLW  E1
451C:  MOVWF  FE9
451E:  MOVFF  FF2,501
4522:  BCF    FF2.7
4524:  MOVLW  00
4526:  MOVLB  0
4528:  CALL   0B46
452C:  TBLRD*-
452E:  TBLRD*+
4530:  MOVF   FF5,W
4532:  MOVWF  FEE
4534:  IORLW  00
4536:  BNZ   452E
4538:  MOVLB  5
453A:  BTFSC  x01.7
453C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
453E:  MOVLW  04
4540:  MOVWF  x02
4542:  MOVLW  E1
4544:  MOVWF  x01
4546:  CLRF   x03
4548:  MOVLW  14
454A:  MOVWF  x04
454C:  MOVLW  01
454E:  MOVWF  x05
4550:  MOVWF  x06
4552:  MOVLB  0
4554:  CALL   1630
....................             else 
4558:  BRA    459E
455A:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
455C:  MOVLW  04
455E:  MOVWF  FEA
4560:  MOVLW  E1
4562:  MOVWF  FE9
4564:  MOVFF  FF2,501
4568:  BCF    FF2.7
456A:  MOVLW  00
456C:  MOVLB  0
456E:  CALL   0B46
4572:  TBLRD*-
4574:  TBLRD*+
4576:  MOVF   FF5,W
4578:  MOVWF  FEE
457A:  IORLW  00
457C:  BNZ   4574
457E:  MOVLB  5
4580:  BTFSC  x01.7
4582:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
4584:  MOVLW  04
4586:  MOVWF  x02
4588:  MOVLW  E1
458A:  MOVWF  x01
458C:  CLRF   x03
458E:  MOVLW  14
4590:  MOVWF  x04
4592:  CLRF   x05
4594:  MOVLW  01
4596:  MOVWF  x06
4598:  MOVLB  0
459A:  CALL   1630
....................                 
....................              if(Opcion==3)    
459E:  MOVLB  4
45A0:  MOVF   xA7,W
45A2:  SUBLW  03
45A4:  BNZ   45EC
....................                {strcpy(Menus.Letra,"Temperatura"); 
45A6:  MOVLW  04
45A8:  MOVWF  FEA
45AA:  MOVLW  E1
45AC:  MOVWF  FE9
45AE:  MOVFF  FF2,501
45B2:  BCF    FF2.7
45B4:  MOVLW  00
45B6:  MOVLB  0
45B8:  CALL   0B6A
45BC:  TBLRD*-
45BE:  TBLRD*+
45C0:  MOVF   FF5,W
45C2:  MOVWF  FEE
45C4:  IORLW  00
45C6:  BNZ   45BE
45C8:  MOVLB  5
45CA:  BTFSC  x01.7
45CC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
45CE:  MOVLW  04
45D0:  MOVWF  x02
45D2:  MOVLW  E1
45D4:  MOVWF  x01
45D6:  CLRF   x03
45D8:  MOVLW  1E
45DA:  MOVWF  x04
45DC:  MOVLW  01
45DE:  MOVWF  x05
45E0:  MOVWF  x06
45E2:  MOVLB  0
45E4:  CALL   1630
....................             else 
45E8:  BRA    462E
45EA:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
45EC:  MOVLW  04
45EE:  MOVWF  FEA
45F0:  MOVLW  E1
45F2:  MOVWF  FE9
45F4:  MOVFF  FF2,501
45F8:  BCF    FF2.7
45FA:  MOVLW  00
45FC:  MOVLB  0
45FE:  CALL   0B6A
4602:  TBLRD*-
4604:  TBLRD*+
4606:  MOVF   FF5,W
4608:  MOVWF  FEE
460A:  IORLW  00
460C:  BNZ   4604
460E:  MOVLB  5
4610:  BTFSC  x01.7
4612:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
4614:  MOVLW  04
4616:  MOVWF  x02
4618:  MOVLW  E1
461A:  MOVWF  x01
461C:  CLRF   x03
461E:  MOVLW  1E
4620:  MOVWF  x04
4622:  CLRF   x05
4624:  MOVLW  01
4626:  MOVWF  x06
4628:  MOVLB  0
462A:  CALL   1630
....................                 
....................             if(Opcion==4)    
462E:  MOVLB  4
4630:  MOVF   xA7,W
4632:  SUBLW  04
4634:  BNZ   467C
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4636:  MOVLW  04
4638:  MOVWF  FEA
463A:  MOVLW  E1
463C:  MOVWF  FE9
463E:  MOVFF  FF2,501
4642:  BCF    FF2.7
4644:  MOVLW  00
4646:  MOVLB  0
4648:  CALL   0B90
464C:  TBLRD*-
464E:  TBLRD*+
4650:  MOVF   FF5,W
4652:  MOVWF  FEE
4654:  IORLW  00
4656:  BNZ   464E
4658:  MOVLB  5
465A:  BTFSC  x01.7
465C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
465E:  MOVLW  04
4660:  MOVWF  x02
4662:  MOVLW  E1
4664:  MOVWF  x01
4666:  CLRF   x03
4668:  MOVLW  28
466A:  MOVWF  x04
466C:  MOVLW  01
466E:  MOVWF  x05
4670:  MOVWF  x06
4672:  MOVLB  0
4674:  CALL   1630
....................             else 
4678:  BRA    46BE
467A:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
467C:  MOVLW  04
467E:  MOVWF  FEA
4680:  MOVLW  E1
4682:  MOVWF  FE9
4684:  MOVFF  FF2,501
4688:  BCF    FF2.7
468A:  MOVLW  00
468C:  MOVLB  0
468E:  CALL   0B90
4692:  TBLRD*-
4694:  TBLRD*+
4696:  MOVF   FF5,W
4698:  MOVWF  FEE
469A:  IORLW  00
469C:  BNZ   4694
469E:  MOVLB  5
46A0:  BTFSC  x01.7
46A2:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
46A4:  MOVLW  04
46A6:  MOVWF  x02
46A8:  MOVLW  E1
46AA:  MOVWF  x01
46AC:  CLRF   x03
46AE:  MOVLW  28
46B0:  MOVWF  x04
46B2:  CLRF   x05
46B4:  MOVLW  01
46B6:  MOVWF  x06
46B8:  MOVLB  0
46BA:  CALL   1630
....................                 
....................             if(Opcion==5)    
46BE:  MOVLB  4
46C0:  MOVF   xA7,W
46C2:  SUBLW  05
46C4:  BNZ   470C
....................                {strcpy(Menus.Letra,"Continuar"); 
46C6:  MOVLW  04
46C8:  MOVWF  FEA
46CA:  MOVLW  E1
46CC:  MOVWF  FE9
46CE:  MOVFF  FF2,501
46D2:  BCF    FF2.7
46D4:  MOVLW  00
46D6:  MOVLB  0
46D8:  CALL   0BBC
46DC:  TBLRD*-
46DE:  TBLRD*+
46E0:  MOVF   FF5,W
46E2:  MOVWF  FEE
46E4:  IORLW  00
46E6:  BNZ   46DE
46E8:  MOVLB  5
46EA:  BTFSC  x01.7
46EC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
46EE:  MOVLW  04
46F0:  MOVWF  x02
46F2:  MOVLW  E1
46F4:  MOVWF  x01
46F6:  CLRF   x03
46F8:  MOVLW  32
46FA:  MOVWF  x04
46FC:  MOVLW  01
46FE:  MOVWF  x05
4700:  MOVWF  x06
4702:  MOVLB  0
4704:  CALL   1630
....................             else 
4708:  BRA    474E
470A:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
470C:  MOVLW  04
470E:  MOVWF  FEA
4710:  MOVLW  E1
4712:  MOVWF  FE9
4714:  MOVFF  FF2,501
4718:  BCF    FF2.7
471A:  MOVLW  00
471C:  MOVLB  0
471E:  CALL   0BBC
4722:  TBLRD*-
4724:  TBLRD*+
4726:  MOVF   FF5,W
4728:  MOVWF  FEE
472A:  IORLW  00
472C:  BNZ   4724
472E:  MOVLB  5
4730:  BTFSC  x01.7
4732:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
4734:  MOVLW  04
4736:  MOVWF  x02
4738:  MOVLW  E1
473A:  MOVWF  x01
473C:  CLRF   x03
473E:  MOVLW  32
4740:  MOVWF  x04
4742:  CLRF   x05
4744:  MOVLW  01
4746:  MOVWF  x06
4748:  MOVLB  0
474A:  CALL   1630
....................                           
....................             visual=0; 
474E:  MOVLB  4
4750:  BCF    x95.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
4752:  BSF    F92.0
4754:  BTFSS  F80.0
4756:  BRA    4772
....................          {  if(Flanco == 0)  
4758:  BTFSC  x95.0
475A:  BRA    4770
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
475C:  BSF    x95.0
475E:  MOVLW  1E
4760:  MOVLB  5
4762:  MOVWF  x02
4764:  MOVLB  0
4766:  CALL   0F98
476A:  MOVLB  4
476C:  DECF   xA7,F
476E:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4770:  BRA    4774
....................                {Flanco = 0;} 
4772:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4774:  BSF    F92.1
4776:  BTFSS  F80.1
4778:  BRA    4794
....................          {  if(Flanco2 == 0)  
477A:  BTFSC  x95.2
477C:  BRA    4792
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
477E:  BSF    x95.2
4780:  MOVLW  1E
4782:  MOVLB  5
4784:  MOVWF  x02
4786:  MOVLB  0
4788:  CALL   0F98
478C:  MOVLB  4
478E:  INCF   xA7,F
4790:  BSF    x95.4
....................                }      
....................          } 
....................             else 
4792:  BRA    4796
....................                {Flanco2 = 0;}   
4794:  BCF    x95.2
....................                 
....................          if(RIGHT)//Si oprime SET 
4796:  BSF    F92.2
4798:  BTFSS  F80.2
479A:  BRA    47D4
....................          {  if(Flanco1 == 0)  
479C:  BTFSC  x95.1
479E:  BRA    47D2
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
47A0:  BSF    x95.1
47A2:  MOVLW  02
47A4:  MOVLB  5
47A6:  MOVWF  x01
47A8:  MOVLW  96
47AA:  MOVWF  x02
47AC:  MOVLB  0
47AE:  CALL   0F98
47B2:  MOVLB  5
47B4:  DECFSZ x01,F
47B6:  BRA    47A8
47B8:  MOVLW  0A
47BA:  MOVLB  4
47BC:  ADDWF  xA7,W
47BE:  MOVWF  xA2
47C0:  MOVLW  01
47C2:  MOVWF  xA7
47C4:  MOVLB  5
47C6:  CLRF   x02
47C8:  MOVLB  0
47CA:  CALL   1002
47CE:  MOVLB  4
47D0:  BSF    x95.4
....................                } 
....................          } 
....................             else 
47D2:  BRA    47D6
....................                {Flanco1 = 0;}   
47D4:  BCF    x95.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
47D6:  BSF    F92.3
47D8:  BTFSS  F80.3
47DA:  BRA    4806
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
47DC:  MOVLW  04
47DE:  MOVLB  5
47E0:  MOVWF  x01
47E2:  MOVLW  AF
47E4:  MOVWF  x02
47E6:  MOVLB  0
47E8:  CALL   0F98
47EC:  MOVLB  5
47EE:  DECFSZ x01,F
47F0:  BRA    47E2
47F2:  MOVLW  01
47F4:  MOVLB  4
47F6:  MOVWF  xA2
47F8:  MOVLB  5
47FA:  CLRF   x02
47FC:  MOVLB  0
47FE:  CALL   1002
4802:  MOVLB  4
4804:  BSF    x95.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
4806:  MOVF   xA2,W
4808:  SUBLW  09
480A:  BTFSS  FD8.2
480C:  BRA    4CC2
....................          
....................       strcpy(Menus.Letra,"Clave"); 
480E:  MOVLW  04
4810:  MOVWF  FEA
4812:  MOVLW  E1
4814:  MOVWF  FE9
4816:  MOVFF  FF2,501
481A:  BCF    FF2.7
481C:  MOVLW  00
481E:  MOVLB  0
4820:  CALL   0758
4824:  TBLRD*-
4826:  TBLRD*+
4828:  MOVF   FF5,W
482A:  MOVWF  FEE
482C:  IORLW  00
482E:  BNZ   4826
4830:  MOVLB  5
4832:  BTFSC  x01.7
4834:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4836:  MOVLW  04
4838:  MOVWF  x02
483A:  MOVLW  E1
483C:  MOVWF  x01
483E:  MOVLW  1E
4840:  MOVWF  x03
4842:  CLRF   x04
4844:  MOVLW  01
4846:  MOVWF  x05
4848:  MOVLW  02
484A:  MOVWF  x06
484C:  MOVLB  0
484E:  CALL   1630
....................        
....................       if(unidad==1) 
4852:  MOVLB  4
4854:  DECFSZ xA3,W
4856:  BRA    48B6
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4858:  MOVFF  4CE,503
485C:  MOVLW  14
485E:  MOVLB  5
4860:  MOVWF  x04
4862:  MOVLW  1E
4864:  MOVWF  x05
4866:  MOVLW  01
4868:  MOVWF  x06
486A:  MOVLB  0
486C:  CALL   185E
....................          displayContrasena(Contrasena[1],40,30,0); 
4870:  MOVFF  4CF,503
4874:  MOVLW  28
4876:  MOVLB  5
4878:  MOVWF  x04
487A:  MOVLW  1E
487C:  MOVWF  x05
487E:  CLRF   x06
4880:  MOVLB  0
4882:  CALL   185E
....................          displayContrasena(Contrasena[2],60,30,0); 
4886:  MOVFF  4D0,503
488A:  MOVLW  3C
488C:  MOVLB  5
488E:  MOVWF  x04
4890:  MOVLW  1E
4892:  MOVWF  x05
4894:  CLRF   x06
4896:  MOVLB  0
4898:  CALL   185E
....................          displayContrasena(Contrasena[3],80,30,0); 
489C:  MOVFF  4D1,503
48A0:  MOVLW  50
48A2:  MOVLB  5
48A4:  MOVWF  x04
48A6:  MOVLW  1E
48A8:  MOVWF  x05
48AA:  CLRF   x06
48AC:  MOVLB  0
48AE:  CALL   185E
....................       } 
....................       else 
48B2:  BRA    49DE
48B4:  MOVLB  4
....................       { 
....................          if(unidad==2) 
48B6:  MOVF   xA3,W
48B8:  SUBLW  02
48BA:  BNZ   491A
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
48BC:  MOVFF  4CE,503
48C0:  MOVLW  14
48C2:  MOVLB  5
48C4:  MOVWF  x04
48C6:  MOVLW  1E
48C8:  MOVWF  x05
48CA:  CLRF   x06
48CC:  MOVLB  0
48CE:  CALL   185E
....................             displayContrasena(Contrasena[1],40,30,1); 
48D2:  MOVFF  4CF,503
48D6:  MOVLW  28
48D8:  MOVLB  5
48DA:  MOVWF  x04
48DC:  MOVLW  1E
48DE:  MOVWF  x05
48E0:  MOVLW  01
48E2:  MOVWF  x06
48E4:  MOVLB  0
48E6:  CALL   185E
....................             displayContrasena(Contrasena[2],60,30,0); 
48EA:  MOVFF  4D0,503
48EE:  MOVLW  3C
48F0:  MOVLB  5
48F2:  MOVWF  x04
48F4:  MOVLW  1E
48F6:  MOVWF  x05
48F8:  CLRF   x06
48FA:  MOVLB  0
48FC:  CALL   185E
....................             displayContrasena(Contrasena[3],80,30,0); 
4900:  MOVFF  4D1,503
4904:  MOVLW  50
4906:  MOVLB  5
4908:  MOVWF  x04
490A:  MOVLW  1E
490C:  MOVWF  x05
490E:  CLRF   x06
4910:  MOVLB  0
4912:  CALL   185E
....................          } 
....................          else 
4916:  BRA    49DE
4918:  MOVLB  4
....................          { 
....................             if(unidad==3) 
491A:  MOVF   xA3,W
491C:  SUBLW  03
491E:  BNZ   497E
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4920:  MOVFF  4CE,503
4924:  MOVLW  14
4926:  MOVLB  5
4928:  MOVWF  x04
492A:  MOVLW  1E
492C:  MOVWF  x05
492E:  CLRF   x06
4930:  MOVLB  0
4932:  CALL   185E
....................                displayContrasena(Contrasena[1],40,30,0); 
4936:  MOVFF  4CF,503
493A:  MOVLW  28
493C:  MOVLB  5
493E:  MOVWF  x04
4940:  MOVLW  1E
4942:  MOVWF  x05
4944:  CLRF   x06
4946:  MOVLB  0
4948:  CALL   185E
....................                displayContrasena(Contrasena[2],60,30,1); 
494C:  MOVFF  4D0,503
4950:  MOVLW  3C
4952:  MOVLB  5
4954:  MOVWF  x04
4956:  MOVLW  1E
4958:  MOVWF  x05
495A:  MOVLW  01
495C:  MOVWF  x06
495E:  MOVLB  0
4960:  CALL   185E
....................                displayContrasena(Contrasena[3],80,30,0); 
4964:  MOVFF  4D1,503
4968:  MOVLW  50
496A:  MOVLB  5
496C:  MOVWF  x04
496E:  MOVLW  1E
4970:  MOVWF  x05
4972:  CLRF   x06
4974:  MOVLB  0
4976:  CALL   185E
....................             } 
....................             else 
497A:  BRA    49DE
497C:  MOVLB  4
....................             { 
....................                if(unidad==4) 
497E:  MOVF   xA3,W
4980:  SUBLW  04
4982:  BNZ   49E0
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4984:  MOVFF  4CE,503
4988:  MOVLW  14
498A:  MOVLB  5
498C:  MOVWF  x04
498E:  MOVLW  1E
4990:  MOVWF  x05
4992:  CLRF   x06
4994:  MOVLB  0
4996:  CALL   185E
....................                   displayContrasena(Contrasena[1],40,30,0); 
499A:  MOVFF  4CF,503
499E:  MOVLW  28
49A0:  MOVLB  5
49A2:  MOVWF  x04
49A4:  MOVLW  1E
49A6:  MOVWF  x05
49A8:  CLRF   x06
49AA:  MOVLB  0
49AC:  CALL   185E
....................                   displayContrasena(Contrasena[2],60,30,0); 
49B0:  MOVFF  4D0,503
49B4:  MOVLW  3C
49B6:  MOVLB  5
49B8:  MOVWF  x04
49BA:  MOVLW  1E
49BC:  MOVWF  x05
49BE:  CLRF   x06
49C0:  MOVLB  0
49C2:  CALL   185E
....................                   displayContrasena(Contrasena[3],80,30,1); 
49C6:  MOVFF  4D1,503
49CA:  MOVLW  50
49CC:  MOVLB  5
49CE:  MOVWF  x04
49D0:  MOVLW  1E
49D2:  MOVWF  x05
49D4:  MOVLW  01
49D6:  MOVWF  x06
49D8:  MOVLB  0
49DA:  CALL   185E
49DE:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
49E0:  BSF    F92.0
49E2:  BTFSS  F80.0
49E4:  BRA    4A4E
....................       { 
....................          if(Flanco == 0) 
49E6:  BTFSC  x95.0
49E8:  BRA    4A4C
....................          { 
....................             Flanco = 1;delay_ms(30); 
49EA:  BSF    x95.0
49EC:  MOVLW  1E
49EE:  MOVLB  5
49F0:  MOVWF  x02
49F2:  MOVLB  0
49F4:  CALL   0F98
....................             for(i=1;i<=4;i++) 
49F8:  MOVLW  01
49FA:  MOVLB  4
49FC:  MOVWF  xA4
49FE:  MOVF   xA4,W
4A00:  SUBLW  04
4A02:  BNC   4A4C
....................             { 
....................                if(unidad==i) 
4A04:  MOVF   xA4,W
4A06:  SUBWF  xA3,W
4A08:  BNZ   4A48
....................                { 
....................                   Contrasena[i-1]++; 
4A0A:  MOVLW  01
4A0C:  SUBWF  xA4,W
4A0E:  CLRF   03
4A10:  ADDLW  CE
4A12:  MOVWF  FE9
4A14:  MOVLW  04
4A16:  ADDWFC 03,W
4A18:  MOVWF  FEA
4A1A:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4A1C:  MOVLW  01
4A1E:  SUBWF  xA4,W
4A20:  CLRF   03
4A22:  ADDLW  CE
4A24:  MOVWF  FE9
4A26:  MOVLW  04
4A28:  ADDWFC 03,W
4A2A:  MOVWF  FEA
4A2C:  BTFSC  FEF.7
4A2E:  BRA    4A48
4A30:  MOVF   FEF,W
4A32:  SUBLW  09
4A34:  BC    4A48
....................                   { 
....................                      Contrasena[i-1]=0; 
4A36:  MOVLW  01
4A38:  SUBWF  xA4,W
4A3A:  CLRF   03
4A3C:  ADDLW  CE
4A3E:  MOVWF  FE9
4A40:  MOVLW  04
4A42:  ADDWFC 03,W
4A44:  MOVWF  FEA
4A46:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4A48:  INCF   xA4,F
4A4A:  BRA    49FE
....................          } 
....................       } 
....................       else 
4A4C:  BRA    4A50
....................       { 
....................          Flanco = 0; 
4A4E:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4A50:  BSF    F92.1
4A52:  BTFSS  F80.1
4A54:  BRA    4ABC
....................       { 
....................          if(Flanco2 == 0) 
4A56:  BTFSC  x95.2
4A58:  BRA    4ABA
....................             {Flanco2 = 1;delay_ms(30); 
4A5A:  BSF    x95.2
4A5C:  MOVLW  1E
4A5E:  MOVLB  5
4A60:  MOVWF  x02
4A62:  MOVLB  0
4A64:  CALL   0F98
....................                for(i=1;i<=4;i++) 
4A68:  MOVLW  01
4A6A:  MOVLB  4
4A6C:  MOVWF  xA4
4A6E:  MOVF   xA4,W
4A70:  SUBLW  04
4A72:  BNC   4ABA
....................                { 
....................                   if(unidad==i) 
4A74:  MOVF   xA4,W
4A76:  SUBWF  xA3,W
4A78:  BNZ   4AB6
....................                   {Contrasena[i-1]--;  
4A7A:  MOVLW  01
4A7C:  SUBWF  xA4,W
4A7E:  CLRF   03
4A80:  ADDLW  CE
4A82:  MOVWF  FE9
4A84:  MOVLW  04
4A86:  ADDWFC 03,W
4A88:  MOVWF  FEA
4A8A:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4A8C:  MOVLW  01
4A8E:  SUBWF  xA4,W
4A90:  CLRF   03
4A92:  ADDLW  CE
4A94:  MOVWF  FE9
4A96:  MOVLW  04
4A98:  ADDWFC 03,W
4A9A:  MOVWF  FEA
4A9C:  BTFSC  FEF.7
4A9E:  BRA    4AA2
4AA0:  BRA    4AB6
....................                         {Contrasena[i-1]=9;} 
4AA2:  MOVLW  01
4AA4:  SUBWF  xA4,W
4AA6:  CLRF   03
4AA8:  ADDLW  CE
4AAA:  MOVWF  FE9
4AAC:  MOVLW  04
4AAE:  ADDWFC 03,W
4AB0:  MOVWF  FEA
4AB2:  MOVLW  09
4AB4:  MOVWF  FEF
....................                   } 
....................                }       
4AB6:  INCF   xA4,F
4AB8:  BRA    4A6E
....................             }      
....................       } 
....................       else 
4ABA:  BRA    4ABE
....................       { 
....................          Flanco2 = 0; 
4ABC:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4ABE:  BSF    F92.2
4AC0:  BTFSS  F80.2
4AC2:  BRA    4AE6
....................       { 
....................          if(Flanco1 == 0) 
4AC4:  BTFSC  x95.1
4AC6:  BRA    4AE4
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4AC8:  BSF    x95.1
4ACA:  MOVLW  02
4ACC:  MOVLB  5
4ACE:  MOVWF  x01
4AD0:  MOVLW  96
4AD2:  MOVWF  x02
4AD4:  MOVLB  0
4AD6:  CALL   0F98
4ADA:  MOVLB  5
4ADC:  DECFSZ x01,F
4ADE:  BRA    4AD0
4AE0:  MOVLB  4
4AE2:  INCF   xA3,F
....................       } 
....................       else 
4AE4:  BRA    4AE8
....................       { 
....................          Flanco1 = 0; 
4AE6:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4AE8:  BSF    F92.3
4AEA:  BTFSS  F80.3
4AEC:  BRA    4B16
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4AEE:  MOVLW  04
4AF0:  MOVLB  5
4AF2:  MOVWF  x01
4AF4:  MOVLW  AF
4AF6:  MOVWF  x02
4AF8:  MOVLB  0
4AFA:  CALL   0F98
4AFE:  MOVLB  5
4B00:  DECFSZ x01,F
4B02:  BRA    4AF4
4B04:  MOVLW  01
4B06:  MOVLB  4
4B08:  MOVWF  xA2
4B0A:  MOVLB  5
4B0C:  CLRF   x02
4B0E:  MOVLB  0
4B10:  CALL   1002
4B14:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4B16:  MOVF   xA3,W
4B18:  SUBLW  04
4B1A:  BTFSC  FD8.0
4B1C:  BRA    4CC2
....................       {glcd_fillScreen(OFF); 
4B1E:  MOVLB  5
4B20:  CLRF   x02
4B22:  MOVLB  0
4B24:  CALL   1002
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4B28:  MOVLB  4
4B2A:  MOVF   xD2,W
4B2C:  SUBWF  xCE,W
4B2E:  BNZ   4C00
4B30:  MOVF   xD3,W
4B32:  SUBWF  xCF,W
4B34:  BNZ   4C00
4B36:  MOVF   xD4,W
4B38:  SUBWF  xD0,W
4B3A:  BNZ   4C00
4B3C:  MOVF   xD5,W
4B3E:  SUBWF  xD1,W
4B40:  BNZ   4C00
....................          { 
....................             glcd_fillScreen(OFF); 
4B42:  MOVLB  5
4B44:  CLRF   x02
4B46:  MOVLB  0
4B48:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
4B4C:  MOVLW  04
4B4E:  MOVWF  FEA
4B50:  MOVLW  E1
4B52:  MOVWF  FE9
4B54:  MOVFF  FF2,501
4B58:  BCF    FF2.7
4B5A:  MOVLW  00
4B5C:  CALL   0758
4B60:  TBLRD*-
4B62:  TBLRD*+
4B64:  MOVF   FF5,W
4B66:  MOVWF  FEE
4B68:  IORLW  00
4B6A:  BNZ   4B62
4B6C:  MOVLB  5
4B6E:  BTFSC  x01.7
4B70:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4B72:  MOVLW  04
4B74:  MOVWF  x02
4B76:  MOVLW  E1
4B78:  MOVWF  x01
4B7A:  MOVLW  1E
4B7C:  MOVWF  x03
4B7E:  CLRF   x04
4B80:  CLRF   x05
4B82:  MOVLW  02
4B84:  MOVWF  x06
4B86:  MOVLB  0
4B88:  CALL   1630
....................             strcpy(Menus.Letra,"Correcta"); 
4B8C:  MOVLW  04
4B8E:  MOVWF  FEA
4B90:  MOVLW  E1
4B92:  MOVWF  FE9
4B94:  MOVFF  FF2,501
4B98:  BCF    FF2.7
4B9A:  MOVLW  00
4B9C:  CALL   0778
4BA0:  TBLRD*-
4BA2:  TBLRD*+
4BA4:  MOVF   FF5,W
4BA6:  MOVWF  FEE
4BA8:  IORLW  00
4BAA:  BNZ   4BA2
4BAC:  MOVLB  5
4BAE:  BTFSC  x01.7
4BB0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4BB2:  MOVLW  04
4BB4:  MOVWF  x02
4BB6:  MOVLW  E1
4BB8:  MOVWF  x01
4BBA:  MOVLW  0F
4BBC:  MOVWF  x03
4BBE:  MOVLW  1E
4BC0:  MOVWF  x04
4BC2:  CLRF   x05
4BC4:  MOVLW  02
4BC6:  MOVWF  x06
4BC8:  MOVLB  0
4BCA:  CALL   1630
....................             Menu=91;glcd_update();delay_ms(1000); 
4BCE:  MOVLW  5B
4BD0:  MOVLB  4
4BD2:  MOVWF  xA2
4BD4:  MOVLB  0
4BD6:  CALL   105C
4BDA:  MOVLW  04
4BDC:  MOVLB  5
4BDE:  MOVWF  x01
4BE0:  MOVLW  FA
4BE2:  MOVWF  x02
4BE4:  MOVLB  0
4BE6:  CALL   0F98
4BEA:  MOVLB  5
4BEC:  DECFSZ x01,F
4BEE:  BRA    4BE0
....................             glcd_fillScreen(OFF);unidad=1; 
4BF0:  CLRF   x02
4BF2:  MOVLB  0
4BF4:  CALL   1002
4BF8:  MOVLW  01
4BFA:  MOVLB  4
4BFC:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4BFE:  BRA    4CC2
....................          { 
....................             glcd_fillScreen(OFF); 
4C00:  MOVLB  5
4C02:  CLRF   x02
4C04:  MOVLB  0
4C06:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
4C0A:  MOVLW  04
4C0C:  MOVWF  FEA
4C0E:  MOVLW  E1
4C10:  MOVWF  FE9
4C12:  MOVFF  FF2,501
4C16:  BCF    FF2.7
4C18:  MOVLW  00
4C1A:  CALL   0758
4C1E:  TBLRD*-
4C20:  TBLRD*+
4C22:  MOVF   FF5,W
4C24:  MOVWF  FEE
4C26:  IORLW  00
4C28:  BNZ   4C20
4C2A:  MOVLB  5
4C2C:  BTFSC  x01.7
4C2E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4C30:  MOVLW  04
4C32:  MOVWF  x02
4C34:  MOVLW  E1
4C36:  MOVWF  x01
4C38:  MOVLW  1E
4C3A:  MOVWF  x03
4C3C:  CLRF   x04
4C3E:  CLRF   x05
4C40:  MOVLW  02
4C42:  MOVWF  x06
4C44:  MOVLB  0
4C46:  CALL   1630
....................             strcpy(Menus.Letra,"Incorrecta"); 
4C4A:  MOVLW  04
4C4C:  MOVWF  FEA
4C4E:  MOVLW  E1
4C50:  MOVWF  FE9
4C52:  MOVFF  FF2,501
4C56:  BCF    FF2.7
4C58:  MOVLW  00
4C5A:  CALL   079C
4C5E:  TBLRD*-
4C60:  TBLRD*+
4C62:  MOVF   FF5,W
4C64:  MOVWF  FEE
4C66:  IORLW  00
4C68:  BNZ   4C60
4C6A:  MOVLB  5
4C6C:  BTFSC  x01.7
4C6E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4C70:  MOVLW  04
4C72:  MOVWF  x02
4C74:  MOVLW  E1
4C76:  MOVWF  x01
4C78:  CLRF   x03
4C7A:  MOVLW  1E
4C7C:  MOVWF  x04
4C7E:  CLRF   x05
4C80:  MOVLW  02
4C82:  MOVWF  x06
4C84:  MOVLB  0
4C86:  CALL   1630
....................             Menu=1;glcd_update();delay_ms(1000); 
4C8A:  MOVLW  01
4C8C:  MOVLB  4
4C8E:  MOVWF  xA2
4C90:  MOVLB  0
4C92:  CALL   105C
4C96:  MOVLW  04
4C98:  MOVLB  5
4C9A:  MOVWF  x01
4C9C:  MOVLW  FA
4C9E:  MOVWF  x02
4CA0:  MOVLB  0
4CA2:  CALL   0F98
4CA6:  MOVLB  5
4CA8:  DECFSZ x01,F
4CAA:  BRA    4C9C
....................             glcd_fillScreen(OFF);unidad=1; 
4CAC:  CLRF   x02
4CAE:  MOVLB  0
4CB0:  CALL   1002
4CB4:  MOVLW  01
4CB6:  MOVLB  4
4CB8:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4CBA:  CLRF   xCE
4CBC:  CLRF   xCF
4CBE:  CLRF   xD0
4CC0:  CLRF   xD1
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4CC2:  MOVF   xA2,W
4CC4:  SUBLW  5B
4CC6:  BTFSS  FD8.2
4CC8:  BRA    50A2
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4CCA:  MOVLW  04
4CCC:  MOVWF  FEA
4CCE:  MOVLW  E1
4CD0:  MOVWF  FE9
4CD2:  MOVFF  FF2,501
4CD6:  BCF    FF2.7
4CD8:  MOVLW  00
4CDA:  MOVLB  0
4CDC:  CALL   0BE0
4CE0:  TBLRD*-
4CE2:  TBLRD*+
4CE4:  MOVF   FF5,W
4CE6:  MOVWF  FEE
4CE8:  IORLW  00
4CEA:  BNZ   4CE2
4CEC:  MOVLB  5
4CEE:  BTFSC  x01.7
4CF0:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4CF2:  MOVLW  04
4CF4:  MOVWF  x02
4CF6:  MOVLW  E1
4CF8:  MOVWF  x01
4CFA:  CLRF   x03
4CFC:  CLRF   x04
4CFE:  MOVLW  01
4D00:  MOVWF  x05
4D02:  MOVLW  02
4D04:  MOVWF  x06
4D06:  MOVLB  0
4D08:  CALL   1630
....................        
....................       if(unidad==1) 
4D0C:  MOVLB  4
4D0E:  DECFSZ xA3,W
4D10:  BRA    4D70
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4D12:  MOVFF  4D2,503
4D16:  MOVLW  14
4D18:  MOVLB  5
4D1A:  MOVWF  x04
4D1C:  MOVLW  1E
4D1E:  MOVWF  x05
4D20:  MOVLW  01
4D22:  MOVWF  x06
4D24:  MOVLB  0
4D26:  CALL   185E
....................          displayContrasena(Password[1],40,30,0); 
4D2A:  MOVFF  4D3,503
4D2E:  MOVLW  28
4D30:  MOVLB  5
4D32:  MOVWF  x04
4D34:  MOVLW  1E
4D36:  MOVWF  x05
4D38:  CLRF   x06
4D3A:  MOVLB  0
4D3C:  CALL   185E
....................          displayContrasena(Password[2],60,30,0); 
4D40:  MOVFF  4D4,503
4D44:  MOVLW  3C
4D46:  MOVLB  5
4D48:  MOVWF  x04
4D4A:  MOVLW  1E
4D4C:  MOVWF  x05
4D4E:  CLRF   x06
4D50:  MOVLB  0
4D52:  CALL   185E
....................          displayContrasena(Password[3],80,30,0); 
4D56:  MOVFF  4D5,503
4D5A:  MOVLW  50
4D5C:  MOVLB  5
4D5E:  MOVWF  x04
4D60:  MOVLW  1E
4D62:  MOVWF  x05
4D64:  CLRF   x06
4D66:  MOVLB  0
4D68:  CALL   185E
....................       } 
....................       else 
4D6C:  BRA    4E98
4D6E:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4D70:  MOVF   xA3,W
4D72:  SUBLW  02
4D74:  BNZ   4DD4
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4D76:  MOVFF  4D2,503
4D7A:  MOVLW  14
4D7C:  MOVLB  5
4D7E:  MOVWF  x04
4D80:  MOVLW  1E
4D82:  MOVWF  x05
4D84:  CLRF   x06
4D86:  MOVLB  0
4D88:  CALL   185E
....................             displayContrasena(Password[1],40,30,1); 
4D8C:  MOVFF  4D3,503
4D90:  MOVLW  28
4D92:  MOVLB  5
4D94:  MOVWF  x04
4D96:  MOVLW  1E
4D98:  MOVWF  x05
4D9A:  MOVLW  01
4D9C:  MOVWF  x06
4D9E:  MOVLB  0
4DA0:  CALL   185E
....................             displayContrasena(Password[2],60,30,0); 
4DA4:  MOVFF  4D4,503
4DA8:  MOVLW  3C
4DAA:  MOVLB  5
4DAC:  MOVWF  x04
4DAE:  MOVLW  1E
4DB0:  MOVWF  x05
4DB2:  CLRF   x06
4DB4:  MOVLB  0
4DB6:  CALL   185E
....................             displayContrasena(Password[3],80,30,0); 
4DBA:  MOVFF  4D5,503
4DBE:  MOVLW  50
4DC0:  MOVLB  5
4DC2:  MOVWF  x04
4DC4:  MOVLW  1E
4DC6:  MOVWF  x05
4DC8:  CLRF   x06
4DCA:  MOVLB  0
4DCC:  CALL   185E
....................          } 
....................          else 
4DD0:  BRA    4E98
4DD2:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4DD4:  MOVF   xA3,W
4DD6:  SUBLW  03
4DD8:  BNZ   4E38
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4DDA:  MOVFF  4D2,503
4DDE:  MOVLW  14
4DE0:  MOVLB  5
4DE2:  MOVWF  x04
4DE4:  MOVLW  1E
4DE6:  MOVWF  x05
4DE8:  CLRF   x06
4DEA:  MOVLB  0
4DEC:  CALL   185E
....................                displayContrasena(Password[1],40,30,0); 
4DF0:  MOVFF  4D3,503
4DF4:  MOVLW  28
4DF6:  MOVLB  5
4DF8:  MOVWF  x04
4DFA:  MOVLW  1E
4DFC:  MOVWF  x05
4DFE:  CLRF   x06
4E00:  MOVLB  0
4E02:  CALL   185E
....................                displayContrasena(Password[2],60,30,1); 
4E06:  MOVFF  4D4,503
4E0A:  MOVLW  3C
4E0C:  MOVLB  5
4E0E:  MOVWF  x04
4E10:  MOVLW  1E
4E12:  MOVWF  x05
4E14:  MOVLW  01
4E16:  MOVWF  x06
4E18:  MOVLB  0
4E1A:  CALL   185E
....................                displayContrasena(Password[3],80,30,0); 
4E1E:  MOVFF  4D5,503
4E22:  MOVLW  50
4E24:  MOVLB  5
4E26:  MOVWF  x04
4E28:  MOVLW  1E
4E2A:  MOVWF  x05
4E2C:  CLRF   x06
4E2E:  MOVLB  0
4E30:  CALL   185E
....................             } 
....................             else 
4E34:  BRA    4E98
4E36:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4E38:  MOVF   xA3,W
4E3A:  SUBLW  04
4E3C:  BNZ   4E9A
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4E3E:  MOVFF  4D2,503
4E42:  MOVLW  14
4E44:  MOVLB  5
4E46:  MOVWF  x04
4E48:  MOVLW  1E
4E4A:  MOVWF  x05
4E4C:  CLRF   x06
4E4E:  MOVLB  0
4E50:  CALL   185E
....................                   displayContrasena(Password[1],40,30,0); 
4E54:  MOVFF  4D3,503
4E58:  MOVLW  28
4E5A:  MOVLB  5
4E5C:  MOVWF  x04
4E5E:  MOVLW  1E
4E60:  MOVWF  x05
4E62:  CLRF   x06
4E64:  MOVLB  0
4E66:  CALL   185E
....................                   displayContrasena(Password[2],60,30,0); 
4E6A:  MOVFF  4D4,503
4E6E:  MOVLW  3C
4E70:  MOVLB  5
4E72:  MOVWF  x04
4E74:  MOVLW  1E
4E76:  MOVWF  x05
4E78:  CLRF   x06
4E7A:  MOVLB  0
4E7C:  CALL   185E
....................                   displayContrasena(Password[3],80,30,1); 
4E80:  MOVFF  4D5,503
4E84:  MOVLW  50
4E86:  MOVLB  5
4E88:  MOVWF  x04
4E8A:  MOVLW  1E
4E8C:  MOVWF  x05
4E8E:  MOVLW  01
4E90:  MOVWF  x06
4E92:  MOVLB  0
4E94:  CALL   185E
4E98:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4E9A:  BSF    F92.0
4E9C:  BTFSS  F80.0
4E9E:  BRA    4F08
....................       { 
....................          if(Flanco == 0) 
4EA0:  BTFSC  x95.0
4EA2:  BRA    4F06
....................          { 
....................             Flanco = 1;delay_ms(30); 
4EA4:  BSF    x95.0
4EA6:  MOVLW  1E
4EA8:  MOVLB  5
4EAA:  MOVWF  x02
4EAC:  MOVLB  0
4EAE:  CALL   0F98
....................             for(i=1;i<=4;i++) 
4EB2:  MOVLW  01
4EB4:  MOVLB  4
4EB6:  MOVWF  xA4
4EB8:  MOVF   xA4,W
4EBA:  SUBLW  04
4EBC:  BNC   4F06
....................             { 
....................                if(unidad==i) 
4EBE:  MOVF   xA4,W
4EC0:  SUBWF  xA3,W
4EC2:  BNZ   4F02
....................                { 
....................                   Password[i-1]++; 
4EC4:  MOVLW  01
4EC6:  SUBWF  xA4,W
4EC8:  CLRF   03
4ECA:  ADDLW  D2
4ECC:  MOVWF  FE9
4ECE:  MOVLW  04
4ED0:  ADDWFC 03,W
4ED2:  MOVWF  FEA
4ED4:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4ED6:  MOVLW  01
4ED8:  SUBWF  xA4,W
4EDA:  CLRF   03
4EDC:  ADDLW  D2
4EDE:  MOVWF  FE9
4EE0:  MOVLW  04
4EE2:  ADDWFC 03,W
4EE4:  MOVWF  FEA
4EE6:  BTFSC  FEF.7
4EE8:  BRA    4F02
4EEA:  MOVF   FEF,W
4EEC:  SUBLW  09
4EEE:  BC    4F02
....................                   { 
....................                      Password[i-1]=0; 
4EF0:  MOVLW  01
4EF2:  SUBWF  xA4,W
4EF4:  CLRF   03
4EF6:  ADDLW  D2
4EF8:  MOVWF  FE9
4EFA:  MOVLW  04
4EFC:  ADDWFC 03,W
4EFE:  MOVWF  FEA
4F00:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4F02:  INCF   xA4,F
4F04:  BRA    4EB8
....................          } 
....................       } 
....................       else 
4F06:  BRA    4F0A
....................       { 
....................          Flanco = 0; 
4F08:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4F0A:  BSF    F92.1
4F0C:  BTFSS  F80.1
4F0E:  BRA    4F76
....................       { 
....................          if(Flanco2 == 0) 
4F10:  BTFSC  x95.2
4F12:  BRA    4F74
....................             {Flanco2 = 1;delay_ms(30); 
4F14:  BSF    x95.2
4F16:  MOVLW  1E
4F18:  MOVLB  5
4F1A:  MOVWF  x02
4F1C:  MOVLB  0
4F1E:  CALL   0F98
....................                for(i=1;i<=4;i++) 
4F22:  MOVLW  01
4F24:  MOVLB  4
4F26:  MOVWF  xA4
4F28:  MOVF   xA4,W
4F2A:  SUBLW  04
4F2C:  BNC   4F74
....................                { 
....................                   if(unidad==i) 
4F2E:  MOVF   xA4,W
4F30:  SUBWF  xA3,W
4F32:  BNZ   4F70
....................                   { 
....................                      Password[i-1]--; 
4F34:  MOVLW  01
4F36:  SUBWF  xA4,W
4F38:  CLRF   03
4F3A:  ADDLW  D2
4F3C:  MOVWF  FE9
4F3E:  MOVLW  04
4F40:  ADDWFC 03,W
4F42:  MOVWF  FEA
4F44:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4F46:  MOVLW  01
4F48:  SUBWF  xA4,W
4F4A:  CLRF   03
4F4C:  ADDLW  D2
4F4E:  MOVWF  FE9
4F50:  MOVLW  04
4F52:  ADDWFC 03,W
4F54:  MOVWF  FEA
4F56:  BTFSC  FEF.7
4F58:  BRA    4F5C
4F5A:  BRA    4F70
....................                      { 
....................                         Password[i-1]=9; 
4F5C:  MOVLW  01
4F5E:  SUBWF  xA4,W
4F60:  CLRF   03
4F62:  ADDLW  D2
4F64:  MOVWF  FE9
4F66:  MOVLW  04
4F68:  ADDWFC 03,W
4F6A:  MOVWF  FEA
4F6C:  MOVLW  09
4F6E:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
4F70:  INCF   xA4,F
4F72:  BRA    4F28
....................             }      
....................       } 
....................       else 
4F74:  BRA    4F78
....................       { 
....................          Flanco2 = 0; 
4F76:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4F78:  BSF    F92.2
4F7A:  BTFSS  F80.2
4F7C:  BRA    4FA0
....................       { 
....................          if(Flanco1 == 0) 
4F7E:  BTFSC  x95.1
4F80:  BRA    4F9E
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4F82:  BSF    x95.1
4F84:  MOVLW  02
4F86:  MOVLB  5
4F88:  MOVWF  x01
4F8A:  MOVLW  96
4F8C:  MOVWF  x02
4F8E:  MOVLB  0
4F90:  CALL   0F98
4F94:  MOVLB  5
4F96:  DECFSZ x01,F
4F98:  BRA    4F8A
4F9A:  MOVLB  4
4F9C:  INCF   xA3,F
....................       } 
....................       else 
4F9E:  BRA    4FA2
....................       { 
....................          Flanco1 = 0; 
4FA0:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4FA2:  BSF    F92.3
4FA4:  BTFSS  F80.3
4FA6:  BRA    4FD0
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4FA8:  MOVLW  04
4FAA:  MOVLB  5
4FAC:  MOVWF  x01
4FAE:  MOVLW  AF
4FB0:  MOVWF  x02
4FB2:  MOVLB  0
4FB4:  CALL   0F98
4FB8:  MOVLB  5
4FBA:  DECFSZ x01,F
4FBC:  BRA    4FAE
4FBE:  MOVLW  01
4FC0:  MOVLB  4
4FC2:  MOVWF  xA2
4FC4:  MOVLB  5
4FC6:  CLRF   x02
4FC8:  MOVLB  0
4FCA:  CALL   1002
4FCE:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4FD0:  MOVF   xA3,W
4FD2:  SUBLW  04
4FD4:  BC    50A2
....................       { 
....................          Opcion=1;unidad=1; 
4FD6:  MOVLW  01
4FD8:  MOVWF  xA7
4FDA:  MOVWF  xA3
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
4FDC:  MOVLW  0A
4FDE:  MOVWF  FA9
4FE0:  MOVFF  4D2,FA8
4FE4:  BCF    FA6.6
4FE6:  BCF    FA6.7
4FE8:  BSF    FA6.2
4FEA:  MOVF   FF2,W
4FEC:  MOVWF  00
4FEE:  BCF    FF2.7
4FF0:  MOVLB  F
4FF2:  MOVLW  55
4FF4:  MOVWF  FA7
4FF6:  MOVLW  AA
4FF8:  MOVWF  FA7
4FFA:  BSF    FA6.1
4FFC:  BTFSC  FA6.1
4FFE:  BRA    4FFC
5000:  BCF    FA6.2
5002:  MOVF   00,W
5004:  IORWF  FF2,F
5006:  MOVLW  0B
5008:  MOVWF  FA9
500A:  MOVFF  4D3,FA8
500E:  BCF    FA6.6
5010:  BCF    FA6.7
5012:  BSF    FA6.2
5014:  MOVF   FF2,W
5016:  MOVWF  00
5018:  BCF    FF2.7
501A:  MOVLW  55
501C:  MOVWF  FA7
501E:  MOVLW  AA
5020:  MOVWF  FA7
5022:  BSF    FA6.1
5024:  BTFSC  FA6.1
5026:  BRA    5024
5028:  BCF    FA6.2
502A:  MOVF   00,W
502C:  IORWF  FF2,F
502E:  MOVLW  0C
5030:  MOVWF  FA9
5032:  MOVFF  4D4,FA8
5036:  BCF    FA6.6
5038:  BCF    FA6.7
503A:  BSF    FA6.2
503C:  MOVF   FF2,W
503E:  MOVWF  00
5040:  BCF    FF2.7
5042:  MOVLW  55
5044:  MOVWF  FA7
5046:  MOVLW  AA
5048:  MOVWF  FA7
504A:  BSF    FA6.1
504C:  BTFSC  FA6.1
504E:  BRA    504C
5050:  BCF    FA6.2
5052:  MOVF   00,W
5054:  IORWF  FF2,F
5056:  MOVLW  0D
5058:  MOVWF  FA9
505A:  MOVFF  4D5,FA8
505E:  BCF    FA6.6
5060:  BCF    FA6.7
5062:  BSF    FA6.2
5064:  MOVF   FF2,W
5066:  MOVWF  00
5068:  BCF    FF2.7
506A:  MOVLW  55
506C:  MOVWF  FA7
506E:  MOVLW  AA
5070:  MOVWF  FA7
5072:  BSF    FA6.1
5074:  BTFSC  FA6.1
5076:  BRA    5074
5078:  BCF    FA6.2
507A:  MOVF   00,W
507C:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
507E:  MOVLW  04
5080:  MOVLB  5
5082:  MOVWF  x01
5084:  MOVLW  FA
5086:  MOVWF  x02
5088:  MOVLB  0
508A:  CALL   0F98
508E:  MOVLB  5
5090:  DECFSZ x01,F
5092:  BRA    5084
5094:  CLRF   x02
5096:  MOVLB  0
5098:  CALL   1002
509C:  MOVLW  01
509E:  MOVLB  4
50A0:  MOVWF  xA2
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
50A2:  MOVF   xA2,W
50A4:  SUBLW  0B
50A6:  BTFSS  FD8.2
50A8:  BRA    53AA
....................       
....................       if(visual==1) 
50AA:  BTFSS  x95.4
50AC:  BRA    5238
....................       { 
....................          if(unidad<1) 
50AE:  MOVF   xA3,F
50B0:  BNZ   50B6
....................          {unidad=4;} 
50B2:  MOVLW  04
50B4:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
50B6:  MOVLW  04
50B8:  MOVWF  FEA
50BA:  MOVLW  E1
50BC:  MOVWF  FE9
50BE:  MOVFF  FF2,501
50C2:  BCF    FF2.7
50C4:  MOVLW  00
50C6:  MOVLB  0
50C8:  CALL   0C06
50CC:  TBLRD*-
50CE:  TBLRD*+
50D0:  MOVF   FF5,W
50D2:  MOVWF  FEE
50D4:  IORLW  00
50D6:  BNZ   50CE
50D8:  MOVLB  5
50DA:  BTFSC  x01.7
50DC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
50DE:  MOVLW  04
50E0:  MOVWF  x02
50E2:  MOVLW  E1
50E4:  MOVWF  x01
50E6:  CLRF   x03
50E8:  CLRF   x04
50EA:  MOVLW  01
50EC:  MOVWF  x05
50EE:  MOVLW  02
50F0:  MOVWF  x06
50F2:  MOVLB  0
50F4:  CALL   1630
....................           
....................          if(unidad==4) 
50F8:  MOVLB  4
50FA:  MOVF   xA3,W
50FC:  SUBLW  04
50FE:  BNZ   511E
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
5100:  MOVFF  4C5,502
5104:  MOVLW  14
5106:  MOVLB  5
5108:  MOVWF  x03
510A:  MOVLW  28
510C:  MOVWF  x04
510E:  MOVLW  01
5110:  MOVWF  x05
5112:  MOVLW  02
5114:  MOVWF  x06
5116:  MOVLB  0
5118:  CALL   2424
....................          else 
511C:  BRA    5138
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
511E:  MOVFF  4C5,502
5122:  MOVLW  14
5124:  MOVLB  5
5126:  MOVWF  x03
5128:  MOVLW  28
512A:  MOVWF  x04
512C:  CLRF   x05
512E:  MOVLW  02
5130:  MOVWF  x06
5132:  MOVLB  0
5134:  CALL   2424
....................           
....................          if(unidad==3) 
5138:  MOVLB  4
513A:  MOVF   xA3,W
513C:  SUBLW  03
513E:  BNZ   515C
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
5140:  MOVFF  4C4,502
5144:  MOVLW  28
5146:  MOVLB  5
5148:  MOVWF  x03
514A:  MOVWF  x04
514C:  MOVLW  01
514E:  MOVWF  x05
5150:  MOVLW  02
5152:  MOVWF  x06
5154:  MOVLB  0
5156:  CALL   2424
....................          else 
515A:  BRA    5174
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
515C:  MOVFF  4C4,502
5160:  MOVLW  28
5162:  MOVLB  5
5164:  MOVWF  x03
5166:  MOVWF  x04
5168:  CLRF   x05
516A:  MOVLW  02
516C:  MOVWF  x06
516E:  MOVLB  0
5170:  CALL   2424
....................           
....................          if(unidad==2) 
5174:  MOVLB  4
5176:  MOVF   xA3,W
5178:  SUBLW  02
517A:  BNZ   519A
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
517C:  MOVFF  4C3,502
5180:  MOVLW  46
5182:  MOVLB  5
5184:  MOVWF  x03
5186:  MOVLW  28
5188:  MOVWF  x04
518A:  MOVLW  01
518C:  MOVWF  x05
518E:  MOVLW  02
5190:  MOVWF  x06
5192:  MOVLB  0
5194:  CALL   2424
....................          else 
5198:  BRA    51B4
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
519A:  MOVFF  4C3,502
519E:  MOVLW  46
51A0:  MOVLB  5
51A2:  MOVWF  x03
51A4:  MOVLW  28
51A6:  MOVWF  x04
51A8:  CLRF   x05
51AA:  MOVLW  02
51AC:  MOVWF  x06
51AE:  MOVLB  0
51B0:  CALL   2424
....................           
....................          if(unidad==1) 
51B4:  MOVLB  4
51B6:  DECFSZ xA3,W
51B8:  BRA    51D8
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
51BA:  MOVFF  4C2,502
51BE:  MOVLW  5A
51C0:  MOVLB  5
51C2:  MOVWF  x03
51C4:  MOVLW  28
51C6:  MOVWF  x04
51C8:  MOVLW  01
51CA:  MOVWF  x05
51CC:  MOVLW  02
51CE:  MOVWF  x06
51D0:  MOVLB  0
51D2:  CALL   2424
....................          else 
51D6:  BRA    51F2
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
51D8:  MOVFF  4C2,502
51DC:  MOVLW  5A
51DE:  MOVLB  5
51E0:  MOVWF  x03
51E2:  MOVLW  28
51E4:  MOVWF  x04
51E6:  CLRF   x05
51E8:  MOVLW  02
51EA:  MOVWF  x06
51EC:  MOVLB  0
51EE:  CALL   2424
....................           
....................          strcpy(Menus.Letra,":"); 
51F2:  MOVLW  04
51F4:  MOVWF  FEA
51F6:  MOVLW  E1
51F8:  MOVWF  FE9
51FA:  MOVFF  FF2,501
51FE:  BCF    FF2.7
5200:  MOVLW  00
5202:  CALL   06BE
5206:  TBLRD*-
5208:  TBLRD*+
520A:  MOVF   FF5,W
520C:  MOVWF  FEE
520E:  IORLW  00
5210:  BNZ   5208
5212:  MOVLB  5
5214:  BTFSC  x01.7
5216:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
5218:  MOVLW  04
521A:  MOVWF  x02
521C:  MOVLW  E1
521E:  MOVWF  x01
5220:  MOVLW  3C
5222:  MOVWF  x03
5224:  MOVLW  2A
5226:  MOVWF  x04
5228:  MOVLW  02
522A:  MOVWF  x05
522C:  MOVWF  x06
522E:  MOVLB  0
5230:  CALL   1630
....................           
....................          visual=0; 
5234:  MOVLB  4
5236:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5238:  BSF    F92.0
523A:  BTFSS  F80.0
523C:  BRA    527A
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
523E:  MOVLW  01
5240:  SUBWF  xA3,W
5242:  CLRF   03
5244:  ADDLW  C2
5246:  MOVWF  FE9
5248:  MOVLW  04
524A:  ADDWFC 03,W
524C:  MOVWF  FEA
524E:  BTFSC  FEF.7
5250:  BRA    5258
5252:  MOVF   FEF,W
5254:  SUBLW  08
5256:  BNC   527A
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
5258:  MOVLW  1E
525A:  MOVLB  5
525C:  MOVWF  x02
525E:  MOVLB  0
5260:  CALL   0F98
5264:  MOVLW  01
5266:  MOVLB  4
5268:  SUBWF  xA3,W
526A:  CLRF   03
526C:  ADDLW  C2
526E:  MOVWF  FE9
5270:  MOVLW  04
5272:  ADDWFC 03,W
5274:  MOVWF  FEA
5276:  INCF   FEF,F
5278:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
527A:  BSF    F92.1
527C:  BTFSS  F80.1
527E:  BRA    52BC
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
5280:  MOVLW  01
5282:  SUBWF  xA3,W
5284:  CLRF   03
5286:  ADDLW  C2
5288:  MOVWF  FE9
528A:  MOVLW  04
528C:  ADDWFC 03,W
528E:  MOVWF  FEA
5290:  BTFSC  FEF.7
5292:  BRA    52BC
5294:  MOVF   FEF,W
5296:  SUBLW  00
5298:  BC    52BC
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
529A:  MOVLW  1E
529C:  MOVLB  5
529E:  MOVWF  x02
52A0:  MOVLB  0
52A2:  CALL   0F98
52A6:  MOVLW  01
52A8:  MOVLB  4
52AA:  SUBWF  xA3,W
52AC:  CLRF   03
52AE:  ADDLW  C2
52B0:  MOVWF  FE9
52B2:  MOVLW  04
52B4:  ADDWFC 03,W
52B6:  MOVWF  FEA
52B8:  DECF   FEF,F
52BA:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
52BC:  BSF    F92.2
52BE:  BTFSS  F80.2
52C0:  BRA    52D4
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
52C2:  MOVLW  1E
52C4:  MOVLB  5
52C6:  MOVWF  x02
52C8:  MOVLB  0
52CA:  CALL   0F98
52CE:  MOVLB  4
52D0:  DECF   xA3,F
52D2:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
52D4:  BSF    F92.3
52D6:  BTFSS  F80.3
52D8:  BRA    53AA
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
52DA:  MOVLW  04
52DC:  MOVLB  5
52DE:  MOVWF  x01
52E0:  MOVLW  AF
52E2:  MOVWF  x02
52E4:  MOVLB  0
52E6:  CALL   0F98
52EA:  MOVLB  5
52EC:  DECFSZ x01,F
52EE:  BRA    52E0
52F0:  MOVLW  08
52F2:  MOVLB  4
52F4:  MOVWF  xA2
52F6:  MOVLB  5
52F8:  CLRF   x02
52FA:  MOVLB  0
52FC:  CALL   1002
5300:  MOVLW  01
5302:  MOVLB  4
5304:  MOVWF  xA7
5306:  BSF    x95.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
5308:  CLRF   FA9
530A:  MOVFF  4C2,FA8
530E:  BCF    FA6.6
5310:  BCF    FA6.7
5312:  BSF    FA6.2
5314:  MOVF   FF2,W
5316:  MOVWF  00
5318:  BCF    FF2.7
531A:  MOVLB  F
531C:  MOVLW  55
531E:  MOVWF  FA7
5320:  MOVLW  AA
5322:  MOVWF  FA7
5324:  BSF    FA6.1
5326:  BTFSC  FA6.1
5328:  BRA    5326
532A:  BCF    FA6.2
532C:  MOVF   00,W
532E:  IORWF  FF2,F
5330:  MOVLW  01
5332:  MOVWF  FA9
5334:  MOVFF  4C3,FA8
5338:  BCF    FA6.6
533A:  BCF    FA6.7
533C:  BSF    FA6.2
533E:  MOVF   FF2,W
5340:  MOVWF  00
5342:  BCF    FF2.7
5344:  MOVLW  55
5346:  MOVWF  FA7
5348:  MOVLW  AA
534A:  MOVWF  FA7
534C:  BSF    FA6.1
534E:  BTFSC  FA6.1
5350:  BRA    534E
5352:  BCF    FA6.2
5354:  MOVF   00,W
5356:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
5358:  MOVLW  02
535A:  MOVWF  FA9
535C:  MOVFF  4C4,FA8
5360:  BCF    FA6.6
5362:  BCF    FA6.7
5364:  BSF    FA6.2
5366:  MOVFF  FF2,00
536A:  BCF    FF2.7
536C:  MOVLW  55
536E:  MOVWF  FA7
5370:  MOVLW  AA
5372:  MOVWF  FA7
5374:  BSF    FA6.1
5376:  BTFSC  FA6.1
5378:  BRA    5376
537A:  BCF    FA6.2
537C:  MOVF   00,W
537E:  IORWF  FF2,F
5380:  MOVLW  03
5382:  MOVWF  FA9
5384:  MOVFF  4C5,FA8
5388:  BCF    FA6.6
538A:  BCF    FA6.7
538C:  BSF    FA6.2
538E:  MOVFF  FF2,00
5392:  BCF    FF2.7
5394:  MOVLW  55
5396:  MOVWF  FA7
5398:  MOVLW  AA
539A:  MOVWF  FA7
539C:  BSF    FA6.1
539E:  BTFSC  FA6.1
53A0:  BRA    539E
53A2:  BCF    FA6.2
53A4:  MOVF   00,W
53A6:  IORWF  FF2,F
53A8:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
53AA:  MOVF   xA2,W
53AC:  SUBLW  0C
53AE:  BTFSS  FD8.2
53B0:  BRA    56B4
....................       
....................       if(visual==1) 
53B2:  BTFSS  x95.4
53B4:  BRA    5540
....................       { 
....................          if(unidad<1) 
53B6:  MOVF   xA3,F
53B8:  BNZ   53BE
....................          {unidad=4;} 
53BA:  MOVLW  04
53BC:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra," Secado"); 
53BE:  MOVLW  04
53C0:  MOVWF  FEA
53C2:  MOVLW  E1
53C4:  MOVWF  FE9
53C6:  MOVFF  FF2,501
53CA:  BCF    FF2.7
53CC:  MOVLW  00
53CE:  MOVLB  0
53D0:  CALL   0C2A
53D4:  TBLRD*-
53D6:  TBLRD*+
53D8:  MOVF   FF5,W
53DA:  MOVWF  FEE
53DC:  IORLW  00
53DE:  BNZ   53D6
53E0:  MOVLB  5
53E2:  BTFSC  x01.7
53E4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
53E6:  MOVLW  04
53E8:  MOVWF  x02
53EA:  MOVLW  E1
53EC:  MOVWF  x01
53EE:  CLRF   x03
53F0:  CLRF   x04
53F2:  MOVLW  01
53F4:  MOVWF  x05
53F6:  MOVLW  02
53F8:  MOVWF  x06
53FA:  MOVLB  0
53FC:  CALL   1630
....................           
....................          if(unidad==4) 
5400:  MOVLB  4
5402:  MOVF   xA3,W
5404:  SUBLW  04
5406:  BNZ   5426
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
5408:  MOVFF  4CD,502
540C:  MOVLW  14
540E:  MOVLB  5
5410:  MOVWF  x03
5412:  MOVLW  28
5414:  MOVWF  x04
5416:  MOVLW  01
5418:  MOVWF  x05
541A:  MOVLW  02
541C:  MOVWF  x06
541E:  MOVLB  0
5420:  CALL   2424
....................          else 
5424:  BRA    5440
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
5426:  MOVFF  4CD,502
542A:  MOVLW  14
542C:  MOVLB  5
542E:  MOVWF  x03
5430:  MOVLW  28
5432:  MOVWF  x04
5434:  CLRF   x05
5436:  MOVLW  02
5438:  MOVWF  x06
543A:  MOVLB  0
543C:  CALL   2424
....................           
....................          if(unidad==3) 
5440:  MOVLB  4
5442:  MOVF   xA3,W
5444:  SUBLW  03
5446:  BNZ   5464
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
5448:  MOVFF  4CC,502
544C:  MOVLW  28
544E:  MOVLB  5
5450:  MOVWF  x03
5452:  MOVWF  x04
5454:  MOVLW  01
5456:  MOVWF  x05
5458:  MOVLW  02
545A:  MOVWF  x06
545C:  MOVLB  0
545E:  CALL   2424
....................          else 
5462:  BRA    547C
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
5464:  MOVFF  4CC,502
5468:  MOVLW  28
546A:  MOVLB  5
546C:  MOVWF  x03
546E:  MOVWF  x04
5470:  CLRF   x05
5472:  MOVLW  02
5474:  MOVWF  x06
5476:  MOVLB  0
5478:  CALL   2424
....................           
....................          if(unidad==2) 
547C:  MOVLB  4
547E:  MOVF   xA3,W
5480:  SUBLW  02
5482:  BNZ   54A2
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
5484:  MOVFF  4CB,502
5488:  MOVLW  46
548A:  MOVLB  5
548C:  MOVWF  x03
548E:  MOVLW  28
5490:  MOVWF  x04
5492:  MOVLW  01
5494:  MOVWF  x05
5496:  MOVLW  02
5498:  MOVWF  x06
549A:  MOVLB  0
549C:  CALL   2424
....................          else 
54A0:  BRA    54BC
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
54A2:  MOVFF  4CB,502
54A6:  MOVLW  46
54A8:  MOVLB  5
54AA:  MOVWF  x03
54AC:  MOVLW  28
54AE:  MOVWF  x04
54B0:  CLRF   x05
54B2:  MOVLW  02
54B4:  MOVWF  x06
54B6:  MOVLB  0
54B8:  CALL   2424
....................           
....................          if(unidad==1) 
54BC:  MOVLB  4
54BE:  DECFSZ xA3,W
54C0:  BRA    54E0
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
54C2:  MOVFF  4CA,502
54C6:  MOVLW  5A
54C8:  MOVLB  5
54CA:  MOVWF  x03
54CC:  MOVLW  28
54CE:  MOVWF  x04
54D0:  MOVLW  01
54D2:  MOVWF  x05
54D4:  MOVLW  02
54D6:  MOVWF  x06
54D8:  MOVLB  0
54DA:  CALL   2424
....................          else 
54DE:  BRA    54FA
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
54E0:  MOVFF  4CA,502
54E4:  MOVLW  5A
54E6:  MOVLB  5
54E8:  MOVWF  x03
54EA:  MOVLW  28
54EC:  MOVWF  x04
54EE:  CLRF   x05
54F0:  MOVLW  02
54F2:  MOVWF  x06
54F4:  MOVLB  0
54F6:  CALL   2424
....................           
....................          strcpy(Menus.Letra,":"); 
54FA:  MOVLW  04
54FC:  MOVWF  FEA
54FE:  MOVLW  E1
5500:  MOVWF  FE9
5502:  MOVFF  FF2,501
5506:  BCF    FF2.7
5508:  MOVLW  00
550A:  CALL   06BE
550E:  TBLRD*-
5510:  TBLRD*+
5512:  MOVF   FF5,W
5514:  MOVWF  FEE
5516:  IORLW  00
5518:  BNZ   5510
551A:  MOVLB  5
551C:  BTFSC  x01.7
551E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
5520:  MOVLW  04
5522:  MOVWF  x02
5524:  MOVLW  E1
5526:  MOVWF  x01
5528:  MOVLW  3C
552A:  MOVWF  x03
552C:  MOVLW  2A
552E:  MOVWF  x04
5530:  MOVLW  02
5532:  MOVWF  x05
5534:  MOVWF  x06
5536:  MOVLB  0
5538:  CALL   1630
....................           
....................          visual=0; 
553C:  MOVLB  4
553E:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5540:  BSF    F92.0
5542:  BTFSS  F80.0
5544:  BRA    5582
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
5546:  MOVLW  01
5548:  SUBWF  xA3,W
554A:  CLRF   03
554C:  ADDLW  CA
554E:  MOVWF  FE9
5550:  MOVLW  04
5552:  ADDWFC 03,W
5554:  MOVWF  FEA
5556:  BTFSC  FEF.7
5558:  BRA    5560
555A:  MOVF   FEF,W
555C:  SUBLW  08
555E:  BNC   5582
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
5560:  MOVLW  1E
5562:  MOVLB  5
5564:  MOVWF  x02
5566:  MOVLB  0
5568:  CALL   0F98
556C:  MOVLW  01
556E:  MOVLB  4
5570:  SUBWF  xA3,W
5572:  CLRF   03
5574:  ADDLW  CA
5576:  MOVWF  FE9
5578:  MOVLW  04
557A:  ADDWFC 03,W
557C:  MOVWF  FEA
557E:  INCF   FEF,F
5580:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5582:  BSF    F92.1
5584:  BTFSS  F80.1
5586:  BRA    55C4
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
5588:  MOVLW  01
558A:  SUBWF  xA3,W
558C:  CLRF   03
558E:  ADDLW  CA
5590:  MOVWF  FE9
5592:  MOVLW  04
5594:  ADDWFC 03,W
5596:  MOVWF  FEA
5598:  BTFSC  FEF.7
559A:  BRA    55C4
559C:  MOVF   FEF,W
559E:  SUBLW  00
55A0:  BC    55C4
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
55A2:  MOVLW  1E
55A4:  MOVLB  5
55A6:  MOVWF  x02
55A8:  MOVLB  0
55AA:  CALL   0F98
55AE:  MOVLW  01
55B0:  MOVLB  4
55B2:  SUBWF  xA3,W
55B4:  CLRF   03
55B6:  ADDLW  CA
55B8:  MOVWF  FE9
55BA:  MOVLW  04
55BC:  ADDWFC 03,W
55BE:  MOVWF  FEA
55C0:  DECF   FEF,F
55C2:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
55C4:  BSF    F92.2
55C6:  BTFSS  F80.2
55C8:  BRA    55DC
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
55CA:  MOVLW  1E
55CC:  MOVLB  5
55CE:  MOVWF  x02
55D0:  MOVLB  0
55D2:  CALL   0F98
55D6:  MOVLB  4
55D8:  DECF   xA3,F
55DA:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
55DC:  BSF    F92.3
55DE:  BTFSS  F80.3
55E0:  BRA    56B4
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
55E2:  MOVLW  04
55E4:  MOVLB  5
55E6:  MOVWF  x01
55E8:  MOVLW  AF
55EA:  MOVWF  x02
55EC:  MOVLB  0
55EE:  CALL   0F98
55F2:  MOVLB  5
55F4:  DECFSZ x01,F
55F6:  BRA    55E8
55F8:  MOVLW  08
55FA:  MOVLB  4
55FC:  MOVWF  xA2
55FE:  MOVLB  5
5600:  CLRF   x02
5602:  MOVLB  0
5604:  CALL   1002
5608:  MOVLW  01
560A:  MOVLB  4
560C:  MOVWF  xA7
560E:  BSF    x95.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
5610:  MOVLW  04
5612:  MOVWF  FA9
5614:  MOVFF  4CA,FA8
5618:  BCF    FA6.6
561A:  BCF    FA6.7
561C:  BSF    FA6.2
561E:  MOVF   FF2,W
5620:  MOVWF  00
5622:  BCF    FF2.7
5624:  MOVLB  F
5626:  MOVLW  55
5628:  MOVWF  FA7
562A:  MOVLW  AA
562C:  MOVWF  FA7
562E:  BSF    FA6.1
5630:  BTFSC  FA6.1
5632:  BRA    5630
5634:  BCF    FA6.2
5636:  MOVF   00,W
5638:  IORWF  FF2,F
563A:  MOVLW  05
563C:  MOVWF  FA9
563E:  MOVFF  4CB,FA8
5642:  BCF    FA6.6
5644:  BCF    FA6.7
5646:  BSF    FA6.2
5648:  MOVF   FF2,W
564A:  MOVWF  00
564C:  BCF    FF2.7
564E:  MOVLW  55
5650:  MOVWF  FA7
5652:  MOVLW  AA
5654:  MOVWF  FA7
5656:  BSF    FA6.1
5658:  BTFSC  FA6.1
565A:  BRA    5658
565C:  BCF    FA6.2
565E:  MOVF   00,W
5660:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
5662:  MOVLW  06
5664:  MOVWF  FA9
5666:  MOVFF  4CC,FA8
566A:  BCF    FA6.6
566C:  BCF    FA6.7
566E:  BSF    FA6.2
5670:  MOVFF  FF2,00
5674:  BCF    FF2.7
5676:  MOVLW  55
5678:  MOVWF  FA7
567A:  MOVLW  AA
567C:  MOVWF  FA7
567E:  BSF    FA6.1
5680:  BTFSC  FA6.1
5682:  BRA    5680
5684:  BCF    FA6.2
5686:  MOVF   00,W
5688:  IORWF  FF2,F
568A:  MOVLW  07
568C:  MOVWF  FA9
568E:  MOVFF  4CD,FA8
5692:  BCF    FA6.6
5694:  BCF    FA6.7
5696:  BSF    FA6.2
5698:  MOVFF  FF2,00
569C:  BCF    FF2.7
569E:  MOVLW  55
56A0:  MOVWF  FA7
56A2:  MOVLW  AA
56A4:  MOVWF  FA7
56A6:  BSF    FA6.1
56A8:  BTFSC  FA6.1
56AA:  BRA    56A8
56AC:  BCF    FA6.2
56AE:  MOVF   00,W
56B0:  IORWF  FF2,F
56B2:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
56B4:  MOVF   xA2,W
56B6:  SUBLW  0D
56B8:  BTFSS  FD8.2
56BA:  BRA    57F2
....................       
....................       if(visual==1) 
56BC:  BTFSS  x95.4
56BE:  BRA    5726
....................       { 
....................          glcd_fillScreen(OFF); 
56C0:  MOVLB  5
56C2:  CLRF   x02
56C4:  MOVLB  0
56C6:  CALL   1002
....................          strcpy(Menus.Letra,"Temperatura"); 
56CA:  MOVLW  04
56CC:  MOVWF  FEA
56CE:  MOVLW  E1
56D0:  MOVWF  FE9
56D2:  MOVFF  FF2,501
56D6:  BCF    FF2.7
56D8:  MOVLW  00
56DA:  CALL   0B6A
56DE:  TBLRD*-
56E0:  TBLRD*+
56E2:  MOVF   FF5,W
56E4:  MOVWF  FEE
56E6:  IORLW  00
56E8:  BNZ   56E0
56EA:  MOVLB  5
56EC:  BTFSC  x01.7
56EE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
56F0:  MOVLW  04
56F2:  MOVWF  x02
56F4:  MOVLW  E1
56F6:  MOVWF  x01
56F8:  CLRF   x03
56FA:  CLRF   x04
56FC:  MOVLW  01
56FE:  MOVWF  x05
5700:  MOVLW  02
5702:  MOVWF  x06
5704:  MOVLB  0
5706:  CALL   1630
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
570A:  MOVFF  4A5,502
570E:  MOVLW  1E
5710:  MOVLB  5
5712:  MOVWF  x03
5714:  MOVWF  x04
5716:  CLRF   x05
5718:  MOVLW  03
571A:  MOVWF  x06
571C:  MOVLB  0
571E:  CALL   2424
....................           
....................          visual=0; 
5722:  MOVLB  4
5724:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
5726:  BSF    F92.0
5728:  BTFSS  F80.0
572A:  BRA    575E
....................          {   
....................             if(Setpoint<134) 
572C:  MOVF   xA5,W
572E:  SUBLW  85
5730:  BNC   575E
....................             { 
....................                if(Setpoint<100) 
5732:  MOVF   xA5,W
5734:  SUBLW  63
5736:  BNC   574C
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
5738:  MOVLW  64
573A:  MOVWF  xA5
573C:  MOVLB  5
573E:  MOVWF  x02
5740:  MOVLB  0
5742:  CALL   0F98
5746:  MOVLB  4
5748:  BSF    x95.4
....................                } 
....................                else 
574A:  BRA    575E
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
574C:  MOVLW  1E
574E:  MOVLB  5
5750:  MOVWF  x02
5752:  MOVLB  0
5754:  CALL   0F98
5758:  MOVLB  4
575A:  INCF   xA5,F
575C:  BSF    x95.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
575E:  BSF    F92.1
5760:  BTFSS  F80.1
5762:  BRA    577C
....................          {   
....................             if(Setpoint>105) 
5764:  MOVF   xA5,W
5766:  SUBLW  69
5768:  BC    577C
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
576A:  MOVLW  1E
576C:  MOVLB  5
576E:  MOVWF  x02
5770:  MOVLB  0
5772:  CALL   0F98
5776:  MOVLB  4
5778:  DECF   xA5,F
577A:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
577C:  BSF    F92.2
577E:  BTFSS  F80.2
5780:  BRA    5792
....................          {   
....................             delay_ms(30);visual=1; 
5782:  MOVLW  1E
5784:  MOVLB  5
5786:  MOVWF  x02
5788:  MOVLB  0
578A:  CALL   0F98
578E:  MOVLB  4
5790:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5792:  BSF    F92.3
5794:  BTFSS  F80.3
5796:  BRA    57F2
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5798:  MOVLW  04
579A:  MOVLB  5
579C:  MOVWF  x01
579E:  MOVLW  AF
57A0:  MOVWF  x02
57A2:  MOVLB  0
57A4:  CALL   0F98
57A8:  MOVLB  5
57AA:  DECFSZ x01,F
57AC:  BRA    579E
57AE:  MOVLW  08
57B0:  MOVLB  4
57B2:  MOVWF  xA2
57B4:  MOVLB  5
57B6:  CLRF   x02
57B8:  MOVLB  0
57BA:  CALL   1002
57BE:  MOVLW  01
57C0:  MOVLB  4
57C2:  MOVWF  xA7
57C4:  BSF    x95.4
....................             write_eeprom(8,Setpoint); 
57C6:  MOVLW  08
57C8:  MOVWF  FA9
57CA:  MOVFF  4A5,FA8
57CE:  BCF    FA6.6
57D0:  BCF    FA6.7
57D2:  BSF    FA6.2
57D4:  MOVF   FF2,W
57D6:  MOVWF  00
57D8:  BCF    FF2.7
57DA:  MOVLB  F
57DC:  MOVLW  55
57DE:  MOVWF  FA7
57E0:  MOVLW  AA
57E2:  MOVWF  FA7
57E4:  BSF    FA6.1
57E6:  BTFSC  FA6.1
57E8:  BRA    57E6
57EA:  BCF    FA6.2
57EC:  MOVF   00,W
57EE:  IORWF  FF2,F
57F0:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
57F2:  MOVF   xA2,W
57F4:  SUBLW  0E
57F6:  BTFSS  FD8.2
57F8:  BRA    5AE8
....................       if(Nivel>6) 
57FA:  MOVF   xB5,F
57FC:  BNZ   5804
57FE:  MOVF   xB4,W
5800:  SUBLW  06
5802:  BC    580A
....................          Nivel=6; 
5804:  CLRF   xB5
5806:  MOVLW  06
5808:  MOVWF  xB4
....................           
....................       if(visual==1) 
580A:  BTFSS  x95.4
580C:  BRA    586E
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
580E:  MOVLW  04
5810:  MOVWF  FEA
5812:  MOVLW  E1
5814:  MOVWF  FE9
5816:  MOVFF  FF2,501
581A:  BCF    FF2.7
581C:  MOVLW  00
581E:  MOVLB  0
5820:  CALL   0C4C
5824:  TBLRD*-
5826:  TBLRD*+
5828:  MOVF   FF5,W
582A:  MOVWF  FEE
582C:  IORLW  00
582E:  BNZ   5826
5830:  MOVLB  5
5832:  BTFSC  x01.7
5834:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5836:  MOVLW  04
5838:  MOVWF  x02
583A:  MOVLW  E1
583C:  MOVWF  x01
583E:  CLRF   x03
5840:  CLRF   x04
5842:  MOVLW  01
5844:  MOVWF  x05
5846:  MOVLW  02
5848:  MOVWF  x06
584A:  MOVLB  0
584C:  CALL   1630
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
5850:  MOVFF  4B4,502
5854:  MOVLW  32
5856:  MOVLB  5
5858:  MOVWF  x03
585A:  MOVLW  28
585C:  MOVWF  x04
585E:  CLRF   x05
5860:  MOVLW  02
5862:  MOVWF  x06
5864:  MOVLB  0
5866:  CALL   2424
....................           
....................          visual=0; 
586A:  MOVLB  4
586C:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
586E:  BSF    F92.0
5870:  BTFSS  F80.0
5872:  BRA    5894
....................          {   
....................             if(Nivel<6) 
5874:  MOVF   xB5,F
5876:  BNZ   5894
5878:  MOVF   xB4,W
587A:  SUBLW  05
587C:  BNC   5894
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
587E:  MOVLW  1E
5880:  MOVLB  5
5882:  MOVWF  x02
5884:  MOVLB  0
5886:  CALL   0F98
588A:  MOVLB  4
588C:  INCF   xB4,F
588E:  BTFSC  FD8.2
5890:  INCF   xB5,F
5892:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5894:  BSF    F92.1
5896:  BTFSS  F80.1
5898:  BRA    58BC
....................          {   
....................             if(Nivel>1) 
589A:  MOVF   xB5,F
589C:  BNZ   58A4
589E:  MOVF   xB4,W
58A0:  SUBLW  01
58A2:  BC    58BC
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
58A4:  MOVLW  1E
58A6:  MOVLB  5
58A8:  MOVWF  x02
58AA:  MOVLB  0
58AC:  CALL   0F98
58B0:  MOVLB  4
58B2:  MOVF   xB4,W
58B4:  BTFSC  FD8.2
58B6:  DECF   xB5,F
58B8:  DECF   xB4,F
58BA:  BSF    x95.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
58BC:  BTFSS  x95.5
58BE:  BRA    5A78
....................          { 
....................             if(RIGHT)//Si oprime SET 
58C0:  BSF    F92.2
58C2:  BTFSS  F80.2
58C4:  BRA    5A76
....................             {   
....................                write_eeprom(9,Nivel); 
58C6:  MOVLW  09
58C8:  MOVWF  FA9
58CA:  MOVFF  4B4,FA8
58CE:  BCF    FA6.6
58D0:  BCF    FA6.7
58D2:  BSF    FA6.2
58D4:  MOVF   FF2,W
58D6:  MOVWF  00
58D8:  BCF    FF2.7
58DA:  MOVLB  F
58DC:  MOVLW  55
58DE:  MOVWF  FA7
58E0:  MOVLW  AA
58E2:  MOVWF  FA7
58E4:  BSF    FA6.1
58E6:  BTFSC  FA6.1
58E8:  BRA    58E6
58EA:  BCF    FA6.2
58EC:  MOVF   00,W
58EE:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
58F0:  MOVLW  14
58F2:  MOVLB  4
58F4:  MOVWF  xA2
58F6:  MOVLW  0F
58F8:  MOVLB  5
58FA:  MOVWF  x13
58FC:  MOVLW  12
58FE:  MOVWF  x14
5900:  MOVLW  1E
5902:  MOVWF  x15
5904:  MOVLW  35
5906:  MOVWF  x16
5908:  CLRF   x17
590A:  MOVLW  01
590C:  MOVWF  x18
590E:  MOVLB  0
5910:  CALL   156E
5914:  MOVLB  4
5916:  CLRF   xA9
5918:  MOVLW  C0
591A:  IORWF  FF2,F
591C:  MOVLB  5
591E:  CLRF   x02
5920:  MOVLB  0
5922:  CALL   1002
....................                strcpy(Menus.Letra,"Calentando"); 
5926:  MOVLW  04
5928:  MOVWF  FEA
592A:  MOVLW  E1
592C:  MOVWF  FE9
592E:  MOVFF  FF2,501
5932:  BCF    FF2.7
5934:  MOVLW  00
5936:  CALL   0966
593A:  TBLRD*-
593C:  TBLRD*+
593E:  MOVF   FF5,W
5940:  MOVWF  FEE
5942:  IORLW  00
5944:  BNZ   593C
5946:  MOVLB  5
5948:  BTFSC  x01.7
594A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
594C:  MOVLW  04
594E:  MOVWF  x02
5950:  MOVLW  E1
5952:  MOVWF  x01
5954:  CLRF   x03
5956:  MOVLW  37
5958:  MOVWF  x04
595A:  MOVLW  02
595C:  MOVWF  x05
595E:  MOVLW  01
5960:  MOVWF  x06
5962:  MOVLB  0
5964:  CALL   1630
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
5968:  MOVLW  0F
596A:  MOVLB  5
596C:  MOVWF  x13
596E:  MOVLW  12
5970:  MOVWF  x14
5972:  MOVLW  1E
5974:  MOVWF  x15
5976:  MOVLW  35
5978:  MOVWF  x16
597A:  CLRF   x17
597C:  MOVLW  01
597E:  MOVWF  x18
5980:  MOVLB  0
5982:  CALL   156E
....................                glcd_imagen(5); 
5986:  MOVLW  05
5988:  MOVLB  5
598A:  MOVWF  x01
598C:  MOVLB  0
598E:  CALL   2078
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5992:  MOVLW  04
5994:  MOVWF  FEA
5996:  MOVLW  E1
5998:  MOVWF  FE9
599A:  MOVFF  FF2,501
599E:  BCF    FF2.7
59A0:  MOVLW  00
59A2:  CALL   098C
59A6:  TBLRD*-
59A8:  TBLRD*+
59AA:  MOVF   FF5,W
59AC:  MOVWF  FEE
59AE:  IORLW  00
59B0:  BNZ   59A8
59B2:  MOVLB  5
59B4:  BTFSC  x01.7
59B6:  BSF    FF2.7
59B8:  MOVLW  04
59BA:  MOVWF  x02
59BC:  MOVLW  E1
59BE:  MOVWF  x01
59C0:  CLRF   x03
59C2:  CLRF   x04
59C4:  MOVLW  02
59C6:  MOVWF  x05
59C8:  MOVLW  01
59CA:  MOVWF  x06
59CC:  MOVLB  0
59CE:  CALL   1630
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
59D2:  MOVLW  04
59D4:  MOVWF  FEA
59D6:  MOVLW  E1
59D8:  MOVWF  FE9
59DA:  MOVFF  FF2,501
59DE:  BCF    FF2.7
59E0:  MOVLW  00
59E2:  CALL   09AE
59E6:  TBLRD*-
59E8:  TBLRD*+
59EA:  MOVF   FF5,W
59EC:  MOVWF  FEE
59EE:  IORLW  00
59F0:  BNZ   59E8
59F2:  MOVLB  5
59F4:  BTFSC  x01.7
59F6:  BSF    FF2.7
59F8:  MOVLW  04
59FA:  MOVWF  x02
59FC:  MOVLW  E1
59FE:  MOVWF  x01
5A00:  CLRF   x03
5A02:  MOVLW  08
5A04:  MOVWF  x04
5A06:  MOVLW  02
5A08:  MOVWF  x05
5A0A:  MOVLW  01
5A0C:  MOVWF  x06
5A0E:  MOVLB  0
5A10:  CALL   1630
....................                glcd_circle(95,40,2,NO,ON); 
5A14:  MOVLW  5F
5A16:  MOVLB  5
5A18:  MOVWF  x01
5A1A:  MOVLW  28
5A1C:  MOVWF  x02
5A1E:  MOVLW  02
5A20:  MOVWF  x03
5A22:  CLRF   x04
5A24:  MOVLW  01
5A26:  MOVWF  x05
5A28:  MOVLB  0
5A2A:  CALL   2174
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5A2E:  MOVLW  04
5A30:  MOVWF  FEA
5A32:  MOVLW  E1
5A34:  MOVWF  FE9
5A36:  MOVFF  FF2,501
5A3A:  BCF    FF2.7
5A3C:  MOVLW  00
5A3E:  CALL   09D0
5A42:  TBLRD*-
5A44:  TBLRD*+
5A46:  MOVF   FF5,W
5A48:  MOVWF  FEE
5A4A:  IORLW  00
5A4C:  BNZ   5A44
5A4E:  MOVLB  5
5A50:  BTFSC  x01.7
5A52:  BSF    FF2.7
5A54:  MOVLW  04
5A56:  MOVWF  x02
5A58:  MOVLW  E1
5A5A:  MOVWF  x01
5A5C:  MOVLW  66
5A5E:  MOVWF  x03
5A60:  MOVLW  28
5A62:  MOVWF  x04
5A64:  MOVLW  02
5A66:  MOVWF  x05
5A68:  MOVWF  x06
5A6A:  MOVLB  0
5A6C:  CALL   1630
....................                MuestraTiemposProgramados(); 
5A70:  CALL   257C
5A74:  MOVLB  4
....................             }       
....................          } 
....................          else 
5A76:  BRA    5AE8
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5A78:  BSF    F92.3
5A7A:  BTFSS  F80.3
5A7C:  BRA    5AE8
....................             { 
....................                if(Nivel<6) 
5A7E:  MOVF   xB5,F
5A80:  BNZ   5A8C
5A82:  MOVF   xB4,W
5A84:  SUBLW  05
5A86:  BNC   5A8C
....................                { 
....................                   desfoguelento=1; 
5A88:  BSF    x95.5
....................                } 
....................                else 
5A8A:  BRA    5A8E
....................                { 
....................                   desfoguelento=0; 
5A8C:  BCF    x95.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5A8E:  MOVLW  04
5A90:  MOVLB  5
5A92:  MOVWF  x01
5A94:  MOVLW  AF
5A96:  MOVWF  x02
5A98:  MOVLB  0
5A9A:  CALL   0F98
5A9E:  MOVLB  5
5AA0:  DECFSZ x01,F
5AA2:  BRA    5A94
5AA4:  MOVLW  08
5AA6:  MOVLB  4
5AA8:  MOVWF  xA2
5AAA:  MOVLB  5
5AAC:  CLRF   x02
5AAE:  MOVLB  0
5AB0:  CALL   1002
5AB4:  MOVLW  01
5AB6:  MOVLB  4
5AB8:  MOVWF  xA7
5ABA:  BSF    x95.4
....................                write_eeprom(9,Nivel); 
5ABC:  MOVLW  09
5ABE:  MOVWF  FA9
5AC0:  MOVFF  4B4,FA8
5AC4:  BCF    FA6.6
5AC6:  BCF    FA6.7
5AC8:  BSF    FA6.2
5ACA:  MOVF   FF2,W
5ACC:  MOVWF  00
5ACE:  BCF    FF2.7
5AD0:  MOVLB  F
5AD2:  MOVLW  55
5AD4:  MOVWF  FA7
5AD6:  MOVLW  AA
5AD8:  MOVWF  FA7
5ADA:  BSF    FA6.1
5ADC:  BTFSC  FA6.1
5ADE:  BRA    5ADC
5AE0:  BCF    FA6.2
5AE2:  MOVF   00,W
5AE4:  IORWF  FF2,F
5AE6:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5AE8:  MOVF   xA2,W
5AEA:  SUBLW  0F
5AEC:  BTFSS  FD8.2
5AEE:  BRA    5E22
....................        
....................       if(visual==1) 
5AF0:  BTFSS  x95.4
5AF2:  BRA    5C58
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5AF4:  MOVLW  04
5AF6:  MOVWF  FEA
5AF8:  MOVLW  E1
5AFA:  MOVWF  FE9
5AFC:  MOVFF  FF2,501
5B00:  BCF    FF2.7
5B02:  MOVLW  00
5B04:  MOVLB  0
5B06:  CALL   0BBC
5B0A:  TBLRD*-
5B0C:  TBLRD*+
5B0E:  MOVF   FF5,W
5B10:  MOVWF  FEE
5B12:  IORLW  00
5B14:  BNZ   5B0C
5B16:  MOVLB  5
5B18:  BTFSC  x01.7
5B1A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5B1C:  MOVLW  04
5B1E:  MOVWF  x02
5B20:  MOVLW  E1
5B22:  MOVWF  x01
5B24:  CLRF   x03
5B26:  CLRF   x04
5B28:  MOVLW  01
5B2A:  MOVWF  x05
5B2C:  MOVLW  02
5B2E:  MOVWF  x06
5B30:  MOVLB  0
5B32:  CALL   1630
....................           
....................          if(Opcion==2) 
5B36:  MOVLB  4
5B38:  MOVF   xA7,W
5B3A:  SUBLW  02
5B3C:  BNZ   5BC8
....................          {strcpy(Menus.Letra,"SI"); 
5B3E:  MOVLW  04
5B40:  MOVWF  FEA
5B42:  MOVLW  E1
5B44:  MOVWF  FE9
5B46:  MOVFF  FF2,501
5B4A:  BCF    FF2.7
5B4C:  MOVLW  00
5B4E:  MOVLB  0
5B50:  CALL   0C70
5B54:  TBLRD*-
5B56:  TBLRD*+
5B58:  MOVF   FF5,W
5B5A:  MOVWF  FEE
5B5C:  IORLW  00
5B5E:  BNZ   5B56
5B60:  MOVLB  5
5B62:  BTFSC  x01.7
5B64:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5B66:  MOVLW  04
5B68:  MOVWF  x02
5B6A:  MOVLW  E1
5B6C:  MOVWF  x01
5B6E:  MOVLW  32
5B70:  MOVWF  x03
5B72:  MOVLW  19
5B74:  MOVWF  x04
5B76:  MOVLW  01
5B78:  MOVWF  x05
5B7A:  MOVLW  02
5B7C:  MOVWF  x06
5B7E:  MOVLB  0
5B80:  CALL   1630
....................          strcpy(Menus.Letra,"NO"); 
5B84:  MOVLW  04
5B86:  MOVWF  FEA
5B88:  MOVLW  E1
5B8A:  MOVWF  FE9
5B8C:  MOVFF  FF2,501
5B90:  BCF    FF2.7
5B92:  MOVLW  00
5B94:  CALL   0C8E
5B98:  TBLRD*-
5B9A:  TBLRD*+
5B9C:  MOVF   FF5,W
5B9E:  MOVWF  FEE
5BA0:  IORLW  00
5BA2:  BNZ   5B9A
5BA4:  MOVLB  5
5BA6:  BTFSC  x01.7
5BA8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5BAA:  MOVLW  04
5BAC:  MOVWF  x02
5BAE:  MOVLW  E1
5BB0:  MOVWF  x01
5BB2:  MOVLW  32
5BB4:  MOVWF  x03
5BB6:  MOVLW  2D
5BB8:  MOVWF  x04
5BBA:  CLRF   x05
5BBC:  MOVLW  02
5BBE:  MOVWF  x06
5BC0:  MOVLB  0
5BC2:  CALL   1630
5BC6:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
5BC8:  DECFSZ xA7,W
5BCA:  BRA    5C56
....................          {strcpy(Menus.Letra,"SI"); 
5BCC:  MOVLW  04
5BCE:  MOVWF  FEA
5BD0:  MOVLW  E1
5BD2:  MOVWF  FE9
5BD4:  MOVFF  FF2,501
5BD8:  BCF    FF2.7
5BDA:  MOVLW  00
5BDC:  MOVLB  0
5BDE:  CALL   0C70
5BE2:  TBLRD*-
5BE4:  TBLRD*+
5BE6:  MOVF   FF5,W
5BE8:  MOVWF  FEE
5BEA:  IORLW  00
5BEC:  BNZ   5BE4
5BEE:  MOVLB  5
5BF0:  BTFSC  x01.7
5BF2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5BF4:  MOVLW  04
5BF6:  MOVWF  x02
5BF8:  MOVLW  E1
5BFA:  MOVWF  x01
5BFC:  MOVLW  32
5BFE:  MOVWF  x03
5C00:  MOVLW  19
5C02:  MOVWF  x04
5C04:  CLRF   x05
5C06:  MOVLW  02
5C08:  MOVWF  x06
5C0A:  MOVLB  0
5C0C:  CALL   1630
....................          strcpy(Menus.Letra,"NO"); 
5C10:  MOVLW  04
5C12:  MOVWF  FEA
5C14:  MOVLW  E1
5C16:  MOVWF  FE9
5C18:  MOVFF  FF2,501
5C1C:  BCF    FF2.7
5C1E:  MOVLW  00
5C20:  CALL   0C8E
5C24:  TBLRD*-
5C26:  TBLRD*+
5C28:  MOVF   FF5,W
5C2A:  MOVWF  FEE
5C2C:  IORLW  00
5C2E:  BNZ   5C26
5C30:  MOVLB  5
5C32:  BTFSC  x01.7
5C34:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5C36:  MOVLW  04
5C38:  MOVWF  x02
5C3A:  MOVLW  E1
5C3C:  MOVWF  x01
5C3E:  MOVLW  32
5C40:  MOVWF  x03
5C42:  MOVLW  2D
5C44:  MOVWF  x04
5C46:  MOVLW  01
5C48:  MOVWF  x05
5C4A:  MOVLW  02
5C4C:  MOVWF  x06
5C4E:  MOVLB  0
5C50:  CALL   1630
5C54:  MOVLB  4
....................          } 
....................          visual=0; 
5C56:  BCF    x95.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5C58:  BSF    F92.0
5C5A:  BTFSS  F80.0
5C5C:  BRA    5C68
....................       { 
....................          if(Opcion<2) 
5C5E:  MOVF   xA7,W
5C60:  SUBLW  01
5C62:  BNC   5C66
....................          { 
....................             Opcion++; 
5C64:  INCF   xA7,F
....................          } 
....................          visual=1; 
5C66:  BSF    x95.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5C68:  BSF    F92.1
5C6A:  BTFSS  F80.1
5C6C:  BRA    5C78
....................       {   
....................          if(Opcion>1) 
5C6E:  MOVF   xA7,W
5C70:  SUBLW  01
5C72:  BC    5C76
....................          { 
....................             Opcion--; 
5C74:  DECF   xA7,F
....................          }   
....................          visual=1; 
5C76:  BSF    x95.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5C78:  BSF    F92.2
5C7A:  BTFSS  F80.2
5C7C:  BRA    5DEE
....................       {   
....................          if(Opcion==2) 
5C7E:  MOVF   xA7,W
5C80:  SUBLW  02
5C82:  BTFSS  FD8.2
5C84:  BRA    5DC0
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5C86:  MOVLW  14
5C88:  MOVWF  xA2
5C8A:  MOVLW  0F
5C8C:  MOVLB  5
5C8E:  MOVWF  x13
5C90:  MOVLW  12
5C92:  MOVWF  x14
5C94:  MOVLW  1E
5C96:  MOVWF  x15
5C98:  MOVLW  35
5C9A:  MOVWF  x16
5C9C:  CLRF   x17
5C9E:  MOVLW  01
5CA0:  MOVWF  x18
5CA2:  MOVLB  0
5CA4:  CALL   156E
5CA8:  MOVLB  4
5CAA:  CLRF   xA9
5CAC:  MOVLW  C0
5CAE:  IORWF  FF2,F
5CB0:  MOVLB  5
5CB2:  CLRF   x02
5CB4:  MOVLB  0
5CB6:  CALL   1002
....................             strcpy(Menus.Letra,"Calentando"); 
5CBA:  MOVLW  04
5CBC:  MOVWF  FEA
5CBE:  MOVLW  E1
5CC0:  MOVWF  FE9
5CC2:  MOVFF  FF2,501
5CC6:  BCF    FF2.7
5CC8:  MOVLW  00
5CCA:  CALL   0966
5CCE:  TBLRD*-
5CD0:  TBLRD*+
5CD2:  MOVF   FF5,W
5CD4:  MOVWF  FEE
5CD6:  IORLW  00
5CD8:  BNZ   5CD0
5CDA:  MOVLB  5
5CDC:  BTFSC  x01.7
5CDE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5CE0:  MOVLW  04
5CE2:  MOVWF  x02
5CE4:  MOVLW  E1
5CE6:  MOVWF  x01
5CE8:  CLRF   x03
5CEA:  MOVLW  37
5CEC:  MOVWF  x04
5CEE:  MOVLW  02
5CF0:  MOVWF  x05
5CF2:  MOVLW  01
5CF4:  MOVWF  x06
5CF6:  MOVLB  0
5CF8:  CALL   1630
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5CFC:  MOVLW  0F
5CFE:  MOVLB  5
5D00:  MOVWF  x13
5D02:  MOVLW  12
5D04:  MOVWF  x14
5D06:  MOVLW  1E
5D08:  MOVWF  x15
5D0A:  MOVLW  35
5D0C:  MOVWF  x16
5D0E:  CLRF   x17
5D10:  MOVLW  01
5D12:  MOVWF  x18
5D14:  MOVLB  0
5D16:  CALL   156E
....................             glcd_imagen(5); 
5D1A:  MOVLW  05
5D1C:  MOVLB  5
5D1E:  MOVWF  x01
5D20:  MOVLB  0
5D22:  CALL   2078
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5D26:  MOVLW  04
5D28:  MOVWF  FEA
5D2A:  MOVLW  E1
5D2C:  MOVWF  FE9
5D2E:  MOVFF  FF2,501
5D32:  BCF    FF2.7
5D34:  MOVLW  00
5D36:  CALL   098C
5D3A:  TBLRD*-
5D3C:  TBLRD*+
5D3E:  MOVF   FF5,W
5D40:  MOVWF  FEE
5D42:  IORLW  00
5D44:  BNZ   5D3C
5D46:  MOVLB  5
5D48:  BTFSC  x01.7
5D4A:  BSF    FF2.7
5D4C:  MOVLW  04
5D4E:  MOVWF  x02
5D50:  MOVLW  E1
5D52:  MOVWF  x01
5D54:  CLRF   x03
5D56:  CLRF   x04
5D58:  MOVLW  02
5D5A:  MOVWF  x05
5D5C:  MOVLW  01
5D5E:  MOVWF  x06
5D60:  MOVLB  0
5D62:  CALL   1630
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5D66:  MOVLW  04
5D68:  MOVWF  FEA
5D6A:  MOVLW  E1
5D6C:  MOVWF  FE9
5D6E:  MOVFF  FF2,501
5D72:  BCF    FF2.7
5D74:  MOVLW  00
5D76:  CALL   09AE
5D7A:  TBLRD*-
5D7C:  TBLRD*+
5D7E:  MOVF   FF5,W
5D80:  MOVWF  FEE
5D82:  IORLW  00
5D84:  BNZ   5D7C
5D86:  MOVLB  5
5D88:  BTFSC  x01.7
5D8A:  BSF    FF2.7
5D8C:  MOVLW  04
5D8E:  MOVWF  x02
5D90:  MOVLW  E1
5D92:  MOVWF  x01
5D94:  CLRF   x03
5D96:  MOVLW  08
5D98:  MOVWF  x04
5D9A:  MOVLW  02
5D9C:  MOVWF  x05
5D9E:  MOVLW  01
5DA0:  MOVWF  x06
5DA2:  MOVLB  0
5DA4:  CALL   1630
....................             MuestraTiemposProgramados(); 
5DA8:  CALL   257C
....................             if(Nivel<6) 
5DAC:  MOVLB  4
5DAE:  MOVF   xB5,F
5DB0:  BNZ   5DBC
5DB2:  MOVF   xB4,W
5DB4:  SUBLW  05
5DB6:  BNC   5DBC
....................                { 
....................                   desfoguelento=1; 
5DB8:  BSF    x95.5
....................                } 
....................                else 
5DBA:  BRA    5DBE
....................                { 
....................                   desfoguelento=0; 
5DBC:  BCF    x95.5
....................                } 
....................          } 
....................          else 
5DBE:  BRA    5DEE
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DC0:  MOVLW  04
5DC2:  MOVLB  5
5DC4:  MOVWF  x01
5DC6:  MOVLW  AF
5DC8:  MOVWF  x02
5DCA:  MOVLB  0
5DCC:  CALL   0F98
5DD0:  MOVLB  5
5DD2:  DECFSZ x01,F
5DD4:  BRA    5DC6
5DD6:  MOVLW  08
5DD8:  MOVLB  4
5DDA:  MOVWF  xA2
5DDC:  MOVLB  5
5DDE:  CLRF   x02
5DE0:  MOVLB  0
5DE2:  CALL   1002
5DE6:  MOVLW  01
5DE8:  MOVLB  4
5DEA:  MOVWF  xA7
5DEC:  BSF    x95.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5DEE:  BSF    F92.3
5DF0:  BTFSS  F80.3
5DF2:  BRA    5E22
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DF4:  MOVLW  04
5DF6:  MOVLB  5
5DF8:  MOVWF  x01
5DFA:  MOVLW  AF
5DFC:  MOVWF  x02
5DFE:  MOVLB  0
5E00:  CALL   0F98
5E04:  MOVLB  5
5E06:  DECFSZ x01,F
5E08:  BRA    5DFA
5E0A:  MOVLW  08
5E0C:  MOVLB  4
5E0E:  MOVWF  xA2
5E10:  MOVLB  5
5E12:  CLRF   x02
5E14:  MOVLB  0
5E16:  CALL   1002
5E1A:  MOVLW  01
5E1C:  MOVLB  4
5E1E:  MOVWF  xA7
5E20:  BSF    x95.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
5E22:  MOVF   xA2,W
5E24:  SUBLW  14
5E26:  BTFSS  FD8.2
5E28:  GOTO   6992
....................     
....................    Lectura_Esclavos(); 
5E2C:  MOVLB  0
5E2E:  CALL   1EBE
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
5E32:  MOVLB  4
5E34:  BTFSS  x96.1
5E36:  BRA    5F7E
5E38:  DECFSZ x8D,W
5E3A:  BRA    5F7E
5E3C:  DECFSZ x8E,W
5E3E:  BRA    5F7E
5E40:  MOVF   xA8,W
5E42:  SUBLW  01
5E44:  BTFSS  FD8.0
5E46:  BRA    5F7E
5E48:  MOVF   x92,F
5E4A:  BTFSS  FD8.2
5E4C:  BRA    5F7E
5E4E:  MOVF   x93,F
5E50:  BTFSS  FD8.2
5E52:  BRA    5F7E
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
5E54:  MOVF   xA8,F
5E56:  BNZ   5EF0
5E58:  BTFSC  x96.2
5E5A:  BRA    5EF0
....................       { 
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
5E5C:  MOVLW  0F
5E5E:  MOVLB  5
5E60:  MOVWF  x13
5E62:  MOVLW  12
5E64:  MOVWF  x14
5E66:  MOVLW  1E
5E68:  MOVWF  x15
5E6A:  MOVLW  35
5E6C:  MOVWF  x16
5E6E:  CLRF   x17
5E70:  MOVLW  01
5E72:  MOVWF  x18
5E74:  MOVLB  0
5E76:  CALL   156E
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5E7A:  MOVLB  5
5E7C:  CLRF   x13
5E7E:  MOVLW  37
5E80:  MOVWF  x14
5E82:  MOVLW  7F
5E84:  MOVWF  x15
5E86:  MOVLW  3F
5E88:  MOVWF  x16
5E8A:  MOVLW  01
5E8C:  MOVWF  x17
5E8E:  CLRF   x18
5E90:  MOVLB  0
5E92:  CALL   156E
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
5E96:  MOVLW  04
5E98:  MOVWF  FEA
5E9A:  MOVLW  E1
5E9C:  MOVWF  FE9
5E9E:  MOVFF  FF2,501
5EA2:  BCF    FF2.7
5EA4:  MOVLW  00
5EA6:  CALL   0966
5EAA:  TBLRD*-
5EAC:  TBLRD*+
5EAE:  MOVF   FF5,W
5EB0:  MOVWF  FEE
5EB2:  IORLW  00
5EB4:  BNZ   5EAC
5EB6:  MOVLB  5
5EB8:  BTFSC  x01.7
5EBA:  BSF    FF2.7
5EBC:  MOVLW  04
5EBE:  MOVWF  x02
5EC0:  MOVLW  E1
5EC2:  MOVWF  x01
5EC4:  CLRF   x03
5EC6:  MOVLW  37
5EC8:  MOVWF  x04
5ECA:  MOVLW  02
5ECC:  MOVWF  x05
5ECE:  MOVLW  01
5ED0:  MOVWF  x06
5ED2:  MOVLB  0
5ED4:  CALL   1630
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5ED8:  MOVLB  4
5EDA:  BSF    x96.2
5EDC:  BCF    x96.3
5EDE:  BCF    x96.4
5EE0:  BCF    x96.5
5EE2:  BCF    x96.6
5EE4:  BCF    x96.7
5EE6:  BCF    x97.0
5EE8:  BCF    x97.1
....................          EVDesfogue=0;Control=1; 
5EEA:  CLRF   x99
5EEC:  MOVLW  01
5EEE:  MOVWF  xA0
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
5EF0:  DECFSZ xA8,W
5EF2:  BRA    5F70
5EF4:  BTFSC  x96.5
5EF6:  BRA    5F70
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5EF8:  MOVLB  5
5EFA:  CLRF   x13
5EFC:  MOVLW  37
5EFE:  MOVWF  x14
5F00:  MOVLW  7F
5F02:  MOVWF  x15
5F04:  MOVLW  3F
5F06:  MOVWF  x16
5F08:  MOVLW  01
5F0A:  MOVWF  x17
5F0C:  CLRF   x18
5F0E:  MOVLB  0
5F10:  CALL   156E
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
5F14:  MOVLW  04
5F16:  MOVWF  FEA
5F18:  MOVLW  E1
5F1A:  MOVWF  FE9
5F1C:  MOVFF  FF2,501
5F20:  BCF    FF2.7
5F22:  MOVLW  00
5F24:  CALL   0CAC
5F28:  TBLRD*-
5F2A:  TBLRD*+
5F2C:  MOVF   FF5,W
5F2E:  MOVWF  FEE
5F30:  IORLW  00
5F32:  BNZ   5F2A
5F34:  MOVLB  5
5F36:  BTFSC  x01.7
5F38:  BSF    FF2.7
5F3A:  MOVLW  04
5F3C:  MOVWF  x02
5F3E:  MOVLW  E1
5F40:  MOVWF  x01
5F42:  CLRF   x03
5F44:  MOVLW  37
5F46:  MOVWF  x04
5F48:  MOVLW  02
5F4A:  MOVWF  x05
5F4C:  MOVLW  01
5F4E:  MOVWF  x06
5F50:  MOVLB  0
5F52:  CALL   1630
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F56:  MOVLB  4
5F58:  BCF    x96.2
5F5A:  BCF    x96.3
5F5C:  BCF    x96.4
5F5E:  BSF    x96.5
5F60:  BCF    x96.6
5F62:  BCF    x96.7
5F64:  BCF    x97.0
5F66:  BCF    x97.1
....................          EVDesfogue=0;EVTrampa=0;Control=1; 
5F68:  CLRF   x99
5F6A:  CLRF   x9B
5F6C:  MOVLW  01
5F6E:  MOVWF  xA0
....................       } 
....................           
....................       Control=1; 
5F70:  MOVLW  01
5F72:  MOVWF  xA0
....................       Envio_Esclavos(); 
5F74:  MOVLB  0
5F76:  CALL   2018
....................    } 
....................    else 
5F7A:  BRA    6446
5F7C:  MOVLB  4
....................    { 
....................       Control=0; 
5F7E:  CLRF   xA0
....................       if(Alarma>0 || Alarma2>0) 
5F80:  MOVF   x92,F
5F82:  BNZ   5F8A
5F84:  MOVF   x94,F
5F86:  BTFSC  FD8.2
5F88:  BRA    60F0
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
5F8A:  DECFSZ x92,W
5F8C:  BRA    6004
....................          { 
....................             if(disp_Alarma==0) 
5F8E:  BTFSC  x97.3
5F90:  BRA    6004
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5F92:  MOVLB  5
5F94:  CLRF   x13
5F96:  MOVLW  37
5F98:  MOVWF  x14
5F9A:  MOVLW  7F
5F9C:  MOVWF  x15
5F9E:  MOVLW  3F
5FA0:  MOVWF  x16
5FA2:  MOVLW  01
5FA4:  MOVWF  x17
5FA6:  CLRF   x18
5FA8:  MOVLB  0
5FAA:  CALL   156E
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
5FAE:  MOVLW  04
5FB0:  MOVWF  FEA
5FB2:  MOVLW  E1
5FB4:  MOVWF  FE9
5FB6:  MOVFF  FF2,501
5FBA:  BCF    FF2.7
5FBC:  MOVLW  00
5FBE:  CALL   0CD4
5FC2:  TBLRD*-
5FC4:  TBLRD*+
5FC6:  MOVF   FF5,W
5FC8:  MOVWF  FEE
5FCA:  IORLW  00
5FCC:  BNZ   5FC4
5FCE:  MOVLB  5
5FD0:  BTFSC  x01.7
5FD2:  BSF    FF2.7
5FD4:  MOVLW  04
5FD6:  MOVWF  x02
5FD8:  MOVLW  E1
5FDA:  MOVWF  x01
5FDC:  CLRF   x03
5FDE:  MOVLW  37
5FE0:  MOVWF  x04
5FE2:  MOVLW  02
5FE4:  MOVWF  x05
5FE6:  MOVLW  01
5FE8:  MOVWF  x06
5FEA:  MOVLB  0
5FEC:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
5FF0:  MOVLB  4
5FF2:  BCF    x96.2
5FF4:  BCF    x96.3
5FF6:  BCF    x96.4
5FF8:  BCF    x96.5
5FFA:  BCF    x96.6
5FFC:  BCF    x96.7
5FFE:  BCF    x97.0
6000:  BCF    x97.1
....................                disp_Alarma=1; 
6002:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
6004:  MOVF   x92,W
6006:  SUBLW  02
6008:  BNZ   6084
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
600A:  CLRF   xA8
600C:  CLRF   xA9
....................             if(disp_Alarma==0) 
600E:  BTFSC  x97.3
6010:  BRA    6084
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6012:  MOVLB  5
6014:  CLRF   x13
6016:  MOVLW  37
6018:  MOVWF  x14
601A:  MOVLW  7F
601C:  MOVWF  x15
601E:  MOVLW  3F
6020:  MOVWF  x16
6022:  MOVLW  01
6024:  MOVWF  x17
6026:  CLRF   x18
6028:  MOVLB  0
602A:  CALL   156E
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
602E:  MOVLW  04
6030:  MOVWF  FEA
6032:  MOVLW  E1
6034:  MOVWF  FE9
6036:  MOVFF  FF2,501
603A:  BCF    FF2.7
603C:  MOVLW  00
603E:  CALL   0CFA
6042:  TBLRD*-
6044:  TBLRD*+
6046:  MOVF   FF5,W
6048:  MOVWF  FEE
604A:  IORLW  00
604C:  BNZ   6044
604E:  MOVLB  5
6050:  BTFSC  x01.7
6052:  BSF    FF2.7
6054:  MOVLW  04
6056:  MOVWF  x02
6058:  MOVLW  E1
605A:  MOVWF  x01
605C:  CLRF   x03
605E:  MOVLW  37
6060:  MOVWF  x04
6062:  MOVLW  02
6064:  MOVWF  x05
6066:  MOVLW  01
6068:  MOVWF  x06
606A:  MOVLB  0
606C:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
6070:  MOVLB  4
6072:  BCF    x96.2
6074:  BCF    x96.3
6076:  BCF    x96.4
6078:  BCF    x96.5
607A:  BCF    x96.6
607C:  BCF    x96.7
607E:  BCF    x97.0
6080:  BCF    x97.1
....................                disp_Alarma=1; 
6082:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma2==5) // Alarma de Error por falta de agua, por lo cual no genera Presión. 
6084:  MOVF   x94,W
6086:  SUBLW  05
6088:  BNZ   60EE
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
608A:  CLRF   xA8
608C:  CLRF   xA9
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
608E:  MOVLB  5
6090:  CLRF   x13
6092:  MOVLW  37
6094:  MOVWF  x14
6096:  MOVLW  7F
6098:  MOVWF  x15
609A:  MOVLW  3F
609C:  MOVWF  x16
609E:  MOVLW  01
60A0:  MOVWF  x17
60A2:  CLRF   x18
60A4:  MOVLB  0
60A6:  CALL   156E
....................             strcpy(Menus.Letra,"Error:ET03");displayMenu(Menus.Letra,0,55,2,1); 
60AA:  MOVLW  04
60AC:  MOVWF  FEA
60AE:  MOVLW  E1
60B0:  MOVWF  FE9
60B2:  MOVFF  FF2,501
60B6:  BCF    FF2.7
60B8:  MOVLW  00
60BA:  CALL   0D20
60BE:  TBLRD*-
60C0:  TBLRD*+
60C2:  MOVF   FF5,W
60C4:  MOVWF  FEE
60C6:  IORLW  00
60C8:  BNZ   60C0
60CA:  MOVLB  5
60CC:  BTFSC  x01.7
60CE:  BSF    FF2.7
60D0:  MOVLW  04
60D2:  MOVWF  x02
60D4:  MOVLW  E1
60D6:  MOVWF  x01
60D8:  CLRF   x03
60DA:  MOVLW  37
60DC:  MOVWF  x04
60DE:  MOVLW  02
60E0:  MOVWF  x05
60E2:  MOVLW  01
60E4:  MOVWF  x06
60E6:  MOVLB  0
60E8:  CALL   1630
60EC:  MOVLB  4
....................          } 
....................       } 
....................       else 
60EE:  BRA    6440
....................       {  
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
60F0:  MOVF   xA8,W
60F2:  SUBLW  02
60F4:  BTFSS  FD8.2
60F6:  BRA    62B8
60F8:  BTFSS  x96.1
60FA:  BRA    62B8
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
60FC:  BTFSS  x95.5
60FE:  BRA    61DE
....................             { 
....................                if(z==0) 
6100:  BTFSC  x97.2
6102:  BRA    6154
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
6104:  MOVLB  5
6106:  CLRF   x01
6108:  MOVLW  5A
610A:  MOVWF  x02
610C:  MOVLW  38
610E:  MOVWF  x03
6110:  MOVLB  0
6112:  CALL   26BC
6116:  MOVLW  19
6118:  MOVLB  5
611A:  MOVWF  x13
611C:  MOVLW  12
611E:  MOVWF  x14
6120:  MOVLW  3C
6122:  MOVWF  x15
6124:  MOVLW  1A
6126:  MOVWF  x16
6128:  CLRF   x17
612A:  CLRF   x18
612C:  MOVLB  0
612E:  CALL   156E
6132:  MOVLW  37
6134:  MOVLB  5
6136:  MOVWF  x13
6138:  MOVLW  12
613A:  MOVWF  x14
613C:  MOVLW  44
613E:  MOVWF  x15
6140:  MOVLW  35
6142:  MOVWF  x16
6144:  CLRF   x17
6146:  MOVLW  01
6148:  MOVWF  x18
614A:  MOVLB  0
614C:  CALL   156E
6150:  MOVLB  4
6152:  BSF    x97.2
....................                } 
....................                if(disp_Despresurizando==0) 
6154:  BTFSC  x96.6
6156:  BRA    61D6
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6158:  MOVLB  5
615A:  CLRF   x13
615C:  MOVLW  37
615E:  MOVWF  x14
6160:  MOVLW  7F
6162:  MOVWF  x15
6164:  MOVLW  3F
6166:  MOVWF  x16
6168:  MOVLW  01
616A:  MOVWF  x17
616C:  CLRF   x18
616E:  MOVLB  0
6170:  CALL   156E
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
6174:  MOVLW  04
6176:  MOVWF  FEA
6178:  MOVLW  E1
617A:  MOVWF  FE9
617C:  MOVFF  FF2,501
6180:  BCF    FF2.7
6182:  MOVLW  00
6184:  CALL   0D46
6188:  TBLRD*-
618A:  TBLRD*+
618C:  MOVF   FF5,W
618E:  MOVWF  FEE
6190:  IORLW  00
6192:  BNZ   618A
6194:  MOVLB  5
6196:  BTFSC  x01.7
6198:  BSF    FF2.7
619A:  MOVLW  04
619C:  MOVWF  x02
619E:  MOVLW  E1
61A0:  MOVWF  x01
61A2:  CLRF   x03
61A4:  MOVLW  37
61A6:  MOVWF  x04
61A8:  MOVLW  02
61AA:  MOVWF  x05
61AC:  MOVLW  01
61AE:  MOVWF  x06
61B0:  MOVLB  0
61B2:  CALL   1630
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
61B6:  MOVLB  4
61B8:  BCF    x96.2
61BA:  BCF    x96.3
61BC:  BCF    x96.4
61BE:  BCF    x96.5
61C0:  BSF    x96.6
61C2:  BCF    x96.7
61C4:  BCF    x97.0
61C6:  BCF    x97.1
....................                   glcd_imagen(5); 
61C8:  MOVLW  05
61CA:  MOVLB  5
61CC:  MOVWF  x01
61CE:  MOVLB  0
61D0:  CALL   2078
61D4:  MOVLB  4
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
61D6:  MOVLW  02
61D8:  MOVWF  xAA
61DA:  MOVWF  xA9
....................             } 
....................             else 
61DC:  BRA    62B8
....................             { 
....................                if(z==0) 
61DE:  BTFSC  x97.2
61E0:  BRA    6232
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
61E2:  MOVLB  5
61E4:  CLRF   x01
61E6:  MOVLW  5A
61E8:  MOVWF  x02
61EA:  MOVLW  38
61EC:  MOVWF  x03
61EE:  MOVLB  0
61F0:  CALL   26BC
61F4:  MOVLW  19
61F6:  MOVLB  5
61F8:  MOVWF  x13
61FA:  MOVLW  12
61FC:  MOVWF  x14
61FE:  MOVLW  3C
6200:  MOVWF  x15
6202:  MOVLW  1A
6204:  MOVWF  x16
6206:  CLRF   x17
6208:  CLRF   x18
620A:  MOVLB  0
620C:  CALL   156E
6210:  MOVLW  37
6212:  MOVLB  5
6214:  MOVWF  x13
6216:  MOVLW  12
6218:  MOVWF  x14
621A:  MOVLW  44
621C:  MOVWF  x15
621E:  MOVLW  35
6220:  MOVWF  x16
6222:  CLRF   x17
6224:  MOVLW  01
6226:  MOVWF  x18
6228:  MOVLB  0
622A:  CALL   156E
622E:  MOVLB  4
6230:  BSF    x97.2
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
6232:  BTFSC  x96.4
6234:  BRA    62B4
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6236:  MOVLB  5
6238:  CLRF   x13
623A:  MOVLW  37
623C:  MOVWF  x14
623E:  MOVLW  7F
6240:  MOVWF  x15
6242:  MOVLW  3F
6244:  MOVWF  x16
6246:  MOVLW  01
6248:  MOVWF  x17
624A:  CLRF   x18
624C:  MOVLB  0
624E:  CALL   156E
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
6252:  MOVLW  04
6254:  MOVWF  FEA
6256:  MOVLW  E1
6258:  MOVWF  FE9
625A:  MOVFF  FF2,501
625E:  BCF    FF2.7
6260:  MOVLW  00
6262:  CALL   0D70
6266:  TBLRD*-
6268:  TBLRD*+
626A:  MOVF   FF5,W
626C:  MOVWF  FEE
626E:  IORLW  00
6270:  BNZ   6268
6272:  MOVLB  5
6274:  BTFSC  x01.7
6276:  BSF    FF2.7
6278:  MOVLW  04
627A:  MOVWF  x02
627C:  MOVLW  E1
627E:  MOVWF  x01
6280:  CLRF   x03
6282:  MOVLW  37
6284:  MOVWF  x04
6286:  MOVLW  02
6288:  MOVWF  x05
628A:  MOVLW  01
628C:  MOVWF  x06
628E:  MOVLB  0
6290:  CALL   1630
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6294:  MOVLB  4
6296:  BCF    x96.2
6298:  BCF    x96.3
629A:  BSF    x96.4
629C:  BCF    x96.5
629E:  BCF    x96.6
62A0:  BCF    x96.7
62A2:  BCF    x97.0
62A4:  BCF    x97.1
....................                   glcd_imagen(5); 
62A6:  MOVLW  05
62A8:  MOVLB  5
62AA:  MOVWF  x01
62AC:  MOVLB  0
62AE:  CALL   2078
62B2:  MOVLB  4
....................                } 
....................                Exhaust=1; 
62B4:  MOVLW  01
62B6:  MOVWF  xAA
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0 && AlarmaAgua==0) 
62B8:  MOVF   x8D,F
62BA:  BNZ   633C
62BC:  MOVF   x93,F
62BE:  BNZ   633C
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0 && flag_agua==1) 
62C0:  BTFSC  x97.0
62C2:  BRA    633C
62C4:  MOVF   xA6,F
62C6:  BNZ   633C
62C8:  BTFSS  x96.1
62CA:  BRA    633C
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
62CC:  MOVLB  5
62CE:  CLRF   x13
62D0:  MOVLW  37
62D2:  MOVWF  x14
62D4:  MOVLW  7F
62D6:  MOVWF  x15
62D8:  MOVLW  3F
62DA:  MOVWF  x16
62DC:  MOVLW  01
62DE:  MOVWF  x17
62E0:  CLRF   x18
62E2:  MOVLB  0
62E4:  CALL   156E
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
62E8:  MOVLW  04
62EA:  MOVWF  FEA
62EC:  MOVLW  E1
62EE:  MOVWF  FE9
62F0:  MOVFF  FF2,501
62F4:  BCF    FF2.7
62F6:  MOVLW  00
62F8:  CALL   0D92
62FC:  TBLRD*-
62FE:  TBLRD*+
6300:  MOVF   FF5,W
6302:  MOVWF  FEE
6304:  IORLW  00
6306:  BNZ   62FE
6308:  MOVLB  5
630A:  BTFSC  x01.7
630C:  BSF    FF2.7
630E:  MOVLW  04
6310:  MOVWF  x02
6312:  MOVLW  E1
6314:  MOVWF  x01
6316:  CLRF   x03
6318:  MOVLW  37
631A:  MOVWF  x04
631C:  MOVLW  02
631E:  MOVWF  x05
6320:  MOVLW  01
6322:  MOVWF  x06
6324:  MOVLB  0
6326:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
632A:  MOVLB  4
632C:  BCF    x96.2
632E:  BCF    x96.3
6330:  BCF    x96.4
6332:  BCF    x96.5
6334:  BCF    x96.6
6336:  BCF    x96.7
6338:  BSF    x97.0
633A:  BCF    x97.1
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          disp_Alarma=0; 
633C:  BCF    x97.3
....................          if(NivelTanque==1 && flag_agua==0 ) 
633E:  DECFSZ x90,W
6340:  BRA    634A
6342:  BTFSC  x96.1
6344:  BRA    634A
....................          { 
....................             flag_agua=1; 
6346:  BSF    x96.1
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
6348:  BRA    6440
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && flag_agua==0) 
634A:  MOVF   xA8,F
634C:  BNZ   63C8
634E:  BTFSC  x96.3
6350:  BRA    63C8
6352:  BTFSC  x96.1
6354:  BRA    63C8
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6356:  MOVLB  5
6358:  CLRF   x13
635A:  MOVLW  37
635C:  MOVWF  x14
635E:  MOVLW  7F
6360:  MOVWF  x15
6362:  MOVLW  3F
6364:  MOVWF  x16
6366:  MOVLW  01
6368:  MOVWF  x17
636A:  CLRF   x18
636C:  MOVLB  0
636E:  CALL   156E
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
6372:  MOVLW  04
6374:  MOVWF  FEA
6376:  MOVLW  E1
6378:  MOVWF  FE9
637A:  MOVFF  FF2,501
637E:  BCF    FF2.7
6380:  MOVLW  00
6382:  CALL   0DBC
6386:  TBLRD*-
6388:  TBLRD*+
638A:  MOVF   FF5,W
638C:  MOVWF  FEE
638E:  IORLW  00
6390:  BNZ   6388
6392:  MOVLB  5
6394:  BTFSC  x01.7
6396:  BSF    FF2.7
6398:  MOVLW  04
639A:  MOVWF  x02
639C:  MOVLW  E1
639E:  MOVWF  x01
63A0:  CLRF   x03
63A2:  MOVLW  37
63A4:  MOVWF  x04
63A6:  MOVLW  02
63A8:  MOVWF  x05
63AA:  MOVLW  01
63AC:  MOVWF  x06
63AE:  MOVLB  0
63B0:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
63B4:  MOVLB  4
63B6:  BCF    x96.2
63B8:  BSF    x96.3
63BA:  BCF    x96.4
63BC:  BCF    x96.5
63BE:  BCF    x96.6
63C0:  BCF    x96.7
63C2:  BCF    x97.0
63C4:  BCF    x97.1
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
63C6:  CLRF   xA0
....................             } 
....................              
....................             if(AlarmaAgua==1) 
63C8:  DECFSZ x93,W
63CA:  BRA    6440
....................             { 
....................                if(disp_AlarmaAgua==0) 
63CC:  BTFSC  x97.4
63CE:  BRA    6440
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
63D0:  MOVLB  5
63D2:  CLRF   x13
63D4:  MOVLW  37
63D6:  MOVWF  x14
63D8:  MOVLW  7F
63DA:  MOVWF  x15
63DC:  MOVLW  3F
63DE:  MOVWF  x16
63E0:  MOVLW  01
63E2:  MOVWF  x17
63E4:  CLRF   x18
63E6:  MOVLB  0
63E8:  CALL   156E
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
63EC:  MOVLW  04
63EE:  MOVWF  FEA
63F0:  MOVLW  E1
63F2:  MOVWF  FE9
63F4:  MOVFF  FF2,501
63F8:  BCF    FF2.7
63FA:  MOVLW  00
63FC:  CALL   0DE0
6400:  TBLRD*-
6402:  TBLRD*+
6404:  MOVF   FF5,W
6406:  MOVWF  FEE
6408:  IORLW  00
640A:  BNZ   6402
640C:  MOVLB  5
640E:  BTFSC  x01.7
6410:  BSF    FF2.7
6412:  MOVLW  04
6414:  MOVWF  x02
6416:  MOVLW  E1
6418:  MOVWF  x01
641A:  CLRF   x03
641C:  MOVLW  37
641E:  MOVWF  x04
6420:  MOVLW  02
6422:  MOVWF  x05
6424:  MOVLW  01
6426:  MOVWF  x06
6428:  MOVLB  0
642A:  CALL   1630
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
642E:  MOVLB  4
6430:  BCF    x96.2
6432:  BCF    x96.4
6434:  BCF    x96.5
6436:  BCF    x96.6
6438:  BCF    x96.7
643A:  BCF    x97.0
643C:  BCF    x97.1
....................                   disp_AlarmaAgua=1; 
643E:  BSF    x97.4
....................                } 
....................             } 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
6440:  MOVLB  0
6442:  CALL   2018
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
6446:  MOVLB  4
6448:  BTFSS  x95.6
644A:  BRA    6722
....................    {                       
....................       Lectura=0; 
644C:  BCF    x95.6
....................       displayTiempo(Presostato,31,40,2,1); 
644E:  MOVFF  491,502
6452:  MOVLW  1F
6454:  MOVLB  5
6456:  MOVWF  x03
6458:  MOVLW  28
645A:  MOVWF  x04
645C:  MOVLW  02
645E:  MOVWF  x05
6460:  MOVLW  01
6462:  MOVWF  x06
6464:  MOVLB  0
6466:  CALL   2424
....................       glcd_rect(51, 40, 62, 48, YES, OFF);glcd_text57(52, 40, kpa, 1, ON); 
646A:  MOVLW  33
646C:  MOVLB  5
646E:  MOVWF  x13
6470:  MOVLW  28
6472:  MOVWF  x14
6474:  MOVLW  3E
6476:  MOVWF  x15
6478:  MOVLW  30
647A:  MOVWF  x16
647C:  MOVLW  01
647E:  MOVWF  x17
6480:  CLRF   x18
6482:  MOVLB  0
6484:  CALL   156E
6488:  MOVLW  34
648A:  MOVLB  5
648C:  MOVWF  x12
648E:  MOVLW  28
6490:  MOVWF  x13
6492:  MOVLW  04
6494:  MOVWF  x15
6496:  MOVLW  89
6498:  MOVWF  x14
649A:  MOVLW  01
649C:  MOVWF  x16
649E:  MOVWF  x17
64A0:  MOVLB  0
64A2:  CALL   1278
....................       displayT(ADC_Pt100,69,20,2); 
64A6:  MOVFF  4BD,504
64AA:  MOVFF  4BC,503
64AE:  MOVFF  4BB,502
64B2:  MOVFF  4BA,501
64B6:  MOVLW  45
64B8:  MOVLB  5
64BA:  MOVWF  x05
64BC:  MOVLW  14
64BE:  MOVWF  x06
64C0:  MOVLW  02
64C2:  MOVWF  x07
64C4:  MOVLB  0
64C6:  GOTO   2A50
....................       glcd_circle(95,40,2,NO,ON); 
64CA:  MOVLW  5F
64CC:  MOVLB  5
64CE:  MOVWF  x01
64D0:  MOVLW  28
64D2:  MOVWF  x02
64D4:  MOVLW  02
64D6:  MOVWF  x03
64D8:  CLRF   x04
64DA:  MOVLW  01
64DC:  MOVWF  x05
64DE:  MOVLB  0
64E0:  CALL   2174
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
64E4:  MOVLW  04
64E6:  MOVWF  FEA
64E8:  MOVLW  E1
64EA:  MOVWF  FE9
64EC:  MOVFF  FF2,501
64F0:  BCF    FF2.7
64F2:  MOVLW  00
64F4:  CALL   09D0
64F8:  TBLRD*-
64FA:  TBLRD*+
64FC:  MOVF   FF5,W
64FE:  MOVWF  FEE
6500:  IORLW  00
6502:  BNZ   64FA
6504:  MOVLB  5
6506:  BTFSC  x01.7
6508:  BSF    FF2.7
650A:  MOVLW  04
650C:  MOVWF  x02
650E:  MOVLW  E1
6510:  MOVWF  x01
6512:  MOVLW  66
6514:  MOVWF  x03
6516:  MOVLW  28
6518:  MOVWF  x04
651A:  MOVLW  02
651C:  MOVWF  x05
651E:  MOVWF  x06
6520:  MOVLB  0
6522:  CALL   1630
....................       displayTiempo(Setpoint,5,20,2,1); 
6526:  MOVFF  4A5,502
652A:  MOVLW  05
652C:  MOVLB  5
652E:  MOVWF  x03
6530:  MOVLW  14
6532:  MOVWF  x04
6534:  MOVLW  02
6536:  MOVWF  x05
6538:  MOVLW  01
653A:  MOVWF  x06
653C:  MOVLB  0
653E:  CALL   2424
....................  
....................       glcd_imagen(5); 
6542:  MOVLW  05
6544:  MOVLB  5
6546:  MOVWF  x01
6548:  MOVLB  0
654A:  CALL   2078
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
654E:  MOVLW  04
6550:  MOVWF  FEA
6552:  MOVLW  E1
6554:  MOVWF  FE9
6556:  MOVFF  FF2,501
655A:  BCF    FF2.7
655C:  MOVLW  00
655E:  CALL   098C
6562:  TBLRD*-
6564:  TBLRD*+
6566:  MOVF   FF5,W
6568:  MOVWF  FEE
656A:  IORLW  00
656C:  BNZ   6564
656E:  MOVLB  5
6570:  BTFSC  x01.7
6572:  BSF    FF2.7
6574:  MOVLW  04
6576:  MOVWF  x02
6578:  MOVLW  E1
657A:  MOVWF  x01
657C:  CLRF   x03
657E:  CLRF   x04
6580:  MOVLW  02
6582:  MOVWF  x05
6584:  MOVLW  01
6586:  MOVWF  x06
6588:  MOVLB  0
658A:  CALL   1630
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
658E:  MOVLW  04
6590:  MOVWF  FEA
6592:  MOVLW  E1
6594:  MOVWF  FE9
6596:  MOVFF  FF2,501
659A:  BCF    FF2.7
659C:  MOVLW  00
659E:  CALL   09AE
65A2:  TBLRD*-
65A4:  TBLRD*+
65A6:  MOVF   FF5,W
65A8:  MOVWF  FEE
65AA:  IORLW  00
65AC:  BNZ   65A4
65AE:  MOVLB  5
65B0:  BTFSC  x01.7
65B2:  BSF    FF2.7
65B4:  MOVLW  04
65B6:  MOVWF  x02
65B8:  MOVLW  E1
65BA:  MOVWF  x01
65BC:  CLRF   x03
65BE:  MOVLW  08
65C0:  MOVWF  x04
65C2:  MOVLW  02
65C4:  MOVWF  x05
65C6:  MOVLW  01
65C8:  MOVWF  x06
65CA:  MOVLB  0
65CC:  CALL   1630
....................       MuestraTiemposProgramados(); 
65D0:  CALL   257C
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
65D4:  MOVFF  4C1,502
65D8:  MOVLW  50
65DA:  MOVLB  5
65DC:  MOVWF  x03
65DE:  CLRF   x04
65E0:  CLRF   x05
65E2:  MOVLW  01
65E4:  MOVWF  x06
65E6:  MOVLB  0
65E8:  CALL   2424
65EC:  MOVFF  4C0,502
65F0:  MOVLW  56
65F2:  MOVLB  5
65F4:  MOVWF  x03
65F6:  CLRF   x04
65F8:  CLRF   x05
65FA:  MOVLW  01
65FC:  MOVWF  x06
65FE:  MOVLB  0
6600:  CALL   2424
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
6604:  MOVLW  04
6606:  MOVWF  FEA
6608:  MOVLW  E1
660A:  MOVWF  FE9
660C:  MOVFF  FF2,501
6610:  BCF    FF2.7
6612:  MOVLW  00
6614:  CALL   06BE
6618:  TBLRD*-
661A:  TBLRD*+
661C:  MOVF   FF5,W
661E:  MOVWF  FEE
6620:  IORLW  00
6622:  BNZ   661A
6624:  MOVLB  5
6626:  BTFSC  x01.7
6628:  BSF    FF2.7
662A:  MOVLW  04
662C:  MOVWF  x02
662E:  MOVLW  E1
6630:  MOVWF  x01
6632:  MOVLW  5C
6634:  MOVWF  x03
6636:  CLRF   x04
6638:  MOVLW  02
663A:  MOVWF  x05
663C:  MOVLW  01
663E:  MOVWF  x06
6640:  MOVLB  0
6642:  CALL   1630
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6646:  MOVFF  4BF,502
664A:  MOVLW  62
664C:  MOVLB  5
664E:  MOVWF  x03
6650:  CLRF   x04
6652:  CLRF   x05
6654:  MOVLW  01
6656:  MOVWF  x06
6658:  MOVLB  0
665A:  CALL   2424
665E:  MOVFF  4BE,502
6662:  MOVLW  68
6664:  MOVLB  5
6666:  MOVWF  x03
6668:  CLRF   x04
666A:  CLRF   x05
666C:  MOVLW  01
666E:  MOVWF  x06
6670:  MOVLB  0
6672:  CALL   2424
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
6676:  MOVFF  4C9,502
667A:  MOVLW  50
667C:  MOVLB  5
667E:  MOVWF  x03
6680:  MOVLW  08
6682:  MOVWF  x04
6684:  CLRF   x05
6686:  MOVLW  01
6688:  MOVWF  x06
668A:  MOVLB  0
668C:  CALL   2424
6690:  MOVFF  4C8,502
6694:  MOVLW  56
6696:  MOVLB  5
6698:  MOVWF  x03
669A:  MOVLW  08
669C:  MOVWF  x04
669E:  CLRF   x05
66A0:  MOVLW  01
66A2:  MOVWF  x06
66A4:  MOVLB  0
66A6:  CALL   2424
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
66AA:  MOVLW  04
66AC:  MOVWF  FEA
66AE:  MOVLW  E1
66B0:  MOVWF  FE9
66B2:  MOVFF  FF2,501
66B6:  BCF    FF2.7
66B8:  MOVLW  00
66BA:  CALL   06BE
66BE:  TBLRD*-
66C0:  TBLRD*+
66C2:  MOVF   FF5,W
66C4:  MOVWF  FEE
66C6:  IORLW  00
66C8:  BNZ   66C0
66CA:  MOVLB  5
66CC:  BTFSC  x01.7
66CE:  BSF    FF2.7
66D0:  MOVLW  04
66D2:  MOVWF  x02
66D4:  MOVLW  E1
66D6:  MOVWF  x01
66D8:  MOVLW  5C
66DA:  MOVWF  x03
66DC:  MOVLW  08
66DE:  MOVWF  x04
66E0:  MOVLW  02
66E2:  MOVWF  x05
66E4:  MOVLW  01
66E6:  MOVWF  x06
66E8:  MOVLB  0
66EA:  CALL   1630
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
66EE:  MOVFF  4C7,502
66F2:  MOVLW  62
66F4:  MOVLB  5
66F6:  MOVWF  x03
66F8:  MOVLW  08
66FA:  MOVWF  x04
66FC:  CLRF   x05
66FE:  MOVLW  01
6700:  MOVWF  x06
6702:  MOVLB  0
6704:  CALL   2424
6708:  MOVFF  4C6,502
670C:  MOVLW  68
670E:  MOVLB  5
6710:  MOVWF  x03
6712:  MOVLW  08
6714:  MOVWF  x04
6716:  CLRF   x05
6718:  MOVLW  01
671A:  MOVWF  x06
671C:  MOVLB  0
671E:  CALL   2424
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint-0.3))// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
6722:  MOVLB  5
6724:  CLRF   x02
6726:  MOVFF  4A5,501
672A:  MOVLB  0
672C:  CALL   19FA
6730:  MOVFF  00,501
6734:  MOVFF  01,502
6738:  MOVFF  02,503
673C:  MOVFF  03,504
6740:  BSF    FD8.1
6742:  MOVFF  03,508
6746:  MOVFF  02,507
674A:  MOVFF  01,506
674E:  MOVFF  00,505
6752:  MOVLW  9A
6754:  MOVLB  5
6756:  MOVWF  x0C
6758:  MOVLW  99
675A:  MOVWF  x0B
675C:  MOVLW  19
675E:  MOVWF  x0A
6760:  MOVLW  7D
6762:  MOVWF  x09
6764:  MOVLB  0
6766:  CALL   1B90
676A:  MOVFF  03,504
676E:  MOVFF  02,503
6772:  MOVFF  01,502
6776:  MOVFF  00,501
677A:  MOVFF  4BD,508
677E:  MOVFF  4BC,507
6782:  MOVFF  4BB,506
6786:  MOVFF  4BA,505
678A:  GOTO   2ACE
678E:  BC    6792
6790:  BNZ   67F8
....................    { 
....................       if(est==0) 
6792:  MOVLB  4
6794:  BTFSC  x96.0
6796:  BRA    67FA
....................       { 
....................          tiempo_esterilizacion=1; 
6798:  MOVLW  01
679A:  MOVWF  xA8
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
679C:  MOVLB  5
679E:  CLRF   x01
67A0:  MOVLW  5A
67A2:  MOVWF  x02
67A4:  MOVLW  38
67A6:  MOVWF  x03
67A8:  MOVLB  0
67AA:  CALL   26BC
67AE:  MOVLW  0F
67B0:  MOVLB  5
67B2:  MOVWF  x13
67B4:  MOVLW  12
67B6:  MOVWF  x14
67B8:  MOVLW  1E
67BA:  MOVWF  x15
67BC:  MOVLW  35
67BE:  MOVWF  x16
67C0:  CLRF   x17
67C2:  CLRF   x18
67C4:  MOVLB  0
67C6:  CALL   156E
67CA:  MOVLW  19
67CC:  MOVLB  5
67CE:  MOVWF  x13
67D0:  MOVLW  12
67D2:  MOVWF  x14
67D4:  MOVLW  3C
67D6:  MOVWF  x15
67D8:  MOVLW  1A
67DA:  MOVWF  x16
67DC:  CLRF   x17
67DE:  MOVLW  01
67E0:  MOVWF  x18
67E2:  MOVLB  0
67E4:  CALL   156E
67E8:  MOVLB  4
67EA:  BSF    x96.0
....................          glcd_imagen(5); 
67EC:  MOVLW  05
67EE:  MOVLB  5
67F0:  MOVWF  x01
67F2:  MOVLB  0
67F4:  CALL   2078
67F8:  MOVLB  4
....................       } 
....................    }   
....................     
....................    /*if(ADC_Pt100<((float)Setpoint-2.0)) 
....................    { 
....................       glcd_rect(15, 18, 30, 53, NO, ON); 
....................       if(est==1) 
....................       {glcd_rect(25, 18, 60, 26, NO, OFF);} 
....................       est=0;tiempo_esterilizacion=0; 
....................    }*/ 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
67FA:  DECFSZ xAA,W
67FC:  BRA    6826
67FE:  MOVF   xA8,W
6800:  SUBLW  02
6802:  BNZ   6826
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
6804:  CLRF   xA0
....................       if(Presostato<20) 
6806:  MOVF   x91,W
6808:  SUBLW  13
680A:  BNC   6810
....................       { 
....................          EVDesfogue=3; 
680C:  MOVLW  03
680E:  MOVWF  x99
....................       } 
....................       if(Presostato<2) 
6810:  MOVF   x91,W
6812:  SUBLW  01
6814:  BNC   6822
....................       { 
....................          tiempo_secado=1; 
6816:  MOVLW  01
6818:  MOVWF  xA9
....................          Control=0;EVDesfogue=3; 
681A:  CLRF   xA0
681C:  MOVLW  03
681E:  MOVWF  x99
....................       } 
....................       else 
6820:  BRA    6826
....................       { 
....................          EVDesfogue=1; 
6822:  MOVLW  01
6824:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
6826:  MOVF   xAA,W
6828:  SUBLW  02
682A:  BNZ   685A
682C:  MOVF   xA8,W
682E:  SUBLW  02
6830:  BNZ   685A
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
6832:  CLRF   xA0
....................       if(Presostato<20) 
6834:  MOVF   x91,W
6836:  SUBLW  13
6838:  BNC   6840
....................       { 
....................          EVDesfogue=3; 
683A:  MOVLW  03
683C:  MOVWF  x99
....................       } 
....................       else 
683E:  BRA    6844
....................       { 
....................          EVDesfogue=2; 
6840:  MOVLW  02
6842:  MOVWF  x99
....................       } 
....................       if(Presostato<2) 
6844:  MOVF   x91,W
6846:  SUBLW  01
6848:  BNC   685A
....................       { 
....................          tiempo_esterilizacion=3; 
684A:  MOVLW  03
684C:  MOVWF  xA8
....................          tiempo_secado=2; 
684E:  MOVLW  02
6850:  MOVWF  xA9
....................          fin_ciclo=1; 
6852:  MOVLW  01
6854:  MOVWF  xA6
....................          EVDesfogue=3; 
6856:  MOVLW  03
6858:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]==Testerilizacionp[0])&&(Testerilizacion[1]==Testerilizacionp[1])&&(Testerilizacion[2]==Testerilizacionp[2])&&(Testerilizacion[3]==Testerilizacionp[3]) && tiempo_esterilizacion==1) 
685A:  MOVF   xC2,W
685C:  SUBWF  xBE,W
685E:  BNZ   687A
6860:  MOVF   xC3,W
6862:  SUBWF  xBF,W
6864:  BNZ   687A
6866:  MOVF   xC4,W
6868:  SUBWF  xC0,W
686A:  BNZ   687A
686C:  MOVF   xC5,W
686E:  SUBWF  xC1,W
6870:  BNZ   687A
6872:  DECFSZ xA8,W
6874:  BRA    687A
....................    { 
....................       tiempo_esterilizacion=2; 
6876:  MOVLW  02
6878:  MOVWF  xA8
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
687A:  MOVF   xCA,W
687C:  XORLW  80
687E:  MOVWF  00
6880:  MOVF   xC6,W
6882:  XORLW  80
6884:  SUBWF  00,W
6886:  BZ    688A
6888:  BC    68CA
688A:  MOVF   xCB,W
688C:  XORLW  80
688E:  MOVWF  00
6890:  MOVF   xC7,W
6892:  XORLW  80
6894:  SUBWF  00,W
6896:  BZ    689A
6898:  BC    68CA
689A:  MOVF   xCC,W
689C:  XORLW  80
689E:  MOVWF  00
68A0:  MOVF   xC8,W
68A2:  XORLW  80
68A4:  SUBWF  00,W
68A6:  BZ    68AA
68A8:  BC    68CA
68AA:  MOVF   xCD,W
68AC:  XORLW  80
68AE:  MOVWF  00
68B0:  MOVF   xC9,W
68B2:  XORLW  80
68B4:  SUBWF  00,W
68B6:  BZ    68BA
68B8:  BC    68CA
68BA:  DECFSZ xA9,W
68BC:  BRA    68CA
....................    { 
....................       tiempo_esterilizacion=3; 
68BE:  MOVLW  03
68C0:  MOVWF  xA8
....................       tiempo_secado=2; 
68C2:  MOVLW  02
68C4:  MOVWF  xA9
....................       fin_ciclo=1; 
68C6:  MOVLW  01
68C8:  MOVWF  xA6
....................    } 
....................     
....................    if(fin_ciclo==1) 
68CA:  DECFSZ xA6,W
68CC:  BRA    6948
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
68CE:  CLRF   xA0
68D0:  MOVLW  03
68D2:  MOVWF  x99
....................       if(disp_Fin==0) 
68D4:  BTFSC  x97.1
68D6:  BRA    6948
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
68D8:  MOVLB  5
68DA:  CLRF   x13
68DC:  MOVLW  37
68DE:  MOVWF  x14
68E0:  MOVLW  7F
68E2:  MOVWF  x15
68E4:  MOVLW  3F
68E6:  MOVWF  x16
68E8:  MOVLW  01
68EA:  MOVWF  x17
68EC:  CLRF   x18
68EE:  MOVLB  0
68F0:  CALL   156E
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
68F4:  MOVLW  04
68F6:  MOVWF  FEA
68F8:  MOVLW  E1
68FA:  MOVWF  FE9
68FC:  MOVFF  FF2,501
6900:  BCF    FF2.7
6902:  MOVLW  00
6904:  CALL   0E06
6908:  TBLRD*-
690A:  TBLRD*+
690C:  MOVF   FF5,W
690E:  MOVWF  FEE
6910:  IORLW  00
6912:  BNZ   690A
6914:  MOVLB  5
6916:  BTFSC  x01.7
6918:  BSF    FF2.7
691A:  MOVLW  04
691C:  MOVWF  x02
691E:  MOVLW  E1
6920:  MOVWF  x01
6922:  CLRF   x03
6924:  MOVLW  37
6926:  MOVWF  x04
6928:  MOVLW  02
692A:  MOVWF  x05
692C:  MOVLW  01
692E:  MOVWF  x06
6930:  MOVLB  0
6932:  CALL   1630
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
6936:  MOVLB  4
6938:  BCF    x96.2
693A:  BCF    x96.3
693C:  BSF    x96.4
693E:  BCF    x96.5
6940:  BSF    x96.6
6942:  BCF    x96.7
6944:  BCF    x97.0
6946:  BSF    x97.1
....................       }    
....................        
....................    } 
....................    if(RIGHT) 
6948:  BSF    F92.2
694A:  BTFSS  F80.2
694C:  BRA    6986
....................    { 
....................       glcd_init(ON); 
694E:  MOVLW  01
6950:  MOVLB  5
6952:  MOVWF  x01
6954:  MOVLB  0
6956:  CALL   1114
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
695A:  MOVLB  4
695C:  BCF    x96.2
695E:  BCF    x96.3
6960:  BCF    x96.4
6962:  BCF    x96.5
6964:  BCF    x96.6
6966:  BCF    x96.7
6968:  BCF    x97.0
696A:  BCF    x97.1
....................       disp_Alarma=0; 
696C:  BCF    x97.3
....................       delay_ms(1000); 
696E:  MOVLW  04
6970:  MOVLB  5
6972:  MOVWF  x01
6974:  MOVLW  FA
6976:  MOVWF  x02
6978:  MOVLB  0
697A:  CALL   0F98
697E:  MOVLB  5
6980:  DECFSZ x01,F
6982:  BRA    6974
6984:  MOVLB  4
....................    } 
....................    EVAgua=10; 
6986:  MOVLW  0A
6988:  MOVWF  x9A
....................    Envio_Esclavos(); 
698A:  MOVLB  0
698C:  CALL   2018
6990:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6992:  MOVF   xA2,W
6994:  SUBLW  64
6996:  BTFSS  FD8.2
6998:  BRA    6A94
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
699A:  MOVFF  4D6,502
699E:  MOVLB  5
69A0:  CLRF   x03
69A2:  MOVLW  0A
69A4:  MOVWF  x04
69A6:  MOVLW  02
69A8:  MOVWF  x05
69AA:  MOVLW  01
69AC:  MOVWF  x06
69AE:  MOVLB  0
69B0:  CALL   2424
....................    displayTiempo(datoRx[1],0,20,2,1); 
69B4:  MOVFF  4D7,502
69B8:  MOVLB  5
69BA:  CLRF   x03
69BC:  MOVLW  14
69BE:  MOVWF  x04
69C0:  MOVLW  02
69C2:  MOVWF  x05
69C4:  MOVLW  01
69C6:  MOVWF  x06
69C8:  MOVLB  0
69CA:  CALL   2424
....................    displayTiempo(datoRx[2],0,30,2,1); 
69CE:  MOVFF  4D8,502
69D2:  MOVLB  5
69D4:  CLRF   x03
69D6:  MOVLW  1E
69D8:  MOVWF  x04
69DA:  MOVLW  02
69DC:  MOVWF  x05
69DE:  MOVLW  01
69E0:  MOVWF  x06
69E2:  MOVLB  0
69E4:  CALL   2424
....................    displayTiempo(datoRx[3],0,40,2,1); 
69E8:  MOVFF  4D9,502
69EC:  MOVLB  5
69EE:  CLRF   x03
69F0:  MOVLW  28
69F2:  MOVWF  x04
69F4:  MOVLW  02
69F6:  MOVWF  x05
69F8:  MOVLW  01
69FA:  MOVWF  x06
69FC:  MOVLB  0
69FE:  CALL   2424
....................    displayTiempo(Opcion,0,50,2,1); 
6A02:  MOVFF  4A7,502
6A06:  MOVLB  5
6A08:  CLRF   x03
6A0A:  MOVLW  32
6A0C:  MOVWF  x04
6A0E:  MOVLW  02
6A10:  MOVWF  x05
6A12:  MOVLW  01
6A14:  MOVWF  x06
6A16:  MOVLB  0
6A18:  CALL   2424
....................    Lectura_Esclavos(); 
6A1C:  CALL   1EBE
....................    Opcion++; 
6A20:  MOVLB  4
6A22:  INCF   xA7,F
....................    displayTiempo(Puerta,50,10,2,1); 
6A24:  MOVFF  48D,502
6A28:  MOVLW  32
6A2A:  MOVLB  5
6A2C:  MOVWF  x03
6A2E:  MOVLW  0A
6A30:  MOVWF  x04
6A32:  MOVLW  02
6A34:  MOVWF  x05
6A36:  MOVLW  01
6A38:  MOVWF  x06
6A3A:  MOVLB  0
6A3C:  CALL   2424
....................    displayTiempo(Parada,50,20,2,1); 
6A40:  MOVFF  48E,502
6A44:  MOVLW  32
6A46:  MOVLB  5
6A48:  MOVWF  x03
6A4A:  MOVLW  14
6A4C:  MOVWF  x04
6A4E:  MOVLW  02
6A50:  MOVWF  x05
6A52:  MOVLW  01
6A54:  MOVWF  x06
6A56:  MOVLB  0
6A58:  CALL   2424
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6A5C:  MOVFF  4BD,504
6A60:  MOVFF  4BC,503
6A64:  MOVFF  4BB,502
6A68:  MOVFF  4BA,501
6A6C:  GOTO   2B4A
6A70:  MOVFF  01,501
6A74:  MOVFF  01,502
6A78:  MOVLW  32
6A7A:  MOVLB  5
6A7C:  MOVWF  x03
6A7E:  MOVLW  1E
6A80:  MOVWF  x04
6A82:  MOVLW  02
6A84:  MOVWF  x05
6A86:  MOVLW  01
6A88:  MOVWF  x06
6A8A:  MOVLB  0
6A8C:  CALL   2424
....................     
....................  } 
6A90:  MOVLB  4
6A92:  BRA    6992
....................        
....................       while(Parada==0) 
....................       { 
6A94:  MOVF   x8E,F
6A96:  BNZ   6B50
....................          Lectura_Esclavos(); 
6A98:  MOVLB  0
6A9A:  CALL   1EBE
....................          delay_ms(100); 
6A9E:  MOVLW  64
6AA0:  MOVLB  5
6AA2:  MOVWF  x02
6AA4:  MOVLB  0
6AA6:  CALL   0F98
....................          if(disp_Stop==0) 
6AAA:  MOVLB  4
6AAC:  BTFSC  x96.7
6AAE:  BRA    6B4E
....................          { 
....................             glcd_fillScreen(OFF);  
6AB0:  MOVLB  5
6AB2:  CLRF   x02
6AB4:  MOVLB  0
6AB6:  CALL   1002
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6ABA:  MOVLW  04
6ABC:  MOVWF  FEA
6ABE:  MOVLW  E1
6AC0:  MOVWF  FE9
6AC2:  MOVFF  FF2,501
6AC6:  BCF    FF2.7
6AC8:  MOVLW  00
6ACA:  CALL   0E32
6ACE:  TBLRD*-
6AD0:  TBLRD*+
6AD2:  MOVF   FF5,W
6AD4:  MOVWF  FEE
6AD6:  IORLW  00
6AD8:  BNZ   6AD0
6ADA:  MOVLB  5
6ADC:  BTFSC  x01.7
6ADE:  BSF    FF2.7
6AE0:  MOVLW  04
6AE2:  MOVWF  x02
6AE4:  MOVLW  E1
6AE6:  MOVWF  x01
6AE8:  CLRF   x03
6AEA:  MOVLW  0A
6AEC:  MOVWF  x04
6AEE:  CLRF   x05
6AF0:  MOVLW  02
6AF2:  MOVWF  x06
6AF4:  MOVLB  0
6AF6:  CALL   1630
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6AFA:  MOVLW  04
6AFC:  MOVWF  FEA
6AFE:  MOVLW  E1
6B00:  MOVWF  FE9
6B02:  MOVFF  FF2,501
6B06:  BCF    FF2.7
6B08:  MOVLW  00
6B0A:  CALL   0E58
6B0E:  TBLRD*-
6B10:  TBLRD*+
6B12:  MOVF   FF5,W
6B14:  MOVWF  FEE
6B16:  IORLW  00
6B18:  BNZ   6B10
6B1A:  MOVLB  5
6B1C:  BTFSC  x01.7
6B1E:  BSF    FF2.7
6B20:  MOVLW  04
6B22:  MOVWF  x02
6B24:  MOVLW  E1
6B26:  MOVWF  x01
6B28:  CLRF   x03
6B2A:  MOVLW  1E
6B2C:  MOVWF  x04
6B2E:  CLRF   x05
6B30:  MOVLW  02
6B32:  MOVWF  x06
6B34:  MOVLB  0
6B36:  CALL   1630
6B3A:  MOVLB  4
6B3C:  BSF    x95.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6B3E:  BCF    x96.2
6B40:  BCF    x96.3
6B42:  BCF    x96.4
6B44:  BCF    x96.5
6B46:  BCF    x96.6
6B48:  BSF    x96.7
6B4A:  BCF    x97.0
6B4C:  BCF    x97.1
....................          } 
....................       }    
6B4E:  BRA    6A94
....................       if(Parada==1) 
6B50:  DECFSZ x8E,W
6B52:  BRA    6BFC
....................       { 
....................          while(emergency==1) 
....................          { 
6B54:  BTFSS  x95.3
6B56:  BRA    6BFC
....................             Lectura_Esclavos(); 
6B58:  MOVLB  0
6B5A:  CALL   1EBE
....................             if(disp_Stop==1) 
6B5E:  MOVLB  4
6B60:  BTFSS  x96.7
6B62:  BRA    6B72
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6B64:  MOVLB  5
6B66:  CLRF   x02
6B68:  MOVLB  0
6B6A:  CALL   1002
6B6E:  MOVLB  4
6B70:  BCF    x96.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6B72:  MOVLW  04
6B74:  MOVWF  FEA
6B76:  MOVLW  E1
6B78:  MOVWF  FE9
6B7A:  MOVFF  FF2,501
6B7E:  BCF    FF2.7
6B80:  MOVLW  00
6B82:  MOVLB  0
6B84:  CALL   0E7E
6B88:  TBLRD*-
6B8A:  TBLRD*+
6B8C:  MOVF   FF5,W
6B8E:  MOVWF  FEE
6B90:  IORLW  00
6B92:  BNZ   6B8A
6B94:  MOVLB  5
6B96:  BTFSC  x01.7
6B98:  BSF    FF2.7
6B9A:  MOVLW  04
6B9C:  MOVWF  x02
6B9E:  MOVLW  E1
6BA0:  MOVWF  x01
6BA2:  CLRF   x03
6BA4:  MOVLW  0A
6BA6:  MOVWF  x04
6BA8:  CLRF   x05
6BAA:  MOVLW  02
6BAC:  MOVWF  x06
6BAE:  MOVLB  0
6BB0:  CALL   1630
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6BB4:  MOVLW  04
6BB6:  MOVWF  FEA
6BB8:  MOVLW  E1
6BBA:  MOVWF  FE9
6BBC:  MOVFF  FF2,501
6BC0:  BCF    FF2.7
6BC2:  MOVLW  00
6BC4:  CALL   0EA4
6BC8:  TBLRD*-
6BCA:  TBLRD*+
6BCC:  MOVF   FF5,W
6BCE:  MOVWF  FEE
6BD0:  IORLW  00
6BD2:  BNZ   6BCA
6BD4:  MOVLB  5
6BD6:  BTFSC  x01.7
6BD8:  BSF    FF2.7
6BDA:  MOVLW  04
6BDC:  MOVWF  x02
6BDE:  MOVLW  E1
6BE0:  MOVWF  x01
6BE2:  CLRF   x03
6BE4:  MOVLW  1E
6BE6:  MOVWF  x04
6BE8:  CLRF   x05
6BEA:  MOVLW  02
6BEC:  MOVWF  x06
6BEE:  MOVLB  0
6BF0:  CALL   1630
....................          glcd_update();} 
6BF4:  CALL   105C
6BF8:  MOVLB  4
6BFA:  BRA    6B54
....................       } 
....................    } 
6BFC:  MOVLB  0
6BFE:  GOTO   2FEE
.................... } 
6C02:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E1E   BROWNOUT NOWDT BORV20 PUT WDT32768 NOVREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
