CCS PCH C Compiler, Version 4.104, 5967               14-feb.-18 10:04

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclave Horizontal\Sin Precamara\2018\Autoclave 52L Avantika #0045877XX\Firmware V3\GLCD_Controller\GLCD_Controller.lst

               ROM used: 27706 bytes (85%)
                         Largest free fragment is 5058
               RAM used: 1285 (63%) at main() level
                         1335 (65%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2B86
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0ECA
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,NOVREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0F98:  MOVLW  05
0F9A:  MOVWF  FEA
0F9C:  MOVLW  02
0F9E:  MOVWF  FE9
0FA0:  MOVF   FEF,W
0FA2:  BZ    0FC0
0FA4:  MOVLW  0F
0FA6:  MOVWF  01
0FA8:  CLRF   00
0FAA:  DECFSZ 00,F
0FAC:  BRA    0FAA
0FAE:  DECFSZ 01,F
0FB0:  BRA    0FA8
0FB2:  MOVLW  8F
0FB4:  MOVWF  00
0FB6:  DECFSZ 00,F
0FB8:  BRA    0FB6
0FBA:  NOP   
0FBC:  DECFSZ FEF,F
0FBE:  BRA    0FA4
0FC0:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
1918:  MOVLW  08
191A:  MOVWF  01
191C:  MOVLW  11
191E:  MOVWF  00
1920:  DECFSZ 00,F
1922:  BRA    1920
1924:  BCF    F8A.1
1926:  BCF    F93.1
1928:  MOVLW  11
192A:  MOVWF  00
192C:  DECFSZ 00,F
192E:  BRA    192C
1930:  MOVLB  5
1932:  RLCF   x05,F
1934:  BCF    F8A.0
1936:  BTFSC  FD8.0
1938:  BSF    F93.0
193A:  BTFSS  FD8.0
193C:  BCF    F93.0
193E:  BSF    F93.1
1940:  BTFSS  F81.1
1942:  BRA    1940
1944:  DECFSZ 01,F
1946:  BRA    194A
1948:  BRA    194E
194A:  MOVLB  0
194C:  BRA    191C
194E:  MOVLW  11
1950:  MOVWF  00
1952:  DECFSZ 00,F
1954:  BRA    1952
1956:  BCF    F8A.1
1958:  BCF    F93.1
195A:  NOP   
195C:  BSF    F93.0
195E:  MOVLW  11
1960:  MOVWF  00
1962:  DECFSZ 00,F
1964:  BRA    1962
1966:  MOVLW  11
1968:  MOVWF  00
196A:  DECFSZ 00,F
196C:  BRA    196A
196E:  BSF    F93.1
1970:  BTFSS  F81.1
1972:  BRA    1970
1974:  CLRF   01
1976:  MOVLW  11
1978:  MOVWF  00
197A:  DECFSZ 00,F
197C:  BRA    197A
197E:  BTFSC  F81.0
1980:  BSF    01.0
1982:  BCF    F8A.1
1984:  BCF    F93.1
1986:  BCF    F8A.0
1988:  BCF    F93.0
198A:  MOVLB  0
198C:  RETLW  00
198E:  MOVLW  08
1990:  MOVLB  5
1992:  MOVWF  x05
1994:  MOVFF  00,506
1998:  BSF    F93.0
199A:  MOVLW  11
199C:  MOVWF  00
199E:  DECFSZ 00,F
19A0:  BRA    199E
19A2:  BSF    F93.1
19A4:  BTFSS  F81.1
19A6:  BRA    19A4
19A8:  BTFSC  F81.0
19AA:  BSF    FD8.0
19AC:  BTFSS  F81.0
19AE:  BCF    FD8.0
19B0:  RLCF   01,F
19B2:  MOVLW  11
19B4:  MOVWF  00
19B6:  DECFSZ 00,F
19B8:  BRA    19B6
19BA:  BCF    F93.1
19BC:  BCF    F8A.1
19BE:  DECFSZ x05,F
19C0:  BRA    1998
19C2:  BSF    F93.0
19C4:  MOVLW  11
19C6:  MOVWF  00
19C8:  DECFSZ 00,F
19CA:  BRA    19C8
19CC:  BCF    F8A.0
19CE:  MOVF   x06,W
19D0:  BTFSS  FD8.2
19D2:  BCF    F93.0
19D4:  NOP   
19D6:  BSF    F93.1
19D8:  BTFSS  F81.1
19DA:  BRA    19D8
19DC:  MOVLW  11
19DE:  MOVWF  00
19E0:  DECFSZ 00,F
19E2:  BRA    19E0
19E4:  BCF    F8A.1
19E6:  BCF    F93.1
19E8:  MOVLW  11
19EA:  MOVWF  00
19EC:  DECFSZ 00,F
19EE:  BRA    19EC
19F0:  BCF    F8A.0
19F2:  BCF    F93.0
19F4:  MOVLB  0
19F6:  GOTO   1F44 (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
1114:  BCF    F93.2
1116:  BSF    F8A.2
....................    output_low(GLCD_E); 
1118:  BCF    F93.7
111A:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
111C:  BCF    F93.3
111E:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
1120:  BCF    F93.4
1122:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
1124:  BCF    F93.5
1126:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1128:  MOVLB  5
112A:  CLRF   x17
112C:  MOVLW  C0
112E:  MOVWF  x18
1130:  MOVLB  0
1132:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1134:  MOVLW  01
1136:  MOVLB  5
1138:  MOVWF  x17
113A:  MOVLW  C0
113C:  MOVWF  x18
113E:  MOVLB  0
1140:  RCALL  0FC2
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
1142:  MOVLB  5
1144:  CLRF   x17
1146:  MOVLW  40
1148:  MOVWF  x18
114A:  MOVLB  0
114C:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
114E:  MOVLW  01
1150:  MOVLB  5
1152:  MOVWF  x17
1154:  MOVLW  40
1156:  MOVWF  x18
1158:  MOVLB  0
115A:  RCALL  0FC2
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
115C:  MOVLB  5
115E:  CLRF   x17
1160:  MOVLW  B8
1162:  MOVWF  x18
1164:  MOVLB  0
1166:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
1168:  MOVLW  01
116A:  MOVLB  5
116C:  MOVWF  x17
116E:  MOVLW  B8
1170:  MOVWF  x18
1172:  MOVLB  0
1174:  RCALL  0FC2
....................  
....................    if(mode == ON) 
1176:  MOVLB  5
1178:  DECFSZ x01,W
117A:  BRA    1198
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
117C:  CLRF   x17
117E:  MOVLW  3F
1180:  MOVWF  x18
1182:  MOVLB  0
1184:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1186:  MOVLW  01
1188:  MOVLB  5
118A:  MOVWF  x17
118C:  MOVLW  3F
118E:  MOVWF  x18
1190:  MOVLB  0
1192:  RCALL  0FC2
....................    } 
....................    else 
1194:  BRA    11B0
1196:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
1198:  CLRF   x17
119A:  MOVLW  3E
119C:  MOVWF  x18
119E:  MOVLB  0
11A0:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
11A2:  MOVLW  01
11A4:  MOVLB  5
11A6:  MOVWF  x17
11A8:  MOVLW  3E
11AA:  MOVWF  x18
11AC:  MOVLB  0
11AE:  RCALL  0FC2
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
11B0:  MOVLB  5
11B2:  CLRF   x02
11B4:  MOVLB  0
11B6:  RCALL  1002
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
11B8:  RCALL  105C
....................    #endif 
.................... } 
11BA:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
105C:  MOVLB  5
105E:  CLRF   x13
1060:  MOVLW  16
1062:  MOVWF  x12
....................    p2 = displayData.right; 
1064:  MOVLW  02
1066:  MOVWF  x15
1068:  MOVLW  16
106A:  MOVWF  x14
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
106C:  CLRF   x10
106E:  MOVF   x10,W
1070:  SUBLW  07
1072:  BNC   1110
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1074:  BCF    F93.5
1076:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
1078:  CLRF   x17
107A:  MOVLW  40
107C:  MOVWF  x18
107E:  MOVLB  0
1080:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1082:  MOVLW  01
1084:  MOVLB  5
1086:  MOVWF  x17
1088:  MOVLW  40
108A:  MOVWF  x18
108C:  MOVLB  0
108E:  RCALL  0FC2
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1090:  MOVLB  5
1092:  MOVF   x10,W
1094:  IORLW  B8
1096:  MOVWF  x16
1098:  CLRF   x17
109A:  MOVWF  x18
109C:  MOVLB  0
109E:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
10A0:  MOVLB  5
10A2:  MOVF   x10,W
10A4:  IORLW  B8
10A6:  MOVWF  x16
10A8:  MOVLW  01
10AA:  MOVWF  x17
10AC:  MOVFF  516,518
10B0:  MOVLB  0
10B2:  RCALL  0FC2
....................       output_high(GLCD_DI);                     // Set for data 
10B4:  BCF    F93.5
10B6:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
10B8:  MOVLB  5
10BA:  CLRF   x11
10BC:  MOVF   x11,W
10BE:  SUBLW  3F
10C0:  BNC   110C
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
10C2:  MOVFF  513,03
10C6:  MOVF   x12,W
10C8:  INCF   x12,F
10CA:  BTFSC  FD8.2
10CC:  INCF   x13,F
10CE:  MOVWF  FE9
10D0:  MOVFF  03,FEA
10D4:  MOVFF  FEF,516
10D8:  CLRF   x17
10DA:  MOVFF  516,518
10DE:  MOVLB  0
10E0:  RCALL  0FC2
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
10E2:  MOVLB  5
10E4:  MOVFF  515,03
10E8:  MOVF   x14,W
10EA:  INCF   x14,F
10EC:  BTFSC  FD8.2
10EE:  INCF   x15,F
10F0:  MOVWF  FE9
10F2:  MOVFF  03,FEA
10F6:  MOVFF  FEF,516
10FA:  MOVLW  01
10FC:  MOVWF  x17
10FE:  MOVFF  516,518
1102:  MOVLB  0
1104:  RCALL  0FC2
....................       } 
1106:  MOVLB  5
1108:  INCF   x11,F
110A:  BRA    10BC
....................    } 
110C:  INCF   x10,F
110E:  BRA    106E
.................... } 
1110:  MOVLB  0
1112:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
11BC:  MOVLB  5
11BE:  CLRF   x34
11C0:  RRCF   x2F,W
11C2:  MOVWF  x33
11C4:  RRCF   x33,F
11C6:  RRCF   x33,F
11C8:  MOVLW  1F
11CA:  ANDWF  x33,F
....................    temp *= 64; 
11CC:  RLCF   x33,F
11CE:  RLCF   x34,F
11D0:  RLCF   x33,F
11D2:  RLCF   x34,F
11D4:  RLCF   x33,F
11D6:  RLCF   x34,F
11D8:  RLCF   x33,F
11DA:  RLCF   x34,F
11DC:  RLCF   x33,F
11DE:  RLCF   x34,F
11E0:  RLCF   x33,F
11E2:  RLCF   x34,F
11E4:  MOVLW  C0
11E6:  ANDWF  x33,F
....................    temp += x; 
11E8:  MOVF   x2E,W
11EA:  ADDWF  x33,F
11EC:  MOVLW  00
11EE:  ADDWFC x34,F
....................  
....................    if(x > 63) 
11F0:  MOVF   x2E,W
11F2:  SUBLW  3F
11F4:  BC    1210
....................    { 
....................       p = displayData.right + temp - 64; 
11F6:  MOVLW  16
11F8:  ADDWF  x33,W
11FA:  MOVWF  x35
11FC:  MOVLW  02
11FE:  ADDWFC x34,W
1200:  MOVWF  x36
1202:  MOVLW  40
1204:  SUBWF  x35,W
1206:  MOVWF  x31
1208:  MOVLW  00
120A:  SUBWFB x36,W
120C:  MOVWF  x32
....................    } 
....................    else 
120E:  BRA    121C
....................    { 
....................       p = displayData.left + temp; 
1210:  MOVLW  16
1212:  ADDWF  x33,W
1214:  MOVWF  x31
1216:  MOVLW  00
1218:  ADDWFC x34,W
121A:  MOVWF  x32
....................    } 
....................  
....................    if(color) 
121C:  MOVF   x30,F
121E:  BZ    124A
....................    { 
....................       bit_set(*p, y%8); 
1220:  MOVFF  532,03
1224:  MOVFF  531,FE9
1228:  MOVFF  532,FEA
122C:  MOVF   x2F,W
122E:  ANDLW  07
1230:  MOVWF  x35
1232:  MOVLW  01
1234:  MOVWF  00
1236:  MOVF   x35,W
1238:  MOVWF  01
123A:  BZ    1244
123C:  BCF    FD8.0
123E:  RLCF   00,F
1240:  DECFSZ 01,F
1242:  BRA    123C
1244:  MOVF   00,W
1246:  IORWF  FEF,F
....................    } 
....................    else 
1248:  BRA    1274
....................    { 
....................       bit_clear(*p, y%8); 
124A:  MOVFF  532,03
124E:  MOVFF  531,FE9
1252:  MOVFF  532,FEA
1256:  MOVF   x2F,W
1258:  ANDLW  07
125A:  MOVWF  x35
125C:  MOVLW  01
125E:  MOVWF  00
1260:  MOVF   x35,W
1262:  MOVWF  01
1264:  BZ    126E
1266:  BCF    FD8.0
1268:  RLCF   00,F
126A:  DECFSZ 01,F
126C:  BRA    1266
126E:  MOVF   00,W
1270:  XORLW  FF
1272:  ANDWF  FEF,F
....................    } 
.................... } 
1274:  MOVLB  0
1276:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
1002:  MOVLB  5
1004:  CLRF   x05
1006:  MOVLW  16
1008:  MOVWF  x04
....................    p2 = displayData.right; 
100A:  MOVLW  02
100C:  MOVWF  x07
100E:  MOVLW  16
1010:  MOVWF  x06
....................    data = 0xFF * color; 
1012:  MOVF   x02,W
1014:  MULLW  FF
1016:  MOVFF  FF3,503
....................  
....................    for(i=0; i<512; ++i) 
101A:  CLRF   x09
101C:  CLRF   x08
101E:  MOVF   x09,W
1020:  SUBLW  01
1022:  BNC   1058
....................    { 
....................       *p1++ = data; 
1024:  MOVFF  505,03
1028:  MOVF   x04,W
102A:  INCF   x04,F
102C:  BTFSC  FD8.2
102E:  INCF   x05,F
1030:  MOVWF  FE9
1032:  MOVFF  03,FEA
1036:  MOVFF  503,FEF
....................       *p2++ = data; 
103A:  MOVFF  507,03
103E:  MOVF   x06,W
1040:  INCF   x06,F
1042:  BTFSC  FD8.2
1044:  INCF   x07,F
1046:  MOVWF  FE9
1048:  MOVFF  03,FEA
104C:  MOVFF  503,FEF
....................    } 
1050:  INCF   x08,F
1052:  BTFSC  FD8.2
1054:  INCF   x09,F
1056:  BRA    101E
.................... } 
1058:  MOVLB  0
105A:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0FC2:  MOVLB  5
0FC4:  MOVF   x17,F
0FC6:  BZ    0FCE
....................       output_high(GLCD_CS2); 
0FC8:  BCF    F93.4
0FCA:  BSF    F8A.4
....................    else 
0FCC:  BRA    0FD2
....................       output_high(GLCD_CS1); 
0FCE:  BCF    F93.3
0FD0:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0FD2:  BCF    F93.6
0FD4:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0FD6:  CLRF   F95
0FD8:  MOVFF  518,F8C
....................    delay_cycles(50); 
0FDC:  MOVLW  10
0FDE:  MOVWF  00
0FE0:  DECFSZ 00,F
0FE2:  BRA    0FE0
0FE4:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0FE6:  BCF    F93.7
0FE8:  BSF    F8A.7
....................    delay_cycles(250); 
0FEA:  MOVLW  53
0FEC:  MOVWF  00
0FEE:  DECFSZ 00,F
0FF0:  BRA    0FEE
....................    output_low(GLCD_E); 
0FF2:  BCF    F93.7
0FF4:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0FF6:  BCF    F93.3
0FF8:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0FFA:  BCF    F93.4
0FFC:  BCF    F8A.4
.................... } 
0FFE:  MOVLB  0
1000:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
1430:  MOVLW  01
1432:  MOVLB  5
1434:  MOVWF  x27
1436:  MOVWF  x28
1438:  CLRF   x2D
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
143A:  MOVF   x1E,W
143C:  SUBWF  x20,W
143E:  MOVWF  x2E
1440:  MOVF   x2E,W
1442:  BTFSS  x2E.7
1444:  BRA    144C
1446:  MOVLW  00
1448:  BSF    FD8.0
144A:  SUBFWB x2E,W
144C:  CLRF   03
144E:  MOVWF  x25
1450:  MOVFF  03,526
....................    dy = abs((signed int8)(y2 - y1)); 
1454:  MOVF   x1F,W
1456:  SUBWF  x21,W
1458:  MOVWF  x2E
145A:  MOVF   x2E,W
145C:  BTFSS  x2E.7
145E:  BRA    1466
1460:  MOVLW  00
1462:  BSF    FD8.0
1464:  SUBFWB x2E,W
1466:  CLRF   03
1468:  MOVWF  x23
146A:  MOVFF  03,524
....................    #endif 
....................  
....................    if(x1 > x2) 
146E:  MOVF   x1E,W
1470:  SUBWF  x20,W
1472:  BC    1478
....................       addx = -1; 
1474:  MOVLW  FF
1476:  MOVWF  x27
....................    if(y1 > y2) 
1478:  MOVF   x1F,W
147A:  SUBWF  x21,W
147C:  BC    1482
....................       addy = -1; 
147E:  MOVLW  FF
1480:  MOVWF  x28
....................  
....................    if(dx >= dy) 
1482:  MOVF   x24,W
1484:  SUBWF  x26,W
1486:  BNC   14FE
1488:  BNZ   1490
148A:  MOVF   x23,W
148C:  SUBWF  x25,W
148E:  BNC   14FE
....................    { 
....................       dy *= 2; 
1490:  BCF    FD8.0
1492:  RLCF   x23,F
1494:  RLCF   x24,F
....................       P = dy - dx; 
1496:  MOVF   x25,W
1498:  SUBWF  x23,W
149A:  MOVWF  00
149C:  MOVF   x26,W
149E:  SUBWFB x24,W
14A0:  MOVFF  00,529
14A4:  MOVWF  x2A
....................       diff = P - dx; 
14A6:  MOVF   x25,W
14A8:  SUBWF  x29,W
14AA:  MOVWF  x2B
14AC:  MOVF   x26,W
14AE:  SUBWFB x2A,W
14B0:  MOVWF  x2C
....................  
....................       for(; i<=dx; ++i) 
14B2:  MOVF   x26,F
14B4:  BNZ   14BC
14B6:  MOVF   x2D,W
14B8:  SUBWF  x25,W
14BA:  BNC   14FC
....................       { 
....................          glcd_pixel(x1, y1, color); 
14BC:  MOVFF  51E,52E
14C0:  MOVFF  51F,52F
14C4:  MOVFF  522,530
14C8:  MOVLB  0
14CA:  RCALL  11BC
....................  
....................          if(P < 0) 
14CC:  MOVLB  5
14CE:  BTFSC  x2A.7
14D0:  BRA    14D4
14D2:  BRA    14E4
....................          { 
....................             P  += dy; 
14D4:  MOVF   x23,W
14D6:  ADDWF  x29,F
14D8:  MOVF   x24,W
14DA:  ADDWFC x2A,F
....................             x1 += addx; 
14DC:  MOVF   x27,W
14DE:  ADDWF  x1E,W
14E0:  MOVWF  x1E
....................          } 
....................          else 
14E2:  BRA    14F8
....................          { 
....................             P  += diff; 
14E4:  MOVF   x2B,W
14E6:  ADDWF  x29,F
14E8:  MOVF   x2C,W
14EA:  ADDWFC x2A,F
....................             x1 += addx; 
14EC:  MOVF   x27,W
14EE:  ADDWF  x1E,W
14F0:  MOVWF  x1E
....................             y1 += addy; 
14F2:  MOVF   x28,W
14F4:  ADDWF  x1F,W
14F6:  MOVWF  x1F
....................          } 
....................       } 
14F8:  INCF   x2D,F
14FA:  BRA    14B2
....................    } 
....................    else 
14FC:  BRA    156A
....................    { 
....................       dx *= 2; 
14FE:  BCF    FD8.0
1500:  RLCF   x25,F
1502:  RLCF   x26,F
....................       P = dx - dy; 
1504:  MOVF   x23,W
1506:  SUBWF  x25,W
1508:  MOVWF  00
150A:  MOVF   x24,W
150C:  SUBWFB x26,W
150E:  MOVFF  00,529
1512:  MOVWF  x2A
....................       diff = P - dy; 
1514:  MOVF   x23,W
1516:  SUBWF  x29,W
1518:  MOVWF  x2B
151A:  MOVF   x24,W
151C:  SUBWFB x2A,W
151E:  MOVWF  x2C
....................  
....................       for(; i<=dy; ++i) 
1520:  MOVF   x24,F
1522:  BNZ   152A
1524:  MOVF   x2D,W
1526:  SUBWF  x23,W
1528:  BNC   156A
....................       { 
....................          glcd_pixel(x1, y1, color); 
152A:  MOVFF  51E,52E
152E:  MOVFF  51F,52F
1532:  MOVFF  522,530
1536:  MOVLB  0
1538:  RCALL  11BC
....................  
....................          if(P < 0) 
153A:  MOVLB  5
153C:  BTFSC  x2A.7
153E:  BRA    1542
1540:  BRA    1552
....................          { 
....................             P  += dx; 
1542:  MOVF   x25,W
1544:  ADDWF  x29,F
1546:  MOVF   x26,W
1548:  ADDWFC x2A,F
....................             y1 += addy; 
154A:  MOVF   x28,W
154C:  ADDWF  x1F,W
154E:  MOVWF  x1F
....................          } 
....................          else 
1550:  BRA    1566
....................          { 
....................             P  += diff; 
1552:  MOVF   x2B,W
1554:  ADDWF  x29,F
1556:  MOVF   x2C,W
1558:  ADDWFC x2A,F
....................             x1 += addx; 
155A:  MOVF   x27,W
155C:  ADDWF  x1E,W
155E:  MOVWF  x1E
....................             y1 += addy; 
1560:  MOVF   x28,W
1562:  ADDWF  x1F,W
1564:  MOVWF  x1F
....................          } 
....................       } 
1566:  INCF   x2D,F
1568:  BRA    1520
....................    } 
.................... } 
156A:  MOVLB  0
156C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
156E:  MOVLB  5
1570:  MOVF   x17,F
1572:  BZ    15D0
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1574:  MOVF   x15,W
1576:  SUBWF  x13,W
1578:  BC    1584
....................       { 
....................          xmin = x1; 
157A:  MOVFF  513,51A
....................          xmax = x2; 
157E:  MOVFF  515,51B
....................       } 
....................       else 
1582:  BRA    158C
....................       { 
....................          xmin = x2; 
1584:  MOVFF  515,51A
....................          xmax = x1; 
1588:  MOVFF  513,51B
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
158C:  MOVF   x16,W
158E:  SUBWF  x14,W
1590:  BC    159C
....................       { 
....................          ymin = y1; 
1592:  MOVFF  514,51C
....................          ymax = y2; 
1596:  MOVFF  516,51D
....................       } 
....................       else 
159A:  BRA    15A4
....................       { 
....................          ymin = y2; 
159C:  MOVFF  516,51C
....................          ymax = y1; 
15A0:  MOVFF  514,51D
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
15A4:  MOVF   x1A,W
15A6:  SUBWF  x1B,W
15A8:  BNC   15CE
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
15AA:  MOVFF  51C,519
15AE:  MOVF   x19,W
15B0:  SUBWF  x1D,W
15B2:  BNC   15CA
....................          { 
....................             glcd_pixel(xmin, i, color); 
15B4:  MOVFF  51A,52E
15B8:  MOVFF  519,52F
15BC:  MOVFF  518,530
15C0:  MOVLB  0
15C2:  RCALL  11BC
....................          } 
15C4:  MOVLB  5
15C6:  INCF   x19,F
15C8:  BRA    15AE
....................       } 
15CA:  INCF   x1A,F
15CC:  BRA    15A4
....................    } 
....................    else 
15CE:  BRA    162C
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
15D0:  MOVFF  513,51E
15D4:  MOVFF  514,51F
15D8:  MOVFF  515,520
15DC:  MOVFF  514,521
15E0:  MOVFF  518,522
15E4:  MOVLB  0
15E6:  RCALL  1430
....................       glcd_line(x1, y2, x2, y2, color); 
15E8:  MOVFF  513,51E
15EC:  MOVFF  516,51F
15F0:  MOVFF  515,520
15F4:  MOVFF  516,521
15F8:  MOVFF  518,522
15FC:  RCALL  1430
....................       glcd_line(x1, y1, x1, y2, color); 
15FE:  MOVFF  513,51E
1602:  MOVFF  514,51F
1606:  MOVFF  513,520
160A:  MOVFF  516,521
160E:  MOVFF  518,522
1612:  RCALL  1430
....................       glcd_line(x2, y1, x2, y2, color); 
1614:  MOVFF  515,51E
1618:  MOVFF  514,51F
161C:  MOVFF  515,520
1620:  MOVFF  516,521
1624:  MOVFF  518,522
1628:  RCALL  1430
162A:  MOVLB  5
....................    } 
.................... } 
162C:  MOVLB  0
162E:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2174:  MOVLB  5
2176:  CLRF   x06
....................    b = radius; 
2178:  MOVFF  503,507
....................    P = 1 - radius; 
217C:  MOVLW  01
217E:  BSF    FD8.0
2180:  SUBFWB x03,W
2182:  MOVWF  x08
....................  
....................    do 
....................    { 
....................       if(fill) 
2184:  MOVF   x04,F
2186:  BZ    2252
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
2188:  MOVF   x06,W
218A:  SUBWF  x01,W
218C:  MOVWF  x09
218E:  MOVF   x07,W
2190:  ADDWF  x02,W
2192:  MOVWF  x0A
2194:  MOVF   x06,W
2196:  ADDWF  x01,W
2198:  MOVWF  x0B
219A:  MOVF   x07,W
219C:  ADDWF  x02,W
219E:  MOVWF  x0C
21A0:  MOVFF  509,51E
21A4:  MOVFF  50A,51F
21A8:  MOVFF  50B,520
21AC:  MOVWF  x21
21AE:  MOVFF  505,522
21B2:  MOVLB  0
21B4:  CALL   1430
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
21B8:  MOVLB  5
21BA:  MOVF   x06,W
21BC:  SUBWF  x01,W
21BE:  MOVWF  x09
21C0:  MOVF   x07,W
21C2:  SUBWF  x02,W
21C4:  MOVWF  x0A
21C6:  MOVF   x06,W
21C8:  ADDWF  x01,W
21CA:  MOVWF  x0B
21CC:  MOVF   x07,W
21CE:  SUBWF  x02,W
21D0:  MOVWF  x0C
21D2:  MOVFF  509,51E
21D6:  MOVFF  50A,51F
21DA:  MOVFF  50B,520
21DE:  MOVWF  x21
21E0:  MOVFF  505,522
21E4:  MOVLB  0
21E6:  CALL   1430
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
21EA:  MOVLB  5
21EC:  MOVF   x07,W
21EE:  SUBWF  x01,W
21F0:  MOVWF  x09
21F2:  MOVF   x06,W
21F4:  ADDWF  x02,W
21F6:  MOVWF  x0A
21F8:  MOVF   x07,W
21FA:  ADDWF  x01,W
21FC:  MOVWF  x0B
21FE:  MOVF   x06,W
2200:  ADDWF  x02,W
2202:  MOVWF  x0C
2204:  MOVFF  509,51E
2208:  MOVFF  50A,51F
220C:  MOVFF  50B,520
2210:  MOVWF  x21
2212:  MOVFF  505,522
2216:  MOVLB  0
2218:  CALL   1430
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
221C:  MOVLB  5
221E:  MOVF   x07,W
2220:  SUBWF  x01,W
2222:  MOVWF  x09
2224:  MOVF   x06,W
2226:  SUBWF  x02,W
2228:  MOVWF  x0A
222A:  MOVF   x07,W
222C:  ADDWF  x01,W
222E:  MOVWF  x0B
2230:  MOVF   x06,W
2232:  SUBWF  x02,W
2234:  MOVWF  x0C
2236:  MOVFF  509,51E
223A:  MOVFF  50A,51F
223E:  MOVFF  50B,520
2242:  MOVWF  x21
2244:  MOVFF  505,522
2248:  MOVLB  0
224A:  CALL   1430
....................       } 
....................       else 
224E:  BRA    2340
2250:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2252:  MOVF   x01,W
2254:  ADDWF  x06,W
2256:  MOVWF  x09
2258:  MOVF   x02,W
225A:  ADDWF  x07,W
225C:  MOVWF  x0A
225E:  MOVFF  509,52E
2262:  MOVWF  x2F
2264:  MOVFF  505,530
2268:  MOVLB  0
226A:  CALL   11BC
....................          glcd_pixel(b+x, a+y, color); 
226E:  MOVLB  5
2270:  MOVF   x01,W
2272:  ADDWF  x07,W
2274:  MOVWF  x09
2276:  MOVF   x02,W
2278:  ADDWF  x06,W
227A:  MOVWF  x0A
227C:  MOVFF  509,52E
2280:  MOVWF  x2F
2282:  MOVFF  505,530
2286:  MOVLB  0
2288:  CALL   11BC
....................          glcd_pixel(x-a, b+y, color); 
228C:  MOVLB  5
228E:  MOVF   x06,W
2290:  SUBWF  x01,W
2292:  MOVWF  x09
2294:  MOVF   x02,W
2296:  ADDWF  x07,W
2298:  MOVWF  x0A
229A:  MOVFF  509,52E
229E:  MOVWF  x2F
22A0:  MOVFF  505,530
22A4:  MOVLB  0
22A6:  CALL   11BC
....................          glcd_pixel(x-b, a+y, color); 
22AA:  MOVLB  5
22AC:  MOVF   x07,W
22AE:  SUBWF  x01,W
22B0:  MOVWF  x09
22B2:  MOVF   x02,W
22B4:  ADDWF  x06,W
22B6:  MOVWF  x0A
22B8:  MOVFF  509,52E
22BC:  MOVWF  x2F
22BE:  MOVFF  505,530
22C2:  MOVLB  0
22C4:  CALL   11BC
....................          glcd_pixel(b+x, y-a, color); 
22C8:  MOVLB  5
22CA:  MOVF   x01,W
22CC:  ADDWF  x07,W
22CE:  MOVWF  x09
22D0:  MOVF   x06,W
22D2:  SUBWF  x02,W
22D4:  MOVWF  x0A
22D6:  MOVFF  509,52E
22DA:  MOVWF  x2F
22DC:  MOVFF  505,530
22E0:  MOVLB  0
22E2:  CALL   11BC
....................          glcd_pixel(a+x, y-b, color); 
22E6:  MOVLB  5
22E8:  MOVF   x01,W
22EA:  ADDWF  x06,W
22EC:  MOVWF  x09
22EE:  MOVF   x07,W
22F0:  SUBWF  x02,W
22F2:  MOVWF  x0A
22F4:  MOVFF  509,52E
22F8:  MOVWF  x2F
22FA:  MOVFF  505,530
22FE:  MOVLB  0
2300:  CALL   11BC
....................          glcd_pixel(x-a, y-b, color); 
2304:  MOVLB  5
2306:  MOVF   x06,W
2308:  SUBWF  x01,W
230A:  MOVWF  x09
230C:  MOVF   x07,W
230E:  SUBWF  x02,W
2310:  MOVWF  x0A
2312:  MOVFF  509,52E
2316:  MOVWF  x2F
2318:  MOVFF  505,530
231C:  MOVLB  0
231E:  CALL   11BC
....................          glcd_pixel(x-b, y-a, color); 
2322:  MOVLB  5
2324:  MOVF   x07,W
2326:  SUBWF  x01,W
2328:  MOVWF  x09
232A:  MOVF   x06,W
232C:  SUBWF  x02,W
232E:  MOVWF  x0A
2330:  MOVFF  509,52E
2334:  MOVWF  x2F
2336:  MOVFF  505,530
233A:  MOVLB  0
233C:  CALL   11BC
....................       } 
....................  
....................       if(P < 0) 
2340:  MOVLB  5
2342:  BTFSC  x08.7
2344:  BRA    2348
2346:  BRA    2364
....................          P += 3 + 2 * a++; 
2348:  MOVF   x06,W
234A:  INCF   x06,F
234C:  MOVWF  x09
234E:  MOVLW  02
2350:  MOVWF  x0A
2352:  MOVFF  509,50B
2356:  MOVLB  0
2358:  RCALL  2126
235A:  MOVF   01,W
235C:  ADDLW  03
235E:  MOVLB  5
2360:  ADDWF  x08,F
....................       else 
2362:  BRA    2386
....................          P += 5 + 2 * (a++ - b--); 
2364:  MOVF   x06,W
2366:  INCF   x06,F
2368:  MOVWF  x09
236A:  MOVF   x07,W
236C:  DECF   x07,F
236E:  SUBWF  x09,W
2370:  MOVWF  x09
2372:  MOVLW  02
2374:  MOVWF  x0A
2376:  MOVFF  509,50B
237A:  MOVLB  0
237C:  RCALL  2126
237E:  MOVF   01,W
2380:  ADDLW  05
2382:  MOVLB  5
2384:  ADDWF  x08,F
....................     } while(a <= b); 
2386:  MOVF   x06,W
2388:  XORLW  80
238A:  MOVWF  00
238C:  MOVF   x07,W
238E:  XORLW  80
2390:  SUBWF  00,W
2392:  BTFSC  FD8.2
2394:  BRA    2184
2396:  BTFSS  FD8.0
2398:  BRA    2184
.................... } 
239A:  MOVLB  0
239C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
1278:  MOVFF  515,03
127C:  MOVLB  5
127E:  MOVFF  514,FE9
1282:  MOVFF  515,FEA
1286:  MOVF   FEF,F
1288:  BTFSC  FD8.2
128A:  BRA    142C
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
128C:  MOVFF  515,03
1290:  MOVFF  514,FE9
1294:  MOVFF  515,FEA
1298:  MOVF   FEF,W
129A:  SUBLW  52
129C:  BNC   12EC
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
129E:  MOVFF  515,03
12A2:  MOVFF  514,FE9
12A6:  MOVFF  515,FEA
12AA:  MOVLW  20
12AC:  SUBWF  FEF,W
12AE:  MULLW  05
12B0:  MOVF   FF3,W
12B2:  CLRF   03
12B4:  MOVWF  x21
12B6:  MOVLW  05
12B8:  MOVWF  FEA
12BA:  MOVLW  1C
12BC:  MOVWF  FE9
12BE:  CLRF   x25
12C0:  MOVFF  521,524
12C4:  MOVFF  FF2,522
12C8:  BCF    FF2.7
12CA:  MOVLW  05
12CC:  MOVWF  01
12CE:  CLRF   FF7
12D0:  MOVF   x21,W
12D2:  MOVLB  0
12D4:  CALL   0096
12D8:  TBLRD*-
12DA:  TBLRD*+
12DC:  MOVFF  FF5,FEE
12E0:  DECFSZ 01,F
12E2:  BRA    12DA
12E4:  MOVLB  5
12E6:  BTFSC  x22.7
12E8:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
12EA:  BRA    1356
12EC:  MOVFF  515,03
12F0:  MOVFF  514,FE9
12F4:  MOVFF  515,FEA
12F8:  MOVF   FEF,W
12FA:  SUBLW  7E
12FC:  BNC   134C
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
12FE:  MOVFF  515,03
1302:  MOVFF  514,FE9
1306:  MOVFF  515,FEA
130A:  MOVLW  53
130C:  SUBWF  FEF,W
130E:  MULLW  05
1310:  MOVF   FF3,W
1312:  CLRF   03
1314:  MOVWF  x21
1316:  MOVLW  05
1318:  MOVWF  FEA
131A:  MOVLW  1C
131C:  MOVWF  FE9
131E:  CLRF   x25
1320:  MOVFF  521,524
1324:  MOVFF  FF2,522
1328:  BCF    FF2.7
132A:  MOVLW  05
132C:  MOVWF  01
132E:  CLRF   FF7
1330:  MOVF   x21,W
1332:  MOVLB  0
1334:  CALL   01B0
1338:  TBLRD*-
133A:  TBLRD*+
133C:  MOVFF  FF5,FEE
1340:  DECFSZ 01,F
1342:  BRA    133A
1344:  MOVLB  5
1346:  BTFSC  x22.7
1348:  BSF    FF2.7
....................       else 
134A:  BRA    1356
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
134C:  CLRF   x1C
134E:  CLRF   x1D
1350:  CLRF   x1E
1352:  CLRF   x1F
1354:  CLRF   x20
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1356:  MOVFF  515,03
135A:  MOVF   x14,W
135C:  MOVWF  FE9
135E:  MOVFF  03,FEA
1362:  MOVF   FEF,W
1364:  XORLW  0A
1366:  MOVLB  0
1368:  BZ    1370
136A:  XORLW  07
136C:  BZ    1380
136E:  BRA    1386
....................          case '\n': 
....................             y += 7*size + 1; 
1370:  MOVLB  5
1372:  MOVF   x16,W
1374:  MULLW  07
1376:  MOVF   FF3,W
1378:  ADDLW  01
137A:  ADDWF  x13,F
....................             continue; 
137C:  BRA    141E
137E:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1380:  MOVLB  5
1382:  CLRF   x12
....................             continue; 
1384:  BRA    141E
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1386:  MOVLB  5
1388:  MOVF   x16,W
138A:  MULLW  05
138C:  MOVF   FF3,W
138E:  ADDWF  x12,W
1390:  SUBLW  7F
1392:  BC    13A0
....................       { 
....................          x = 0;                           // Set x at far left position 
1394:  CLRF   x12
....................          y += 7*size + 1;                 // Set y at next position down 
1396:  MOVF   x16,W
1398:  MULLW  07
139A:  MOVF   FF3,W
139C:  ADDLW  01
139E:  ADDWF  x13,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
13A0:  CLRF   x18
13A2:  MOVF   x18,W
13A4:  SUBLW  04
13A6:  BNC   141E
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
13A8:  CLRF   x19
13AA:  MOVF   x19,W
13AC:  SUBLW  06
13AE:  BNC   1416
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
13B0:  CLRF   03
13B2:  MOVF   x18,W
13B4:  ADDLW  1C
13B6:  MOVWF  FE9
13B8:  MOVLW  05
13BA:  ADDWFC 03,W
13BC:  MOVWF  FEA
13BE:  MOVFF  FEF,521
13C2:  MOVFF  521,00
13C6:  MOVF   x19,W
13C8:  MOVWF  01
13CA:  BZ    13D4
13CC:  BCF    FD8.0
13CE:  RRCF   00,F
13D0:  DECFSZ 01,F
13D2:  BRA    13CC
13D4:  BTFSS  00.0
13D6:  BRA    1412
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
13D8:  CLRF   x1A
13DA:  MOVF   x16,W
13DC:  SUBWF  x1A,W
13DE:  BC    1412
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
13E0:  CLRF   x1B
13E2:  MOVF   x16,W
13E4:  SUBWF  x1B,W
13E6:  BC    140E
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
13E8:  MOVF   x1B,W
13EA:  ADDWF  x12,W
13EC:  MOVWF  x21
13EE:  MOVF   x19,W
13F0:  MULWF  x16
13F2:  MOVF   FF3,W
13F4:  ADDWF  x13,W
13F6:  ADDWF  x1A,W
13F8:  MOVWF  x22
13FA:  MOVFF  521,52E
13FE:  MOVWF  x2F
1400:  MOVFF  517,530
1404:  MOVLB  0
1406:  RCALL  11BC
....................                   } 
1408:  MOVLB  5
140A:  INCF   x1B,F
140C:  BRA    13E2
....................                } 
140E:  INCF   x1A,F
1410:  BRA    13DA
....................             } 
....................          } 
1412:  INCF   x19,F
1414:  BRA    13AA
....................       } 
1416:  INCF   x18,F
1418:  MOVF   x16,W
141A:  ADDWF  x12,F
141C:  BRA    13A2
....................    } 
141E:  INCF   x14,F
1420:  BTFSC  FD8.2
1422:  INCF   x15,F
1424:  INCF   x12,F
1426:  MOVLB  0
1428:  BRA    1278
142A:  MOVLB  5
.................... } 
142C:  MOVLB  0
142E:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
1630:  MOVLB  5
1632:  MOVFF  501,01
1636:  MOVFF  502,03
163A:  MOVFF  501,507
163E:  MOVFF  502,508
1642:  MOVLW  04
1644:  MOVWF  FEA
1646:  MOVLW  E1
1648:  MOVWF  FE9
164A:  MOVFF  502,FE2
164E:  MOVFF  501,FE1
1652:  MOVF   FE7,F
1654:  MOVFF  FE6,FEE
1658:  BNZ   1652
....................    if(sombreado==2) 
165A:  MOVF   x05,W
165C:  SUBLW  02
165E:  BNZ   1688
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1660:  MOVLW  01
1662:  ADDWF  x03,W
1664:  MOVWF  x07
1666:  MOVLW  01
1668:  ADDWF  x04,W
166A:  MOVWF  x08
166C:  MOVFF  507,512
1670:  MOVWF  x13
1672:  MOVLW  04
1674:  MOVWF  x15
1676:  MOVLW  E1
1678:  MOVWF  x14
167A:  MOVFF  506,516
167E:  MOVLW  01
1680:  MOVWF  x17
1682:  MOVLB  0
1684:  RCALL  1278
1686:  MOVLB  5
....................    if(sombreado==1) 
1688:  DECFSZ x05,W
168A:  BRA    16D6
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
168C:  MOVF   x06,W
168E:  MULLW  08
1690:  MOVF   FF3,W
1692:  ADDWF  x04,W
1694:  MOVWF  x07
1696:  CLRF   x13
1698:  MOVFF  504,514
169C:  MOVLW  7F
169E:  MOVWF  x15
16A0:  MOVFF  507,516
16A4:  MOVLW  01
16A6:  MOVWF  x17
16A8:  MOVWF  x18
16AA:  MOVLB  0
16AC:  RCALL  156E
16AE:  MOVLW  01
16B0:  MOVLB  5
16B2:  ADDWF  x03,W
16B4:  MOVWF  x07
16B6:  MOVLW  01
16B8:  ADDWF  x04,W
16BA:  MOVWF  x08
16BC:  MOVFF  507,512
16C0:  MOVWF  x13
16C2:  MOVLW  04
16C4:  MOVWF  x15
16C6:  MOVLW  E1
16C8:  MOVWF  x14
16CA:  MOVFF  506,516
16CE:  CLRF   x17
16D0:  MOVLB  0
16D2:  RCALL  1278
16D4:  MOVLB  5
....................    if(sombreado==0) 
16D6:  MOVF   x05,F
16D8:  BNZ   1724
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
16DA:  MOVF   x06,W
16DC:  MULLW  08
16DE:  MOVF   FF3,W
16E0:  ADDWF  x04,W
16E2:  MOVWF  x07
16E4:  CLRF   x13
16E6:  MOVFF  504,514
16EA:  MOVLW  7F
16EC:  MOVWF  x15
16EE:  MOVFF  507,516
16F2:  MOVLW  01
16F4:  MOVWF  x17
16F6:  CLRF   x18
16F8:  MOVLB  0
16FA:  RCALL  156E
16FC:  MOVLW  01
16FE:  MOVLB  5
1700:  ADDWF  x03,W
1702:  MOVWF  x07
1704:  MOVLW  01
1706:  ADDWF  x04,W
1708:  MOVWF  x08
170A:  MOVFF  507,512
170E:  MOVWF  x13
1710:  MOVLW  04
1712:  MOVWF  x15
1714:  MOVLW  E1
1716:  MOVWF  x14
1718:  MOVFF  506,516
171C:  MOVLW  01
171E:  MOVWF  x17
1720:  MOVLB  0
1722:  RCALL  1278
....................    glcd_update(); 
1724:  MOVLB  0
1726:  RCALL  105C
.................... } 
1728:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
2424:  MOVLB  5
2426:  MOVF   x05,W
2428:  SUBLW  02
242A:  BNZ   24A0
....................    { 
....................       sprintf(voltage, "%03u", digito); 
242C:  MOVLW  05
242E:  MOVWF  x00
2430:  MOVLW  07
2432:  MOVLB  4
2434:  MOVWF  xFF
2436:  MOVFF  502,510
243A:  MOVLW  03
243C:  MOVLB  5
243E:  MOVWF  x11
2440:  MOVLB  0
2442:  RCALL  239E
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2444:  MOVLB  5
2446:  MOVF   x06,W
2448:  MULLW  12
244A:  MOVF   FF3,W
244C:  ADDWF  x03,W
244E:  MOVWF  x10
2450:  MOVF   x06,W
2452:  MULLW  08
2454:  MOVF   FF3,W
2456:  ADDWF  x04,W
2458:  MOVWF  x11
245A:  MOVFF  503,513
245E:  MOVFF  504,514
2462:  MOVFF  510,515
2466:  MOVWF  x16
2468:  MOVLW  01
246A:  MOVWF  x17
246C:  MOVWF  x18
246E:  MOVLB  0
2470:  CALL   156E
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2474:  MOVLW  01
2476:  MOVLB  5
2478:  ADDWF  x03,W
247A:  MOVWF  x10
247C:  MOVLW  01
247E:  ADDWF  x04,W
2480:  MOVWF  x11
2482:  MOVFF  510,512
2486:  MOVWF  x13
2488:  MOVLW  05
248A:  MOVWF  x15
248C:  MOVLW  07
248E:  MOVWF  x14
2490:  MOVFF  506,516
2494:  CLRF   x17
2496:  MOVLB  0
2498:  CALL   1278
....................    } 
....................    else 
249C:  BRA    2572
249E:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
24A0:  MOVLW  05
24A2:  MOVWF  x00
24A4:  MOVLW  07
24A6:  MOVLB  4
24A8:  MOVWF  xFF
24AA:  MOVFF  502,510
24AE:  MOVLW  1B
24B0:  MOVLB  5
24B2:  MOVWF  x11
24B4:  MOVLB  0
24B6:  RCALL  239E
....................     
....................       if(sombreado==1) 
24B8:  MOVLB  5
24BA:  DECFSZ x05,W
24BC:  BRA    2516
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24BE:  MOVF   x06,W
24C0:  MULLW  05
24C2:  MOVF   FF3,W
24C4:  ADDWF  x03,W
24C6:  MOVWF  x10
24C8:  MOVF   x06,W
24CA:  MULLW  08
24CC:  MOVF   FF3,W
24CE:  ADDWF  x04,W
24D0:  MOVWF  x11
24D2:  MOVFF  503,513
24D6:  MOVFF  504,514
24DA:  MOVFF  510,515
24DE:  MOVWF  x16
24E0:  MOVLW  01
24E2:  MOVWF  x17
24E4:  MOVWF  x18
24E6:  MOVLB  0
24E8:  CALL   156E
24EC:  MOVLW  01
24EE:  MOVLB  5
24F0:  ADDWF  x03,W
24F2:  MOVWF  x10
24F4:  MOVLW  01
24F6:  ADDWF  x04,W
24F8:  MOVWF  x11
24FA:  MOVFF  510,512
24FE:  MOVWF  x13
2500:  MOVLW  05
2502:  MOVWF  x15
2504:  MOVLW  07
2506:  MOVWF  x14
2508:  MOVFF  506,516
250C:  CLRF   x17
250E:  MOVLB  0
2510:  CALL   1278
2514:  MOVLB  5
....................       if(sombreado==0) 
2516:  MOVF   x05,F
2518:  BNZ   2574
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
251A:  MOVF   x06,W
251C:  MULLW  05
251E:  MOVF   FF3,W
2520:  ADDWF  x03,W
2522:  MOVWF  x10
2524:  MOVF   x06,W
2526:  MULLW  08
2528:  MOVF   FF3,W
252A:  ADDWF  x04,W
252C:  MOVWF  x11
252E:  MOVFF  503,513
2532:  MOVFF  504,514
2536:  MOVFF  510,515
253A:  MOVWF  x16
253C:  MOVLW  01
253E:  MOVWF  x17
2540:  CLRF   x18
2542:  MOVLB  0
2544:  CALL   156E
2548:  MOVLW  01
254A:  MOVLB  5
254C:  ADDWF  x03,W
254E:  MOVWF  x10
2550:  MOVLW  01
2552:  ADDWF  x04,W
2554:  MOVWF  x11
2556:  MOVFF  510,512
255A:  MOVWF  x13
255C:  MOVLW  05
255E:  MOVWF  x15
2560:  MOVLW  07
2562:  MOVWF  x14
2564:  MOVFF  506,516
2568:  MOVLW  01
256A:  MOVWF  x17
256C:  MOVLB  0
256E:  CALL   1278
2572:  MOVLB  5
....................    } 
....................    glcd_update(); 
2574:  MOVLB  0
2576:  CALL   105C
.................... } 
257A:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2078:  MOVLB  5
207A:  MOVF   x01,W
207C:  SUBLW  05
207E:  BNZ   2122
....................    for( i = 0 ; i < 64 ; i ++ ) 
2080:  CLRF   x02
2082:  MOVF   x02,W
2084:  SUBLW  3F
2086:  BNC   2122
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2088:  CLRF   x03
208A:  MOVF   x03,W
208C:  SUBLW  0F
208E:  BNC   211E
....................       {     
....................          for(k=7;k>-1;k--) 
2090:  MOVLW  07
2092:  MOVWF  x04
2094:  MOVF   x04,W
2096:  XORLW  80
2098:  SUBLW  7F
209A:  BC    211A
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
209C:  CLRF   x06
209E:  MOVFF  502,505
20A2:  CLRF   x08
20A4:  MOVLW  10
20A6:  MOVWF  x07
20A8:  MOVLB  0
20AA:  BRA    2054
20AC:  MOVFF  02,506
20B0:  MOVFF  01,505
20B4:  MOVLB  5
20B6:  MOVF   x03,W
20B8:  ADDWF  01,W
20BA:  MOVWF  01
20BC:  MOVLW  00
20BE:  ADDWFC 02,W
20C0:  MOVWF  03
20C2:  MOVF   01,W
20C4:  MOVFF  FF2,505
20C8:  BCF    FF2.7
20CA:  MOVFF  03,FF7
20CE:  MOVLB  0
20D0:  CALL   02A6
20D4:  MOVLB  5
20D6:  BTFSC  x05.7
20D8:  BSF    FF2.7
20DA:  MOVWF  x05
20DC:  MOVLW  07
20DE:  BSF    FD8.0
20E0:  SUBFWB x04,W
20E2:  MOVWF  x06
20E4:  MOVFF  505,00
20E8:  MOVF   x06,W
20EA:  MOVWF  01
20EC:  BZ    20F6
20EE:  BCF    FD8.0
20F0:  RRCF   00,F
20F2:  DECFSZ 01,F
20F4:  BRA    20EE
20F6:  BTFSS  00.0
20F8:  BRA    2116
....................                glcd_pixel( j*8+k,i, ON ); 
20FA:  MOVF   x03,W
20FC:  MULLW  08
20FE:  MOVF   FF3,W
2100:  ADDWF  x04,W
2102:  MOVWF  x05
2104:  MOVWF  x2E
2106:  MOVFF  502,52F
210A:  MOVLW  01
210C:  MOVWF  x30
210E:  MOVLB  0
2110:  CALL   11BC
2114:  MOVLB  5
....................          }   
2116:  DECF   x04,F
2118:  BRA    2094
....................       } 
211A:  INCF   x03,F
211C:  BRA    208A
....................    } 
211E:  INCF   x02,F
2120:  BRA    2082
....................    } 
....................     
.................... } 
2122:  MOVLB  0
2124:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0ECA:  MOVLW  15
0ECC:  MOVWF  FCF
0ECE:  MOVLW  A0
0ED0:  MOVWF  FCE
....................    tiempos++; 
0ED2:  MOVLB  4
0ED4:  INCF   xAC,F
0ED6:  BTFSC  FD8.2
0ED8:  INCF   xAD,F
....................    tiempos3++; 
0EDA:  INCF   xAE,F
0EDC:  BTFSC  FD8.2
0EDE:  INCF   xAF,F
....................    tiempoctrl++; 
0EE0:  INCF   xB0,F
0EE2:  BTFSC  FD8.2
0EE4:  INCF   xB1,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0EE6:  MOVF   xAF,F
0EE8:  BNZ   0EF0
0EEA:  MOVF   xAE,W
0EEC:  SUBLW  27
0EEE:  BC    0F02
0EF0:  MOVF   xAA,W
0EF2:  SUBLW  02
0EF4:  BNZ   0F02
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0EF6:  CLRF   xAF
0EF8:  CLRF   xAE
0EFA:  BSF    x95.7
0EFC:  INCF   xB6,F
0EFE:  BTFSC  FD8.2
0F00:  INCF   xB7,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0F02:  MOVF   xAC,W
0F04:  SUBLW  C8
0F06:  BNZ   0F90
0F08:  MOVF   xAD,F
0F0A:  BNZ   0F90
....................    {tiempos=0;Lectura=1;tinicio++; 
0F0C:  CLRF   xAD
0F0E:  CLRF   xAC
0F10:  BSF    x95.6
0F12:  INCF   xB8,F
0F14:  BTFSC  FD8.2
0F16:  INCF   xB9,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0F18:  DECFSZ xA8,W
0F1A:  BRA    0F54
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0F1C:  INCF   xBE,F
....................       if(Testerilizacion[0]>9) 
0F1E:  BTFSC  xBE.7
0F20:  BRA    0F2C
0F22:  MOVF   xBE,W
0F24:  SUBLW  09
0F26:  BC    0F2C
....................          {Testerilizacion[0]=0; 
0F28:  CLRF   xBE
....................           Testerilizacion[1]++;} 
0F2A:  INCF   xBF,F
....................        if(Testerilizacion[1]>5) 
0F2C:  BTFSC  xBF.7
0F2E:  BRA    0F3A
0F30:  MOVF   xBF,W
0F32:  SUBLW  05
0F34:  BC    0F3A
....................          {Testerilizacion[1]=0; 
0F36:  CLRF   xBF
....................           Testerilizacion[2]++;} 
0F38:  INCF   xC0,F
....................          if(Testerilizacion[2]>9) 
0F3A:  BTFSC  xC0.7
0F3C:  BRA    0F48
0F3E:  MOVF   xC0,W
0F40:  SUBLW  09
0F42:  BC    0F48
....................             {Testerilizacion[2]=0; 
0F44:  CLRF   xC0
....................              Testerilizacion[3]++;} 
0F46:  INCF   xC1,F
....................             if(Testerilizacion[3]>5) 
0F48:  BTFSC  xC1.7
0F4A:  BRA    0F54
0F4C:  MOVF   xC1,W
0F4E:  SUBLW  05
0F50:  BC    0F54
....................                {Testerilizacion[3]=0;} 
0F52:  CLRF   xC1
....................       }        
....................        
....................     if(tiempo_secado==1) 
0F54:  DECFSZ xA9,W
0F56:  BRA    0F90
....................       { 
....................                       
....................       Tsecado[0]++; 
0F58:  INCF   xC6,F
....................       if(Tsecado[0]>9) 
0F5A:  BTFSC  xC6.7
0F5C:  BRA    0F68
0F5E:  MOVF   xC6,W
0F60:  SUBLW  09
0F62:  BC    0F68
....................          {Tsecado[0]=0; 
0F64:  CLRF   xC6
....................           Tsecado[1]++;} 
0F66:  INCF   xC7,F
....................        if(Tsecado[1]>5) 
0F68:  BTFSC  xC7.7
0F6A:  BRA    0F76
0F6C:  MOVF   xC7,W
0F6E:  SUBLW  05
0F70:  BC    0F76
....................          {Tsecado[1]=0; 
0F72:  CLRF   xC7
....................           Tsecado[2]++;} 
0F74:  INCF   xC8,F
....................          if(Tsecado[2]>9) 
0F76:  BTFSC  xC8.7
0F78:  BRA    0F84
0F7A:  MOVF   xC8,W
0F7C:  SUBLW  09
0F7E:  BC    0F84
....................             {Tsecado[2]=0; 
0F80:  CLRF   xC8
....................              Tsecado[3]++;} 
0F82:  INCF   xC9,F
....................             if(Tsecado[3]>5) 
0F84:  BTFSC  xC9.7
0F86:  BRA    0F90
0F88:  MOVF   xC9,W
0F8A:  SUBLW  05
0F8C:  BC    0F90
....................                {Tsecado[3]=0;} 
0F8E:  CLRF   xC9
....................       }   
....................    } 
....................    } 
....................     
0F90:  BCF    F9E.0
0F92:  MOVLB  0
0F94:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
2736:  MOVLW  07
2738:  MOVLB  5
273A:  ADDWF  x03,W
273C:  MOVWF  x04
273E:  MOVFF  501,513
2742:  MOVFF  503,514
2746:  MOVFF  502,515
274A:  MOVWF  x16
274C:  MOVLW  01
274E:  MOVWF  x17
2750:  CLRF   x18
2752:  MOVLB  0
2754:  CALL   156E
.................... } 
2758:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%3.1f",adc); // Converts adc to text 
*
2ACA:  MOVLW  05
2ACC:  MOVLB  5
2ACE:  MOVWF  x00
2AD0:  MOVLW  08
2AD2:  MOVLB  4
2AD4:  MOVWF  xFF
2AD6:  MOVLW  02
2AD8:  MOVWF  FE9
2ADA:  MOVFF  504,514
2ADE:  MOVFF  503,513
2AE2:  MOVFF  502,512
2AE6:  MOVFF  501,511
2AEA:  MOVLW  01
2AEC:  MOVLB  5
2AEE:  MOVWF  x15
2AF0:  MOVLB  0
2AF2:  BRA    2916
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2AF4:  MOVLB  5
2AF6:  MOVF   x07,W
2AF8:  MULLW  1B
2AFA:  MOVF   FF3,W
2AFC:  ADDWF  x05,W
2AFE:  MOVWF  x11
2B00:  MOVF   x07,W
2B02:  MULLW  08
2B04:  MOVF   FF3,W
2B06:  ADDWF  x06,W
2B08:  MOVWF  x12
2B0A:  MOVFF  505,513
2B0E:  MOVFF  506,514
2B12:  MOVFF  511,515
2B16:  MOVWF  x16
2B18:  MOVLW  01
2B1A:  MOVWF  x17
2B1C:  CLRF   x18
2B1E:  MOVLB  0
2B20:  CALL   156E
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2B24:  MOVFF  505,512
2B28:  MOVFF  506,513
2B2C:  MOVLW  05
2B2E:  MOVLB  5
2B30:  MOVWF  x15
2B32:  MOVLW  08
2B34:  MOVWF  x14
2B36:  MOVFF  507,516
2B3A:  MOVLW  01
2B3C:  MOVWF  x17
2B3E:  MOVLB  0
2B40:  CALL   1278
.................... } 
2B44:  GOTO   6504 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
257C:  MOVFF  4C5,502
2580:  MOVLW  24
2582:  MOVLB  5
2584:  MOVWF  x03
2586:  CLRF   x04
2588:  CLRF   x05
258A:  MOVLW  01
258C:  MOVWF  x06
258E:  MOVLB  0
2590:  RCALL  2424
2592:  MOVFF  4C4,502
2596:  MOVLW  2A
2598:  MOVLB  5
259A:  MOVWF  x03
259C:  CLRF   x04
259E:  CLRF   x05
25A0:  MOVLW  01
25A2:  MOVWF  x06
25A4:  MOVLB  0
25A6:  RCALL  2424
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
25A8:  MOVLW  04
25AA:  MOVWF  FEA
25AC:  MOVLW  E1
25AE:  MOVWF  FE9
25B0:  MOVFF  FF2,501
25B4:  BCF    FF2.7
25B6:  MOVLW  00
25B8:  CALL   06BE
25BC:  TBLRD*-
25BE:  TBLRD*+
25C0:  MOVF   FF5,W
25C2:  MOVWF  FEE
25C4:  IORLW  00
25C6:  BNZ   25BE
25C8:  MOVLB  5
25CA:  BTFSC  x01.7
25CC:  BSF    FF2.7
25CE:  MOVLW  04
25D0:  MOVWF  x02
25D2:  MOVLW  E1
25D4:  MOVWF  x01
25D6:  MOVLW  31
25D8:  MOVWF  x03
25DA:  CLRF   x04
25DC:  MOVLW  02
25DE:  MOVWF  x05
25E0:  MOVLW  01
25E2:  MOVWF  x06
25E4:  MOVLB  0
25E6:  CALL   1630
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
25EA:  MOVFF  4C3,502
25EE:  MOVLW  36
25F0:  MOVLB  5
25F2:  MOVWF  x03
25F4:  CLRF   x04
25F6:  CLRF   x05
25F8:  MOVLW  01
25FA:  MOVWF  x06
25FC:  MOVLB  0
25FE:  RCALL  2424
2600:  MOVFF  4C2,502
2604:  MOVLW  3C
2606:  MOVLB  5
2608:  MOVWF  x03
260A:  CLRF   x04
260C:  CLRF   x05
260E:  MOVLW  01
2610:  MOVWF  x06
2612:  MOVLB  0
2614:  RCALL  2424
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
2616:  MOVFF  4CD,502
261A:  MOVLW  24
261C:  MOVLB  5
261E:  MOVWF  x03
2620:  MOVLW  08
2622:  MOVWF  x04
2624:  CLRF   x05
2626:  MOVLW  01
2628:  MOVWF  x06
262A:  MOVLB  0
262C:  RCALL  2424
262E:  MOVFF  4CC,502
2632:  MOVLW  2A
2634:  MOVLB  5
2636:  MOVWF  x03
2638:  MOVLW  08
263A:  MOVWF  x04
263C:  CLRF   x05
263E:  MOVLW  01
2640:  MOVWF  x06
2642:  MOVLB  0
2644:  RCALL  2424
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
2646:  MOVLW  04
2648:  MOVWF  FEA
264A:  MOVLW  E1
264C:  MOVWF  FE9
264E:  MOVFF  FF2,501
2652:  BCF    FF2.7
2654:  MOVLW  00
2656:  CALL   06BE
265A:  TBLRD*-
265C:  TBLRD*+
265E:  MOVF   FF5,W
2660:  MOVWF  FEE
2662:  IORLW  00
2664:  BNZ   265C
2666:  MOVLB  5
2668:  BTFSC  x01.7
266A:  BSF    FF2.7
266C:  MOVLW  04
266E:  MOVWF  x02
2670:  MOVLW  E1
2672:  MOVWF  x01
2674:  MOVLW  31
2676:  MOVWF  x03
2678:  MOVLW  08
267A:  MOVWF  x04
267C:  MOVLW  02
267E:  MOVWF  x05
2680:  MOVLW  01
2682:  MOVWF  x06
2684:  MOVLB  0
2686:  CALL   1630
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
268A:  MOVFF  4CB,502
268E:  MOVLW  36
2690:  MOVLB  5
2692:  MOVWF  x03
2694:  MOVLW  08
2696:  MOVWF  x04
2698:  CLRF   x05
269A:  MOVLW  01
269C:  MOVWF  x06
269E:  MOVLB  0
26A0:  RCALL  2424
26A2:  MOVFF  4CA,502
26A6:  MOVLW  3C
26A8:  MOVLB  5
26AA:  MOVWF  x03
26AC:  MOVLW  08
26AE:  MOVWF  x04
26B0:  CLRF   x05
26B2:  MOVLW  01
26B4:  MOVWF  x06
26B6:  MOVLB  0
26B8:  RCALL  2424
.................... } 
26BA:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
185E:  MOVLW  05
1860:  MOVLB  5
1862:  MOVWF  x00
1864:  MOVLW  07
1866:  MOVLB  4
1868:  MOVWF  xFF
186A:  MOVFF  503,510
186E:  MOVLW  1F
1870:  MOVLB  5
1872:  MOVWF  x11
1874:  MOVLB  0
1876:  BRA    177E
....................     
....................    if(sombreado==1) 
1878:  MOVLB  5
187A:  DECFSZ x06,W
187C:  BRA    18CC
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
187E:  MOVLW  12
1880:  ADDWF  x04,W
1882:  MOVWF  x10
1884:  MOVLW  18
1886:  ADDWF  x05,W
1888:  MOVWF  x11
188A:  MOVFF  504,513
188E:  MOVFF  505,514
1892:  MOVFF  510,515
1896:  MOVWF  x16
1898:  MOVLW  01
189A:  MOVWF  x17
189C:  MOVWF  x18
189E:  MOVLB  0
18A0:  RCALL  156E
18A2:  MOVLW  02
18A4:  MOVLB  5
18A6:  ADDWF  x04,W
18A8:  MOVWF  x10
18AA:  MOVLW  01
18AC:  ADDWF  x05,W
18AE:  MOVWF  x11
18B0:  MOVFF  510,512
18B4:  MOVWF  x13
18B6:  MOVLW  05
18B8:  MOVWF  x15
18BA:  MOVLW  07
18BC:  MOVWF  x14
18BE:  MOVLW  02
18C0:  MOVWF  x16
18C2:  CLRF   x17
18C4:  MOVLB  0
18C6:  RCALL  1278
....................    else    
18C8:  BRA    1916
18CA:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
18CC:  MOVLW  12
18CE:  ADDWF  x04,W
18D0:  MOVWF  x10
18D2:  MOVLW  18
18D4:  ADDWF  x05,W
18D6:  MOVWF  x11
18D8:  MOVFF  504,513
18DC:  MOVFF  505,514
18E0:  MOVFF  510,515
18E4:  MOVWF  x16
18E6:  CLRF   x17
18E8:  CLRF   x18
18EA:  MOVLB  0
18EC:  RCALL  156E
18EE:  MOVLW  02
18F0:  MOVLB  5
18F2:  ADDWF  x04,W
18F4:  MOVWF  x10
18F6:  MOVLW  01
18F8:  ADDWF  x05,W
18FA:  MOVWF  x11
18FC:  MOVFF  510,512
1900:  MOVWF  x13
1902:  MOVLW  05
1904:  MOVWF  x15
1906:  MOVLW  07
1908:  MOVWF  x14
190A:  MOVLW  02
190C:  MOVWF  x16
190E:  MOVLW  01
1910:  MOVWF  x17
1912:  MOVLB  0
1914:  RCALL  1278
....................  
.................... } 
1916:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
1FBE:  BSF    F93.0
1FC0:  MOVLW  11
1FC2:  MOVWF  00
1FC4:  DECFSZ 00,F
1FC6:  BRA    1FC4
1FC8:  BSF    F93.1
1FCA:  MOVLW  11
1FCC:  MOVWF  00
1FCE:  DECFSZ 00,F
1FD0:  BRA    1FCE
1FD2:  BCF    F8A.0
1FD4:  BCF    F93.0
1FD6:  MOVLW  11
1FD8:  MOVWF  00
1FDA:  DECFSZ 00,F
1FDC:  BRA    1FDA
1FDE:  BCF    F8A.1
1FE0:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FE2:  MOVFF  502,505
1FE6:  RCALL  1918
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
1FE8:  MOVFF  503,505
1FEC:  RCALL  1918
....................    i2c_write(dato);        // Dato a transmitir 
1FEE:  MOVFF  504,505
1FF2:  RCALL  1918
....................    i2c_stop();             // Fin comunicación 
1FF4:  BCF    F93.0
1FF6:  NOP   
1FF8:  BSF    F93.1
1FFA:  BTFSS  F81.1
1FFC:  BRA    1FFA
1FFE:  MOVLW  11
2000:  MOVWF  00
2002:  DECFSZ 00,F
2004:  BRA    2002
2006:  BRA    2008
2008:  NOP   
200A:  BSF    F93.0
200C:  MOVLW  11
200E:  MOVWF  00
2010:  DECFSZ 00,F
2012:  BRA    2010
....................  } 
2014:  GOTO   204A (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1ED8:  BSF    F93.0
1EDA:  MOVLW  11
1EDC:  MOVWF  00
1EDE:  DECFSZ 00,F
1EE0:  BRA    1EDE
1EE2:  BSF    F93.1
1EE4:  MOVLW  11
1EE6:  MOVWF  00
1EE8:  DECFSZ 00,F
1EEA:  BRA    1EE8
1EEC:  BCF    F8A.0
1EEE:  BCF    F93.0
1EF0:  MOVLW  11
1EF2:  MOVWF  00
1EF4:  DECFSZ 00,F
1EF6:  BRA    1EF4
1EF8:  BCF    F8A.1
1EFA:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1EFC:  MOVFF  501,505
1F00:  MOVLB  0
1F02:  RCALL  1918
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1F04:  MOVFF  502,505
1F08:  RCALL  1918
....................    i2c_start();            // Reinicio 
1F0A:  BSF    F93.0
1F0C:  MOVLW  11
1F0E:  MOVWF  00
1F10:  DECFSZ 00,F
1F12:  BRA    1F10
1F14:  BSF    F93.1
1F16:  MOVLW  11
1F18:  MOVWF  00
1F1A:  DECFSZ 00,F
1F1C:  BRA    1F1A
1F1E:  BTFSS  F81.1
1F20:  BRA    1F1E
1F22:  BCF    F8A.0
1F24:  BCF    F93.0
1F26:  MOVLW  11
1F28:  MOVWF  00
1F2A:  DECFSZ 00,F
1F2C:  BRA    1F2A
1F2E:  BCF    F8A.1
1F30:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1F32:  MOVLW  01
1F34:  MOVLB  5
1F36:  ADDWF  x01,W
1F38:  MOVWF  x03
1F3A:  MOVWF  x05
1F3C:  MOVLB  0
1F3E:  RCALL  1918
....................    dato=i2c_read(0);       // Lectura del dato 
1F40:  CLRF   00
1F42:  BRA    198E
1F44:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
1F48:  BCF    F93.0
1F4A:  NOP   
1F4C:  BSF    F93.1
1F4E:  BTFSS  F81.1
1F50:  BRA    1F4E
1F52:  MOVLW  11
1F54:  MOVWF  00
1F56:  DECFSZ 00,F
1F58:  BRA    1F56
1F5A:  BRA    1F5C
1F5C:  NOP   
1F5E:  BSF    F93.0
1F60:  MOVLW  11
1F62:  MOVWF  00
1F64:  DECFSZ 00,F
1F66:  BRA    1F64
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
1F86:  MOVFF  498,456
....................    SlaveA0Tx[1]=EVDesfogue; 
1F8A:  MOVFF  499,457
....................    SlaveA0Tx[2]=EVAgua; 
1F8E:  MOVFF  49A,458
....................    SlaveA0Tx[3]=EVTrampa; 
1F92:  MOVFF  49B,459
....................    SlaveA0Tx[4]=MotorPuerta; 
1F96:  MOVFF  49C,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
1F9A:  MOVFF  49D,45B
....................    SlaveA0Tx[6]=BombaVacio; 
1F9E:  MOVFF  49E,45C
....................    SlaveA0Tx[7]=BombaAgua; 
1FA2:  MOVFF  49F,45D
....................    SlaveA0Tx[8]=Control; 
1FA6:  MOVFF  4A0,45E
....................    SlaveA0Tx[9]=Setpoint; 
1FAA:  MOVFF  4A5,45F
....................    SlaveA0Tx[10]=20; 
1FAE:  MOVLW  14
1FB0:  MOVLB  4
1FB2:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
1FB4:  MOVFF  4B4,462
.................... } 
1FB8:  MOVLB  0
1FBA:  GOTO   201A (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1E08:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1E0C:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1E10:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1E14:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1E18:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1E1C:  MOVLB  5
1E1E:  CLRF   x02
1E20:  MOVFF  41B,501
1E24:  MOVLB  0
1E26:  RCALL  19FA
1E28:  MOVFF  03,4BD
1E2C:  MOVFF  02,4BC
1E30:  MOVFF  01,4BB
1E34:  MOVFF  00,4BA
....................    Alarma=txbuf[6]; 
1E38:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1E3C:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1E40:  MOVFF  41E,4AB
....................    Decimal=txbuf[9]; 
1E44:  MOVFF  41F,4A1
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1E48:  MOVLB  5
1E4A:  CLRF   x02
1E4C:  MOVFF  4A1,501
1E50:  MOVLB  0
1E52:  RCALL  19FA
1E54:  MOVFF  00,501
1E58:  MOVFF  01,502
1E5C:  MOVFF  02,503
1E60:  MOVFF  03,504
1E64:  MOVFF  03,508
1E68:  MOVFF  02,507
1E6C:  MOVFF  01,506
1E70:  MOVFF  00,505
1E74:  MOVLB  5
1E76:  CLRF   x0C
1E78:  CLRF   x0B
1E7A:  MOVLW  20
1E7C:  MOVWF  x0A
1E7E:  MOVLW  82
1E80:  MOVWF  x09
1E82:  MOVLB  0
1E84:  BRA    1A30
1E86:  BCF    FD8.1
1E88:  MOVFF  4BD,508
1E8C:  MOVFF  4BC,507
1E90:  MOVFF  4BB,506
1E94:  MOVFF  4BA,505
1E98:  MOVFF  03,50C
1E9C:  MOVFF  02,50B
1EA0:  MOVFF  01,50A
1EA4:  MOVFF  00,509
1EA8:  RCALL  1B90
1EAA:  MOVFF  03,4BD
1EAE:  MOVFF  02,4BC
1EB2:  MOVFF  01,4BB
1EB6:  MOVFF  00,4BA
.................... } 
1EBA:  GOTO   1F84 (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
2018:  BRA    1F86
....................    for(i=0;i<13;i++) 
201A:  MOVLB  4
201C:  CLRF   xA4
201E:  MOVF   xA4,W
2020:  SUBLW  0C
2022:  BNC   2050
....................    { 
....................       direccion=0xA0; 
2024:  MOVLW  A0
2026:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
2028:  CLRF   03
202A:  MOVF   xA4,W
202C:  ADDLW  56
202E:  MOVWF  FE9
2030:  MOVLW  04
2032:  ADDWFC 03,W
2034:  MOVWF  FEA
2036:  MOVFF  FEF,501
203A:  MOVFF  487,502
203E:  MOVFF  4A4,503
2042:  MOVFF  501,504
2046:  MOVLB  0
2048:  BRA    1FBE
....................    }  
204A:  MOVLB  4
204C:  INCF   xA4,F
204E:  BRA    201E
.................... } 
2050:  MOVLB  0
2052:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
1EBE:  MOVLB  4
1EC0:  CLRF   xA4
1EC2:  MOVF   xA4,W
1EC4:  SUBLW  09
1EC6:  BNC   1F80
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1EC8:  MOVLW  A0
1ECA:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1ECC:  MOVFF  4A4,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1ED0:  MOVFF  487,501
1ED4:  MOVFF  488,502
....................       txbuf[i]=(int8)dato; 
*
1F68:  CLRF   03
1F6A:  MOVLB  4
1F6C:  MOVF   xA4,W
1F6E:  ADDLW  16
1F70:  MOVWF  FE9
1F72:  MOVLW  04
1F74:  ADDWFC 03,W
1F76:  MOVWF  FEA
1F78:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
1F7C:  INCF   xA4,F
1F7E:  BRA    1EC2
....................    Lee_Vector(); 
1F80:  MOVLB  0
1F82:  BRA    1E08
.................... } 
1F84:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2B86:  CLRF   FF8
2B88:  BCF    FD0.7
2B8A:  BSF    07.7
2B8C:  CLRF   FEA
2B8E:  CLRF   FE9
2B90:  MOVLB  4
2B92:  CLRF   x86
2B94:  CLRF   x87
2B96:  CLRF   x88
2B98:  CLRF   x8D
2B9A:  MOVLW  01
2B9C:  MOVWF  x8E
2B9E:  CLRF   x8F
2BA0:  CLRF   x90
2BA2:  CLRF   x91
2BA4:  CLRF   x92
2BA6:  CLRF   x93
2BA8:  CLRF   x94
2BAA:  BCF    x95.0
2BAC:  BCF    x95.1
2BAE:  BCF    x95.2
2BB0:  BCF    x95.3
2BB2:  BSF    x95.4
2BB4:  BCF    x95.5
2BB6:  BCF    x95.6
2BB8:  BCF    x95.7
2BBA:  BCF    x96.0
2BBC:  BCF    x96.1
2BBE:  BCF    x96.2
2BC0:  BCF    x96.3
2BC2:  BCF    x96.4
2BC4:  BCF    x96.5
2BC6:  BCF    x96.6
2BC8:  BCF    x96.7
2BCA:  BCF    x97.0
2BCC:  BCF    x97.1
2BCE:  BCF    x97.2
2BD0:  BCF    x97.3
2BD2:  BCF    x97.4
2BD4:  CLRF   x98
2BD6:  CLRF   x99
2BD8:  CLRF   x9A
2BDA:  CLRF   x9B
2BDC:  CLRF   x9C
2BDE:  CLRF   x9D
2BE0:  CLRF   x9E
2BE2:  CLRF   x9F
2BE4:  CLRF   xA0
2BE6:  CLRF   xA1
2BE8:  CLRF   xA2
2BEA:  MOVWF  xA3
2BEC:  CLRF   xA4
2BEE:  CLRF   xA5
2BF0:  CLRF   xA6
2BF2:  MOVWF  xA7
2BF4:  CLRF   xA8
2BF6:  CLRF   xA9
2BF8:  CLRF   xAA
2BFA:  CLRF   xAB
2BFC:  CLRF   xAD
2BFE:  CLRF   xAC
2C00:  CLRF   xAF
2C02:  CLRF   xAE
2C04:  CLRF   xB1
2C06:  CLRF   xB0
2C08:  CLRF   xB3
2C0A:  MOVLW  0F
2C0C:  MOVWF  xB2
2C0E:  CLRF   xB5
2C10:  CLRF   xB4
2C12:  CLRF   xB7
2C14:  CLRF   xB6
2C16:  CLRF   xB9
2C18:  CLRF   xB8
2C1A:  CLRF   xBD
2C1C:  CLRF   xBC
2C1E:  CLRF   xBB
2C20:  CLRF   xBA
2C22:  MOVF   FC1,W
2C24:  ANDLW  C0
2C26:  IORLW  0F
2C28:  MOVWF  FC1
2C2A:  MOVLW  07
2C2C:  MOVWF  FB4
2C2E:  MOVLW  6B
2C30:  MOVWF  x89
2C32:  MOVLW  50
2C34:  MOVWF  x8A
2C36:  MOVLW  61
2C38:  MOVWF  x8B
2C3A:  CLRF   x8C
2C3C:  CLRF   xBE
2C3E:  CLRF   xBF
2C40:  CLRF   xC0
2C42:  CLRF   xC1
2C44:  CLRF   xC2
2C46:  CLRF   xC3
2C48:  CLRF   xC4
2C4A:  CLRF   xC5
2C4C:  CLRF   xC6
2C4E:  CLRF   xC7
2C50:  CLRF   xC8
2C52:  CLRF   xC9
2C54:  CLRF   xCA
2C56:  CLRF   xCB
2C58:  CLRF   xCC
2C5A:  CLRF   xCD
2C5C:  CLRF   xCE
2C5E:  CLRF   xCF
2C60:  CLRF   xD0
2C62:  CLRF   xD1
2C64:  CLRF   xD2
2C66:  CLRF   xD3
2C68:  CLRF   xD4
2C6A:  CLRF   xD5
2C6C:  CLRF   xFF
2C6E:  MOVLB  5
2C70:  CLRF   x00
....................    Display_on; 
2C72:  BSF    F8D.0
2C74:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2C76:  MOVLB  4
2C78:  CLRF   x88
2C7A:  MOVF   x88,W
2C7C:  SUBLW  0F
2C7E:  BNC   2CB4
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2C80:  CLRF   03
2C82:  MOVF   x88,W
2C84:  ADDLW  56
2C86:  MOVWF  FE9
2C88:  MOVLW  04
2C8A:  ADDWFC 03,W
2C8C:  MOVWF  FEA
2C8E:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2C90:  CLRF   03
2C92:  MOVF   x88,W
2C94:  ADDLW  66
2C96:  MOVWF  FE9
2C98:  MOVLW  04
2C9A:  ADDWFC 03,W
2C9C:  MOVWF  FEA
2C9E:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2CA0:  CLRF   03
2CA2:  MOVF   x88,W
2CA4:  ADDLW  76
2CA6:  MOVWF  FE9
2CA8:  MOVLW  04
2CAA:  ADDWFC 03,W
2CAC:  MOVWF  FEA
2CAE:  CLRF   FEF
....................    } 
2CB0:  INCF   x88,F
2CB2:  BRA    2C7A
....................    set_tris_a(0XFF); 
2CB4:  MOVLW  FF
2CB6:  MOVWF  F92
....................    setup_adc(OFF); 
2CB8:  BCF    FC2.0
....................    input_a(); 
2CBA:  MOVWF  F92
....................    UP; 
2CBC:  BSF    F92.0
....................    delay_ms(1000);    
2CBE:  MOVLW  04
2CC0:  MOVLB  5
2CC2:  MOVWF  x01
2CC4:  MOVLW  FA
2CC6:  MOVWF  x02
2CC8:  MOVLB  0
2CCA:  CALL   0F98
2CCE:  MOVLB  5
2CD0:  DECFSZ x01,F
2CD2:  BRA    2CC4
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2CD4:  MOVLW  85
2CD6:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2CD8:  BSF    F9D.0
....................    enable_interrupts(global); 
2CDA:  MOVLW  C0
2CDC:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2CDE:  MOVFF  FF2,501
2CE2:  BCF    FF2.7
2CE4:  CLRF   FA9
2CE6:  BCF    FA6.6
2CE8:  BCF    FA6.7
2CEA:  BSF    FA6.0
2CEC:  MOVF   FA8,W
2CEE:  BTFSC  x01.7
2CF0:  BSF    FF2.7
2CF2:  MOVLB  4
2CF4:  MOVWF  xC2
2CF6:  MOVFF  FF2,501
2CFA:  BCF    FF2.7
2CFC:  MOVLW  01
2CFE:  MOVWF  FA9
2D00:  BCF    FA6.6
2D02:  BCF    FA6.7
2D04:  BSF    FA6.0
2D06:  MOVF   FA8,W
2D08:  MOVLB  5
2D0A:  BTFSC  x01.7
2D0C:  BSF    FF2.7
2D0E:  MOVLB  4
2D10:  MOVWF  xC3
2D12:  MOVFF  FF2,501
2D16:  BCF    FF2.7
2D18:  MOVLW  02
2D1A:  MOVWF  FA9
2D1C:  BCF    FA6.6
2D1E:  BCF    FA6.7
2D20:  BSF    FA6.0
2D22:  MOVF   FA8,W
2D24:  MOVLB  5
2D26:  BTFSC  x01.7
2D28:  BSF    FF2.7
2D2A:  MOVLB  4
2D2C:  MOVWF  xC4
2D2E:  MOVFF  FF2,501
2D32:  BCF    FF2.7
2D34:  MOVLW  03
2D36:  MOVWF  FA9
2D38:  BCF    FA6.6
2D3A:  BCF    FA6.7
2D3C:  BSF    FA6.0
2D3E:  MOVF   FA8,W
2D40:  MOVLB  5
2D42:  BTFSC  x01.7
2D44:  BSF    FF2.7
2D46:  MOVLB  4
2D48:  MOVWF  xC5
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2D4A:  MOVFF  FF2,501
2D4E:  BCF    FF2.7
2D50:  MOVLW  04
2D52:  MOVWF  FA9
2D54:  BCF    FA6.6
2D56:  BCF    FA6.7
2D58:  BSF    FA6.0
2D5A:  MOVF   FA8,W
2D5C:  MOVLB  5
2D5E:  BTFSC  x01.7
2D60:  BSF    FF2.7
2D62:  MOVLB  4
2D64:  MOVWF  xCA
2D66:  MOVFF  FF2,501
2D6A:  BCF    FF2.7
2D6C:  MOVLW  05
2D6E:  MOVWF  FA9
2D70:  BCF    FA6.6
2D72:  BCF    FA6.7
2D74:  BSF    FA6.0
2D76:  MOVF   FA8,W
2D78:  MOVLB  5
2D7A:  BTFSC  x01.7
2D7C:  BSF    FF2.7
2D7E:  MOVLB  4
2D80:  MOVWF  xCB
2D82:  MOVFF  FF2,501
2D86:  BCF    FF2.7
2D88:  MOVLW  06
2D8A:  MOVWF  FA9
2D8C:  BCF    FA6.6
2D8E:  BCF    FA6.7
2D90:  BSF    FA6.0
2D92:  MOVF   FA8,W
2D94:  MOVLB  5
2D96:  BTFSC  x01.7
2D98:  BSF    FF2.7
2D9A:  MOVLB  4
2D9C:  MOVWF  xCC
2D9E:  MOVFF  FF2,501
2DA2:  BCF    FF2.7
2DA4:  MOVLW  07
2DA6:  MOVWF  FA9
2DA8:  BCF    FA6.6
2DAA:  BCF    FA6.7
2DAC:  BSF    FA6.0
2DAE:  MOVF   FA8,W
2DB0:  MOVLB  5
2DB2:  BTFSC  x01.7
2DB4:  BSF    FF2.7
2DB6:  MOVLB  4
2DB8:  MOVWF  xCD
2DBA:  MOVFF  FF2,501
2DBE:  BCF    FF2.7
2DC0:  MOVLW  08
2DC2:  MOVWF  FA9
2DC4:  BCF    FA6.6
2DC6:  BCF    FA6.7
2DC8:  BSF    FA6.0
2DCA:  MOVF   FA8,W
2DCC:  MOVLB  5
2DCE:  BTFSC  x01.7
2DD0:  BSF    FF2.7
2DD2:  MOVLB  4
2DD4:  MOVWF  xA5
....................    Nivel=read_eeprom(9); 
2DD6:  MOVFF  FF2,501
2DDA:  BCF    FF2.7
2DDC:  MOVLW  09
2DDE:  MOVWF  FA9
2DE0:  BCF    FA6.6
2DE2:  BCF    FA6.7
2DE4:  BSF    FA6.0
2DE6:  MOVF   FA8,W
2DE8:  MOVLB  5
2DEA:  BTFSC  x01.7
2DEC:  BSF    FF2.7
2DEE:  MOVLB  4
2DF0:  CLRF   xB5
2DF2:  MOVWF  xB4
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2DF4:  MOVFF  FF2,501
2DF8:  BCF    FF2.7
2DFA:  MOVLW  0A
2DFC:  MOVWF  FA9
2DFE:  BCF    FA6.6
2E00:  BCF    FA6.7
2E02:  BSF    FA6.0
2E04:  MOVF   FA8,W
2E06:  MOVLB  5
2E08:  BTFSC  x01.7
2E0A:  BSF    FF2.7
2E0C:  MOVLB  4
2E0E:  MOVWF  xD2
2E10:  MOVFF  FF2,501
2E14:  BCF    FF2.7
2E16:  MOVLW  0B
2E18:  MOVWF  FA9
2E1A:  BCF    FA6.6
2E1C:  BCF    FA6.7
2E1E:  BSF    FA6.0
2E20:  MOVF   FA8,W
2E22:  MOVLB  5
2E24:  BTFSC  x01.7
2E26:  BSF    FF2.7
2E28:  MOVLB  4
2E2A:  MOVWF  xD3
2E2C:  MOVFF  FF2,501
2E30:  BCF    FF2.7
2E32:  MOVLW  0C
2E34:  MOVWF  FA9
2E36:  BCF    FA6.6
2E38:  BCF    FA6.7
2E3A:  BSF    FA6.0
2E3C:  MOVF   FA8,W
2E3E:  MOVLB  5
2E40:  BTFSC  x01.7
2E42:  BSF    FF2.7
2E44:  MOVLB  4
2E46:  MOVWF  xD4
2E48:  MOVFF  FF2,501
2E4C:  BCF    FF2.7
2E4E:  MOVLW  0D
2E50:  MOVWF  FA9
2E52:  BCF    FA6.6
2E54:  BCF    FA6.7
2E56:  BSF    FA6.0
2E58:  MOVF   FA8,W
2E5A:  MOVLB  5
2E5C:  BTFSC  x01.7
2E5E:  BSF    FF2.7
2E60:  MOVLB  4
2E62:  MOVWF  xD5
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2E64:  MOVLW  01
2E66:  MOVLB  5
2E68:  MOVWF  x01
2E6A:  MOVLB  0
2E6C:  CALL   1114
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2E70:  MOVLB  5
2E72:  CLRF   x02
2E74:  MOVLB  0
2E76:  CALL   1002
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2E7A:  MOVLW  04
2E7C:  MOVWF  FEA
2E7E:  MOVLW  E1
2E80:  MOVWF  FE9
2E82:  MOVFF  FF2,501
2E86:  BCF    FF2.7
2E88:  MOVLW  00
2E8A:  CALL   06DA
2E8E:  TBLRD*-
2E90:  TBLRD*+
2E92:  MOVF   FF5,W
2E94:  MOVWF  FEE
2E96:  IORLW  00
2E98:  BNZ   2E90
2E9A:  MOVLB  5
2E9C:  BTFSC  x01.7
2E9E:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2EA0:  MOVLW  04
2EA2:  MOVWF  x02
2EA4:  MOVLW  E1
2EA6:  MOVWF  x01
2EA8:  CLRF   x03
2EAA:  CLRF   x04
2EAC:  CLRF   x05
2EAE:  MOVLW  02
2EB0:  MOVWF  x06
2EB2:  MOVLB  0
2EB4:  CALL   1630
....................    strcpy(Menus.Letra,"Autoclave Horizontal"); 
2EB8:  MOVLW  04
2EBA:  MOVWF  FEA
2EBC:  MOVLW  E1
2EBE:  MOVWF  FE9
2EC0:  MOVFF  FF2,501
2EC4:  BCF    FF2.7
2EC6:  MOVLW  00
2EC8:  CALL   0700
2ECC:  TBLRD*-
2ECE:  TBLRD*+
2ED0:  MOVF   FF5,W
2ED2:  MOVWF  FEE
2ED4:  IORLW  00
2ED6:  BNZ   2ECE
2ED8:  MOVLB  5
2EDA:  BTFSC  x01.7
2EDC:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
2EDE:  MOVLW  04
2EE0:  MOVWF  x02
2EE2:  MOVLW  E1
2EE4:  MOVWF  x01
2EE6:  CLRF   x03
2EE8:  MOVLW  14
2EEA:  MOVWF  x04
2EEC:  CLRF   x05
2EEE:  MOVLW  01
2EF0:  MOVWF  x06
2EF2:  MOVLB  0
2EF4:  CALL   1630
....................    strcpy(Menus.Letra," 52 Litros  "); 
2EF8:  MOVLW  04
2EFA:  MOVWF  FEA
2EFC:  MOVLW  E1
2EFE:  MOVWF  FE9
2F00:  MOVFF  FF2,501
2F04:  BCF    FF2.7
2F06:  MOVLW  00
2F08:  CALL   0730
2F0C:  TBLRD*-
2F0E:  TBLRD*+
2F10:  MOVF   FF5,W
2F12:  MOVWF  FEE
2F14:  IORLW  00
2F16:  BNZ   2F0E
2F18:  MOVLB  5
2F1A:  BTFSC  x01.7
2F1C:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
2F1E:  MOVLW  04
2F20:  MOVWF  x02
2F22:  MOVLW  E1
2F24:  MOVWF  x01
2F26:  CLRF   x03
2F28:  MOVLW  23
2F2A:  MOVWF  x04
2F2C:  CLRF   x05
2F2E:  MOVLW  02
2F30:  MOVWF  x06
2F32:  MOVLB  0
2F34:  CALL   1630
....................    delay_ms(1000); 
2F38:  MOVLW  04
2F3A:  MOVLB  5
2F3C:  MOVWF  x01
2F3E:  MOVLW  FA
2F40:  MOVWF  x02
2F42:  MOVLB  0
2F44:  CALL   0F98
2F48:  MOVLB  5
2F4A:  DECFSZ x01,F
2F4C:  BRA    2F3E
....................    delay_ms(1000); 
2F4E:  MOVLW  04
2F50:  MOVWF  x01
2F52:  MOVLW  FA
2F54:  MOVWF  x02
2F56:  MOVLB  0
2F58:  CALL   0F98
2F5C:  MOVLB  5
2F5E:  DECFSZ x01,F
2F60:  BRA    2F52
....................    delay_ms(1000); 
2F62:  MOVLW  04
2F64:  MOVWF  x01
2F66:  MOVLW  FA
2F68:  MOVWF  x02
2F6A:  MOVLB  0
2F6C:  CALL   0F98
2F70:  MOVLB  5
2F72:  DECFSZ x01,F
2F74:  BRA    2F66
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2F76:  CLRF   x02
2F78:  MOVLB  0
2F7A:  CALL   1002
....................    displayContrasena(Contrasena[0],20,30,1); 
2F7E:  MOVFF  4CE,503
2F82:  MOVLW  14
2F84:  MOVLB  5
2F86:  MOVWF  x04
2F88:  MOVLW  1E
2F8A:  MOVWF  x05
2F8C:  MOVLW  01
2F8E:  MOVWF  x06
2F90:  MOVLB  0
2F92:  CALL   185E
....................    displayContrasena(Contrasena[1],40,30,0); 
2F96:  MOVFF  4CF,503
2F9A:  MOVLW  28
2F9C:  MOVLB  5
2F9E:  MOVWF  x04
2FA0:  MOVLW  1E
2FA2:  MOVWF  x05
2FA4:  CLRF   x06
2FA6:  MOVLB  0
2FA8:  CALL   185E
....................    displayContrasena(Contrasena[2],60,30,0); 
2FAC:  MOVFF  4D0,503
2FB0:  MOVLW  3C
2FB2:  MOVLB  5
2FB4:  MOVWF  x04
2FB6:  MOVLW  1E
2FB8:  MOVWF  x05
2FBA:  CLRF   x06
2FBC:  MOVLB  0
2FBE:  CALL   185E
....................    displayContrasena(Contrasena[3],80,30,0); 
2FC2:  MOVFF  4D1,503
2FC6:  MOVLW  50
2FC8:  MOVLB  5
2FCA:  MOVWF  x04
2FCC:  MOVLW  1E
2FCE:  MOVWF  x05
2FD0:  CLRF   x06
2FD2:  MOVLB  0
2FD4:  CALL   185E
....................    set_tris_a(0XFF); 
2FD8:  MOVLW  FF
2FDA:  MOVWF  F92
....................    setup_adc(OFF); 
2FDC:  BCF    FC2.0
....................    setup_adc_ports(NO_ANALOGS); 
2FDE:  MOVF   FC1,W
2FE0:  ANDLW  C0
2FE2:  IORLW  0F
2FE4:  MOVWF  FC1
....................    input_a(); 
2FE6:  MOVLW  FF
2FE8:  MOVWF  F92
....................    UP; 
2FEA:  BSF    F92.0
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
2FEC:  CALL   1EBE
....................        
....................       Envio_Esclavos(); 
2FF0:  CALL   2018
....................       glcd_update(); 
2FF4:  CALL   105C
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
2FF8:  BSF    F92.0
2FFA:  BTFSC  F80.0
2FFC:  BRA    3010
2FFE:  BSF    F92.1
3000:  BTFSC  F80.1
3002:  BRA    3010
3004:  BSF    F92.2
3006:  BTFSC  F80.2
3008:  BRA    3010
300A:  BSF    F92.3
300C:  BTFSS  F80.3
300E:  BRA    3018
....................       { 
....................          tinicio=0; 
3010:  MOVLB  4
3012:  CLRF   xB9
3014:  CLRF   xB8
3016:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
3018:  MOVLB  4
301A:  MOVF   xB9,W
301C:  SUBLW  37
301E:  BC    303C
3020:  XORLW  FF
3022:  BNZ   302A
3024:  MOVF   xB8,W
3026:  SUBLW  3F
3028:  BC    303C
....................          glcd_fillscreen(OFF); 
302A:  MOVLB  5
302C:  CLRF   x02
302E:  MOVLB  0
3030:  CALL   1002
....................          Display_off; 
3034:  BCF    F8D.0
3036:  BCF    F96.0
....................       } 
3038:  BRA    3018
303A:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
303C:  MOVF   xA2,F
303E:  BTFSS  FD8.2
3040:  BRA    35D6
....................        
....................       strcpy(Menus.Letra,"Clave"); 
3042:  MOVLW  04
3044:  MOVWF  FEA
3046:  MOVLW  E1
3048:  MOVWF  FE9
304A:  MOVFF  FF2,501
304E:  BCF    FF2.7
3050:  MOVLW  00
3052:  MOVLB  0
3054:  CALL   0758
3058:  TBLRD*-
305A:  TBLRD*+
305C:  MOVF   FF5,W
305E:  MOVWF  FEE
3060:  IORLW  00
3062:  BNZ   305A
3064:  MOVLB  5
3066:  BTFSC  x01.7
3068:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
306A:  MOVLW  04
306C:  MOVWF  x02
306E:  MOVLW  E1
3070:  MOVWF  x01
3072:  MOVLW  1E
3074:  MOVWF  x03
3076:  CLRF   x04
3078:  MOVLW  01
307A:  MOVWF  x05
307C:  MOVLW  02
307E:  MOVWF  x06
3080:  MOVLB  0
3082:  CALL   1630
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
3086:  BSF    F92.0
3088:  BTFSS  F80.0
308A:  BRA    3162
....................       { 
....................          if(Flanco == 0) 
308C:  MOVLB  4
308E:  BTFSC  x95.0
3090:  BRA    3160
....................          { 
....................             Flanco = 1;delay_ms(30); 
3092:  BSF    x95.0
3094:  MOVLW  1E
3096:  MOVLB  5
3098:  MOVWF  x02
309A:  MOVLB  0
309C:  CALL   0F98
....................             for(i=1;i<=4;i++) 
30A0:  MOVLW  01
30A2:  MOVLB  4
30A4:  MOVWF  xA4
30A6:  MOVF   xA4,W
30A8:  SUBLW  04
30AA:  BNC   3160
....................             { 
....................                if(unidad==i) 
30AC:  MOVF   xA4,W
30AE:  SUBWF  xA3,W
30B0:  BNZ   3128
....................                { 
....................                   Contrasena[i-1]++; 
30B2:  MOVLW  01
30B4:  SUBWF  xA4,W
30B6:  CLRF   03
30B8:  ADDLW  CE
30BA:  MOVWF  FE9
30BC:  MOVLW  04
30BE:  ADDWFC 03,W
30C0:  MOVWF  FEA
30C2:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
30C4:  MOVLW  01
30C6:  SUBWF  xA4,W
30C8:  CLRF   03
30CA:  ADDLW  CE
30CC:  MOVWF  FE9
30CE:  MOVLW  04
30D0:  ADDWFC 03,W
30D2:  MOVWF  FEA
30D4:  BTFSC  FEF.7
30D6:  BRA    30F0
30D8:  MOVF   FEF,W
30DA:  SUBLW  09
30DC:  BC    30F0
....................                   { 
....................                      Contrasena[i-1]=0; 
30DE:  MOVLW  01
30E0:  SUBWF  xA4,W
30E2:  CLRF   03
30E4:  ADDLW  CE
30E6:  MOVWF  FE9
30E8:  MOVLW  04
30EA:  ADDWFC 03,W
30EC:  MOVWF  FEA
30EE:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
30F0:  MOVLW  01
30F2:  SUBWF  xA4,W
30F4:  CLRF   03
30F6:  ADDLW  CE
30F8:  MOVWF  FE9
30FA:  MOVLW  04
30FC:  ADDWFC 03,W
30FE:  MOVWF  FEA
3100:  MOVFF  FEF,501
3104:  MOVF   xA4,W
3106:  MULLW  14
3108:  MOVFF  FF3,502
310C:  MOVLB  5
310E:  MOVFF  501,503
3112:  MOVFF  502,504
3116:  MOVLW  1E
3118:  MOVWF  x05
311A:  MOVLW  01
311C:  MOVWF  x06
311E:  MOVLB  0
3120:  CALL   185E
....................                } 
....................                else 
3124:  BRA    315A
3126:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
3128:  MOVLW  01
312A:  SUBWF  xA4,W
312C:  CLRF   03
312E:  ADDLW  CE
3130:  MOVWF  FE9
3132:  MOVLW  04
3134:  ADDWFC 03,W
3136:  MOVWF  FEA
3138:  MOVFF  FEF,501
313C:  MOVF   xA4,W
313E:  MULLW  14
3140:  MOVFF  FF3,502
3144:  MOVLB  5
3146:  MOVFF  501,503
314A:  MOVFF  502,504
314E:  MOVLW  1E
3150:  MOVWF  x05
3152:  CLRF   x06
3154:  MOVLB  0
3156:  CALL   185E
....................                } 
....................             } 
315A:  MOVLB  4
315C:  INCF   xA4,F
315E:  BRA    30A6
....................          } 
....................       } 
....................          else 
3160:  BRA    3166
....................             {Flanco = 0;} 
3162:  MOVLB  4
3164:  BCF    x95.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3166:  BSF    F92.1
3168:  BTFSS  F80.1
316A:  BRA    323E
....................       { 
....................          if(Flanco2 == 0) 
316C:  BTFSC  x95.2
316E:  BRA    323C
....................             {Flanco2 = 1;delay_ms(30); 
3170:  BSF    x95.2
3172:  MOVLW  1E
3174:  MOVLB  5
3176:  MOVWF  x02
3178:  MOVLB  0
317A:  CALL   0F98
....................                for(i=1;i<=4;i++) 
317E:  MOVLW  01
3180:  MOVLB  4
3182:  MOVWF  xA4
3184:  MOVF   xA4,W
3186:  SUBLW  04
3188:  BNC   323C
....................                { 
....................                   if(unidad==i) 
318A:  MOVF   xA4,W
318C:  SUBWF  xA3,W
318E:  BNZ   3204
....................                   {Contrasena[i-1]--;  
3190:  MOVLW  01
3192:  SUBWF  xA4,W
3194:  CLRF   03
3196:  ADDLW  CE
3198:  MOVWF  FE9
319A:  MOVLW  04
319C:  ADDWFC 03,W
319E:  MOVWF  FEA
31A0:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
31A2:  MOVLW  01
31A4:  SUBWF  xA4,W
31A6:  CLRF   03
31A8:  ADDLW  CE
31AA:  MOVWF  FE9
31AC:  MOVLW  04
31AE:  ADDWFC 03,W
31B0:  MOVWF  FEA
31B2:  BTFSC  FEF.7
31B4:  BRA    31B8
31B6:  BRA    31CC
....................                         {Contrasena[i-1]=9;} 
31B8:  MOVLW  01
31BA:  SUBWF  xA4,W
31BC:  CLRF   03
31BE:  ADDLW  CE
31C0:  MOVWF  FE9
31C2:  MOVLW  04
31C4:  ADDWFC 03,W
31C6:  MOVWF  FEA
31C8:  MOVLW  09
31CA:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
31CC:  MOVLW  01
31CE:  SUBWF  xA4,W
31D0:  CLRF   03
31D2:  ADDLW  CE
31D4:  MOVWF  FE9
31D6:  MOVLW  04
31D8:  ADDWFC 03,W
31DA:  MOVWF  FEA
31DC:  MOVFF  FEF,501
31E0:  MOVF   xA4,W
31E2:  MULLW  14
31E4:  MOVFF  FF3,502
31E8:  MOVLB  5
31EA:  MOVFF  501,503
31EE:  MOVFF  502,504
31F2:  MOVLW  1E
31F4:  MOVWF  x05
31F6:  MOVLW  01
31F8:  MOVWF  x06
31FA:  MOVLB  0
31FC:  CALL   185E
....................                   else 
3200:  BRA    3236
3202:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3204:  MOVLW  01
3206:  SUBWF  xA4,W
3208:  CLRF   03
320A:  ADDLW  CE
320C:  MOVWF  FE9
320E:  MOVLW  04
3210:  ADDWFC 03,W
3212:  MOVWF  FEA
3214:  MOVFF  FEF,501
3218:  MOVF   xA4,W
321A:  MULLW  14
321C:  MOVFF  FF3,502
3220:  MOVLB  5
3222:  MOVFF  501,503
3226:  MOVFF  502,504
322A:  MOVLW  1E
322C:  MOVWF  x05
322E:  CLRF   x06
3230:  MOVLB  0
3232:  CALL   185E
....................                }       
3236:  MOVLB  4
3238:  INCF   xA4,F
323A:  BRA    3184
....................             }      
....................       } 
....................          else 
323C:  BRA    3240
....................             {Flanco2 = 0;}   
323E:  BCF    x95.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3240:  BSF    F92.2
3242:  BTFSS  F80.2
3244:  BRA    32DE
....................       { 
....................          if(Flanco1 == 0) 
3246:  BTFSC  x95.1
3248:  BRA    32DC
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
324A:  BSF    x95.1
324C:  MOVLW  1E
324E:  MOVLB  5
3250:  MOVWF  x02
3252:  MOVLB  0
3254:  CALL   0F98
3258:  MOVLB  4
325A:  INCF   xA3,F
....................                for(i=1;i<=4;i++) 
325C:  MOVLW  01
325E:  MOVWF  xA4
3260:  MOVF   xA4,W
3262:  SUBLW  04
3264:  BNC   32DC
....................                { 
....................                   if(unidad==i) 
3266:  MOVF   xA4,W
3268:  SUBWF  xA3,W
326A:  BNZ   32A4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
326C:  MOVLW  01
326E:  SUBWF  xA4,W
3270:  CLRF   03
3272:  ADDLW  CE
3274:  MOVWF  FE9
3276:  MOVLW  04
3278:  ADDWFC 03,W
327A:  MOVWF  FEA
327C:  MOVFF  FEF,501
3280:  MOVF   xA4,W
3282:  MULLW  14
3284:  MOVFF  FF3,502
3288:  MOVLB  5
328A:  MOVFF  501,503
328E:  MOVFF  502,504
3292:  MOVLW  1E
3294:  MOVWF  x05
3296:  MOVLW  01
3298:  MOVWF  x06
329A:  MOVLB  0
329C:  CALL   185E
....................                   else 
32A0:  BRA    32D6
32A2:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
32A4:  MOVLW  01
32A6:  SUBWF  xA4,W
32A8:  CLRF   03
32AA:  ADDLW  CE
32AC:  MOVWF  FE9
32AE:  MOVLW  04
32B0:  ADDWFC 03,W
32B2:  MOVWF  FEA
32B4:  MOVFF  FEF,501
32B8:  MOVF   xA4,W
32BA:  MULLW  14
32BC:  MOVFF  FF3,502
32C0:  MOVLB  5
32C2:  MOVFF  501,503
32C6:  MOVFF  502,504
32CA:  MOVLW  1E
32CC:  MOVWF  x05
32CE:  CLRF   x06
32D0:  MOVLB  0
32D2:  CALL   185E
....................                } 
32D6:  MOVLB  4
32D8:  INCF   xA4,F
32DA:  BRA    3260
....................             } 
....................       } 
....................          else 
32DC:  BRA    32E0
....................             {Flanco1 = 0;}   
32DE:  BCF    x95.1
....................      
....................       if(unidad>4) 
32E0:  MOVF   xA3,W
32E2:  SUBLW  04
32E4:  BTFSC  FD8.0
32E6:  BRA    35D6
....................       {glcd_fillScreen(OFF);unidad=4; 
32E8:  MOVLB  5
32EA:  CLRF   x02
32EC:  MOVLB  0
32EE:  CALL   1002
32F2:  MOVLW  04
32F4:  MOVLB  4
32F6:  MOVWF  xA3
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
32F8:  MOVF   xCE,W
32FA:  SUBLW  03
32FC:  BNZ   33E4
32FE:  MOVF   xCF,W
3300:  SUBLW  08
3302:  BNZ   33E4
3304:  MOVF   xD0,W
3306:  SUBLW  09
3308:  BNZ   33E4
330A:  MOVF   xD1,W
330C:  SUBLW  02
330E:  BNZ   33E4
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3310:  MOVLW  0A
3312:  MOVWF  FA9
3314:  CLRF   FA8
3316:  BCF    FA6.6
3318:  BCF    FA6.7
331A:  BSF    FA6.2
331C:  MOVF   FF2,W
331E:  MOVWF  00
3320:  BCF    FF2.7
3322:  MOVLB  F
3324:  MOVLW  55
3326:  MOVWF  FA7
3328:  MOVLW  AA
332A:  MOVWF  FA7
332C:  BSF    FA6.1
332E:  BTFSC  FA6.1
3330:  BRA    332E
3332:  BCF    FA6.2
3334:  MOVF   00,W
3336:  IORWF  FF2,F
3338:  MOVLW  14
333A:  MOVLB  5
333C:  MOVWF  x02
333E:  MOVLB  0
3340:  CALL   0F98
3344:  MOVLW  0B
3346:  MOVWF  FA9
3348:  CLRF   FA8
334A:  BCF    FA6.6
334C:  BCF    FA6.7
334E:  BSF    FA6.2
3350:  MOVF   FF2,W
3352:  MOVWF  00
3354:  BCF    FF2.7
3356:  MOVLB  F
3358:  MOVLW  55
335A:  MOVWF  FA7
335C:  MOVLW  AA
335E:  MOVWF  FA7
3360:  BSF    FA6.1
3362:  BTFSC  FA6.1
3364:  BRA    3362
3366:  BCF    FA6.2
3368:  MOVF   00,W
336A:  IORWF  FF2,F
336C:  MOVLW  14
336E:  MOVLB  5
3370:  MOVWF  x02
3372:  MOVLB  0
3374:  CALL   0F98
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
3378:  MOVLW  0C
337A:  MOVWF  FA9
337C:  CLRF   FA8
337E:  BCF    FA6.6
3380:  BCF    FA6.7
3382:  BSF    FA6.2
3384:  MOVF   FF2,W
3386:  MOVWF  00
3388:  BCF    FF2.7
338A:  MOVLB  F
338C:  MOVLW  55
338E:  MOVWF  FA7
3390:  MOVLW  AA
3392:  MOVWF  FA7
3394:  BSF    FA6.1
3396:  BTFSC  FA6.1
3398:  BRA    3396
339A:  BCF    FA6.2
339C:  MOVF   00,W
339E:  IORWF  FF2,F
33A0:  MOVLW  14
33A2:  MOVLB  5
33A4:  MOVWF  x02
33A6:  MOVLB  0
33A8:  CALL   0F98
33AC:  MOVLW  0D
33AE:  MOVWF  FA9
33B0:  CLRF   FA8
33B2:  BCF    FA6.6
33B4:  BCF    FA6.7
33B6:  BSF    FA6.2
33B8:  MOVF   FF2,W
33BA:  MOVWF  00
33BC:  BCF    FF2.7
33BE:  MOVLB  F
33C0:  MOVLW  55
33C2:  MOVWF  FA7
33C4:  MOVLW  AA
33C6:  MOVWF  FA7
33C8:  BSF    FA6.1
33CA:  BTFSC  FA6.1
33CC:  BRA    33CA
33CE:  BCF    FA6.2
33D0:  MOVF   00,W
33D2:  IORWF  FF2,F
33D4:  MOVLW  14
33D6:  MOVLB  5
33D8:  MOVWF  x02
33DA:  MOVLB  0
33DC:  CALL   0F98
....................              reset_cpu();}         
33E0:  RESET
33E2:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
33E4:  MOVF   xD2,W
33E6:  SUBWF  xCE,W
33E8:  BNZ   34BA
33EA:  MOVF   xD3,W
33EC:  SUBWF  xCF,W
33EE:  BNZ   34BA
33F0:  MOVF   xD4,W
33F2:  SUBWF  xD0,W
33F4:  BNZ   34BA
33F6:  MOVF   xD5,W
33F8:  SUBWF  xD1,W
33FA:  BNZ   34BA
....................          { 
....................             glcd_fillScreen(OFF); 
33FC:  MOVLB  5
33FE:  CLRF   x02
3400:  MOVLB  0
3402:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
3406:  MOVLW  04
3408:  MOVWF  FEA
340A:  MOVLW  E1
340C:  MOVWF  FE9
340E:  MOVFF  FF2,501
3412:  BCF    FF2.7
3414:  MOVLW  00
3416:  CALL   0758
341A:  TBLRD*-
341C:  TBLRD*+
341E:  MOVF   FF5,W
3420:  MOVWF  FEE
3422:  IORLW  00
3424:  BNZ   341C
3426:  MOVLB  5
3428:  BTFSC  x01.7
342A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
342C:  MOVLW  04
342E:  MOVWF  x02
3430:  MOVLW  E1
3432:  MOVWF  x01
3434:  MOVLW  1E
3436:  MOVWF  x03
3438:  CLRF   x04
343A:  CLRF   x05
343C:  MOVLW  02
343E:  MOVWF  x06
3440:  MOVLB  0
3442:  CALL   1630
....................             strcpy(Menus.Letra,"Correcta"); 
3446:  MOVLW  04
3448:  MOVWF  FEA
344A:  MOVLW  E1
344C:  MOVWF  FE9
344E:  MOVFF  FF2,501
3452:  BCF    FF2.7
3454:  MOVLW  00
3456:  CALL   0778
345A:  TBLRD*-
345C:  TBLRD*+
345E:  MOVF   FF5,W
3460:  MOVWF  FEE
3462:  IORLW  00
3464:  BNZ   345C
3466:  MOVLB  5
3468:  BTFSC  x01.7
346A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
346C:  MOVLW  04
346E:  MOVWF  x02
3470:  MOVLW  E1
3472:  MOVWF  x01
3474:  MOVLW  0F
3476:  MOVWF  x03
3478:  MOVLW  1E
347A:  MOVWF  x04
347C:  CLRF   x05
347E:  MOVLW  02
3480:  MOVWF  x06
3482:  MOVLB  0
3484:  CALL   1630
....................             Menu=1;glcd_update();delay_ms(1000); 
3488:  MOVLW  01
348A:  MOVLB  4
348C:  MOVWF  xA2
348E:  MOVLB  0
3490:  CALL   105C
3494:  MOVLW  04
3496:  MOVLB  5
3498:  MOVWF  x01
349A:  MOVLW  FA
349C:  MOVWF  x02
349E:  MOVLB  0
34A0:  CALL   0F98
34A4:  MOVLB  5
34A6:  DECFSZ x01,F
34A8:  BRA    349A
....................             glcd_fillScreen(OFF);unidad=1; 
34AA:  CLRF   x02
34AC:  MOVLB  0
34AE:  CALL   1002
34B2:  MOVLW  01
34B4:  MOVLB  4
34B6:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
34B8:  BRA    35D6
....................          { 
....................             glcd_fillScreen(OFF); 
34BA:  MOVLB  5
34BC:  CLRF   x02
34BE:  MOVLB  0
34C0:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
34C4:  MOVLW  04
34C6:  MOVWF  FEA
34C8:  MOVLW  E1
34CA:  MOVWF  FE9
34CC:  MOVFF  FF2,501
34D0:  BCF    FF2.7
34D2:  MOVLW  00
34D4:  CALL   0758
34D8:  TBLRD*-
34DA:  TBLRD*+
34DC:  MOVF   FF5,W
34DE:  MOVWF  FEE
34E0:  IORLW  00
34E2:  BNZ   34DA
34E4:  MOVLB  5
34E6:  BTFSC  x01.7
34E8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
34EA:  MOVLW  04
34EC:  MOVWF  x02
34EE:  MOVLW  E1
34F0:  MOVWF  x01
34F2:  MOVLW  1E
34F4:  MOVWF  x03
34F6:  CLRF   x04
34F8:  CLRF   x05
34FA:  MOVLW  02
34FC:  MOVWF  x06
34FE:  MOVLB  0
3500:  CALL   1630
....................             strcpy(Menus.Letra,"Incorrecta"); 
3504:  MOVLW  04
3506:  MOVWF  FEA
3508:  MOVLW  E1
350A:  MOVWF  FE9
350C:  MOVFF  FF2,501
3510:  BCF    FF2.7
3512:  MOVLW  00
3514:  CALL   079C
3518:  TBLRD*-
351A:  TBLRD*+
351C:  MOVF   FF5,W
351E:  MOVWF  FEE
3520:  IORLW  00
3522:  BNZ   351A
3524:  MOVLB  5
3526:  BTFSC  x01.7
3528:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
352A:  MOVLW  04
352C:  MOVWF  x02
352E:  MOVLW  E1
3530:  MOVWF  x01
3532:  CLRF   x03
3534:  MOVLW  1E
3536:  MOVWF  x04
3538:  CLRF   x05
353A:  MOVLW  02
353C:  MOVWF  x06
353E:  MOVLB  0
3540:  CALL   1630
....................             Menu=0;glcd_update();delay_ms(1000); 
3544:  MOVLB  4
3546:  CLRF   xA2
3548:  MOVLB  0
354A:  CALL   105C
354E:  MOVLW  04
3550:  MOVLB  5
3552:  MOVWF  x01
3554:  MOVLW  FA
3556:  MOVWF  x02
3558:  MOVLB  0
355A:  CALL   0F98
355E:  MOVLB  5
3560:  DECFSZ x01,F
3562:  BRA    3554
....................             glcd_fillScreen(OFF);unidad=1; 
3564:  CLRF   x02
3566:  MOVLB  0
3568:  CALL   1002
356C:  MOVLW  01
356E:  MOVLB  4
3570:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3572:  CLRF   xCE
3574:  CLRF   xCF
3576:  CLRF   xD0
3578:  CLRF   xD1
....................             displayContrasena(Contrasena[0],20,30,1); 
357A:  MOVFF  4CE,503
357E:  MOVLW  14
3580:  MOVLB  5
3582:  MOVWF  x04
3584:  MOVLW  1E
3586:  MOVWF  x05
3588:  MOVLW  01
358A:  MOVWF  x06
358C:  MOVLB  0
358E:  CALL   185E
....................             displayContrasena(Contrasena[1],40,30,0); 
3592:  MOVFF  4CF,503
3596:  MOVLW  28
3598:  MOVLB  5
359A:  MOVWF  x04
359C:  MOVLW  1E
359E:  MOVWF  x05
35A0:  CLRF   x06
35A2:  MOVLB  0
35A4:  CALL   185E
....................             displayContrasena(Contrasena[2],60,30,0); 
35A8:  MOVFF  4D0,503
35AC:  MOVLW  3C
35AE:  MOVLB  5
35B0:  MOVWF  x04
35B2:  MOVLW  1E
35B4:  MOVWF  x05
35B6:  CLRF   x06
35B8:  MOVLB  0
35BA:  CALL   185E
....................             displayContrasena(Contrasena[3],80,30,0); 
35BE:  MOVFF  4D1,503
35C2:  MOVLW  50
35C4:  MOVLB  5
35C6:  MOVWF  x04
35C8:  MOVLW  1E
35CA:  MOVWF  x05
35CC:  CLRF   x06
35CE:  MOVLB  0
35D0:  CALL   185E
35D4:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
35D6:  DECFSZ xA2,W
35D8:  BRA    3A0E
....................        
....................       if(visual==1) 
35DA:  BTFSS  x95.4
35DC:  BRA    3994
....................       { 
....................          if(Opcion>6) 
35DE:  MOVF   xA7,W
35E0:  SUBLW  06
35E2:  BC    35E8
....................          {Opcion=1;} 
35E4:  MOVLW  01
35E6:  MOVWF  xA7
....................          if(Opcion<1) 
35E8:  MOVF   xA7,F
35EA:  BNZ   35F0
....................          {Opcion=6;} 
35EC:  MOVLW  06
35EE:  MOVWF  xA7
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
35F0:  MOVLW  04
35F2:  MOVWF  FEA
35F4:  MOVLW  E1
35F6:  MOVWF  FE9
35F8:  MOVFF  FF2,501
35FC:  BCF    FF2.7
35FE:  MOVLW  00
3600:  MOVLB  0
3602:  CALL   07C2
3606:  TBLRD*-
3608:  TBLRD*+
360A:  MOVF   FF5,W
360C:  MOVWF  FEE
360E:  IORLW  00
3610:  BNZ   3608
3612:  MOVLB  5
3614:  BTFSC  x01.7
3616:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
3618:  MOVLW  04
361A:  MOVWF  x02
361C:  MOVLW  E1
361E:  MOVWF  x01
3620:  MOVLW  1E
3622:  MOVWF  x03
3624:  CLRF   x04
3626:  MOVLW  01
3628:  MOVWF  x05
362A:  MOVWF  x06
362C:  MOVLB  0
362E:  CALL   1630
....................        
....................          if(Opcion==1)    
3632:  MOVLB  4
3634:  DECFSZ xA7,W
3636:  BRA    367E
....................             {strcpy(Menus.Letra,"Caucho"); 
3638:  MOVLW  04
363A:  MOVWF  FEA
363C:  MOVLW  E1
363E:  MOVWF  FE9
3640:  MOVFF  FF2,501
3644:  BCF    FF2.7
3646:  MOVLW  00
3648:  MOVLB  0
364A:  CALL   07EC
364E:  TBLRD*-
3650:  TBLRD*+
3652:  MOVF   FF5,W
3654:  MOVWF  FEE
3656:  IORLW  00
3658:  BNZ   3650
365A:  MOVLB  5
365C:  BTFSC  x01.7
365E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
3660:  MOVLW  04
3662:  MOVWF  x02
3664:  MOVLW  E1
3666:  MOVWF  x01
3668:  CLRF   x03
366A:  MOVLW  0A
366C:  MOVWF  x04
366E:  MOVLW  01
3670:  MOVWF  x05
3672:  MOVWF  x06
3674:  MOVLB  0
3676:  CALL   1630
....................          else 
367A:  BRA    36C0
367C:  MOVLB  4
....................             {strcpy(Menus.Letra,"Caucho"); 
367E:  MOVLW  04
3680:  MOVWF  FEA
3682:  MOVLW  E1
3684:  MOVWF  FE9
3686:  MOVFF  FF2,501
368A:  BCF    FF2.7
368C:  MOVLW  00
368E:  MOVLB  0
3690:  CALL   07EC
3694:  TBLRD*-
3696:  TBLRD*+
3698:  MOVF   FF5,W
369A:  MOVWF  FEE
369C:  IORLW  00
369E:  BNZ   3696
36A0:  MOVLB  5
36A2:  BTFSC  x01.7
36A4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
36A6:  MOVLW  04
36A8:  MOVWF  x02
36AA:  MOVLW  E1
36AC:  MOVWF  x01
36AE:  CLRF   x03
36B0:  MOVLW  0A
36B2:  MOVWF  x04
36B4:  CLRF   x05
36B6:  MOVLW  01
36B8:  MOVWF  x06
36BA:  MOVLB  0
36BC:  CALL   1630
....................           
....................          if(Opcion==2)    
36C0:  MOVLB  4
36C2:  MOVF   xA7,W
36C4:  SUBLW  02
36C6:  BNZ   370E
....................             {strcpy(Menus.Letra,"Liquidos"); 
36C8:  MOVLW  04
36CA:  MOVWF  FEA
36CC:  MOVLW  E1
36CE:  MOVWF  FE9
36D0:  MOVFF  FF2,501
36D4:  BCF    FF2.7
36D6:  MOVLW  00
36D8:  MOVLB  0
36DA:  CALL   080E
36DE:  TBLRD*-
36E0:  TBLRD*+
36E2:  MOVF   FF5,W
36E4:  MOVWF  FEE
36E6:  IORLW  00
36E8:  BNZ   36E0
36EA:  MOVLB  5
36EC:  BTFSC  x01.7
36EE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
36F0:  MOVLW  04
36F2:  MOVWF  x02
36F4:  MOVLW  E1
36F6:  MOVWF  x01
36F8:  CLRF   x03
36FA:  MOVLW  13
36FC:  MOVWF  x04
36FE:  MOVLW  01
3700:  MOVWF  x05
3702:  MOVWF  x06
3704:  MOVLB  0
3706:  CALL   1630
....................          else 
370A:  BRA    3750
370C:  MOVLB  4
....................             {strcpy(Menus.Letra,"Liquidos"); 
370E:  MOVLW  04
3710:  MOVWF  FEA
3712:  MOVLW  E1
3714:  MOVWF  FE9
3716:  MOVFF  FF2,501
371A:  BCF    FF2.7
371C:  MOVLW  00
371E:  MOVLB  0
3720:  CALL   080E
3724:  TBLRD*-
3726:  TBLRD*+
3728:  MOVF   FF5,W
372A:  MOVWF  FEE
372C:  IORLW  00
372E:  BNZ   3726
3730:  MOVLB  5
3732:  BTFSC  x01.7
3734:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
3736:  MOVLW  04
3738:  MOVWF  x02
373A:  MOVLW  E1
373C:  MOVWF  x01
373E:  CLRF   x03
3740:  MOVLW  13
3742:  MOVWF  x04
3744:  CLRF   x05
3746:  MOVLW  01
3748:  MOVWF  x06
374A:  MOVLB  0
374C:  CALL   1630
....................              
....................           if(Opcion==3)    
3750:  MOVLB  4
3752:  MOVF   xA7,W
3754:  SUBLW  03
3756:  BNZ   379E
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
3758:  MOVLW  04
375A:  MOVWF  FEA
375C:  MOVLW  E1
375E:  MOVWF  FE9
3760:  MOVFF  FF2,501
3764:  BCF    FF2.7
3766:  MOVLW  00
3768:  MOVLB  0
376A:  CALL   0832
376E:  TBLRD*-
3770:  TBLRD*+
3772:  MOVF   FF5,W
3774:  MOVWF  FEE
3776:  IORLW  00
3778:  BNZ   3770
377A:  MOVLB  5
377C:  BTFSC  x01.7
377E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
3780:  MOVLW  04
3782:  MOVWF  x02
3784:  MOVLW  E1
3786:  MOVWF  x01
3788:  CLRF   x03
378A:  MOVLW  1C
378C:  MOVWF  x04
378E:  MOVLW  01
3790:  MOVWF  x05
3792:  MOVWF  x06
3794:  MOVLB  0
3796:  CALL   1630
....................          else 
379A:  BRA    37E0
379C:  MOVLB  4
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
379E:  MOVLW  04
37A0:  MOVWF  FEA
37A2:  MOVLW  E1
37A4:  MOVWF  FE9
37A6:  MOVFF  FF2,501
37AA:  BCF    FF2.7
37AC:  MOVLW  00
37AE:  MOVLB  0
37B0:  CALL   0832
37B4:  TBLRD*-
37B6:  TBLRD*+
37B8:  MOVF   FF5,W
37BA:  MOVWF  FEE
37BC:  IORLW  00
37BE:  BNZ   37B6
37C0:  MOVLB  5
37C2:  BTFSC  x01.7
37C4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
37C6:  MOVLW  04
37C8:  MOVWF  x02
37CA:  MOVLW  E1
37CC:  MOVWF  x01
37CE:  CLRF   x03
37D0:  MOVLW  1C
37D2:  MOVWF  x04
37D4:  CLRF   x05
37D6:  MOVLW  01
37D8:  MOVWF  x06
37DA:  MOVLB  0
37DC:  CALL   1630
....................              
....................          if(Opcion==4)    
37E0:  MOVLB  4
37E2:  MOVF   xA7,W
37E4:  SUBLW  04
37E6:  BNZ   382E
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
37E8:  MOVLW  04
37EA:  MOVWF  FEA
37EC:  MOVLW  E1
37EE:  MOVWF  FE9
37F0:  MOVFF  FF2,501
37F4:  BCF    FF2.7
37F6:  MOVLW  00
37F8:  MOVLB  0
37FA:  CALL   0860
37FE:  TBLRD*-
3800:  TBLRD*+
3802:  MOVF   FF5,W
3804:  MOVWF  FEE
3806:  IORLW  00
3808:  BNZ   3800
380A:  MOVLB  5
380C:  BTFSC  x01.7
380E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
3810:  MOVLW  04
3812:  MOVWF  x02
3814:  MOVLW  E1
3816:  MOVWF  x01
3818:  CLRF   x03
381A:  MOVLW  25
381C:  MOVWF  x04
381E:  MOVLW  01
3820:  MOVWF  x05
3822:  MOVWF  x06
3824:  MOVLB  0
3826:  CALL   1630
....................          else 
382A:  BRA    3870
382C:  MOVLB  4
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
382E:  MOVLW  04
3830:  MOVWF  FEA
3832:  MOVLW  E1
3834:  MOVWF  FE9
3836:  MOVFF  FF2,501
383A:  BCF    FF2.7
383C:  MOVLW  00
383E:  MOVLB  0
3840:  CALL   0860
3844:  TBLRD*-
3846:  TBLRD*+
3848:  MOVF   FF5,W
384A:  MOVWF  FEE
384C:  IORLW  00
384E:  BNZ   3846
3850:  MOVLB  5
3852:  BTFSC  x01.7
3854:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
3856:  MOVLW  04
3858:  MOVWF  x02
385A:  MOVLW  E1
385C:  MOVWF  x01
385E:  CLRF   x03
3860:  MOVLW  25
3862:  MOVWF  x04
3864:  CLRF   x05
3866:  MOVLW  01
3868:  MOVWF  x06
386A:  MOVLB  0
386C:  CALL   1630
....................              
....................          if(Opcion==5)    
3870:  MOVLB  4
3872:  MOVF   xA7,W
3874:  SUBLW  05
3876:  BNZ   38BE
....................             {strcpy(Menus.Letra,"Personalizado"); 
3878:  MOVLW  04
387A:  MOVWF  FEA
387C:  MOVLW  E1
387E:  MOVWF  FE9
3880:  MOVFF  FF2,501
3884:  BCF    FF2.7
3886:  MOVLW  00
3888:  MOVLB  0
388A:  CALL   0890
388E:  TBLRD*-
3890:  TBLRD*+
3892:  MOVF   FF5,W
3894:  MOVWF  FEE
3896:  IORLW  00
3898:  BNZ   3890
389A:  MOVLB  5
389C:  BTFSC  x01.7
389E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
38A0:  MOVLW  04
38A2:  MOVWF  x02
38A4:  MOVLW  E1
38A6:  MOVWF  x01
38A8:  CLRF   x03
38AA:  MOVLW  2E
38AC:  MOVWF  x04
38AE:  MOVLW  01
38B0:  MOVWF  x05
38B2:  MOVWF  x06
38B4:  MOVLB  0
38B6:  CALL   1630
....................          else 
38BA:  BRA    3900
38BC:  MOVLB  4
....................             {strcpy(Menus.Letra,"Personalizado"); 
38BE:  MOVLW  04
38C0:  MOVWF  FEA
38C2:  MOVLW  E1
38C4:  MOVWF  FE9
38C6:  MOVFF  FF2,501
38CA:  BCF    FF2.7
38CC:  MOVLW  00
38CE:  MOVLB  0
38D0:  CALL   0890
38D4:  TBLRD*-
38D6:  TBLRD*+
38D8:  MOVF   FF5,W
38DA:  MOVWF  FEE
38DC:  IORLW  00
38DE:  BNZ   38D6
38E0:  MOVLB  5
38E2:  BTFSC  x01.7
38E4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
38E6:  MOVLW  04
38E8:  MOVWF  x02
38EA:  MOVLW  E1
38EC:  MOVWF  x01
38EE:  CLRF   x03
38F0:  MOVLW  2E
38F2:  MOVWF  x04
38F4:  CLRF   x05
38F6:  MOVLW  01
38F8:  MOVWF  x06
38FA:  MOVLB  0
38FC:  CALL   1630
....................              
....................          if(Opcion==6)    
3900:  MOVLB  4
3902:  MOVF   xA7,W
3904:  SUBLW  06
3906:  BNZ   394E
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3908:  MOVLW  04
390A:  MOVWF  FEA
390C:  MOVLW  E1
390E:  MOVWF  FE9
3910:  MOVFF  FF2,501
3914:  BCF    FF2.7
3916:  MOVLW  00
3918:  MOVLB  0
391A:  CALL   08B8
391E:  TBLRD*-
3920:  TBLRD*+
3922:  MOVF   FF5,W
3924:  MOVWF  FEE
3926:  IORLW  00
3928:  BNZ   3920
392A:  MOVLB  5
392C:  BTFSC  x01.7
392E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
3930:  MOVLW  04
3932:  MOVWF  x02
3934:  MOVLW  E1
3936:  MOVWF  x01
3938:  CLRF   x03
393A:  MOVLW  37
393C:  MOVWF  x04
393E:  MOVLW  01
3940:  MOVWF  x05
3942:  MOVWF  x06
3944:  MOVLB  0
3946:  CALL   1630
....................          else 
394A:  BRA    3990
394C:  MOVLB  4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
394E:  MOVLW  04
3950:  MOVWF  FEA
3952:  MOVLW  E1
3954:  MOVWF  FE9
3956:  MOVFF  FF2,501
395A:  BCF    FF2.7
395C:  MOVLW  00
395E:  MOVLB  0
3960:  CALL   08B8
3964:  TBLRD*-
3966:  TBLRD*+
3968:  MOVF   FF5,W
396A:  MOVWF  FEE
396C:  IORLW  00
396E:  BNZ   3966
3970:  MOVLB  5
3972:  BTFSC  x01.7
3974:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
3976:  MOVLW  04
3978:  MOVWF  x02
397A:  MOVLW  E1
397C:  MOVWF  x01
397E:  CLRF   x03
3980:  MOVLW  37
3982:  MOVWF  x04
3984:  CLRF   x05
3986:  MOVLW  01
3988:  MOVWF  x06
398A:  MOVLB  0
398C:  CALL   1630
....................             visual=0; 
3990:  MOVLB  4
3992:  BCF    x95.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
3994:  BSF    F92.0
3996:  BTFSS  F80.0
3998:  BRA    39B4
....................          {  if(Flanco == 0)  
399A:  BTFSC  x95.0
399C:  BRA    39B2
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
399E:  BSF    x95.0
39A0:  MOVLW  1E
39A2:  MOVLB  5
39A4:  MOVWF  x02
39A6:  MOVLB  0
39A8:  CALL   0F98
39AC:  MOVLB  4
39AE:  DECF   xA7,F
39B0:  BSF    x95.4
....................                } 
....................          } 
....................             else 
39B2:  BRA    39B6
....................                {Flanco = 0;} 
39B4:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
39B6:  BSF    F92.1
39B8:  BTFSS  F80.1
39BA:  BRA    39D6
....................          {  if(Flanco2 == 0)  
39BC:  BTFSC  x95.2
39BE:  BRA    39D4
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
39C0:  BSF    x95.2
39C2:  MOVLW  1E
39C4:  MOVLB  5
39C6:  MOVWF  x02
39C8:  MOVLB  0
39CA:  CALL   0F98
39CE:  MOVLB  4
39D0:  INCF   xA7,F
39D2:  BSF    x95.4
....................                }      
....................          } 
....................             else 
39D4:  BRA    39D8
....................                {Flanco2 = 0;}   
39D6:  BCF    x95.2
....................                 
....................        if(RIGHT)//Si oprime SET 
39D8:  BSF    F92.2
39DA:  BTFSS  F80.2
39DC:  BRA    3A0C
....................          {  if(Flanco1 == 0)  
39DE:  BTFSC  x95.1
39E0:  BRA    3A0A
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
39E2:  BSF    x95.1
39E4:  MOVLW  1E
39E6:  MOVLB  5
39E8:  MOVWF  x02
39EA:  MOVLB  0
39EC:  CALL   0F98
39F0:  MOVLW  03
39F2:  MOVLB  4
39F4:  ADDWF  xA7,W
39F6:  MOVWF  xA2
39F8:  MOVLW  01
39FA:  MOVWF  xA7
39FC:  MOVLB  5
39FE:  CLRF   x02
3A00:  MOVLB  0
3A02:  CALL   1002
3A06:  MOVLB  4
3A08:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3A0A:  BRA    3A0E
....................                {Flanco1 = 0;}   
3A0C:  BCF    x95.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
3A0E:  MOVF   xA2,W
3A10:  SUBLW  04
3A12:  BTFSS  FD8.2
3A14:  BRA    3D42
....................        
....................       if(visual==1) 
3A16:  BTFSS  x95.4
3A18:  BRA    3B6E
....................       { 
....................          glcd_imagen(2); //Guante 
3A1A:  MOVLW  02
3A1C:  MOVLB  5
3A1E:  MOVWF  x01
3A20:  MOVLB  0
3A22:  CALL   2078
....................          strcpy(Menus.Letra,"Caucho"); 
3A26:  MOVLW  04
3A28:  MOVWF  FEA
3A2A:  MOVLW  E1
3A2C:  MOVWF  FE9
3A2E:  MOVFF  FF2,501
3A32:  BCF    FF2.7
3A34:  MOVLW  00
3A36:  CALL   07EC
3A3A:  TBLRD*-
3A3C:  TBLRD*+
3A3E:  MOVF   FF5,W
3A40:  MOVWF  FEE
3A42:  IORLW  00
3A44:  BNZ   3A3C
3A46:  MOVLB  5
3A48:  BTFSC  x01.7
3A4A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3A4C:  MOVLW  04
3A4E:  MOVWF  x02
3A50:  MOVLW  E1
3A52:  MOVWF  x01
3A54:  MOVLW  14
3A56:  MOVWF  x03
3A58:  CLRF   x04
3A5A:  MOVLW  01
3A5C:  MOVWF  x05
3A5E:  MOVLW  02
3A60:  MOVWF  x06
3A62:  MOVLB  0
3A64:  CALL   1630
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3A68:  MOVLW  04
3A6A:  MOVWF  FEA
3A6C:  MOVLW  E1
3A6E:  MOVWF  FE9
3A70:  MOVFF  FF2,501
3A74:  BCF    FF2.7
3A76:  MOVLW  00
3A78:  CALL   07EC
3A7C:  TBLRD*-
3A7E:  TBLRD*+
3A80:  MOVF   FF5,W
3A82:  MOVWF  FEE
3A84:  IORLW  00
3A86:  BNZ   3A7E
3A88:  MOVLB  5
3A8A:  BTFSC  x01.7
3A8C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3A8E:  MOVLW  04
3A90:  MOVWF  x02
3A92:  MOVLW  E1
3A94:  MOVWF  x01
3A96:  MOVLW  07
3A98:  MOVWF  x03
3A9A:  MOVLW  37
3A9C:  MOVWF  x04
3A9E:  CLRF   x05
3AA0:  MOVLW  01
3AA2:  MOVWF  x06
3AA4:  MOVLB  0
3AA6:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3AAA:  MOVLW  04
3AAC:  MOVWF  FEA
3AAE:  MOVLW  E1
3AB0:  MOVWF  FE9
3AB2:  MOVFF  FF2,501
3AB6:  BCF    FF2.7
3AB8:  MOVLW  00
3ABA:  CALL   08E0
3ABE:  TBLRD*-
3AC0:  TBLRD*+
3AC2:  MOVF   FF5,W
3AC4:  MOVWF  FEE
3AC6:  IORLW  00
3AC8:  BNZ   3AC0
3ACA:  MOVLB  5
3ACC:  BTFSC  x01.7
3ACE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3AD0:  MOVLW  04
3AD2:  MOVWF  x02
3AD4:  MOVLW  E1
3AD6:  MOVWF  x01
3AD8:  CLRF   x03
3ADA:  MOVLW  1A
3ADC:  MOVWF  x04
3ADE:  CLRF   x05
3AE0:  MOVLW  01
3AE2:  MOVWF  x06
3AE4:  MOVLB  0
3AE6:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
3AEA:  MOVLW  04
3AEC:  MOVWF  FEA
3AEE:  MOVLW  E1
3AF0:  MOVWF  FE9
3AF2:  MOVFF  FF2,501
3AF6:  BCF    FF2.7
3AF8:  MOVLW  00
3AFA:  CALL   090C
3AFE:  TBLRD*-
3B00:  TBLRD*+
3B02:  MOVF   FF5,W
3B04:  MOVWF  FEE
3B06:  IORLW  00
3B08:  BNZ   3B00
3B0A:  MOVLB  5
3B0C:  BTFSC  x01.7
3B0E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3B10:  MOVLW  04
3B12:  MOVWF  x02
3B14:  MOVLW  E1
3B16:  MOVWF  x01
3B18:  CLRF   x03
3B1A:  MOVLW  24
3B1C:  MOVWF  x04
3B1E:  CLRF   x05
3B20:  MOVLW  01
3B22:  MOVWF  x06
3B24:  MOVLB  0
3B26:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3B2A:  MOVLW  04
3B2C:  MOVWF  FEA
3B2E:  MOVLW  E1
3B30:  MOVWF  FE9
3B32:  MOVFF  FF2,501
3B36:  BCF    FF2.7
3B38:  MOVLW  00
3B3A:  CALL   093C
3B3E:  TBLRD*-
3B40:  TBLRD*+
3B42:  MOVF   FF5,W
3B44:  MOVWF  FEE
3B46:  IORLW  00
3B48:  BNZ   3B40
3B4A:  MOVLB  5
3B4C:  BTFSC  x01.7
3B4E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3B50:  MOVLW  04
3B52:  MOVWF  x02
3B54:  MOVLW  E1
3B56:  MOVWF  x01
3B58:  CLRF   x03
3B5A:  MOVLW  2E
3B5C:  MOVWF  x04
3B5E:  CLRF   x05
3B60:  MOVLW  01
3B62:  MOVWF  x06
3B64:  MOVLB  0
3B66:  CALL   1630
....................          visual=0; 
3B6A:  MOVLB  4
3B6C:  BCF    x95.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3B6E:  BSF    F92.3
3B70:  BTFSS  F80.3
3B72:  BRA    3B94
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3B74:  MOVLW  1E
3B76:  MOVLB  5
3B78:  MOVWF  x02
3B7A:  MOVLB  0
3B7C:  CALL   0F98
3B80:  MOVLW  01
3B82:  MOVLB  4
3B84:  MOVWF  xA2
3B86:  MOVLB  5
3B88:  CLRF   x02
3B8A:  MOVLB  0
3B8C:  CALL   1002
3B90:  MOVLB  4
3B92:  BSF    x95.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3B94:  BSF    F92.2
3B96:  BTFSS  F80.2
3B98:  BRA    3D42
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
3B9A:  CLRF   xC2
3B9C:  CLRF   xC3
3B9E:  MOVLW  05
3BA0:  MOVWF  xC4
3BA2:  MOVLW  02
3BA4:  MOVWF  xC5
3BA6:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3BA8:  CLRF   xCA
3BAA:  CLRF   xCB
3BAC:  MOVLW  05
3BAE:  MOVWF  xCC
3BB0:  MOVLW  01
3BB2:  MOVWF  xCD
3BB4:  CLRF   xB3
3BB6:  CLRF   xB2
3BB8:  MOVLW  79
3BBA:  MOVWF  xA5
3BBC:  MOVLW  14
3BBE:  MOVWF  xA2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3BC0:  MOVWF  xA2
3BC2:  MOVLW  0F
3BC4:  MOVLB  5
3BC6:  MOVWF  x13
3BC8:  MOVLW  12
3BCA:  MOVWF  x14
3BCC:  MOVLW  1E
3BCE:  MOVWF  x15
3BD0:  MOVLW  35
3BD2:  MOVWF  x16
3BD4:  CLRF   x17
3BD6:  MOVLW  01
3BD8:  MOVWF  x18
3BDA:  MOVLB  0
3BDC:  CALL   156E
3BE0:  MOVLB  4
3BE2:  CLRF   xA9
3BE4:  MOVLW  C0
3BE6:  IORWF  FF2,F
3BE8:  MOVLB  5
3BEA:  CLRF   x02
3BEC:  MOVLB  0
3BEE:  CALL   1002
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3BF2:  MOVLW  04
3BF4:  MOVWF  FEA
3BF6:  MOVLW  E1
3BF8:  MOVWF  FE9
3BFA:  MOVFF  FF2,501
3BFE:  BCF    FF2.7
3C00:  MOVLW  00
3C02:  CALL   0966
3C06:  TBLRD*-
3C08:  TBLRD*+
3C0A:  MOVF   FF5,W
3C0C:  MOVWF  FEE
3C0E:  IORLW  00
3C10:  BNZ   3C08
3C12:  MOVLB  5
3C14:  BTFSC  x01.7
3C16:  BSF    FF2.7
3C18:  MOVLW  04
3C1A:  MOVWF  x02
3C1C:  MOVLW  E1
3C1E:  MOVWF  x01
3C20:  CLRF   x03
3C22:  MOVLW  37
3C24:  MOVWF  x04
3C26:  MOVLW  02
3C28:  MOVWF  x05
3C2A:  MOVLW  01
3C2C:  MOVWF  x06
3C2E:  MOVLB  0
3C30:  CALL   1630
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3C34:  MOVLW  0F
3C36:  MOVLB  5
3C38:  MOVWF  x13
3C3A:  MOVLW  12
3C3C:  MOVWF  x14
3C3E:  MOVLW  1E
3C40:  MOVWF  x15
3C42:  MOVLW  35
3C44:  MOVWF  x16
3C46:  CLRF   x17
3C48:  MOVLW  01
3C4A:  MOVWF  x18
3C4C:  MOVLB  0
3C4E:  CALL   156E
....................          glcd_imagen(5); 
3C52:  MOVLW  05
3C54:  MOVLB  5
3C56:  MOVWF  x01
3C58:  MOVLB  0
3C5A:  CALL   2078
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3C5E:  MOVLW  04
3C60:  MOVWF  FEA
3C62:  MOVLW  E1
3C64:  MOVWF  FE9
3C66:  MOVFF  FF2,501
3C6A:  BCF    FF2.7
3C6C:  MOVLW  00
3C6E:  CALL   098C
3C72:  TBLRD*-
3C74:  TBLRD*+
3C76:  MOVF   FF5,W
3C78:  MOVWF  FEE
3C7A:  IORLW  00
3C7C:  BNZ   3C74
3C7E:  MOVLB  5
3C80:  BTFSC  x01.7
3C82:  BSF    FF2.7
3C84:  MOVLW  04
3C86:  MOVWF  x02
3C88:  MOVLW  E1
3C8A:  MOVWF  x01
3C8C:  CLRF   x03
3C8E:  CLRF   x04
3C90:  MOVLW  02
3C92:  MOVWF  x05
3C94:  MOVLW  01
3C96:  MOVWF  x06
3C98:  MOVLB  0
3C9A:  CALL   1630
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3C9E:  MOVLW  04
3CA0:  MOVWF  FEA
3CA2:  MOVLW  E1
3CA4:  MOVWF  FE9
3CA6:  MOVFF  FF2,501
3CAA:  BCF    FF2.7
3CAC:  MOVLW  00
3CAE:  CALL   09AE
3CB2:  TBLRD*-
3CB4:  TBLRD*+
3CB6:  MOVF   FF5,W
3CB8:  MOVWF  FEE
3CBA:  IORLW  00
3CBC:  BNZ   3CB4
3CBE:  MOVLB  5
3CC0:  BTFSC  x01.7
3CC2:  BSF    FF2.7
3CC4:  MOVLW  04
3CC6:  MOVWF  x02
3CC8:  MOVLW  E1
3CCA:  MOVWF  x01
3CCC:  CLRF   x03
3CCE:  MOVLW  08
3CD0:  MOVWF  x04
3CD2:  MOVLW  02
3CD4:  MOVWF  x05
3CD6:  MOVLW  01
3CD8:  MOVWF  x06
3CDA:  MOVLB  0
3CDC:  CALL   1630
....................          glcd_circle(95,40,2,NO,ON); 
3CE0:  MOVLW  5F
3CE2:  MOVLB  5
3CE4:  MOVWF  x01
3CE6:  MOVLW  28
3CE8:  MOVWF  x02
3CEA:  MOVLW  02
3CEC:  MOVWF  x03
3CEE:  CLRF   x04
3CF0:  MOVLW  01
3CF2:  MOVWF  x05
3CF4:  MOVLB  0
3CF6:  CALL   2174
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3CFA:  MOVLW  04
3CFC:  MOVWF  FEA
3CFE:  MOVLW  E1
3D00:  MOVWF  FE9
3D02:  MOVFF  FF2,501
3D06:  BCF    FF2.7
3D08:  MOVLW  00
3D0A:  CALL   09D0
3D0E:  TBLRD*-
3D10:  TBLRD*+
3D12:  MOVF   FF5,W
3D14:  MOVWF  FEE
3D16:  IORLW  00
3D18:  BNZ   3D10
3D1A:  MOVLB  5
3D1C:  BTFSC  x01.7
3D1E:  BSF    FF2.7
3D20:  MOVLW  04
3D22:  MOVWF  x02
3D24:  MOVLW  E1
3D26:  MOVWF  x01
3D28:  MOVLW  66
3D2A:  MOVWF  x03
3D2C:  MOVLW  28
3D2E:  MOVWF  x04
3D30:  MOVLW  02
3D32:  MOVWF  x05
3D34:  MOVWF  x06
3D36:  MOVLB  0
3D38:  CALL   1630
....................          MuestraTiemposProgramados(); 
3D3C:  CALL   257C
3D40:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
3D42:  MOVF   xA2,W
3D44:  SUBLW  05
3D46:  BTFSS  FD8.2
3D48:  BRA    3F0E
....................        
....................       if(visual==1) 
3D4A:  BTFSS  x95.4
3D4C:  BRA    3EA4
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
3D4E:  MOVLW  04
3D50:  MOVLB  5
3D52:  MOVWF  x01
3D54:  MOVLB  0
3D56:  CALL   2078
....................          strcpy(Menus.Letra,"Liquidos"); 
3D5A:  MOVLW  04
3D5C:  MOVWF  FEA
3D5E:  MOVLW  E1
3D60:  MOVWF  FE9
3D62:  MOVFF  FF2,501
3D66:  BCF    FF2.7
3D68:  MOVLW  00
3D6A:  CALL   080E
3D6E:  TBLRD*-
3D70:  TBLRD*+
3D72:  MOVF   FF5,W
3D74:  MOVWF  FEE
3D76:  IORLW  00
3D78:  BNZ   3D70
3D7A:  MOVLB  5
3D7C:  BTFSC  x01.7
3D7E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3D80:  MOVLW  04
3D82:  MOVWF  x02
3D84:  MOVLW  E1
3D86:  MOVWF  x01
3D88:  MOVLW  14
3D8A:  MOVWF  x03
3D8C:  CLRF   x04
3D8E:  MOVLW  01
3D90:  MOVWF  x05
3D92:  MOVLW  02
3D94:  MOVWF  x06
3D96:  MOVLB  0
3D98:  CALL   1630
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
3D9C:  MOVLW  04
3D9E:  MOVWF  FEA
3DA0:  MOVLW  E1
3DA2:  MOVWF  FE9
3DA4:  MOVFF  FF2,501
3DA8:  BCF    FF2.7
3DAA:  MOVLW  00
3DAC:  CALL   080E
3DB0:  TBLRD*-
3DB2:  TBLRD*+
3DB4:  MOVF   FF5,W
3DB6:  MOVWF  FEE
3DB8:  IORLW  00
3DBA:  BNZ   3DB2
3DBC:  MOVLB  5
3DBE:  BTFSC  x01.7
3DC0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3DC2:  MOVLW  04
3DC4:  MOVWF  x02
3DC6:  MOVLW  E1
3DC8:  MOVWF  x01
3DCA:  MOVLW  07
3DCC:  MOVWF  x03
3DCE:  MOVLW  37
3DD0:  MOVWF  x04
3DD2:  MOVLW  02
3DD4:  MOVWF  x05
3DD6:  MOVLW  01
3DD8:  MOVWF  x06
3DDA:  MOVLB  0
3DDC:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3DE0:  MOVLW  04
3DE2:  MOVWF  FEA
3DE4:  MOVLW  E1
3DE6:  MOVWF  FE9
3DE8:  MOVFF  FF2,501
3DEC:  BCF    FF2.7
3DEE:  MOVLW  00
3DF0:  CALL   08E0
3DF4:  TBLRD*-
3DF6:  TBLRD*+
3DF8:  MOVF   FF5,W
3DFA:  MOVWF  FEE
3DFC:  IORLW  00
3DFE:  BNZ   3DF6
3E00:  MOVLB  5
3E02:  BTFSC  x01.7
3E04:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3E06:  MOVLW  04
3E08:  MOVWF  x02
3E0A:  MOVLW  E1
3E0C:  MOVWF  x01
3E0E:  CLRF   x03
3E10:  MOVLW  1A
3E12:  MOVWF  x04
3E14:  CLRF   x05
3E16:  MOVLW  01
3E18:  MOVWF  x06
3E1A:  MOVLB  0
3E1C:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
3E20:  MOVLW  04
3E22:  MOVWF  FEA
3E24:  MOVLW  E1
3E26:  MOVWF  FE9
3E28:  MOVFF  FF2,501
3E2C:  BCF    FF2.7
3E2E:  MOVLW  00
3E30:  CALL   09EC
3E34:  TBLRD*-
3E36:  TBLRD*+
3E38:  MOVF   FF5,W
3E3A:  MOVWF  FEE
3E3C:  IORLW  00
3E3E:  BNZ   3E36
3E40:  MOVLB  5
3E42:  BTFSC  x01.7
3E44:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3E46:  MOVLW  04
3E48:  MOVWF  x02
3E4A:  MOVLW  E1
3E4C:  MOVWF  x01
3E4E:  CLRF   x03
3E50:  MOVLW  24
3E52:  MOVWF  x04
3E54:  CLRF   x05
3E56:  MOVLW  01
3E58:  MOVWF  x06
3E5A:  MOVLB  0
3E5C:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3E60:  MOVLW  04
3E62:  MOVWF  FEA
3E64:  MOVLW  E1
3E66:  MOVWF  FE9
3E68:  MOVFF  FF2,501
3E6C:  BCF    FF2.7
3E6E:  MOVLW  00
3E70:  CALL   0A1C
3E74:  TBLRD*-
3E76:  TBLRD*+
3E78:  MOVF   FF5,W
3E7A:  MOVWF  FEE
3E7C:  IORLW  00
3E7E:  BNZ   3E76
3E80:  MOVLB  5
3E82:  BTFSC  x01.7
3E84:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
3E86:  MOVLW  04
3E88:  MOVWF  x02
3E8A:  MOVLW  E1
3E8C:  MOVWF  x01
3E8E:  CLRF   x03
3E90:  MOVLW  2E
3E92:  MOVWF  x04
3E94:  CLRF   x05
3E96:  MOVLW  01
3E98:  MOVWF  x06
3E9A:  MOVLB  0
3E9C:  CALL   1630
....................          visual=0; 
3EA0:  MOVLB  4
3EA2:  BCF    x95.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
3EA4:  BSF    F92.3
3EA6:  BTFSS  F80.3
3EA8:  BRA    3ECA
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3EAA:  MOVLW  1E
3EAC:  MOVLB  5
3EAE:  MOVWF  x02
3EB0:  MOVLB  0
3EB2:  CALL   0F98
3EB6:  MOVLW  01
3EB8:  MOVLB  4
3EBA:  MOVWF  xA2
3EBC:  MOVLB  5
3EBE:  CLRF   x02
3EC0:  MOVLB  0
3EC2:  CALL   1002
3EC6:  MOVLB  4
3EC8:  BSF    x95.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
3ECA:  BSF    F92.2
3ECC:  BTFSS  F80.2
3ECE:  BRA    3F0E
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
3ED0:  CLRF   xC2
3ED2:  CLRF   xC3
3ED4:  CLRF   xC4
3ED6:  MOVLW  02
3ED8:  MOVWF  xC5
3EDA:  BSF    x95.5
3EDC:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
3EDE:  CLRF   xCA
3EE0:  CLRF   xCB
3EE2:  CLRF   xCC
3EE4:  CLRF   xCD
3EE6:  MOVLW  79
3EE8:  MOVWF  xA5
3EEA:  MOVLW  0E
3EEC:  MOVWF  xA2
3EEE:  MOVLW  04
3EF0:  MOVLB  5
3EF2:  MOVWF  x01
3EF4:  MOVLW  AF
3EF6:  MOVWF  x02
3EF8:  MOVLB  0
3EFA:  CALL   0F98
3EFE:  MOVLB  5
3F00:  DECFSZ x01,F
3F02:  BRA    3EF4
3F04:  CLRF   x02
3F06:  MOVLB  0
3F08:  CALL   1002
3F0C:  MOVLB  4
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
3F0E:  MOVF   xA2,W
3F10:  SUBLW  06
3F12:  BTFSS  FD8.2
3F14:  BRA    40DA
....................        
....................       if(visual==1) 
3F16:  BTFSS  x95.4
3F18:  BRA    406E
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
3F1A:  MOVLW  03
3F1C:  MOVLB  5
3F1E:  MOVWF  x01
3F20:  MOVLB  0
3F22:  CALL   2078
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
3F26:  MOVLW  04
3F28:  MOVWF  FEA
3F2A:  MOVLW  E1
3F2C:  MOVWF  FE9
3F2E:  MOVFF  FF2,501
3F32:  BCF    FF2.7
3F34:  MOVLW  00
3F36:  CALL   0A46
3F3A:  TBLRD*-
3F3C:  TBLRD*+
3F3E:  MOVF   FF5,W
3F40:  MOVWF  FEE
3F42:  IORLW  00
3F44:  BNZ   3F3C
3F46:  MOVLB  5
3F48:  BTFSC  x01.7
3F4A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3F4C:  MOVLW  04
3F4E:  MOVWF  x02
3F50:  MOVLW  E1
3F52:  MOVWF  x01
3F54:  CLRF   x03
3F56:  CLRF   x04
3F58:  MOVLW  01
3F5A:  MOVWF  x05
3F5C:  MOVLW  02
3F5E:  MOVWF  x06
3F60:  MOVLB  0
3F62:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
3F66:  MOVLW  04
3F68:  MOVWF  FEA
3F6A:  MOVLW  E1
3F6C:  MOVWF  FE9
3F6E:  MOVFF  FF2,501
3F72:  BCF    FF2.7
3F74:  MOVLW  00
3F76:  CALL   0832
3F7A:  TBLRD*-
3F7C:  TBLRD*+
3F7E:  MOVF   FF5,W
3F80:  MOVWF  FEE
3F82:  IORLW  00
3F84:  BNZ   3F7C
3F86:  MOVLB  5
3F88:  BTFSC  x01.7
3F8A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3F8C:  MOVLW  04
3F8E:  MOVWF  x02
3F90:  MOVLW  E1
3F92:  MOVWF  x01
3F94:  MOVLW  07
3F96:  MOVWF  x03
3F98:  MOVLW  37
3F9A:  MOVWF  x04
3F9C:  MOVLW  02
3F9E:  MOVWF  x05
3FA0:  MOVLW  01
3FA2:  MOVWF  x06
3FA4:  MOVLB  0
3FA6:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3FAA:  MOVLW  04
3FAC:  MOVWF  FEA
3FAE:  MOVLW  E1
3FB0:  MOVWF  FE9
3FB2:  MOVFF  FF2,501
3FB6:  BCF    FF2.7
3FB8:  MOVLW  00
3FBA:  CALL   08E0
3FBE:  TBLRD*-
3FC0:  TBLRD*+
3FC2:  MOVF   FF5,W
3FC4:  MOVWF  FEE
3FC6:  IORLW  00
3FC8:  BNZ   3FC0
3FCA:  MOVLB  5
3FCC:  BTFSC  x01.7
3FCE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3FD0:  MOVLW  04
3FD2:  MOVWF  x02
3FD4:  MOVLW  E1
3FD6:  MOVWF  x01
3FD8:  CLRF   x03
3FDA:  MOVLW  1A
3FDC:  MOVWF  x04
3FDE:  CLRF   x05
3FE0:  MOVLW  01
3FE2:  MOVWF  x06
3FE4:  MOVLB  0
3FE6:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3FEA:  MOVLW  04
3FEC:  MOVWF  FEA
3FEE:  MOVLW  E1
3FF0:  MOVWF  FE9
3FF2:  MOVFF  FF2,501
3FF6:  BCF    FF2.7
3FF8:  MOVLW  00
3FFA:  CALL   0A6C
3FFE:  TBLRD*-
4000:  TBLRD*+
4002:  MOVF   FF5,W
4004:  MOVWF  FEE
4006:  IORLW  00
4008:  BNZ   4000
400A:  MOVLB  5
400C:  BTFSC  x01.7
400E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4010:  MOVLW  04
4012:  MOVWF  x02
4014:  MOVLW  E1
4016:  MOVWF  x01
4018:  CLRF   x03
401A:  MOVLW  24
401C:  MOVWF  x04
401E:  CLRF   x05
4020:  MOVLW  01
4022:  MOVWF  x06
4024:  MOVLB  0
4026:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
402A:  MOVLW  04
402C:  MOVWF  FEA
402E:  MOVLW  E1
4030:  MOVWF  FE9
4032:  MOVFF  FF2,501
4036:  BCF    FF2.7
4038:  MOVLW  00
403A:  CALL   0A1C
403E:  TBLRD*-
4040:  TBLRD*+
4042:  MOVF   FF5,W
4044:  MOVWF  FEE
4046:  IORLW  00
4048:  BNZ   4040
404A:  MOVLB  5
404C:  BTFSC  x01.7
404E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4050:  MOVLW  04
4052:  MOVWF  x02
4054:  MOVLW  E1
4056:  MOVWF  x01
4058:  CLRF   x03
405A:  MOVLW  2E
405C:  MOVWF  x04
405E:  CLRF   x05
4060:  MOVLW  01
4062:  MOVWF  x06
4064:  MOVLB  0
4066:  CALL   1630
....................          visual=0; 
406A:  MOVLB  4
406C:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
406E:  BSF    F92.3
4070:  BTFSS  F80.3
4072:  BRA    4094
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4074:  MOVLW  1E
4076:  MOVLB  5
4078:  MOVWF  x02
407A:  MOVLB  0
407C:  CALL   0F98
4080:  MOVLW  01
4082:  MOVLB  4
4084:  MOVWF  xA2
4086:  MOVLB  5
4088:  CLRF   x02
408A:  MOVLB  0
408C:  CALL   1002
4090:  MOVLB  4
4092:  BSF    x95.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
4094:  BSF    F92.2
4096:  BTFSS  F80.2
4098:  BRA    40DA
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
409A:  CLRF   xC2
409C:  CLRF   xC3
409E:  MOVLW  05
40A0:  MOVWF  xC4
40A2:  MOVLW  01
40A4:  MOVWF  xC5
40A6:  BSF    x95.5
40A8:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
40AA:  CLRF   xCA
40AC:  CLRF   xCB
40AE:  CLRF   xCC
40B0:  CLRF   xCD
40B2:  MOVLW  79
40B4:  MOVWF  xA5
40B6:  MOVLW  0E
40B8:  MOVWF  xA2
40BA:  MOVLW  04
40BC:  MOVLB  5
40BE:  MOVWF  x01
40C0:  MOVLW  AF
40C2:  MOVWF  x02
40C4:  MOVLB  0
40C6:  CALL   0F98
40CA:  MOVLB  5
40CC:  DECFSZ x01,F
40CE:  BRA    40C0
40D0:  CLRF   x02
40D2:  MOVLB  0
40D4:  CALL   1002
40D8:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
40DA:  MOVF   xA2,W
40DC:  SUBLW  07
40DE:  BTFSS  FD8.2
40E0:  BRA    4420
....................        
....................       if(visual==1) 
40E2:  BTFSS  x95.4
40E4:  BRA    4238
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
40E6:  MOVLW  01
40E8:  MOVLB  5
40EA:  MOVWF  x01
40EC:  MOVLB  0
40EE:  CALL   2078
....................          strcpy(Menus.Letra,"Tex & Ins"); 
40F2:  MOVLW  04
40F4:  MOVWF  FEA
40F6:  MOVLW  E1
40F8:  MOVWF  FE9
40FA:  MOVFF  FF2,501
40FE:  BCF    FF2.7
4100:  MOVLW  00
4102:  CALL   0A9C
4106:  TBLRD*-
4108:  TBLRD*+
410A:  MOVF   FF5,W
410C:  MOVWF  FEE
410E:  IORLW  00
4110:  BNZ   4108
4112:  MOVLB  5
4114:  BTFSC  x01.7
4116:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4118:  MOVLW  04
411A:  MOVWF  x02
411C:  MOVLW  E1
411E:  MOVWF  x01
4120:  CLRF   x03
4122:  CLRF   x04
4124:  MOVLW  01
4126:  MOVWF  x05
4128:  MOVLW  02
412A:  MOVWF  x06
412C:  MOVLB  0
412E:  CALL   1630
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
4132:  MOVLW  04
4134:  MOVWF  FEA
4136:  MOVLW  E1
4138:  MOVWF  FE9
413A:  MOVFF  FF2,501
413E:  BCF    FF2.7
4140:  MOVLW  00
4142:  CALL   0860
4146:  TBLRD*-
4148:  TBLRD*+
414A:  MOVF   FF5,W
414C:  MOVWF  FEE
414E:  IORLW  00
4150:  BNZ   4148
4152:  MOVLB  5
4154:  BTFSC  x01.7
4156:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4158:  MOVLW  04
415A:  MOVWF  x02
415C:  MOVLW  E1
415E:  MOVWF  x01
4160:  CLRF   x03
4162:  MOVLW  37
4164:  MOVWF  x04
4166:  MOVLW  02
4168:  MOVWF  x05
416A:  MOVLW  01
416C:  MOVWF  x06
416E:  MOVLB  0
4170:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
4174:  MOVLW  04
4176:  MOVWF  FEA
4178:  MOVLW  E1
417A:  MOVWF  FE9
417C:  MOVFF  FF2,501
4180:  BCF    FF2.7
4182:  MOVLW  00
4184:  CALL   08E0
4188:  TBLRD*-
418A:  TBLRD*+
418C:  MOVF   FF5,W
418E:  MOVWF  FEE
4190:  IORLW  00
4192:  BNZ   418A
4194:  MOVLB  5
4196:  BTFSC  x01.7
4198:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
419A:  MOVLW  04
419C:  MOVWF  x02
419E:  MOVLW  E1
41A0:  MOVWF  x01
41A2:  CLRF   x03
41A4:  MOVLW  1A
41A6:  MOVWF  x04
41A8:  CLRF   x05
41AA:  MOVLW  01
41AC:  MOVWF  x06
41AE:  MOVLB  0
41B0:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
41B4:  MOVLW  04
41B6:  MOVWF  FEA
41B8:  MOVLW  E1
41BA:  MOVWF  FE9
41BC:  MOVFF  FF2,501
41C0:  BCF    FF2.7
41C2:  MOVLW  00
41C4:  CALL   090C
41C8:  TBLRD*-
41CA:  TBLRD*+
41CC:  MOVF   FF5,W
41CE:  MOVWF  FEE
41D0:  IORLW  00
41D2:  BNZ   41CA
41D4:  MOVLB  5
41D6:  BTFSC  x01.7
41D8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
41DA:  MOVLW  04
41DC:  MOVWF  x02
41DE:  MOVLW  E1
41E0:  MOVWF  x01
41E2:  CLRF   x03
41E4:  MOVLW  24
41E6:  MOVWF  x04
41E8:  CLRF   x05
41EA:  MOVLW  01
41EC:  MOVWF  x06
41EE:  MOVLB  0
41F0:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
41F4:  MOVLW  04
41F6:  MOVWF  FEA
41F8:  MOVLW  E1
41FA:  MOVWF  FE9
41FC:  MOVFF  FF2,501
4200:  BCF    FF2.7
4202:  MOVLW  00
4204:  CALL   0AC0
4208:  TBLRD*-
420A:  TBLRD*+
420C:  MOVF   FF5,W
420E:  MOVWF  FEE
4210:  IORLW  00
4212:  BNZ   420A
4214:  MOVLB  5
4216:  BTFSC  x01.7
4218:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
421A:  MOVLW  04
421C:  MOVWF  x02
421E:  MOVLW  E1
4220:  MOVWF  x01
4222:  CLRF   x03
4224:  MOVLW  2E
4226:  MOVWF  x04
4228:  CLRF   x05
422A:  MOVLW  01
422C:  MOVWF  x06
422E:  MOVLB  0
4230:  CALL   1630
....................          visual=0; 
4234:  MOVLB  4
4236:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4238:  BSF    F92.3
423A:  BTFSS  F80.3
423C:  BRA    425E
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
423E:  MOVLW  1E
4240:  MOVLB  5
4242:  MOVWF  x02
4244:  MOVLB  0
4246:  CALL   0F98
424A:  MOVLW  01
424C:  MOVLB  4
424E:  MOVWF  xA2
4250:  MOVLB  5
4252:  CLRF   x02
4254:  MOVLB  0
4256:  CALL   1002
425A:  MOVLB  4
425C:  BSF    x95.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
425E:  BSF    F92.2
4260:  BTFSS  F80.2
4262:  BRA    4420
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
4264:  CLRF   xC2
4266:  CLRF   xC3
4268:  MOVLW  05
426A:  MOVWF  xC4
426C:  MOVLW  02
426E:  MOVWF  xC5
4270:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
4272:  CLRF   xCA
4274:  CLRF   xCB
4276:  CLRF   xCC
4278:  MOVLW  01
427A:  MOVWF  xCD
427C:  MOVLW  79
427E:  MOVWF  xA5
4280:  MOVLW  14
4282:  MOVWF  xA2
4284:  MOVLW  04
4286:  MOVLB  5
4288:  MOVWF  x01
428A:  MOVLW  AF
428C:  MOVWF  x02
428E:  MOVLB  0
4290:  CALL   0F98
4294:  MOVLB  5
4296:  DECFSZ x01,F
4298:  BRA    428A
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
429A:  MOVLW  14
429C:  MOVLB  4
429E:  MOVWF  xA2
42A0:  MOVLW  0F
42A2:  MOVLB  5
42A4:  MOVWF  x13
42A6:  MOVLW  12
42A8:  MOVWF  x14
42AA:  MOVLW  1E
42AC:  MOVWF  x15
42AE:  MOVLW  35
42B0:  MOVWF  x16
42B2:  CLRF   x17
42B4:  MOVLW  01
42B6:  MOVWF  x18
42B8:  MOVLB  0
42BA:  CALL   156E
42BE:  MOVLB  4
42C0:  CLRF   xA9
42C2:  MOVLW  C0
42C4:  IORWF  FF2,F
42C6:  MOVLB  5
42C8:  CLRF   x02
42CA:  MOVLB  0
42CC:  CALL   1002
....................          strcpy(Menus.Letra,"Calentando"); 
42D0:  MOVLW  04
42D2:  MOVWF  FEA
42D4:  MOVLW  E1
42D6:  MOVWF  FE9
42D8:  MOVFF  FF2,501
42DC:  BCF    FF2.7
42DE:  MOVLW  00
42E0:  CALL   0966
42E4:  TBLRD*-
42E6:  TBLRD*+
42E8:  MOVF   FF5,W
42EA:  MOVWF  FEE
42EC:  IORLW  00
42EE:  BNZ   42E6
42F0:  MOVLB  5
42F2:  BTFSC  x01.7
42F4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
42F6:  MOVLW  04
42F8:  MOVWF  x02
42FA:  MOVLW  E1
42FC:  MOVWF  x01
42FE:  CLRF   x03
4300:  MOVLW  37
4302:  MOVWF  x04
4304:  MOVLW  02
4306:  MOVWF  x05
4308:  MOVLW  01
430A:  MOVWF  x06
430C:  MOVLB  0
430E:  CALL   1630
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
4312:  MOVLW  0F
4314:  MOVLB  5
4316:  MOVWF  x13
4318:  MOVLW  12
431A:  MOVWF  x14
431C:  MOVLW  1E
431E:  MOVWF  x15
4320:  MOVLW  35
4322:  MOVWF  x16
4324:  CLRF   x17
4326:  MOVLW  01
4328:  MOVWF  x18
432A:  MOVLB  0
432C:  CALL   156E
....................          glcd_imagen(5); 
4330:  MOVLW  05
4332:  MOVLB  5
4334:  MOVWF  x01
4336:  MOVLB  0
4338:  CALL   2078
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
433C:  MOVLW  04
433E:  MOVWF  FEA
4340:  MOVLW  E1
4342:  MOVWF  FE9
4344:  MOVFF  FF2,501
4348:  BCF    FF2.7
434A:  MOVLW  00
434C:  CALL   098C
4350:  TBLRD*-
4352:  TBLRD*+
4354:  MOVF   FF5,W
4356:  MOVWF  FEE
4358:  IORLW  00
435A:  BNZ   4352
435C:  MOVLB  5
435E:  BTFSC  x01.7
4360:  BSF    FF2.7
4362:  MOVLW  04
4364:  MOVWF  x02
4366:  MOVLW  E1
4368:  MOVWF  x01
436A:  CLRF   x03
436C:  CLRF   x04
436E:  MOVLW  02
4370:  MOVWF  x05
4372:  MOVLW  01
4374:  MOVWF  x06
4376:  MOVLB  0
4378:  CALL   1630
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
437C:  MOVLW  04
437E:  MOVWF  FEA
4380:  MOVLW  E1
4382:  MOVWF  FE9
4384:  MOVFF  FF2,501
4388:  BCF    FF2.7
438A:  MOVLW  00
438C:  CALL   09AE
4390:  TBLRD*-
4392:  TBLRD*+
4394:  MOVF   FF5,W
4396:  MOVWF  FEE
4398:  IORLW  00
439A:  BNZ   4392
439C:  MOVLB  5
439E:  BTFSC  x01.7
43A0:  BSF    FF2.7
43A2:  MOVLW  04
43A4:  MOVWF  x02
43A6:  MOVLW  E1
43A8:  MOVWF  x01
43AA:  CLRF   x03
43AC:  MOVLW  08
43AE:  MOVWF  x04
43B0:  MOVLW  02
43B2:  MOVWF  x05
43B4:  MOVLW  01
43B6:  MOVWF  x06
43B8:  MOVLB  0
43BA:  CALL   1630
....................          glcd_circle(95,40,2,NO,ON); 
43BE:  MOVLW  5F
43C0:  MOVLB  5
43C2:  MOVWF  x01
43C4:  MOVLW  28
43C6:  MOVWF  x02
43C8:  MOVLW  02
43CA:  MOVWF  x03
43CC:  CLRF   x04
43CE:  MOVLW  01
43D0:  MOVWF  x05
43D2:  MOVLB  0
43D4:  CALL   2174
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
43D8:  MOVLW  04
43DA:  MOVWF  FEA
43DC:  MOVLW  E1
43DE:  MOVWF  FE9
43E0:  MOVFF  FF2,501
43E4:  BCF    FF2.7
43E6:  MOVLW  00
43E8:  CALL   09D0
43EC:  TBLRD*-
43EE:  TBLRD*+
43F0:  MOVF   FF5,W
43F2:  MOVWF  FEE
43F4:  IORLW  00
43F6:  BNZ   43EE
43F8:  MOVLB  5
43FA:  BTFSC  x01.7
43FC:  BSF    FF2.7
43FE:  MOVLW  04
4400:  MOVWF  x02
4402:  MOVLW  E1
4404:  MOVWF  x01
4406:  MOVLW  66
4408:  MOVWF  x03
440A:  MOVLW  28
440C:  MOVWF  x04
440E:  MOVLW  02
4410:  MOVWF  x05
4412:  MOVWF  x06
4414:  MOVLB  0
4416:  CALL   1630
....................          MuestraTiemposProgramados(); 
441A:  CALL   257C
441E:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
4420:  MOVF   xA2,W
4422:  SUBLW  08
4424:  BTFSS  FD8.2
4426:  BRA    4804
....................          
....................          if(visual==1) 
4428:  BTFSS  x95.4
442A:  BRA    4750
....................          { 
....................             if(Opcion>5) 
442C:  MOVF   xA7,W
442E:  SUBLW  05
4430:  BC    4436
....................             {Opcion=1;} 
4432:  MOVLW  01
4434:  MOVWF  xA7
....................             if(Opcion<1) 
4436:  MOVF   xA7,F
4438:  BNZ   443E
....................             {Opcion=5;} 
443A:  MOVLW  05
443C:  MOVWF  xA7
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
443E:  MOVLW  04
4440:  MOVWF  FEA
4442:  MOVLW  E1
4444:  MOVWF  FE9
4446:  MOVFF  FF2,501
444A:  BCF    FF2.7
444C:  MOVLW  00
444E:  MOVLB  0
4450:  CALL   0AEA
4454:  TBLRD*-
4456:  TBLRD*+
4458:  MOVF   FF5,W
445A:  MOVWF  FEE
445C:  IORLW  00
445E:  BNZ   4456
4460:  MOVLB  5
4462:  BTFSC  x01.7
4464:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4466:  MOVLW  04
4468:  MOVWF  x02
446A:  MOVLW  E1
446C:  MOVWF  x01
446E:  CLRF   x03
4470:  CLRF   x04
4472:  MOVLW  01
4474:  MOVWF  x05
4476:  MOVWF  x06
4478:  MOVLB  0
447A:  CALL   1630
....................        
....................             if(Opcion==1)    
447E:  MOVLB  4
4480:  DECFSZ xA7,W
4482:  BRA    44CA
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
4484:  MOVLW  04
4486:  MOVWF  FEA
4488:  MOVLW  E1
448A:  MOVWF  FE9
448C:  MOVFF  FF2,501
4490:  BCF    FF2.7
4492:  MOVLW  00
4494:  MOVLB  0
4496:  CALL   0B1A
449A:  TBLRD*-
449C:  TBLRD*+
449E:  MOVF   FF5,W
44A0:  MOVWF  FEE
44A2:  IORLW  00
44A4:  BNZ   449C
44A6:  MOVLB  5
44A8:  BTFSC  x01.7
44AA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
44AC:  MOVLW  04
44AE:  MOVWF  x02
44B0:  MOVLW  E1
44B2:  MOVWF  x01
44B4:  CLRF   x03
44B6:  MOVLW  0A
44B8:  MOVWF  x04
44BA:  MOVLW  01
44BC:  MOVWF  x05
44BE:  MOVWF  x06
44C0:  MOVLB  0
44C2:  CALL   1630
....................             else 
44C6:  BRA    450C
44C8:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
44CA:  MOVLW  04
44CC:  MOVWF  FEA
44CE:  MOVLW  E1
44D0:  MOVWF  FE9
44D2:  MOVFF  FF2,501
44D6:  BCF    FF2.7
44D8:  MOVLW  00
44DA:  MOVLB  0
44DC:  CALL   0B1A
44E0:  TBLRD*-
44E2:  TBLRD*+
44E4:  MOVF   FF5,W
44E6:  MOVWF  FEE
44E8:  IORLW  00
44EA:  BNZ   44E2
44EC:  MOVLB  5
44EE:  BTFSC  x01.7
44F0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
44F2:  MOVLW  04
44F4:  MOVWF  x02
44F6:  MOVLW  E1
44F8:  MOVWF  x01
44FA:  CLRF   x03
44FC:  MOVLW  0A
44FE:  MOVWF  x04
4500:  CLRF   x05
4502:  MOVLW  01
4504:  MOVWF  x06
4506:  MOVLB  0
4508:  CALL   1630
....................              
....................             if(Opcion==2)    
450C:  MOVLB  4
450E:  MOVF   xA7,W
4510:  SUBLW  02
4512:  BNZ   455A
....................                {strcpy(Menus.Letra,"T. Secado"); 
4514:  MOVLW  04
4516:  MOVWF  FEA
4518:  MOVLW  E1
451A:  MOVWF  FE9
451C:  MOVFF  FF2,501
4520:  BCF    FF2.7
4522:  MOVLW  00
4524:  MOVLB  0
4526:  CALL   0B46
452A:  TBLRD*-
452C:  TBLRD*+
452E:  MOVF   FF5,W
4530:  MOVWF  FEE
4532:  IORLW  00
4534:  BNZ   452C
4536:  MOVLB  5
4538:  BTFSC  x01.7
453A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
453C:  MOVLW  04
453E:  MOVWF  x02
4540:  MOVLW  E1
4542:  MOVWF  x01
4544:  CLRF   x03
4546:  MOVLW  14
4548:  MOVWF  x04
454A:  MOVLW  01
454C:  MOVWF  x05
454E:  MOVWF  x06
4550:  MOVLB  0
4552:  CALL   1630
....................             else 
4556:  BRA    459C
4558:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
455A:  MOVLW  04
455C:  MOVWF  FEA
455E:  MOVLW  E1
4560:  MOVWF  FE9
4562:  MOVFF  FF2,501
4566:  BCF    FF2.7
4568:  MOVLW  00
456A:  MOVLB  0
456C:  CALL   0B46
4570:  TBLRD*-
4572:  TBLRD*+
4574:  MOVF   FF5,W
4576:  MOVWF  FEE
4578:  IORLW  00
457A:  BNZ   4572
457C:  MOVLB  5
457E:  BTFSC  x01.7
4580:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
4582:  MOVLW  04
4584:  MOVWF  x02
4586:  MOVLW  E1
4588:  MOVWF  x01
458A:  CLRF   x03
458C:  MOVLW  14
458E:  MOVWF  x04
4590:  CLRF   x05
4592:  MOVLW  01
4594:  MOVWF  x06
4596:  MOVLB  0
4598:  CALL   1630
....................                 
....................              if(Opcion==3)    
459C:  MOVLB  4
459E:  MOVF   xA7,W
45A0:  SUBLW  03
45A2:  BNZ   45EA
....................                {strcpy(Menus.Letra,"Temperatura"); 
45A4:  MOVLW  04
45A6:  MOVWF  FEA
45A8:  MOVLW  E1
45AA:  MOVWF  FE9
45AC:  MOVFF  FF2,501
45B0:  BCF    FF2.7
45B2:  MOVLW  00
45B4:  MOVLB  0
45B6:  CALL   0B6A
45BA:  TBLRD*-
45BC:  TBLRD*+
45BE:  MOVF   FF5,W
45C0:  MOVWF  FEE
45C2:  IORLW  00
45C4:  BNZ   45BC
45C6:  MOVLB  5
45C8:  BTFSC  x01.7
45CA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
45CC:  MOVLW  04
45CE:  MOVWF  x02
45D0:  MOVLW  E1
45D2:  MOVWF  x01
45D4:  CLRF   x03
45D6:  MOVLW  1E
45D8:  MOVWF  x04
45DA:  MOVLW  01
45DC:  MOVWF  x05
45DE:  MOVWF  x06
45E0:  MOVLB  0
45E2:  CALL   1630
....................             else 
45E6:  BRA    462C
45E8:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
45EA:  MOVLW  04
45EC:  MOVWF  FEA
45EE:  MOVLW  E1
45F0:  MOVWF  FE9
45F2:  MOVFF  FF2,501
45F6:  BCF    FF2.7
45F8:  MOVLW  00
45FA:  MOVLB  0
45FC:  CALL   0B6A
4600:  TBLRD*-
4602:  TBLRD*+
4604:  MOVF   FF5,W
4606:  MOVWF  FEE
4608:  IORLW  00
460A:  BNZ   4602
460C:  MOVLB  5
460E:  BTFSC  x01.7
4610:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
4612:  MOVLW  04
4614:  MOVWF  x02
4616:  MOVLW  E1
4618:  MOVWF  x01
461A:  CLRF   x03
461C:  MOVLW  1E
461E:  MOVWF  x04
4620:  CLRF   x05
4622:  MOVLW  01
4624:  MOVWF  x06
4626:  MOVLB  0
4628:  CALL   1630
....................                 
....................             if(Opcion==4)    
462C:  MOVLB  4
462E:  MOVF   xA7,W
4630:  SUBLW  04
4632:  BNZ   467A
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4634:  MOVLW  04
4636:  MOVWF  FEA
4638:  MOVLW  E1
463A:  MOVWF  FE9
463C:  MOVFF  FF2,501
4640:  BCF    FF2.7
4642:  MOVLW  00
4644:  MOVLB  0
4646:  CALL   0B90
464A:  TBLRD*-
464C:  TBLRD*+
464E:  MOVF   FF5,W
4650:  MOVWF  FEE
4652:  IORLW  00
4654:  BNZ   464C
4656:  MOVLB  5
4658:  BTFSC  x01.7
465A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
465C:  MOVLW  04
465E:  MOVWF  x02
4660:  MOVLW  E1
4662:  MOVWF  x01
4664:  CLRF   x03
4666:  MOVLW  28
4668:  MOVWF  x04
466A:  MOVLW  01
466C:  MOVWF  x05
466E:  MOVWF  x06
4670:  MOVLB  0
4672:  CALL   1630
....................             else 
4676:  BRA    46BC
4678:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
467A:  MOVLW  04
467C:  MOVWF  FEA
467E:  MOVLW  E1
4680:  MOVWF  FE9
4682:  MOVFF  FF2,501
4686:  BCF    FF2.7
4688:  MOVLW  00
468A:  MOVLB  0
468C:  CALL   0B90
4690:  TBLRD*-
4692:  TBLRD*+
4694:  MOVF   FF5,W
4696:  MOVWF  FEE
4698:  IORLW  00
469A:  BNZ   4692
469C:  MOVLB  5
469E:  BTFSC  x01.7
46A0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
46A2:  MOVLW  04
46A4:  MOVWF  x02
46A6:  MOVLW  E1
46A8:  MOVWF  x01
46AA:  CLRF   x03
46AC:  MOVLW  28
46AE:  MOVWF  x04
46B0:  CLRF   x05
46B2:  MOVLW  01
46B4:  MOVWF  x06
46B6:  MOVLB  0
46B8:  CALL   1630
....................                 
....................             if(Opcion==5)    
46BC:  MOVLB  4
46BE:  MOVF   xA7,W
46C0:  SUBLW  05
46C2:  BNZ   470A
....................                {strcpy(Menus.Letra,"Continuar"); 
46C4:  MOVLW  04
46C6:  MOVWF  FEA
46C8:  MOVLW  E1
46CA:  MOVWF  FE9
46CC:  MOVFF  FF2,501
46D0:  BCF    FF2.7
46D2:  MOVLW  00
46D4:  MOVLB  0
46D6:  CALL   0BBC
46DA:  TBLRD*-
46DC:  TBLRD*+
46DE:  MOVF   FF5,W
46E0:  MOVWF  FEE
46E2:  IORLW  00
46E4:  BNZ   46DC
46E6:  MOVLB  5
46E8:  BTFSC  x01.7
46EA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
46EC:  MOVLW  04
46EE:  MOVWF  x02
46F0:  MOVLW  E1
46F2:  MOVWF  x01
46F4:  CLRF   x03
46F6:  MOVLW  32
46F8:  MOVWF  x04
46FA:  MOVLW  01
46FC:  MOVWF  x05
46FE:  MOVWF  x06
4700:  MOVLB  0
4702:  CALL   1630
....................             else 
4706:  BRA    474C
4708:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
470A:  MOVLW  04
470C:  MOVWF  FEA
470E:  MOVLW  E1
4710:  MOVWF  FE9
4712:  MOVFF  FF2,501
4716:  BCF    FF2.7
4718:  MOVLW  00
471A:  MOVLB  0
471C:  CALL   0BBC
4720:  TBLRD*-
4722:  TBLRD*+
4724:  MOVF   FF5,W
4726:  MOVWF  FEE
4728:  IORLW  00
472A:  BNZ   4722
472C:  MOVLB  5
472E:  BTFSC  x01.7
4730:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
4732:  MOVLW  04
4734:  MOVWF  x02
4736:  MOVLW  E1
4738:  MOVWF  x01
473A:  CLRF   x03
473C:  MOVLW  32
473E:  MOVWF  x04
4740:  CLRF   x05
4742:  MOVLW  01
4744:  MOVWF  x06
4746:  MOVLB  0
4748:  CALL   1630
....................                           
....................             visual=0; 
474C:  MOVLB  4
474E:  BCF    x95.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
4750:  BSF    F92.0
4752:  BTFSS  F80.0
4754:  BRA    4770
....................          {  if(Flanco == 0)  
4756:  BTFSC  x95.0
4758:  BRA    476E
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
475A:  BSF    x95.0
475C:  MOVLW  1E
475E:  MOVLB  5
4760:  MOVWF  x02
4762:  MOVLB  0
4764:  CALL   0F98
4768:  MOVLB  4
476A:  DECF   xA7,F
476C:  BSF    x95.4
....................                } 
....................          } 
....................             else 
476E:  BRA    4772
....................                {Flanco = 0;} 
4770:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4772:  BSF    F92.1
4774:  BTFSS  F80.1
4776:  BRA    4792
....................          {  if(Flanco2 == 0)  
4778:  BTFSC  x95.2
477A:  BRA    4790
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
477C:  BSF    x95.2
477E:  MOVLW  1E
4780:  MOVLB  5
4782:  MOVWF  x02
4784:  MOVLB  0
4786:  CALL   0F98
478A:  MOVLB  4
478C:  INCF   xA7,F
478E:  BSF    x95.4
....................                }      
....................          } 
....................             else 
4790:  BRA    4794
....................                {Flanco2 = 0;}   
4792:  BCF    x95.2
....................                 
....................          if(RIGHT)//Si oprime SET 
4794:  BSF    F92.2
4796:  BTFSS  F80.2
4798:  BRA    47D2
....................          {  if(Flanco1 == 0)  
479A:  BTFSC  x95.1
479C:  BRA    47D0
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
479E:  BSF    x95.1
47A0:  MOVLW  02
47A2:  MOVLB  5
47A4:  MOVWF  x01
47A6:  MOVLW  96
47A8:  MOVWF  x02
47AA:  MOVLB  0
47AC:  CALL   0F98
47B0:  MOVLB  5
47B2:  DECFSZ x01,F
47B4:  BRA    47A6
47B6:  MOVLW  0A
47B8:  MOVLB  4
47BA:  ADDWF  xA7,W
47BC:  MOVWF  xA2
47BE:  MOVLW  01
47C0:  MOVWF  xA7
47C2:  MOVLB  5
47C4:  CLRF   x02
47C6:  MOVLB  0
47C8:  CALL   1002
47CC:  MOVLB  4
47CE:  BSF    x95.4
....................                } 
....................          } 
....................             else 
47D0:  BRA    47D4
....................                {Flanco1 = 0;}   
47D2:  BCF    x95.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
47D4:  BSF    F92.3
47D6:  BTFSS  F80.3
47D8:  BRA    4804
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
47DA:  MOVLW  04
47DC:  MOVLB  5
47DE:  MOVWF  x01
47E0:  MOVLW  AF
47E2:  MOVWF  x02
47E4:  MOVLB  0
47E6:  CALL   0F98
47EA:  MOVLB  5
47EC:  DECFSZ x01,F
47EE:  BRA    47E0
47F0:  MOVLW  01
47F2:  MOVLB  4
47F4:  MOVWF  xA2
47F6:  MOVLB  5
47F8:  CLRF   x02
47FA:  MOVLB  0
47FC:  CALL   1002
4800:  MOVLB  4
4802:  BSF    x95.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
4804:  MOVF   xA2,W
4806:  SUBLW  09
4808:  BTFSS  FD8.2
480A:  BRA    4CC0
....................          
....................       strcpy(Menus.Letra,"Clave"); 
480C:  MOVLW  04
480E:  MOVWF  FEA
4810:  MOVLW  E1
4812:  MOVWF  FE9
4814:  MOVFF  FF2,501
4818:  BCF    FF2.7
481A:  MOVLW  00
481C:  MOVLB  0
481E:  CALL   0758
4822:  TBLRD*-
4824:  TBLRD*+
4826:  MOVF   FF5,W
4828:  MOVWF  FEE
482A:  IORLW  00
482C:  BNZ   4824
482E:  MOVLB  5
4830:  BTFSC  x01.7
4832:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4834:  MOVLW  04
4836:  MOVWF  x02
4838:  MOVLW  E1
483A:  MOVWF  x01
483C:  MOVLW  1E
483E:  MOVWF  x03
4840:  CLRF   x04
4842:  MOVLW  01
4844:  MOVWF  x05
4846:  MOVLW  02
4848:  MOVWF  x06
484A:  MOVLB  0
484C:  CALL   1630
....................        
....................       if(unidad==1) 
4850:  MOVLB  4
4852:  DECFSZ xA3,W
4854:  BRA    48B4
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4856:  MOVFF  4CE,503
485A:  MOVLW  14
485C:  MOVLB  5
485E:  MOVWF  x04
4860:  MOVLW  1E
4862:  MOVWF  x05
4864:  MOVLW  01
4866:  MOVWF  x06
4868:  MOVLB  0
486A:  CALL   185E
....................          displayContrasena(Contrasena[1],40,30,0); 
486E:  MOVFF  4CF,503
4872:  MOVLW  28
4874:  MOVLB  5
4876:  MOVWF  x04
4878:  MOVLW  1E
487A:  MOVWF  x05
487C:  CLRF   x06
487E:  MOVLB  0
4880:  CALL   185E
....................          displayContrasena(Contrasena[2],60,30,0); 
4884:  MOVFF  4D0,503
4888:  MOVLW  3C
488A:  MOVLB  5
488C:  MOVWF  x04
488E:  MOVLW  1E
4890:  MOVWF  x05
4892:  CLRF   x06
4894:  MOVLB  0
4896:  CALL   185E
....................          displayContrasena(Contrasena[3],80,30,0); 
489A:  MOVFF  4D1,503
489E:  MOVLW  50
48A0:  MOVLB  5
48A2:  MOVWF  x04
48A4:  MOVLW  1E
48A6:  MOVWF  x05
48A8:  CLRF   x06
48AA:  MOVLB  0
48AC:  CALL   185E
....................       } 
....................       else 
48B0:  BRA    49DC
48B2:  MOVLB  4
....................       { 
....................          if(unidad==2) 
48B4:  MOVF   xA3,W
48B6:  SUBLW  02
48B8:  BNZ   4918
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
48BA:  MOVFF  4CE,503
48BE:  MOVLW  14
48C0:  MOVLB  5
48C2:  MOVWF  x04
48C4:  MOVLW  1E
48C6:  MOVWF  x05
48C8:  CLRF   x06
48CA:  MOVLB  0
48CC:  CALL   185E
....................             displayContrasena(Contrasena[1],40,30,1); 
48D0:  MOVFF  4CF,503
48D4:  MOVLW  28
48D6:  MOVLB  5
48D8:  MOVWF  x04
48DA:  MOVLW  1E
48DC:  MOVWF  x05
48DE:  MOVLW  01
48E0:  MOVWF  x06
48E2:  MOVLB  0
48E4:  CALL   185E
....................             displayContrasena(Contrasena[2],60,30,0); 
48E8:  MOVFF  4D0,503
48EC:  MOVLW  3C
48EE:  MOVLB  5
48F0:  MOVWF  x04
48F2:  MOVLW  1E
48F4:  MOVWF  x05
48F6:  CLRF   x06
48F8:  MOVLB  0
48FA:  CALL   185E
....................             displayContrasena(Contrasena[3],80,30,0); 
48FE:  MOVFF  4D1,503
4902:  MOVLW  50
4904:  MOVLB  5
4906:  MOVWF  x04
4908:  MOVLW  1E
490A:  MOVWF  x05
490C:  CLRF   x06
490E:  MOVLB  0
4910:  CALL   185E
....................          } 
....................          else 
4914:  BRA    49DC
4916:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4918:  MOVF   xA3,W
491A:  SUBLW  03
491C:  BNZ   497C
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
491E:  MOVFF  4CE,503
4922:  MOVLW  14
4924:  MOVLB  5
4926:  MOVWF  x04
4928:  MOVLW  1E
492A:  MOVWF  x05
492C:  CLRF   x06
492E:  MOVLB  0
4930:  CALL   185E
....................                displayContrasena(Contrasena[1],40,30,0); 
4934:  MOVFF  4CF,503
4938:  MOVLW  28
493A:  MOVLB  5
493C:  MOVWF  x04
493E:  MOVLW  1E
4940:  MOVWF  x05
4942:  CLRF   x06
4944:  MOVLB  0
4946:  CALL   185E
....................                displayContrasena(Contrasena[2],60,30,1); 
494A:  MOVFF  4D0,503
494E:  MOVLW  3C
4950:  MOVLB  5
4952:  MOVWF  x04
4954:  MOVLW  1E
4956:  MOVWF  x05
4958:  MOVLW  01
495A:  MOVWF  x06
495C:  MOVLB  0
495E:  CALL   185E
....................                displayContrasena(Contrasena[3],80,30,0); 
4962:  MOVFF  4D1,503
4966:  MOVLW  50
4968:  MOVLB  5
496A:  MOVWF  x04
496C:  MOVLW  1E
496E:  MOVWF  x05
4970:  CLRF   x06
4972:  MOVLB  0
4974:  CALL   185E
....................             } 
....................             else 
4978:  BRA    49DC
497A:  MOVLB  4
....................             { 
....................                if(unidad==4) 
497C:  MOVF   xA3,W
497E:  SUBLW  04
4980:  BNZ   49DE
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4982:  MOVFF  4CE,503
4986:  MOVLW  14
4988:  MOVLB  5
498A:  MOVWF  x04
498C:  MOVLW  1E
498E:  MOVWF  x05
4990:  CLRF   x06
4992:  MOVLB  0
4994:  CALL   185E
....................                   displayContrasena(Contrasena[1],40,30,0); 
4998:  MOVFF  4CF,503
499C:  MOVLW  28
499E:  MOVLB  5
49A0:  MOVWF  x04
49A2:  MOVLW  1E
49A4:  MOVWF  x05
49A6:  CLRF   x06
49A8:  MOVLB  0
49AA:  CALL   185E
....................                   displayContrasena(Contrasena[2],60,30,0); 
49AE:  MOVFF  4D0,503
49B2:  MOVLW  3C
49B4:  MOVLB  5
49B6:  MOVWF  x04
49B8:  MOVLW  1E
49BA:  MOVWF  x05
49BC:  CLRF   x06
49BE:  MOVLB  0
49C0:  CALL   185E
....................                   displayContrasena(Contrasena[3],80,30,1); 
49C4:  MOVFF  4D1,503
49C8:  MOVLW  50
49CA:  MOVLB  5
49CC:  MOVWF  x04
49CE:  MOVLW  1E
49D0:  MOVWF  x05
49D2:  MOVLW  01
49D4:  MOVWF  x06
49D6:  MOVLB  0
49D8:  CALL   185E
49DC:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
49DE:  BSF    F92.0
49E0:  BTFSS  F80.0
49E2:  BRA    4A4C
....................       { 
....................          if(Flanco == 0) 
49E4:  BTFSC  x95.0
49E6:  BRA    4A4A
....................          { 
....................             Flanco = 1;delay_ms(30); 
49E8:  BSF    x95.0
49EA:  MOVLW  1E
49EC:  MOVLB  5
49EE:  MOVWF  x02
49F0:  MOVLB  0
49F2:  CALL   0F98
....................             for(i=1;i<=4;i++) 
49F6:  MOVLW  01
49F8:  MOVLB  4
49FA:  MOVWF  xA4
49FC:  MOVF   xA4,W
49FE:  SUBLW  04
4A00:  BNC   4A4A
....................             { 
....................                if(unidad==i) 
4A02:  MOVF   xA4,W
4A04:  SUBWF  xA3,W
4A06:  BNZ   4A46
....................                { 
....................                   Contrasena[i-1]++; 
4A08:  MOVLW  01
4A0A:  SUBWF  xA4,W
4A0C:  CLRF   03
4A0E:  ADDLW  CE
4A10:  MOVWF  FE9
4A12:  MOVLW  04
4A14:  ADDWFC 03,W
4A16:  MOVWF  FEA
4A18:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4A1A:  MOVLW  01
4A1C:  SUBWF  xA4,W
4A1E:  CLRF   03
4A20:  ADDLW  CE
4A22:  MOVWF  FE9
4A24:  MOVLW  04
4A26:  ADDWFC 03,W
4A28:  MOVWF  FEA
4A2A:  BTFSC  FEF.7
4A2C:  BRA    4A46
4A2E:  MOVF   FEF,W
4A30:  SUBLW  09
4A32:  BC    4A46
....................                   { 
....................                      Contrasena[i-1]=0; 
4A34:  MOVLW  01
4A36:  SUBWF  xA4,W
4A38:  CLRF   03
4A3A:  ADDLW  CE
4A3C:  MOVWF  FE9
4A3E:  MOVLW  04
4A40:  ADDWFC 03,W
4A42:  MOVWF  FEA
4A44:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4A46:  INCF   xA4,F
4A48:  BRA    49FC
....................          } 
....................       } 
....................       else 
4A4A:  BRA    4A4E
....................       { 
....................          Flanco = 0; 
4A4C:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4A4E:  BSF    F92.1
4A50:  BTFSS  F80.1
4A52:  BRA    4ABA
....................       { 
....................          if(Flanco2 == 0) 
4A54:  BTFSC  x95.2
4A56:  BRA    4AB8
....................             {Flanco2 = 1;delay_ms(30); 
4A58:  BSF    x95.2
4A5A:  MOVLW  1E
4A5C:  MOVLB  5
4A5E:  MOVWF  x02
4A60:  MOVLB  0
4A62:  CALL   0F98
....................                for(i=1;i<=4;i++) 
4A66:  MOVLW  01
4A68:  MOVLB  4
4A6A:  MOVWF  xA4
4A6C:  MOVF   xA4,W
4A6E:  SUBLW  04
4A70:  BNC   4AB8
....................                { 
....................                   if(unidad==i) 
4A72:  MOVF   xA4,W
4A74:  SUBWF  xA3,W
4A76:  BNZ   4AB4
....................                   {Contrasena[i-1]--;  
4A78:  MOVLW  01
4A7A:  SUBWF  xA4,W
4A7C:  CLRF   03
4A7E:  ADDLW  CE
4A80:  MOVWF  FE9
4A82:  MOVLW  04
4A84:  ADDWFC 03,W
4A86:  MOVWF  FEA
4A88:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4A8A:  MOVLW  01
4A8C:  SUBWF  xA4,W
4A8E:  CLRF   03
4A90:  ADDLW  CE
4A92:  MOVWF  FE9
4A94:  MOVLW  04
4A96:  ADDWFC 03,W
4A98:  MOVWF  FEA
4A9A:  BTFSC  FEF.7
4A9C:  BRA    4AA0
4A9E:  BRA    4AB4
....................                         {Contrasena[i-1]=9;} 
4AA0:  MOVLW  01
4AA2:  SUBWF  xA4,W
4AA4:  CLRF   03
4AA6:  ADDLW  CE
4AA8:  MOVWF  FE9
4AAA:  MOVLW  04
4AAC:  ADDWFC 03,W
4AAE:  MOVWF  FEA
4AB0:  MOVLW  09
4AB2:  MOVWF  FEF
....................                   } 
....................                }       
4AB4:  INCF   xA4,F
4AB6:  BRA    4A6C
....................             }      
....................       } 
....................       else 
4AB8:  BRA    4ABC
....................       { 
....................          Flanco2 = 0; 
4ABA:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4ABC:  BSF    F92.2
4ABE:  BTFSS  F80.2
4AC0:  BRA    4AE4
....................       { 
....................          if(Flanco1 == 0) 
4AC2:  BTFSC  x95.1
4AC4:  BRA    4AE2
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4AC6:  BSF    x95.1
4AC8:  MOVLW  02
4ACA:  MOVLB  5
4ACC:  MOVWF  x01
4ACE:  MOVLW  96
4AD0:  MOVWF  x02
4AD2:  MOVLB  0
4AD4:  CALL   0F98
4AD8:  MOVLB  5
4ADA:  DECFSZ x01,F
4ADC:  BRA    4ACE
4ADE:  MOVLB  4
4AE0:  INCF   xA3,F
....................       } 
....................       else 
4AE2:  BRA    4AE6
....................       { 
....................          Flanco1 = 0; 
4AE4:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4AE6:  BSF    F92.3
4AE8:  BTFSS  F80.3
4AEA:  BRA    4B14
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4AEC:  MOVLW  04
4AEE:  MOVLB  5
4AF0:  MOVWF  x01
4AF2:  MOVLW  AF
4AF4:  MOVWF  x02
4AF6:  MOVLB  0
4AF8:  CALL   0F98
4AFC:  MOVLB  5
4AFE:  DECFSZ x01,F
4B00:  BRA    4AF2
4B02:  MOVLW  01
4B04:  MOVLB  4
4B06:  MOVWF  xA2
4B08:  MOVLB  5
4B0A:  CLRF   x02
4B0C:  MOVLB  0
4B0E:  CALL   1002
4B12:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4B14:  MOVF   xA3,W
4B16:  SUBLW  04
4B18:  BTFSC  FD8.0
4B1A:  BRA    4CC0
....................       {glcd_fillScreen(OFF); 
4B1C:  MOVLB  5
4B1E:  CLRF   x02
4B20:  MOVLB  0
4B22:  CALL   1002
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4B26:  MOVLB  4
4B28:  MOVF   xD2,W
4B2A:  SUBWF  xCE,W
4B2C:  BNZ   4BFE
4B2E:  MOVF   xD3,W
4B30:  SUBWF  xCF,W
4B32:  BNZ   4BFE
4B34:  MOVF   xD4,W
4B36:  SUBWF  xD0,W
4B38:  BNZ   4BFE
4B3A:  MOVF   xD5,W
4B3C:  SUBWF  xD1,W
4B3E:  BNZ   4BFE
....................          { 
....................             glcd_fillScreen(OFF); 
4B40:  MOVLB  5
4B42:  CLRF   x02
4B44:  MOVLB  0
4B46:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
4B4A:  MOVLW  04
4B4C:  MOVWF  FEA
4B4E:  MOVLW  E1
4B50:  MOVWF  FE9
4B52:  MOVFF  FF2,501
4B56:  BCF    FF2.7
4B58:  MOVLW  00
4B5A:  CALL   0758
4B5E:  TBLRD*-
4B60:  TBLRD*+
4B62:  MOVF   FF5,W
4B64:  MOVWF  FEE
4B66:  IORLW  00
4B68:  BNZ   4B60
4B6A:  MOVLB  5
4B6C:  BTFSC  x01.7
4B6E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4B70:  MOVLW  04
4B72:  MOVWF  x02
4B74:  MOVLW  E1
4B76:  MOVWF  x01
4B78:  MOVLW  1E
4B7A:  MOVWF  x03
4B7C:  CLRF   x04
4B7E:  CLRF   x05
4B80:  MOVLW  02
4B82:  MOVWF  x06
4B84:  MOVLB  0
4B86:  CALL   1630
....................             strcpy(Menus.Letra,"Correcta"); 
4B8A:  MOVLW  04
4B8C:  MOVWF  FEA
4B8E:  MOVLW  E1
4B90:  MOVWF  FE9
4B92:  MOVFF  FF2,501
4B96:  BCF    FF2.7
4B98:  MOVLW  00
4B9A:  CALL   0778
4B9E:  TBLRD*-
4BA0:  TBLRD*+
4BA2:  MOVF   FF5,W
4BA4:  MOVWF  FEE
4BA6:  IORLW  00
4BA8:  BNZ   4BA0
4BAA:  MOVLB  5
4BAC:  BTFSC  x01.7
4BAE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4BB0:  MOVLW  04
4BB2:  MOVWF  x02
4BB4:  MOVLW  E1
4BB6:  MOVWF  x01
4BB8:  MOVLW  0F
4BBA:  MOVWF  x03
4BBC:  MOVLW  1E
4BBE:  MOVWF  x04
4BC0:  CLRF   x05
4BC2:  MOVLW  02
4BC4:  MOVWF  x06
4BC6:  MOVLB  0
4BC8:  CALL   1630
....................             Menu=91;glcd_update();delay_ms(1000); 
4BCC:  MOVLW  5B
4BCE:  MOVLB  4
4BD0:  MOVWF  xA2
4BD2:  MOVLB  0
4BD4:  CALL   105C
4BD8:  MOVLW  04
4BDA:  MOVLB  5
4BDC:  MOVWF  x01
4BDE:  MOVLW  FA
4BE0:  MOVWF  x02
4BE2:  MOVLB  0
4BE4:  CALL   0F98
4BE8:  MOVLB  5
4BEA:  DECFSZ x01,F
4BEC:  BRA    4BDE
....................             glcd_fillScreen(OFF);unidad=1; 
4BEE:  CLRF   x02
4BF0:  MOVLB  0
4BF2:  CALL   1002
4BF6:  MOVLW  01
4BF8:  MOVLB  4
4BFA:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4BFC:  BRA    4CC0
....................          { 
....................             glcd_fillScreen(OFF); 
4BFE:  MOVLB  5
4C00:  CLRF   x02
4C02:  MOVLB  0
4C04:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
4C08:  MOVLW  04
4C0A:  MOVWF  FEA
4C0C:  MOVLW  E1
4C0E:  MOVWF  FE9
4C10:  MOVFF  FF2,501
4C14:  BCF    FF2.7
4C16:  MOVLW  00
4C18:  CALL   0758
4C1C:  TBLRD*-
4C1E:  TBLRD*+
4C20:  MOVF   FF5,W
4C22:  MOVWF  FEE
4C24:  IORLW  00
4C26:  BNZ   4C1E
4C28:  MOVLB  5
4C2A:  BTFSC  x01.7
4C2C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4C2E:  MOVLW  04
4C30:  MOVWF  x02
4C32:  MOVLW  E1
4C34:  MOVWF  x01
4C36:  MOVLW  1E
4C38:  MOVWF  x03
4C3A:  CLRF   x04
4C3C:  CLRF   x05
4C3E:  MOVLW  02
4C40:  MOVWF  x06
4C42:  MOVLB  0
4C44:  CALL   1630
....................             strcpy(Menus.Letra,"Incorrecta"); 
4C48:  MOVLW  04
4C4A:  MOVWF  FEA
4C4C:  MOVLW  E1
4C4E:  MOVWF  FE9
4C50:  MOVFF  FF2,501
4C54:  BCF    FF2.7
4C56:  MOVLW  00
4C58:  CALL   079C
4C5C:  TBLRD*-
4C5E:  TBLRD*+
4C60:  MOVF   FF5,W
4C62:  MOVWF  FEE
4C64:  IORLW  00
4C66:  BNZ   4C5E
4C68:  MOVLB  5
4C6A:  BTFSC  x01.7
4C6C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4C6E:  MOVLW  04
4C70:  MOVWF  x02
4C72:  MOVLW  E1
4C74:  MOVWF  x01
4C76:  CLRF   x03
4C78:  MOVLW  1E
4C7A:  MOVWF  x04
4C7C:  CLRF   x05
4C7E:  MOVLW  02
4C80:  MOVWF  x06
4C82:  MOVLB  0
4C84:  CALL   1630
....................             Menu=1;glcd_update();delay_ms(1000); 
4C88:  MOVLW  01
4C8A:  MOVLB  4
4C8C:  MOVWF  xA2
4C8E:  MOVLB  0
4C90:  CALL   105C
4C94:  MOVLW  04
4C96:  MOVLB  5
4C98:  MOVWF  x01
4C9A:  MOVLW  FA
4C9C:  MOVWF  x02
4C9E:  MOVLB  0
4CA0:  CALL   0F98
4CA4:  MOVLB  5
4CA6:  DECFSZ x01,F
4CA8:  BRA    4C9A
....................             glcd_fillScreen(OFF);unidad=1; 
4CAA:  CLRF   x02
4CAC:  MOVLB  0
4CAE:  CALL   1002
4CB2:  MOVLW  01
4CB4:  MOVLB  4
4CB6:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4CB8:  CLRF   xCE
4CBA:  CLRF   xCF
4CBC:  CLRF   xD0
4CBE:  CLRF   xD1
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4CC0:  MOVF   xA2,W
4CC2:  SUBLW  5B
4CC4:  BTFSS  FD8.2
4CC6:  BRA    50A0
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4CC8:  MOVLW  04
4CCA:  MOVWF  FEA
4CCC:  MOVLW  E1
4CCE:  MOVWF  FE9
4CD0:  MOVFF  FF2,501
4CD4:  BCF    FF2.7
4CD6:  MOVLW  00
4CD8:  MOVLB  0
4CDA:  CALL   0BE0
4CDE:  TBLRD*-
4CE0:  TBLRD*+
4CE2:  MOVF   FF5,W
4CE4:  MOVWF  FEE
4CE6:  IORLW  00
4CE8:  BNZ   4CE0
4CEA:  MOVLB  5
4CEC:  BTFSC  x01.7
4CEE:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4CF0:  MOVLW  04
4CF2:  MOVWF  x02
4CF4:  MOVLW  E1
4CF6:  MOVWF  x01
4CF8:  CLRF   x03
4CFA:  CLRF   x04
4CFC:  MOVLW  01
4CFE:  MOVWF  x05
4D00:  MOVLW  02
4D02:  MOVWF  x06
4D04:  MOVLB  0
4D06:  CALL   1630
....................        
....................       if(unidad==1) 
4D0A:  MOVLB  4
4D0C:  DECFSZ xA3,W
4D0E:  BRA    4D6E
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4D10:  MOVFF  4D2,503
4D14:  MOVLW  14
4D16:  MOVLB  5
4D18:  MOVWF  x04
4D1A:  MOVLW  1E
4D1C:  MOVWF  x05
4D1E:  MOVLW  01
4D20:  MOVWF  x06
4D22:  MOVLB  0
4D24:  CALL   185E
....................          displayContrasena(Password[1],40,30,0); 
4D28:  MOVFF  4D3,503
4D2C:  MOVLW  28
4D2E:  MOVLB  5
4D30:  MOVWF  x04
4D32:  MOVLW  1E
4D34:  MOVWF  x05
4D36:  CLRF   x06
4D38:  MOVLB  0
4D3A:  CALL   185E
....................          displayContrasena(Password[2],60,30,0); 
4D3E:  MOVFF  4D4,503
4D42:  MOVLW  3C
4D44:  MOVLB  5
4D46:  MOVWF  x04
4D48:  MOVLW  1E
4D4A:  MOVWF  x05
4D4C:  CLRF   x06
4D4E:  MOVLB  0
4D50:  CALL   185E
....................          displayContrasena(Password[3],80,30,0); 
4D54:  MOVFF  4D5,503
4D58:  MOVLW  50
4D5A:  MOVLB  5
4D5C:  MOVWF  x04
4D5E:  MOVLW  1E
4D60:  MOVWF  x05
4D62:  CLRF   x06
4D64:  MOVLB  0
4D66:  CALL   185E
....................       } 
....................       else 
4D6A:  BRA    4E96
4D6C:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4D6E:  MOVF   xA3,W
4D70:  SUBLW  02
4D72:  BNZ   4DD2
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4D74:  MOVFF  4D2,503
4D78:  MOVLW  14
4D7A:  MOVLB  5
4D7C:  MOVWF  x04
4D7E:  MOVLW  1E
4D80:  MOVWF  x05
4D82:  CLRF   x06
4D84:  MOVLB  0
4D86:  CALL   185E
....................             displayContrasena(Password[1],40,30,1); 
4D8A:  MOVFF  4D3,503
4D8E:  MOVLW  28
4D90:  MOVLB  5
4D92:  MOVWF  x04
4D94:  MOVLW  1E
4D96:  MOVWF  x05
4D98:  MOVLW  01
4D9A:  MOVWF  x06
4D9C:  MOVLB  0
4D9E:  CALL   185E
....................             displayContrasena(Password[2],60,30,0); 
4DA2:  MOVFF  4D4,503
4DA6:  MOVLW  3C
4DA8:  MOVLB  5
4DAA:  MOVWF  x04
4DAC:  MOVLW  1E
4DAE:  MOVWF  x05
4DB0:  CLRF   x06
4DB2:  MOVLB  0
4DB4:  CALL   185E
....................             displayContrasena(Password[3],80,30,0); 
4DB8:  MOVFF  4D5,503
4DBC:  MOVLW  50
4DBE:  MOVLB  5
4DC0:  MOVWF  x04
4DC2:  MOVLW  1E
4DC4:  MOVWF  x05
4DC6:  CLRF   x06
4DC8:  MOVLB  0
4DCA:  CALL   185E
....................          } 
....................          else 
4DCE:  BRA    4E96
4DD0:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4DD2:  MOVF   xA3,W
4DD4:  SUBLW  03
4DD6:  BNZ   4E36
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4DD8:  MOVFF  4D2,503
4DDC:  MOVLW  14
4DDE:  MOVLB  5
4DE0:  MOVWF  x04
4DE2:  MOVLW  1E
4DE4:  MOVWF  x05
4DE6:  CLRF   x06
4DE8:  MOVLB  0
4DEA:  CALL   185E
....................                displayContrasena(Password[1],40,30,0); 
4DEE:  MOVFF  4D3,503
4DF2:  MOVLW  28
4DF4:  MOVLB  5
4DF6:  MOVWF  x04
4DF8:  MOVLW  1E
4DFA:  MOVWF  x05
4DFC:  CLRF   x06
4DFE:  MOVLB  0
4E00:  CALL   185E
....................                displayContrasena(Password[2],60,30,1); 
4E04:  MOVFF  4D4,503
4E08:  MOVLW  3C
4E0A:  MOVLB  5
4E0C:  MOVWF  x04
4E0E:  MOVLW  1E
4E10:  MOVWF  x05
4E12:  MOVLW  01
4E14:  MOVWF  x06
4E16:  MOVLB  0
4E18:  CALL   185E
....................                displayContrasena(Password[3],80,30,0); 
4E1C:  MOVFF  4D5,503
4E20:  MOVLW  50
4E22:  MOVLB  5
4E24:  MOVWF  x04
4E26:  MOVLW  1E
4E28:  MOVWF  x05
4E2A:  CLRF   x06
4E2C:  MOVLB  0
4E2E:  CALL   185E
....................             } 
....................             else 
4E32:  BRA    4E96
4E34:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4E36:  MOVF   xA3,W
4E38:  SUBLW  04
4E3A:  BNZ   4E98
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4E3C:  MOVFF  4D2,503
4E40:  MOVLW  14
4E42:  MOVLB  5
4E44:  MOVWF  x04
4E46:  MOVLW  1E
4E48:  MOVWF  x05
4E4A:  CLRF   x06
4E4C:  MOVLB  0
4E4E:  CALL   185E
....................                   displayContrasena(Password[1],40,30,0); 
4E52:  MOVFF  4D3,503
4E56:  MOVLW  28
4E58:  MOVLB  5
4E5A:  MOVWF  x04
4E5C:  MOVLW  1E
4E5E:  MOVWF  x05
4E60:  CLRF   x06
4E62:  MOVLB  0
4E64:  CALL   185E
....................                   displayContrasena(Password[2],60,30,0); 
4E68:  MOVFF  4D4,503
4E6C:  MOVLW  3C
4E6E:  MOVLB  5
4E70:  MOVWF  x04
4E72:  MOVLW  1E
4E74:  MOVWF  x05
4E76:  CLRF   x06
4E78:  MOVLB  0
4E7A:  CALL   185E
....................                   displayContrasena(Password[3],80,30,1); 
4E7E:  MOVFF  4D5,503
4E82:  MOVLW  50
4E84:  MOVLB  5
4E86:  MOVWF  x04
4E88:  MOVLW  1E
4E8A:  MOVWF  x05
4E8C:  MOVLW  01
4E8E:  MOVWF  x06
4E90:  MOVLB  0
4E92:  CALL   185E
4E96:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4E98:  BSF    F92.0
4E9A:  BTFSS  F80.0
4E9C:  BRA    4F06
....................       { 
....................          if(Flanco == 0) 
4E9E:  BTFSC  x95.0
4EA0:  BRA    4F04
....................          { 
....................             Flanco = 1;delay_ms(30); 
4EA2:  BSF    x95.0
4EA4:  MOVLW  1E
4EA6:  MOVLB  5
4EA8:  MOVWF  x02
4EAA:  MOVLB  0
4EAC:  CALL   0F98
....................             for(i=1;i<=4;i++) 
4EB0:  MOVLW  01
4EB2:  MOVLB  4
4EB4:  MOVWF  xA4
4EB6:  MOVF   xA4,W
4EB8:  SUBLW  04
4EBA:  BNC   4F04
....................             { 
....................                if(unidad==i) 
4EBC:  MOVF   xA4,W
4EBE:  SUBWF  xA3,W
4EC0:  BNZ   4F00
....................                { 
....................                   Password[i-1]++; 
4EC2:  MOVLW  01
4EC4:  SUBWF  xA4,W
4EC6:  CLRF   03
4EC8:  ADDLW  D2
4ECA:  MOVWF  FE9
4ECC:  MOVLW  04
4ECE:  ADDWFC 03,W
4ED0:  MOVWF  FEA
4ED2:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4ED4:  MOVLW  01
4ED6:  SUBWF  xA4,W
4ED8:  CLRF   03
4EDA:  ADDLW  D2
4EDC:  MOVWF  FE9
4EDE:  MOVLW  04
4EE0:  ADDWFC 03,W
4EE2:  MOVWF  FEA
4EE4:  BTFSC  FEF.7
4EE6:  BRA    4F00
4EE8:  MOVF   FEF,W
4EEA:  SUBLW  09
4EEC:  BC    4F00
....................                   { 
....................                      Password[i-1]=0; 
4EEE:  MOVLW  01
4EF0:  SUBWF  xA4,W
4EF2:  CLRF   03
4EF4:  ADDLW  D2
4EF6:  MOVWF  FE9
4EF8:  MOVLW  04
4EFA:  ADDWFC 03,W
4EFC:  MOVWF  FEA
4EFE:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4F00:  INCF   xA4,F
4F02:  BRA    4EB6
....................          } 
....................       } 
....................       else 
4F04:  BRA    4F08
....................       { 
....................          Flanco = 0; 
4F06:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4F08:  BSF    F92.1
4F0A:  BTFSS  F80.1
4F0C:  BRA    4F74
....................       { 
....................          if(Flanco2 == 0) 
4F0E:  BTFSC  x95.2
4F10:  BRA    4F72
....................             {Flanco2 = 1;delay_ms(30); 
4F12:  BSF    x95.2
4F14:  MOVLW  1E
4F16:  MOVLB  5
4F18:  MOVWF  x02
4F1A:  MOVLB  0
4F1C:  CALL   0F98
....................                for(i=1;i<=4;i++) 
4F20:  MOVLW  01
4F22:  MOVLB  4
4F24:  MOVWF  xA4
4F26:  MOVF   xA4,W
4F28:  SUBLW  04
4F2A:  BNC   4F72
....................                { 
....................                   if(unidad==i) 
4F2C:  MOVF   xA4,W
4F2E:  SUBWF  xA3,W
4F30:  BNZ   4F6E
....................                   { 
....................                      Password[i-1]--; 
4F32:  MOVLW  01
4F34:  SUBWF  xA4,W
4F36:  CLRF   03
4F38:  ADDLW  D2
4F3A:  MOVWF  FE9
4F3C:  MOVLW  04
4F3E:  ADDWFC 03,W
4F40:  MOVWF  FEA
4F42:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4F44:  MOVLW  01
4F46:  SUBWF  xA4,W
4F48:  CLRF   03
4F4A:  ADDLW  D2
4F4C:  MOVWF  FE9
4F4E:  MOVLW  04
4F50:  ADDWFC 03,W
4F52:  MOVWF  FEA
4F54:  BTFSC  FEF.7
4F56:  BRA    4F5A
4F58:  BRA    4F6E
....................                      { 
....................                         Password[i-1]=9; 
4F5A:  MOVLW  01
4F5C:  SUBWF  xA4,W
4F5E:  CLRF   03
4F60:  ADDLW  D2
4F62:  MOVWF  FE9
4F64:  MOVLW  04
4F66:  ADDWFC 03,W
4F68:  MOVWF  FEA
4F6A:  MOVLW  09
4F6C:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
4F6E:  INCF   xA4,F
4F70:  BRA    4F26
....................             }      
....................       } 
....................       else 
4F72:  BRA    4F76
....................       { 
....................          Flanco2 = 0; 
4F74:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4F76:  BSF    F92.2
4F78:  BTFSS  F80.2
4F7A:  BRA    4F9E
....................       { 
....................          if(Flanco1 == 0) 
4F7C:  BTFSC  x95.1
4F7E:  BRA    4F9C
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4F80:  BSF    x95.1
4F82:  MOVLW  02
4F84:  MOVLB  5
4F86:  MOVWF  x01
4F88:  MOVLW  96
4F8A:  MOVWF  x02
4F8C:  MOVLB  0
4F8E:  CALL   0F98
4F92:  MOVLB  5
4F94:  DECFSZ x01,F
4F96:  BRA    4F88
4F98:  MOVLB  4
4F9A:  INCF   xA3,F
....................       } 
....................       else 
4F9C:  BRA    4FA0
....................       { 
....................          Flanco1 = 0; 
4F9E:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4FA0:  BSF    F92.3
4FA2:  BTFSS  F80.3
4FA4:  BRA    4FCE
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4FA6:  MOVLW  04
4FA8:  MOVLB  5
4FAA:  MOVWF  x01
4FAC:  MOVLW  AF
4FAE:  MOVWF  x02
4FB0:  MOVLB  0
4FB2:  CALL   0F98
4FB6:  MOVLB  5
4FB8:  DECFSZ x01,F
4FBA:  BRA    4FAC
4FBC:  MOVLW  01
4FBE:  MOVLB  4
4FC0:  MOVWF  xA2
4FC2:  MOVLB  5
4FC4:  CLRF   x02
4FC6:  MOVLB  0
4FC8:  CALL   1002
4FCC:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4FCE:  MOVF   xA3,W
4FD0:  SUBLW  04
4FD2:  BC    50A0
....................       { 
....................          Opcion=1;unidad=1; 
4FD4:  MOVLW  01
4FD6:  MOVWF  xA7
4FD8:  MOVWF  xA3
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
4FDA:  MOVLW  0A
4FDC:  MOVWF  FA9
4FDE:  MOVFF  4D2,FA8
4FE2:  BCF    FA6.6
4FE4:  BCF    FA6.7
4FE6:  BSF    FA6.2
4FE8:  MOVF   FF2,W
4FEA:  MOVWF  00
4FEC:  BCF    FF2.7
4FEE:  MOVLB  F
4FF0:  MOVLW  55
4FF2:  MOVWF  FA7
4FF4:  MOVLW  AA
4FF6:  MOVWF  FA7
4FF8:  BSF    FA6.1
4FFA:  BTFSC  FA6.1
4FFC:  BRA    4FFA
4FFE:  BCF    FA6.2
5000:  MOVF   00,W
5002:  IORWF  FF2,F
5004:  MOVLW  0B
5006:  MOVWF  FA9
5008:  MOVFF  4D3,FA8
500C:  BCF    FA6.6
500E:  BCF    FA6.7
5010:  BSF    FA6.2
5012:  MOVF   FF2,W
5014:  MOVWF  00
5016:  BCF    FF2.7
5018:  MOVLW  55
501A:  MOVWF  FA7
501C:  MOVLW  AA
501E:  MOVWF  FA7
5020:  BSF    FA6.1
5022:  BTFSC  FA6.1
5024:  BRA    5022
5026:  BCF    FA6.2
5028:  MOVF   00,W
502A:  IORWF  FF2,F
502C:  MOVLW  0C
502E:  MOVWF  FA9
5030:  MOVFF  4D4,FA8
5034:  BCF    FA6.6
5036:  BCF    FA6.7
5038:  BSF    FA6.2
503A:  MOVF   FF2,W
503C:  MOVWF  00
503E:  BCF    FF2.7
5040:  MOVLW  55
5042:  MOVWF  FA7
5044:  MOVLW  AA
5046:  MOVWF  FA7
5048:  BSF    FA6.1
504A:  BTFSC  FA6.1
504C:  BRA    504A
504E:  BCF    FA6.2
5050:  MOVF   00,W
5052:  IORWF  FF2,F
5054:  MOVLW  0D
5056:  MOVWF  FA9
5058:  MOVFF  4D5,FA8
505C:  BCF    FA6.6
505E:  BCF    FA6.7
5060:  BSF    FA6.2
5062:  MOVF   FF2,W
5064:  MOVWF  00
5066:  BCF    FF2.7
5068:  MOVLW  55
506A:  MOVWF  FA7
506C:  MOVLW  AA
506E:  MOVWF  FA7
5070:  BSF    FA6.1
5072:  BTFSC  FA6.1
5074:  BRA    5072
5076:  BCF    FA6.2
5078:  MOVF   00,W
507A:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
507C:  MOVLW  04
507E:  MOVLB  5
5080:  MOVWF  x01
5082:  MOVLW  FA
5084:  MOVWF  x02
5086:  MOVLB  0
5088:  CALL   0F98
508C:  MOVLB  5
508E:  DECFSZ x01,F
5090:  BRA    5082
5092:  CLRF   x02
5094:  MOVLB  0
5096:  CALL   1002
509A:  MOVLW  01
509C:  MOVLB  4
509E:  MOVWF  xA2
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
50A0:  MOVF   xA2,W
50A2:  SUBLW  0B
50A4:  BTFSS  FD8.2
50A6:  BRA    53A8
....................       
....................       if(visual==1) 
50A8:  BTFSS  x95.4
50AA:  BRA    5236
....................       { 
....................          if(unidad<1) 
50AC:  MOVF   xA3,F
50AE:  BNZ   50B4
....................          {unidad=4;} 
50B0:  MOVLW  04
50B2:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
50B4:  MOVLW  04
50B6:  MOVWF  FEA
50B8:  MOVLW  E1
50BA:  MOVWF  FE9
50BC:  MOVFF  FF2,501
50C0:  BCF    FF2.7
50C2:  MOVLW  00
50C4:  MOVLB  0
50C6:  CALL   0C06
50CA:  TBLRD*-
50CC:  TBLRD*+
50CE:  MOVF   FF5,W
50D0:  MOVWF  FEE
50D2:  IORLW  00
50D4:  BNZ   50CC
50D6:  MOVLB  5
50D8:  BTFSC  x01.7
50DA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
50DC:  MOVLW  04
50DE:  MOVWF  x02
50E0:  MOVLW  E1
50E2:  MOVWF  x01
50E4:  CLRF   x03
50E6:  CLRF   x04
50E8:  MOVLW  01
50EA:  MOVWF  x05
50EC:  MOVLW  02
50EE:  MOVWF  x06
50F0:  MOVLB  0
50F2:  CALL   1630
....................           
....................          if(unidad==4) 
50F6:  MOVLB  4
50F8:  MOVF   xA3,W
50FA:  SUBLW  04
50FC:  BNZ   511C
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
50FE:  MOVFF  4C5,502
5102:  MOVLW  14
5104:  MOVLB  5
5106:  MOVWF  x03
5108:  MOVLW  28
510A:  MOVWF  x04
510C:  MOVLW  01
510E:  MOVWF  x05
5110:  MOVLW  02
5112:  MOVWF  x06
5114:  MOVLB  0
5116:  CALL   2424
....................          else 
511A:  BRA    5136
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
511C:  MOVFF  4C5,502
5120:  MOVLW  14
5122:  MOVLB  5
5124:  MOVWF  x03
5126:  MOVLW  28
5128:  MOVWF  x04
512A:  CLRF   x05
512C:  MOVLW  02
512E:  MOVWF  x06
5130:  MOVLB  0
5132:  CALL   2424
....................           
....................          if(unidad==3) 
5136:  MOVLB  4
5138:  MOVF   xA3,W
513A:  SUBLW  03
513C:  BNZ   515A
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
513E:  MOVFF  4C4,502
5142:  MOVLW  28
5144:  MOVLB  5
5146:  MOVWF  x03
5148:  MOVWF  x04
514A:  MOVLW  01
514C:  MOVWF  x05
514E:  MOVLW  02
5150:  MOVWF  x06
5152:  MOVLB  0
5154:  CALL   2424
....................          else 
5158:  BRA    5172
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
515A:  MOVFF  4C4,502
515E:  MOVLW  28
5160:  MOVLB  5
5162:  MOVWF  x03
5164:  MOVWF  x04
5166:  CLRF   x05
5168:  MOVLW  02
516A:  MOVWF  x06
516C:  MOVLB  0
516E:  CALL   2424
....................           
....................          if(unidad==2) 
5172:  MOVLB  4
5174:  MOVF   xA3,W
5176:  SUBLW  02
5178:  BNZ   5198
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
517A:  MOVFF  4C3,502
517E:  MOVLW  46
5180:  MOVLB  5
5182:  MOVWF  x03
5184:  MOVLW  28
5186:  MOVWF  x04
5188:  MOVLW  01
518A:  MOVWF  x05
518C:  MOVLW  02
518E:  MOVWF  x06
5190:  MOVLB  0
5192:  CALL   2424
....................          else 
5196:  BRA    51B2
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
5198:  MOVFF  4C3,502
519C:  MOVLW  46
519E:  MOVLB  5
51A0:  MOVWF  x03
51A2:  MOVLW  28
51A4:  MOVWF  x04
51A6:  CLRF   x05
51A8:  MOVLW  02
51AA:  MOVWF  x06
51AC:  MOVLB  0
51AE:  CALL   2424
....................           
....................          if(unidad==1) 
51B2:  MOVLB  4
51B4:  DECFSZ xA3,W
51B6:  BRA    51D6
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
51B8:  MOVFF  4C2,502
51BC:  MOVLW  5A
51BE:  MOVLB  5
51C0:  MOVWF  x03
51C2:  MOVLW  28
51C4:  MOVWF  x04
51C6:  MOVLW  01
51C8:  MOVWF  x05
51CA:  MOVLW  02
51CC:  MOVWF  x06
51CE:  MOVLB  0
51D0:  CALL   2424
....................          else 
51D4:  BRA    51F0
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
51D6:  MOVFF  4C2,502
51DA:  MOVLW  5A
51DC:  MOVLB  5
51DE:  MOVWF  x03
51E0:  MOVLW  28
51E2:  MOVWF  x04
51E4:  CLRF   x05
51E6:  MOVLW  02
51E8:  MOVWF  x06
51EA:  MOVLB  0
51EC:  CALL   2424
....................           
....................          strcpy(Menus.Letra,":"); 
51F0:  MOVLW  04
51F2:  MOVWF  FEA
51F4:  MOVLW  E1
51F6:  MOVWF  FE9
51F8:  MOVFF  FF2,501
51FC:  BCF    FF2.7
51FE:  MOVLW  00
5200:  CALL   06BE
5204:  TBLRD*-
5206:  TBLRD*+
5208:  MOVF   FF5,W
520A:  MOVWF  FEE
520C:  IORLW  00
520E:  BNZ   5206
5210:  MOVLB  5
5212:  BTFSC  x01.7
5214:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
5216:  MOVLW  04
5218:  MOVWF  x02
521A:  MOVLW  E1
521C:  MOVWF  x01
521E:  MOVLW  3C
5220:  MOVWF  x03
5222:  MOVLW  2A
5224:  MOVWF  x04
5226:  MOVLW  02
5228:  MOVWF  x05
522A:  MOVWF  x06
522C:  MOVLB  0
522E:  CALL   1630
....................           
....................          visual=0; 
5232:  MOVLB  4
5234:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5236:  BSF    F92.0
5238:  BTFSS  F80.0
523A:  BRA    5278
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
523C:  MOVLW  01
523E:  SUBWF  xA3,W
5240:  CLRF   03
5242:  ADDLW  C2
5244:  MOVWF  FE9
5246:  MOVLW  04
5248:  ADDWFC 03,W
524A:  MOVWF  FEA
524C:  BTFSC  FEF.7
524E:  BRA    5256
5250:  MOVF   FEF,W
5252:  SUBLW  08
5254:  BNC   5278
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
5256:  MOVLW  1E
5258:  MOVLB  5
525A:  MOVWF  x02
525C:  MOVLB  0
525E:  CALL   0F98
5262:  MOVLW  01
5264:  MOVLB  4
5266:  SUBWF  xA3,W
5268:  CLRF   03
526A:  ADDLW  C2
526C:  MOVWF  FE9
526E:  MOVLW  04
5270:  ADDWFC 03,W
5272:  MOVWF  FEA
5274:  INCF   FEF,F
5276:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5278:  BSF    F92.1
527A:  BTFSS  F80.1
527C:  BRA    52BA
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
527E:  MOVLW  01
5280:  SUBWF  xA3,W
5282:  CLRF   03
5284:  ADDLW  C2
5286:  MOVWF  FE9
5288:  MOVLW  04
528A:  ADDWFC 03,W
528C:  MOVWF  FEA
528E:  BTFSC  FEF.7
5290:  BRA    52BA
5292:  MOVF   FEF,W
5294:  SUBLW  00
5296:  BC    52BA
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
5298:  MOVLW  1E
529A:  MOVLB  5
529C:  MOVWF  x02
529E:  MOVLB  0
52A0:  CALL   0F98
52A4:  MOVLW  01
52A6:  MOVLB  4
52A8:  SUBWF  xA3,W
52AA:  CLRF   03
52AC:  ADDLW  C2
52AE:  MOVWF  FE9
52B0:  MOVLW  04
52B2:  ADDWFC 03,W
52B4:  MOVWF  FEA
52B6:  DECF   FEF,F
52B8:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
52BA:  BSF    F92.2
52BC:  BTFSS  F80.2
52BE:  BRA    52D2
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
52C0:  MOVLW  1E
52C2:  MOVLB  5
52C4:  MOVWF  x02
52C6:  MOVLB  0
52C8:  CALL   0F98
52CC:  MOVLB  4
52CE:  DECF   xA3,F
52D0:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
52D2:  BSF    F92.3
52D4:  BTFSS  F80.3
52D6:  BRA    53A8
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
52D8:  MOVLW  04
52DA:  MOVLB  5
52DC:  MOVWF  x01
52DE:  MOVLW  AF
52E0:  MOVWF  x02
52E2:  MOVLB  0
52E4:  CALL   0F98
52E8:  MOVLB  5
52EA:  DECFSZ x01,F
52EC:  BRA    52DE
52EE:  MOVLW  08
52F0:  MOVLB  4
52F2:  MOVWF  xA2
52F4:  MOVLB  5
52F6:  CLRF   x02
52F8:  MOVLB  0
52FA:  CALL   1002
52FE:  MOVLW  01
5300:  MOVLB  4
5302:  MOVWF  xA7
5304:  BSF    x95.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
5306:  CLRF   FA9
5308:  MOVFF  4C2,FA8
530C:  BCF    FA6.6
530E:  BCF    FA6.7
5310:  BSF    FA6.2
5312:  MOVF   FF2,W
5314:  MOVWF  00
5316:  BCF    FF2.7
5318:  MOVLB  F
531A:  MOVLW  55
531C:  MOVWF  FA7
531E:  MOVLW  AA
5320:  MOVWF  FA7
5322:  BSF    FA6.1
5324:  BTFSC  FA6.1
5326:  BRA    5324
5328:  BCF    FA6.2
532A:  MOVF   00,W
532C:  IORWF  FF2,F
532E:  MOVLW  01
5330:  MOVWF  FA9
5332:  MOVFF  4C3,FA8
5336:  BCF    FA6.6
5338:  BCF    FA6.7
533A:  BSF    FA6.2
533C:  MOVF   FF2,W
533E:  MOVWF  00
5340:  BCF    FF2.7
5342:  MOVLW  55
5344:  MOVWF  FA7
5346:  MOVLW  AA
5348:  MOVWF  FA7
534A:  BSF    FA6.1
534C:  BTFSC  FA6.1
534E:  BRA    534C
5350:  BCF    FA6.2
5352:  MOVF   00,W
5354:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
5356:  MOVLW  02
5358:  MOVWF  FA9
535A:  MOVFF  4C4,FA8
535E:  BCF    FA6.6
5360:  BCF    FA6.7
5362:  BSF    FA6.2
5364:  MOVFF  FF2,00
5368:  BCF    FF2.7
536A:  MOVLW  55
536C:  MOVWF  FA7
536E:  MOVLW  AA
5370:  MOVWF  FA7
5372:  BSF    FA6.1
5374:  BTFSC  FA6.1
5376:  BRA    5374
5378:  BCF    FA6.2
537A:  MOVF   00,W
537C:  IORWF  FF2,F
537E:  MOVLW  03
5380:  MOVWF  FA9
5382:  MOVFF  4C5,FA8
5386:  BCF    FA6.6
5388:  BCF    FA6.7
538A:  BSF    FA6.2
538C:  MOVFF  FF2,00
5390:  BCF    FF2.7
5392:  MOVLW  55
5394:  MOVWF  FA7
5396:  MOVLW  AA
5398:  MOVWF  FA7
539A:  BSF    FA6.1
539C:  BTFSC  FA6.1
539E:  BRA    539C
53A0:  BCF    FA6.2
53A2:  MOVF   00,W
53A4:  IORWF  FF2,F
53A6:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
53A8:  MOVF   xA2,W
53AA:  SUBLW  0C
53AC:  BTFSS  FD8.2
53AE:  BRA    56B2
....................       
....................       if(visual==1) 
53B0:  BTFSS  x95.4
53B2:  BRA    553E
....................       { 
....................          if(unidad<1) 
53B4:  MOVF   xA3,F
53B6:  BNZ   53BC
....................          {unidad=4;} 
53B8:  MOVLW  04
53BA:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra," Secado"); 
53BC:  MOVLW  04
53BE:  MOVWF  FEA
53C0:  MOVLW  E1
53C2:  MOVWF  FE9
53C4:  MOVFF  FF2,501
53C8:  BCF    FF2.7
53CA:  MOVLW  00
53CC:  MOVLB  0
53CE:  CALL   0C2A
53D2:  TBLRD*-
53D4:  TBLRD*+
53D6:  MOVF   FF5,W
53D8:  MOVWF  FEE
53DA:  IORLW  00
53DC:  BNZ   53D4
53DE:  MOVLB  5
53E0:  BTFSC  x01.7
53E2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
53E4:  MOVLW  04
53E6:  MOVWF  x02
53E8:  MOVLW  E1
53EA:  MOVWF  x01
53EC:  CLRF   x03
53EE:  CLRF   x04
53F0:  MOVLW  01
53F2:  MOVWF  x05
53F4:  MOVLW  02
53F6:  MOVWF  x06
53F8:  MOVLB  0
53FA:  CALL   1630
....................           
....................          if(unidad==4) 
53FE:  MOVLB  4
5400:  MOVF   xA3,W
5402:  SUBLW  04
5404:  BNZ   5424
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
5406:  MOVFF  4CD,502
540A:  MOVLW  14
540C:  MOVLB  5
540E:  MOVWF  x03
5410:  MOVLW  28
5412:  MOVWF  x04
5414:  MOVLW  01
5416:  MOVWF  x05
5418:  MOVLW  02
541A:  MOVWF  x06
541C:  MOVLB  0
541E:  CALL   2424
....................          else 
5422:  BRA    543E
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
5424:  MOVFF  4CD,502
5428:  MOVLW  14
542A:  MOVLB  5
542C:  MOVWF  x03
542E:  MOVLW  28
5430:  MOVWF  x04
5432:  CLRF   x05
5434:  MOVLW  02
5436:  MOVWF  x06
5438:  MOVLB  0
543A:  CALL   2424
....................           
....................          if(unidad==3) 
543E:  MOVLB  4
5440:  MOVF   xA3,W
5442:  SUBLW  03
5444:  BNZ   5462
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
5446:  MOVFF  4CC,502
544A:  MOVLW  28
544C:  MOVLB  5
544E:  MOVWF  x03
5450:  MOVWF  x04
5452:  MOVLW  01
5454:  MOVWF  x05
5456:  MOVLW  02
5458:  MOVWF  x06
545A:  MOVLB  0
545C:  CALL   2424
....................          else 
5460:  BRA    547A
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
5462:  MOVFF  4CC,502
5466:  MOVLW  28
5468:  MOVLB  5
546A:  MOVWF  x03
546C:  MOVWF  x04
546E:  CLRF   x05
5470:  MOVLW  02
5472:  MOVWF  x06
5474:  MOVLB  0
5476:  CALL   2424
....................           
....................          if(unidad==2) 
547A:  MOVLB  4
547C:  MOVF   xA3,W
547E:  SUBLW  02
5480:  BNZ   54A0
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
5482:  MOVFF  4CB,502
5486:  MOVLW  46
5488:  MOVLB  5
548A:  MOVWF  x03
548C:  MOVLW  28
548E:  MOVWF  x04
5490:  MOVLW  01
5492:  MOVWF  x05
5494:  MOVLW  02
5496:  MOVWF  x06
5498:  MOVLB  0
549A:  CALL   2424
....................          else 
549E:  BRA    54BA
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
54A0:  MOVFF  4CB,502
54A4:  MOVLW  46
54A6:  MOVLB  5
54A8:  MOVWF  x03
54AA:  MOVLW  28
54AC:  MOVWF  x04
54AE:  CLRF   x05
54B0:  MOVLW  02
54B2:  MOVWF  x06
54B4:  MOVLB  0
54B6:  CALL   2424
....................           
....................          if(unidad==1) 
54BA:  MOVLB  4
54BC:  DECFSZ xA3,W
54BE:  BRA    54DE
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
54C0:  MOVFF  4CA,502
54C4:  MOVLW  5A
54C6:  MOVLB  5
54C8:  MOVWF  x03
54CA:  MOVLW  28
54CC:  MOVWF  x04
54CE:  MOVLW  01
54D0:  MOVWF  x05
54D2:  MOVLW  02
54D4:  MOVWF  x06
54D6:  MOVLB  0
54D8:  CALL   2424
....................          else 
54DC:  BRA    54F8
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
54DE:  MOVFF  4CA,502
54E2:  MOVLW  5A
54E4:  MOVLB  5
54E6:  MOVWF  x03
54E8:  MOVLW  28
54EA:  MOVWF  x04
54EC:  CLRF   x05
54EE:  MOVLW  02
54F0:  MOVWF  x06
54F2:  MOVLB  0
54F4:  CALL   2424
....................           
....................          strcpy(Menus.Letra,":"); 
54F8:  MOVLW  04
54FA:  MOVWF  FEA
54FC:  MOVLW  E1
54FE:  MOVWF  FE9
5500:  MOVFF  FF2,501
5504:  BCF    FF2.7
5506:  MOVLW  00
5508:  CALL   06BE
550C:  TBLRD*-
550E:  TBLRD*+
5510:  MOVF   FF5,W
5512:  MOVWF  FEE
5514:  IORLW  00
5516:  BNZ   550E
5518:  MOVLB  5
551A:  BTFSC  x01.7
551C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
551E:  MOVLW  04
5520:  MOVWF  x02
5522:  MOVLW  E1
5524:  MOVWF  x01
5526:  MOVLW  3C
5528:  MOVWF  x03
552A:  MOVLW  2A
552C:  MOVWF  x04
552E:  MOVLW  02
5530:  MOVWF  x05
5532:  MOVWF  x06
5534:  MOVLB  0
5536:  CALL   1630
....................           
....................          visual=0; 
553A:  MOVLB  4
553C:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
553E:  BSF    F92.0
5540:  BTFSS  F80.0
5542:  BRA    5580
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
5544:  MOVLW  01
5546:  SUBWF  xA3,W
5548:  CLRF   03
554A:  ADDLW  CA
554C:  MOVWF  FE9
554E:  MOVLW  04
5550:  ADDWFC 03,W
5552:  MOVWF  FEA
5554:  BTFSC  FEF.7
5556:  BRA    555E
5558:  MOVF   FEF,W
555A:  SUBLW  08
555C:  BNC   5580
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
555E:  MOVLW  1E
5560:  MOVLB  5
5562:  MOVWF  x02
5564:  MOVLB  0
5566:  CALL   0F98
556A:  MOVLW  01
556C:  MOVLB  4
556E:  SUBWF  xA3,W
5570:  CLRF   03
5572:  ADDLW  CA
5574:  MOVWF  FE9
5576:  MOVLW  04
5578:  ADDWFC 03,W
557A:  MOVWF  FEA
557C:  INCF   FEF,F
557E:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5580:  BSF    F92.1
5582:  BTFSS  F80.1
5584:  BRA    55C2
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
5586:  MOVLW  01
5588:  SUBWF  xA3,W
558A:  CLRF   03
558C:  ADDLW  CA
558E:  MOVWF  FE9
5590:  MOVLW  04
5592:  ADDWFC 03,W
5594:  MOVWF  FEA
5596:  BTFSC  FEF.7
5598:  BRA    55C2
559A:  MOVF   FEF,W
559C:  SUBLW  00
559E:  BC    55C2
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
55A0:  MOVLW  1E
55A2:  MOVLB  5
55A4:  MOVWF  x02
55A6:  MOVLB  0
55A8:  CALL   0F98
55AC:  MOVLW  01
55AE:  MOVLB  4
55B0:  SUBWF  xA3,W
55B2:  CLRF   03
55B4:  ADDLW  CA
55B6:  MOVWF  FE9
55B8:  MOVLW  04
55BA:  ADDWFC 03,W
55BC:  MOVWF  FEA
55BE:  DECF   FEF,F
55C0:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
55C2:  BSF    F92.2
55C4:  BTFSS  F80.2
55C6:  BRA    55DA
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
55C8:  MOVLW  1E
55CA:  MOVLB  5
55CC:  MOVWF  x02
55CE:  MOVLB  0
55D0:  CALL   0F98
55D4:  MOVLB  4
55D6:  DECF   xA3,F
55D8:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
55DA:  BSF    F92.3
55DC:  BTFSS  F80.3
55DE:  BRA    56B2
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
55E0:  MOVLW  04
55E2:  MOVLB  5
55E4:  MOVWF  x01
55E6:  MOVLW  AF
55E8:  MOVWF  x02
55EA:  MOVLB  0
55EC:  CALL   0F98
55F0:  MOVLB  5
55F2:  DECFSZ x01,F
55F4:  BRA    55E6
55F6:  MOVLW  08
55F8:  MOVLB  4
55FA:  MOVWF  xA2
55FC:  MOVLB  5
55FE:  CLRF   x02
5600:  MOVLB  0
5602:  CALL   1002
5606:  MOVLW  01
5608:  MOVLB  4
560A:  MOVWF  xA7
560C:  BSF    x95.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
560E:  MOVLW  04
5610:  MOVWF  FA9
5612:  MOVFF  4CA,FA8
5616:  BCF    FA6.6
5618:  BCF    FA6.7
561A:  BSF    FA6.2
561C:  MOVF   FF2,W
561E:  MOVWF  00
5620:  BCF    FF2.7
5622:  MOVLB  F
5624:  MOVLW  55
5626:  MOVWF  FA7
5628:  MOVLW  AA
562A:  MOVWF  FA7
562C:  BSF    FA6.1
562E:  BTFSC  FA6.1
5630:  BRA    562E
5632:  BCF    FA6.2
5634:  MOVF   00,W
5636:  IORWF  FF2,F
5638:  MOVLW  05
563A:  MOVWF  FA9
563C:  MOVFF  4CB,FA8
5640:  BCF    FA6.6
5642:  BCF    FA6.7
5644:  BSF    FA6.2
5646:  MOVF   FF2,W
5648:  MOVWF  00
564A:  BCF    FF2.7
564C:  MOVLW  55
564E:  MOVWF  FA7
5650:  MOVLW  AA
5652:  MOVWF  FA7
5654:  BSF    FA6.1
5656:  BTFSC  FA6.1
5658:  BRA    5656
565A:  BCF    FA6.2
565C:  MOVF   00,W
565E:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
5660:  MOVLW  06
5662:  MOVWF  FA9
5664:  MOVFF  4CC,FA8
5668:  BCF    FA6.6
566A:  BCF    FA6.7
566C:  BSF    FA6.2
566E:  MOVFF  FF2,00
5672:  BCF    FF2.7
5674:  MOVLW  55
5676:  MOVWF  FA7
5678:  MOVLW  AA
567A:  MOVWF  FA7
567C:  BSF    FA6.1
567E:  BTFSC  FA6.1
5680:  BRA    567E
5682:  BCF    FA6.2
5684:  MOVF   00,W
5686:  IORWF  FF2,F
5688:  MOVLW  07
568A:  MOVWF  FA9
568C:  MOVFF  4CD,FA8
5690:  BCF    FA6.6
5692:  BCF    FA6.7
5694:  BSF    FA6.2
5696:  MOVFF  FF2,00
569A:  BCF    FF2.7
569C:  MOVLW  55
569E:  MOVWF  FA7
56A0:  MOVLW  AA
56A2:  MOVWF  FA7
56A4:  BSF    FA6.1
56A6:  BTFSC  FA6.1
56A8:  BRA    56A6
56AA:  BCF    FA6.2
56AC:  MOVF   00,W
56AE:  IORWF  FF2,F
56B0:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
56B2:  MOVF   xA2,W
56B4:  SUBLW  0D
56B6:  BTFSS  FD8.2
56B8:  BRA    57F0
....................       
....................       if(visual==1) 
56BA:  BTFSS  x95.4
56BC:  BRA    5724
....................       { 
....................          glcd_fillScreen(OFF); 
56BE:  MOVLB  5
56C0:  CLRF   x02
56C2:  MOVLB  0
56C4:  CALL   1002
....................          strcpy(Menus.Letra,"Temperatura"); 
56C8:  MOVLW  04
56CA:  MOVWF  FEA
56CC:  MOVLW  E1
56CE:  MOVWF  FE9
56D0:  MOVFF  FF2,501
56D4:  BCF    FF2.7
56D6:  MOVLW  00
56D8:  CALL   0B6A
56DC:  TBLRD*-
56DE:  TBLRD*+
56E0:  MOVF   FF5,W
56E2:  MOVWF  FEE
56E4:  IORLW  00
56E6:  BNZ   56DE
56E8:  MOVLB  5
56EA:  BTFSC  x01.7
56EC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
56EE:  MOVLW  04
56F0:  MOVWF  x02
56F2:  MOVLW  E1
56F4:  MOVWF  x01
56F6:  CLRF   x03
56F8:  CLRF   x04
56FA:  MOVLW  01
56FC:  MOVWF  x05
56FE:  MOVLW  02
5700:  MOVWF  x06
5702:  MOVLB  0
5704:  CALL   1630
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
5708:  MOVFF  4A5,502
570C:  MOVLW  1E
570E:  MOVLB  5
5710:  MOVWF  x03
5712:  MOVWF  x04
5714:  CLRF   x05
5716:  MOVLW  03
5718:  MOVWF  x06
571A:  MOVLB  0
571C:  CALL   2424
....................           
....................          visual=0; 
5720:  MOVLB  4
5722:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
5724:  BSF    F92.0
5726:  BTFSS  F80.0
5728:  BRA    575C
....................          {   
....................             if(Setpoint<134) 
572A:  MOVF   xA5,W
572C:  SUBLW  85
572E:  BNC   575C
....................             { 
....................                if(Setpoint<100) 
5730:  MOVF   xA5,W
5732:  SUBLW  63
5734:  BNC   574A
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
5736:  MOVLW  64
5738:  MOVWF  xA5
573A:  MOVLB  5
573C:  MOVWF  x02
573E:  MOVLB  0
5740:  CALL   0F98
5744:  MOVLB  4
5746:  BSF    x95.4
....................                } 
....................                else 
5748:  BRA    575C
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
574A:  MOVLW  1E
574C:  MOVLB  5
574E:  MOVWF  x02
5750:  MOVLB  0
5752:  CALL   0F98
5756:  MOVLB  4
5758:  INCF   xA5,F
575A:  BSF    x95.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
575C:  BSF    F92.1
575E:  BTFSS  F80.1
5760:  BRA    577A
....................          {   
....................             if(Setpoint>105) 
5762:  MOVF   xA5,W
5764:  SUBLW  69
5766:  BC    577A
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
5768:  MOVLW  1E
576A:  MOVLB  5
576C:  MOVWF  x02
576E:  MOVLB  0
5770:  CALL   0F98
5774:  MOVLB  4
5776:  DECF   xA5,F
5778:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
577A:  BSF    F92.2
577C:  BTFSS  F80.2
577E:  BRA    5790
....................          {   
....................             delay_ms(30);visual=1; 
5780:  MOVLW  1E
5782:  MOVLB  5
5784:  MOVWF  x02
5786:  MOVLB  0
5788:  CALL   0F98
578C:  MOVLB  4
578E:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5790:  BSF    F92.3
5792:  BTFSS  F80.3
5794:  BRA    57F0
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5796:  MOVLW  04
5798:  MOVLB  5
579A:  MOVWF  x01
579C:  MOVLW  AF
579E:  MOVWF  x02
57A0:  MOVLB  0
57A2:  CALL   0F98
57A6:  MOVLB  5
57A8:  DECFSZ x01,F
57AA:  BRA    579C
57AC:  MOVLW  08
57AE:  MOVLB  4
57B0:  MOVWF  xA2
57B2:  MOVLB  5
57B4:  CLRF   x02
57B6:  MOVLB  0
57B8:  CALL   1002
57BC:  MOVLW  01
57BE:  MOVLB  4
57C0:  MOVWF  xA7
57C2:  BSF    x95.4
....................             write_eeprom(8,Setpoint); 
57C4:  MOVLW  08
57C6:  MOVWF  FA9
57C8:  MOVFF  4A5,FA8
57CC:  BCF    FA6.6
57CE:  BCF    FA6.7
57D0:  BSF    FA6.2
57D2:  MOVF   FF2,W
57D4:  MOVWF  00
57D6:  BCF    FF2.7
57D8:  MOVLB  F
57DA:  MOVLW  55
57DC:  MOVWF  FA7
57DE:  MOVLW  AA
57E0:  MOVWF  FA7
57E2:  BSF    FA6.1
57E4:  BTFSC  FA6.1
57E6:  BRA    57E4
57E8:  BCF    FA6.2
57EA:  MOVF   00,W
57EC:  IORWF  FF2,F
57EE:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
57F0:  MOVF   xA2,W
57F2:  SUBLW  0E
57F4:  BTFSS  FD8.2
57F6:  BRA    5AE6
....................       if(Nivel>6) 
57F8:  MOVF   xB5,F
57FA:  BNZ   5802
57FC:  MOVF   xB4,W
57FE:  SUBLW  06
5800:  BC    5808
....................          Nivel=6; 
5802:  CLRF   xB5
5804:  MOVLW  06
5806:  MOVWF  xB4
....................           
....................       if(visual==1) 
5808:  BTFSS  x95.4
580A:  BRA    586C
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
580C:  MOVLW  04
580E:  MOVWF  FEA
5810:  MOVLW  E1
5812:  MOVWF  FE9
5814:  MOVFF  FF2,501
5818:  BCF    FF2.7
581A:  MOVLW  00
581C:  MOVLB  0
581E:  CALL   0C4C
5822:  TBLRD*-
5824:  TBLRD*+
5826:  MOVF   FF5,W
5828:  MOVWF  FEE
582A:  IORLW  00
582C:  BNZ   5824
582E:  MOVLB  5
5830:  BTFSC  x01.7
5832:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5834:  MOVLW  04
5836:  MOVWF  x02
5838:  MOVLW  E1
583A:  MOVWF  x01
583C:  CLRF   x03
583E:  CLRF   x04
5840:  MOVLW  01
5842:  MOVWF  x05
5844:  MOVLW  02
5846:  MOVWF  x06
5848:  MOVLB  0
584A:  CALL   1630
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
584E:  MOVFF  4B4,502
5852:  MOVLW  32
5854:  MOVLB  5
5856:  MOVWF  x03
5858:  MOVLW  28
585A:  MOVWF  x04
585C:  CLRF   x05
585E:  MOVLW  02
5860:  MOVWF  x06
5862:  MOVLB  0
5864:  CALL   2424
....................           
....................          visual=0; 
5868:  MOVLB  4
586A:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
586C:  BSF    F92.0
586E:  BTFSS  F80.0
5870:  BRA    5892
....................          {   
....................             if(Nivel<6) 
5872:  MOVF   xB5,F
5874:  BNZ   5892
5876:  MOVF   xB4,W
5878:  SUBLW  05
587A:  BNC   5892
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
587C:  MOVLW  1E
587E:  MOVLB  5
5880:  MOVWF  x02
5882:  MOVLB  0
5884:  CALL   0F98
5888:  MOVLB  4
588A:  INCF   xB4,F
588C:  BTFSC  FD8.2
588E:  INCF   xB5,F
5890:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5892:  BSF    F92.1
5894:  BTFSS  F80.1
5896:  BRA    58BA
....................          {   
....................             if(Nivel>1) 
5898:  MOVF   xB5,F
589A:  BNZ   58A2
589C:  MOVF   xB4,W
589E:  SUBLW  01
58A0:  BC    58BA
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
58A2:  MOVLW  1E
58A4:  MOVLB  5
58A6:  MOVWF  x02
58A8:  MOVLB  0
58AA:  CALL   0F98
58AE:  MOVLB  4
58B0:  MOVF   xB4,W
58B2:  BTFSC  FD8.2
58B4:  DECF   xB5,F
58B6:  DECF   xB4,F
58B8:  BSF    x95.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
58BA:  BTFSS  x95.5
58BC:  BRA    5A76
....................          { 
....................             if(RIGHT)//Si oprime SET 
58BE:  BSF    F92.2
58C0:  BTFSS  F80.2
58C2:  BRA    5A74
....................             {   
....................                write_eeprom(9,Nivel); 
58C4:  MOVLW  09
58C6:  MOVWF  FA9
58C8:  MOVFF  4B4,FA8
58CC:  BCF    FA6.6
58CE:  BCF    FA6.7
58D0:  BSF    FA6.2
58D2:  MOVF   FF2,W
58D4:  MOVWF  00
58D6:  BCF    FF2.7
58D8:  MOVLB  F
58DA:  MOVLW  55
58DC:  MOVWF  FA7
58DE:  MOVLW  AA
58E0:  MOVWF  FA7
58E2:  BSF    FA6.1
58E4:  BTFSC  FA6.1
58E6:  BRA    58E4
58E8:  BCF    FA6.2
58EA:  MOVF   00,W
58EC:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
58EE:  MOVLW  14
58F0:  MOVLB  4
58F2:  MOVWF  xA2
58F4:  MOVLW  0F
58F6:  MOVLB  5
58F8:  MOVWF  x13
58FA:  MOVLW  12
58FC:  MOVWF  x14
58FE:  MOVLW  1E
5900:  MOVWF  x15
5902:  MOVLW  35
5904:  MOVWF  x16
5906:  CLRF   x17
5908:  MOVLW  01
590A:  MOVWF  x18
590C:  MOVLB  0
590E:  CALL   156E
5912:  MOVLB  4
5914:  CLRF   xA9
5916:  MOVLW  C0
5918:  IORWF  FF2,F
591A:  MOVLB  5
591C:  CLRF   x02
591E:  MOVLB  0
5920:  CALL   1002
....................                strcpy(Menus.Letra,"Calentando"); 
5924:  MOVLW  04
5926:  MOVWF  FEA
5928:  MOVLW  E1
592A:  MOVWF  FE9
592C:  MOVFF  FF2,501
5930:  BCF    FF2.7
5932:  MOVLW  00
5934:  CALL   0966
5938:  TBLRD*-
593A:  TBLRD*+
593C:  MOVF   FF5,W
593E:  MOVWF  FEE
5940:  IORLW  00
5942:  BNZ   593A
5944:  MOVLB  5
5946:  BTFSC  x01.7
5948:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
594A:  MOVLW  04
594C:  MOVWF  x02
594E:  MOVLW  E1
5950:  MOVWF  x01
5952:  CLRF   x03
5954:  MOVLW  37
5956:  MOVWF  x04
5958:  MOVLW  02
595A:  MOVWF  x05
595C:  MOVLW  01
595E:  MOVWF  x06
5960:  MOVLB  0
5962:  CALL   1630
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
5966:  MOVLW  0F
5968:  MOVLB  5
596A:  MOVWF  x13
596C:  MOVLW  12
596E:  MOVWF  x14
5970:  MOVLW  1E
5972:  MOVWF  x15
5974:  MOVLW  35
5976:  MOVWF  x16
5978:  CLRF   x17
597A:  MOVLW  01
597C:  MOVWF  x18
597E:  MOVLB  0
5980:  CALL   156E
....................                glcd_imagen(5); 
5984:  MOVLW  05
5986:  MOVLB  5
5988:  MOVWF  x01
598A:  MOVLB  0
598C:  CALL   2078
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5990:  MOVLW  04
5992:  MOVWF  FEA
5994:  MOVLW  E1
5996:  MOVWF  FE9
5998:  MOVFF  FF2,501
599C:  BCF    FF2.7
599E:  MOVLW  00
59A0:  CALL   098C
59A4:  TBLRD*-
59A6:  TBLRD*+
59A8:  MOVF   FF5,W
59AA:  MOVWF  FEE
59AC:  IORLW  00
59AE:  BNZ   59A6
59B0:  MOVLB  5
59B2:  BTFSC  x01.7
59B4:  BSF    FF2.7
59B6:  MOVLW  04
59B8:  MOVWF  x02
59BA:  MOVLW  E1
59BC:  MOVWF  x01
59BE:  CLRF   x03
59C0:  CLRF   x04
59C2:  MOVLW  02
59C4:  MOVWF  x05
59C6:  MOVLW  01
59C8:  MOVWF  x06
59CA:  MOVLB  0
59CC:  CALL   1630
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
59D0:  MOVLW  04
59D2:  MOVWF  FEA
59D4:  MOVLW  E1
59D6:  MOVWF  FE9
59D8:  MOVFF  FF2,501
59DC:  BCF    FF2.7
59DE:  MOVLW  00
59E0:  CALL   09AE
59E4:  TBLRD*-
59E6:  TBLRD*+
59E8:  MOVF   FF5,W
59EA:  MOVWF  FEE
59EC:  IORLW  00
59EE:  BNZ   59E6
59F0:  MOVLB  5
59F2:  BTFSC  x01.7
59F4:  BSF    FF2.7
59F6:  MOVLW  04
59F8:  MOVWF  x02
59FA:  MOVLW  E1
59FC:  MOVWF  x01
59FE:  CLRF   x03
5A00:  MOVLW  08
5A02:  MOVWF  x04
5A04:  MOVLW  02
5A06:  MOVWF  x05
5A08:  MOVLW  01
5A0A:  MOVWF  x06
5A0C:  MOVLB  0
5A0E:  CALL   1630
....................                glcd_circle(95,40,2,NO,ON); 
5A12:  MOVLW  5F
5A14:  MOVLB  5
5A16:  MOVWF  x01
5A18:  MOVLW  28
5A1A:  MOVWF  x02
5A1C:  MOVLW  02
5A1E:  MOVWF  x03
5A20:  CLRF   x04
5A22:  MOVLW  01
5A24:  MOVWF  x05
5A26:  MOVLB  0
5A28:  CALL   2174
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5A2C:  MOVLW  04
5A2E:  MOVWF  FEA
5A30:  MOVLW  E1
5A32:  MOVWF  FE9
5A34:  MOVFF  FF2,501
5A38:  BCF    FF2.7
5A3A:  MOVLW  00
5A3C:  CALL   09D0
5A40:  TBLRD*-
5A42:  TBLRD*+
5A44:  MOVF   FF5,W
5A46:  MOVWF  FEE
5A48:  IORLW  00
5A4A:  BNZ   5A42
5A4C:  MOVLB  5
5A4E:  BTFSC  x01.7
5A50:  BSF    FF2.7
5A52:  MOVLW  04
5A54:  MOVWF  x02
5A56:  MOVLW  E1
5A58:  MOVWF  x01
5A5A:  MOVLW  66
5A5C:  MOVWF  x03
5A5E:  MOVLW  28
5A60:  MOVWF  x04
5A62:  MOVLW  02
5A64:  MOVWF  x05
5A66:  MOVWF  x06
5A68:  MOVLB  0
5A6A:  CALL   1630
....................                MuestraTiemposProgramados(); 
5A6E:  CALL   257C
5A72:  MOVLB  4
....................             }       
....................          } 
....................          else 
5A74:  BRA    5AE6
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5A76:  BSF    F92.3
5A78:  BTFSS  F80.3
5A7A:  BRA    5AE6
....................             { 
....................                if(Nivel<6) 
5A7C:  MOVF   xB5,F
5A7E:  BNZ   5A8A
5A80:  MOVF   xB4,W
5A82:  SUBLW  05
5A84:  BNC   5A8A
....................                { 
....................                   desfoguelento=1; 
5A86:  BSF    x95.5
....................                } 
....................                else 
5A88:  BRA    5A8C
....................                { 
....................                   desfoguelento=0; 
5A8A:  BCF    x95.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5A8C:  MOVLW  04
5A8E:  MOVLB  5
5A90:  MOVWF  x01
5A92:  MOVLW  AF
5A94:  MOVWF  x02
5A96:  MOVLB  0
5A98:  CALL   0F98
5A9C:  MOVLB  5
5A9E:  DECFSZ x01,F
5AA0:  BRA    5A92
5AA2:  MOVLW  08
5AA4:  MOVLB  4
5AA6:  MOVWF  xA2
5AA8:  MOVLB  5
5AAA:  CLRF   x02
5AAC:  MOVLB  0
5AAE:  CALL   1002
5AB2:  MOVLW  01
5AB4:  MOVLB  4
5AB6:  MOVWF  xA7
5AB8:  BSF    x95.4
....................                write_eeprom(9,Nivel); 
5ABA:  MOVLW  09
5ABC:  MOVWF  FA9
5ABE:  MOVFF  4B4,FA8
5AC2:  BCF    FA6.6
5AC4:  BCF    FA6.7
5AC6:  BSF    FA6.2
5AC8:  MOVF   FF2,W
5ACA:  MOVWF  00
5ACC:  BCF    FF2.7
5ACE:  MOVLB  F
5AD0:  MOVLW  55
5AD2:  MOVWF  FA7
5AD4:  MOVLW  AA
5AD6:  MOVWF  FA7
5AD8:  BSF    FA6.1
5ADA:  BTFSC  FA6.1
5ADC:  BRA    5ADA
5ADE:  BCF    FA6.2
5AE0:  MOVF   00,W
5AE2:  IORWF  FF2,F
5AE4:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5AE6:  MOVF   xA2,W
5AE8:  SUBLW  0F
5AEA:  BTFSS  FD8.2
5AEC:  BRA    5E20
....................        
....................       if(visual==1) 
5AEE:  BTFSS  x95.4
5AF0:  BRA    5C56
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5AF2:  MOVLW  04
5AF4:  MOVWF  FEA
5AF6:  MOVLW  E1
5AF8:  MOVWF  FE9
5AFA:  MOVFF  FF2,501
5AFE:  BCF    FF2.7
5B00:  MOVLW  00
5B02:  MOVLB  0
5B04:  CALL   0BBC
5B08:  TBLRD*-
5B0A:  TBLRD*+
5B0C:  MOVF   FF5,W
5B0E:  MOVWF  FEE
5B10:  IORLW  00
5B12:  BNZ   5B0A
5B14:  MOVLB  5
5B16:  BTFSC  x01.7
5B18:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5B1A:  MOVLW  04
5B1C:  MOVWF  x02
5B1E:  MOVLW  E1
5B20:  MOVWF  x01
5B22:  CLRF   x03
5B24:  CLRF   x04
5B26:  MOVLW  01
5B28:  MOVWF  x05
5B2A:  MOVLW  02
5B2C:  MOVWF  x06
5B2E:  MOVLB  0
5B30:  CALL   1630
....................           
....................          if(Opcion==2) 
5B34:  MOVLB  4
5B36:  MOVF   xA7,W
5B38:  SUBLW  02
5B3A:  BNZ   5BC6
....................          {strcpy(Menus.Letra,"SI"); 
5B3C:  MOVLW  04
5B3E:  MOVWF  FEA
5B40:  MOVLW  E1
5B42:  MOVWF  FE9
5B44:  MOVFF  FF2,501
5B48:  BCF    FF2.7
5B4A:  MOVLW  00
5B4C:  MOVLB  0
5B4E:  CALL   0C70
5B52:  TBLRD*-
5B54:  TBLRD*+
5B56:  MOVF   FF5,W
5B58:  MOVWF  FEE
5B5A:  IORLW  00
5B5C:  BNZ   5B54
5B5E:  MOVLB  5
5B60:  BTFSC  x01.7
5B62:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5B64:  MOVLW  04
5B66:  MOVWF  x02
5B68:  MOVLW  E1
5B6A:  MOVWF  x01
5B6C:  MOVLW  32
5B6E:  MOVWF  x03
5B70:  MOVLW  19
5B72:  MOVWF  x04
5B74:  MOVLW  01
5B76:  MOVWF  x05
5B78:  MOVLW  02
5B7A:  MOVWF  x06
5B7C:  MOVLB  0
5B7E:  CALL   1630
....................          strcpy(Menus.Letra,"NO"); 
5B82:  MOVLW  04
5B84:  MOVWF  FEA
5B86:  MOVLW  E1
5B88:  MOVWF  FE9
5B8A:  MOVFF  FF2,501
5B8E:  BCF    FF2.7
5B90:  MOVLW  00
5B92:  CALL   0C8E
5B96:  TBLRD*-
5B98:  TBLRD*+
5B9A:  MOVF   FF5,W
5B9C:  MOVWF  FEE
5B9E:  IORLW  00
5BA0:  BNZ   5B98
5BA2:  MOVLB  5
5BA4:  BTFSC  x01.7
5BA6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5BA8:  MOVLW  04
5BAA:  MOVWF  x02
5BAC:  MOVLW  E1
5BAE:  MOVWF  x01
5BB0:  MOVLW  32
5BB2:  MOVWF  x03
5BB4:  MOVLW  2D
5BB6:  MOVWF  x04
5BB8:  CLRF   x05
5BBA:  MOVLW  02
5BBC:  MOVWF  x06
5BBE:  MOVLB  0
5BC0:  CALL   1630
5BC4:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
5BC6:  DECFSZ xA7,W
5BC8:  BRA    5C54
....................          {strcpy(Menus.Letra,"SI"); 
5BCA:  MOVLW  04
5BCC:  MOVWF  FEA
5BCE:  MOVLW  E1
5BD0:  MOVWF  FE9
5BD2:  MOVFF  FF2,501
5BD6:  BCF    FF2.7
5BD8:  MOVLW  00
5BDA:  MOVLB  0
5BDC:  CALL   0C70
5BE0:  TBLRD*-
5BE2:  TBLRD*+
5BE4:  MOVF   FF5,W
5BE6:  MOVWF  FEE
5BE8:  IORLW  00
5BEA:  BNZ   5BE2
5BEC:  MOVLB  5
5BEE:  BTFSC  x01.7
5BF0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5BF2:  MOVLW  04
5BF4:  MOVWF  x02
5BF6:  MOVLW  E1
5BF8:  MOVWF  x01
5BFA:  MOVLW  32
5BFC:  MOVWF  x03
5BFE:  MOVLW  19
5C00:  MOVWF  x04
5C02:  CLRF   x05
5C04:  MOVLW  02
5C06:  MOVWF  x06
5C08:  MOVLB  0
5C0A:  CALL   1630
....................          strcpy(Menus.Letra,"NO"); 
5C0E:  MOVLW  04
5C10:  MOVWF  FEA
5C12:  MOVLW  E1
5C14:  MOVWF  FE9
5C16:  MOVFF  FF2,501
5C1A:  BCF    FF2.7
5C1C:  MOVLW  00
5C1E:  CALL   0C8E
5C22:  TBLRD*-
5C24:  TBLRD*+
5C26:  MOVF   FF5,W
5C28:  MOVWF  FEE
5C2A:  IORLW  00
5C2C:  BNZ   5C24
5C2E:  MOVLB  5
5C30:  BTFSC  x01.7
5C32:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5C34:  MOVLW  04
5C36:  MOVWF  x02
5C38:  MOVLW  E1
5C3A:  MOVWF  x01
5C3C:  MOVLW  32
5C3E:  MOVWF  x03
5C40:  MOVLW  2D
5C42:  MOVWF  x04
5C44:  MOVLW  01
5C46:  MOVWF  x05
5C48:  MOVLW  02
5C4A:  MOVWF  x06
5C4C:  MOVLB  0
5C4E:  CALL   1630
5C52:  MOVLB  4
....................          } 
....................          visual=0; 
5C54:  BCF    x95.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5C56:  BSF    F92.0
5C58:  BTFSS  F80.0
5C5A:  BRA    5C66
....................       { 
....................          if(Opcion<2) 
5C5C:  MOVF   xA7,W
5C5E:  SUBLW  01
5C60:  BNC   5C64
....................          { 
....................             Opcion++; 
5C62:  INCF   xA7,F
....................          } 
....................          visual=1; 
5C64:  BSF    x95.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5C66:  BSF    F92.1
5C68:  BTFSS  F80.1
5C6A:  BRA    5C76
....................       {   
....................          if(Opcion>1) 
5C6C:  MOVF   xA7,W
5C6E:  SUBLW  01
5C70:  BC    5C74
....................          { 
....................             Opcion--; 
5C72:  DECF   xA7,F
....................          }   
....................          visual=1; 
5C74:  BSF    x95.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5C76:  BSF    F92.2
5C78:  BTFSS  F80.2
5C7A:  BRA    5DEC
....................       {   
....................          if(Opcion==2) 
5C7C:  MOVF   xA7,W
5C7E:  SUBLW  02
5C80:  BTFSS  FD8.2
5C82:  BRA    5DBE
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5C84:  MOVLW  14
5C86:  MOVWF  xA2
5C88:  MOVLW  0F
5C8A:  MOVLB  5
5C8C:  MOVWF  x13
5C8E:  MOVLW  12
5C90:  MOVWF  x14
5C92:  MOVLW  1E
5C94:  MOVWF  x15
5C96:  MOVLW  35
5C98:  MOVWF  x16
5C9A:  CLRF   x17
5C9C:  MOVLW  01
5C9E:  MOVWF  x18
5CA0:  MOVLB  0
5CA2:  CALL   156E
5CA6:  MOVLB  4
5CA8:  CLRF   xA9
5CAA:  MOVLW  C0
5CAC:  IORWF  FF2,F
5CAE:  MOVLB  5
5CB0:  CLRF   x02
5CB2:  MOVLB  0
5CB4:  CALL   1002
....................             strcpy(Menus.Letra,"Calentando"); 
5CB8:  MOVLW  04
5CBA:  MOVWF  FEA
5CBC:  MOVLW  E1
5CBE:  MOVWF  FE9
5CC0:  MOVFF  FF2,501
5CC4:  BCF    FF2.7
5CC6:  MOVLW  00
5CC8:  CALL   0966
5CCC:  TBLRD*-
5CCE:  TBLRD*+
5CD0:  MOVF   FF5,W
5CD2:  MOVWF  FEE
5CD4:  IORLW  00
5CD6:  BNZ   5CCE
5CD8:  MOVLB  5
5CDA:  BTFSC  x01.7
5CDC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5CDE:  MOVLW  04
5CE0:  MOVWF  x02
5CE2:  MOVLW  E1
5CE4:  MOVWF  x01
5CE6:  CLRF   x03
5CE8:  MOVLW  37
5CEA:  MOVWF  x04
5CEC:  MOVLW  02
5CEE:  MOVWF  x05
5CF0:  MOVLW  01
5CF2:  MOVWF  x06
5CF4:  MOVLB  0
5CF6:  CALL   1630
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5CFA:  MOVLW  0F
5CFC:  MOVLB  5
5CFE:  MOVWF  x13
5D00:  MOVLW  12
5D02:  MOVWF  x14
5D04:  MOVLW  1E
5D06:  MOVWF  x15
5D08:  MOVLW  35
5D0A:  MOVWF  x16
5D0C:  CLRF   x17
5D0E:  MOVLW  01
5D10:  MOVWF  x18
5D12:  MOVLB  0
5D14:  CALL   156E
....................             glcd_imagen(5); 
5D18:  MOVLW  05
5D1A:  MOVLB  5
5D1C:  MOVWF  x01
5D1E:  MOVLB  0
5D20:  CALL   2078
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5D24:  MOVLW  04
5D26:  MOVWF  FEA
5D28:  MOVLW  E1
5D2A:  MOVWF  FE9
5D2C:  MOVFF  FF2,501
5D30:  BCF    FF2.7
5D32:  MOVLW  00
5D34:  CALL   098C
5D38:  TBLRD*-
5D3A:  TBLRD*+
5D3C:  MOVF   FF5,W
5D3E:  MOVWF  FEE
5D40:  IORLW  00
5D42:  BNZ   5D3A
5D44:  MOVLB  5
5D46:  BTFSC  x01.7
5D48:  BSF    FF2.7
5D4A:  MOVLW  04
5D4C:  MOVWF  x02
5D4E:  MOVLW  E1
5D50:  MOVWF  x01
5D52:  CLRF   x03
5D54:  CLRF   x04
5D56:  MOVLW  02
5D58:  MOVWF  x05
5D5A:  MOVLW  01
5D5C:  MOVWF  x06
5D5E:  MOVLB  0
5D60:  CALL   1630
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5D64:  MOVLW  04
5D66:  MOVWF  FEA
5D68:  MOVLW  E1
5D6A:  MOVWF  FE9
5D6C:  MOVFF  FF2,501
5D70:  BCF    FF2.7
5D72:  MOVLW  00
5D74:  CALL   09AE
5D78:  TBLRD*-
5D7A:  TBLRD*+
5D7C:  MOVF   FF5,W
5D7E:  MOVWF  FEE
5D80:  IORLW  00
5D82:  BNZ   5D7A
5D84:  MOVLB  5
5D86:  BTFSC  x01.7
5D88:  BSF    FF2.7
5D8A:  MOVLW  04
5D8C:  MOVWF  x02
5D8E:  MOVLW  E1
5D90:  MOVWF  x01
5D92:  CLRF   x03
5D94:  MOVLW  08
5D96:  MOVWF  x04
5D98:  MOVLW  02
5D9A:  MOVWF  x05
5D9C:  MOVLW  01
5D9E:  MOVWF  x06
5DA0:  MOVLB  0
5DA2:  CALL   1630
....................             MuestraTiemposProgramados(); 
5DA6:  CALL   257C
....................             if(Nivel<6) 
5DAA:  MOVLB  4
5DAC:  MOVF   xB5,F
5DAE:  BNZ   5DBA
5DB0:  MOVF   xB4,W
5DB2:  SUBLW  05
5DB4:  BNC   5DBA
....................                { 
....................                   desfoguelento=1; 
5DB6:  BSF    x95.5
....................                } 
....................                else 
5DB8:  BRA    5DBC
....................                { 
....................                   desfoguelento=0; 
5DBA:  BCF    x95.5
....................                } 
....................          } 
....................          else 
5DBC:  BRA    5DEC
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DBE:  MOVLW  04
5DC0:  MOVLB  5
5DC2:  MOVWF  x01
5DC4:  MOVLW  AF
5DC6:  MOVWF  x02
5DC8:  MOVLB  0
5DCA:  CALL   0F98
5DCE:  MOVLB  5
5DD0:  DECFSZ x01,F
5DD2:  BRA    5DC4
5DD4:  MOVLW  08
5DD6:  MOVLB  4
5DD8:  MOVWF  xA2
5DDA:  MOVLB  5
5DDC:  CLRF   x02
5DDE:  MOVLB  0
5DE0:  CALL   1002
5DE4:  MOVLW  01
5DE6:  MOVLB  4
5DE8:  MOVWF  xA7
5DEA:  BSF    x95.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5DEC:  BSF    F92.3
5DEE:  BTFSS  F80.3
5DF0:  BRA    5E20
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DF2:  MOVLW  04
5DF4:  MOVLB  5
5DF6:  MOVWF  x01
5DF8:  MOVLW  AF
5DFA:  MOVWF  x02
5DFC:  MOVLB  0
5DFE:  CALL   0F98
5E02:  MOVLB  5
5E04:  DECFSZ x01,F
5E06:  BRA    5DF8
5E08:  MOVLW  08
5E0A:  MOVLB  4
5E0C:  MOVWF  xA2
5E0E:  MOVLB  5
5E10:  CLRF   x02
5E12:  MOVLB  0
5E14:  CALL   1002
5E18:  MOVLW  01
5E1A:  MOVLB  4
5E1C:  MOVWF  xA7
5E1E:  BSF    x95.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
5E20:  MOVF   xA2,W
5E22:  SUBLW  14
5E24:  BTFSS  FD8.2
5E26:  GOTO   69CC
....................     
....................    Lectura_Esclavos(); 
5E2A:  MOVLB  0
5E2C:  CALL   1EBE
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
5E30:  MOVLB  4
5E32:  BTFSS  x96.1
5E34:  BRA    5FB8
5E36:  DECFSZ x8D,W
5E38:  BRA    5FB8
5E3A:  DECFSZ x8E,W
5E3C:  BRA    5FB8
5E3E:  MOVF   xA8,W
5E40:  SUBLW  01
5E42:  BTFSS  FD8.0
5E44:  BRA    5FB8
5E46:  MOVF   x92,F
5E48:  BTFSS  FD8.2
5E4A:  BRA    5FB8
5E4C:  MOVF   x93,F
5E4E:  BTFSS  FD8.2
5E50:  BRA    5FB8
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
5E52:  MOVF   xA8,F
5E54:  BNZ   5EEE
5E56:  BTFSC  x96.2
5E58:  BRA    5EEE
....................       { 
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
5E5A:  MOVLW  0F
5E5C:  MOVLB  5
5E5E:  MOVWF  x13
5E60:  MOVLW  12
5E62:  MOVWF  x14
5E64:  MOVLW  1E
5E66:  MOVWF  x15
5E68:  MOVLW  35
5E6A:  MOVWF  x16
5E6C:  CLRF   x17
5E6E:  MOVLW  01
5E70:  MOVWF  x18
5E72:  MOVLB  0
5E74:  CALL   156E
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5E78:  MOVLB  5
5E7A:  CLRF   x13
5E7C:  MOVLW  37
5E7E:  MOVWF  x14
5E80:  MOVLW  7F
5E82:  MOVWF  x15
5E84:  MOVLW  3F
5E86:  MOVWF  x16
5E88:  MOVLW  01
5E8A:  MOVWF  x17
5E8C:  CLRF   x18
5E8E:  MOVLB  0
5E90:  CALL   156E
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
5E94:  MOVLW  04
5E96:  MOVWF  FEA
5E98:  MOVLW  E1
5E9A:  MOVWF  FE9
5E9C:  MOVFF  FF2,501
5EA0:  BCF    FF2.7
5EA2:  MOVLW  00
5EA4:  CALL   0966
5EA8:  TBLRD*-
5EAA:  TBLRD*+
5EAC:  MOVF   FF5,W
5EAE:  MOVWF  FEE
5EB0:  IORLW  00
5EB2:  BNZ   5EAA
5EB4:  MOVLB  5
5EB6:  BTFSC  x01.7
5EB8:  BSF    FF2.7
5EBA:  MOVLW  04
5EBC:  MOVWF  x02
5EBE:  MOVLW  E1
5EC0:  MOVWF  x01
5EC2:  CLRF   x03
5EC4:  MOVLW  37
5EC6:  MOVWF  x04
5EC8:  MOVLW  02
5ECA:  MOVWF  x05
5ECC:  MOVLW  01
5ECE:  MOVWF  x06
5ED0:  MOVLB  0
5ED2:  CALL   1630
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5ED6:  MOVLB  4
5ED8:  BSF    x96.2
5EDA:  BCF    x96.3
5EDC:  BCF    x96.4
5EDE:  BCF    x96.5
5EE0:  BCF    x96.6
5EE2:  BCF    x96.7
5EE4:  BCF    x97.0
5EE6:  BCF    x97.1
....................          EVDesfogue=0;Control=1; 
5EE8:  CLRF   x99
5EEA:  MOVLW  01
5EEC:  MOVWF  xA0
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
5EEE:  DECFSZ xA8,W
5EF0:  BRA    5F6E
5EF2:  BTFSC  x96.5
5EF4:  BRA    5F6E
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5EF6:  MOVLB  5
5EF8:  CLRF   x13
5EFA:  MOVLW  37
5EFC:  MOVWF  x14
5EFE:  MOVLW  7F
5F00:  MOVWF  x15
5F02:  MOVLW  3F
5F04:  MOVWF  x16
5F06:  MOVLW  01
5F08:  MOVWF  x17
5F0A:  CLRF   x18
5F0C:  MOVLB  0
5F0E:  CALL   156E
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
5F12:  MOVLW  04
5F14:  MOVWF  FEA
5F16:  MOVLW  E1
5F18:  MOVWF  FE9
5F1A:  MOVFF  FF2,501
5F1E:  BCF    FF2.7
5F20:  MOVLW  00
5F22:  CALL   0CAC
5F26:  TBLRD*-
5F28:  TBLRD*+
5F2A:  MOVF   FF5,W
5F2C:  MOVWF  FEE
5F2E:  IORLW  00
5F30:  BNZ   5F28
5F32:  MOVLB  5
5F34:  BTFSC  x01.7
5F36:  BSF    FF2.7
5F38:  MOVLW  04
5F3A:  MOVWF  x02
5F3C:  MOVLW  E1
5F3E:  MOVWF  x01
5F40:  CLRF   x03
5F42:  MOVLW  37
5F44:  MOVWF  x04
5F46:  MOVLW  02
5F48:  MOVWF  x05
5F4A:  MOVLW  01
5F4C:  MOVWF  x06
5F4E:  MOVLB  0
5F50:  CALL   1630
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F54:  MOVLB  4
5F56:  BCF    x96.2
5F58:  BCF    x96.3
5F5A:  BCF    x96.4
5F5C:  BSF    x96.5
5F5E:  BCF    x96.6
5F60:  BCF    x96.7
5F62:  BCF    x97.0
5F64:  BCF    x97.1
....................          EVDesfogue=0;EVTrampa=0;Control=1; 
5F66:  CLRF   x99
5F68:  CLRF   x9B
5F6A:  MOVLW  01
5F6C:  MOVWF  xA0
....................       } 
....................       if(ADC_Pt100>=100 && Presostato<5) 
5F6E:  MOVLB  5
5F70:  CLRF   x04
5F72:  CLRF   x03
5F74:  MOVLW  48
5F76:  MOVWF  x02
5F78:  MOVLW  85
5F7A:  MOVWF  x01
5F7C:  MOVFF  4BD,508
5F80:  MOVFF  4BC,507
5F84:  MOVFF  4BB,506
5F88:  MOVFF  4BA,505
5F8C:  MOVLB  0
5F8E:  CALL   26BC
5F92:  BC    5F96
5F94:  BNZ   5FA8
5F96:  MOVLB  4
5F98:  MOVF   x91,W
5F9A:  SUBLW  04
5F9C:  BTFSC  FD8.0
5F9E:  BRA    5FA4
5FA0:  MOVLB  0
5FA2:  BRA    5FA8
....................          Alarma2=5; 
5FA4:  MOVLW  05
5FA6:  MOVWF  x94
....................           
....................       Control=1; 
5FA8:  MOVLW  01
5FAA:  MOVLB  4
5FAC:  MOVWF  xA0
....................       Envio_Esclavos(); 
5FAE:  MOVLB  0
5FB0:  CALL   2018
....................    } 
....................    else 
5FB4:  BRA    6480
5FB6:  MOVLB  4
....................    { 
....................       Control=0; 
5FB8:  CLRF   xA0
....................       if(Alarma>0 || Alarma2>0) 
5FBA:  MOVF   x92,F
5FBC:  BNZ   5FC4
5FBE:  MOVF   x94,F
5FC0:  BTFSC  FD8.2
5FC2:  BRA    612A
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
5FC4:  DECFSZ x92,W
5FC6:  BRA    603E
....................          { 
....................             if(disp_Alarma==0) 
5FC8:  BTFSC  x97.3
5FCA:  BRA    603E
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5FCC:  MOVLB  5
5FCE:  CLRF   x13
5FD0:  MOVLW  37
5FD2:  MOVWF  x14
5FD4:  MOVLW  7F
5FD6:  MOVWF  x15
5FD8:  MOVLW  3F
5FDA:  MOVWF  x16
5FDC:  MOVLW  01
5FDE:  MOVWF  x17
5FE0:  CLRF   x18
5FE2:  MOVLB  0
5FE4:  CALL   156E
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
5FE8:  MOVLW  04
5FEA:  MOVWF  FEA
5FEC:  MOVLW  E1
5FEE:  MOVWF  FE9
5FF0:  MOVFF  FF2,501
5FF4:  BCF    FF2.7
5FF6:  MOVLW  00
5FF8:  CALL   0CD4
5FFC:  TBLRD*-
5FFE:  TBLRD*+
6000:  MOVF   FF5,W
6002:  MOVWF  FEE
6004:  IORLW  00
6006:  BNZ   5FFE
6008:  MOVLB  5
600A:  BTFSC  x01.7
600C:  BSF    FF2.7
600E:  MOVLW  04
6010:  MOVWF  x02
6012:  MOVLW  E1
6014:  MOVWF  x01
6016:  CLRF   x03
6018:  MOVLW  37
601A:  MOVWF  x04
601C:  MOVLW  02
601E:  MOVWF  x05
6020:  MOVLW  01
6022:  MOVWF  x06
6024:  MOVLB  0
6026:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
602A:  MOVLB  4
602C:  BCF    x96.2
602E:  BCF    x96.3
6030:  BCF    x96.4
6032:  BCF    x96.5
6034:  BCF    x96.6
6036:  BCF    x96.7
6038:  BCF    x97.0
603A:  BCF    x97.1
....................                disp_Alarma=1; 
603C:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
603E:  MOVF   x92,W
6040:  SUBLW  02
6042:  BNZ   60BE
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
6044:  CLRF   xA8
6046:  CLRF   xA9
....................             if(disp_Alarma==0) 
6048:  BTFSC  x97.3
604A:  BRA    60BE
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
604C:  MOVLB  5
604E:  CLRF   x13
6050:  MOVLW  37
6052:  MOVWF  x14
6054:  MOVLW  7F
6056:  MOVWF  x15
6058:  MOVLW  3F
605A:  MOVWF  x16
605C:  MOVLW  01
605E:  MOVWF  x17
6060:  CLRF   x18
6062:  MOVLB  0
6064:  CALL   156E
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6068:  MOVLW  04
606A:  MOVWF  FEA
606C:  MOVLW  E1
606E:  MOVWF  FE9
6070:  MOVFF  FF2,501
6074:  BCF    FF2.7
6076:  MOVLW  00
6078:  CALL   0CFA
607C:  TBLRD*-
607E:  TBLRD*+
6080:  MOVF   FF5,W
6082:  MOVWF  FEE
6084:  IORLW  00
6086:  BNZ   607E
6088:  MOVLB  5
608A:  BTFSC  x01.7
608C:  BSF    FF2.7
608E:  MOVLW  04
6090:  MOVWF  x02
6092:  MOVLW  E1
6094:  MOVWF  x01
6096:  CLRF   x03
6098:  MOVLW  37
609A:  MOVWF  x04
609C:  MOVLW  02
609E:  MOVWF  x05
60A0:  MOVLW  01
60A2:  MOVWF  x06
60A4:  MOVLB  0
60A6:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
60AA:  MOVLB  4
60AC:  BCF    x96.2
60AE:  BCF    x96.3
60B0:  BCF    x96.4
60B2:  BCF    x96.5
60B4:  BCF    x96.6
60B6:  BCF    x96.7
60B8:  BCF    x97.0
60BA:  BCF    x97.1
....................                disp_Alarma=1; 
60BC:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma2==5) // Alarma de Error por falta de agua, por lo cual no genera Presión. 
60BE:  MOVF   x94,W
60C0:  SUBLW  05
60C2:  BNZ   6128
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
60C4:  CLRF   xA8
60C6:  CLRF   xA9
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
60C8:  MOVLB  5
60CA:  CLRF   x13
60CC:  MOVLW  37
60CE:  MOVWF  x14
60D0:  MOVLW  7F
60D2:  MOVWF  x15
60D4:  MOVLW  3F
60D6:  MOVWF  x16
60D8:  MOVLW  01
60DA:  MOVWF  x17
60DC:  CLRF   x18
60DE:  MOVLB  0
60E0:  CALL   156E
....................             strcpy(Menus.Letra,"Error:ET03");displayMenu(Menus.Letra,0,55,2,1); 
60E4:  MOVLW  04
60E6:  MOVWF  FEA
60E8:  MOVLW  E1
60EA:  MOVWF  FE9
60EC:  MOVFF  FF2,501
60F0:  BCF    FF2.7
60F2:  MOVLW  00
60F4:  CALL   0D20
60F8:  TBLRD*-
60FA:  TBLRD*+
60FC:  MOVF   FF5,W
60FE:  MOVWF  FEE
6100:  IORLW  00
6102:  BNZ   60FA
6104:  MOVLB  5
6106:  BTFSC  x01.7
6108:  BSF    FF2.7
610A:  MOVLW  04
610C:  MOVWF  x02
610E:  MOVLW  E1
6110:  MOVWF  x01
6112:  CLRF   x03
6114:  MOVLW  37
6116:  MOVWF  x04
6118:  MOVLW  02
611A:  MOVWF  x05
611C:  MOVLW  01
611E:  MOVWF  x06
6120:  MOVLB  0
6122:  CALL   1630
6126:  MOVLB  4
....................          } 
....................       } 
....................       else 
6128:  BRA    647A
....................       {  
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
612A:  MOVF   xA8,W
612C:  SUBLW  02
612E:  BTFSS  FD8.2
6130:  BRA    62F2
6132:  BTFSS  x96.1
6134:  BRA    62F2
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
6136:  BTFSS  x95.5
6138:  BRA    6218
....................             { 
....................                if(z==0) 
613A:  BTFSC  x97.2
613C:  BRA    618E
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
613E:  MOVLB  5
6140:  CLRF   x01
6142:  MOVLW  5A
6144:  MOVWF  x02
6146:  MOVLW  38
6148:  MOVWF  x03
614A:  MOVLB  0
614C:  CALL   2736
6150:  MOVLW  19
6152:  MOVLB  5
6154:  MOVWF  x13
6156:  MOVLW  12
6158:  MOVWF  x14
615A:  MOVLW  3C
615C:  MOVWF  x15
615E:  MOVLW  1A
6160:  MOVWF  x16
6162:  CLRF   x17
6164:  CLRF   x18
6166:  MOVLB  0
6168:  CALL   156E
616C:  MOVLW  37
616E:  MOVLB  5
6170:  MOVWF  x13
6172:  MOVLW  12
6174:  MOVWF  x14
6176:  MOVLW  44
6178:  MOVWF  x15
617A:  MOVLW  35
617C:  MOVWF  x16
617E:  CLRF   x17
6180:  MOVLW  01
6182:  MOVWF  x18
6184:  MOVLB  0
6186:  CALL   156E
618A:  MOVLB  4
618C:  BSF    x97.2
....................                } 
....................                if(disp_Despresurizando==0) 
618E:  BTFSC  x96.6
6190:  BRA    6210
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6192:  MOVLB  5
6194:  CLRF   x13
6196:  MOVLW  37
6198:  MOVWF  x14
619A:  MOVLW  7F
619C:  MOVWF  x15
619E:  MOVLW  3F
61A0:  MOVWF  x16
61A2:  MOVLW  01
61A4:  MOVWF  x17
61A6:  CLRF   x18
61A8:  MOVLB  0
61AA:  CALL   156E
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
61AE:  MOVLW  04
61B0:  MOVWF  FEA
61B2:  MOVLW  E1
61B4:  MOVWF  FE9
61B6:  MOVFF  FF2,501
61BA:  BCF    FF2.7
61BC:  MOVLW  00
61BE:  CALL   0D46
61C2:  TBLRD*-
61C4:  TBLRD*+
61C6:  MOVF   FF5,W
61C8:  MOVWF  FEE
61CA:  IORLW  00
61CC:  BNZ   61C4
61CE:  MOVLB  5
61D0:  BTFSC  x01.7
61D2:  BSF    FF2.7
61D4:  MOVLW  04
61D6:  MOVWF  x02
61D8:  MOVLW  E1
61DA:  MOVWF  x01
61DC:  CLRF   x03
61DE:  MOVLW  37
61E0:  MOVWF  x04
61E2:  MOVLW  02
61E4:  MOVWF  x05
61E6:  MOVLW  01
61E8:  MOVWF  x06
61EA:  MOVLB  0
61EC:  CALL   1630
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
61F0:  MOVLB  4
61F2:  BCF    x96.2
61F4:  BCF    x96.3
61F6:  BCF    x96.4
61F8:  BCF    x96.5
61FA:  BSF    x96.6
61FC:  BCF    x96.7
61FE:  BCF    x97.0
6200:  BCF    x97.1
....................                   glcd_imagen(5); 
6202:  MOVLW  05
6204:  MOVLB  5
6206:  MOVWF  x01
6208:  MOVLB  0
620A:  CALL   2078
620E:  MOVLB  4
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
6210:  MOVLW  02
6212:  MOVWF  xAA
6214:  MOVWF  xA9
....................             } 
....................             else 
6216:  BRA    62F2
....................             { 
....................                if(z==0) 
6218:  BTFSC  x97.2
621A:  BRA    626C
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
621C:  MOVLB  5
621E:  CLRF   x01
6220:  MOVLW  5A
6222:  MOVWF  x02
6224:  MOVLW  38
6226:  MOVWF  x03
6228:  MOVLB  0
622A:  CALL   2736
622E:  MOVLW  19
6230:  MOVLB  5
6232:  MOVWF  x13
6234:  MOVLW  12
6236:  MOVWF  x14
6238:  MOVLW  3C
623A:  MOVWF  x15
623C:  MOVLW  1A
623E:  MOVWF  x16
6240:  CLRF   x17
6242:  CLRF   x18
6244:  MOVLB  0
6246:  CALL   156E
624A:  MOVLW  37
624C:  MOVLB  5
624E:  MOVWF  x13
6250:  MOVLW  12
6252:  MOVWF  x14
6254:  MOVLW  44
6256:  MOVWF  x15
6258:  MOVLW  35
625A:  MOVWF  x16
625C:  CLRF   x17
625E:  MOVLW  01
6260:  MOVWF  x18
6262:  MOVLB  0
6264:  CALL   156E
6268:  MOVLB  4
626A:  BSF    x97.2
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
626C:  BTFSC  x96.4
626E:  BRA    62EE
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6270:  MOVLB  5
6272:  CLRF   x13
6274:  MOVLW  37
6276:  MOVWF  x14
6278:  MOVLW  7F
627A:  MOVWF  x15
627C:  MOVLW  3F
627E:  MOVWF  x16
6280:  MOVLW  01
6282:  MOVWF  x17
6284:  CLRF   x18
6286:  MOVLB  0
6288:  CALL   156E
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
628C:  MOVLW  04
628E:  MOVWF  FEA
6290:  MOVLW  E1
6292:  MOVWF  FE9
6294:  MOVFF  FF2,501
6298:  BCF    FF2.7
629A:  MOVLW  00
629C:  CALL   0D70
62A0:  TBLRD*-
62A2:  TBLRD*+
62A4:  MOVF   FF5,W
62A6:  MOVWF  FEE
62A8:  IORLW  00
62AA:  BNZ   62A2
62AC:  MOVLB  5
62AE:  BTFSC  x01.7
62B0:  BSF    FF2.7
62B2:  MOVLW  04
62B4:  MOVWF  x02
62B6:  MOVLW  E1
62B8:  MOVWF  x01
62BA:  CLRF   x03
62BC:  MOVLW  37
62BE:  MOVWF  x04
62C0:  MOVLW  02
62C2:  MOVWF  x05
62C4:  MOVLW  01
62C6:  MOVWF  x06
62C8:  MOVLB  0
62CA:  CALL   1630
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
62CE:  MOVLB  4
62D0:  BCF    x96.2
62D2:  BCF    x96.3
62D4:  BSF    x96.4
62D6:  BCF    x96.5
62D8:  BCF    x96.6
62DA:  BCF    x96.7
62DC:  BCF    x97.0
62DE:  BCF    x97.1
....................                   glcd_imagen(5); 
62E0:  MOVLW  05
62E2:  MOVLB  5
62E4:  MOVWF  x01
62E6:  MOVLB  0
62E8:  CALL   2078
62EC:  MOVLB  4
....................                } 
....................                Exhaust=1; 
62EE:  MOVLW  01
62F0:  MOVWF  xAA
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0 && AlarmaAgua==0) 
62F2:  MOVF   x8D,F
62F4:  BNZ   6376
62F6:  MOVF   x93,F
62F8:  BNZ   6376
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0 && flag_agua==1) 
62FA:  BTFSC  x97.0
62FC:  BRA    6376
62FE:  MOVF   xA6,F
6300:  BNZ   6376
6302:  BTFSS  x96.1
6304:  BRA    6376
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6306:  MOVLB  5
6308:  CLRF   x13
630A:  MOVLW  37
630C:  MOVWF  x14
630E:  MOVLW  7F
6310:  MOVWF  x15
6312:  MOVLW  3F
6314:  MOVWF  x16
6316:  MOVLW  01
6318:  MOVWF  x17
631A:  CLRF   x18
631C:  MOVLB  0
631E:  CALL   156E
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
6322:  MOVLW  04
6324:  MOVWF  FEA
6326:  MOVLW  E1
6328:  MOVWF  FE9
632A:  MOVFF  FF2,501
632E:  BCF    FF2.7
6330:  MOVLW  00
6332:  CALL   0D92
6336:  TBLRD*-
6338:  TBLRD*+
633A:  MOVF   FF5,W
633C:  MOVWF  FEE
633E:  IORLW  00
6340:  BNZ   6338
6342:  MOVLB  5
6344:  BTFSC  x01.7
6346:  BSF    FF2.7
6348:  MOVLW  04
634A:  MOVWF  x02
634C:  MOVLW  E1
634E:  MOVWF  x01
6350:  CLRF   x03
6352:  MOVLW  37
6354:  MOVWF  x04
6356:  MOVLW  02
6358:  MOVWF  x05
635A:  MOVLW  01
635C:  MOVWF  x06
635E:  MOVLB  0
6360:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
6364:  MOVLB  4
6366:  BCF    x96.2
6368:  BCF    x96.3
636A:  BCF    x96.4
636C:  BCF    x96.5
636E:  BCF    x96.6
6370:  BCF    x96.7
6372:  BSF    x97.0
6374:  BCF    x97.1
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          disp_Alarma=0; 
6376:  BCF    x97.3
....................          if(NivelTanque==1 && flag_agua==0 ) 
6378:  DECFSZ x90,W
637A:  BRA    6384
637C:  BTFSC  x96.1
637E:  BRA    6384
....................          { 
....................             flag_agua=1; 
6380:  BSF    x96.1
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
6382:  BRA    647A
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && flag_agua==0) 
6384:  MOVF   xA8,F
6386:  BNZ   6402
6388:  BTFSC  x96.3
638A:  BRA    6402
638C:  BTFSC  x96.1
638E:  BRA    6402
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6390:  MOVLB  5
6392:  CLRF   x13
6394:  MOVLW  37
6396:  MOVWF  x14
6398:  MOVLW  7F
639A:  MOVWF  x15
639C:  MOVLW  3F
639E:  MOVWF  x16
63A0:  MOVLW  01
63A2:  MOVWF  x17
63A4:  CLRF   x18
63A6:  MOVLB  0
63A8:  CALL   156E
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
63AC:  MOVLW  04
63AE:  MOVWF  FEA
63B0:  MOVLW  E1
63B2:  MOVWF  FE9
63B4:  MOVFF  FF2,501
63B8:  BCF    FF2.7
63BA:  MOVLW  00
63BC:  CALL   0DBC
63C0:  TBLRD*-
63C2:  TBLRD*+
63C4:  MOVF   FF5,W
63C6:  MOVWF  FEE
63C8:  IORLW  00
63CA:  BNZ   63C2
63CC:  MOVLB  5
63CE:  BTFSC  x01.7
63D0:  BSF    FF2.7
63D2:  MOVLW  04
63D4:  MOVWF  x02
63D6:  MOVLW  E1
63D8:  MOVWF  x01
63DA:  CLRF   x03
63DC:  MOVLW  37
63DE:  MOVWF  x04
63E0:  MOVLW  02
63E2:  MOVWF  x05
63E4:  MOVLW  01
63E6:  MOVWF  x06
63E8:  MOVLB  0
63EA:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
63EE:  MOVLB  4
63F0:  BCF    x96.2
63F2:  BSF    x96.3
63F4:  BCF    x96.4
63F6:  BCF    x96.5
63F8:  BCF    x96.6
63FA:  BCF    x96.7
63FC:  BCF    x97.0
63FE:  BCF    x97.1
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
6400:  CLRF   xA0
....................             } 
....................              
....................             if(AlarmaAgua==1) 
6402:  DECFSZ x93,W
6404:  BRA    647A
....................             { 
....................                if(disp_AlarmaAgua==0) 
6406:  BTFSC  x97.4
6408:  BRA    647A
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
640A:  MOVLB  5
640C:  CLRF   x13
640E:  MOVLW  37
6410:  MOVWF  x14
6412:  MOVLW  7F
6414:  MOVWF  x15
6416:  MOVLW  3F
6418:  MOVWF  x16
641A:  MOVLW  01
641C:  MOVWF  x17
641E:  CLRF   x18
6420:  MOVLB  0
6422:  CALL   156E
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
6426:  MOVLW  04
6428:  MOVWF  FEA
642A:  MOVLW  E1
642C:  MOVWF  FE9
642E:  MOVFF  FF2,501
6432:  BCF    FF2.7
6434:  MOVLW  00
6436:  CALL   0DE0
643A:  TBLRD*-
643C:  TBLRD*+
643E:  MOVF   FF5,W
6440:  MOVWF  FEE
6442:  IORLW  00
6444:  BNZ   643C
6446:  MOVLB  5
6448:  BTFSC  x01.7
644A:  BSF    FF2.7
644C:  MOVLW  04
644E:  MOVWF  x02
6450:  MOVLW  E1
6452:  MOVWF  x01
6454:  CLRF   x03
6456:  MOVLW  37
6458:  MOVWF  x04
645A:  MOVLW  02
645C:  MOVWF  x05
645E:  MOVLW  01
6460:  MOVWF  x06
6462:  MOVLB  0
6464:  CALL   1630
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6468:  MOVLB  4
646A:  BCF    x96.2
646C:  BCF    x96.4
646E:  BCF    x96.5
6470:  BCF    x96.6
6472:  BCF    x96.7
6474:  BCF    x97.0
6476:  BCF    x97.1
....................                   disp_AlarmaAgua=1; 
6478:  BSF    x97.4
....................                } 
....................             } 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
647A:  MOVLB  0
647C:  CALL   2018
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
6480:  MOVLB  4
6482:  BTFSS  x95.6
6484:  BRA    675C
....................    {                       
....................       Lectura=0; 
6486:  BCF    x95.6
....................       displayTiempo(Presostato,31,40,2,1); 
6488:  MOVFF  491,502
648C:  MOVLW  1F
648E:  MOVLB  5
6490:  MOVWF  x03
6492:  MOVLW  28
6494:  MOVWF  x04
6496:  MOVLW  02
6498:  MOVWF  x05
649A:  MOVLW  01
649C:  MOVWF  x06
649E:  MOVLB  0
64A0:  CALL   2424
....................       glcd_rect(51, 40, 62, 48, YES, OFF);glcd_text57(52, 40, kpa, 1, ON); 
64A4:  MOVLW  33
64A6:  MOVLB  5
64A8:  MOVWF  x13
64AA:  MOVLW  28
64AC:  MOVWF  x14
64AE:  MOVLW  3E
64B0:  MOVWF  x15
64B2:  MOVLW  30
64B4:  MOVWF  x16
64B6:  MOVLW  01
64B8:  MOVWF  x17
64BA:  CLRF   x18
64BC:  MOVLB  0
64BE:  CALL   156E
64C2:  MOVLW  34
64C4:  MOVLB  5
64C6:  MOVWF  x12
64C8:  MOVLW  28
64CA:  MOVWF  x13
64CC:  MOVLW  04
64CE:  MOVWF  x15
64D0:  MOVLW  89
64D2:  MOVWF  x14
64D4:  MOVLW  01
64D6:  MOVWF  x16
64D8:  MOVWF  x17
64DA:  MOVLB  0
64DC:  CALL   1278
....................       displayT(ADC_Pt100,69,20,2); 
64E0:  MOVFF  4BD,504
64E4:  MOVFF  4BC,503
64E8:  MOVFF  4BB,502
64EC:  MOVFF  4BA,501
64F0:  MOVLW  45
64F2:  MOVLB  5
64F4:  MOVWF  x05
64F6:  MOVLW  14
64F8:  MOVWF  x06
64FA:  MOVLW  02
64FC:  MOVWF  x07
64FE:  MOVLB  0
6500:  GOTO   2ACA
....................       glcd_circle(95,40,2,NO,ON); 
6504:  MOVLW  5F
6506:  MOVLB  5
6508:  MOVWF  x01
650A:  MOVLW  28
650C:  MOVWF  x02
650E:  MOVLW  02
6510:  MOVWF  x03
6512:  CLRF   x04
6514:  MOVLW  01
6516:  MOVWF  x05
6518:  MOVLB  0
651A:  CALL   2174
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
651E:  MOVLW  04
6520:  MOVWF  FEA
6522:  MOVLW  E1
6524:  MOVWF  FE9
6526:  MOVFF  FF2,501
652A:  BCF    FF2.7
652C:  MOVLW  00
652E:  CALL   09D0
6532:  TBLRD*-
6534:  TBLRD*+
6536:  MOVF   FF5,W
6538:  MOVWF  FEE
653A:  IORLW  00
653C:  BNZ   6534
653E:  MOVLB  5
6540:  BTFSC  x01.7
6542:  BSF    FF2.7
6544:  MOVLW  04
6546:  MOVWF  x02
6548:  MOVLW  E1
654A:  MOVWF  x01
654C:  MOVLW  66
654E:  MOVWF  x03
6550:  MOVLW  28
6552:  MOVWF  x04
6554:  MOVLW  02
6556:  MOVWF  x05
6558:  MOVWF  x06
655A:  MOVLB  0
655C:  CALL   1630
....................       displayTiempo(Setpoint,5,20,2,1); 
6560:  MOVFF  4A5,502
6564:  MOVLW  05
6566:  MOVLB  5
6568:  MOVWF  x03
656A:  MOVLW  14
656C:  MOVWF  x04
656E:  MOVLW  02
6570:  MOVWF  x05
6572:  MOVLW  01
6574:  MOVWF  x06
6576:  MOVLB  0
6578:  CALL   2424
....................  
....................       glcd_imagen(5); 
657C:  MOVLW  05
657E:  MOVLB  5
6580:  MOVWF  x01
6582:  MOVLB  0
6584:  CALL   2078
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
6588:  MOVLW  04
658A:  MOVWF  FEA
658C:  MOVLW  E1
658E:  MOVWF  FE9
6590:  MOVFF  FF2,501
6594:  BCF    FF2.7
6596:  MOVLW  00
6598:  CALL   098C
659C:  TBLRD*-
659E:  TBLRD*+
65A0:  MOVF   FF5,W
65A2:  MOVWF  FEE
65A4:  IORLW  00
65A6:  BNZ   659E
65A8:  MOVLB  5
65AA:  BTFSC  x01.7
65AC:  BSF    FF2.7
65AE:  MOVLW  04
65B0:  MOVWF  x02
65B2:  MOVLW  E1
65B4:  MOVWF  x01
65B6:  CLRF   x03
65B8:  CLRF   x04
65BA:  MOVLW  02
65BC:  MOVWF  x05
65BE:  MOVLW  01
65C0:  MOVWF  x06
65C2:  MOVLB  0
65C4:  CALL   1630
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
65C8:  MOVLW  04
65CA:  MOVWF  FEA
65CC:  MOVLW  E1
65CE:  MOVWF  FE9
65D0:  MOVFF  FF2,501
65D4:  BCF    FF2.7
65D6:  MOVLW  00
65D8:  CALL   09AE
65DC:  TBLRD*-
65DE:  TBLRD*+
65E0:  MOVF   FF5,W
65E2:  MOVWF  FEE
65E4:  IORLW  00
65E6:  BNZ   65DE
65E8:  MOVLB  5
65EA:  BTFSC  x01.7
65EC:  BSF    FF2.7
65EE:  MOVLW  04
65F0:  MOVWF  x02
65F2:  MOVLW  E1
65F4:  MOVWF  x01
65F6:  CLRF   x03
65F8:  MOVLW  08
65FA:  MOVWF  x04
65FC:  MOVLW  02
65FE:  MOVWF  x05
6600:  MOVLW  01
6602:  MOVWF  x06
6604:  MOVLB  0
6606:  CALL   1630
....................       MuestraTiemposProgramados(); 
660A:  CALL   257C
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
660E:  MOVFF  4C1,502
6612:  MOVLW  50
6614:  MOVLB  5
6616:  MOVWF  x03
6618:  CLRF   x04
661A:  CLRF   x05
661C:  MOVLW  01
661E:  MOVWF  x06
6620:  MOVLB  0
6622:  CALL   2424
6626:  MOVFF  4C0,502
662A:  MOVLW  56
662C:  MOVLB  5
662E:  MOVWF  x03
6630:  CLRF   x04
6632:  CLRF   x05
6634:  MOVLW  01
6636:  MOVWF  x06
6638:  MOVLB  0
663A:  CALL   2424
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
663E:  MOVLW  04
6640:  MOVWF  FEA
6642:  MOVLW  E1
6644:  MOVWF  FE9
6646:  MOVFF  FF2,501
664A:  BCF    FF2.7
664C:  MOVLW  00
664E:  CALL   06BE
6652:  TBLRD*-
6654:  TBLRD*+
6656:  MOVF   FF5,W
6658:  MOVWF  FEE
665A:  IORLW  00
665C:  BNZ   6654
665E:  MOVLB  5
6660:  BTFSC  x01.7
6662:  BSF    FF2.7
6664:  MOVLW  04
6666:  MOVWF  x02
6668:  MOVLW  E1
666A:  MOVWF  x01
666C:  MOVLW  5C
666E:  MOVWF  x03
6670:  CLRF   x04
6672:  MOVLW  02
6674:  MOVWF  x05
6676:  MOVLW  01
6678:  MOVWF  x06
667A:  MOVLB  0
667C:  CALL   1630
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6680:  MOVFF  4BF,502
6684:  MOVLW  62
6686:  MOVLB  5
6688:  MOVWF  x03
668A:  CLRF   x04
668C:  CLRF   x05
668E:  MOVLW  01
6690:  MOVWF  x06
6692:  MOVLB  0
6694:  CALL   2424
6698:  MOVFF  4BE,502
669C:  MOVLW  68
669E:  MOVLB  5
66A0:  MOVWF  x03
66A2:  CLRF   x04
66A4:  CLRF   x05
66A6:  MOVLW  01
66A8:  MOVWF  x06
66AA:  MOVLB  0
66AC:  CALL   2424
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
66B0:  MOVFF  4C9,502
66B4:  MOVLW  50
66B6:  MOVLB  5
66B8:  MOVWF  x03
66BA:  MOVLW  08
66BC:  MOVWF  x04
66BE:  CLRF   x05
66C0:  MOVLW  01
66C2:  MOVWF  x06
66C4:  MOVLB  0
66C6:  CALL   2424
66CA:  MOVFF  4C8,502
66CE:  MOVLW  56
66D0:  MOVLB  5
66D2:  MOVWF  x03
66D4:  MOVLW  08
66D6:  MOVWF  x04
66D8:  CLRF   x05
66DA:  MOVLW  01
66DC:  MOVWF  x06
66DE:  MOVLB  0
66E0:  CALL   2424
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
66E4:  MOVLW  04
66E6:  MOVWF  FEA
66E8:  MOVLW  E1
66EA:  MOVWF  FE9
66EC:  MOVFF  FF2,501
66F0:  BCF    FF2.7
66F2:  MOVLW  00
66F4:  CALL   06BE
66F8:  TBLRD*-
66FA:  TBLRD*+
66FC:  MOVF   FF5,W
66FE:  MOVWF  FEE
6700:  IORLW  00
6702:  BNZ   66FA
6704:  MOVLB  5
6706:  BTFSC  x01.7
6708:  BSF    FF2.7
670A:  MOVLW  04
670C:  MOVWF  x02
670E:  MOVLW  E1
6710:  MOVWF  x01
6712:  MOVLW  5C
6714:  MOVWF  x03
6716:  MOVLW  08
6718:  MOVWF  x04
671A:  MOVLW  02
671C:  MOVWF  x05
671E:  MOVLW  01
6720:  MOVWF  x06
6722:  MOVLB  0
6724:  CALL   1630
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
6728:  MOVFF  4C7,502
672C:  MOVLW  62
672E:  MOVLB  5
6730:  MOVWF  x03
6732:  MOVLW  08
6734:  MOVWF  x04
6736:  CLRF   x05
6738:  MOVLW  01
673A:  MOVWF  x06
673C:  MOVLB  0
673E:  CALL   2424
6742:  MOVFF  4C6,502
6746:  MOVLW  68
6748:  MOVLB  5
674A:  MOVWF  x03
674C:  MOVLW  08
674E:  MOVWF  x04
6750:  CLRF   x05
6752:  MOVLW  01
6754:  MOVWF  x06
6756:  MOVLB  0
6758:  CALL   2424
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint-0.3))// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
675C:  MOVLB  5
675E:  CLRF   x02
6760:  MOVFF  4A5,501
6764:  MOVLB  0
6766:  CALL   19FA
676A:  MOVFF  00,501
676E:  MOVFF  01,502
6772:  MOVFF  02,503
6776:  MOVFF  03,504
677A:  BSF    FD8.1
677C:  MOVFF  03,508
6780:  MOVFF  02,507
6784:  MOVFF  01,506
6788:  MOVFF  00,505
678C:  MOVLW  9A
678E:  MOVLB  5
6790:  MOVWF  x0C
6792:  MOVLW  99
6794:  MOVWF  x0B
6796:  MOVLW  19
6798:  MOVWF  x0A
679A:  MOVLW  7D
679C:  MOVWF  x09
679E:  MOVLB  0
67A0:  CALL   1B90
67A4:  MOVFF  03,504
67A8:  MOVFF  02,503
67AC:  MOVFF  01,502
67B0:  MOVFF  00,501
67B4:  MOVFF  4BD,508
67B8:  MOVFF  4BC,507
67BC:  MOVFF  4BB,506
67C0:  MOVFF  4BA,505
67C4:  CALL   26BC
67C8:  BC    67CC
67CA:  BNZ   6832
....................    { 
....................       if(est==0) 
67CC:  MOVLB  4
67CE:  BTFSC  x96.0
67D0:  BRA    6834
....................       { 
....................          tiempo_esterilizacion=1; 
67D2:  MOVLW  01
67D4:  MOVWF  xA8
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
67D6:  MOVLB  5
67D8:  CLRF   x01
67DA:  MOVLW  5A
67DC:  MOVWF  x02
67DE:  MOVLW  38
67E0:  MOVWF  x03
67E2:  MOVLB  0
67E4:  CALL   2736
67E8:  MOVLW  0F
67EA:  MOVLB  5
67EC:  MOVWF  x13
67EE:  MOVLW  12
67F0:  MOVWF  x14
67F2:  MOVLW  1E
67F4:  MOVWF  x15
67F6:  MOVLW  35
67F8:  MOVWF  x16
67FA:  CLRF   x17
67FC:  CLRF   x18
67FE:  MOVLB  0
6800:  CALL   156E
6804:  MOVLW  19
6806:  MOVLB  5
6808:  MOVWF  x13
680A:  MOVLW  12
680C:  MOVWF  x14
680E:  MOVLW  3C
6810:  MOVWF  x15
6812:  MOVLW  1A
6814:  MOVWF  x16
6816:  CLRF   x17
6818:  MOVLW  01
681A:  MOVWF  x18
681C:  MOVLB  0
681E:  CALL   156E
6822:  MOVLB  4
6824:  BSF    x96.0
....................          glcd_imagen(5); 
6826:  MOVLW  05
6828:  MOVLB  5
682A:  MOVWF  x01
682C:  MOVLB  0
682E:  CALL   2078
6832:  MOVLB  4
....................       } 
....................    }   
....................     
....................    /*if(ADC_Pt100<((float)Setpoint-2.0)) 
....................    { 
....................       glcd_rect(15, 18, 30, 53, NO, ON); 
....................       if(est==1) 
....................       {glcd_rect(25, 18, 60, 26, NO, OFF);} 
....................       est=0;tiempo_esterilizacion=0; 
....................    }*/ 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
6834:  DECFSZ xAA,W
6836:  BRA    6860
6838:  MOVF   xA8,W
683A:  SUBLW  02
683C:  BNZ   6860
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
683E:  CLRF   xA0
....................       if(Presostato<20) 
6840:  MOVF   x91,W
6842:  SUBLW  13
6844:  BNC   684A
....................       { 
....................          EVDesfogue=3; 
6846:  MOVLW  03
6848:  MOVWF  x99
....................       } 
....................       if(Presostato<2) 
684A:  MOVF   x91,W
684C:  SUBLW  01
684E:  BNC   685C
....................       { 
....................          tiempo_secado=1; 
6850:  MOVLW  01
6852:  MOVWF  xA9
....................          Control=0;EVDesfogue=3; 
6854:  CLRF   xA0
6856:  MOVLW  03
6858:  MOVWF  x99
....................       } 
....................       else 
685A:  BRA    6860
....................       { 
....................          EVDesfogue=1; 
685C:  MOVLW  01
685E:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
6860:  MOVF   xAA,W
6862:  SUBLW  02
6864:  BNZ   6894
6866:  MOVF   xA8,W
6868:  SUBLW  02
686A:  BNZ   6894
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
686C:  CLRF   xA0
....................       if(Presostato<20) 
686E:  MOVF   x91,W
6870:  SUBLW  13
6872:  BNC   687A
....................       { 
....................          EVDesfogue=3; 
6874:  MOVLW  03
6876:  MOVWF  x99
....................       } 
....................       else 
6878:  BRA    687E
....................       { 
....................          EVDesfogue=2; 
687A:  MOVLW  02
687C:  MOVWF  x99
....................       } 
....................       if(Presostato<2) 
687E:  MOVF   x91,W
6880:  SUBLW  01
6882:  BNC   6894
....................       { 
....................          tiempo_esterilizacion=3; 
6884:  MOVLW  03
6886:  MOVWF  xA8
....................          tiempo_secado=2; 
6888:  MOVLW  02
688A:  MOVWF  xA9
....................          fin_ciclo=1; 
688C:  MOVLW  01
688E:  MOVWF  xA6
....................          EVDesfogue=3; 
6890:  MOVLW  03
6892:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]==Testerilizacionp[0])&&(Testerilizacion[1]==Testerilizacionp[1])&&(Testerilizacion[2]==Testerilizacionp[2])&&(Testerilizacion[3]==Testerilizacionp[3]) && tiempo_esterilizacion==1) 
6894:  MOVF   xC2,W
6896:  SUBWF  xBE,W
6898:  BNZ   68B4
689A:  MOVF   xC3,W
689C:  SUBWF  xBF,W
689E:  BNZ   68B4
68A0:  MOVF   xC4,W
68A2:  SUBWF  xC0,W
68A4:  BNZ   68B4
68A6:  MOVF   xC5,W
68A8:  SUBWF  xC1,W
68AA:  BNZ   68B4
68AC:  DECFSZ xA8,W
68AE:  BRA    68B4
....................    { 
....................       tiempo_esterilizacion=2; 
68B0:  MOVLW  02
68B2:  MOVWF  xA8
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
68B4:  MOVF   xCA,W
68B6:  XORLW  80
68B8:  MOVWF  00
68BA:  MOVF   xC6,W
68BC:  XORLW  80
68BE:  SUBWF  00,W
68C0:  BZ    68C4
68C2:  BC    6904
68C4:  MOVF   xCB,W
68C6:  XORLW  80
68C8:  MOVWF  00
68CA:  MOVF   xC7,W
68CC:  XORLW  80
68CE:  SUBWF  00,W
68D0:  BZ    68D4
68D2:  BC    6904
68D4:  MOVF   xCC,W
68D6:  XORLW  80
68D8:  MOVWF  00
68DA:  MOVF   xC8,W
68DC:  XORLW  80
68DE:  SUBWF  00,W
68E0:  BZ    68E4
68E2:  BC    6904
68E4:  MOVF   xCD,W
68E6:  XORLW  80
68E8:  MOVWF  00
68EA:  MOVF   xC9,W
68EC:  XORLW  80
68EE:  SUBWF  00,W
68F0:  BZ    68F4
68F2:  BC    6904
68F4:  DECFSZ xA9,W
68F6:  BRA    6904
....................    { 
....................       tiempo_esterilizacion=3; 
68F8:  MOVLW  03
68FA:  MOVWF  xA8
....................       tiempo_secado=2; 
68FC:  MOVLW  02
68FE:  MOVWF  xA9
....................       fin_ciclo=1; 
6900:  MOVLW  01
6902:  MOVWF  xA6
....................    } 
....................     
....................    if(fin_ciclo==1) 
6904:  DECFSZ xA6,W
6906:  BRA    6982
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
6908:  CLRF   xA0
690A:  MOVLW  03
690C:  MOVWF  x99
....................       if(disp_Fin==0) 
690E:  BTFSC  x97.1
6910:  BRA    6982
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6912:  MOVLB  5
6914:  CLRF   x13
6916:  MOVLW  37
6918:  MOVWF  x14
691A:  MOVLW  7F
691C:  MOVWF  x15
691E:  MOVLW  3F
6920:  MOVWF  x16
6922:  MOVLW  01
6924:  MOVWF  x17
6926:  CLRF   x18
6928:  MOVLB  0
692A:  CALL   156E
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
692E:  MOVLW  04
6930:  MOVWF  FEA
6932:  MOVLW  E1
6934:  MOVWF  FE9
6936:  MOVFF  FF2,501
693A:  BCF    FF2.7
693C:  MOVLW  00
693E:  CALL   0E06
6942:  TBLRD*-
6944:  TBLRD*+
6946:  MOVF   FF5,W
6948:  MOVWF  FEE
694A:  IORLW  00
694C:  BNZ   6944
694E:  MOVLB  5
6950:  BTFSC  x01.7
6952:  BSF    FF2.7
6954:  MOVLW  04
6956:  MOVWF  x02
6958:  MOVLW  E1
695A:  MOVWF  x01
695C:  CLRF   x03
695E:  MOVLW  37
6960:  MOVWF  x04
6962:  MOVLW  02
6964:  MOVWF  x05
6966:  MOVLW  01
6968:  MOVWF  x06
696A:  MOVLB  0
696C:  CALL   1630
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
6970:  MOVLB  4
6972:  BCF    x96.2
6974:  BCF    x96.3
6976:  BSF    x96.4
6978:  BCF    x96.5
697A:  BSF    x96.6
697C:  BCF    x96.7
697E:  BCF    x97.0
6980:  BSF    x97.1
....................       }    
....................        
....................    } 
....................    if(RIGHT) 
6982:  BSF    F92.2
6984:  BTFSS  F80.2
6986:  BRA    69C0
....................    { 
....................       glcd_init(ON); 
6988:  MOVLW  01
698A:  MOVLB  5
698C:  MOVWF  x01
698E:  MOVLB  0
6990:  CALL   1114
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6994:  MOVLB  4
6996:  BCF    x96.2
6998:  BCF    x96.3
699A:  BCF    x96.4
699C:  BCF    x96.5
699E:  BCF    x96.6
69A0:  BCF    x96.7
69A2:  BCF    x97.0
69A4:  BCF    x97.1
....................       disp_Alarma=0; 
69A6:  BCF    x97.3
....................       delay_ms(1000); 
69A8:  MOVLW  04
69AA:  MOVLB  5
69AC:  MOVWF  x01
69AE:  MOVLW  FA
69B0:  MOVWF  x02
69B2:  MOVLB  0
69B4:  CALL   0F98
69B8:  MOVLB  5
69BA:  DECFSZ x01,F
69BC:  BRA    69AE
69BE:  MOVLB  4
....................    } 
....................    EVAgua=10; 
69C0:  MOVLW  0A
69C2:  MOVWF  x9A
....................    Envio_Esclavos(); 
69C4:  MOVLB  0
69C6:  CALL   2018
69CA:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
69CC:  MOVF   xA2,W
69CE:  SUBLW  64
69D0:  BTFSS  FD8.2
69D2:  BRA    6ACE
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
69D4:  MOVFF  4D6,502
69D8:  MOVLB  5
69DA:  CLRF   x03
69DC:  MOVLW  0A
69DE:  MOVWF  x04
69E0:  MOVLW  02
69E2:  MOVWF  x05
69E4:  MOVLW  01
69E6:  MOVWF  x06
69E8:  MOVLB  0
69EA:  CALL   2424
....................    displayTiempo(datoRx[1],0,20,2,1); 
69EE:  MOVFF  4D7,502
69F2:  MOVLB  5
69F4:  CLRF   x03
69F6:  MOVLW  14
69F8:  MOVWF  x04
69FA:  MOVLW  02
69FC:  MOVWF  x05
69FE:  MOVLW  01
6A00:  MOVWF  x06
6A02:  MOVLB  0
6A04:  CALL   2424
....................    displayTiempo(datoRx[2],0,30,2,1); 
6A08:  MOVFF  4D8,502
6A0C:  MOVLB  5
6A0E:  CLRF   x03
6A10:  MOVLW  1E
6A12:  MOVWF  x04
6A14:  MOVLW  02
6A16:  MOVWF  x05
6A18:  MOVLW  01
6A1A:  MOVWF  x06
6A1C:  MOVLB  0
6A1E:  CALL   2424
....................    displayTiempo(datoRx[3],0,40,2,1); 
6A22:  MOVFF  4D9,502
6A26:  MOVLB  5
6A28:  CLRF   x03
6A2A:  MOVLW  28
6A2C:  MOVWF  x04
6A2E:  MOVLW  02
6A30:  MOVWF  x05
6A32:  MOVLW  01
6A34:  MOVWF  x06
6A36:  MOVLB  0
6A38:  CALL   2424
....................    displayTiempo(Opcion,0,50,2,1); 
6A3C:  MOVFF  4A7,502
6A40:  MOVLB  5
6A42:  CLRF   x03
6A44:  MOVLW  32
6A46:  MOVWF  x04
6A48:  MOVLW  02
6A4A:  MOVWF  x05
6A4C:  MOVLW  01
6A4E:  MOVWF  x06
6A50:  MOVLB  0
6A52:  CALL   2424
....................    Lectura_Esclavos(); 
6A56:  CALL   1EBE
....................    Opcion++; 
6A5A:  MOVLB  4
6A5C:  INCF   xA7,F
....................    displayTiempo(Puerta,50,10,2,1); 
6A5E:  MOVFF  48D,502
6A62:  MOVLW  32
6A64:  MOVLB  5
6A66:  MOVWF  x03
6A68:  MOVLW  0A
6A6A:  MOVWF  x04
6A6C:  MOVLW  02
6A6E:  MOVWF  x05
6A70:  MOVLW  01
6A72:  MOVWF  x06
6A74:  MOVLB  0
6A76:  CALL   2424
....................    displayTiempo(Parada,50,20,2,1); 
6A7A:  MOVFF  48E,502
6A7E:  MOVLW  32
6A80:  MOVLB  5
6A82:  MOVWF  x03
6A84:  MOVLW  14
6A86:  MOVWF  x04
6A88:  MOVLW  02
6A8A:  MOVWF  x05
6A8C:  MOVLW  01
6A8E:  MOVWF  x06
6A90:  MOVLB  0
6A92:  CALL   2424
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6A96:  MOVFF  4BD,504
6A9A:  MOVFF  4BC,503
6A9E:  MOVFF  4BB,502
6AA2:  MOVFF  4BA,501
6AA6:  GOTO   2B48
6AAA:  MOVFF  01,501
6AAE:  MOVFF  01,502
6AB2:  MOVLW  32
6AB4:  MOVLB  5
6AB6:  MOVWF  x03
6AB8:  MOVLW  1E
6ABA:  MOVWF  x04
6ABC:  MOVLW  02
6ABE:  MOVWF  x05
6AC0:  MOVLW  01
6AC2:  MOVWF  x06
6AC4:  MOVLB  0
6AC6:  CALL   2424
....................     
....................  } 
6ACA:  MOVLB  4
6ACC:  BRA    69CC
....................        
....................       while(Parada==0) 
....................       { 
6ACE:  MOVF   x8E,F
6AD0:  BNZ   6B8A
....................          Lectura_Esclavos(); 
6AD2:  MOVLB  0
6AD4:  CALL   1EBE
....................          delay_ms(100); 
6AD8:  MOVLW  64
6ADA:  MOVLB  5
6ADC:  MOVWF  x02
6ADE:  MOVLB  0
6AE0:  CALL   0F98
....................          if(disp_Stop==0) 
6AE4:  MOVLB  4
6AE6:  BTFSC  x96.7
6AE8:  BRA    6B88
....................          { 
....................             glcd_fillScreen(OFF);  
6AEA:  MOVLB  5
6AEC:  CLRF   x02
6AEE:  MOVLB  0
6AF0:  CALL   1002
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6AF4:  MOVLW  04
6AF6:  MOVWF  FEA
6AF8:  MOVLW  E1
6AFA:  MOVWF  FE9
6AFC:  MOVFF  FF2,501
6B00:  BCF    FF2.7
6B02:  MOVLW  00
6B04:  CALL   0E32
6B08:  TBLRD*-
6B0A:  TBLRD*+
6B0C:  MOVF   FF5,W
6B0E:  MOVWF  FEE
6B10:  IORLW  00
6B12:  BNZ   6B0A
6B14:  MOVLB  5
6B16:  BTFSC  x01.7
6B18:  BSF    FF2.7
6B1A:  MOVLW  04
6B1C:  MOVWF  x02
6B1E:  MOVLW  E1
6B20:  MOVWF  x01
6B22:  CLRF   x03
6B24:  MOVLW  0A
6B26:  MOVWF  x04
6B28:  CLRF   x05
6B2A:  MOVLW  02
6B2C:  MOVWF  x06
6B2E:  MOVLB  0
6B30:  CALL   1630
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6B34:  MOVLW  04
6B36:  MOVWF  FEA
6B38:  MOVLW  E1
6B3A:  MOVWF  FE9
6B3C:  MOVFF  FF2,501
6B40:  BCF    FF2.7
6B42:  MOVLW  00
6B44:  CALL   0E58
6B48:  TBLRD*-
6B4A:  TBLRD*+
6B4C:  MOVF   FF5,W
6B4E:  MOVWF  FEE
6B50:  IORLW  00
6B52:  BNZ   6B4A
6B54:  MOVLB  5
6B56:  BTFSC  x01.7
6B58:  BSF    FF2.7
6B5A:  MOVLW  04
6B5C:  MOVWF  x02
6B5E:  MOVLW  E1
6B60:  MOVWF  x01
6B62:  CLRF   x03
6B64:  MOVLW  1E
6B66:  MOVWF  x04
6B68:  CLRF   x05
6B6A:  MOVLW  02
6B6C:  MOVWF  x06
6B6E:  MOVLB  0
6B70:  CALL   1630
6B74:  MOVLB  4
6B76:  BSF    x95.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6B78:  BCF    x96.2
6B7A:  BCF    x96.3
6B7C:  BCF    x96.4
6B7E:  BCF    x96.5
6B80:  BCF    x96.6
6B82:  BSF    x96.7
6B84:  BCF    x97.0
6B86:  BCF    x97.1
....................          } 
....................       }    
6B88:  BRA    6ACE
....................       if(Parada==1) 
6B8A:  DECFSZ x8E,W
6B8C:  BRA    6C36
....................       { 
....................          while(emergency==1) 
....................          { 
6B8E:  BTFSS  x95.3
6B90:  BRA    6C36
....................             Lectura_Esclavos(); 
6B92:  MOVLB  0
6B94:  CALL   1EBE
....................             if(disp_Stop==1) 
6B98:  MOVLB  4
6B9A:  BTFSS  x96.7
6B9C:  BRA    6BAC
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6B9E:  MOVLB  5
6BA0:  CLRF   x02
6BA2:  MOVLB  0
6BA4:  CALL   1002
6BA8:  MOVLB  4
6BAA:  BCF    x96.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6BAC:  MOVLW  04
6BAE:  MOVWF  FEA
6BB0:  MOVLW  E1
6BB2:  MOVWF  FE9
6BB4:  MOVFF  FF2,501
6BB8:  BCF    FF2.7
6BBA:  MOVLW  00
6BBC:  MOVLB  0
6BBE:  CALL   0E7E
6BC2:  TBLRD*-
6BC4:  TBLRD*+
6BC6:  MOVF   FF5,W
6BC8:  MOVWF  FEE
6BCA:  IORLW  00
6BCC:  BNZ   6BC4
6BCE:  MOVLB  5
6BD0:  BTFSC  x01.7
6BD2:  BSF    FF2.7
6BD4:  MOVLW  04
6BD6:  MOVWF  x02
6BD8:  MOVLW  E1
6BDA:  MOVWF  x01
6BDC:  CLRF   x03
6BDE:  MOVLW  0A
6BE0:  MOVWF  x04
6BE2:  CLRF   x05
6BE4:  MOVLW  02
6BE6:  MOVWF  x06
6BE8:  MOVLB  0
6BEA:  CALL   1630
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6BEE:  MOVLW  04
6BF0:  MOVWF  FEA
6BF2:  MOVLW  E1
6BF4:  MOVWF  FE9
6BF6:  MOVFF  FF2,501
6BFA:  BCF    FF2.7
6BFC:  MOVLW  00
6BFE:  CALL   0EA4
6C02:  TBLRD*-
6C04:  TBLRD*+
6C06:  MOVF   FF5,W
6C08:  MOVWF  FEE
6C0A:  IORLW  00
6C0C:  BNZ   6C04
6C0E:  MOVLB  5
6C10:  BTFSC  x01.7
6C12:  BSF    FF2.7
6C14:  MOVLW  04
6C16:  MOVWF  x02
6C18:  MOVLW  E1
6C1A:  MOVWF  x01
6C1C:  CLRF   x03
6C1E:  MOVLW  1E
6C20:  MOVWF  x04
6C22:  CLRF   x05
6C24:  MOVLW  02
6C26:  MOVWF  x06
6C28:  MOVLB  0
6C2A:  CALL   1630
....................          glcd_update();} 
6C2E:  CALL   105C
6C32:  MOVLB  4
6C34:  BRA    6B8E
....................       } 
....................    } 
6C36:  MOVLB  0
6C38:  GOTO   2FEC
.................... } 
6C3C:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E1E   BROWNOUT NOWDT BORV20 PUT WDT32768 NOVREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
