CCS PCH C Compiler, Version 4.104, 5967               11-feb.-21 09:25

               Filename: D:\Laboratorio\Autoclave\Autoclave Horizontal\Sin Precamara\2016\Autoclave 34L UPTC #004587579\Firmware V3.2-Ajuste Secado\GLCD_Controller\GLCD_Controller.lst

               ROM used: 28350 bytes (87%)
                         Largest free fragment is 4414
               RAM used: 1286 (63%) at main() level
                         1336 (65%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2C14
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0F70
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
103E:  MOVLW  05
1040:  MOVWF  FEA
1042:  MOVLW  03
1044:  MOVWF  FE9
1046:  MOVF   FEF,W
1048:  BZ    1066
104A:  MOVLW  0F
104C:  MOVWF  01
104E:  CLRF   00
1050:  DECFSZ 00,F
1052:  BRA    1050
1054:  DECFSZ 01,F
1056:  BRA    104E
1058:  MOVLW  8F
105A:  MOVWF  00
105C:  DECFSZ 00,F
105E:  BRA    105C
1060:  NOP   
1062:  DECFSZ FEF,F
1064:  BRA    104A
1066:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
19B2:  MOVLW  08
19B4:  MOVWF  01
19B6:  MOVLW  11
19B8:  MOVWF  00
19BA:  DECFSZ 00,F
19BC:  BRA    19BA
19BE:  BCF    F8A.1
19C0:  BCF    F93.1
19C2:  MOVLW  11
19C4:  MOVWF  00
19C6:  DECFSZ 00,F
19C8:  BRA    19C6
19CA:  MOVLB  5
19CC:  RLCF   x06,F
19CE:  BCF    F8A.0
19D0:  BTFSC  FD8.0
19D2:  BSF    F93.0
19D4:  BTFSS  FD8.0
19D6:  BCF    F93.0
19D8:  BSF    F93.1
19DA:  BTFSS  F81.1
19DC:  BRA    19DA
19DE:  DECFSZ 01,F
19E0:  BRA    19E4
19E2:  BRA    19E8
19E4:  MOVLB  0
19E6:  BRA    19B6
19E8:  MOVLW  11
19EA:  MOVWF  00
19EC:  DECFSZ 00,F
19EE:  BRA    19EC
19F0:  BCF    F8A.1
19F2:  BCF    F93.1
19F4:  NOP   
19F6:  BSF    F93.0
19F8:  MOVLW  11
19FA:  MOVWF  00
19FC:  DECFSZ 00,F
19FE:  BRA    19FC
1A00:  MOVLW  11
1A02:  MOVWF  00
1A04:  DECFSZ 00,F
1A06:  BRA    1A04
1A08:  BSF    F93.1
1A0A:  BTFSS  F81.1
1A0C:  BRA    1A0A
1A0E:  CLRF   01
1A10:  MOVLW  11
1A12:  MOVWF  00
1A14:  DECFSZ 00,F
1A16:  BRA    1A14
1A18:  BTFSC  F81.0
1A1A:  BSF    01.0
1A1C:  BCF    F8A.1
1A1E:  BCF    F93.1
1A20:  BCF    F8A.0
1A22:  BCF    F93.0
1A24:  MOVLB  0
1A26:  RETLW  00
1A28:  MOVLW  08
1A2A:  MOVLB  5
1A2C:  MOVWF  x06
1A2E:  MOVFF  00,507
1A32:  BSF    F93.0
1A34:  MOVLW  11
1A36:  MOVWF  00
1A38:  DECFSZ 00,F
1A3A:  BRA    1A38
1A3C:  BSF    F93.1
1A3E:  BTFSS  F81.1
1A40:  BRA    1A3E
1A42:  BTFSC  F81.0
1A44:  BSF    FD8.0
1A46:  BTFSS  F81.0
1A48:  BCF    FD8.0
1A4A:  RLCF   01,F
1A4C:  MOVLW  11
1A4E:  MOVWF  00
1A50:  DECFSZ 00,F
1A52:  BRA    1A50
1A54:  BCF    F93.1
1A56:  BCF    F8A.1
1A58:  DECFSZ x06,F
1A5A:  BRA    1A32
1A5C:  BSF    F93.0
1A5E:  MOVLW  11
1A60:  MOVWF  00
1A62:  DECFSZ 00,F
1A64:  BRA    1A62
1A66:  BCF    F8A.0
1A68:  MOVF   x07,W
1A6A:  BTFSS  FD8.2
1A6C:  BCF    F93.0
1A6E:  NOP   
1A70:  BSF    F93.1
1A72:  BTFSS  F81.1
1A74:  BRA    1A72
1A76:  MOVLW  11
1A78:  MOVWF  00
1A7A:  DECFSZ 00,F
1A7C:  BRA    1A7A
1A7E:  BCF    F8A.1
1A80:  BCF    F93.1
1A82:  MOVLW  11
1A84:  MOVWF  00
1A86:  DECFSZ 00,F
1A88:  BRA    1A86
1A8A:  BCF    F8A.0
1A8C:  BCF    F93.0
1A8E:  MOVLB  0
1A90:  GOTO   1FDE (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
11BA:  BCF    F93.2
11BC:  BSF    F8A.2
....................    output_low(GLCD_E); 
11BE:  BCF    F93.7
11C0:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
11C2:  BCF    F93.3
11C4:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
11C6:  BCF    F93.4
11C8:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
11CA:  BCF    F93.5
11CC:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
11CE:  MOVLB  5
11D0:  CLRF   x18
11D2:  MOVLW  C0
11D4:  MOVWF  x19
11D6:  MOVLB  0
11D8:  RCALL  1068
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
11DA:  MOVLW  01
11DC:  MOVLB  5
11DE:  MOVWF  x18
11E0:  MOVLW  C0
11E2:  MOVWF  x19
11E4:  MOVLB  0
11E6:  RCALL  1068
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
11E8:  MOVLB  5
11EA:  CLRF   x18
11EC:  MOVLW  40
11EE:  MOVWF  x19
11F0:  MOVLB  0
11F2:  RCALL  1068
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
11F4:  MOVLW  01
11F6:  MOVLB  5
11F8:  MOVWF  x18
11FA:  MOVLW  40
11FC:  MOVWF  x19
11FE:  MOVLB  0
1200:  RCALL  1068
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
1202:  MOVLB  5
1204:  CLRF   x18
1206:  MOVLW  B8
1208:  MOVWF  x19
120A:  MOVLB  0
120C:  RCALL  1068
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
120E:  MOVLW  01
1210:  MOVLB  5
1212:  MOVWF  x18
1214:  MOVLW  B8
1216:  MOVWF  x19
1218:  MOVLB  0
121A:  RCALL  1068
....................  
....................    if(mode == ON) 
121C:  MOVLB  5
121E:  DECFSZ x02,W
1220:  BRA    123E
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
1222:  CLRF   x18
1224:  MOVLW  3F
1226:  MOVWF  x19
1228:  MOVLB  0
122A:  RCALL  1068
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
122C:  MOVLW  01
122E:  MOVLB  5
1230:  MOVWF  x18
1232:  MOVLW  3F
1234:  MOVWF  x19
1236:  MOVLB  0
1238:  RCALL  1068
....................    } 
....................    else 
123A:  BRA    1256
123C:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
123E:  CLRF   x18
1240:  MOVLW  3E
1242:  MOVWF  x19
1244:  MOVLB  0
1246:  RCALL  1068
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
1248:  MOVLW  01
124A:  MOVLB  5
124C:  MOVWF  x18
124E:  MOVLW  3E
1250:  MOVWF  x19
1252:  MOVLB  0
1254:  RCALL  1068
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
1256:  MOVLB  5
1258:  CLRF   x03
125A:  MOVLB  0
125C:  RCALL  10A8
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
125E:  RCALL  1102
....................    #endif 
.................... } 
1260:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
1102:  MOVLB  5
1104:  CLRF   x14
1106:  MOVLW  16
1108:  MOVWF  x13
....................    p2 = displayData.right; 
110A:  MOVLW  02
110C:  MOVWF  x16
110E:  MOVLW  16
1110:  MOVWF  x15
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
1112:  CLRF   x11
1114:  MOVF   x11,W
1116:  SUBLW  07
1118:  BNC   11B6
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
111A:  BCF    F93.5
111C:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
111E:  CLRF   x18
1120:  MOVLW  40
1122:  MOVWF  x19
1124:  MOVLB  0
1126:  RCALL  1068
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1128:  MOVLW  01
112A:  MOVLB  5
112C:  MOVWF  x18
112E:  MOVLW  40
1130:  MOVWF  x19
1132:  MOVLB  0
1134:  RCALL  1068
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1136:  MOVLB  5
1138:  MOVF   x11,W
113A:  IORLW  B8
113C:  MOVWF  x17
113E:  CLRF   x18
1140:  MOVWF  x19
1142:  MOVLB  0
1144:  RCALL  1068
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
1146:  MOVLB  5
1148:  MOVF   x11,W
114A:  IORLW  B8
114C:  MOVWF  x17
114E:  MOVLW  01
1150:  MOVWF  x18
1152:  MOVFF  517,519
1156:  MOVLB  0
1158:  RCALL  1068
....................       output_high(GLCD_DI);                     // Set for data 
115A:  BCF    F93.5
115C:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
115E:  MOVLB  5
1160:  CLRF   x12
1162:  MOVF   x12,W
1164:  SUBLW  3F
1166:  BNC   11B2
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
1168:  MOVFF  514,03
116C:  MOVF   x13,W
116E:  INCF   x13,F
1170:  BTFSC  FD8.2
1172:  INCF   x14,F
1174:  MOVWF  FE9
1176:  MOVFF  03,FEA
117A:  MOVFF  FEF,517
117E:  CLRF   x18
1180:  MOVFF  517,519
1184:  MOVLB  0
1186:  RCALL  1068
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
1188:  MOVLB  5
118A:  MOVFF  516,03
118E:  MOVF   x15,W
1190:  INCF   x15,F
1192:  BTFSC  FD8.2
1194:  INCF   x16,F
1196:  MOVWF  FE9
1198:  MOVFF  03,FEA
119C:  MOVFF  FEF,517
11A0:  MOVLW  01
11A2:  MOVWF  x18
11A4:  MOVFF  517,519
11A8:  MOVLB  0
11AA:  RCALL  1068
....................       } 
11AC:  MOVLB  5
11AE:  INCF   x12,F
11B0:  BRA    1162
....................    } 
11B2:  INCF   x11,F
11B4:  BRA    1114
.................... } 
11B6:  MOVLB  0
11B8:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
1262:  MOVLB  5
1264:  CLRF   x35
1266:  RRCF   x30,W
1268:  MOVWF  x34
126A:  RRCF   x34,F
126C:  RRCF   x34,F
126E:  MOVLW  1F
1270:  ANDWF  x34,F
....................    temp *= 64; 
1272:  RLCF   x34,F
1274:  RLCF   x35,F
1276:  RLCF   x34,F
1278:  RLCF   x35,F
127A:  RLCF   x34,F
127C:  RLCF   x35,F
127E:  RLCF   x34,F
1280:  RLCF   x35,F
1282:  RLCF   x34,F
1284:  RLCF   x35,F
1286:  RLCF   x34,F
1288:  RLCF   x35,F
128A:  MOVLW  C0
128C:  ANDWF  x34,F
....................    temp += x; 
128E:  MOVF   x2F,W
1290:  ADDWF  x34,F
1292:  MOVLW  00
1294:  ADDWFC x35,F
....................  
....................    if(x > 63) 
1296:  MOVF   x2F,W
1298:  SUBLW  3F
129A:  BC    12B6
....................    { 
....................       p = displayData.right + temp - 64; 
129C:  MOVLW  16
129E:  ADDWF  x34,W
12A0:  MOVWF  x36
12A2:  MOVLW  02
12A4:  ADDWFC x35,W
12A6:  MOVWF  x37
12A8:  MOVLW  40
12AA:  SUBWF  x36,W
12AC:  MOVWF  x32
12AE:  MOVLW  00
12B0:  SUBWFB x37,W
12B2:  MOVWF  x33
....................    } 
....................    else 
12B4:  BRA    12C2
....................    { 
....................       p = displayData.left + temp; 
12B6:  MOVLW  16
12B8:  ADDWF  x34,W
12BA:  MOVWF  x32
12BC:  MOVLW  00
12BE:  ADDWFC x35,W
12C0:  MOVWF  x33
....................    } 
....................  
....................    if(color) 
12C2:  MOVF   x31,F
12C4:  BZ    12F0
....................    { 
....................       bit_set(*p, y%8); 
12C6:  MOVFF  533,03
12CA:  MOVFF  532,FE9
12CE:  MOVFF  533,FEA
12D2:  MOVF   x30,W
12D4:  ANDLW  07
12D6:  MOVWF  x36
12D8:  MOVLW  01
12DA:  MOVWF  00
12DC:  MOVF   x36,W
12DE:  MOVWF  01
12E0:  BZ    12EA
12E2:  BCF    FD8.0
12E4:  RLCF   00,F
12E6:  DECFSZ 01,F
12E8:  BRA    12E2
12EA:  MOVF   00,W
12EC:  IORWF  FEF,F
....................    } 
....................    else 
12EE:  BRA    131A
....................    { 
....................       bit_clear(*p, y%8); 
12F0:  MOVFF  533,03
12F4:  MOVFF  532,FE9
12F8:  MOVFF  533,FEA
12FC:  MOVF   x30,W
12FE:  ANDLW  07
1300:  MOVWF  x36
1302:  MOVLW  01
1304:  MOVWF  00
1306:  MOVF   x36,W
1308:  MOVWF  01
130A:  BZ    1314
130C:  BCF    FD8.0
130E:  RLCF   00,F
1310:  DECFSZ 01,F
1312:  BRA    130C
1314:  MOVF   00,W
1316:  XORLW  FF
1318:  ANDWF  FEF,F
....................    } 
.................... } 
131A:  MOVLB  0
131C:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
10A8:  MOVLB  5
10AA:  CLRF   x06
10AC:  MOVLW  16
10AE:  MOVWF  x05
....................    p2 = displayData.right; 
10B0:  MOVLW  02
10B2:  MOVWF  x08
10B4:  MOVLW  16
10B6:  MOVWF  x07
....................    data = 0xFF * color; 
10B8:  MOVF   x03,W
10BA:  MULLW  FF
10BC:  MOVFF  FF3,504
....................  
....................    for(i=0; i<512; ++i) 
10C0:  CLRF   x0A
10C2:  CLRF   x09
10C4:  MOVF   x0A,W
10C6:  SUBLW  01
10C8:  BNC   10FE
....................    { 
....................       *p1++ = data; 
10CA:  MOVFF  506,03
10CE:  MOVF   x05,W
10D0:  INCF   x05,F
10D2:  BTFSC  FD8.2
10D4:  INCF   x06,F
10D6:  MOVWF  FE9
10D8:  MOVFF  03,FEA
10DC:  MOVFF  504,FEF
....................       *p2++ = data; 
10E0:  MOVFF  508,03
10E4:  MOVF   x07,W
10E6:  INCF   x07,F
10E8:  BTFSC  FD8.2
10EA:  INCF   x08,F
10EC:  MOVWF  FE9
10EE:  MOVFF  03,FEA
10F2:  MOVFF  504,FEF
....................    } 
10F6:  INCF   x09,F
10F8:  BTFSC  FD8.2
10FA:  INCF   x0A,F
10FC:  BRA    10C4
.................... } 
10FE:  MOVLB  0
1100:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
1068:  MOVLB  5
106A:  MOVF   x18,F
106C:  BZ    1074
....................       output_high(GLCD_CS2); 
106E:  BCF    F93.4
1070:  BSF    F8A.4
....................    else 
1072:  BRA    1078
....................       output_high(GLCD_CS1); 
1074:  BCF    F93.3
1076:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
1078:  BCF    F93.6
107A:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
107C:  CLRF   F95
107E:  MOVFF  519,F8C
....................    delay_cycles(50); 
1082:  MOVLW  10
1084:  MOVWF  00
1086:  DECFSZ 00,F
1088:  BRA    1086
108A:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
108C:  BCF    F93.7
108E:  BSF    F8A.7
....................    delay_cycles(250); 
1090:  MOVLW  53
1092:  MOVWF  00
1094:  DECFSZ 00,F
1096:  BRA    1094
....................    output_low(GLCD_E); 
1098:  BCF    F93.7
109A:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
109C:  BCF    F93.3
109E:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
10A0:  BCF    F93.4
10A2:  BCF    F8A.4
.................... } 
10A4:  MOVLB  0
10A6:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
14D6:  MOVLW  01
14D8:  MOVLB  5
14DA:  MOVWF  x28
14DC:  MOVWF  x29
14DE:  CLRF   x2E
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
14E0:  MOVF   x1F,W
14E2:  SUBWF  x21,W
14E4:  MOVWF  x2F
14E6:  MOVF   x2F,W
14E8:  BTFSS  x2F.7
14EA:  BRA    14F2
14EC:  MOVLW  00
14EE:  BSF    FD8.0
14F0:  SUBFWB x2F,W
14F2:  CLRF   03
14F4:  MOVWF  x26
14F6:  MOVFF  03,527
....................    dy = abs((signed int8)(y2 - y1)); 
14FA:  MOVF   x20,W
14FC:  SUBWF  x22,W
14FE:  MOVWF  x2F
1500:  MOVF   x2F,W
1502:  BTFSS  x2F.7
1504:  BRA    150C
1506:  MOVLW  00
1508:  BSF    FD8.0
150A:  SUBFWB x2F,W
150C:  CLRF   03
150E:  MOVWF  x24
1510:  MOVFF  03,525
....................    #endif 
....................  
....................    if(x1 > x2) 
1514:  MOVF   x1F,W
1516:  SUBWF  x21,W
1518:  BC    151E
....................       addx = -1; 
151A:  MOVLW  FF
151C:  MOVWF  x28
....................    if(y1 > y2) 
151E:  MOVF   x20,W
1520:  SUBWF  x22,W
1522:  BC    1528
....................       addy = -1; 
1524:  MOVLW  FF
1526:  MOVWF  x29
....................  
....................    if(dx >= dy) 
1528:  MOVF   x25,W
152A:  SUBWF  x27,W
152C:  BNC   15A4
152E:  BNZ   1536
1530:  MOVF   x24,W
1532:  SUBWF  x26,W
1534:  BNC   15A4
....................    { 
....................       dy *= 2; 
1536:  BCF    FD8.0
1538:  RLCF   x24,F
153A:  RLCF   x25,F
....................       P = dy - dx; 
153C:  MOVF   x26,W
153E:  SUBWF  x24,W
1540:  MOVWF  00
1542:  MOVF   x27,W
1544:  SUBWFB x25,W
1546:  MOVFF  00,52A
154A:  MOVWF  x2B
....................       diff = P - dx; 
154C:  MOVF   x26,W
154E:  SUBWF  x2A,W
1550:  MOVWF  x2C
1552:  MOVF   x27,W
1554:  SUBWFB x2B,W
1556:  MOVWF  x2D
....................  
....................       for(; i<=dx; ++i) 
1558:  MOVF   x27,F
155A:  BNZ   1562
155C:  MOVF   x2E,W
155E:  SUBWF  x26,W
1560:  BNC   15A2
....................       { 
....................          glcd_pixel(x1, y1, color); 
1562:  MOVFF  51F,52F
1566:  MOVFF  520,530
156A:  MOVFF  523,531
156E:  MOVLB  0
1570:  RCALL  1262
....................  
....................          if(P < 0) 
1572:  MOVLB  5
1574:  BTFSC  x2B.7
1576:  BRA    157A
1578:  BRA    158A
....................          { 
....................             P  += dy; 
157A:  MOVF   x24,W
157C:  ADDWF  x2A,F
157E:  MOVF   x25,W
1580:  ADDWFC x2B,F
....................             x1 += addx; 
1582:  MOVF   x28,W
1584:  ADDWF  x1F,W
1586:  MOVWF  x1F
....................          } 
....................          else 
1588:  BRA    159E
....................          { 
....................             P  += diff; 
158A:  MOVF   x2C,W
158C:  ADDWF  x2A,F
158E:  MOVF   x2D,W
1590:  ADDWFC x2B,F
....................             x1 += addx; 
1592:  MOVF   x28,W
1594:  ADDWF  x1F,W
1596:  MOVWF  x1F
....................             y1 += addy; 
1598:  MOVF   x29,W
159A:  ADDWF  x20,W
159C:  MOVWF  x20
....................          } 
....................       } 
159E:  INCF   x2E,F
15A0:  BRA    1558
....................    } 
....................    else 
15A2:  BRA    1610
....................    { 
....................       dx *= 2; 
15A4:  BCF    FD8.0
15A6:  RLCF   x26,F
15A8:  RLCF   x27,F
....................       P = dx - dy; 
15AA:  MOVF   x24,W
15AC:  SUBWF  x26,W
15AE:  MOVWF  00
15B0:  MOVF   x25,W
15B2:  SUBWFB x27,W
15B4:  MOVFF  00,52A
15B8:  MOVWF  x2B
....................       diff = P - dy; 
15BA:  MOVF   x24,W
15BC:  SUBWF  x2A,W
15BE:  MOVWF  x2C
15C0:  MOVF   x25,W
15C2:  SUBWFB x2B,W
15C4:  MOVWF  x2D
....................  
....................       for(; i<=dy; ++i) 
15C6:  MOVF   x25,F
15C8:  BNZ   15D0
15CA:  MOVF   x2E,W
15CC:  SUBWF  x24,W
15CE:  BNC   1610
....................       { 
....................          glcd_pixel(x1, y1, color); 
15D0:  MOVFF  51F,52F
15D4:  MOVFF  520,530
15D8:  MOVFF  523,531
15DC:  MOVLB  0
15DE:  RCALL  1262
....................  
....................          if(P < 0) 
15E0:  MOVLB  5
15E2:  BTFSC  x2B.7
15E4:  BRA    15E8
15E6:  BRA    15F8
....................          { 
....................             P  += dx; 
15E8:  MOVF   x26,W
15EA:  ADDWF  x2A,F
15EC:  MOVF   x27,W
15EE:  ADDWFC x2B,F
....................             y1 += addy; 
15F0:  MOVF   x29,W
15F2:  ADDWF  x20,W
15F4:  MOVWF  x20
....................          } 
....................          else 
15F6:  BRA    160C
....................          { 
....................             P  += diff; 
15F8:  MOVF   x2C,W
15FA:  ADDWF  x2A,F
15FC:  MOVF   x2D,W
15FE:  ADDWFC x2B,F
....................             x1 += addx; 
1600:  MOVF   x28,W
1602:  ADDWF  x1F,W
1604:  MOVWF  x1F
....................             y1 += addy; 
1606:  MOVF   x29,W
1608:  ADDWF  x20,W
160A:  MOVWF  x20
....................          } 
....................       } 
160C:  INCF   x2E,F
160E:  BRA    15C6
....................    } 
.................... } 
1610:  MOVLB  0
1612:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1614:  MOVLB  5
1616:  MOVF   x18,F
1618:  BZ    1676
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
161A:  MOVF   x16,W
161C:  SUBWF  x14,W
161E:  BC    162A
....................       { 
....................          xmin = x1; 
1620:  MOVFF  514,51B
....................          xmax = x2; 
1624:  MOVFF  516,51C
....................       } 
....................       else 
1628:  BRA    1632
....................       { 
....................          xmin = x2; 
162A:  MOVFF  516,51B
....................          xmax = x1; 
162E:  MOVFF  514,51C
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
1632:  MOVF   x17,W
1634:  SUBWF  x15,W
1636:  BC    1642
....................       { 
....................          ymin = y1; 
1638:  MOVFF  515,51D
....................          ymax = y2; 
163C:  MOVFF  517,51E
....................       } 
....................       else 
1640:  BRA    164A
....................       { 
....................          ymin = y2; 
1642:  MOVFF  517,51D
....................          ymax = y1; 
1646:  MOVFF  515,51E
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
164A:  MOVF   x1B,W
164C:  SUBWF  x1C,W
164E:  BNC   1674
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
1650:  MOVFF  51D,51A
1654:  MOVF   x1A,W
1656:  SUBWF  x1E,W
1658:  BNC   1670
....................          { 
....................             glcd_pixel(xmin, i, color); 
165A:  MOVFF  51B,52F
165E:  MOVFF  51A,530
1662:  MOVFF  519,531
1666:  MOVLB  0
1668:  RCALL  1262
....................          } 
166A:  MOVLB  5
166C:  INCF   x1A,F
166E:  BRA    1654
....................       } 
1670:  INCF   x1B,F
1672:  BRA    164A
....................    } 
....................    else 
1674:  BRA    16D2
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
1676:  MOVFF  514,51F
167A:  MOVFF  515,520
167E:  MOVFF  516,521
1682:  MOVFF  515,522
1686:  MOVFF  519,523
168A:  MOVLB  0
168C:  RCALL  14D6
....................       glcd_line(x1, y2, x2, y2, color); 
168E:  MOVFF  514,51F
1692:  MOVFF  517,520
1696:  MOVFF  516,521
169A:  MOVFF  517,522
169E:  MOVFF  519,523
16A2:  RCALL  14D6
....................       glcd_line(x1, y1, x1, y2, color); 
16A4:  MOVFF  514,51F
16A8:  MOVFF  515,520
16AC:  MOVFF  514,521
16B0:  MOVFF  517,522
16B4:  MOVFF  519,523
16B8:  RCALL  14D6
....................       glcd_line(x2, y1, x2, y2, color); 
16BA:  MOVFF  516,51F
16BE:  MOVFF  515,520
16C2:  MOVFF  516,521
16C6:  MOVFF  517,522
16CA:  MOVFF  519,523
16CE:  RCALL  14D6
16D0:  MOVLB  5
....................    } 
.................... } 
16D2:  MOVLB  0
16D4:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
220E:  MOVLB  5
2210:  CLRF   x07
....................    b = radius; 
2212:  MOVFF  504,508
....................    P = 1 - radius; 
2216:  MOVLW  01
2218:  BSF    FD8.0
221A:  SUBFWB x04,W
221C:  MOVWF  x09
....................  
....................    do 
....................    { 
....................       if(fill) 
221E:  MOVF   x05,F
2220:  BZ    22EC
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
2222:  MOVF   x07,W
2224:  SUBWF  x02,W
2226:  MOVWF  x0A
2228:  MOVF   x08,W
222A:  ADDWF  x03,W
222C:  MOVWF  x0B
222E:  MOVF   x07,W
2230:  ADDWF  x02,W
2232:  MOVWF  x0C
2234:  MOVF   x08,W
2236:  ADDWF  x03,W
2238:  MOVWF  x0D
223A:  MOVFF  50A,51F
223E:  MOVFF  50B,520
2242:  MOVFF  50C,521
2246:  MOVWF  x22
2248:  MOVFF  506,523
224C:  MOVLB  0
224E:  CALL   14D6
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
2252:  MOVLB  5
2254:  MOVF   x07,W
2256:  SUBWF  x02,W
2258:  MOVWF  x0A
225A:  MOVF   x08,W
225C:  SUBWF  x03,W
225E:  MOVWF  x0B
2260:  MOVF   x07,W
2262:  ADDWF  x02,W
2264:  MOVWF  x0C
2266:  MOVF   x08,W
2268:  SUBWF  x03,W
226A:  MOVWF  x0D
226C:  MOVFF  50A,51F
2270:  MOVFF  50B,520
2274:  MOVFF  50C,521
2278:  MOVWF  x22
227A:  MOVFF  506,523
227E:  MOVLB  0
2280:  CALL   14D6
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
2284:  MOVLB  5
2286:  MOVF   x08,W
2288:  SUBWF  x02,W
228A:  MOVWF  x0A
228C:  MOVF   x07,W
228E:  ADDWF  x03,W
2290:  MOVWF  x0B
2292:  MOVF   x08,W
2294:  ADDWF  x02,W
2296:  MOVWF  x0C
2298:  MOVF   x07,W
229A:  ADDWF  x03,W
229C:  MOVWF  x0D
229E:  MOVFF  50A,51F
22A2:  MOVFF  50B,520
22A6:  MOVFF  50C,521
22AA:  MOVWF  x22
22AC:  MOVFF  506,523
22B0:  MOVLB  0
22B2:  CALL   14D6
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
22B6:  MOVLB  5
22B8:  MOVF   x08,W
22BA:  SUBWF  x02,W
22BC:  MOVWF  x0A
22BE:  MOVF   x07,W
22C0:  SUBWF  x03,W
22C2:  MOVWF  x0B
22C4:  MOVF   x08,W
22C6:  ADDWF  x02,W
22C8:  MOVWF  x0C
22CA:  MOVF   x07,W
22CC:  SUBWF  x03,W
22CE:  MOVWF  x0D
22D0:  MOVFF  50A,51F
22D4:  MOVFF  50B,520
22D8:  MOVFF  50C,521
22DC:  MOVWF  x22
22DE:  MOVFF  506,523
22E2:  MOVLB  0
22E4:  CALL   14D6
....................       } 
....................       else 
22E8:  BRA    23DA
22EA:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
22EC:  MOVF   x02,W
22EE:  ADDWF  x07,W
22F0:  MOVWF  x0A
22F2:  MOVF   x03,W
22F4:  ADDWF  x08,W
22F6:  MOVWF  x0B
22F8:  MOVFF  50A,52F
22FC:  MOVWF  x30
22FE:  MOVFF  506,531
2302:  MOVLB  0
2304:  CALL   1262
....................          glcd_pixel(b+x, a+y, color); 
2308:  MOVLB  5
230A:  MOVF   x02,W
230C:  ADDWF  x08,W
230E:  MOVWF  x0A
2310:  MOVF   x03,W
2312:  ADDWF  x07,W
2314:  MOVWF  x0B
2316:  MOVFF  50A,52F
231A:  MOVWF  x30
231C:  MOVFF  506,531
2320:  MOVLB  0
2322:  CALL   1262
....................          glcd_pixel(x-a, b+y, color); 
2326:  MOVLB  5
2328:  MOVF   x07,W
232A:  SUBWF  x02,W
232C:  MOVWF  x0A
232E:  MOVF   x03,W
2330:  ADDWF  x08,W
2332:  MOVWF  x0B
2334:  MOVFF  50A,52F
2338:  MOVWF  x30
233A:  MOVFF  506,531
233E:  MOVLB  0
2340:  CALL   1262
....................          glcd_pixel(x-b, a+y, color); 
2344:  MOVLB  5
2346:  MOVF   x08,W
2348:  SUBWF  x02,W
234A:  MOVWF  x0A
234C:  MOVF   x03,W
234E:  ADDWF  x07,W
2350:  MOVWF  x0B
2352:  MOVFF  50A,52F
2356:  MOVWF  x30
2358:  MOVFF  506,531
235C:  MOVLB  0
235E:  CALL   1262
....................          glcd_pixel(b+x, y-a, color); 
2362:  MOVLB  5
2364:  MOVF   x02,W
2366:  ADDWF  x08,W
2368:  MOVWF  x0A
236A:  MOVF   x07,W
236C:  SUBWF  x03,W
236E:  MOVWF  x0B
2370:  MOVFF  50A,52F
2374:  MOVWF  x30
2376:  MOVFF  506,531
237A:  MOVLB  0
237C:  CALL   1262
....................          glcd_pixel(a+x, y-b, color); 
2380:  MOVLB  5
2382:  MOVF   x02,W
2384:  ADDWF  x07,W
2386:  MOVWF  x0A
2388:  MOVF   x08,W
238A:  SUBWF  x03,W
238C:  MOVWF  x0B
238E:  MOVFF  50A,52F
2392:  MOVWF  x30
2394:  MOVFF  506,531
2398:  MOVLB  0
239A:  CALL   1262
....................          glcd_pixel(x-a, y-b, color); 
239E:  MOVLB  5
23A0:  MOVF   x07,W
23A2:  SUBWF  x02,W
23A4:  MOVWF  x0A
23A6:  MOVF   x08,W
23A8:  SUBWF  x03,W
23AA:  MOVWF  x0B
23AC:  MOVFF  50A,52F
23B0:  MOVWF  x30
23B2:  MOVFF  506,531
23B6:  MOVLB  0
23B8:  CALL   1262
....................          glcd_pixel(x-b, y-a, color); 
23BC:  MOVLB  5
23BE:  MOVF   x08,W
23C0:  SUBWF  x02,W
23C2:  MOVWF  x0A
23C4:  MOVF   x07,W
23C6:  SUBWF  x03,W
23C8:  MOVWF  x0B
23CA:  MOVFF  50A,52F
23CE:  MOVWF  x30
23D0:  MOVFF  506,531
23D4:  MOVLB  0
23D6:  CALL   1262
....................       } 
....................  
....................       if(P < 0) 
23DA:  MOVLB  5
23DC:  BTFSC  x09.7
23DE:  BRA    23E2
23E0:  BRA    23FE
....................          P += 3 + 2 * a++; 
23E2:  MOVF   x07,W
23E4:  INCF   x07,F
23E6:  MOVWF  x0A
23E8:  MOVLW  02
23EA:  MOVWF  x0B
23EC:  MOVFF  50A,50C
23F0:  MOVLB  0
23F2:  RCALL  21C0
23F4:  MOVF   01,W
23F6:  ADDLW  03
23F8:  MOVLB  5
23FA:  ADDWF  x09,F
....................       else 
23FC:  BRA    2420
....................          P += 5 + 2 * (a++ - b--); 
23FE:  MOVF   x07,W
2400:  INCF   x07,F
2402:  MOVWF  x0A
2404:  MOVF   x08,W
2406:  DECF   x08,F
2408:  SUBWF  x0A,W
240A:  MOVWF  x0A
240C:  MOVLW  02
240E:  MOVWF  x0B
2410:  MOVFF  50A,50C
2414:  MOVLB  0
2416:  RCALL  21C0
2418:  MOVF   01,W
241A:  ADDLW  05
241C:  MOVLB  5
241E:  ADDWF  x09,F
....................     } while(a <= b); 
2420:  MOVF   x07,W
2422:  XORLW  80
2424:  MOVWF  00
2426:  MOVF   x08,W
2428:  XORLW  80
242A:  SUBWF  00,W
242C:  BTFSC  FD8.2
242E:  BRA    221E
2430:  BTFSS  FD8.0
2432:  BRA    221E
.................... } 
2434:  MOVLB  0
2436:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
131E:  MOVFF  516,03
1322:  MOVLB  5
1324:  MOVFF  515,FE9
1328:  MOVFF  516,FEA
132C:  MOVF   FEF,F
132E:  BTFSC  FD8.2
1330:  BRA    14D2
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
1332:  MOVFF  516,03
1336:  MOVFF  515,FE9
133A:  MOVFF  516,FEA
133E:  MOVF   FEF,W
1340:  SUBLW  52
1342:  BNC   1392
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1344:  MOVFF  516,03
1348:  MOVFF  515,FE9
134C:  MOVFF  516,FEA
1350:  MOVLW  20
1352:  SUBWF  FEF,W
1354:  MULLW  05
1356:  MOVF   FF3,W
1358:  CLRF   03
135A:  MOVWF  x22
135C:  MOVLW  05
135E:  MOVWF  FEA
1360:  MOVLW  1D
1362:  MOVWF  FE9
1364:  CLRF   x26
1366:  MOVFF  522,525
136A:  MOVFF  FF2,523
136E:  BCF    FF2.7
1370:  MOVLW  05
1372:  MOVWF  01
1374:  CLRF   FF7
1376:  MOVF   x22,W
1378:  MOVLB  0
137A:  CALL   0096
137E:  TBLRD*-
1380:  TBLRD*+
1382:  MOVFF  FF5,FEE
1386:  DECFSZ 01,F
1388:  BRA    1380
138A:  MOVLB  5
138C:  BTFSC  x23.7
138E:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
1390:  BRA    13FC
1392:  MOVFF  516,03
1396:  MOVFF  515,FE9
139A:  MOVFF  516,FEA
139E:  MOVF   FEF,W
13A0:  SUBLW  7E
13A2:  BNC   13F2
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
13A4:  MOVFF  516,03
13A8:  MOVFF  515,FE9
13AC:  MOVFF  516,FEA
13B0:  MOVLW  53
13B2:  SUBWF  FEF,W
13B4:  MULLW  05
13B6:  MOVF   FF3,W
13B8:  CLRF   03
13BA:  MOVWF  x22
13BC:  MOVLW  05
13BE:  MOVWF  FEA
13C0:  MOVLW  1D
13C2:  MOVWF  FE9
13C4:  CLRF   x26
13C6:  MOVFF  522,525
13CA:  MOVFF  FF2,523
13CE:  BCF    FF2.7
13D0:  MOVLW  05
13D2:  MOVWF  01
13D4:  CLRF   FF7
13D6:  MOVF   x22,W
13D8:  MOVLB  0
13DA:  CALL   01B0
13DE:  TBLRD*-
13E0:  TBLRD*+
13E2:  MOVFF  FF5,FEE
13E6:  DECFSZ 01,F
13E8:  BRA    13E0
13EA:  MOVLB  5
13EC:  BTFSC  x23.7
13EE:  BSF    FF2.7
....................       else 
13F0:  BRA    13FC
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
13F2:  CLRF   x1D
13F4:  CLRF   x1E
13F6:  CLRF   x1F
13F8:  CLRF   x20
13FA:  CLRF   x21
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
13FC:  MOVFF  516,03
1400:  MOVF   x15,W
1402:  MOVWF  FE9
1404:  MOVFF  03,FEA
1408:  MOVF   FEF,W
140A:  XORLW  0A
140C:  MOVLB  0
140E:  BZ    1416
1410:  XORLW  07
1412:  BZ    1426
1414:  BRA    142C
....................          case '\n': 
....................             y += 7*size + 1; 
1416:  MOVLB  5
1418:  MOVF   x17,W
141A:  MULLW  07
141C:  MOVF   FF3,W
141E:  ADDLW  01
1420:  ADDWF  x14,F
....................             continue; 
1422:  BRA    14C4
1424:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1426:  MOVLB  5
1428:  CLRF   x13
....................             continue; 
142A:  BRA    14C4
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
142C:  MOVLB  5
142E:  MOVF   x17,W
1430:  MULLW  05
1432:  MOVF   FF3,W
1434:  ADDWF  x13,W
1436:  SUBLW  7F
1438:  BC    1446
....................       { 
....................          x = 0;                           // Set x at far left position 
143A:  CLRF   x13
....................          y += 7*size + 1;                 // Set y at next position down 
143C:  MOVF   x17,W
143E:  MULLW  07
1440:  MOVF   FF3,W
1442:  ADDLW  01
1444:  ADDWF  x14,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1446:  CLRF   x19
1448:  MOVF   x19,W
144A:  SUBLW  04
144C:  BNC   14C4
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
144E:  CLRF   x1A
1450:  MOVF   x1A,W
1452:  SUBLW  06
1454:  BNC   14BC
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1456:  CLRF   03
1458:  MOVF   x19,W
145A:  ADDLW  1D
145C:  MOVWF  FE9
145E:  MOVLW  05
1460:  ADDWFC 03,W
1462:  MOVWF  FEA
1464:  MOVFF  FEF,522
1468:  MOVFF  522,00
146C:  MOVF   x1A,W
146E:  MOVWF  01
1470:  BZ    147A
1472:  BCF    FD8.0
1474:  RRCF   00,F
1476:  DECFSZ 01,F
1478:  BRA    1472
147A:  BTFSS  00.0
147C:  BRA    14B8
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
147E:  CLRF   x1B
1480:  MOVF   x17,W
1482:  SUBWF  x1B,W
1484:  BC    14B8
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
1486:  CLRF   x1C
1488:  MOVF   x17,W
148A:  SUBWF  x1C,W
148C:  BC    14B4
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
148E:  MOVF   x1C,W
1490:  ADDWF  x13,W
1492:  MOVWF  x22
1494:  MOVF   x1A,W
1496:  MULWF  x17
1498:  MOVF   FF3,W
149A:  ADDWF  x14,W
149C:  ADDWF  x1B,W
149E:  MOVWF  x23
14A0:  MOVFF  522,52F
14A4:  MOVWF  x30
14A6:  MOVFF  518,531
14AA:  MOVLB  0
14AC:  RCALL  1262
....................                   } 
14AE:  MOVLB  5
14B0:  INCF   x1C,F
14B2:  BRA    1488
....................                } 
14B4:  INCF   x1B,F
14B6:  BRA    1480
....................             } 
....................          } 
14B8:  INCF   x1A,F
14BA:  BRA    1450
....................       } 
14BC:  INCF   x19,F
14BE:  MOVF   x17,W
14C0:  ADDWF  x13,F
14C2:  BRA    1448
....................    } 
14C4:  INCF   x15,F
14C6:  BTFSC  FD8.2
14C8:  INCF   x16,F
14CA:  INCF   x13,F
14CC:  MOVLB  0
14CE:  BRA    131E
14D0:  MOVLB  5
.................... } 
14D2:  MOVLB  0
14D4:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0,ciclosecado=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=10,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
16D6:  MOVLB  5
16D8:  MOVFF  502,01
16DC:  MOVFF  503,03
16E0:  MOVFF  502,508
16E4:  MOVFF  503,509
16E8:  MOVLW  04
16EA:  MOVWF  FEA
16EC:  MOVLW  E2
16EE:  MOVWF  FE9
16F0:  MOVFF  503,FE2
16F4:  MOVFF  502,FE1
16F8:  MOVF   FE7,F
16FA:  MOVFF  FE6,FEE
16FE:  BNZ   16F8
....................    if(sombreado==2) 
1700:  MOVF   x06,W
1702:  SUBLW  02
1704:  BNZ   172E
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1706:  MOVLW  01
1708:  ADDWF  x04,W
170A:  MOVWF  x08
170C:  MOVLW  01
170E:  ADDWF  x05,W
1710:  MOVWF  x09
1712:  MOVFF  508,513
1716:  MOVWF  x14
1718:  MOVLW  04
171A:  MOVWF  x16
171C:  MOVLW  E2
171E:  MOVWF  x15
1720:  MOVFF  507,517
1724:  MOVLW  01
1726:  MOVWF  x18
1728:  MOVLB  0
172A:  RCALL  131E
172C:  MOVLB  5
....................    if(sombreado==1) 
172E:  DECFSZ x06,W
1730:  BRA    177C
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
1732:  MOVF   x07,W
1734:  MULLW  08
1736:  MOVF   FF3,W
1738:  ADDWF  x05,W
173A:  MOVWF  x08
173C:  CLRF   x14
173E:  MOVFF  505,515
1742:  MOVLW  7F
1744:  MOVWF  x16
1746:  MOVFF  508,517
174A:  MOVLW  01
174C:  MOVWF  x18
174E:  MOVWF  x19
1750:  MOVLB  0
1752:  RCALL  1614
1754:  MOVLW  01
1756:  MOVLB  5
1758:  ADDWF  x04,W
175A:  MOVWF  x08
175C:  MOVLW  01
175E:  ADDWF  x05,W
1760:  MOVWF  x09
1762:  MOVFF  508,513
1766:  MOVWF  x14
1768:  MOVLW  04
176A:  MOVWF  x16
176C:  MOVLW  E2
176E:  MOVWF  x15
1770:  MOVFF  507,517
1774:  CLRF   x18
1776:  MOVLB  0
1778:  RCALL  131E
177A:  MOVLB  5
....................    if(sombreado==0) 
177C:  MOVF   x06,F
177E:  BNZ   17CA
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1780:  MOVF   x07,W
1782:  MULLW  08
1784:  MOVF   FF3,W
1786:  ADDWF  x05,W
1788:  MOVWF  x08
178A:  CLRF   x14
178C:  MOVFF  505,515
1790:  MOVLW  7F
1792:  MOVWF  x16
1794:  MOVFF  508,517
1798:  MOVLW  01
179A:  MOVWF  x18
179C:  CLRF   x19
179E:  MOVLB  0
17A0:  RCALL  1614
17A2:  MOVLW  01
17A4:  MOVLB  5
17A6:  ADDWF  x04,W
17A8:  MOVWF  x08
17AA:  MOVLW  01
17AC:  ADDWF  x05,W
17AE:  MOVWF  x09
17B0:  MOVFF  508,513
17B4:  MOVWF  x14
17B6:  MOVLW  04
17B8:  MOVWF  x16
17BA:  MOVLW  E2
17BC:  MOVWF  x15
17BE:  MOVFF  507,517
17C2:  MOVLW  01
17C4:  MOVWF  x18
17C6:  MOVLB  0
17C8:  RCALL  131E
....................    glcd_update(); 
17CA:  MOVLB  0
17CC:  RCALL  1102
.................... } 
17CE:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
24BE:  MOVLB  5
24C0:  MOVF   x06,W
24C2:  SUBLW  02
24C4:  BNZ   2536
....................    { 
....................       sprintf(voltage, "%03u", digito); 
24C6:  MOVLW  05
24C8:  MOVWF  x01
24CA:  MOVLW  08
24CC:  MOVWF  x00
24CE:  MOVFF  503,511
24D2:  MOVLW  03
24D4:  MOVWF  x12
24D6:  MOVLB  0
24D8:  RCALL  2438
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
24DA:  MOVLB  5
24DC:  MOVF   x07,W
24DE:  MULLW  12
24E0:  MOVF   FF3,W
24E2:  ADDWF  x04,W
24E4:  MOVWF  x11
24E6:  MOVF   x07,W
24E8:  MULLW  08
24EA:  MOVF   FF3,W
24EC:  ADDWF  x05,W
24EE:  MOVWF  x12
24F0:  MOVFF  504,514
24F4:  MOVFF  505,515
24F8:  MOVFF  511,516
24FC:  MOVWF  x17
24FE:  MOVLW  01
2500:  MOVWF  x18
2502:  MOVWF  x19
2504:  MOVLB  0
2506:  CALL   1614
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
250A:  MOVLW  01
250C:  MOVLB  5
250E:  ADDWF  x04,W
2510:  MOVWF  x11
2512:  MOVLW  01
2514:  ADDWF  x05,W
2516:  MOVWF  x12
2518:  MOVFF  511,513
251C:  MOVWF  x14
251E:  MOVLW  05
2520:  MOVWF  x16
2522:  MOVLW  08
2524:  MOVWF  x15
2526:  MOVFF  507,517
252A:  CLRF   x18
252C:  MOVLB  0
252E:  CALL   131E
....................    } 
....................    else 
2532:  BRA    2604
2534:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
2536:  MOVLW  05
2538:  MOVWF  x01
253A:  MOVLW  08
253C:  MOVWF  x00
253E:  MOVFF  503,511
2542:  MOVLW  1B
2544:  MOVWF  x12
2546:  MOVLB  0
2548:  RCALL  2438
....................     
....................       if(sombreado==1) 
254A:  MOVLB  5
254C:  DECFSZ x06,W
254E:  BRA    25A8
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
2550:  MOVF   x07,W
2552:  MULLW  05
2554:  MOVF   FF3,W
2556:  ADDWF  x04,W
2558:  MOVWF  x11
255A:  MOVF   x07,W
255C:  MULLW  08
255E:  MOVF   FF3,W
2560:  ADDWF  x05,W
2562:  MOVWF  x12
2564:  MOVFF  504,514
2568:  MOVFF  505,515
256C:  MOVFF  511,516
2570:  MOVWF  x17
2572:  MOVLW  01
2574:  MOVWF  x18
2576:  MOVWF  x19
2578:  MOVLB  0
257A:  CALL   1614
257E:  MOVLW  01
2580:  MOVLB  5
2582:  ADDWF  x04,W
2584:  MOVWF  x11
2586:  MOVLW  01
2588:  ADDWF  x05,W
258A:  MOVWF  x12
258C:  MOVFF  511,513
2590:  MOVWF  x14
2592:  MOVLW  05
2594:  MOVWF  x16
2596:  MOVLW  08
2598:  MOVWF  x15
259A:  MOVFF  507,517
259E:  CLRF   x18
25A0:  MOVLB  0
25A2:  CALL   131E
25A6:  MOVLB  5
....................       if(sombreado==0) 
25A8:  MOVF   x06,F
25AA:  BNZ   2606
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
25AC:  MOVF   x07,W
25AE:  MULLW  05
25B0:  MOVF   FF3,W
25B2:  ADDWF  x04,W
25B4:  MOVWF  x11
25B6:  MOVF   x07,W
25B8:  MULLW  08
25BA:  MOVF   FF3,W
25BC:  ADDWF  x05,W
25BE:  MOVWF  x12
25C0:  MOVFF  504,514
25C4:  MOVFF  505,515
25C8:  MOVFF  511,516
25CC:  MOVWF  x17
25CE:  MOVLW  01
25D0:  MOVWF  x18
25D2:  CLRF   x19
25D4:  MOVLB  0
25D6:  CALL   1614
25DA:  MOVLW  01
25DC:  MOVLB  5
25DE:  ADDWF  x04,W
25E0:  MOVWF  x11
25E2:  MOVLW  01
25E4:  ADDWF  x05,W
25E6:  MOVWF  x12
25E8:  MOVFF  511,513
25EC:  MOVWF  x14
25EE:  MOVLW  05
25F0:  MOVWF  x16
25F2:  MOVLW  08
25F4:  MOVWF  x15
25F6:  MOVFF  507,517
25FA:  MOVLW  01
25FC:  MOVWF  x18
25FE:  MOVLB  0
2600:  CALL   131E
2604:  MOVLB  5
....................    } 
....................    glcd_update(); 
2606:  MOVLB  0
2608:  CALL   1102
.................... } 
260C:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2112:  MOVLB  5
2114:  MOVF   x02,W
2116:  SUBLW  05
2118:  BNZ   21BC
....................    for( i = 0 ; i < 64 ; i ++ ) 
211A:  CLRF   x03
211C:  MOVF   x03,W
211E:  SUBLW  3F
2120:  BNC   21BC
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2122:  CLRF   x04
2124:  MOVF   x04,W
2126:  SUBLW  0F
2128:  BNC   21B8
....................       {     
....................          for(k=7;k>-1;k--) 
212A:  MOVLW  07
212C:  MOVWF  x05
212E:  MOVF   x05,W
2130:  XORLW  80
2132:  SUBLW  7F
2134:  BC    21B4
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
2136:  CLRF   x07
2138:  MOVFF  503,506
213C:  CLRF   x09
213E:  MOVLW  10
2140:  MOVWF  x08
2142:  MOVLB  0
2144:  BRA    20EE
2146:  MOVFF  02,507
214A:  MOVFF  01,506
214E:  MOVLB  5
2150:  MOVF   x04,W
2152:  ADDWF  01,W
2154:  MOVWF  01
2156:  MOVLW  00
2158:  ADDWFC 02,W
215A:  MOVWF  03
215C:  MOVF   01,W
215E:  MOVFF  FF2,506
2162:  BCF    FF2.7
2164:  MOVFF  03,FF7
2168:  MOVLB  0
216A:  CALL   02A6
216E:  MOVLB  5
2170:  BTFSC  x06.7
2172:  BSF    FF2.7
2174:  MOVWF  x06
2176:  MOVLW  07
2178:  BSF    FD8.0
217A:  SUBFWB x05,W
217C:  MOVWF  x07
217E:  MOVFF  506,00
2182:  MOVF   x07,W
2184:  MOVWF  01
2186:  BZ    2190
2188:  BCF    FD8.0
218A:  RRCF   00,F
218C:  DECFSZ 01,F
218E:  BRA    2188
2190:  BTFSS  00.0
2192:  BRA    21B0
....................                glcd_pixel( j*8+k,i, ON ); 
2194:  MOVF   x04,W
2196:  MULLW  08
2198:  MOVF   FF3,W
219A:  ADDWF  x05,W
219C:  MOVWF  x06
219E:  MOVWF  x2F
21A0:  MOVFF  503,530
21A4:  MOVLW  01
21A6:  MOVWF  x31
21A8:  MOVLB  0
21AA:  CALL   1262
21AE:  MOVLB  5
....................          }   
21B0:  DECF   x05,F
21B2:  BRA    212E
....................       } 
21B4:  INCF   x04,F
21B6:  BRA    2124
....................    } 
21B8:  INCF   x03,F
21BA:  BRA    211C
....................    } 
....................     
.................... } 
21BC:  MOVLB  0
21BE:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0F70:  MOVLW  15
0F72:  MOVWF  FCF
0F74:  MOVLW  A0
0F76:  MOVWF  FCE
....................    tiempos++; 
0F78:  MOVLB  4
0F7A:  INCF   xAD,F
0F7C:  BTFSC  FD8.2
0F7E:  INCF   xAE,F
....................    tiempos3++; 
0F80:  INCF   xAF,F
0F82:  BTFSC  FD8.2
0F84:  INCF   xB0,F
....................    tiempoctrl++; 
0F86:  INCF   xB1,F
0F88:  BTFSC  FD8.2
0F8A:  INCF   xB2,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0F8C:  MOVF   xB0,F
0F8E:  BNZ   0F96
0F90:  MOVF   xAF,W
0F92:  SUBLW  27
0F94:  BC    0FA8
0F96:  MOVF   xAB,W
0F98:  SUBLW  02
0F9A:  BNZ   0FA8
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0F9C:  CLRF   xB0
0F9E:  CLRF   xAF
0FA0:  BSF    x96.7
0FA2:  INCF   xB7,F
0FA4:  BTFSC  FD8.2
0FA6:  INCF   xB8,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0FA8:  MOVF   xAD,W
0FAA:  SUBLW  C8
0FAC:  BNZ   1036
0FAE:  MOVF   xAE,F
0FB0:  BNZ   1036
....................    {tiempos=0;Lectura=1;tinicio++; 
0FB2:  CLRF   xAE
0FB4:  CLRF   xAD
0FB6:  BSF    x96.6
0FB8:  INCF   xB9,F
0FBA:  BTFSC  FD8.2
0FBC:  INCF   xBA,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0FBE:  DECFSZ xA9,W
0FC0:  BRA    0FFA
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0FC2:  INCF   xBF,F
....................       if(Testerilizacion[0]>9) 
0FC4:  BTFSC  xBF.7
0FC6:  BRA    0FD2
0FC8:  MOVF   xBF,W
0FCA:  SUBLW  09
0FCC:  BC    0FD2
....................          {Testerilizacion[0]=0; 
0FCE:  CLRF   xBF
....................           Testerilizacion[1]++;} 
0FD0:  INCF   xC0,F
....................        if(Testerilizacion[1]>5) 
0FD2:  BTFSC  xC0.7
0FD4:  BRA    0FE0
0FD6:  MOVF   xC0,W
0FD8:  SUBLW  05
0FDA:  BC    0FE0
....................          {Testerilizacion[1]=0; 
0FDC:  CLRF   xC0
....................           Testerilizacion[2]++;} 
0FDE:  INCF   xC1,F
....................          if(Testerilizacion[2]>9) 
0FE0:  BTFSC  xC1.7
0FE2:  BRA    0FEE
0FE4:  MOVF   xC1,W
0FE6:  SUBLW  09
0FE8:  BC    0FEE
....................             {Testerilizacion[2]=0; 
0FEA:  CLRF   xC1
....................              Testerilizacion[3]++;} 
0FEC:  INCF   xC2,F
....................             if(Testerilizacion[3]>5) 
0FEE:  BTFSC  xC2.7
0FF0:  BRA    0FFA
0FF2:  MOVF   xC2,W
0FF4:  SUBLW  05
0FF6:  BC    0FFA
....................                {Testerilizacion[3]=0;} 
0FF8:  CLRF   xC2
....................       }        
....................        
....................     if(tiempo_secado==1) 
0FFA:  DECFSZ xAA,W
0FFC:  BRA    1036
....................       { 
....................                       
....................       Tsecado[0]++; 
0FFE:  INCF   xC7,F
....................       if(Tsecado[0]>9) 
1000:  BTFSC  xC7.7
1002:  BRA    100E
1004:  MOVF   xC7,W
1006:  SUBLW  09
1008:  BC    100E
....................          {Tsecado[0]=0; 
100A:  CLRF   xC7
....................           Tsecado[1]++;} 
100C:  INCF   xC8,F
....................        if(Tsecado[1]>5) 
100E:  BTFSC  xC8.7
1010:  BRA    101C
1012:  MOVF   xC8,W
1014:  SUBLW  05
1016:  BC    101C
....................          {Tsecado[1]=0; 
1018:  CLRF   xC8
....................           Tsecado[2]++;} 
101A:  INCF   xC9,F
....................          if(Tsecado[2]>9) 
101C:  BTFSC  xC9.7
101E:  BRA    102A
1020:  MOVF   xC9,W
1022:  SUBLW  09
1024:  BC    102A
....................             {Tsecado[2]=0; 
1026:  CLRF   xC9
....................              Tsecado[3]++;} 
1028:  INCF   xCA,F
....................             if(Tsecado[3]>5) 
102A:  BTFSC  xCA.7
102C:  BRA    1036
102E:  MOVF   xCA,W
1030:  SUBLW  05
1032:  BC    1036
....................                {Tsecado[3]=0;} 
1034:  CLRF   xCA
....................       }   
....................    } 
....................    } 
....................     
1036:  BCF    F9E.0
1038:  MOVLB  0
103A:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
27C8:  MOVLW  07
27CA:  MOVLB  5
27CC:  ADDWF  x04,W
27CE:  MOVWF  x05
27D0:  MOVFF  502,514
27D4:  MOVFF  504,515
27D8:  MOVFF  503,516
27DC:  MOVWF  x17
27DE:  MOVLW  01
27E0:  MOVWF  x18
27E2:  CLRF   x19
27E4:  MOVLB  0
27E6:  CALL   1614
.................... } 
27EA:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%3.1f",adc); // Converts adc to text 
*
2B5C:  MOVLW  05
2B5E:  MOVLB  5
2B60:  MOVWF  x01
2B62:  MOVLW  09
2B64:  MOVWF  x00
2B66:  MOVLW  02
2B68:  MOVWF  FE9
2B6A:  MOVFF  505,515
2B6E:  MOVFF  504,514
2B72:  MOVFF  503,513
2B76:  MOVFF  502,512
2B7A:  MOVLW  01
2B7C:  MOVWF  x16
2B7E:  MOVLB  0
2B80:  BRA    29A8
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2B82:  MOVLB  5
2B84:  MOVF   x08,W
2B86:  MULLW  1B
2B88:  MOVF   FF3,W
2B8A:  ADDWF  x06,W
2B8C:  MOVWF  x12
2B8E:  MOVF   x08,W
2B90:  MULLW  08
2B92:  MOVF   FF3,W
2B94:  ADDWF  x07,W
2B96:  MOVWF  x13
2B98:  MOVFF  506,514
2B9C:  MOVFF  507,515
2BA0:  MOVFF  512,516
2BA4:  MOVWF  x17
2BA6:  MOVLW  01
2BA8:  MOVWF  x18
2BAA:  CLRF   x19
2BAC:  MOVLB  0
2BAE:  CALL   1614
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2BB2:  MOVFF  506,513
2BB6:  MOVFF  507,514
2BBA:  MOVLW  05
2BBC:  MOVLB  5
2BBE:  MOVWF  x16
2BC0:  MOVLW  09
2BC2:  MOVWF  x15
2BC4:  MOVFF  508,517
2BC8:  MOVLW  01
2BCA:  MOVWF  x18
2BCC:  MOVLB  0
2BCE:  CALL   131E
.................... } 
2BD2:  GOTO   6706 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
260E:  MOVFF  4C6,503
2612:  MOVLW  24
2614:  MOVLB  5
2616:  MOVWF  x04
2618:  CLRF   x05
261A:  CLRF   x06
261C:  MOVLW  01
261E:  MOVWF  x07
2620:  MOVLB  0
2622:  RCALL  24BE
2624:  MOVFF  4C5,503
2628:  MOVLW  2A
262A:  MOVLB  5
262C:  MOVWF  x04
262E:  CLRF   x05
2630:  CLRF   x06
2632:  MOVLW  01
2634:  MOVWF  x07
2636:  MOVLB  0
2638:  RCALL  24BE
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
263A:  MOVLW  04
263C:  MOVWF  FEA
263E:  MOVLW  E2
2640:  MOVWF  FE9
2642:  MOVFF  FF2,502
2646:  BCF    FF2.7
2648:  MOVLW  00
264A:  CALL   06BE
264E:  TBLRD*-
2650:  TBLRD*+
2652:  MOVF   FF5,W
2654:  MOVWF  FEE
2656:  IORLW  00
2658:  BNZ   2650
265A:  MOVLB  5
265C:  BTFSC  x02.7
265E:  BSF    FF2.7
2660:  MOVLW  04
2662:  MOVWF  x03
2664:  MOVLW  E2
2666:  MOVWF  x02
2668:  MOVLW  31
266A:  MOVWF  x04
266C:  CLRF   x05
266E:  MOVLW  02
2670:  MOVWF  x06
2672:  MOVLW  01
2674:  MOVWF  x07
2676:  MOVLB  0
2678:  CALL   16D6
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
267C:  MOVFF  4C4,503
2680:  MOVLW  36
2682:  MOVLB  5
2684:  MOVWF  x04
2686:  CLRF   x05
2688:  CLRF   x06
268A:  MOVLW  01
268C:  MOVWF  x07
268E:  MOVLB  0
2690:  RCALL  24BE
2692:  MOVFF  4C3,503
2696:  MOVLW  3C
2698:  MOVLB  5
269A:  MOVWF  x04
269C:  CLRF   x05
269E:  CLRF   x06
26A0:  MOVLW  01
26A2:  MOVWF  x07
26A4:  MOVLB  0
26A6:  RCALL  24BE
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
26A8:  MOVFF  4CE,503
26AC:  MOVLW  24
26AE:  MOVLB  5
26B0:  MOVWF  x04
26B2:  MOVLW  08
26B4:  MOVWF  x05
26B6:  CLRF   x06
26B8:  MOVLW  01
26BA:  MOVWF  x07
26BC:  MOVLB  0
26BE:  RCALL  24BE
26C0:  MOVFF  4CD,503
26C4:  MOVLW  2A
26C6:  MOVLB  5
26C8:  MOVWF  x04
26CA:  MOVLW  08
26CC:  MOVWF  x05
26CE:  CLRF   x06
26D0:  MOVLW  01
26D2:  MOVWF  x07
26D4:  MOVLB  0
26D6:  RCALL  24BE
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
26D8:  MOVLW  04
26DA:  MOVWF  FEA
26DC:  MOVLW  E2
26DE:  MOVWF  FE9
26E0:  MOVFF  FF2,502
26E4:  BCF    FF2.7
26E6:  MOVLW  00
26E8:  CALL   06BE
26EC:  TBLRD*-
26EE:  TBLRD*+
26F0:  MOVF   FF5,W
26F2:  MOVWF  FEE
26F4:  IORLW  00
26F6:  BNZ   26EE
26F8:  MOVLB  5
26FA:  BTFSC  x02.7
26FC:  BSF    FF2.7
26FE:  MOVLW  04
2700:  MOVWF  x03
2702:  MOVLW  E2
2704:  MOVWF  x02
2706:  MOVLW  31
2708:  MOVWF  x04
270A:  MOVLW  08
270C:  MOVWF  x05
270E:  MOVLW  02
2710:  MOVWF  x06
2712:  MOVLW  01
2714:  MOVWF  x07
2716:  MOVLB  0
2718:  CALL   16D6
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
271C:  MOVFF  4CC,503
2720:  MOVLW  36
2722:  MOVLB  5
2724:  MOVWF  x04
2726:  MOVLW  08
2728:  MOVWF  x05
272A:  CLRF   x06
272C:  MOVLW  01
272E:  MOVWF  x07
2730:  MOVLB  0
2732:  RCALL  24BE
2734:  MOVFF  4CB,503
2738:  MOVLW  3C
273A:  MOVLB  5
273C:  MOVWF  x04
273E:  MOVLW  08
2740:  MOVWF  x05
2742:  CLRF   x06
2744:  MOVLW  01
2746:  MOVWF  x07
2748:  MOVLB  0
274A:  RCALL  24BE
.................... } 
274C:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
18FC:  MOVLW  05
18FE:  MOVLB  5
1900:  MOVWF  x01
1902:  MOVLW  08
1904:  MOVWF  x00
1906:  MOVFF  504,511
190A:  MOVLW  1F
190C:  MOVWF  x12
190E:  MOVLB  0
1910:  BRA    181C
....................     
....................    if(sombreado==1) 
1912:  MOVLB  5
1914:  DECFSZ x07,W
1916:  BRA    1966
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1918:  MOVLW  12
191A:  ADDWF  x05,W
191C:  MOVWF  x11
191E:  MOVLW  18
1920:  ADDWF  x06,W
1922:  MOVWF  x12
1924:  MOVFF  505,514
1928:  MOVFF  506,515
192C:  MOVFF  511,516
1930:  MOVWF  x17
1932:  MOVLW  01
1934:  MOVWF  x18
1936:  MOVWF  x19
1938:  MOVLB  0
193A:  RCALL  1614
193C:  MOVLW  02
193E:  MOVLB  5
1940:  ADDWF  x05,W
1942:  MOVWF  x11
1944:  MOVLW  01
1946:  ADDWF  x06,W
1948:  MOVWF  x12
194A:  MOVFF  511,513
194E:  MOVWF  x14
1950:  MOVLW  05
1952:  MOVWF  x16
1954:  MOVLW  08
1956:  MOVWF  x15
1958:  MOVLW  02
195A:  MOVWF  x17
195C:  CLRF   x18
195E:  MOVLB  0
1960:  RCALL  131E
....................    else    
1962:  BRA    19B0
1964:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
1966:  MOVLW  12
1968:  ADDWF  x05,W
196A:  MOVWF  x11
196C:  MOVLW  18
196E:  ADDWF  x06,W
1970:  MOVWF  x12
1972:  MOVFF  505,514
1976:  MOVFF  506,515
197A:  MOVFF  511,516
197E:  MOVWF  x17
1980:  CLRF   x18
1982:  CLRF   x19
1984:  MOVLB  0
1986:  RCALL  1614
1988:  MOVLW  02
198A:  MOVLB  5
198C:  ADDWF  x05,W
198E:  MOVWF  x11
1990:  MOVLW  01
1992:  ADDWF  x06,W
1994:  MOVWF  x12
1996:  MOVFF  511,513
199A:  MOVWF  x14
199C:  MOVLW  05
199E:  MOVWF  x16
19A0:  MOVLW  08
19A2:  MOVWF  x15
19A4:  MOVLW  02
19A6:  MOVWF  x17
19A8:  MOVLW  01
19AA:  MOVWF  x18
19AC:  MOVLB  0
19AE:  RCALL  131E
....................  
.................... } 
19B0:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
2058:  BSF    F93.0
205A:  MOVLW  11
205C:  MOVWF  00
205E:  DECFSZ 00,F
2060:  BRA    205E
2062:  BSF    F93.1
2064:  MOVLW  11
2066:  MOVWF  00
2068:  DECFSZ 00,F
206A:  BRA    2068
206C:  BCF    F8A.0
206E:  BCF    F93.0
2070:  MOVLW  11
2072:  MOVWF  00
2074:  DECFSZ 00,F
2076:  BRA    2074
2078:  BCF    F8A.1
207A:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
207C:  MOVFF  503,506
2080:  RCALL  19B2
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
2082:  MOVFF  504,506
2086:  RCALL  19B2
....................    i2c_write(dato);        // Dato a transmitir 
2088:  MOVFF  505,506
208C:  RCALL  19B2
....................    i2c_stop();             // Fin comunicación 
208E:  BCF    F93.0
2090:  NOP   
2092:  BSF    F93.1
2094:  BTFSS  F81.1
2096:  BRA    2094
2098:  MOVLW  11
209A:  MOVWF  00
209C:  DECFSZ 00,F
209E:  BRA    209C
20A0:  BRA    20A2
20A2:  NOP   
20A4:  BSF    F93.0
20A6:  MOVLW  11
20A8:  MOVWF  00
20AA:  DECFSZ 00,F
20AC:  BRA    20AA
....................  } 
20AE:  GOTO   20E4 (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1F72:  BSF    F93.0
1F74:  MOVLW  11
1F76:  MOVWF  00
1F78:  DECFSZ 00,F
1F7A:  BRA    1F78
1F7C:  BSF    F93.1
1F7E:  MOVLW  11
1F80:  MOVWF  00
1F82:  DECFSZ 00,F
1F84:  BRA    1F82
1F86:  BCF    F8A.0
1F88:  BCF    F93.0
1F8A:  MOVLW  11
1F8C:  MOVWF  00
1F8E:  DECFSZ 00,F
1F90:  BRA    1F8E
1F92:  BCF    F8A.1
1F94:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1F96:  MOVFF  502,506
1F9A:  MOVLB  0
1F9C:  RCALL  19B2
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1F9E:  MOVFF  503,506
1FA2:  RCALL  19B2
....................    i2c_start();            // Reinicio 
1FA4:  BSF    F93.0
1FA6:  MOVLW  11
1FA8:  MOVWF  00
1FAA:  DECFSZ 00,F
1FAC:  BRA    1FAA
1FAE:  BSF    F93.1
1FB0:  MOVLW  11
1FB2:  MOVWF  00
1FB4:  DECFSZ 00,F
1FB6:  BRA    1FB4
1FB8:  BTFSS  F81.1
1FBA:  BRA    1FB8
1FBC:  BCF    F8A.0
1FBE:  BCF    F93.0
1FC0:  MOVLW  11
1FC2:  MOVWF  00
1FC4:  DECFSZ 00,F
1FC6:  BRA    1FC4
1FC8:  BCF    F8A.1
1FCA:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1FCC:  MOVLW  01
1FCE:  MOVLB  5
1FD0:  ADDWF  x02,W
1FD2:  MOVWF  x04
1FD4:  MOVWF  x06
1FD6:  MOVLB  0
1FD8:  RCALL  19B2
....................    dato=i2c_read(0);       // Lectura del dato 
1FDA:  CLRF   00
1FDC:  BRA    1A28
1FDE:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
1FE2:  BCF    F93.0
1FE4:  NOP   
1FE6:  BSF    F93.1
1FE8:  BTFSS  F81.1
1FEA:  BRA    1FE8
1FEC:  MOVLW  11
1FEE:  MOVWF  00
1FF0:  DECFSZ 00,F
1FF2:  BRA    1FF0
1FF4:  BRA    1FF6
1FF6:  NOP   
1FF8:  BSF    F93.0
1FFA:  MOVLW  11
1FFC:  MOVWF  00
1FFE:  DECFSZ 00,F
2000:  BRA    1FFE
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
2020:  MOVFF  499,456
....................    SlaveA0Tx[1]=EVDesfogue; 
2024:  MOVFF  49A,457
....................    SlaveA0Tx[2]=EVAgua; 
2028:  MOVFF  49B,458
....................    SlaveA0Tx[3]=EVTrampa; 
202C:  MOVFF  49C,459
....................    SlaveA0Tx[4]=MotorPuerta; 
2030:  MOVFF  49D,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
2034:  MOVFF  49E,45B
....................    SlaveA0Tx[6]=BombaVacio; 
2038:  MOVFF  49F,45C
....................    SlaveA0Tx[7]=BombaAgua; 
203C:  MOVFF  4A0,45D
....................    SlaveA0Tx[8]=Control; 
2040:  MOVFF  4A1,45E
....................    SlaveA0Tx[9]=Setpoint; 
2044:  MOVFF  4A6,45F
....................    SlaveA0Tx[10]=20; 
2048:  MOVLW  14
204A:  MOVLB  4
204C:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
204E:  MOVFF  4B5,462
.................... } 
2052:  MOVLB  0
2054:  GOTO   20B4 (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1EA2:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1EA6:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1EAA:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1EAE:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1EB2:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1EB6:  MOVLB  5
1EB8:  CLRF   x03
1EBA:  MOVFF  41B,502
1EBE:  MOVLB  0
1EC0:  RCALL  1A94
1EC2:  MOVFF  03,4BE
1EC6:  MOVFF  02,4BD
1ECA:  MOVFF  01,4BC
1ECE:  MOVFF  00,4BB
....................    Alarma=txbuf[6]; 
1ED2:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1ED6:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1EDA:  MOVFF  41E,4AC
....................    Decimal=txbuf[9]; 
1EDE:  MOVFF  41F,4A2
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1EE2:  MOVLB  5
1EE4:  CLRF   x03
1EE6:  MOVFF  4A2,502
1EEA:  MOVLB  0
1EEC:  RCALL  1A94
1EEE:  MOVFF  00,502
1EF2:  MOVFF  01,503
1EF6:  MOVFF  02,504
1EFA:  MOVFF  03,505
1EFE:  MOVFF  03,509
1F02:  MOVFF  02,508
1F06:  MOVFF  01,507
1F0A:  MOVFF  00,506
1F0E:  MOVLB  5
1F10:  CLRF   x0D
1F12:  CLRF   x0C
1F14:  MOVLW  20
1F16:  MOVWF  x0B
1F18:  MOVLW  82
1F1A:  MOVWF  x0A
1F1C:  MOVLB  0
1F1E:  BRA    1ACA
1F20:  BCF    FD8.1
1F22:  MOVFF  4BE,509
1F26:  MOVFF  4BD,508
1F2A:  MOVFF  4BC,507
1F2E:  MOVFF  4BB,506
1F32:  MOVFF  03,50D
1F36:  MOVFF  02,50C
1F3A:  MOVFF  01,50B
1F3E:  MOVFF  00,50A
1F42:  RCALL  1C2A
1F44:  MOVFF  03,4BE
1F48:  MOVFF  02,4BD
1F4C:  MOVFF  01,4BC
1F50:  MOVFF  00,4BB
.................... } 
1F54:  GOTO   201E (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
20B2:  BRA    2020
....................    for(i=0;i<13;i++) 
20B4:  MOVLB  4
20B6:  CLRF   xA5
20B8:  MOVF   xA5,W
20BA:  SUBLW  0C
20BC:  BNC   20EA
....................    { 
....................       direccion=0xA0; 
20BE:  MOVLW  A0
20C0:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
20C2:  CLRF   03
20C4:  MOVF   xA5,W
20C6:  ADDLW  56
20C8:  MOVWF  FE9
20CA:  MOVLW  04
20CC:  ADDWFC 03,W
20CE:  MOVWF  FEA
20D0:  MOVFF  FEF,502
20D4:  MOVFF  487,503
20D8:  MOVFF  4A5,504
20DC:  MOVFF  502,505
20E0:  MOVLB  0
20E2:  BRA    2058
....................    }  
20E4:  MOVLB  4
20E6:  INCF   xA5,F
20E8:  BRA    20B8
.................... } 
20EA:  MOVLB  0
20EC:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
1F58:  MOVLB  4
1F5A:  CLRF   xA5
1F5C:  MOVF   xA5,W
1F5E:  SUBLW  09
1F60:  BNC   201A
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1F62:  MOVLW  A0
1F64:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1F66:  MOVFF  4A5,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1F6A:  MOVFF  487,502
1F6E:  MOVFF  488,503
....................       txbuf[i]=(int8)dato; 
*
2002:  CLRF   03
2004:  MOVLB  4
2006:  MOVF   xA5,W
2008:  ADDLW  16
200A:  MOVWF  FE9
200C:  MOVLW  04
200E:  ADDWFC 03,W
2010:  MOVWF  FEA
2012:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
2016:  INCF   xA5,F
2018:  BRA    1F5C
....................    Lee_Vector(); 
201A:  MOVLB  0
201C:  BRA    1EA2
.................... } 
201E:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2C14:  CLRF   FF8
2C16:  BCF    FD0.7
2C18:  BSF    07.7
2C1A:  CLRF   FEA
2C1C:  CLRF   FE9
2C1E:  MOVLB  4
2C20:  CLRF   x86
2C22:  CLRF   x87
2C24:  CLRF   x88
2C26:  CLRF   x8D
2C28:  MOVLW  01
2C2A:  MOVWF  x8E
2C2C:  CLRF   x8F
2C2E:  CLRF   x90
2C30:  CLRF   x91
2C32:  CLRF   x92
2C34:  CLRF   x93
2C36:  CLRF   x94
2C38:  CLRF   x95
2C3A:  BCF    x96.0
2C3C:  BCF    x96.1
2C3E:  BCF    x96.2
2C40:  BCF    x96.3
2C42:  BSF    x96.4
2C44:  BCF    x96.5
2C46:  BCF    x96.6
2C48:  BCF    x96.7
2C4A:  BCF    x97.0
2C4C:  BCF    x97.1
2C4E:  BCF    x97.2
2C50:  BCF    x97.3
2C52:  BCF    x97.4
2C54:  BCF    x97.5
2C56:  BCF    x97.6
2C58:  BCF    x97.7
2C5A:  BCF    x98.0
2C5C:  BCF    x98.1
2C5E:  BCF    x98.2
2C60:  BCF    x98.3
2C62:  BCF    x98.4
2C64:  CLRF   x99
2C66:  CLRF   x9A
2C68:  CLRF   x9B
2C6A:  MOVLW  0A
2C6C:  MOVWF  x9C
2C6E:  CLRF   x9D
2C70:  CLRF   x9E
2C72:  CLRF   x9F
2C74:  CLRF   xA0
2C76:  CLRF   xA1
2C78:  CLRF   xA2
2C7A:  CLRF   xA3
2C7C:  MOVLW  01
2C7E:  MOVWF  xA4
2C80:  CLRF   xA5
2C82:  CLRF   xA6
2C84:  CLRF   xA7
2C86:  MOVWF  xA8
2C88:  CLRF   xA9
2C8A:  CLRF   xAA
2C8C:  CLRF   xAB
2C8E:  CLRF   xAC
2C90:  CLRF   xAE
2C92:  CLRF   xAD
2C94:  CLRF   xB0
2C96:  CLRF   xAF
2C98:  CLRF   xB2
2C9A:  CLRF   xB1
2C9C:  CLRF   xB4
2C9E:  MOVLW  0F
2CA0:  MOVWF  xB3
2CA2:  CLRF   xB6
2CA4:  CLRF   xB5
2CA6:  CLRF   xB8
2CA8:  CLRF   xB7
2CAA:  CLRF   xBA
2CAC:  CLRF   xB9
2CAE:  CLRF   xBE
2CB0:  CLRF   xBD
2CB2:  CLRF   xBC
2CB4:  CLRF   xBB
2CB6:  MOVF   FC1,W
2CB8:  ANDLW  C0
2CBA:  IORLW  0F
2CBC:  MOVWF  FC1
2CBE:  MOVLW  07
2CC0:  MOVWF  FB4
2CC2:  MOVLW  6B
2CC4:  MOVWF  x89
2CC6:  MOVLW  50
2CC8:  MOVWF  x8A
2CCA:  MOVLW  61
2CCC:  MOVWF  x8B
2CCE:  CLRF   x8C
2CD0:  CLRF   xBF
2CD2:  CLRF   xC0
2CD4:  CLRF   xC1
2CD6:  CLRF   xC2
2CD8:  CLRF   xC3
2CDA:  CLRF   xC4
2CDC:  CLRF   xC5
2CDE:  CLRF   xC6
2CE0:  CLRF   xC7
2CE2:  CLRF   xC8
2CE4:  CLRF   xC9
2CE6:  CLRF   xCA
2CE8:  CLRF   xCB
2CEA:  CLRF   xCC
2CEC:  CLRF   xCD
2CEE:  CLRF   xCE
2CF0:  CLRF   xCF
2CF2:  CLRF   xD0
2CF4:  CLRF   xD1
2CF6:  CLRF   xD2
2CF8:  CLRF   xD3
2CFA:  CLRF   xD4
2CFC:  CLRF   xD5
2CFE:  CLRF   xD6
2D00:  MOVLB  5
2D02:  CLRF   x00
2D04:  CLRF   x01
....................    Display_on; 
2D06:  BSF    F8D.0
2D08:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2D0A:  MOVLB  4
2D0C:  CLRF   x88
2D0E:  MOVF   x88,W
2D10:  SUBLW  0F
2D12:  BNC   2D48
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2D14:  CLRF   03
2D16:  MOVF   x88,W
2D18:  ADDLW  56
2D1A:  MOVWF  FE9
2D1C:  MOVLW  04
2D1E:  ADDWFC 03,W
2D20:  MOVWF  FEA
2D22:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2D24:  CLRF   03
2D26:  MOVF   x88,W
2D28:  ADDLW  66
2D2A:  MOVWF  FE9
2D2C:  MOVLW  04
2D2E:  ADDWFC 03,W
2D30:  MOVWF  FEA
2D32:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2D34:  CLRF   03
2D36:  MOVF   x88,W
2D38:  ADDLW  76
2D3A:  MOVWF  FE9
2D3C:  MOVLW  04
2D3E:  ADDWFC 03,W
2D40:  MOVWF  FEA
2D42:  CLRF   FEF
....................    } 
2D44:  INCF   x88,F
2D46:  BRA    2D0E
....................    output_d(0); 
2D48:  CLRF   F95
2D4A:  CLRF   F8C
....................    delay_ms(1000);    
2D4C:  MOVLW  04
2D4E:  MOVLB  5
2D50:  MOVWF  x02
2D52:  MOVLW  FA
2D54:  MOVWF  x03
2D56:  MOVLB  0
2D58:  CALL   103E
2D5C:  MOVLB  5
2D5E:  DECFSZ x02,F
2D60:  BRA    2D52
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2D62:  MOVLW  85
2D64:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2D66:  BSF    F9D.0
....................    enable_interrupts(global); 
2D68:  MOVLW  C0
2D6A:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2D6C:  MOVFF  FF2,502
2D70:  BCF    FF2.7
2D72:  CLRF   FA9
2D74:  BCF    FA6.6
2D76:  BCF    FA6.7
2D78:  BSF    FA6.0
2D7A:  MOVF   FA8,W
2D7C:  BTFSC  x02.7
2D7E:  BSF    FF2.7
2D80:  MOVLB  4
2D82:  MOVWF  xC3
2D84:  MOVFF  FF2,502
2D88:  BCF    FF2.7
2D8A:  MOVLW  01
2D8C:  MOVWF  FA9
2D8E:  BCF    FA6.6
2D90:  BCF    FA6.7
2D92:  BSF    FA6.0
2D94:  MOVF   FA8,W
2D96:  MOVLB  5
2D98:  BTFSC  x02.7
2D9A:  BSF    FF2.7
2D9C:  MOVLB  4
2D9E:  MOVWF  xC4
2DA0:  MOVFF  FF2,502
2DA4:  BCF    FF2.7
2DA6:  MOVLW  02
2DA8:  MOVWF  FA9
2DAA:  BCF    FA6.6
2DAC:  BCF    FA6.7
2DAE:  BSF    FA6.0
2DB0:  MOVF   FA8,W
2DB2:  MOVLB  5
2DB4:  BTFSC  x02.7
2DB6:  BSF    FF2.7
2DB8:  MOVLB  4
2DBA:  MOVWF  xC5
2DBC:  MOVFF  FF2,502
2DC0:  BCF    FF2.7
2DC2:  MOVLW  03
2DC4:  MOVWF  FA9
2DC6:  BCF    FA6.6
2DC8:  BCF    FA6.7
2DCA:  BSF    FA6.0
2DCC:  MOVF   FA8,W
2DCE:  MOVLB  5
2DD0:  BTFSC  x02.7
2DD2:  BSF    FF2.7
2DD4:  MOVLB  4
2DD6:  MOVWF  xC6
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2DD8:  MOVFF  FF2,502
2DDC:  BCF    FF2.7
2DDE:  MOVLW  04
2DE0:  MOVWF  FA9
2DE2:  BCF    FA6.6
2DE4:  BCF    FA6.7
2DE6:  BSF    FA6.0
2DE8:  MOVF   FA8,W
2DEA:  MOVLB  5
2DEC:  BTFSC  x02.7
2DEE:  BSF    FF2.7
2DF0:  MOVLB  4
2DF2:  MOVWF  xCB
2DF4:  MOVFF  FF2,502
2DF8:  BCF    FF2.7
2DFA:  MOVLW  05
2DFC:  MOVWF  FA9
2DFE:  BCF    FA6.6
2E00:  BCF    FA6.7
2E02:  BSF    FA6.0
2E04:  MOVF   FA8,W
2E06:  MOVLB  5
2E08:  BTFSC  x02.7
2E0A:  BSF    FF2.7
2E0C:  MOVLB  4
2E0E:  MOVWF  xCC
2E10:  MOVFF  FF2,502
2E14:  BCF    FF2.7
2E16:  MOVLW  06
2E18:  MOVWF  FA9
2E1A:  BCF    FA6.6
2E1C:  BCF    FA6.7
2E1E:  BSF    FA6.0
2E20:  MOVF   FA8,W
2E22:  MOVLB  5
2E24:  BTFSC  x02.7
2E26:  BSF    FF2.7
2E28:  MOVLB  4
2E2A:  MOVWF  xCD
2E2C:  MOVFF  FF2,502
2E30:  BCF    FF2.7
2E32:  MOVLW  07
2E34:  MOVWF  FA9
2E36:  BCF    FA6.6
2E38:  BCF    FA6.7
2E3A:  BSF    FA6.0
2E3C:  MOVF   FA8,W
2E3E:  MOVLB  5
2E40:  BTFSC  x02.7
2E42:  BSF    FF2.7
2E44:  MOVLB  4
2E46:  MOVWF  xCE
2E48:  MOVFF  FF2,502
2E4C:  BCF    FF2.7
2E4E:  MOVLW  08
2E50:  MOVWF  FA9
2E52:  BCF    FA6.6
2E54:  BCF    FA6.7
2E56:  BSF    FA6.0
2E58:  MOVF   FA8,W
2E5A:  MOVLB  5
2E5C:  BTFSC  x02.7
2E5E:  BSF    FF2.7
2E60:  MOVLB  4
2E62:  MOVWF  xA6
....................    Nivel=read_eeprom(9); 
2E64:  MOVFF  FF2,502
2E68:  BCF    FF2.7
2E6A:  MOVLW  09
2E6C:  MOVWF  FA9
2E6E:  BCF    FA6.6
2E70:  BCF    FA6.7
2E72:  BSF    FA6.0
2E74:  MOVF   FA8,W
2E76:  MOVLB  5
2E78:  BTFSC  x02.7
2E7A:  BSF    FF2.7
2E7C:  MOVLB  4
2E7E:  CLRF   xB6
2E80:  MOVWF  xB5
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2E82:  MOVFF  FF2,502
2E86:  BCF    FF2.7
2E88:  MOVLW  0A
2E8A:  MOVWF  FA9
2E8C:  BCF    FA6.6
2E8E:  BCF    FA6.7
2E90:  BSF    FA6.0
2E92:  MOVF   FA8,W
2E94:  MOVLB  5
2E96:  BTFSC  x02.7
2E98:  BSF    FF2.7
2E9A:  MOVLB  4
2E9C:  MOVWF  xD3
2E9E:  MOVFF  FF2,502
2EA2:  BCF    FF2.7
2EA4:  MOVLW  0B
2EA6:  MOVWF  FA9
2EA8:  BCF    FA6.6
2EAA:  BCF    FA6.7
2EAC:  BSF    FA6.0
2EAE:  MOVF   FA8,W
2EB0:  MOVLB  5
2EB2:  BTFSC  x02.7
2EB4:  BSF    FF2.7
2EB6:  MOVLB  4
2EB8:  MOVWF  xD4
2EBA:  MOVFF  FF2,502
2EBE:  BCF    FF2.7
2EC0:  MOVLW  0C
2EC2:  MOVWF  FA9
2EC4:  BCF    FA6.6
2EC6:  BCF    FA6.7
2EC8:  BSF    FA6.0
2ECA:  MOVF   FA8,W
2ECC:  MOVLB  5
2ECE:  BTFSC  x02.7
2ED0:  BSF    FF2.7
2ED2:  MOVLB  4
2ED4:  MOVWF  xD5
2ED6:  MOVFF  FF2,502
2EDA:  BCF    FF2.7
2EDC:  MOVLW  0D
2EDE:  MOVWF  FA9
2EE0:  BCF    FA6.6
2EE2:  BCF    FA6.7
2EE4:  BSF    FA6.0
2EE6:  MOVF   FA8,W
2EE8:  MOVLB  5
2EEA:  BTFSC  x02.7
2EEC:  BSF    FF2.7
2EEE:  MOVLB  4
2EF0:  MOVWF  xD6
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2EF2:  MOVLW  01
2EF4:  MOVLB  5
2EF6:  MOVWF  x02
2EF8:  MOVLB  0
2EFA:  CALL   11BA
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2EFE:  MOVLB  5
2F00:  CLRF   x03
2F02:  MOVLB  0
2F04:  CALL   10A8
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2F08:  MOVLW  04
2F0A:  MOVWF  FEA
2F0C:  MOVLW  E2
2F0E:  MOVWF  FE9
2F10:  MOVFF  FF2,502
2F14:  BCF    FF2.7
2F16:  MOVLW  00
2F18:  CALL   06DA
2F1C:  TBLRD*-
2F1E:  TBLRD*+
2F20:  MOVF   FF5,W
2F22:  MOVWF  FEE
2F24:  IORLW  00
2F26:  BNZ   2F1E
2F28:  MOVLB  5
2F2A:  BTFSC  x02.7
2F2C:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2F2E:  MOVLW  04
2F30:  MOVWF  x03
2F32:  MOVLW  E2
2F34:  MOVWF  x02
2F36:  CLRF   x04
2F38:  CLRF   x05
2F3A:  CLRF   x06
2F3C:  MOVLW  02
2F3E:  MOVWF  x07
2F40:  MOVLB  0
2F42:  CALL   16D6
....................    strcpy(Menus.Letra,"Autoclave Horizontal"); 
2F46:  MOVLW  04
2F48:  MOVWF  FEA
2F4A:  MOVLW  E2
2F4C:  MOVWF  FE9
2F4E:  MOVFF  FF2,502
2F52:  BCF    FF2.7
2F54:  MOVLW  00
2F56:  CALL   0700
2F5A:  TBLRD*-
2F5C:  TBLRD*+
2F5E:  MOVF   FF5,W
2F60:  MOVWF  FEE
2F62:  IORLW  00
2F64:  BNZ   2F5C
2F66:  MOVLB  5
2F68:  BTFSC  x02.7
2F6A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
2F6C:  MOVLW  04
2F6E:  MOVWF  x03
2F70:  MOVLW  E2
2F72:  MOVWF  x02
2F74:  CLRF   x04
2F76:  MOVLW  14
2F78:  MOVWF  x05
2F7A:  CLRF   x06
2F7C:  MOVLW  01
2F7E:  MOVWF  x07
2F80:  MOVLB  0
2F82:  CALL   16D6
....................    strcpy(Menus.Letra," 34 Litros  "); 
2F86:  MOVLW  04
2F88:  MOVWF  FEA
2F8A:  MOVLW  E2
2F8C:  MOVWF  FE9
2F8E:  MOVFF  FF2,502
2F92:  BCF    FF2.7
2F94:  MOVLW  00
2F96:  CALL   0730
2F9A:  TBLRD*-
2F9C:  TBLRD*+
2F9E:  MOVF   FF5,W
2FA0:  MOVWF  FEE
2FA2:  IORLW  00
2FA4:  BNZ   2F9C
2FA6:  MOVLB  5
2FA8:  BTFSC  x02.7
2FAA:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
2FAC:  MOVLW  04
2FAE:  MOVWF  x03
2FB0:  MOVLW  E2
2FB2:  MOVWF  x02
2FB4:  CLRF   x04
2FB6:  MOVLW  23
2FB8:  MOVWF  x05
2FBA:  CLRF   x06
2FBC:  MOVLW  02
2FBE:  MOVWF  x07
2FC0:  MOVLB  0
2FC2:  CALL   16D6
....................    delay_ms(1000); 
2FC6:  MOVLW  04
2FC8:  MOVLB  5
2FCA:  MOVWF  x02
2FCC:  MOVLW  FA
2FCE:  MOVWF  x03
2FD0:  MOVLB  0
2FD2:  CALL   103E
2FD6:  MOVLB  5
2FD8:  DECFSZ x02,F
2FDA:  BRA    2FCC
....................    delay_ms(1000); 
2FDC:  MOVLW  04
2FDE:  MOVWF  x02
2FE0:  MOVLW  FA
2FE2:  MOVWF  x03
2FE4:  MOVLB  0
2FE6:  CALL   103E
2FEA:  MOVLB  5
2FEC:  DECFSZ x02,F
2FEE:  BRA    2FE0
....................    delay_ms(1000); 
2FF0:  MOVLW  04
2FF2:  MOVWF  x02
2FF4:  MOVLW  FA
2FF6:  MOVWF  x03
2FF8:  MOVLB  0
2FFA:  CALL   103E
2FFE:  MOVLB  5
3000:  DECFSZ x02,F
3002:  BRA    2FF4
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
3004:  CLRF   x03
3006:  MOVLB  0
3008:  CALL   10A8
....................    displayContrasena(Contrasena[0],20,30,1); 
300C:  MOVFF  4CF,504
3010:  MOVLW  14
3012:  MOVLB  5
3014:  MOVWF  x05
3016:  MOVLW  1E
3018:  MOVWF  x06
301A:  MOVLW  01
301C:  MOVWF  x07
301E:  MOVLB  0
3020:  CALL   18FC
....................    displayContrasena(Contrasena[1],40,30,0); 
3024:  MOVFF  4D0,504
3028:  MOVLW  28
302A:  MOVLB  5
302C:  MOVWF  x05
302E:  MOVLW  1E
3030:  MOVWF  x06
3032:  CLRF   x07
3034:  MOVLB  0
3036:  CALL   18FC
....................    displayContrasena(Contrasena[2],60,30,0); 
303A:  MOVFF  4D1,504
303E:  MOVLW  3C
3040:  MOVLB  5
3042:  MOVWF  x05
3044:  MOVLW  1E
3046:  MOVWF  x06
3048:  CLRF   x07
304A:  MOVLB  0
304C:  CALL   18FC
....................    displayContrasena(Contrasena[3],80,30,0); 
3050:  MOVFF  4D2,504
3054:  MOVLW  50
3056:  MOVLB  5
3058:  MOVWF  x05
305A:  MOVLW  1E
305C:  MOVWF  x06
305E:  CLRF   x07
3060:  MOVLB  0
3062:  CALL   18FC
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
3066:  CALL   1F58
....................        
....................       Envio_Esclavos(); 
306A:  CALL   20B2
....................       glcd_update(); 
306E:  CALL   1102
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
3072:  BSF    F92.0
3074:  BTFSC  F80.0
3076:  BRA    308A
3078:  BSF    F92.1
307A:  BTFSC  F80.1
307C:  BRA    308A
307E:  BSF    F92.2
3080:  BTFSC  F80.2
3082:  BRA    308A
3084:  BSF    F92.3
3086:  BTFSS  F80.3
3088:  BRA    3092
....................       { 
....................          tinicio=0; 
308A:  MOVLB  4
308C:  CLRF   xBA
308E:  CLRF   xB9
3090:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
3092:  MOVLB  4
3094:  MOVF   xBA,W
3096:  SUBLW  37
3098:  BC    30B6
309A:  XORLW  FF
309C:  BNZ   30A4
309E:  MOVF   xB9,W
30A0:  SUBLW  3F
30A2:  BC    30B6
....................          glcd_fillscreen(OFF); 
30A4:  MOVLB  5
30A6:  CLRF   x03
30A8:  MOVLB  0
30AA:  CALL   10A8
....................          Display_off; 
30AE:  BCF    F8D.0
30B0:  BCF    F96.0
....................       } 
30B2:  BRA    3092
30B4:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
30B6:  MOVF   xA3,F
30B8:  BTFSS  FD8.2
30BA:  BRA    3650
....................        
....................       strcpy(Menus.Letra,"Clave"); 
30BC:  MOVLW  04
30BE:  MOVWF  FEA
30C0:  MOVLW  E2
30C2:  MOVWF  FE9
30C4:  MOVFF  FF2,502
30C8:  BCF    FF2.7
30CA:  MOVLW  00
30CC:  MOVLB  0
30CE:  CALL   0758
30D2:  TBLRD*-
30D4:  TBLRD*+
30D6:  MOVF   FF5,W
30D8:  MOVWF  FEE
30DA:  IORLW  00
30DC:  BNZ   30D4
30DE:  MOVLB  5
30E0:  BTFSC  x02.7
30E2:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
30E4:  MOVLW  04
30E6:  MOVWF  x03
30E8:  MOVLW  E2
30EA:  MOVWF  x02
30EC:  MOVLW  1E
30EE:  MOVWF  x04
30F0:  CLRF   x05
30F2:  MOVLW  01
30F4:  MOVWF  x06
30F6:  MOVLW  02
30F8:  MOVWF  x07
30FA:  MOVLB  0
30FC:  CALL   16D6
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
3100:  BSF    F92.0
3102:  BTFSS  F80.0
3104:  BRA    31DC
....................       { 
....................          if(Flanco == 0) 
3106:  MOVLB  4
3108:  BTFSC  x96.0
310A:  BRA    31DA
....................          { 
....................             Flanco = 1;delay_ms(30); 
310C:  BSF    x96.0
310E:  MOVLW  1E
3110:  MOVLB  5
3112:  MOVWF  x03
3114:  MOVLB  0
3116:  CALL   103E
....................             for(i=1;i<=4;i++) 
311A:  MOVLW  01
311C:  MOVLB  4
311E:  MOVWF  xA5
3120:  MOVF   xA5,W
3122:  SUBLW  04
3124:  BNC   31DA
....................             { 
....................                if(unidad==i) 
3126:  MOVF   xA5,W
3128:  SUBWF  xA4,W
312A:  BNZ   31A2
....................                { 
....................                   Contrasena[i-1]++; 
312C:  MOVLW  01
312E:  SUBWF  xA5,W
3130:  CLRF   03
3132:  ADDLW  CF
3134:  MOVWF  FE9
3136:  MOVLW  04
3138:  ADDWFC 03,W
313A:  MOVWF  FEA
313C:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
313E:  MOVLW  01
3140:  SUBWF  xA5,W
3142:  CLRF   03
3144:  ADDLW  CF
3146:  MOVWF  FE9
3148:  MOVLW  04
314A:  ADDWFC 03,W
314C:  MOVWF  FEA
314E:  BTFSC  FEF.7
3150:  BRA    316A
3152:  MOVF   FEF,W
3154:  SUBLW  09
3156:  BC    316A
....................                   { 
....................                      Contrasena[i-1]=0; 
3158:  MOVLW  01
315A:  SUBWF  xA5,W
315C:  CLRF   03
315E:  ADDLW  CF
3160:  MOVWF  FE9
3162:  MOVLW  04
3164:  ADDWFC 03,W
3166:  MOVWF  FEA
3168:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
316A:  MOVLW  01
316C:  SUBWF  xA5,W
316E:  CLRF   03
3170:  ADDLW  CF
3172:  MOVWF  FE9
3174:  MOVLW  04
3176:  ADDWFC 03,W
3178:  MOVWF  FEA
317A:  MOVFF  FEF,502
317E:  MOVF   xA5,W
3180:  MULLW  14
3182:  MOVFF  FF3,503
3186:  MOVLB  5
3188:  MOVFF  502,504
318C:  MOVFF  503,505
3190:  MOVLW  1E
3192:  MOVWF  x06
3194:  MOVLW  01
3196:  MOVWF  x07
3198:  MOVLB  0
319A:  CALL   18FC
....................                } 
....................                else 
319E:  BRA    31D4
31A0:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
31A2:  MOVLW  01
31A4:  SUBWF  xA5,W
31A6:  CLRF   03
31A8:  ADDLW  CF
31AA:  MOVWF  FE9
31AC:  MOVLW  04
31AE:  ADDWFC 03,W
31B0:  MOVWF  FEA
31B2:  MOVFF  FEF,502
31B6:  MOVF   xA5,W
31B8:  MULLW  14
31BA:  MOVFF  FF3,503
31BE:  MOVLB  5
31C0:  MOVFF  502,504
31C4:  MOVFF  503,505
31C8:  MOVLW  1E
31CA:  MOVWF  x06
31CC:  CLRF   x07
31CE:  MOVLB  0
31D0:  CALL   18FC
....................                } 
....................             } 
31D4:  MOVLB  4
31D6:  INCF   xA5,F
31D8:  BRA    3120
....................          } 
....................       } 
....................          else 
31DA:  BRA    31E0
....................             {Flanco = 0;} 
31DC:  MOVLB  4
31DE:  BCF    x96.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
31E0:  BSF    F92.1
31E2:  BTFSS  F80.1
31E4:  BRA    32B8
....................       { 
....................          if(Flanco2 == 0) 
31E6:  BTFSC  x96.2
31E8:  BRA    32B6
....................             {Flanco2 = 1;delay_ms(30); 
31EA:  BSF    x96.2
31EC:  MOVLW  1E
31EE:  MOVLB  5
31F0:  MOVWF  x03
31F2:  MOVLB  0
31F4:  CALL   103E
....................                for(i=1;i<=4;i++) 
31F8:  MOVLW  01
31FA:  MOVLB  4
31FC:  MOVWF  xA5
31FE:  MOVF   xA5,W
3200:  SUBLW  04
3202:  BNC   32B6
....................                { 
....................                   if(unidad==i) 
3204:  MOVF   xA5,W
3206:  SUBWF  xA4,W
3208:  BNZ   327E
....................                   {Contrasena[i-1]--;  
320A:  MOVLW  01
320C:  SUBWF  xA5,W
320E:  CLRF   03
3210:  ADDLW  CF
3212:  MOVWF  FE9
3214:  MOVLW  04
3216:  ADDWFC 03,W
3218:  MOVWF  FEA
321A:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
321C:  MOVLW  01
321E:  SUBWF  xA5,W
3220:  CLRF   03
3222:  ADDLW  CF
3224:  MOVWF  FE9
3226:  MOVLW  04
3228:  ADDWFC 03,W
322A:  MOVWF  FEA
322C:  BTFSC  FEF.7
322E:  BRA    3232
3230:  BRA    3246
....................                         {Contrasena[i-1]=9;} 
3232:  MOVLW  01
3234:  SUBWF  xA5,W
3236:  CLRF   03
3238:  ADDLW  CF
323A:  MOVWF  FE9
323C:  MOVLW  04
323E:  ADDWFC 03,W
3240:  MOVWF  FEA
3242:  MOVLW  09
3244:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
3246:  MOVLW  01
3248:  SUBWF  xA5,W
324A:  CLRF   03
324C:  ADDLW  CF
324E:  MOVWF  FE9
3250:  MOVLW  04
3252:  ADDWFC 03,W
3254:  MOVWF  FEA
3256:  MOVFF  FEF,502
325A:  MOVF   xA5,W
325C:  MULLW  14
325E:  MOVFF  FF3,503
3262:  MOVLB  5
3264:  MOVFF  502,504
3268:  MOVFF  503,505
326C:  MOVLW  1E
326E:  MOVWF  x06
3270:  MOVLW  01
3272:  MOVWF  x07
3274:  MOVLB  0
3276:  CALL   18FC
....................                   else 
327A:  BRA    32B0
327C:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
327E:  MOVLW  01
3280:  SUBWF  xA5,W
3282:  CLRF   03
3284:  ADDLW  CF
3286:  MOVWF  FE9
3288:  MOVLW  04
328A:  ADDWFC 03,W
328C:  MOVWF  FEA
328E:  MOVFF  FEF,502
3292:  MOVF   xA5,W
3294:  MULLW  14
3296:  MOVFF  FF3,503
329A:  MOVLB  5
329C:  MOVFF  502,504
32A0:  MOVFF  503,505
32A4:  MOVLW  1E
32A6:  MOVWF  x06
32A8:  CLRF   x07
32AA:  MOVLB  0
32AC:  CALL   18FC
....................                }       
32B0:  MOVLB  4
32B2:  INCF   xA5,F
32B4:  BRA    31FE
....................             }      
....................       } 
....................          else 
32B6:  BRA    32BA
....................             {Flanco2 = 0;}   
32B8:  BCF    x96.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
32BA:  BSF    F92.2
32BC:  BTFSS  F80.2
32BE:  BRA    3358
....................       { 
....................          if(Flanco1 == 0) 
32C0:  BTFSC  x96.1
32C2:  BRA    3356
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
32C4:  BSF    x96.1
32C6:  MOVLW  1E
32C8:  MOVLB  5
32CA:  MOVWF  x03
32CC:  MOVLB  0
32CE:  CALL   103E
32D2:  MOVLB  4
32D4:  INCF   xA4,F
....................                for(i=1;i<=4;i++) 
32D6:  MOVLW  01
32D8:  MOVWF  xA5
32DA:  MOVF   xA5,W
32DC:  SUBLW  04
32DE:  BNC   3356
....................                { 
....................                   if(unidad==i) 
32E0:  MOVF   xA5,W
32E2:  SUBWF  xA4,W
32E4:  BNZ   331E
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
32E6:  MOVLW  01
32E8:  SUBWF  xA5,W
32EA:  CLRF   03
32EC:  ADDLW  CF
32EE:  MOVWF  FE9
32F0:  MOVLW  04
32F2:  ADDWFC 03,W
32F4:  MOVWF  FEA
32F6:  MOVFF  FEF,502
32FA:  MOVF   xA5,W
32FC:  MULLW  14
32FE:  MOVFF  FF3,503
3302:  MOVLB  5
3304:  MOVFF  502,504
3308:  MOVFF  503,505
330C:  MOVLW  1E
330E:  MOVWF  x06
3310:  MOVLW  01
3312:  MOVWF  x07
3314:  MOVLB  0
3316:  CALL   18FC
....................                   else 
331A:  BRA    3350
331C:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
331E:  MOVLW  01
3320:  SUBWF  xA5,W
3322:  CLRF   03
3324:  ADDLW  CF
3326:  MOVWF  FE9
3328:  MOVLW  04
332A:  ADDWFC 03,W
332C:  MOVWF  FEA
332E:  MOVFF  FEF,502
3332:  MOVF   xA5,W
3334:  MULLW  14
3336:  MOVFF  FF3,503
333A:  MOVLB  5
333C:  MOVFF  502,504
3340:  MOVFF  503,505
3344:  MOVLW  1E
3346:  MOVWF  x06
3348:  CLRF   x07
334A:  MOVLB  0
334C:  CALL   18FC
....................                } 
3350:  MOVLB  4
3352:  INCF   xA5,F
3354:  BRA    32DA
....................             } 
....................       } 
....................          else 
3356:  BRA    335A
....................             {Flanco1 = 0;}   
3358:  BCF    x96.1
....................      
....................       if(unidad>4) 
335A:  MOVF   xA4,W
335C:  SUBLW  04
335E:  BTFSC  FD8.0
3360:  BRA    3650
....................       {glcd_fillScreen(OFF);unidad=4; 
3362:  MOVLB  5
3364:  CLRF   x03
3366:  MOVLB  0
3368:  CALL   10A8
336C:  MOVLW  04
336E:  MOVLB  4
3370:  MOVWF  xA4
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
3372:  MOVF   xCF,W
3374:  SUBLW  03
3376:  BNZ   345E
3378:  MOVF   xD0,W
337A:  SUBLW  08
337C:  BNZ   345E
337E:  MOVF   xD1,W
3380:  SUBLW  09
3382:  BNZ   345E
3384:  MOVF   xD2,W
3386:  SUBLW  02
3388:  BNZ   345E
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
338A:  MOVLW  0A
338C:  MOVWF  FA9
338E:  CLRF   FA8
3390:  BCF    FA6.6
3392:  BCF    FA6.7
3394:  BSF    FA6.2
3396:  MOVF   FF2,W
3398:  MOVWF  00
339A:  BCF    FF2.7
339C:  MOVLB  F
339E:  MOVLW  55
33A0:  MOVWF  FA7
33A2:  MOVLW  AA
33A4:  MOVWF  FA7
33A6:  BSF    FA6.1
33A8:  BTFSC  FA6.1
33AA:  BRA    33A8
33AC:  BCF    FA6.2
33AE:  MOVF   00,W
33B0:  IORWF  FF2,F
33B2:  MOVLW  14
33B4:  MOVLB  5
33B6:  MOVWF  x03
33B8:  MOVLB  0
33BA:  CALL   103E
33BE:  MOVLW  0B
33C0:  MOVWF  FA9
33C2:  CLRF   FA8
33C4:  BCF    FA6.6
33C6:  BCF    FA6.7
33C8:  BSF    FA6.2
33CA:  MOVF   FF2,W
33CC:  MOVWF  00
33CE:  BCF    FF2.7
33D0:  MOVLB  F
33D2:  MOVLW  55
33D4:  MOVWF  FA7
33D6:  MOVLW  AA
33D8:  MOVWF  FA7
33DA:  BSF    FA6.1
33DC:  BTFSC  FA6.1
33DE:  BRA    33DC
33E0:  BCF    FA6.2
33E2:  MOVF   00,W
33E4:  IORWF  FF2,F
33E6:  MOVLW  14
33E8:  MOVLB  5
33EA:  MOVWF  x03
33EC:  MOVLB  0
33EE:  CALL   103E
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
33F2:  MOVLW  0C
33F4:  MOVWF  FA9
33F6:  CLRF   FA8
33F8:  BCF    FA6.6
33FA:  BCF    FA6.7
33FC:  BSF    FA6.2
33FE:  MOVF   FF2,W
3400:  MOVWF  00
3402:  BCF    FF2.7
3404:  MOVLB  F
3406:  MOVLW  55
3408:  MOVWF  FA7
340A:  MOVLW  AA
340C:  MOVWF  FA7
340E:  BSF    FA6.1
3410:  BTFSC  FA6.1
3412:  BRA    3410
3414:  BCF    FA6.2
3416:  MOVF   00,W
3418:  IORWF  FF2,F
341A:  MOVLW  14
341C:  MOVLB  5
341E:  MOVWF  x03
3420:  MOVLB  0
3422:  CALL   103E
3426:  MOVLW  0D
3428:  MOVWF  FA9
342A:  CLRF   FA8
342C:  BCF    FA6.6
342E:  BCF    FA6.7
3430:  BSF    FA6.2
3432:  MOVF   FF2,W
3434:  MOVWF  00
3436:  BCF    FF2.7
3438:  MOVLB  F
343A:  MOVLW  55
343C:  MOVWF  FA7
343E:  MOVLW  AA
3440:  MOVWF  FA7
3442:  BSF    FA6.1
3444:  BTFSC  FA6.1
3446:  BRA    3444
3448:  BCF    FA6.2
344A:  MOVF   00,W
344C:  IORWF  FF2,F
344E:  MOVLW  14
3450:  MOVLB  5
3452:  MOVWF  x03
3454:  MOVLB  0
3456:  CALL   103E
....................              reset_cpu();}         
345A:  RESET
345C:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
345E:  MOVF   xD3,W
3460:  SUBWF  xCF,W
3462:  BNZ   3534
3464:  MOVF   xD4,W
3466:  SUBWF  xD0,W
3468:  BNZ   3534
346A:  MOVF   xD5,W
346C:  SUBWF  xD1,W
346E:  BNZ   3534
3470:  MOVF   xD6,W
3472:  SUBWF  xD2,W
3474:  BNZ   3534
....................          { 
....................             glcd_fillScreen(OFF); 
3476:  MOVLB  5
3478:  CLRF   x03
347A:  MOVLB  0
347C:  CALL   10A8
....................             strcpy(Menus.Letra,"Clave"); 
3480:  MOVLW  04
3482:  MOVWF  FEA
3484:  MOVLW  E2
3486:  MOVWF  FE9
3488:  MOVFF  FF2,502
348C:  BCF    FF2.7
348E:  MOVLW  00
3490:  CALL   0758
3494:  TBLRD*-
3496:  TBLRD*+
3498:  MOVF   FF5,W
349A:  MOVWF  FEE
349C:  IORLW  00
349E:  BNZ   3496
34A0:  MOVLB  5
34A2:  BTFSC  x02.7
34A4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
34A6:  MOVLW  04
34A8:  MOVWF  x03
34AA:  MOVLW  E2
34AC:  MOVWF  x02
34AE:  MOVLW  1E
34B0:  MOVWF  x04
34B2:  CLRF   x05
34B4:  CLRF   x06
34B6:  MOVLW  02
34B8:  MOVWF  x07
34BA:  MOVLB  0
34BC:  CALL   16D6
....................             strcpy(Menus.Letra,"Correcta"); 
34C0:  MOVLW  04
34C2:  MOVWF  FEA
34C4:  MOVLW  E2
34C6:  MOVWF  FE9
34C8:  MOVFF  FF2,502
34CC:  BCF    FF2.7
34CE:  MOVLW  00
34D0:  CALL   0778
34D4:  TBLRD*-
34D6:  TBLRD*+
34D8:  MOVF   FF5,W
34DA:  MOVWF  FEE
34DC:  IORLW  00
34DE:  BNZ   34D6
34E0:  MOVLB  5
34E2:  BTFSC  x02.7
34E4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
34E6:  MOVLW  04
34E8:  MOVWF  x03
34EA:  MOVLW  E2
34EC:  MOVWF  x02
34EE:  MOVLW  0F
34F0:  MOVWF  x04
34F2:  MOVLW  1E
34F4:  MOVWF  x05
34F6:  CLRF   x06
34F8:  MOVLW  02
34FA:  MOVWF  x07
34FC:  MOVLB  0
34FE:  CALL   16D6
....................             Menu=1;glcd_update();delay_ms(1000); 
3502:  MOVLW  01
3504:  MOVLB  4
3506:  MOVWF  xA3
3508:  MOVLB  0
350A:  CALL   1102
350E:  MOVLW  04
3510:  MOVLB  5
3512:  MOVWF  x02
3514:  MOVLW  FA
3516:  MOVWF  x03
3518:  MOVLB  0
351A:  CALL   103E
351E:  MOVLB  5
3520:  DECFSZ x02,F
3522:  BRA    3514
....................             glcd_fillScreen(OFF);unidad=1; 
3524:  CLRF   x03
3526:  MOVLB  0
3528:  CALL   10A8
352C:  MOVLW  01
352E:  MOVLB  4
3530:  MOVWF  xA4
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
3532:  BRA    3650
....................          { 
....................             glcd_fillScreen(OFF); 
3534:  MOVLB  5
3536:  CLRF   x03
3538:  MOVLB  0
353A:  CALL   10A8
....................             strcpy(Menus.Letra,"Clave"); 
353E:  MOVLW  04
3540:  MOVWF  FEA
3542:  MOVLW  E2
3544:  MOVWF  FE9
3546:  MOVFF  FF2,502
354A:  BCF    FF2.7
354C:  MOVLW  00
354E:  CALL   0758
3552:  TBLRD*-
3554:  TBLRD*+
3556:  MOVF   FF5,W
3558:  MOVWF  FEE
355A:  IORLW  00
355C:  BNZ   3554
355E:  MOVLB  5
3560:  BTFSC  x02.7
3562:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3564:  MOVLW  04
3566:  MOVWF  x03
3568:  MOVLW  E2
356A:  MOVWF  x02
356C:  MOVLW  1E
356E:  MOVWF  x04
3570:  CLRF   x05
3572:  CLRF   x06
3574:  MOVLW  02
3576:  MOVWF  x07
3578:  MOVLB  0
357A:  CALL   16D6
....................             strcpy(Menus.Letra,"Incorrecta"); 
357E:  MOVLW  04
3580:  MOVWF  FEA
3582:  MOVLW  E2
3584:  MOVWF  FE9
3586:  MOVFF  FF2,502
358A:  BCF    FF2.7
358C:  MOVLW  00
358E:  CALL   079C
3592:  TBLRD*-
3594:  TBLRD*+
3596:  MOVF   FF5,W
3598:  MOVWF  FEE
359A:  IORLW  00
359C:  BNZ   3594
359E:  MOVLB  5
35A0:  BTFSC  x02.7
35A2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
35A4:  MOVLW  04
35A6:  MOVWF  x03
35A8:  MOVLW  E2
35AA:  MOVWF  x02
35AC:  CLRF   x04
35AE:  MOVLW  1E
35B0:  MOVWF  x05
35B2:  CLRF   x06
35B4:  MOVLW  02
35B6:  MOVWF  x07
35B8:  MOVLB  0
35BA:  CALL   16D6
....................             Menu=0;glcd_update();delay_ms(1000); 
35BE:  MOVLB  4
35C0:  CLRF   xA3
35C2:  MOVLB  0
35C4:  CALL   1102
35C8:  MOVLW  04
35CA:  MOVLB  5
35CC:  MOVWF  x02
35CE:  MOVLW  FA
35D0:  MOVWF  x03
35D2:  MOVLB  0
35D4:  CALL   103E
35D8:  MOVLB  5
35DA:  DECFSZ x02,F
35DC:  BRA    35CE
....................             glcd_fillScreen(OFF);unidad=1; 
35DE:  CLRF   x03
35E0:  MOVLB  0
35E2:  CALL   10A8
35E6:  MOVLW  01
35E8:  MOVLB  4
35EA:  MOVWF  xA4
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
35EC:  CLRF   xCF
35EE:  CLRF   xD0
35F0:  CLRF   xD1
35F2:  CLRF   xD2
....................             displayContrasena(Contrasena[0],20,30,1); 
35F4:  MOVFF  4CF,504
35F8:  MOVLW  14
35FA:  MOVLB  5
35FC:  MOVWF  x05
35FE:  MOVLW  1E
3600:  MOVWF  x06
3602:  MOVLW  01
3604:  MOVWF  x07
3606:  MOVLB  0
3608:  CALL   18FC
....................             displayContrasena(Contrasena[1],40,30,0); 
360C:  MOVFF  4D0,504
3610:  MOVLW  28
3612:  MOVLB  5
3614:  MOVWF  x05
3616:  MOVLW  1E
3618:  MOVWF  x06
361A:  CLRF   x07
361C:  MOVLB  0
361E:  CALL   18FC
....................             displayContrasena(Contrasena[2],60,30,0); 
3622:  MOVFF  4D1,504
3626:  MOVLW  3C
3628:  MOVLB  5
362A:  MOVWF  x05
362C:  MOVLW  1E
362E:  MOVWF  x06
3630:  CLRF   x07
3632:  MOVLB  0
3634:  CALL   18FC
....................             displayContrasena(Contrasena[3],80,30,0); 
3638:  MOVFF  4D2,504
363C:  MOVLW  50
363E:  MOVLB  5
3640:  MOVWF  x05
3642:  MOVLW  1E
3644:  MOVWF  x06
3646:  CLRF   x07
3648:  MOVLB  0
364A:  CALL   18FC
364E:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
3650:  DECFSZ xA3,W
3652:  BRA    3A88
....................        
....................       if(visual==1) 
3654:  BTFSS  x96.4
3656:  BRA    3A0E
....................       { 
....................          if(Opcion>6) 
3658:  MOVF   xA8,W
365A:  SUBLW  06
365C:  BC    3662
....................          {Opcion=1;} 
365E:  MOVLW  01
3660:  MOVWF  xA8
....................          if(Opcion<1) 
3662:  MOVF   xA8,F
3664:  BNZ   366A
....................          {Opcion=6;} 
3666:  MOVLW  06
3668:  MOVWF  xA8
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
366A:  MOVLW  04
366C:  MOVWF  FEA
366E:  MOVLW  E2
3670:  MOVWF  FE9
3672:  MOVFF  FF2,502
3676:  BCF    FF2.7
3678:  MOVLW  00
367A:  MOVLB  0
367C:  CALL   07C2
3680:  TBLRD*-
3682:  TBLRD*+
3684:  MOVF   FF5,W
3686:  MOVWF  FEE
3688:  IORLW  00
368A:  BNZ   3682
368C:  MOVLB  5
368E:  BTFSC  x02.7
3690:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
3692:  MOVLW  04
3694:  MOVWF  x03
3696:  MOVLW  E2
3698:  MOVWF  x02
369A:  MOVLW  1E
369C:  MOVWF  x04
369E:  CLRF   x05
36A0:  MOVLW  01
36A2:  MOVWF  x06
36A4:  MOVWF  x07
36A6:  MOVLB  0
36A8:  CALL   16D6
....................        
....................          if(Opcion==1)    
36AC:  MOVLB  4
36AE:  DECFSZ xA8,W
36B0:  BRA    36F8
....................             {strcpy(Menus.Letra,"Inst. no envueltos"); 
36B2:  MOVLW  04
36B4:  MOVWF  FEA
36B6:  MOVLW  E2
36B8:  MOVWF  FE9
36BA:  MOVFF  FF2,502
36BE:  BCF    FF2.7
36C0:  MOVLW  00
36C2:  MOVLB  0
36C4:  CALL   07EC
36C8:  TBLRD*-
36CA:  TBLRD*+
36CC:  MOVF   FF5,W
36CE:  MOVWF  FEE
36D0:  IORLW  00
36D2:  BNZ   36CA
36D4:  MOVLB  5
36D6:  BTFSC  x02.7
36D8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
36DA:  MOVLW  04
36DC:  MOVWF  x03
36DE:  MOVLW  E2
36E0:  MOVWF  x02
36E2:  CLRF   x04
36E4:  MOVLW  0A
36E6:  MOVWF  x05
36E8:  MOVLW  01
36EA:  MOVWF  x06
36EC:  MOVWF  x07
36EE:  MOVLB  0
36F0:  CALL   16D6
....................          else 
36F4:  BRA    373A
36F6:  MOVLB  4
....................             {strcpy(Menus.Letra,"Inst. no envueltos"); 
36F8:  MOVLW  04
36FA:  MOVWF  FEA
36FC:  MOVLW  E2
36FE:  MOVWF  FE9
3700:  MOVFF  FF2,502
3704:  BCF    FF2.7
3706:  MOVLW  00
3708:  MOVLB  0
370A:  CALL   07EC
370E:  TBLRD*-
3710:  TBLRD*+
3712:  MOVF   FF5,W
3714:  MOVWF  FEE
3716:  IORLW  00
3718:  BNZ   3710
371A:  MOVLB  5
371C:  BTFSC  x02.7
371E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
3720:  MOVLW  04
3722:  MOVWF  x03
3724:  MOVLW  E2
3726:  MOVWF  x02
3728:  CLRF   x04
372A:  MOVLW  0A
372C:  MOVWF  x05
372E:  CLRF   x06
3730:  MOVLW  01
3732:  MOVWF  x07
3734:  MOVLB  0
3736:  CALL   16D6
....................           
....................          if(Opcion==2)    
373A:  MOVLB  4
373C:  MOVF   xA8,W
373E:  SUBLW  02
3740:  BNZ   3788
....................             {strcpy(Menus.Letra,"Inst. envueltos"); 
3742:  MOVLW  04
3744:  MOVWF  FEA
3746:  MOVLW  E2
3748:  MOVWF  FE9
374A:  MOVFF  FF2,502
374E:  BCF    FF2.7
3750:  MOVLW  00
3752:  MOVLB  0
3754:  CALL   081A
3758:  TBLRD*-
375A:  TBLRD*+
375C:  MOVF   FF5,W
375E:  MOVWF  FEE
3760:  IORLW  00
3762:  BNZ   375A
3764:  MOVLB  5
3766:  BTFSC  x02.7
3768:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
376A:  MOVLW  04
376C:  MOVWF  x03
376E:  MOVLW  E2
3770:  MOVWF  x02
3772:  CLRF   x04
3774:  MOVLW  13
3776:  MOVWF  x05
3778:  MOVLW  01
377A:  MOVWF  x06
377C:  MOVWF  x07
377E:  MOVLB  0
3780:  CALL   16D6
....................          else 
3784:  BRA    37CA
3786:  MOVLB  4
....................             {strcpy(Menus.Letra,"Inst. envueltos"); 
3788:  MOVLW  04
378A:  MOVWF  FEA
378C:  MOVLW  E2
378E:  MOVWF  FE9
3790:  MOVFF  FF2,502
3794:  BCF    FF2.7
3796:  MOVLW  00
3798:  MOVLB  0
379A:  CALL   081A
379E:  TBLRD*-
37A0:  TBLRD*+
37A2:  MOVF   FF5,W
37A4:  MOVWF  FEE
37A6:  IORLW  00
37A8:  BNZ   37A0
37AA:  MOVLB  5
37AC:  BTFSC  x02.7
37AE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
37B0:  MOVLW  04
37B2:  MOVWF  x03
37B4:  MOVLW  E2
37B6:  MOVWF  x02
37B8:  CLRF   x04
37BA:  MOVLW  13
37BC:  MOVWF  x05
37BE:  CLRF   x06
37C0:  MOVLW  01
37C2:  MOVWF  x07
37C4:  MOVLB  0
37C6:  CALL   16D6
....................              
....................           if(Opcion==3)    
37CA:  MOVLB  4
37CC:  MOVF   xA8,W
37CE:  SUBLW  03
37D0:  BNZ   3818
....................             {strcpy(Menus.Letra,"Liquidos"); 
37D2:  MOVLW  04
37D4:  MOVWF  FEA
37D6:  MOVLW  E2
37D8:  MOVWF  FE9
37DA:  MOVFF  FF2,502
37DE:  BCF    FF2.7
37E0:  MOVLW  00
37E2:  MOVLB  0
37E4:  CALL   0844
37E8:  TBLRD*-
37EA:  TBLRD*+
37EC:  MOVF   FF5,W
37EE:  MOVWF  FEE
37F0:  IORLW  00
37F2:  BNZ   37EA
37F4:  MOVLB  5
37F6:  BTFSC  x02.7
37F8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
37FA:  MOVLW  04
37FC:  MOVWF  x03
37FE:  MOVLW  E2
3800:  MOVWF  x02
3802:  CLRF   x04
3804:  MOVLW  1C
3806:  MOVWF  x05
3808:  MOVLW  01
380A:  MOVWF  x06
380C:  MOVWF  x07
380E:  MOVLB  0
3810:  CALL   16D6
....................          else 
3814:  BRA    385A
3816:  MOVLB  4
....................             {strcpy(Menus.Letra,"Liquidos"); 
3818:  MOVLW  04
381A:  MOVWF  FEA
381C:  MOVLW  E2
381E:  MOVWF  FE9
3820:  MOVFF  FF2,502
3824:  BCF    FF2.7
3826:  MOVLW  00
3828:  MOVLB  0
382A:  CALL   0844
382E:  TBLRD*-
3830:  TBLRD*+
3832:  MOVF   FF5,W
3834:  MOVWF  FEE
3836:  IORLW  00
3838:  BNZ   3830
383A:  MOVLB  5
383C:  BTFSC  x02.7
383E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
3840:  MOVLW  04
3842:  MOVWF  x03
3844:  MOVLW  E2
3846:  MOVWF  x02
3848:  CLRF   x04
384A:  MOVLW  1C
384C:  MOVWF  x05
384E:  CLRF   x06
3850:  MOVLW  01
3852:  MOVWF  x07
3854:  MOVLB  0
3856:  CALL   16D6
....................              
....................          if(Opcion==4)    
385A:  MOVLB  4
385C:  MOVF   xA8,W
385E:  SUBLW  04
3860:  BNZ   38A8
....................             {strcpy(Menus.Letra,"Secado"); 
3862:  MOVLW  04
3864:  MOVWF  FEA
3866:  MOVLW  E2
3868:  MOVWF  FE9
386A:  MOVFF  FF2,502
386E:  BCF    FF2.7
3870:  MOVLW  00
3872:  MOVLB  0
3874:  CALL   0868
3878:  TBLRD*-
387A:  TBLRD*+
387C:  MOVF   FF5,W
387E:  MOVWF  FEE
3880:  IORLW  00
3882:  BNZ   387A
3884:  MOVLB  5
3886:  BTFSC  x02.7
3888:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
388A:  MOVLW  04
388C:  MOVWF  x03
388E:  MOVLW  E2
3890:  MOVWF  x02
3892:  CLRF   x04
3894:  MOVLW  25
3896:  MOVWF  x05
3898:  MOVLW  01
389A:  MOVWF  x06
389C:  MOVWF  x07
389E:  MOVLB  0
38A0:  CALL   16D6
....................          else 
38A4:  BRA    38EA
38A6:  MOVLB  4
....................             {strcpy(Menus.Letra,"Secado"); 
38A8:  MOVLW  04
38AA:  MOVWF  FEA
38AC:  MOVLW  E2
38AE:  MOVWF  FE9
38B0:  MOVFF  FF2,502
38B4:  BCF    FF2.7
38B6:  MOVLW  00
38B8:  MOVLB  0
38BA:  CALL   0868
38BE:  TBLRD*-
38C0:  TBLRD*+
38C2:  MOVF   FF5,W
38C4:  MOVWF  FEE
38C6:  IORLW  00
38C8:  BNZ   38C0
38CA:  MOVLB  5
38CC:  BTFSC  x02.7
38CE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
38D0:  MOVLW  04
38D2:  MOVWF  x03
38D4:  MOVLW  E2
38D6:  MOVWF  x02
38D8:  CLRF   x04
38DA:  MOVLW  25
38DC:  MOVWF  x05
38DE:  CLRF   x06
38E0:  MOVLW  01
38E2:  MOVWF  x07
38E4:  MOVLB  0
38E6:  CALL   16D6
....................              
....................          if(Opcion==5)    
38EA:  MOVLB  4
38EC:  MOVF   xA8,W
38EE:  SUBLW  05
38F0:  BNZ   3938
....................             {strcpy(Menus.Letra,"Personalizado"); 
38F2:  MOVLW  04
38F4:  MOVWF  FEA
38F6:  MOVLW  E2
38F8:  MOVWF  FE9
38FA:  MOVFF  FF2,502
38FE:  BCF    FF2.7
3900:  MOVLW  00
3902:  MOVLB  0
3904:  CALL   088A
3908:  TBLRD*-
390A:  TBLRD*+
390C:  MOVF   FF5,W
390E:  MOVWF  FEE
3910:  IORLW  00
3912:  BNZ   390A
3914:  MOVLB  5
3916:  BTFSC  x02.7
3918:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
391A:  MOVLW  04
391C:  MOVWF  x03
391E:  MOVLW  E2
3920:  MOVWF  x02
3922:  CLRF   x04
3924:  MOVLW  2E
3926:  MOVWF  x05
3928:  MOVLW  01
392A:  MOVWF  x06
392C:  MOVWF  x07
392E:  MOVLB  0
3930:  CALL   16D6
....................          else 
3934:  BRA    397A
3936:  MOVLB  4
....................             {strcpy(Menus.Letra,"Personalizado"); 
3938:  MOVLW  04
393A:  MOVWF  FEA
393C:  MOVLW  E2
393E:  MOVWF  FE9
3940:  MOVFF  FF2,502
3944:  BCF    FF2.7
3946:  MOVLW  00
3948:  MOVLB  0
394A:  CALL   088A
394E:  TBLRD*-
3950:  TBLRD*+
3952:  MOVF   FF5,W
3954:  MOVWF  FEE
3956:  IORLW  00
3958:  BNZ   3950
395A:  MOVLB  5
395C:  BTFSC  x02.7
395E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
3960:  MOVLW  04
3962:  MOVWF  x03
3964:  MOVLW  E2
3966:  MOVWF  x02
3968:  CLRF   x04
396A:  MOVLW  2E
396C:  MOVWF  x05
396E:  CLRF   x06
3970:  MOVLW  01
3972:  MOVWF  x07
3974:  MOVLB  0
3976:  CALL   16D6
....................              
....................          if(Opcion==6)    
397A:  MOVLB  4
397C:  MOVF   xA8,W
397E:  SUBLW  06
3980:  BNZ   39C8
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3982:  MOVLW  04
3984:  MOVWF  FEA
3986:  MOVLW  E2
3988:  MOVWF  FE9
398A:  MOVFF  FF2,502
398E:  BCF    FF2.7
3990:  MOVLW  00
3992:  MOVLB  0
3994:  CALL   08B2
3998:  TBLRD*-
399A:  TBLRD*+
399C:  MOVF   FF5,W
399E:  MOVWF  FEE
39A0:  IORLW  00
39A2:  BNZ   399A
39A4:  MOVLB  5
39A6:  BTFSC  x02.7
39A8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
39AA:  MOVLW  04
39AC:  MOVWF  x03
39AE:  MOVLW  E2
39B0:  MOVWF  x02
39B2:  CLRF   x04
39B4:  MOVLW  37
39B6:  MOVWF  x05
39B8:  MOVLW  01
39BA:  MOVWF  x06
39BC:  MOVWF  x07
39BE:  MOVLB  0
39C0:  CALL   16D6
....................          else 
39C4:  BRA    3A0A
39C6:  MOVLB  4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
39C8:  MOVLW  04
39CA:  MOVWF  FEA
39CC:  MOVLW  E2
39CE:  MOVWF  FE9
39D0:  MOVFF  FF2,502
39D4:  BCF    FF2.7
39D6:  MOVLW  00
39D8:  MOVLB  0
39DA:  CALL   08B2
39DE:  TBLRD*-
39E0:  TBLRD*+
39E2:  MOVF   FF5,W
39E4:  MOVWF  FEE
39E6:  IORLW  00
39E8:  BNZ   39E0
39EA:  MOVLB  5
39EC:  BTFSC  x02.7
39EE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
39F0:  MOVLW  04
39F2:  MOVWF  x03
39F4:  MOVLW  E2
39F6:  MOVWF  x02
39F8:  CLRF   x04
39FA:  MOVLW  37
39FC:  MOVWF  x05
39FE:  CLRF   x06
3A00:  MOVLW  01
3A02:  MOVWF  x07
3A04:  MOVLB  0
3A06:  CALL   16D6
....................             visual=0; 
3A0A:  MOVLB  4
3A0C:  BCF    x96.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
3A0E:  BSF    F92.0
3A10:  BTFSS  F80.0
3A12:  BRA    3A2E
....................          {  if(Flanco == 0)  
3A14:  BTFSC  x96.0
3A16:  BRA    3A2C
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3A18:  BSF    x96.0
3A1A:  MOVLW  1E
3A1C:  MOVLB  5
3A1E:  MOVWF  x03
3A20:  MOVLB  0
3A22:  CALL   103E
3A26:  MOVLB  4
3A28:  DECF   xA8,F
3A2A:  BSF    x96.4
....................                } 
....................          } 
....................             else 
3A2C:  BRA    3A30
....................                {Flanco = 0;} 
3A2E:  BCF    x96.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
3A30:  BSF    F92.1
3A32:  BTFSS  F80.1
3A34:  BRA    3A50
....................          {  if(Flanco2 == 0)  
3A36:  BTFSC  x96.2
3A38:  BRA    3A4E
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
3A3A:  BSF    x96.2
3A3C:  MOVLW  1E
3A3E:  MOVLB  5
3A40:  MOVWF  x03
3A42:  MOVLB  0
3A44:  CALL   103E
3A48:  MOVLB  4
3A4A:  INCF   xA8,F
3A4C:  BSF    x96.4
....................                }      
....................          } 
....................             else 
3A4E:  BRA    3A52
....................                {Flanco2 = 0;}   
3A50:  BCF    x96.2
....................                 
....................        if(RIGHT)//Si oprime SET 
3A52:  BSF    F92.2
3A54:  BTFSS  F80.2
3A56:  BRA    3A86
....................          {  if(Flanco1 == 0)  
3A58:  BTFSC  x96.1
3A5A:  BRA    3A84
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
3A5C:  BSF    x96.1
3A5E:  MOVLW  1E
3A60:  MOVLB  5
3A62:  MOVWF  x03
3A64:  MOVLB  0
3A66:  CALL   103E
3A6A:  MOVLW  03
3A6C:  MOVLB  4
3A6E:  ADDWF  xA8,W
3A70:  MOVWF  xA3
3A72:  MOVLW  01
3A74:  MOVWF  xA8
3A76:  MOVLB  5
3A78:  CLRF   x03
3A7A:  MOVLB  0
3A7C:  CALL   10A8
3A80:  MOVLB  4
3A82:  BSF    x96.4
....................                } 
....................          } 
....................             else 
3A84:  BRA    3A88
....................                {Flanco1 = 0;}   
3A86:  BCF    x96.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Instrumentos No Envueltos 
3A88:  MOVF   xA3,W
3A8A:  SUBLW  04
3A8C:  BTFSS  FD8.2
3A8E:  BRA    3DB8
....................        
....................       if(visual==1) 
3A90:  BTFSS  x96.4
3A92:  BRA    3BE6
....................       { 
....................          glcd_imagen(2); //Guante 
3A94:  MOVLW  02
3A96:  MOVLB  5
3A98:  MOVWF  x02
3A9A:  MOVLB  0
3A9C:  CALL   2112
....................          strcpy(Menus.Letra,"No Envueltos"); 
3AA0:  MOVLW  04
3AA2:  MOVWF  FEA
3AA4:  MOVLW  E2
3AA6:  MOVWF  FE9
3AA8:  MOVFF  FF2,502
3AAC:  BCF    FF2.7
3AAE:  MOVLW  00
3AB0:  CALL   08DA
3AB4:  TBLRD*-
3AB6:  TBLRD*+
3AB8:  MOVF   FF5,W
3ABA:  MOVWF  FEE
3ABC:  IORLW  00
3ABE:  BNZ   3AB6
3AC0:  MOVLB  5
3AC2:  BTFSC  x02.7
3AC4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3AC6:  MOVLW  04
3AC8:  MOVWF  x03
3ACA:  MOVLW  E2
3ACC:  MOVWF  x02
3ACE:  CLRF   x04
3AD0:  CLRF   x05
3AD2:  MOVLW  01
3AD4:  MOVWF  x06
3AD6:  MOVLW  02
3AD8:  MOVWF  x07
3ADA:  MOVLB  0
3ADC:  CALL   16D6
....................          
....................          strcpy(Menus.Letra,"Ins. No Envueltos"); 
3AE0:  MOVLW  04
3AE2:  MOVWF  FEA
3AE4:  MOVLW  E2
3AE6:  MOVWF  FE9
3AE8:  MOVFF  FF2,502
3AEC:  BCF    FF2.7
3AEE:  MOVLW  00
3AF0:  CALL   0902
3AF4:  TBLRD*-
3AF6:  TBLRD*+
3AF8:  MOVF   FF5,W
3AFA:  MOVWF  FEE
3AFC:  IORLW  00
3AFE:  BNZ   3AF6
3B00:  MOVLB  5
3B02:  BTFSC  x02.7
3B04:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3B06:  MOVLW  04
3B08:  MOVWF  x03
3B0A:  MOVLW  E2
3B0C:  MOVWF  x02
3B0E:  MOVLW  07
3B10:  MOVWF  x04
3B12:  MOVLW  37
3B14:  MOVWF  x05
3B16:  CLRF   x06
3B18:  MOVLW  01
3B1A:  MOVWF  x07
3B1C:  MOVLB  0
3B1E:  CALL   16D6
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3B22:  MOVLW  04
3B24:  MOVWF  FEA
3B26:  MOVLW  E2
3B28:  MOVWF  FE9
3B2A:  MOVFF  FF2,502
3B2E:  BCF    FF2.7
3B30:  MOVLW  00
3B32:  CALL   092E
3B36:  TBLRD*-
3B38:  TBLRD*+
3B3A:  MOVF   FF5,W
3B3C:  MOVWF  FEE
3B3E:  IORLW  00
3B40:  BNZ   3B38
3B42:  MOVLB  5
3B44:  BTFSC  x02.7
3B46:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3B48:  MOVLW  04
3B4A:  MOVWF  x03
3B4C:  MOVLW  E2
3B4E:  MOVWF  x02
3B50:  CLRF   x04
3B52:  MOVLW  1A
3B54:  MOVWF  x05
3B56:  CLRF   x06
3B58:  MOVLW  01
3B5A:  MOVWF  x07
3B5C:  MOVLB  0
3B5E:  CALL   16D6
....................          strcpy(Menus.Letra,"T. Esterilizacion:7m"); 
3B62:  MOVLW  04
3B64:  MOVWF  FEA
3B66:  MOVLW  E2
3B68:  MOVWF  FE9
3B6A:  MOVFF  FF2,502
3B6E:  BCF    FF2.7
3B70:  MOVLW  00
3B72:  CALL   095A
3B76:  TBLRD*-
3B78:  TBLRD*+
3B7A:  MOVF   FF5,W
3B7C:  MOVWF  FEE
3B7E:  IORLW  00
3B80:  BNZ   3B78
3B82:  MOVLB  5
3B84:  BTFSC  x02.7
3B86:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3B88:  MOVLW  04
3B8A:  MOVWF  x03
3B8C:  MOVLW  E2
3B8E:  MOVWF  x02
3B90:  CLRF   x04
3B92:  MOVLW  24
3B94:  MOVWF  x05
3B96:  CLRF   x06
3B98:  MOVLW  01
3B9A:  MOVWF  x07
3B9C:  MOVLB  0
3B9E:  CALL   16D6
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3BA2:  MOVLW  04
3BA4:  MOVWF  FEA
3BA6:  MOVLW  E2
3BA8:  MOVWF  FE9
3BAA:  MOVFF  FF2,502
3BAE:  BCF    FF2.7
3BB0:  MOVLW  00
3BB2:  CALL   098A
3BB6:  TBLRD*-
3BB8:  TBLRD*+
3BBA:  MOVF   FF5,W
3BBC:  MOVWF  FEE
3BBE:  IORLW  00
3BC0:  BNZ   3BB8
3BC2:  MOVLB  5
3BC4:  BTFSC  x02.7
3BC6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3BC8:  MOVLW  04
3BCA:  MOVWF  x03
3BCC:  MOVLW  E2
3BCE:  MOVWF  x02
3BD0:  CLRF   x04
3BD2:  MOVLW  2E
3BD4:  MOVWF  x05
3BD6:  CLRF   x06
3BD8:  MOVLW  01
3BDA:  MOVWF  x07
3BDC:  MOVLB  0
3BDE:  CALL   16D6
....................          visual=0; 
3BE2:  MOVLB  4
3BE4:  BCF    x96.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3BE6:  BSF    F92.3
3BE8:  BTFSS  F80.3
3BEA:  BRA    3C0C
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3BEC:  MOVLW  1E
3BEE:  MOVLB  5
3BF0:  MOVWF  x03
3BF2:  MOVLB  0
3BF4:  CALL   103E
3BF8:  MOVLW  01
3BFA:  MOVLB  4
3BFC:  MOVWF  xA3
3BFE:  MOVLB  5
3C00:  CLRF   x03
3C02:  MOVLB  0
3C04:  CALL   10A8
3C08:  MOVLB  4
3C0A:  BSF    x96.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3C0C:  BSF    F92.2
3C0E:  BTFSS  F80.2
3C10:  BRA    3DB8
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=7;Testerilizacionp[3]=0;visual=1; 
3C12:  CLRF   xC3
3C14:  CLRF   xC4
3C16:  MOVLW  07
3C18:  MOVWF  xC5
3C1A:  CLRF   xC6
3C1C:  BSF    x96.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;minutos=0;Setpoint=121;Menu=20; 
3C1E:  CLRF   xCB
3C20:  CLRF   xCC
3C22:  CLRF   xCD
3C24:  CLRF   xCE
3C26:  CLRF   xB4
3C28:  CLRF   xB3
3C2A:  MOVLW  79
3C2C:  MOVWF  xA6
3C2E:  MOVLW  14
3C30:  MOVWF  xA3
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3C32:  MOVWF  xA3
3C34:  MOVLW  0F
3C36:  MOVLB  5
3C38:  MOVWF  x14
3C3A:  MOVLW  12
3C3C:  MOVWF  x15
3C3E:  MOVLW  1E
3C40:  MOVWF  x16
3C42:  MOVLW  35
3C44:  MOVWF  x17
3C46:  CLRF   x18
3C48:  MOVLW  01
3C4A:  MOVWF  x19
3C4C:  MOVLB  0
3C4E:  CALL   1614
3C52:  MOVLB  4
3C54:  CLRF   xAA
3C56:  MOVLW  C0
3C58:  IORWF  FF2,F
3C5A:  MOVLB  5
3C5C:  CLRF   x03
3C5E:  MOVLB  0
3C60:  CALL   10A8
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3C64:  MOVLW  04
3C66:  MOVWF  FEA
3C68:  MOVLW  E2
3C6A:  MOVWF  FE9
3C6C:  MOVFF  FF2,502
3C70:  BCF    FF2.7
3C72:  MOVLW  00
3C74:  CALL   09B4
3C78:  TBLRD*-
3C7A:  TBLRD*+
3C7C:  MOVF   FF5,W
3C7E:  MOVWF  FEE
3C80:  IORLW  00
3C82:  BNZ   3C7A
3C84:  MOVLB  5
3C86:  BTFSC  x02.7
3C88:  BSF    FF2.7
3C8A:  MOVLW  04
3C8C:  MOVWF  x03
3C8E:  MOVLW  E2
3C90:  MOVWF  x02
3C92:  CLRF   x04
3C94:  MOVLW  37
3C96:  MOVWF  x05
3C98:  MOVLW  02
3C9A:  MOVWF  x06
3C9C:  MOVLW  01
3C9E:  MOVWF  x07
3CA0:  MOVLB  0
3CA2:  CALL   16D6
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3CA6:  MOVLW  0F
3CA8:  MOVLB  5
3CAA:  MOVWF  x14
3CAC:  MOVLW  12
3CAE:  MOVWF  x15
3CB0:  MOVLW  1E
3CB2:  MOVWF  x16
3CB4:  MOVLW  35
3CB6:  MOVWF  x17
3CB8:  CLRF   x18
3CBA:  MOVLW  01
3CBC:  MOVWF  x19
3CBE:  MOVLB  0
3CC0:  CALL   1614
....................          glcd_imagen(5); 
3CC4:  MOVLW  05
3CC6:  MOVLB  5
3CC8:  MOVWF  x02
3CCA:  MOVLB  0
3CCC:  CALL   2112
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3CD0:  MOVLW  04
3CD2:  MOVWF  FEA
3CD4:  MOVLW  E2
3CD6:  MOVWF  FE9
3CD8:  MOVFF  FF2,502
3CDC:  BCF    FF2.7
3CDE:  MOVLW  00
3CE0:  CALL   09DA
3CE4:  TBLRD*-
3CE6:  TBLRD*+
3CE8:  MOVF   FF5,W
3CEA:  MOVWF  FEE
3CEC:  IORLW  00
3CEE:  BNZ   3CE6
3CF0:  MOVLB  5
3CF2:  BTFSC  x02.7
3CF4:  BSF    FF2.7
3CF6:  MOVLW  04
3CF8:  MOVWF  x03
3CFA:  MOVLW  E2
3CFC:  MOVWF  x02
3CFE:  CLRF   x04
3D00:  CLRF   x05
3D02:  MOVLW  02
3D04:  MOVWF  x06
3D06:  MOVLW  01
3D08:  MOVWF  x07
3D0A:  MOVLB  0
3D0C:  CALL   16D6
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3D10:  MOVLW  04
3D12:  MOVWF  FEA
3D14:  MOVLW  E2
3D16:  MOVWF  FE9
3D18:  MOVFF  FF2,502
3D1C:  BCF    FF2.7
3D1E:  MOVLW  00
3D20:  CALL   09FC
3D24:  TBLRD*-
3D26:  TBLRD*+
3D28:  MOVF   FF5,W
3D2A:  MOVWF  FEE
3D2C:  IORLW  00
3D2E:  BNZ   3D26
3D30:  MOVLB  5
3D32:  BTFSC  x02.7
3D34:  BSF    FF2.7
3D36:  MOVLW  04
3D38:  MOVWF  x03
3D3A:  MOVLW  E2
3D3C:  MOVWF  x02
3D3E:  CLRF   x04
3D40:  MOVLW  08
3D42:  MOVWF  x05
3D44:  MOVLW  02
3D46:  MOVWF  x06
3D48:  MOVLW  01
3D4A:  MOVWF  x07
3D4C:  MOVLB  0
3D4E:  CALL   16D6
....................          glcd_circle(95,40,2,NO,ON); 
3D52:  MOVLW  5F
3D54:  MOVLB  5
3D56:  MOVWF  x02
3D58:  MOVLW  28
3D5A:  MOVWF  x03
3D5C:  MOVLW  02
3D5E:  MOVWF  x04
3D60:  CLRF   x05
3D62:  MOVLW  01
3D64:  MOVWF  x06
3D66:  MOVLB  0
3D68:  CALL   220E
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3D6C:  MOVLW  04
3D6E:  MOVWF  FEA
3D70:  MOVLW  E2
3D72:  MOVWF  FE9
3D74:  MOVFF  FF2,502
3D78:  BCF    FF2.7
3D7A:  MOVLW  00
3D7C:  CALL   0A1E
3D80:  TBLRD*-
3D82:  TBLRD*+
3D84:  MOVF   FF5,W
3D86:  MOVWF  FEE
3D88:  IORLW  00
3D8A:  BNZ   3D82
3D8C:  MOVLB  5
3D8E:  BTFSC  x02.7
3D90:  BSF    FF2.7
3D92:  MOVLW  04
3D94:  MOVWF  x03
3D96:  MOVLW  E2
3D98:  MOVWF  x02
3D9A:  MOVLW  66
3D9C:  MOVWF  x04
3D9E:  MOVLW  28
3DA0:  MOVWF  x05
3DA2:  MOVLW  02
3DA4:  MOVWF  x06
3DA6:  MOVWF  x07
3DA8:  MOVLB  0
3DAA:  CALL   16D6
....................          MuestraTiemposProgramados(); 
3DAE:  CALL   260E
....................          EVTrampa=10; 
3DB2:  MOVLW  0A
3DB4:  MOVLB  4
3DB6:  MOVWF  x9C
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Instrumentos Envueltos      
3DB8:  MOVF   xA3,W
3DBA:  SUBLW  05
3DBC:  BTFSS  FD8.2
3DBE:  BRA    4106
....................        
....................       if(visual==1) 
3DC0:  BTFSS  x96.4
3DC2:  BRA    3F18
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
3DC4:  MOVLW  03
3DC6:  MOVLB  5
3DC8:  MOVWF  x02
3DCA:  MOVLB  0
3DCC:  CALL   2112
....................           
....................          strcpy(Menus.Letra,"Envueltos"); 
3DD0:  MOVLW  04
3DD2:  MOVWF  FEA
3DD4:  MOVLW  E2
3DD6:  MOVWF  FE9
3DD8:  MOVFF  FF2,502
3DDC:  BCF    FF2.7
3DDE:  MOVLW  00
3DE0:  CALL   0A3A
3DE4:  TBLRD*-
3DE6:  TBLRD*+
3DE8:  MOVF   FF5,W
3DEA:  MOVWF  FEE
3DEC:  IORLW  00
3DEE:  BNZ   3DE6
3DF0:  MOVLB  5
3DF2:  BTFSC  x02.7
3DF4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3DF6:  MOVLW  04
3DF8:  MOVWF  x03
3DFA:  MOVLW  E2
3DFC:  MOVWF  x02
3DFE:  CLRF   x04
3E00:  CLRF   x05
3E02:  MOVLW  01
3E04:  MOVWF  x06
3E06:  MOVLW  02
3E08:  MOVWF  x07
3E0A:  MOVLB  0
3E0C:  CALL   16D6
....................           
....................          strcpy(Menus.Letra,"Ins. Envueltos"); 
3E10:  MOVLW  04
3E12:  MOVWF  FEA
3E14:  MOVLW  E2
3E16:  MOVWF  FE9
3E18:  MOVFF  FF2,502
3E1C:  BCF    FF2.7
3E1E:  MOVLW  00
3E20:  CALL   0A5E
3E24:  TBLRD*-
3E26:  TBLRD*+
3E28:  MOVF   FF5,W
3E2A:  MOVWF  FEE
3E2C:  IORLW  00
3E2E:  BNZ   3E26
3E30:  MOVLB  5
3E32:  BTFSC  x02.7
3E34:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3E36:  MOVLW  04
3E38:  MOVWF  x03
3E3A:  MOVLW  E2
3E3C:  MOVWF  x02
3E3E:  MOVLW  07
3E40:  MOVWF  x04
3E42:  MOVLW  37
3E44:  MOVWF  x05
3E46:  MOVLW  02
3E48:  MOVWF  x06
3E4A:  MOVLW  01
3E4C:  MOVWF  x07
3E4E:  MOVLB  0
3E50:  CALL   16D6
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3E54:  MOVLW  04
3E56:  MOVWF  FEA
3E58:  MOVLW  E2
3E5A:  MOVWF  FE9
3E5C:  MOVFF  FF2,502
3E60:  BCF    FF2.7
3E62:  MOVLW  00
3E64:  CALL   092E
3E68:  TBLRD*-
3E6A:  TBLRD*+
3E6C:  MOVF   FF5,W
3E6E:  MOVWF  FEE
3E70:  IORLW  00
3E72:  BNZ   3E6A
3E74:  MOVLB  5
3E76:  BTFSC  x02.7
3E78:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3E7A:  MOVLW  04
3E7C:  MOVWF  x03
3E7E:  MOVLW  E2
3E80:  MOVWF  x02
3E82:  CLRF   x04
3E84:  MOVLW  1A
3E86:  MOVWF  x05
3E88:  CLRF   x06
3E8A:  MOVLW  01
3E8C:  MOVWF  x07
3E8E:  MOVLB  0
3E90:  CALL   16D6
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3E94:  MOVLW  04
3E96:  MOVWF  FEA
3E98:  MOVLW  E2
3E9A:  MOVWF  FE9
3E9C:  MOVFF  FF2,502
3EA0:  BCF    FF2.7
3EA2:  MOVLW  00
3EA4:  CALL   0A88
3EA8:  TBLRD*-
3EAA:  TBLRD*+
3EAC:  MOVF   FF5,W
3EAE:  MOVWF  FEE
3EB0:  IORLW  00
3EB2:  BNZ   3EAA
3EB4:  MOVLB  5
3EB6:  BTFSC  x02.7
3EB8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3EBA:  MOVLW  04
3EBC:  MOVWF  x03
3EBE:  MOVLW  E2
3EC0:  MOVWF  x02
3EC2:  CLRF   x04
3EC4:  MOVLW  24
3EC6:  MOVWF  x05
3EC8:  CLRF   x06
3ECA:  MOVLW  01
3ECC:  MOVWF  x07
3ECE:  MOVLB  0
3ED0:  CALL   16D6
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3ED4:  MOVLW  04
3ED6:  MOVWF  FEA
3ED8:  MOVLW  E2
3EDA:  MOVWF  FE9
3EDC:  MOVFF  FF2,502
3EE0:  BCF    FF2.7
3EE2:  MOVLW  00
3EE4:  CALL   0AB8
3EE8:  TBLRD*-
3EEA:  TBLRD*+
3EEC:  MOVF   FF5,W
3EEE:  MOVWF  FEE
3EF0:  IORLW  00
3EF2:  BNZ   3EEA
3EF4:  MOVLB  5
3EF6:  BTFSC  x02.7
3EF8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
3EFA:  MOVLW  04
3EFC:  MOVWF  x03
3EFE:  MOVLW  E2
3F00:  MOVWF  x02
3F02:  CLRF   x04
3F04:  MOVLW  2E
3F06:  MOVWF  x05
3F08:  CLRF   x06
3F0A:  MOVLW  01
3F0C:  MOVWF  x07
3F0E:  MOVLB  0
3F10:  CALL   16D6
....................          visual=0; 
3F14:  MOVLB  4
3F16:  BCF    x96.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
3F18:  BSF    F92.3
3F1A:  BTFSS  F80.3
3F1C:  BRA    3F3E
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3F1E:  MOVLW  1E
3F20:  MOVLB  5
3F22:  MOVWF  x03
3F24:  MOVLB  0
3F26:  CALL   103E
3F2A:  MOVLW  01
3F2C:  MOVLB  4
3F2E:  MOVWF  xA3
3F30:  MOVLB  5
3F32:  CLRF   x03
3F34:  MOVLB  0
3F36:  CALL   10A8
3F3A:  MOVLB  4
3F3C:  BSF    x96.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
3F3E:  BSF    F92.2
3F40:  BTFSS  F80.2
3F42:  BRA    4106
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;visual=1; 
3F44:  CLRF   xC3
3F46:  CLRF   xC4
3F48:  MOVLW  05
3F4A:  MOVWF  xC5
3F4C:  MOVLW  01
3F4E:  MOVWF  xC6
3F50:  BSF    x96.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
3F52:  CLRF   xCB
3F54:  CLRF   xCC
3F56:  MOVLW  05
3F58:  MOVWF  xCD
3F5A:  MOVLW  01
3F5C:  MOVWF  xCE
3F5E:  MOVLW  79
3F60:  MOVWF  xA6
3F62:  MOVLW  14
3F64:  MOVWF  xA3
3F66:  MOVLW  04
3F68:  MOVLB  5
3F6A:  MOVWF  x02
3F6C:  MOVLW  AF
3F6E:  MOVWF  x03
3F70:  MOVLB  0
3F72:  CALL   103E
3F76:  MOVLB  5
3F78:  DECFSZ x02,F
3F7A:  BRA    3F6C
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3F7C:  MOVLW  14
3F7E:  MOVLB  4
3F80:  MOVWF  xA3
3F82:  MOVLW  0F
3F84:  MOVLB  5
3F86:  MOVWF  x14
3F88:  MOVLW  12
3F8A:  MOVWF  x15
3F8C:  MOVLW  1E
3F8E:  MOVWF  x16
3F90:  MOVLW  35
3F92:  MOVWF  x17
3F94:  CLRF   x18
3F96:  MOVLW  01
3F98:  MOVWF  x19
3F9A:  MOVLB  0
3F9C:  CALL   1614
3FA0:  MOVLB  4
3FA2:  CLRF   xAA
3FA4:  MOVLW  C0
3FA6:  IORWF  FF2,F
3FA8:  MOVLB  5
3FAA:  CLRF   x03
3FAC:  MOVLB  0
3FAE:  CALL   10A8
....................          strcpy(Menus.Letra,"Calentando"); 
3FB2:  MOVLW  04
3FB4:  MOVWF  FEA
3FB6:  MOVLW  E2
3FB8:  MOVWF  FE9
3FBA:  MOVFF  FF2,502
3FBE:  BCF    FF2.7
3FC0:  MOVLW  00
3FC2:  CALL   09B4
3FC6:  TBLRD*-
3FC8:  TBLRD*+
3FCA:  MOVF   FF5,W
3FCC:  MOVWF  FEE
3FCE:  IORLW  00
3FD0:  BNZ   3FC8
3FD2:  MOVLB  5
3FD4:  BTFSC  x02.7
3FD6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
3FD8:  MOVLW  04
3FDA:  MOVWF  x03
3FDC:  MOVLW  E2
3FDE:  MOVWF  x02
3FE0:  CLRF   x04
3FE2:  MOVLW  37
3FE4:  MOVWF  x05
3FE6:  MOVLW  02
3FE8:  MOVWF  x06
3FEA:  MOVLW  01
3FEC:  MOVWF  x07
3FEE:  MOVLB  0
3FF0:  CALL   16D6
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3FF4:  MOVLW  0F
3FF6:  MOVLB  5
3FF8:  MOVWF  x14
3FFA:  MOVLW  12
3FFC:  MOVWF  x15
3FFE:  MOVLW  1E
4000:  MOVWF  x16
4002:  MOVLW  35
4004:  MOVWF  x17
4006:  CLRF   x18
4008:  MOVLW  01
400A:  MOVWF  x19
400C:  MOVLB  0
400E:  CALL   1614
....................          glcd_imagen(5); 
4012:  MOVLW  05
4014:  MOVLB  5
4016:  MOVWF  x02
4018:  MOVLB  0
401A:  CALL   2112
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
401E:  MOVLW  04
4020:  MOVWF  FEA
4022:  MOVLW  E2
4024:  MOVWF  FE9
4026:  MOVFF  FF2,502
402A:  BCF    FF2.7
402C:  MOVLW  00
402E:  CALL   09DA
4032:  TBLRD*-
4034:  TBLRD*+
4036:  MOVF   FF5,W
4038:  MOVWF  FEE
403A:  IORLW  00
403C:  BNZ   4034
403E:  MOVLB  5
4040:  BTFSC  x02.7
4042:  BSF    FF2.7
4044:  MOVLW  04
4046:  MOVWF  x03
4048:  MOVLW  E2
404A:  MOVWF  x02
404C:  CLRF   x04
404E:  CLRF   x05
4050:  MOVLW  02
4052:  MOVWF  x06
4054:  MOVLW  01
4056:  MOVWF  x07
4058:  MOVLB  0
405A:  CALL   16D6
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
405E:  MOVLW  04
4060:  MOVWF  FEA
4062:  MOVLW  E2
4064:  MOVWF  FE9
4066:  MOVFF  FF2,502
406A:  BCF    FF2.7
406C:  MOVLW  00
406E:  CALL   09FC
4072:  TBLRD*-
4074:  TBLRD*+
4076:  MOVF   FF5,W
4078:  MOVWF  FEE
407A:  IORLW  00
407C:  BNZ   4074
407E:  MOVLB  5
4080:  BTFSC  x02.7
4082:  BSF    FF2.7
4084:  MOVLW  04
4086:  MOVWF  x03
4088:  MOVLW  E2
408A:  MOVWF  x02
408C:  CLRF   x04
408E:  MOVLW  08
4090:  MOVWF  x05
4092:  MOVLW  02
4094:  MOVWF  x06
4096:  MOVLW  01
4098:  MOVWF  x07
409A:  MOVLB  0
409C:  CALL   16D6
....................          glcd_circle(95,40,2,NO,ON); 
40A0:  MOVLW  5F
40A2:  MOVLB  5
40A4:  MOVWF  x02
40A6:  MOVLW  28
40A8:  MOVWF  x03
40AA:  MOVLW  02
40AC:  MOVWF  x04
40AE:  CLRF   x05
40B0:  MOVLW  01
40B2:  MOVWF  x06
40B4:  MOVLB  0
40B6:  CALL   220E
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
40BA:  MOVLW  04
40BC:  MOVWF  FEA
40BE:  MOVLW  E2
40C0:  MOVWF  FE9
40C2:  MOVFF  FF2,502
40C6:  BCF    FF2.7
40C8:  MOVLW  00
40CA:  CALL   0A1E
40CE:  TBLRD*-
40D0:  TBLRD*+
40D2:  MOVF   FF5,W
40D4:  MOVWF  FEE
40D6:  IORLW  00
40D8:  BNZ   40D0
40DA:  MOVLB  5
40DC:  BTFSC  x02.7
40DE:  BSF    FF2.7
40E0:  MOVLW  04
40E2:  MOVWF  x03
40E4:  MOVLW  E2
40E6:  MOVWF  x02
40E8:  MOVLW  66
40EA:  MOVWF  x04
40EC:  MOVLW  28
40EE:  MOVWF  x05
40F0:  MOVLW  02
40F2:  MOVWF  x06
40F4:  MOVWF  x07
40F6:  MOVLB  0
40F8:  CALL   16D6
....................          MuestraTiemposProgramados(); 
40FC:  CALL   260E
....................          EVTrampa=10; 
4100:  MOVLW  0A
4102:  MOVLB  4
4104:  MOVWF  x9C
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Liquido       
4106:  MOVF   xA3,W
4108:  SUBLW  06
410A:  BTFSS  FD8.2
410C:  BRA    42D6
....................        
....................       if(visual==1) 
410E:  BTFSS  x96.4
4110:  BRA    4268
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
4112:  MOVLW  04
4114:  MOVLB  5
4116:  MOVWF  x02
4118:  MOVLB  0
411A:  CALL   2112
....................          strcpy(Menus.Letra,"Liquidos"); 
411E:  MOVLW  04
4120:  MOVWF  FEA
4122:  MOVLW  E2
4124:  MOVWF  FE9
4126:  MOVFF  FF2,502
412A:  BCF    FF2.7
412C:  MOVLW  00
412E:  CALL   0844
4132:  TBLRD*-
4134:  TBLRD*+
4136:  MOVF   FF5,W
4138:  MOVWF  FEE
413A:  IORLW  00
413C:  BNZ   4134
413E:  MOVLB  5
4140:  BTFSC  x02.7
4142:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
4144:  MOVLW  04
4146:  MOVWF  x03
4148:  MOVLW  E2
414A:  MOVWF  x02
414C:  MOVLW  14
414E:  MOVWF  x04
4150:  CLRF   x05
4152:  MOVLW  01
4154:  MOVWF  x06
4156:  MOVLW  02
4158:  MOVWF  x07
415A:  MOVLB  0
415C:  CALL   16D6
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
4160:  MOVLW  04
4162:  MOVWF  FEA
4164:  MOVLW  E2
4166:  MOVWF  FE9
4168:  MOVFF  FF2,502
416C:  BCF    FF2.7
416E:  MOVLW  00
4170:  CALL   0844
4174:  TBLRD*-
4176:  TBLRD*+
4178:  MOVF   FF5,W
417A:  MOVWF  FEE
417C:  IORLW  00
417E:  BNZ   4176
4180:  MOVLB  5
4182:  BTFSC  x02.7
4184:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
4186:  MOVLW  04
4188:  MOVWF  x03
418A:  MOVLW  E2
418C:  MOVWF  x02
418E:  MOVLW  07
4190:  MOVWF  x04
4192:  MOVLW  37
4194:  MOVWF  x05
4196:  MOVLW  02
4198:  MOVWF  x06
419A:  MOVLW  01
419C:  MOVWF  x07
419E:  MOVLB  0
41A0:  CALL   16D6
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
41A4:  MOVLW  04
41A6:  MOVWF  FEA
41A8:  MOVLW  E2
41AA:  MOVWF  FE9
41AC:  MOVFF  FF2,502
41B0:  BCF    FF2.7
41B2:  MOVLW  00
41B4:  CALL   092E
41B8:  TBLRD*-
41BA:  TBLRD*+
41BC:  MOVF   FF5,W
41BE:  MOVWF  FEE
41C0:  IORLW  00
41C2:  BNZ   41BA
41C4:  MOVLB  5
41C6:  BTFSC  x02.7
41C8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
41CA:  MOVLW  04
41CC:  MOVWF  x03
41CE:  MOVLW  E2
41D0:  MOVWF  x02
41D2:  CLRF   x04
41D4:  MOVLW  1A
41D6:  MOVWF  x05
41D8:  CLRF   x06
41DA:  MOVLW  01
41DC:  MOVWF  x07
41DE:  MOVLB  0
41E0:  CALL   16D6
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
41E4:  MOVLW  04
41E6:  MOVWF  FEA
41E8:  MOVLW  E2
41EA:  MOVWF  FE9
41EC:  MOVFF  FF2,502
41F0:  BCF    FF2.7
41F2:  MOVLW  00
41F4:  CALL   0AE2
41F8:  TBLRD*-
41FA:  TBLRD*+
41FC:  MOVF   FF5,W
41FE:  MOVWF  FEE
4200:  IORLW  00
4202:  BNZ   41FA
4204:  MOVLB  5
4206:  BTFSC  x02.7
4208:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
420A:  MOVLW  04
420C:  MOVWF  x03
420E:  MOVLW  E2
4210:  MOVWF  x02
4212:  CLRF   x04
4214:  MOVLW  24
4216:  MOVWF  x05
4218:  CLRF   x06
421A:  MOVLW  01
421C:  MOVWF  x07
421E:  MOVLB  0
4220:  CALL   16D6
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
4224:  MOVLW  04
4226:  MOVWF  FEA
4228:  MOVLW  E2
422A:  MOVWF  FE9
422C:  MOVFF  FF2,502
4230:  BCF    FF2.7
4232:  MOVLW  00
4234:  CALL   098A
4238:  TBLRD*-
423A:  TBLRD*+
423C:  MOVF   FF5,W
423E:  MOVWF  FEE
4240:  IORLW  00
4242:  BNZ   423A
4244:  MOVLB  5
4246:  BTFSC  x02.7
4248:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
424A:  MOVLW  04
424C:  MOVWF  x03
424E:  MOVLW  E2
4250:  MOVWF  x02
4252:  CLRF   x04
4254:  MOVLW  2E
4256:  MOVWF  x05
4258:  CLRF   x06
425A:  MOVLW  01
425C:  MOVWF  x07
425E:  MOVLB  0
4260:  CALL   16D6
....................          visual=0; 
4264:  MOVLB  4
4266:  BCF    x96.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
4268:  BSF    F92.3
426A:  BTFSS  F80.3
426C:  BRA    428E
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
426E:  MOVLW  1E
4270:  MOVLB  5
4272:  MOVWF  x03
4274:  MOVLB  0
4276:  CALL   103E
427A:  MOVLW  01
427C:  MOVLB  4
427E:  MOVWF  xA3
4280:  MOVLB  5
4282:  CLRF   x03
4284:  MOVLB  0
4286:  CALL   10A8
428A:  MOVLB  4
428C:  BSF    x96.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
428E:  BSF    F92.2
4290:  BTFSS  F80.2
4292:  BRA    42D6
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
4294:  CLRF   xC3
4296:  CLRF   xC4
4298:  CLRF   xC5
429A:  MOVLW  02
429C:  MOVWF  xC6
429E:  BSF    x96.5
42A0:  BSF    x96.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
42A2:  CLRF   xCB
42A4:  CLRF   xCC
42A6:  CLRF   xCD
42A8:  CLRF   xCE
42AA:  MOVLW  79
42AC:  MOVWF  xA6
42AE:  MOVLW  0E
42B0:  MOVWF  xA3
42B2:  MOVLW  04
42B4:  MOVLB  5
42B6:  MOVWF  x02
42B8:  MOVLW  AF
42BA:  MOVWF  x03
42BC:  MOVLB  0
42BE:  CALL   103E
42C2:  MOVLB  5
42C4:  DECFSZ x02,F
42C6:  BRA    42B8
42C8:  CLRF   x03
42CA:  MOVLB  0
42CC:  CALL   10A8
....................          EVTrampa=10; 
42D0:  MOVLW  0A
42D2:  MOVLB  4
42D4:  MOVWF  x9C
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de Secado 
42D6:  MOVF   xA3,W
42D8:  SUBLW  07
42DA:  BTFSS  FD8.2
42DC:  BRA    4620
....................        
....................       if(visual==1) 
42DE:  BTFSS  x96.4
42E0:  BRA    4434
....................       { 
....................          glcd_imagen(1);  
42E2:  MOVLW  01
42E4:  MOVLB  5
42E6:  MOVWF  x02
42E8:  MOVLB  0
42EA:  CALL   2112
....................          strcpy(Menus.Letra,"Secado"); 
42EE:  MOVLW  04
42F0:  MOVWF  FEA
42F2:  MOVLW  E2
42F4:  MOVWF  FE9
42F6:  MOVFF  FF2,502
42FA:  BCF    FF2.7
42FC:  MOVLW  00
42FE:  CALL   0868
4302:  TBLRD*-
4304:  TBLRD*+
4306:  MOVF   FF5,W
4308:  MOVWF  FEE
430A:  IORLW  00
430C:  BNZ   4304
430E:  MOVLB  5
4310:  BTFSC  x02.7
4312:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4314:  MOVLW  04
4316:  MOVWF  x03
4318:  MOVLW  E2
431A:  MOVWF  x02
431C:  CLRF   x04
431E:  CLRF   x05
4320:  MOVLW  01
4322:  MOVWF  x06
4324:  MOVLW  02
4326:  MOVWF  x07
4328:  MOVLB  0
432A:  CALL   16D6
....................        
....................          strcpy(Menus.Letra,"Sin Vacio"); 
432E:  MOVLW  04
4330:  MOVWF  FEA
4332:  MOVLW  E2
4334:  MOVWF  FE9
4336:  MOVFF  FF2,502
433A:  BCF    FF2.7
433C:  MOVLW  00
433E:  CALL   0B12
4342:  TBLRD*-
4344:  TBLRD*+
4346:  MOVF   FF5,W
4348:  MOVWF  FEE
434A:  IORLW  00
434C:  BNZ   4344
434E:  MOVLB  5
4350:  BTFSC  x02.7
4352:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4354:  MOVLW  04
4356:  MOVWF  x03
4358:  MOVLW  E2
435A:  MOVWF  x02
435C:  CLRF   x04
435E:  MOVLW  37
4360:  MOVWF  x05
4362:  MOVLW  02
4364:  MOVWF  x06
4366:  MOVLW  01
4368:  MOVWF  x07
436A:  MOVLB  0
436C:  CALL   16D6
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
4370:  MOVLW  04
4372:  MOVWF  FEA
4374:  MOVLW  E2
4376:  MOVWF  FE9
4378:  MOVFF  FF2,502
437C:  BCF    FF2.7
437E:  MOVLW  00
4380:  CALL   092E
4384:  TBLRD*-
4386:  TBLRD*+
4388:  MOVF   FF5,W
438A:  MOVWF  FEE
438C:  IORLW  00
438E:  BNZ   4386
4390:  MOVLB  5
4392:  BTFSC  x02.7
4394:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4396:  MOVLW  04
4398:  MOVWF  x03
439A:  MOVLW  E2
439C:  MOVWF  x02
439E:  CLRF   x04
43A0:  MOVLW  1A
43A2:  MOVWF  x05
43A4:  CLRF   x06
43A6:  MOVLW  01
43A8:  MOVWF  x07
43AA:  MOVLB  0
43AC:  CALL   16D6
....................          strcpy(Menus.Letra,"T. Esterilizacion:N/A"); 
43B0:  MOVLW  04
43B2:  MOVWF  FEA
43B4:  MOVLW  E2
43B6:  MOVWF  FE9
43B8:  MOVFF  FF2,502
43BC:  BCF    FF2.7
43BE:  MOVLW  00
43C0:  CALL   0B36
43C4:  TBLRD*-
43C6:  TBLRD*+
43C8:  MOVF   FF5,W
43CA:  MOVWF  FEE
43CC:  IORLW  00
43CE:  BNZ   43C6
43D0:  MOVLB  5
43D2:  BTFSC  x02.7
43D4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
43D6:  MOVLW  04
43D8:  MOVWF  x03
43DA:  MOVLW  E2
43DC:  MOVWF  x02
43DE:  CLRF   x04
43E0:  MOVLW  24
43E2:  MOVWF  x05
43E4:  CLRF   x06
43E6:  MOVLW  01
43E8:  MOVWF  x07
43EA:  MOVLB  0
43EC:  CALL   16D6
....................          strcpy(Menus.Letra,"T. Secado= 20m "); 
43F0:  MOVLW  04
43F2:  MOVWF  FEA
43F4:  MOVLW  E2
43F6:  MOVWF  FE9
43F8:  MOVFF  FF2,502
43FC:  BCF    FF2.7
43FE:  MOVLW  00
4400:  CALL   0B66
4404:  TBLRD*-
4406:  TBLRD*+
4408:  MOVF   FF5,W
440A:  MOVWF  FEE
440C:  IORLW  00
440E:  BNZ   4406
4410:  MOVLB  5
4412:  BTFSC  x02.7
4414:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4416:  MOVLW  04
4418:  MOVWF  x03
441A:  MOVLW  E2
441C:  MOVWF  x02
441E:  CLRF   x04
4420:  MOVLW  2E
4422:  MOVWF  x05
4424:  CLRF   x06
4426:  MOVLW  01
4428:  MOVWF  x07
442A:  MOVLB  0
442C:  CALL   16D6
....................          visual=0; 
4430:  MOVLB  4
4432:  BCF    x96.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4434:  BSF    F92.3
4436:  BTFSS  F80.3
4438:  BRA    445A
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
443A:  MOVLW  1E
443C:  MOVLB  5
443E:  MOVWF  x03
4440:  MOVLB  0
4442:  CALL   103E
4446:  MOVLW  01
4448:  MOVLB  4
444A:  MOVWF  xA3
444C:  MOVLB  5
444E:  CLRF   x03
4450:  MOVLB  0
4452:  CALL   10A8
4456:  MOVLB  4
4458:  BSF    x96.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
445A:  BSF    F92.2
445C:  BTFSS  F80.2
445E:  BRA    4620
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=0;visual=1;ciclosecado=1; 
4460:  CLRF   xC3
4462:  CLRF   xC4
4464:  CLRF   xC5
4466:  CLRF   xC6
4468:  BSF    x96.4
446A:  MOVLW  01
446C:  MOVWF  x95
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=2;Setpoint=121;Menu=20;delay_ms(700); 
446E:  CLRF   xCB
4470:  CLRF   xCC
4472:  CLRF   xCD
4474:  MOVLW  02
4476:  MOVWF  xCE
4478:  MOVLW  79
447A:  MOVWF  xA6
447C:  MOVLW  14
447E:  MOVWF  xA3
4480:  MOVLW  04
4482:  MOVLB  5
4484:  MOVWF  x02
4486:  MOVLW  AF
4488:  MOVWF  x03
448A:  MOVLB  0
448C:  CALL   103E
4490:  MOVLB  5
4492:  DECFSZ x02,F
4494:  BRA    4486
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
4496:  MOVLW  14
4498:  MOVLB  4
449A:  MOVWF  xA3
449C:  MOVLW  0F
449E:  MOVLB  5
44A0:  MOVWF  x14
44A2:  MOVLW  12
44A4:  MOVWF  x15
44A6:  MOVLW  1E
44A8:  MOVWF  x16
44AA:  MOVLW  35
44AC:  MOVWF  x17
44AE:  CLRF   x18
44B0:  MOVLW  01
44B2:  MOVWF  x19
44B4:  MOVLB  0
44B6:  CALL   1614
44BA:  MOVLB  4
44BC:  CLRF   xAA
44BE:  MOVLW  C0
44C0:  IORWF  FF2,F
44C2:  MOVLB  5
44C4:  CLRF   x03
44C6:  MOVLB  0
44C8:  CALL   10A8
....................          strcpy(Menus.Letra,"Calentando"); 
44CC:  MOVLW  04
44CE:  MOVWF  FEA
44D0:  MOVLW  E2
44D2:  MOVWF  FE9
44D4:  MOVFF  FF2,502
44D8:  BCF    FF2.7
44DA:  MOVLW  00
44DC:  CALL   09B4
44E0:  TBLRD*-
44E2:  TBLRD*+
44E4:  MOVF   FF5,W
44E6:  MOVWF  FEE
44E8:  IORLW  00
44EA:  BNZ   44E2
44EC:  MOVLB  5
44EE:  BTFSC  x02.7
44F0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
44F2:  MOVLW  04
44F4:  MOVWF  x03
44F6:  MOVLW  E2
44F8:  MOVWF  x02
44FA:  CLRF   x04
44FC:  MOVLW  37
44FE:  MOVWF  x05
4500:  MOVLW  02
4502:  MOVWF  x06
4504:  MOVLW  01
4506:  MOVWF  x07
4508:  MOVLB  0
450A:  CALL   16D6
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
450E:  MOVLW  0F
4510:  MOVLB  5
4512:  MOVWF  x14
4514:  MOVLW  12
4516:  MOVWF  x15
4518:  MOVLW  1E
451A:  MOVWF  x16
451C:  MOVLW  35
451E:  MOVWF  x17
4520:  CLRF   x18
4522:  MOVLW  01
4524:  MOVWF  x19
4526:  MOVLB  0
4528:  CALL   1614
....................          glcd_imagen(5); 
452C:  MOVLW  05
452E:  MOVLB  5
4530:  MOVWF  x02
4532:  MOVLB  0
4534:  CALL   2112
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4538:  MOVLW  04
453A:  MOVWF  FEA
453C:  MOVLW  E2
453E:  MOVWF  FE9
4540:  MOVFF  FF2,502
4544:  BCF    FF2.7
4546:  MOVLW  00
4548:  CALL   09DA
454C:  TBLRD*-
454E:  TBLRD*+
4550:  MOVF   FF5,W
4552:  MOVWF  FEE
4554:  IORLW  00
4556:  BNZ   454E
4558:  MOVLB  5
455A:  BTFSC  x02.7
455C:  BSF    FF2.7
455E:  MOVLW  04
4560:  MOVWF  x03
4562:  MOVLW  E2
4564:  MOVWF  x02
4566:  CLRF   x04
4568:  CLRF   x05
456A:  MOVLW  02
456C:  MOVWF  x06
456E:  MOVLW  01
4570:  MOVWF  x07
4572:  MOVLB  0
4574:  CALL   16D6
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
4578:  MOVLW  04
457A:  MOVWF  FEA
457C:  MOVLW  E2
457E:  MOVWF  FE9
4580:  MOVFF  FF2,502
4584:  BCF    FF2.7
4586:  MOVLW  00
4588:  CALL   09FC
458C:  TBLRD*-
458E:  TBLRD*+
4590:  MOVF   FF5,W
4592:  MOVWF  FEE
4594:  IORLW  00
4596:  BNZ   458E
4598:  MOVLB  5
459A:  BTFSC  x02.7
459C:  BSF    FF2.7
459E:  MOVLW  04
45A0:  MOVWF  x03
45A2:  MOVLW  E2
45A4:  MOVWF  x02
45A6:  CLRF   x04
45A8:  MOVLW  08
45AA:  MOVWF  x05
45AC:  MOVLW  02
45AE:  MOVWF  x06
45B0:  MOVLW  01
45B2:  MOVWF  x07
45B4:  MOVLB  0
45B6:  CALL   16D6
....................          glcd_circle(95,40,2,NO,ON); 
45BA:  MOVLW  5F
45BC:  MOVLB  5
45BE:  MOVWF  x02
45C0:  MOVLW  28
45C2:  MOVWF  x03
45C4:  MOVLW  02
45C6:  MOVWF  x04
45C8:  CLRF   x05
45CA:  MOVLW  01
45CC:  MOVWF  x06
45CE:  MOVLB  0
45D0:  CALL   220E
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
45D4:  MOVLW  04
45D6:  MOVWF  FEA
45D8:  MOVLW  E2
45DA:  MOVWF  FE9
45DC:  MOVFF  FF2,502
45E0:  BCF    FF2.7
45E2:  MOVLW  00
45E4:  CALL   0A1E
45E8:  TBLRD*-
45EA:  TBLRD*+
45EC:  MOVF   FF5,W
45EE:  MOVWF  FEE
45F0:  IORLW  00
45F2:  BNZ   45EA
45F4:  MOVLB  5
45F6:  BTFSC  x02.7
45F8:  BSF    FF2.7
45FA:  MOVLW  04
45FC:  MOVWF  x03
45FE:  MOVLW  E2
4600:  MOVWF  x02
4602:  MOVLW  66
4604:  MOVWF  x04
4606:  MOVLW  28
4608:  MOVWF  x05
460A:  MOVLW  02
460C:  MOVWF  x06
460E:  MOVWF  x07
4610:  MOVLB  0
4612:  CALL   16D6
....................          MuestraTiemposProgramados(); 
4616:  CALL   260E
....................          EVTrampa=10; 
461A:  MOVLW  0A
461C:  MOVLB  4
461E:  MOVWF  x9C
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
4620:  MOVF   xA3,W
4622:  SUBLW  08
4624:  BTFSS  FD8.2
4626:  BRA    4A04
....................          
....................          if(visual==1) 
4628:  BTFSS  x96.4
462A:  BRA    4950
....................          { 
....................             if(Opcion>5) 
462C:  MOVF   xA8,W
462E:  SUBLW  05
4630:  BC    4636
....................             {Opcion=1;} 
4632:  MOVLW  01
4634:  MOVWF  xA8
....................             if(Opcion<1) 
4636:  MOVF   xA8,F
4638:  BNZ   463E
....................             {Opcion=5;} 
463A:  MOVLW  05
463C:  MOVWF  xA8
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
463E:  MOVLW  04
4640:  MOVWF  FEA
4642:  MOVLW  E2
4644:  MOVWF  FE9
4646:  MOVFF  FF2,502
464A:  BCF    FF2.7
464C:  MOVLW  00
464E:  MOVLB  0
4650:  CALL   0B90
4654:  TBLRD*-
4656:  TBLRD*+
4658:  MOVF   FF5,W
465A:  MOVWF  FEE
465C:  IORLW  00
465E:  BNZ   4656
4660:  MOVLB  5
4662:  BTFSC  x02.7
4664:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4666:  MOVLW  04
4668:  MOVWF  x03
466A:  MOVLW  E2
466C:  MOVWF  x02
466E:  CLRF   x04
4670:  CLRF   x05
4672:  MOVLW  01
4674:  MOVWF  x06
4676:  MOVWF  x07
4678:  MOVLB  0
467A:  CALL   16D6
....................        
....................             if(Opcion==1)    
467E:  MOVLB  4
4680:  DECFSZ xA8,W
4682:  BRA    46CA
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
4684:  MOVLW  04
4686:  MOVWF  FEA
4688:  MOVLW  E2
468A:  MOVWF  FE9
468C:  MOVFF  FF2,502
4690:  BCF    FF2.7
4692:  MOVLW  00
4694:  MOVLB  0
4696:  CALL   0BC0
469A:  TBLRD*-
469C:  TBLRD*+
469E:  MOVF   FF5,W
46A0:  MOVWF  FEE
46A2:  IORLW  00
46A4:  BNZ   469C
46A6:  MOVLB  5
46A8:  BTFSC  x02.7
46AA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
46AC:  MOVLW  04
46AE:  MOVWF  x03
46B0:  MOVLW  E2
46B2:  MOVWF  x02
46B4:  CLRF   x04
46B6:  MOVLW  0A
46B8:  MOVWF  x05
46BA:  MOVLW  01
46BC:  MOVWF  x06
46BE:  MOVWF  x07
46C0:  MOVLB  0
46C2:  CALL   16D6
....................             else 
46C6:  BRA    470C
46C8:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
46CA:  MOVLW  04
46CC:  MOVWF  FEA
46CE:  MOVLW  E2
46D0:  MOVWF  FE9
46D2:  MOVFF  FF2,502
46D6:  BCF    FF2.7
46D8:  MOVLW  00
46DA:  MOVLB  0
46DC:  CALL   0BC0
46E0:  TBLRD*-
46E2:  TBLRD*+
46E4:  MOVF   FF5,W
46E6:  MOVWF  FEE
46E8:  IORLW  00
46EA:  BNZ   46E2
46EC:  MOVLB  5
46EE:  BTFSC  x02.7
46F0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
46F2:  MOVLW  04
46F4:  MOVWF  x03
46F6:  MOVLW  E2
46F8:  MOVWF  x02
46FA:  CLRF   x04
46FC:  MOVLW  0A
46FE:  MOVWF  x05
4700:  CLRF   x06
4702:  MOVLW  01
4704:  MOVWF  x07
4706:  MOVLB  0
4708:  CALL   16D6
....................              
....................             if(Opcion==2)    
470C:  MOVLB  4
470E:  MOVF   xA8,W
4710:  SUBLW  02
4712:  BNZ   475A
....................                {strcpy(Menus.Letra,"T. Secado"); 
4714:  MOVLW  04
4716:  MOVWF  FEA
4718:  MOVLW  E2
471A:  MOVWF  FE9
471C:  MOVFF  FF2,502
4720:  BCF    FF2.7
4722:  MOVLW  00
4724:  MOVLB  0
4726:  CALL   0BEC
472A:  TBLRD*-
472C:  TBLRD*+
472E:  MOVF   FF5,W
4730:  MOVWF  FEE
4732:  IORLW  00
4734:  BNZ   472C
4736:  MOVLB  5
4738:  BTFSC  x02.7
473A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
473C:  MOVLW  04
473E:  MOVWF  x03
4740:  MOVLW  E2
4742:  MOVWF  x02
4744:  CLRF   x04
4746:  MOVLW  14
4748:  MOVWF  x05
474A:  MOVLW  01
474C:  MOVWF  x06
474E:  MOVWF  x07
4750:  MOVLB  0
4752:  CALL   16D6
....................             else 
4756:  BRA    479C
4758:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
475A:  MOVLW  04
475C:  MOVWF  FEA
475E:  MOVLW  E2
4760:  MOVWF  FE9
4762:  MOVFF  FF2,502
4766:  BCF    FF2.7
4768:  MOVLW  00
476A:  MOVLB  0
476C:  CALL   0BEC
4770:  TBLRD*-
4772:  TBLRD*+
4774:  MOVF   FF5,W
4776:  MOVWF  FEE
4778:  IORLW  00
477A:  BNZ   4772
477C:  MOVLB  5
477E:  BTFSC  x02.7
4780:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
4782:  MOVLW  04
4784:  MOVWF  x03
4786:  MOVLW  E2
4788:  MOVWF  x02
478A:  CLRF   x04
478C:  MOVLW  14
478E:  MOVWF  x05
4790:  CLRF   x06
4792:  MOVLW  01
4794:  MOVWF  x07
4796:  MOVLB  0
4798:  CALL   16D6
....................                 
....................              if(Opcion==3)    
479C:  MOVLB  4
479E:  MOVF   xA8,W
47A0:  SUBLW  03
47A2:  BNZ   47EA
....................                {strcpy(Menus.Letra,"Temperatura"); 
47A4:  MOVLW  04
47A6:  MOVWF  FEA
47A8:  MOVLW  E2
47AA:  MOVWF  FE9
47AC:  MOVFF  FF2,502
47B0:  BCF    FF2.7
47B2:  MOVLW  00
47B4:  MOVLB  0
47B6:  CALL   0C10
47BA:  TBLRD*-
47BC:  TBLRD*+
47BE:  MOVF   FF5,W
47C0:  MOVWF  FEE
47C2:  IORLW  00
47C4:  BNZ   47BC
47C6:  MOVLB  5
47C8:  BTFSC  x02.7
47CA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
47CC:  MOVLW  04
47CE:  MOVWF  x03
47D0:  MOVLW  E2
47D2:  MOVWF  x02
47D4:  CLRF   x04
47D6:  MOVLW  1E
47D8:  MOVWF  x05
47DA:  MOVLW  01
47DC:  MOVWF  x06
47DE:  MOVWF  x07
47E0:  MOVLB  0
47E2:  CALL   16D6
....................             else 
47E6:  BRA    482C
47E8:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
47EA:  MOVLW  04
47EC:  MOVWF  FEA
47EE:  MOVLW  E2
47F0:  MOVWF  FE9
47F2:  MOVFF  FF2,502
47F6:  BCF    FF2.7
47F8:  MOVLW  00
47FA:  MOVLB  0
47FC:  CALL   0C10
4800:  TBLRD*-
4802:  TBLRD*+
4804:  MOVF   FF5,W
4806:  MOVWF  FEE
4808:  IORLW  00
480A:  BNZ   4802
480C:  MOVLB  5
480E:  BTFSC  x02.7
4810:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
4812:  MOVLW  04
4814:  MOVWF  x03
4816:  MOVLW  E2
4818:  MOVWF  x02
481A:  CLRF   x04
481C:  MOVLW  1E
481E:  MOVWF  x05
4820:  CLRF   x06
4822:  MOVLW  01
4824:  MOVWF  x07
4826:  MOVLB  0
4828:  CALL   16D6
....................                 
....................             if(Opcion==4)    
482C:  MOVLB  4
482E:  MOVF   xA8,W
4830:  SUBLW  04
4832:  BNZ   487A
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4834:  MOVLW  04
4836:  MOVWF  FEA
4838:  MOVLW  E2
483A:  MOVWF  FE9
483C:  MOVFF  FF2,502
4840:  BCF    FF2.7
4842:  MOVLW  00
4844:  MOVLB  0
4846:  CALL   0C36
484A:  TBLRD*-
484C:  TBLRD*+
484E:  MOVF   FF5,W
4850:  MOVWF  FEE
4852:  IORLW  00
4854:  BNZ   484C
4856:  MOVLB  5
4858:  BTFSC  x02.7
485A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
485C:  MOVLW  04
485E:  MOVWF  x03
4860:  MOVLW  E2
4862:  MOVWF  x02
4864:  CLRF   x04
4866:  MOVLW  28
4868:  MOVWF  x05
486A:  MOVLW  01
486C:  MOVWF  x06
486E:  MOVWF  x07
4870:  MOVLB  0
4872:  CALL   16D6
....................             else 
4876:  BRA    48BC
4878:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
487A:  MOVLW  04
487C:  MOVWF  FEA
487E:  MOVLW  E2
4880:  MOVWF  FE9
4882:  MOVFF  FF2,502
4886:  BCF    FF2.7
4888:  MOVLW  00
488A:  MOVLB  0
488C:  CALL   0C36
4890:  TBLRD*-
4892:  TBLRD*+
4894:  MOVF   FF5,W
4896:  MOVWF  FEE
4898:  IORLW  00
489A:  BNZ   4892
489C:  MOVLB  5
489E:  BTFSC  x02.7
48A0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
48A2:  MOVLW  04
48A4:  MOVWF  x03
48A6:  MOVLW  E2
48A8:  MOVWF  x02
48AA:  CLRF   x04
48AC:  MOVLW  28
48AE:  MOVWF  x05
48B0:  CLRF   x06
48B2:  MOVLW  01
48B4:  MOVWF  x07
48B6:  MOVLB  0
48B8:  CALL   16D6
....................                 
....................             if(Opcion==5)    
48BC:  MOVLB  4
48BE:  MOVF   xA8,W
48C0:  SUBLW  05
48C2:  BNZ   490A
....................                {strcpy(Menus.Letra,"Continuar"); 
48C4:  MOVLW  04
48C6:  MOVWF  FEA
48C8:  MOVLW  E2
48CA:  MOVWF  FE9
48CC:  MOVFF  FF2,502
48D0:  BCF    FF2.7
48D2:  MOVLW  00
48D4:  MOVLB  0
48D6:  CALL   0C62
48DA:  TBLRD*-
48DC:  TBLRD*+
48DE:  MOVF   FF5,W
48E0:  MOVWF  FEE
48E2:  IORLW  00
48E4:  BNZ   48DC
48E6:  MOVLB  5
48E8:  BTFSC  x02.7
48EA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
48EC:  MOVLW  04
48EE:  MOVWF  x03
48F0:  MOVLW  E2
48F2:  MOVWF  x02
48F4:  CLRF   x04
48F6:  MOVLW  32
48F8:  MOVWF  x05
48FA:  MOVLW  01
48FC:  MOVWF  x06
48FE:  MOVWF  x07
4900:  MOVLB  0
4902:  CALL   16D6
....................             else 
4906:  BRA    494C
4908:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
490A:  MOVLW  04
490C:  MOVWF  FEA
490E:  MOVLW  E2
4910:  MOVWF  FE9
4912:  MOVFF  FF2,502
4916:  BCF    FF2.7
4918:  MOVLW  00
491A:  MOVLB  0
491C:  CALL   0C62
4920:  TBLRD*-
4922:  TBLRD*+
4924:  MOVF   FF5,W
4926:  MOVWF  FEE
4928:  IORLW  00
492A:  BNZ   4922
492C:  MOVLB  5
492E:  BTFSC  x02.7
4930:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
4932:  MOVLW  04
4934:  MOVWF  x03
4936:  MOVLW  E2
4938:  MOVWF  x02
493A:  CLRF   x04
493C:  MOVLW  32
493E:  MOVWF  x05
4940:  CLRF   x06
4942:  MOVLW  01
4944:  MOVWF  x07
4946:  MOVLB  0
4948:  CALL   16D6
....................                           
....................             visual=0; 
494C:  MOVLB  4
494E:  BCF    x96.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
4950:  BSF    F92.0
4952:  BTFSS  F80.0
4954:  BRA    4970
....................          {  if(Flanco == 0)  
4956:  BTFSC  x96.0
4958:  BRA    496E
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
495A:  BSF    x96.0
495C:  MOVLW  1E
495E:  MOVLB  5
4960:  MOVWF  x03
4962:  MOVLB  0
4964:  CALL   103E
4968:  MOVLB  4
496A:  DECF   xA8,F
496C:  BSF    x96.4
....................                } 
....................          } 
....................             else 
496E:  BRA    4972
....................                {Flanco = 0;} 
4970:  BCF    x96.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4972:  BSF    F92.1
4974:  BTFSS  F80.1
4976:  BRA    4992
....................          {  if(Flanco2 == 0)  
4978:  BTFSC  x96.2
497A:  BRA    4990
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
497C:  BSF    x96.2
497E:  MOVLW  1E
4980:  MOVLB  5
4982:  MOVWF  x03
4984:  MOVLB  0
4986:  CALL   103E
498A:  MOVLB  4
498C:  INCF   xA8,F
498E:  BSF    x96.4
....................                }      
....................          } 
....................             else 
4990:  BRA    4994
....................                {Flanco2 = 0;}   
4992:  BCF    x96.2
....................                 
....................          if(RIGHT)//Si oprime SET 
4994:  BSF    F92.2
4996:  BTFSS  F80.2
4998:  BRA    49D2
....................          {  if(Flanco1 == 0)  
499A:  BTFSC  x96.1
499C:  BRA    49D0
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
499E:  BSF    x96.1
49A0:  MOVLW  02
49A2:  MOVLB  5
49A4:  MOVWF  x02
49A6:  MOVLW  96
49A8:  MOVWF  x03
49AA:  MOVLB  0
49AC:  CALL   103E
49B0:  MOVLB  5
49B2:  DECFSZ x02,F
49B4:  BRA    49A6
49B6:  MOVLW  0A
49B8:  MOVLB  4
49BA:  ADDWF  xA8,W
49BC:  MOVWF  xA3
49BE:  MOVLW  01
49C0:  MOVWF  xA8
49C2:  MOVLB  5
49C4:  CLRF   x03
49C6:  MOVLB  0
49C8:  CALL   10A8
49CC:  MOVLB  4
49CE:  BSF    x96.4
....................                } 
....................          } 
....................             else 
49D0:  BRA    49D4
....................                {Flanco1 = 0;}   
49D2:  BCF    x96.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
49D4:  BSF    F92.3
49D6:  BTFSS  F80.3
49D8:  BRA    4A04
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
49DA:  MOVLW  04
49DC:  MOVLB  5
49DE:  MOVWF  x02
49E0:  MOVLW  AF
49E2:  MOVWF  x03
49E4:  MOVLB  0
49E6:  CALL   103E
49EA:  MOVLB  5
49EC:  DECFSZ x02,F
49EE:  BRA    49E0
49F0:  MOVLW  01
49F2:  MOVLB  4
49F4:  MOVWF  xA3
49F6:  MOVLB  5
49F8:  CLRF   x03
49FA:  MOVLB  0
49FC:  CALL   10A8
4A00:  MOVLB  4
4A02:  BSF    x96.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
4A04:  MOVF   xA3,W
4A06:  SUBLW  09
4A08:  BTFSS  FD8.2
4A0A:  BRA    4EC0
....................          
....................       strcpy(Menus.Letra,"Clave"); 
4A0C:  MOVLW  04
4A0E:  MOVWF  FEA
4A10:  MOVLW  E2
4A12:  MOVWF  FE9
4A14:  MOVFF  FF2,502
4A18:  BCF    FF2.7
4A1A:  MOVLW  00
4A1C:  MOVLB  0
4A1E:  CALL   0758
4A22:  TBLRD*-
4A24:  TBLRD*+
4A26:  MOVF   FF5,W
4A28:  MOVWF  FEE
4A2A:  IORLW  00
4A2C:  BNZ   4A24
4A2E:  MOVLB  5
4A30:  BTFSC  x02.7
4A32:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4A34:  MOVLW  04
4A36:  MOVWF  x03
4A38:  MOVLW  E2
4A3A:  MOVWF  x02
4A3C:  MOVLW  1E
4A3E:  MOVWF  x04
4A40:  CLRF   x05
4A42:  MOVLW  01
4A44:  MOVWF  x06
4A46:  MOVLW  02
4A48:  MOVWF  x07
4A4A:  MOVLB  0
4A4C:  CALL   16D6
....................        
....................       if(unidad==1) 
4A50:  MOVLB  4
4A52:  DECFSZ xA4,W
4A54:  BRA    4AB4
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4A56:  MOVFF  4CF,504
4A5A:  MOVLW  14
4A5C:  MOVLB  5
4A5E:  MOVWF  x05
4A60:  MOVLW  1E
4A62:  MOVWF  x06
4A64:  MOVLW  01
4A66:  MOVWF  x07
4A68:  MOVLB  0
4A6A:  CALL   18FC
....................          displayContrasena(Contrasena[1],40,30,0); 
4A6E:  MOVFF  4D0,504
4A72:  MOVLW  28
4A74:  MOVLB  5
4A76:  MOVWF  x05
4A78:  MOVLW  1E
4A7A:  MOVWF  x06
4A7C:  CLRF   x07
4A7E:  MOVLB  0
4A80:  CALL   18FC
....................          displayContrasena(Contrasena[2],60,30,0); 
4A84:  MOVFF  4D1,504
4A88:  MOVLW  3C
4A8A:  MOVLB  5
4A8C:  MOVWF  x05
4A8E:  MOVLW  1E
4A90:  MOVWF  x06
4A92:  CLRF   x07
4A94:  MOVLB  0
4A96:  CALL   18FC
....................          displayContrasena(Contrasena[3],80,30,0); 
4A9A:  MOVFF  4D2,504
4A9E:  MOVLW  50
4AA0:  MOVLB  5
4AA2:  MOVWF  x05
4AA4:  MOVLW  1E
4AA6:  MOVWF  x06
4AA8:  CLRF   x07
4AAA:  MOVLB  0
4AAC:  CALL   18FC
....................       } 
....................       else 
4AB0:  BRA    4BDC
4AB2:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4AB4:  MOVF   xA4,W
4AB6:  SUBLW  02
4AB8:  BNZ   4B18
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
4ABA:  MOVFF  4CF,504
4ABE:  MOVLW  14
4AC0:  MOVLB  5
4AC2:  MOVWF  x05
4AC4:  MOVLW  1E
4AC6:  MOVWF  x06
4AC8:  CLRF   x07
4ACA:  MOVLB  0
4ACC:  CALL   18FC
....................             displayContrasena(Contrasena[1],40,30,1); 
4AD0:  MOVFF  4D0,504
4AD4:  MOVLW  28
4AD6:  MOVLB  5
4AD8:  MOVWF  x05
4ADA:  MOVLW  1E
4ADC:  MOVWF  x06
4ADE:  MOVLW  01
4AE0:  MOVWF  x07
4AE2:  MOVLB  0
4AE4:  CALL   18FC
....................             displayContrasena(Contrasena[2],60,30,0); 
4AE8:  MOVFF  4D1,504
4AEC:  MOVLW  3C
4AEE:  MOVLB  5
4AF0:  MOVWF  x05
4AF2:  MOVLW  1E
4AF4:  MOVWF  x06
4AF6:  CLRF   x07
4AF8:  MOVLB  0
4AFA:  CALL   18FC
....................             displayContrasena(Contrasena[3],80,30,0); 
4AFE:  MOVFF  4D2,504
4B02:  MOVLW  50
4B04:  MOVLB  5
4B06:  MOVWF  x05
4B08:  MOVLW  1E
4B0A:  MOVWF  x06
4B0C:  CLRF   x07
4B0E:  MOVLB  0
4B10:  CALL   18FC
....................          } 
....................          else 
4B14:  BRA    4BDC
4B16:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4B18:  MOVF   xA4,W
4B1A:  SUBLW  03
4B1C:  BNZ   4B7C
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4B1E:  MOVFF  4CF,504
4B22:  MOVLW  14
4B24:  MOVLB  5
4B26:  MOVWF  x05
4B28:  MOVLW  1E
4B2A:  MOVWF  x06
4B2C:  CLRF   x07
4B2E:  MOVLB  0
4B30:  CALL   18FC
....................                displayContrasena(Contrasena[1],40,30,0); 
4B34:  MOVFF  4D0,504
4B38:  MOVLW  28
4B3A:  MOVLB  5
4B3C:  MOVWF  x05
4B3E:  MOVLW  1E
4B40:  MOVWF  x06
4B42:  CLRF   x07
4B44:  MOVLB  0
4B46:  CALL   18FC
....................                displayContrasena(Contrasena[2],60,30,1); 
4B4A:  MOVFF  4D1,504
4B4E:  MOVLW  3C
4B50:  MOVLB  5
4B52:  MOVWF  x05
4B54:  MOVLW  1E
4B56:  MOVWF  x06
4B58:  MOVLW  01
4B5A:  MOVWF  x07
4B5C:  MOVLB  0
4B5E:  CALL   18FC
....................                displayContrasena(Contrasena[3],80,30,0); 
4B62:  MOVFF  4D2,504
4B66:  MOVLW  50
4B68:  MOVLB  5
4B6A:  MOVWF  x05
4B6C:  MOVLW  1E
4B6E:  MOVWF  x06
4B70:  CLRF   x07
4B72:  MOVLB  0
4B74:  CALL   18FC
....................             } 
....................             else 
4B78:  BRA    4BDC
4B7A:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4B7C:  MOVF   xA4,W
4B7E:  SUBLW  04
4B80:  BNZ   4BDE
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4B82:  MOVFF  4CF,504
4B86:  MOVLW  14
4B88:  MOVLB  5
4B8A:  MOVWF  x05
4B8C:  MOVLW  1E
4B8E:  MOVWF  x06
4B90:  CLRF   x07
4B92:  MOVLB  0
4B94:  CALL   18FC
....................                   displayContrasena(Contrasena[1],40,30,0); 
4B98:  MOVFF  4D0,504
4B9C:  MOVLW  28
4B9E:  MOVLB  5
4BA0:  MOVWF  x05
4BA2:  MOVLW  1E
4BA4:  MOVWF  x06
4BA6:  CLRF   x07
4BA8:  MOVLB  0
4BAA:  CALL   18FC
....................                   displayContrasena(Contrasena[2],60,30,0); 
4BAE:  MOVFF  4D1,504
4BB2:  MOVLW  3C
4BB4:  MOVLB  5
4BB6:  MOVWF  x05
4BB8:  MOVLW  1E
4BBA:  MOVWF  x06
4BBC:  CLRF   x07
4BBE:  MOVLB  0
4BC0:  CALL   18FC
....................                   displayContrasena(Contrasena[3],80,30,1); 
4BC4:  MOVFF  4D2,504
4BC8:  MOVLW  50
4BCA:  MOVLB  5
4BCC:  MOVWF  x05
4BCE:  MOVLW  1E
4BD0:  MOVWF  x06
4BD2:  MOVLW  01
4BD4:  MOVWF  x07
4BD6:  MOVLB  0
4BD8:  CALL   18FC
4BDC:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4BDE:  BSF    F92.0
4BE0:  BTFSS  F80.0
4BE2:  BRA    4C4C
....................       { 
....................          if(Flanco == 0) 
4BE4:  BTFSC  x96.0
4BE6:  BRA    4C4A
....................          { 
....................             Flanco = 1;delay_ms(30); 
4BE8:  BSF    x96.0
4BEA:  MOVLW  1E
4BEC:  MOVLB  5
4BEE:  MOVWF  x03
4BF0:  MOVLB  0
4BF2:  CALL   103E
....................             for(i=1;i<=4;i++) 
4BF6:  MOVLW  01
4BF8:  MOVLB  4
4BFA:  MOVWF  xA5
4BFC:  MOVF   xA5,W
4BFE:  SUBLW  04
4C00:  BNC   4C4A
....................             { 
....................                if(unidad==i) 
4C02:  MOVF   xA5,W
4C04:  SUBWF  xA4,W
4C06:  BNZ   4C46
....................                { 
....................                   Contrasena[i-1]++; 
4C08:  MOVLW  01
4C0A:  SUBWF  xA5,W
4C0C:  CLRF   03
4C0E:  ADDLW  CF
4C10:  MOVWF  FE9
4C12:  MOVLW  04
4C14:  ADDWFC 03,W
4C16:  MOVWF  FEA
4C18:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4C1A:  MOVLW  01
4C1C:  SUBWF  xA5,W
4C1E:  CLRF   03
4C20:  ADDLW  CF
4C22:  MOVWF  FE9
4C24:  MOVLW  04
4C26:  ADDWFC 03,W
4C28:  MOVWF  FEA
4C2A:  BTFSC  FEF.7
4C2C:  BRA    4C46
4C2E:  MOVF   FEF,W
4C30:  SUBLW  09
4C32:  BC    4C46
....................                   { 
....................                      Contrasena[i-1]=0; 
4C34:  MOVLW  01
4C36:  SUBWF  xA5,W
4C38:  CLRF   03
4C3A:  ADDLW  CF
4C3C:  MOVWF  FE9
4C3E:  MOVLW  04
4C40:  ADDWFC 03,W
4C42:  MOVWF  FEA
4C44:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4C46:  INCF   xA5,F
4C48:  BRA    4BFC
....................          } 
....................       } 
....................       else 
4C4A:  BRA    4C4E
....................       { 
....................          Flanco = 0; 
4C4C:  BCF    x96.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4C4E:  BSF    F92.1
4C50:  BTFSS  F80.1
4C52:  BRA    4CBA
....................       { 
....................          if(Flanco2 == 0) 
4C54:  BTFSC  x96.2
4C56:  BRA    4CB8
....................             {Flanco2 = 1;delay_ms(30); 
4C58:  BSF    x96.2
4C5A:  MOVLW  1E
4C5C:  MOVLB  5
4C5E:  MOVWF  x03
4C60:  MOVLB  0
4C62:  CALL   103E
....................                for(i=1;i<=4;i++) 
4C66:  MOVLW  01
4C68:  MOVLB  4
4C6A:  MOVWF  xA5
4C6C:  MOVF   xA5,W
4C6E:  SUBLW  04
4C70:  BNC   4CB8
....................                { 
....................                   if(unidad==i) 
4C72:  MOVF   xA5,W
4C74:  SUBWF  xA4,W
4C76:  BNZ   4CB4
....................                   {Contrasena[i-1]--;  
4C78:  MOVLW  01
4C7A:  SUBWF  xA5,W
4C7C:  CLRF   03
4C7E:  ADDLW  CF
4C80:  MOVWF  FE9
4C82:  MOVLW  04
4C84:  ADDWFC 03,W
4C86:  MOVWF  FEA
4C88:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4C8A:  MOVLW  01
4C8C:  SUBWF  xA5,W
4C8E:  CLRF   03
4C90:  ADDLW  CF
4C92:  MOVWF  FE9
4C94:  MOVLW  04
4C96:  ADDWFC 03,W
4C98:  MOVWF  FEA
4C9A:  BTFSC  FEF.7
4C9C:  BRA    4CA0
4C9E:  BRA    4CB4
....................                         {Contrasena[i-1]=9;} 
4CA0:  MOVLW  01
4CA2:  SUBWF  xA5,W
4CA4:  CLRF   03
4CA6:  ADDLW  CF
4CA8:  MOVWF  FE9
4CAA:  MOVLW  04
4CAC:  ADDWFC 03,W
4CAE:  MOVWF  FEA
4CB0:  MOVLW  09
4CB2:  MOVWF  FEF
....................                   } 
....................                }       
4CB4:  INCF   xA5,F
4CB6:  BRA    4C6C
....................             }      
....................       } 
....................       else 
4CB8:  BRA    4CBC
....................       { 
....................          Flanco2 = 0; 
4CBA:  BCF    x96.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4CBC:  BSF    F92.2
4CBE:  BTFSS  F80.2
4CC0:  BRA    4CE4
....................       { 
....................          if(Flanco1 == 0) 
4CC2:  BTFSC  x96.1
4CC4:  BRA    4CE2
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4CC6:  BSF    x96.1
4CC8:  MOVLW  02
4CCA:  MOVLB  5
4CCC:  MOVWF  x02
4CCE:  MOVLW  96
4CD0:  MOVWF  x03
4CD2:  MOVLB  0
4CD4:  CALL   103E
4CD8:  MOVLB  5
4CDA:  DECFSZ x02,F
4CDC:  BRA    4CCE
4CDE:  MOVLB  4
4CE0:  INCF   xA4,F
....................       } 
....................       else 
4CE2:  BRA    4CE6
....................       { 
....................          Flanco1 = 0; 
4CE4:  BCF    x96.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4CE6:  BSF    F92.3
4CE8:  BTFSS  F80.3
4CEA:  BRA    4D14
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4CEC:  MOVLW  04
4CEE:  MOVLB  5
4CF0:  MOVWF  x02
4CF2:  MOVLW  AF
4CF4:  MOVWF  x03
4CF6:  MOVLB  0
4CF8:  CALL   103E
4CFC:  MOVLB  5
4CFE:  DECFSZ x02,F
4D00:  BRA    4CF2
4D02:  MOVLW  01
4D04:  MOVLB  4
4D06:  MOVWF  xA3
4D08:  MOVLB  5
4D0A:  CLRF   x03
4D0C:  MOVLB  0
4D0E:  CALL   10A8
4D12:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4D14:  MOVF   xA4,W
4D16:  SUBLW  04
4D18:  BTFSC  FD8.0
4D1A:  BRA    4EC0
....................       {glcd_fillScreen(OFF); 
4D1C:  MOVLB  5
4D1E:  CLRF   x03
4D20:  MOVLB  0
4D22:  CALL   10A8
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4D26:  MOVLB  4
4D28:  MOVF   xD3,W
4D2A:  SUBWF  xCF,W
4D2C:  BNZ   4DFE
4D2E:  MOVF   xD4,W
4D30:  SUBWF  xD0,W
4D32:  BNZ   4DFE
4D34:  MOVF   xD5,W
4D36:  SUBWF  xD1,W
4D38:  BNZ   4DFE
4D3A:  MOVF   xD6,W
4D3C:  SUBWF  xD2,W
4D3E:  BNZ   4DFE
....................          { 
....................             glcd_fillScreen(OFF); 
4D40:  MOVLB  5
4D42:  CLRF   x03
4D44:  MOVLB  0
4D46:  CALL   10A8
....................             strcpy(Menus.Letra,"Clave"); 
4D4A:  MOVLW  04
4D4C:  MOVWF  FEA
4D4E:  MOVLW  E2
4D50:  MOVWF  FE9
4D52:  MOVFF  FF2,502
4D56:  BCF    FF2.7
4D58:  MOVLW  00
4D5A:  CALL   0758
4D5E:  TBLRD*-
4D60:  TBLRD*+
4D62:  MOVF   FF5,W
4D64:  MOVWF  FEE
4D66:  IORLW  00
4D68:  BNZ   4D60
4D6A:  MOVLB  5
4D6C:  BTFSC  x02.7
4D6E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4D70:  MOVLW  04
4D72:  MOVWF  x03
4D74:  MOVLW  E2
4D76:  MOVWF  x02
4D78:  MOVLW  1E
4D7A:  MOVWF  x04
4D7C:  CLRF   x05
4D7E:  CLRF   x06
4D80:  MOVLW  02
4D82:  MOVWF  x07
4D84:  MOVLB  0
4D86:  CALL   16D6
....................             strcpy(Menus.Letra,"Correcta"); 
4D8A:  MOVLW  04
4D8C:  MOVWF  FEA
4D8E:  MOVLW  E2
4D90:  MOVWF  FE9
4D92:  MOVFF  FF2,502
4D96:  BCF    FF2.7
4D98:  MOVLW  00
4D9A:  CALL   0778
4D9E:  TBLRD*-
4DA0:  TBLRD*+
4DA2:  MOVF   FF5,W
4DA4:  MOVWF  FEE
4DA6:  IORLW  00
4DA8:  BNZ   4DA0
4DAA:  MOVLB  5
4DAC:  BTFSC  x02.7
4DAE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4DB0:  MOVLW  04
4DB2:  MOVWF  x03
4DB4:  MOVLW  E2
4DB6:  MOVWF  x02
4DB8:  MOVLW  0F
4DBA:  MOVWF  x04
4DBC:  MOVLW  1E
4DBE:  MOVWF  x05
4DC0:  CLRF   x06
4DC2:  MOVLW  02
4DC4:  MOVWF  x07
4DC6:  MOVLB  0
4DC8:  CALL   16D6
....................             Menu=91;glcd_update();delay_ms(1000); 
4DCC:  MOVLW  5B
4DCE:  MOVLB  4
4DD0:  MOVWF  xA3
4DD2:  MOVLB  0
4DD4:  CALL   1102
4DD8:  MOVLW  04
4DDA:  MOVLB  5
4DDC:  MOVWF  x02
4DDE:  MOVLW  FA
4DE0:  MOVWF  x03
4DE2:  MOVLB  0
4DE4:  CALL   103E
4DE8:  MOVLB  5
4DEA:  DECFSZ x02,F
4DEC:  BRA    4DDE
....................             glcd_fillScreen(OFF);unidad=1; 
4DEE:  CLRF   x03
4DF0:  MOVLB  0
4DF2:  CALL   10A8
4DF6:  MOVLW  01
4DF8:  MOVLB  4
4DFA:  MOVWF  xA4
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4DFC:  BRA    4EC0
....................          { 
....................             glcd_fillScreen(OFF); 
4DFE:  MOVLB  5
4E00:  CLRF   x03
4E02:  MOVLB  0
4E04:  CALL   10A8
....................             strcpy(Menus.Letra,"Clave"); 
4E08:  MOVLW  04
4E0A:  MOVWF  FEA
4E0C:  MOVLW  E2
4E0E:  MOVWF  FE9
4E10:  MOVFF  FF2,502
4E14:  BCF    FF2.7
4E16:  MOVLW  00
4E18:  CALL   0758
4E1C:  TBLRD*-
4E1E:  TBLRD*+
4E20:  MOVF   FF5,W
4E22:  MOVWF  FEE
4E24:  IORLW  00
4E26:  BNZ   4E1E
4E28:  MOVLB  5
4E2A:  BTFSC  x02.7
4E2C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4E2E:  MOVLW  04
4E30:  MOVWF  x03
4E32:  MOVLW  E2
4E34:  MOVWF  x02
4E36:  MOVLW  1E
4E38:  MOVWF  x04
4E3A:  CLRF   x05
4E3C:  CLRF   x06
4E3E:  MOVLW  02
4E40:  MOVWF  x07
4E42:  MOVLB  0
4E44:  CALL   16D6
....................             strcpy(Menus.Letra,"Incorrecta"); 
4E48:  MOVLW  04
4E4A:  MOVWF  FEA
4E4C:  MOVLW  E2
4E4E:  MOVWF  FE9
4E50:  MOVFF  FF2,502
4E54:  BCF    FF2.7
4E56:  MOVLW  00
4E58:  CALL   079C
4E5C:  TBLRD*-
4E5E:  TBLRD*+
4E60:  MOVF   FF5,W
4E62:  MOVWF  FEE
4E64:  IORLW  00
4E66:  BNZ   4E5E
4E68:  MOVLB  5
4E6A:  BTFSC  x02.7
4E6C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4E6E:  MOVLW  04
4E70:  MOVWF  x03
4E72:  MOVLW  E2
4E74:  MOVWF  x02
4E76:  CLRF   x04
4E78:  MOVLW  1E
4E7A:  MOVWF  x05
4E7C:  CLRF   x06
4E7E:  MOVLW  02
4E80:  MOVWF  x07
4E82:  MOVLB  0
4E84:  CALL   16D6
....................             Menu=1;glcd_update();delay_ms(1000); 
4E88:  MOVLW  01
4E8A:  MOVLB  4
4E8C:  MOVWF  xA3
4E8E:  MOVLB  0
4E90:  CALL   1102
4E94:  MOVLW  04
4E96:  MOVLB  5
4E98:  MOVWF  x02
4E9A:  MOVLW  FA
4E9C:  MOVWF  x03
4E9E:  MOVLB  0
4EA0:  CALL   103E
4EA4:  MOVLB  5
4EA6:  DECFSZ x02,F
4EA8:  BRA    4E9A
....................             glcd_fillScreen(OFF);unidad=1; 
4EAA:  CLRF   x03
4EAC:  MOVLB  0
4EAE:  CALL   10A8
4EB2:  MOVLW  01
4EB4:  MOVLB  4
4EB6:  MOVWF  xA4
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4EB8:  CLRF   xCF
4EBA:  CLRF   xD0
4EBC:  CLRF   xD1
4EBE:  CLRF   xD2
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4EC0:  MOVF   xA3,W
4EC2:  SUBLW  5B
4EC4:  BTFSS  FD8.2
4EC6:  BRA    52A0
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4EC8:  MOVLW  04
4ECA:  MOVWF  FEA
4ECC:  MOVLW  E2
4ECE:  MOVWF  FE9
4ED0:  MOVFF  FF2,502
4ED4:  BCF    FF2.7
4ED6:  MOVLW  00
4ED8:  MOVLB  0
4EDA:  CALL   0C86
4EDE:  TBLRD*-
4EE0:  TBLRD*+
4EE2:  MOVF   FF5,W
4EE4:  MOVWF  FEE
4EE6:  IORLW  00
4EE8:  BNZ   4EE0
4EEA:  MOVLB  5
4EEC:  BTFSC  x02.7
4EEE:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4EF0:  MOVLW  04
4EF2:  MOVWF  x03
4EF4:  MOVLW  E2
4EF6:  MOVWF  x02
4EF8:  CLRF   x04
4EFA:  CLRF   x05
4EFC:  MOVLW  01
4EFE:  MOVWF  x06
4F00:  MOVLW  02
4F02:  MOVWF  x07
4F04:  MOVLB  0
4F06:  CALL   16D6
....................        
....................       if(unidad==1) 
4F0A:  MOVLB  4
4F0C:  DECFSZ xA4,W
4F0E:  BRA    4F6E
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4F10:  MOVFF  4D3,504
4F14:  MOVLW  14
4F16:  MOVLB  5
4F18:  MOVWF  x05
4F1A:  MOVLW  1E
4F1C:  MOVWF  x06
4F1E:  MOVLW  01
4F20:  MOVWF  x07
4F22:  MOVLB  0
4F24:  CALL   18FC
....................          displayContrasena(Password[1],40,30,0); 
4F28:  MOVFF  4D4,504
4F2C:  MOVLW  28
4F2E:  MOVLB  5
4F30:  MOVWF  x05
4F32:  MOVLW  1E
4F34:  MOVWF  x06
4F36:  CLRF   x07
4F38:  MOVLB  0
4F3A:  CALL   18FC
....................          displayContrasena(Password[2],60,30,0); 
4F3E:  MOVFF  4D5,504
4F42:  MOVLW  3C
4F44:  MOVLB  5
4F46:  MOVWF  x05
4F48:  MOVLW  1E
4F4A:  MOVWF  x06
4F4C:  CLRF   x07
4F4E:  MOVLB  0
4F50:  CALL   18FC
....................          displayContrasena(Password[3],80,30,0); 
4F54:  MOVFF  4D6,504
4F58:  MOVLW  50
4F5A:  MOVLB  5
4F5C:  MOVWF  x05
4F5E:  MOVLW  1E
4F60:  MOVWF  x06
4F62:  CLRF   x07
4F64:  MOVLB  0
4F66:  CALL   18FC
....................       } 
....................       else 
4F6A:  BRA    5096
4F6C:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4F6E:  MOVF   xA4,W
4F70:  SUBLW  02
4F72:  BNZ   4FD2
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4F74:  MOVFF  4D3,504
4F78:  MOVLW  14
4F7A:  MOVLB  5
4F7C:  MOVWF  x05
4F7E:  MOVLW  1E
4F80:  MOVWF  x06
4F82:  CLRF   x07
4F84:  MOVLB  0
4F86:  CALL   18FC
....................             displayContrasena(Password[1],40,30,1); 
4F8A:  MOVFF  4D4,504
4F8E:  MOVLW  28
4F90:  MOVLB  5
4F92:  MOVWF  x05
4F94:  MOVLW  1E
4F96:  MOVWF  x06
4F98:  MOVLW  01
4F9A:  MOVWF  x07
4F9C:  MOVLB  0
4F9E:  CALL   18FC
....................             displayContrasena(Password[2],60,30,0); 
4FA2:  MOVFF  4D5,504
4FA6:  MOVLW  3C
4FA8:  MOVLB  5
4FAA:  MOVWF  x05
4FAC:  MOVLW  1E
4FAE:  MOVWF  x06
4FB0:  CLRF   x07
4FB2:  MOVLB  0
4FB4:  CALL   18FC
....................             displayContrasena(Password[3],80,30,0); 
4FB8:  MOVFF  4D6,504
4FBC:  MOVLW  50
4FBE:  MOVLB  5
4FC0:  MOVWF  x05
4FC2:  MOVLW  1E
4FC4:  MOVWF  x06
4FC6:  CLRF   x07
4FC8:  MOVLB  0
4FCA:  CALL   18FC
....................          } 
....................          else 
4FCE:  BRA    5096
4FD0:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4FD2:  MOVF   xA4,W
4FD4:  SUBLW  03
4FD6:  BNZ   5036
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4FD8:  MOVFF  4D3,504
4FDC:  MOVLW  14
4FDE:  MOVLB  5
4FE0:  MOVWF  x05
4FE2:  MOVLW  1E
4FE4:  MOVWF  x06
4FE6:  CLRF   x07
4FE8:  MOVLB  0
4FEA:  CALL   18FC
....................                displayContrasena(Password[1],40,30,0); 
4FEE:  MOVFF  4D4,504
4FF2:  MOVLW  28
4FF4:  MOVLB  5
4FF6:  MOVWF  x05
4FF8:  MOVLW  1E
4FFA:  MOVWF  x06
4FFC:  CLRF   x07
4FFE:  MOVLB  0
5000:  CALL   18FC
....................                displayContrasena(Password[2],60,30,1); 
5004:  MOVFF  4D5,504
5008:  MOVLW  3C
500A:  MOVLB  5
500C:  MOVWF  x05
500E:  MOVLW  1E
5010:  MOVWF  x06
5012:  MOVLW  01
5014:  MOVWF  x07
5016:  MOVLB  0
5018:  CALL   18FC
....................                displayContrasena(Password[3],80,30,0); 
501C:  MOVFF  4D6,504
5020:  MOVLW  50
5022:  MOVLB  5
5024:  MOVWF  x05
5026:  MOVLW  1E
5028:  MOVWF  x06
502A:  CLRF   x07
502C:  MOVLB  0
502E:  CALL   18FC
....................             } 
....................             else 
5032:  BRA    5096
5034:  MOVLB  4
....................             { 
....................                if(unidad==4) 
5036:  MOVF   xA4,W
5038:  SUBLW  04
503A:  BNZ   5098
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
503C:  MOVFF  4D3,504
5040:  MOVLW  14
5042:  MOVLB  5
5044:  MOVWF  x05
5046:  MOVLW  1E
5048:  MOVWF  x06
504A:  CLRF   x07
504C:  MOVLB  0
504E:  CALL   18FC
....................                   displayContrasena(Password[1],40,30,0); 
5052:  MOVFF  4D4,504
5056:  MOVLW  28
5058:  MOVLB  5
505A:  MOVWF  x05
505C:  MOVLW  1E
505E:  MOVWF  x06
5060:  CLRF   x07
5062:  MOVLB  0
5064:  CALL   18FC
....................                   displayContrasena(Password[2],60,30,0); 
5068:  MOVFF  4D5,504
506C:  MOVLW  3C
506E:  MOVLB  5
5070:  MOVWF  x05
5072:  MOVLW  1E
5074:  MOVWF  x06
5076:  CLRF   x07
5078:  MOVLB  0
507A:  CALL   18FC
....................                   displayContrasena(Password[3],80,30,1); 
507E:  MOVFF  4D6,504
5082:  MOVLW  50
5084:  MOVLB  5
5086:  MOVWF  x05
5088:  MOVLW  1E
508A:  MOVWF  x06
508C:  MOVLW  01
508E:  MOVWF  x07
5090:  MOVLB  0
5092:  CALL   18FC
5096:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
5098:  BSF    F92.0
509A:  BTFSS  F80.0
509C:  BRA    5106
....................       { 
....................          if(Flanco == 0) 
509E:  BTFSC  x96.0
50A0:  BRA    5104
....................          { 
....................             Flanco = 1;delay_ms(30); 
50A2:  BSF    x96.0
50A4:  MOVLW  1E
50A6:  MOVLB  5
50A8:  MOVWF  x03
50AA:  MOVLB  0
50AC:  CALL   103E
....................             for(i=1;i<=4;i++) 
50B0:  MOVLW  01
50B2:  MOVLB  4
50B4:  MOVWF  xA5
50B6:  MOVF   xA5,W
50B8:  SUBLW  04
50BA:  BNC   5104
....................             { 
....................                if(unidad==i) 
50BC:  MOVF   xA5,W
50BE:  SUBWF  xA4,W
50C0:  BNZ   5100
....................                { 
....................                   Password[i-1]++; 
50C2:  MOVLW  01
50C4:  SUBWF  xA5,W
50C6:  CLRF   03
50C8:  ADDLW  D3
50CA:  MOVWF  FE9
50CC:  MOVLW  04
50CE:  ADDWFC 03,W
50D0:  MOVWF  FEA
50D2:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
50D4:  MOVLW  01
50D6:  SUBWF  xA5,W
50D8:  CLRF   03
50DA:  ADDLW  D3
50DC:  MOVWF  FE9
50DE:  MOVLW  04
50E0:  ADDWFC 03,W
50E2:  MOVWF  FEA
50E4:  BTFSC  FEF.7
50E6:  BRA    5100
50E8:  MOVF   FEF,W
50EA:  SUBLW  09
50EC:  BC    5100
....................                   { 
....................                      Password[i-1]=0; 
50EE:  MOVLW  01
50F0:  SUBWF  xA5,W
50F2:  CLRF   03
50F4:  ADDLW  D3
50F6:  MOVWF  FE9
50F8:  MOVLW  04
50FA:  ADDWFC 03,W
50FC:  MOVWF  FEA
50FE:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
5100:  INCF   xA5,F
5102:  BRA    50B6
....................          } 
....................       } 
....................       else 
5104:  BRA    5108
....................       { 
....................          Flanco = 0; 
5106:  BCF    x96.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5108:  BSF    F92.1
510A:  BTFSS  F80.1
510C:  BRA    5174
....................       { 
....................          if(Flanco2 == 0) 
510E:  BTFSC  x96.2
5110:  BRA    5172
....................             {Flanco2 = 1;delay_ms(30); 
5112:  BSF    x96.2
5114:  MOVLW  1E
5116:  MOVLB  5
5118:  MOVWF  x03
511A:  MOVLB  0
511C:  CALL   103E
....................                for(i=1;i<=4;i++) 
5120:  MOVLW  01
5122:  MOVLB  4
5124:  MOVWF  xA5
5126:  MOVF   xA5,W
5128:  SUBLW  04
512A:  BNC   5172
....................                { 
....................                   if(unidad==i) 
512C:  MOVF   xA5,W
512E:  SUBWF  xA4,W
5130:  BNZ   516E
....................                   { 
....................                      Password[i-1]--; 
5132:  MOVLW  01
5134:  SUBWF  xA5,W
5136:  CLRF   03
5138:  ADDLW  D3
513A:  MOVWF  FE9
513C:  MOVLW  04
513E:  ADDWFC 03,W
5140:  MOVWF  FEA
5142:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
5144:  MOVLW  01
5146:  SUBWF  xA5,W
5148:  CLRF   03
514A:  ADDLW  D3
514C:  MOVWF  FE9
514E:  MOVLW  04
5150:  ADDWFC 03,W
5152:  MOVWF  FEA
5154:  BTFSC  FEF.7
5156:  BRA    515A
5158:  BRA    516E
....................                      { 
....................                         Password[i-1]=9; 
515A:  MOVLW  01
515C:  SUBWF  xA5,W
515E:  CLRF   03
5160:  ADDLW  D3
5162:  MOVWF  FE9
5164:  MOVLW  04
5166:  ADDWFC 03,W
5168:  MOVWF  FEA
516A:  MOVLW  09
516C:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
516E:  INCF   xA5,F
5170:  BRA    5126
....................             }      
....................       } 
....................       else 
5172:  BRA    5176
....................       { 
....................          Flanco2 = 0; 
5174:  BCF    x96.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
5176:  BSF    F92.2
5178:  BTFSS  F80.2
517A:  BRA    519E
....................       { 
....................          if(Flanco1 == 0) 
517C:  BTFSC  x96.1
517E:  BRA    519C
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
5180:  BSF    x96.1
5182:  MOVLW  02
5184:  MOVLB  5
5186:  MOVWF  x02
5188:  MOVLW  96
518A:  MOVWF  x03
518C:  MOVLB  0
518E:  CALL   103E
5192:  MOVLB  5
5194:  DECFSZ x02,F
5196:  BRA    5188
5198:  MOVLB  4
519A:  INCF   xA4,F
....................       } 
....................       else 
519C:  BRA    51A0
....................       { 
....................          Flanco1 = 0; 
519E:  BCF    x96.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
51A0:  BSF    F92.3
51A2:  BTFSS  F80.3
51A4:  BRA    51CE
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
51A6:  MOVLW  04
51A8:  MOVLB  5
51AA:  MOVWF  x02
51AC:  MOVLW  AF
51AE:  MOVWF  x03
51B0:  MOVLB  0
51B2:  CALL   103E
51B6:  MOVLB  5
51B8:  DECFSZ x02,F
51BA:  BRA    51AC
51BC:  MOVLW  01
51BE:  MOVLB  4
51C0:  MOVWF  xA3
51C2:  MOVLB  5
51C4:  CLRF   x03
51C6:  MOVLB  0
51C8:  CALL   10A8
51CC:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
51CE:  MOVF   xA4,W
51D0:  SUBLW  04
51D2:  BC    52A0
....................       { 
....................          Opcion=1;unidad=1; 
51D4:  MOVLW  01
51D6:  MOVWF  xA8
51D8:  MOVWF  xA4
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
51DA:  MOVLW  0A
51DC:  MOVWF  FA9
51DE:  MOVFF  4D3,FA8
51E2:  BCF    FA6.6
51E4:  BCF    FA6.7
51E6:  BSF    FA6.2
51E8:  MOVF   FF2,W
51EA:  MOVWF  00
51EC:  BCF    FF2.7
51EE:  MOVLB  F
51F0:  MOVLW  55
51F2:  MOVWF  FA7
51F4:  MOVLW  AA
51F6:  MOVWF  FA7
51F8:  BSF    FA6.1
51FA:  BTFSC  FA6.1
51FC:  BRA    51FA
51FE:  BCF    FA6.2
5200:  MOVF   00,W
5202:  IORWF  FF2,F
5204:  MOVLW  0B
5206:  MOVWF  FA9
5208:  MOVFF  4D4,FA8
520C:  BCF    FA6.6
520E:  BCF    FA6.7
5210:  BSF    FA6.2
5212:  MOVF   FF2,W
5214:  MOVWF  00
5216:  BCF    FF2.7
5218:  MOVLW  55
521A:  MOVWF  FA7
521C:  MOVLW  AA
521E:  MOVWF  FA7
5220:  BSF    FA6.1
5222:  BTFSC  FA6.1
5224:  BRA    5222
5226:  BCF    FA6.2
5228:  MOVF   00,W
522A:  IORWF  FF2,F
522C:  MOVLW  0C
522E:  MOVWF  FA9
5230:  MOVFF  4D5,FA8
5234:  BCF    FA6.6
5236:  BCF    FA6.7
5238:  BSF    FA6.2
523A:  MOVF   FF2,W
523C:  MOVWF  00
523E:  BCF    FF2.7
5240:  MOVLW  55
5242:  MOVWF  FA7
5244:  MOVLW  AA
5246:  MOVWF  FA7
5248:  BSF    FA6.1
524A:  BTFSC  FA6.1
524C:  BRA    524A
524E:  BCF    FA6.2
5250:  MOVF   00,W
5252:  IORWF  FF2,F
5254:  MOVLW  0D
5256:  MOVWF  FA9
5258:  MOVFF  4D6,FA8
525C:  BCF    FA6.6
525E:  BCF    FA6.7
5260:  BSF    FA6.2
5262:  MOVF   FF2,W
5264:  MOVWF  00
5266:  BCF    FF2.7
5268:  MOVLW  55
526A:  MOVWF  FA7
526C:  MOVLW  AA
526E:  MOVWF  FA7
5270:  BSF    FA6.1
5272:  BTFSC  FA6.1
5274:  BRA    5272
5276:  BCF    FA6.2
5278:  MOVF   00,W
527A:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
527C:  MOVLW  04
527E:  MOVLB  5
5280:  MOVWF  x02
5282:  MOVLW  FA
5284:  MOVWF  x03
5286:  MOVLB  0
5288:  CALL   103E
528C:  MOVLB  5
528E:  DECFSZ x02,F
5290:  BRA    5282
5292:  CLRF   x03
5294:  MOVLB  0
5296:  CALL   10A8
529A:  MOVLW  01
529C:  MOVLB  4
529E:  MOVWF  xA3
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
52A0:  MOVF   xA3,W
52A2:  SUBLW  0B
52A4:  BTFSS  FD8.2
52A6:  BRA    55A8
....................       
....................       if(visual==1) 
52A8:  BTFSS  x96.4
52AA:  BRA    5436
....................       { 
....................          if(unidad<1) 
52AC:  MOVF   xA4,F
52AE:  BNZ   52B4
....................          {unidad=4;} 
52B0:  MOVLW  04
52B2:  MOVWF  xA4
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
52B4:  MOVLW  04
52B6:  MOVWF  FEA
52B8:  MOVLW  E2
52BA:  MOVWF  FE9
52BC:  MOVFF  FF2,502
52C0:  BCF    FF2.7
52C2:  MOVLW  00
52C4:  MOVLB  0
52C6:  CALL   0CAC
52CA:  TBLRD*-
52CC:  TBLRD*+
52CE:  MOVF   FF5,W
52D0:  MOVWF  FEE
52D2:  IORLW  00
52D4:  BNZ   52CC
52D6:  MOVLB  5
52D8:  BTFSC  x02.7
52DA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
52DC:  MOVLW  04
52DE:  MOVWF  x03
52E0:  MOVLW  E2
52E2:  MOVWF  x02
52E4:  CLRF   x04
52E6:  CLRF   x05
52E8:  MOVLW  01
52EA:  MOVWF  x06
52EC:  MOVLW  02
52EE:  MOVWF  x07
52F0:  MOVLB  0
52F2:  CALL   16D6
....................           
....................          if(unidad==4) 
52F6:  MOVLB  4
52F8:  MOVF   xA4,W
52FA:  SUBLW  04
52FC:  BNZ   531C
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
52FE:  MOVFF  4C6,503
5302:  MOVLW  14
5304:  MOVLB  5
5306:  MOVWF  x04
5308:  MOVLW  28
530A:  MOVWF  x05
530C:  MOVLW  01
530E:  MOVWF  x06
5310:  MOVLW  02
5312:  MOVWF  x07
5314:  MOVLB  0
5316:  CALL   24BE
....................          else 
531A:  BRA    5336
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
531C:  MOVFF  4C6,503
5320:  MOVLW  14
5322:  MOVLB  5
5324:  MOVWF  x04
5326:  MOVLW  28
5328:  MOVWF  x05
532A:  CLRF   x06
532C:  MOVLW  02
532E:  MOVWF  x07
5330:  MOVLB  0
5332:  CALL   24BE
....................           
....................          if(unidad==3) 
5336:  MOVLB  4
5338:  MOVF   xA4,W
533A:  SUBLW  03
533C:  BNZ   535A
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
533E:  MOVFF  4C5,503
5342:  MOVLW  28
5344:  MOVLB  5
5346:  MOVWF  x04
5348:  MOVWF  x05
534A:  MOVLW  01
534C:  MOVWF  x06
534E:  MOVLW  02
5350:  MOVWF  x07
5352:  MOVLB  0
5354:  CALL   24BE
....................          else 
5358:  BRA    5372
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
535A:  MOVFF  4C5,503
535E:  MOVLW  28
5360:  MOVLB  5
5362:  MOVWF  x04
5364:  MOVWF  x05
5366:  CLRF   x06
5368:  MOVLW  02
536A:  MOVWF  x07
536C:  MOVLB  0
536E:  CALL   24BE
....................           
....................          if(unidad==2) 
5372:  MOVLB  4
5374:  MOVF   xA4,W
5376:  SUBLW  02
5378:  BNZ   5398
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
537A:  MOVFF  4C4,503
537E:  MOVLW  46
5380:  MOVLB  5
5382:  MOVWF  x04
5384:  MOVLW  28
5386:  MOVWF  x05
5388:  MOVLW  01
538A:  MOVWF  x06
538C:  MOVLW  02
538E:  MOVWF  x07
5390:  MOVLB  0
5392:  CALL   24BE
....................          else 
5396:  BRA    53B2
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
5398:  MOVFF  4C4,503
539C:  MOVLW  46
539E:  MOVLB  5
53A0:  MOVWF  x04
53A2:  MOVLW  28
53A4:  MOVWF  x05
53A6:  CLRF   x06
53A8:  MOVLW  02
53AA:  MOVWF  x07
53AC:  MOVLB  0
53AE:  CALL   24BE
....................           
....................          if(unidad==1) 
53B2:  MOVLB  4
53B4:  DECFSZ xA4,W
53B6:  BRA    53D6
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
53B8:  MOVFF  4C3,503
53BC:  MOVLW  5A
53BE:  MOVLB  5
53C0:  MOVWF  x04
53C2:  MOVLW  28
53C4:  MOVWF  x05
53C6:  MOVLW  01
53C8:  MOVWF  x06
53CA:  MOVLW  02
53CC:  MOVWF  x07
53CE:  MOVLB  0
53D0:  CALL   24BE
....................          else 
53D4:  BRA    53F0
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
53D6:  MOVFF  4C3,503
53DA:  MOVLW  5A
53DC:  MOVLB  5
53DE:  MOVWF  x04
53E0:  MOVLW  28
53E2:  MOVWF  x05
53E4:  CLRF   x06
53E6:  MOVLW  02
53E8:  MOVWF  x07
53EA:  MOVLB  0
53EC:  CALL   24BE
....................           
....................          strcpy(Menus.Letra,":"); 
53F0:  MOVLW  04
53F2:  MOVWF  FEA
53F4:  MOVLW  E2
53F6:  MOVWF  FE9
53F8:  MOVFF  FF2,502
53FC:  BCF    FF2.7
53FE:  MOVLW  00
5400:  CALL   06BE
5404:  TBLRD*-
5406:  TBLRD*+
5408:  MOVF   FF5,W
540A:  MOVWF  FEE
540C:  IORLW  00
540E:  BNZ   5406
5410:  MOVLB  5
5412:  BTFSC  x02.7
5414:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
5416:  MOVLW  04
5418:  MOVWF  x03
541A:  MOVLW  E2
541C:  MOVWF  x02
541E:  MOVLW  3C
5420:  MOVWF  x04
5422:  MOVLW  2A
5424:  MOVWF  x05
5426:  MOVLW  02
5428:  MOVWF  x06
542A:  MOVWF  x07
542C:  MOVLB  0
542E:  CALL   16D6
....................           
....................          visual=0; 
5432:  MOVLB  4
5434:  BCF    x96.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5436:  BSF    F92.0
5438:  BTFSS  F80.0
543A:  BRA    5478
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
543C:  MOVLW  01
543E:  SUBWF  xA4,W
5440:  CLRF   03
5442:  ADDLW  C3
5444:  MOVWF  FE9
5446:  MOVLW  04
5448:  ADDWFC 03,W
544A:  MOVWF  FEA
544C:  BTFSC  FEF.7
544E:  BRA    5456
5450:  MOVF   FEF,W
5452:  SUBLW  08
5454:  BNC   5478
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
5456:  MOVLW  1E
5458:  MOVLB  5
545A:  MOVWF  x03
545C:  MOVLB  0
545E:  CALL   103E
5462:  MOVLW  01
5464:  MOVLB  4
5466:  SUBWF  xA4,W
5468:  CLRF   03
546A:  ADDLW  C3
546C:  MOVWF  FE9
546E:  MOVLW  04
5470:  ADDWFC 03,W
5472:  MOVWF  FEA
5474:  INCF   FEF,F
5476:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5478:  BSF    F92.1
547A:  BTFSS  F80.1
547C:  BRA    54BA
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
547E:  MOVLW  01
5480:  SUBWF  xA4,W
5482:  CLRF   03
5484:  ADDLW  C3
5486:  MOVWF  FE9
5488:  MOVLW  04
548A:  ADDWFC 03,W
548C:  MOVWF  FEA
548E:  BTFSC  FEF.7
5490:  BRA    54BA
5492:  MOVF   FEF,W
5494:  SUBLW  00
5496:  BC    54BA
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
5498:  MOVLW  1E
549A:  MOVLB  5
549C:  MOVWF  x03
549E:  MOVLB  0
54A0:  CALL   103E
54A4:  MOVLW  01
54A6:  MOVLB  4
54A8:  SUBWF  xA4,W
54AA:  CLRF   03
54AC:  ADDLW  C3
54AE:  MOVWF  FE9
54B0:  MOVLW  04
54B2:  ADDWFC 03,W
54B4:  MOVWF  FEA
54B6:  DECF   FEF,F
54B8:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
54BA:  BSF    F92.2
54BC:  BTFSS  F80.2
54BE:  BRA    54D2
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
54C0:  MOVLW  1E
54C2:  MOVLB  5
54C4:  MOVWF  x03
54C6:  MOVLB  0
54C8:  CALL   103E
54CC:  MOVLB  4
54CE:  DECF   xA4,F
54D0:  BSF    x96.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
54D2:  BSF    F92.3
54D4:  BTFSS  F80.3
54D6:  BRA    55A8
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
54D8:  MOVLW  04
54DA:  MOVLB  5
54DC:  MOVWF  x02
54DE:  MOVLW  AF
54E0:  MOVWF  x03
54E2:  MOVLB  0
54E4:  CALL   103E
54E8:  MOVLB  5
54EA:  DECFSZ x02,F
54EC:  BRA    54DE
54EE:  MOVLW  08
54F0:  MOVLB  4
54F2:  MOVWF  xA3
54F4:  MOVLB  5
54F6:  CLRF   x03
54F8:  MOVLB  0
54FA:  CALL   10A8
54FE:  MOVLW  01
5500:  MOVLB  4
5502:  MOVWF  xA8
5504:  BSF    x96.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
5506:  CLRF   FA9
5508:  MOVFF  4C3,FA8
550C:  BCF    FA6.6
550E:  BCF    FA6.7
5510:  BSF    FA6.2
5512:  MOVF   FF2,W
5514:  MOVWF  00
5516:  BCF    FF2.7
5518:  MOVLB  F
551A:  MOVLW  55
551C:  MOVWF  FA7
551E:  MOVLW  AA
5520:  MOVWF  FA7
5522:  BSF    FA6.1
5524:  BTFSC  FA6.1
5526:  BRA    5524
5528:  BCF    FA6.2
552A:  MOVF   00,W
552C:  IORWF  FF2,F
552E:  MOVLW  01
5530:  MOVWF  FA9
5532:  MOVFF  4C4,FA8
5536:  BCF    FA6.6
5538:  BCF    FA6.7
553A:  BSF    FA6.2
553C:  MOVF   FF2,W
553E:  MOVWF  00
5540:  BCF    FF2.7
5542:  MOVLW  55
5544:  MOVWF  FA7
5546:  MOVLW  AA
5548:  MOVWF  FA7
554A:  BSF    FA6.1
554C:  BTFSC  FA6.1
554E:  BRA    554C
5550:  BCF    FA6.2
5552:  MOVF   00,W
5554:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
5556:  MOVLW  02
5558:  MOVWF  FA9
555A:  MOVFF  4C5,FA8
555E:  BCF    FA6.6
5560:  BCF    FA6.7
5562:  BSF    FA6.2
5564:  MOVFF  FF2,00
5568:  BCF    FF2.7
556A:  MOVLW  55
556C:  MOVWF  FA7
556E:  MOVLW  AA
5570:  MOVWF  FA7
5572:  BSF    FA6.1
5574:  BTFSC  FA6.1
5576:  BRA    5574
5578:  BCF    FA6.2
557A:  MOVF   00,W
557C:  IORWF  FF2,F
557E:  MOVLW  03
5580:  MOVWF  FA9
5582:  MOVFF  4C6,FA8
5586:  BCF    FA6.6
5588:  BCF    FA6.7
558A:  BSF    FA6.2
558C:  MOVFF  FF2,00
5590:  BCF    FF2.7
5592:  MOVLW  55
5594:  MOVWF  FA7
5596:  MOVLW  AA
5598:  MOVWF  FA7
559A:  BSF    FA6.1
559C:  BTFSC  FA6.1
559E:  BRA    559C
55A0:  BCF    FA6.2
55A2:  MOVF   00,W
55A4:  IORWF  FF2,F
55A6:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
55A8:  MOVF   xA3,W
55AA:  SUBLW  0C
55AC:  BTFSS  FD8.2
55AE:  BRA    58B2
....................       
....................       if(visual==1) 
55B0:  BTFSS  x96.4
55B2:  BRA    573E
....................       { 
....................          if(unidad<1) 
55B4:  MOVF   xA4,F
55B6:  BNZ   55BC
....................          {unidad=4;} 
55B8:  MOVLW  04
55BA:  MOVWF  xA4
....................           
....................          strcpy(Menus.Letra," Secado"); 
55BC:  MOVLW  04
55BE:  MOVWF  FEA
55C0:  MOVLW  E2
55C2:  MOVWF  FE9
55C4:  MOVFF  FF2,502
55C8:  BCF    FF2.7
55CA:  MOVLW  00
55CC:  MOVLB  0
55CE:  CALL   0CD0
55D2:  TBLRD*-
55D4:  TBLRD*+
55D6:  MOVF   FF5,W
55D8:  MOVWF  FEE
55DA:  IORLW  00
55DC:  BNZ   55D4
55DE:  MOVLB  5
55E0:  BTFSC  x02.7
55E2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
55E4:  MOVLW  04
55E6:  MOVWF  x03
55E8:  MOVLW  E2
55EA:  MOVWF  x02
55EC:  CLRF   x04
55EE:  CLRF   x05
55F0:  MOVLW  01
55F2:  MOVWF  x06
55F4:  MOVLW  02
55F6:  MOVWF  x07
55F8:  MOVLB  0
55FA:  CALL   16D6
....................           
....................          if(unidad==4) 
55FE:  MOVLB  4
5600:  MOVF   xA4,W
5602:  SUBLW  04
5604:  BNZ   5624
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
5606:  MOVFF  4CE,503
560A:  MOVLW  14
560C:  MOVLB  5
560E:  MOVWF  x04
5610:  MOVLW  28
5612:  MOVWF  x05
5614:  MOVLW  01
5616:  MOVWF  x06
5618:  MOVLW  02
561A:  MOVWF  x07
561C:  MOVLB  0
561E:  CALL   24BE
....................          else 
5622:  BRA    563E
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
5624:  MOVFF  4CE,503
5628:  MOVLW  14
562A:  MOVLB  5
562C:  MOVWF  x04
562E:  MOVLW  28
5630:  MOVWF  x05
5632:  CLRF   x06
5634:  MOVLW  02
5636:  MOVWF  x07
5638:  MOVLB  0
563A:  CALL   24BE
....................           
....................          if(unidad==3) 
563E:  MOVLB  4
5640:  MOVF   xA4,W
5642:  SUBLW  03
5644:  BNZ   5662
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
5646:  MOVFF  4CD,503
564A:  MOVLW  28
564C:  MOVLB  5
564E:  MOVWF  x04
5650:  MOVWF  x05
5652:  MOVLW  01
5654:  MOVWF  x06
5656:  MOVLW  02
5658:  MOVWF  x07
565A:  MOVLB  0
565C:  CALL   24BE
....................          else 
5660:  BRA    567A
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
5662:  MOVFF  4CD,503
5666:  MOVLW  28
5668:  MOVLB  5
566A:  MOVWF  x04
566C:  MOVWF  x05
566E:  CLRF   x06
5670:  MOVLW  02
5672:  MOVWF  x07
5674:  MOVLB  0
5676:  CALL   24BE
....................           
....................          if(unidad==2) 
567A:  MOVLB  4
567C:  MOVF   xA4,W
567E:  SUBLW  02
5680:  BNZ   56A0
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
5682:  MOVFF  4CC,503
5686:  MOVLW  46
5688:  MOVLB  5
568A:  MOVWF  x04
568C:  MOVLW  28
568E:  MOVWF  x05
5690:  MOVLW  01
5692:  MOVWF  x06
5694:  MOVLW  02
5696:  MOVWF  x07
5698:  MOVLB  0
569A:  CALL   24BE
....................          else 
569E:  BRA    56BA
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
56A0:  MOVFF  4CC,503
56A4:  MOVLW  46
56A6:  MOVLB  5
56A8:  MOVWF  x04
56AA:  MOVLW  28
56AC:  MOVWF  x05
56AE:  CLRF   x06
56B0:  MOVLW  02
56B2:  MOVWF  x07
56B4:  MOVLB  0
56B6:  CALL   24BE
....................           
....................          if(unidad==1) 
56BA:  MOVLB  4
56BC:  DECFSZ xA4,W
56BE:  BRA    56DE
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
56C0:  MOVFF  4CB,503
56C4:  MOVLW  5A
56C6:  MOVLB  5
56C8:  MOVWF  x04
56CA:  MOVLW  28
56CC:  MOVWF  x05
56CE:  MOVLW  01
56D0:  MOVWF  x06
56D2:  MOVLW  02
56D4:  MOVWF  x07
56D6:  MOVLB  0
56D8:  CALL   24BE
....................          else 
56DC:  BRA    56F8
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
56DE:  MOVFF  4CB,503
56E2:  MOVLW  5A
56E4:  MOVLB  5
56E6:  MOVWF  x04
56E8:  MOVLW  28
56EA:  MOVWF  x05
56EC:  CLRF   x06
56EE:  MOVLW  02
56F0:  MOVWF  x07
56F2:  MOVLB  0
56F4:  CALL   24BE
....................           
....................          strcpy(Menus.Letra,":"); 
56F8:  MOVLW  04
56FA:  MOVWF  FEA
56FC:  MOVLW  E2
56FE:  MOVWF  FE9
5700:  MOVFF  FF2,502
5704:  BCF    FF2.7
5706:  MOVLW  00
5708:  CALL   06BE
570C:  TBLRD*-
570E:  TBLRD*+
5710:  MOVF   FF5,W
5712:  MOVWF  FEE
5714:  IORLW  00
5716:  BNZ   570E
5718:  MOVLB  5
571A:  BTFSC  x02.7
571C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
571E:  MOVLW  04
5720:  MOVWF  x03
5722:  MOVLW  E2
5724:  MOVWF  x02
5726:  MOVLW  3C
5728:  MOVWF  x04
572A:  MOVLW  2A
572C:  MOVWF  x05
572E:  MOVLW  02
5730:  MOVWF  x06
5732:  MOVWF  x07
5734:  MOVLB  0
5736:  CALL   16D6
....................           
....................          visual=0; 
573A:  MOVLB  4
573C:  BCF    x96.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
573E:  BSF    F92.0
5740:  BTFSS  F80.0
5742:  BRA    5780
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
5744:  MOVLW  01
5746:  SUBWF  xA4,W
5748:  CLRF   03
574A:  ADDLW  CB
574C:  MOVWF  FE9
574E:  MOVLW  04
5750:  ADDWFC 03,W
5752:  MOVWF  FEA
5754:  BTFSC  FEF.7
5756:  BRA    575E
5758:  MOVF   FEF,W
575A:  SUBLW  08
575C:  BNC   5780
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
575E:  MOVLW  1E
5760:  MOVLB  5
5762:  MOVWF  x03
5764:  MOVLB  0
5766:  CALL   103E
576A:  MOVLW  01
576C:  MOVLB  4
576E:  SUBWF  xA4,W
5770:  CLRF   03
5772:  ADDLW  CB
5774:  MOVWF  FE9
5776:  MOVLW  04
5778:  ADDWFC 03,W
577A:  MOVWF  FEA
577C:  INCF   FEF,F
577E:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5780:  BSF    F92.1
5782:  BTFSS  F80.1
5784:  BRA    57C2
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
5786:  MOVLW  01
5788:  SUBWF  xA4,W
578A:  CLRF   03
578C:  ADDLW  CB
578E:  MOVWF  FE9
5790:  MOVLW  04
5792:  ADDWFC 03,W
5794:  MOVWF  FEA
5796:  BTFSC  FEF.7
5798:  BRA    57C2
579A:  MOVF   FEF,W
579C:  SUBLW  00
579E:  BC    57C2
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
57A0:  MOVLW  1E
57A2:  MOVLB  5
57A4:  MOVWF  x03
57A6:  MOVLB  0
57A8:  CALL   103E
57AC:  MOVLW  01
57AE:  MOVLB  4
57B0:  SUBWF  xA4,W
57B2:  CLRF   03
57B4:  ADDLW  CB
57B6:  MOVWF  FE9
57B8:  MOVLW  04
57BA:  ADDWFC 03,W
57BC:  MOVWF  FEA
57BE:  DECF   FEF,F
57C0:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
57C2:  BSF    F92.2
57C4:  BTFSS  F80.2
57C6:  BRA    57DA
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
57C8:  MOVLW  1E
57CA:  MOVLB  5
57CC:  MOVWF  x03
57CE:  MOVLB  0
57D0:  CALL   103E
57D4:  MOVLB  4
57D6:  DECF   xA4,F
57D8:  BSF    x96.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
57DA:  BSF    F92.3
57DC:  BTFSS  F80.3
57DE:  BRA    58B2
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
57E0:  MOVLW  04
57E2:  MOVLB  5
57E4:  MOVWF  x02
57E6:  MOVLW  AF
57E8:  MOVWF  x03
57EA:  MOVLB  0
57EC:  CALL   103E
57F0:  MOVLB  5
57F2:  DECFSZ x02,F
57F4:  BRA    57E6
57F6:  MOVLW  08
57F8:  MOVLB  4
57FA:  MOVWF  xA3
57FC:  MOVLB  5
57FE:  CLRF   x03
5800:  MOVLB  0
5802:  CALL   10A8
5806:  MOVLW  01
5808:  MOVLB  4
580A:  MOVWF  xA8
580C:  BSF    x96.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
580E:  MOVLW  04
5810:  MOVWF  FA9
5812:  MOVFF  4CB,FA8
5816:  BCF    FA6.6
5818:  BCF    FA6.7
581A:  BSF    FA6.2
581C:  MOVF   FF2,W
581E:  MOVWF  00
5820:  BCF    FF2.7
5822:  MOVLB  F
5824:  MOVLW  55
5826:  MOVWF  FA7
5828:  MOVLW  AA
582A:  MOVWF  FA7
582C:  BSF    FA6.1
582E:  BTFSC  FA6.1
5830:  BRA    582E
5832:  BCF    FA6.2
5834:  MOVF   00,W
5836:  IORWF  FF2,F
5838:  MOVLW  05
583A:  MOVWF  FA9
583C:  MOVFF  4CC,FA8
5840:  BCF    FA6.6
5842:  BCF    FA6.7
5844:  BSF    FA6.2
5846:  MOVF   FF2,W
5848:  MOVWF  00
584A:  BCF    FF2.7
584C:  MOVLW  55
584E:  MOVWF  FA7
5850:  MOVLW  AA
5852:  MOVWF  FA7
5854:  BSF    FA6.1
5856:  BTFSC  FA6.1
5858:  BRA    5856
585A:  BCF    FA6.2
585C:  MOVF   00,W
585E:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
5860:  MOVLW  06
5862:  MOVWF  FA9
5864:  MOVFF  4CD,FA8
5868:  BCF    FA6.6
586A:  BCF    FA6.7
586C:  BSF    FA6.2
586E:  MOVFF  FF2,00
5872:  BCF    FF2.7
5874:  MOVLW  55
5876:  MOVWF  FA7
5878:  MOVLW  AA
587A:  MOVWF  FA7
587C:  BSF    FA6.1
587E:  BTFSC  FA6.1
5880:  BRA    587E
5882:  BCF    FA6.2
5884:  MOVF   00,W
5886:  IORWF  FF2,F
5888:  MOVLW  07
588A:  MOVWF  FA9
588C:  MOVFF  4CE,FA8
5890:  BCF    FA6.6
5892:  BCF    FA6.7
5894:  BSF    FA6.2
5896:  MOVFF  FF2,00
589A:  BCF    FF2.7
589C:  MOVLW  55
589E:  MOVWF  FA7
58A0:  MOVLW  AA
58A2:  MOVWF  FA7
58A4:  BSF    FA6.1
58A6:  BTFSC  FA6.1
58A8:  BRA    58A6
58AA:  BCF    FA6.2
58AC:  MOVF   00,W
58AE:  IORWF  FF2,F
58B0:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
58B2:  MOVF   xA3,W
58B4:  SUBLW  0D
58B6:  BTFSS  FD8.2
58B8:  BRA    59F0
....................       
....................       if(visual==1) 
58BA:  BTFSS  x96.4
58BC:  BRA    5924
....................       { 
....................          glcd_fillScreen(OFF); 
58BE:  MOVLB  5
58C0:  CLRF   x03
58C2:  MOVLB  0
58C4:  CALL   10A8
....................          strcpy(Menus.Letra,"Temperatura"); 
58C8:  MOVLW  04
58CA:  MOVWF  FEA
58CC:  MOVLW  E2
58CE:  MOVWF  FE9
58D0:  MOVFF  FF2,502
58D4:  BCF    FF2.7
58D6:  MOVLW  00
58D8:  CALL   0C10
58DC:  TBLRD*-
58DE:  TBLRD*+
58E0:  MOVF   FF5,W
58E2:  MOVWF  FEE
58E4:  IORLW  00
58E6:  BNZ   58DE
58E8:  MOVLB  5
58EA:  BTFSC  x02.7
58EC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
58EE:  MOVLW  04
58F0:  MOVWF  x03
58F2:  MOVLW  E2
58F4:  MOVWF  x02
58F6:  CLRF   x04
58F8:  CLRF   x05
58FA:  MOVLW  01
58FC:  MOVWF  x06
58FE:  MOVLW  02
5900:  MOVWF  x07
5902:  MOVLB  0
5904:  CALL   16D6
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
5908:  MOVFF  4A6,503
590C:  MOVLW  1E
590E:  MOVLB  5
5910:  MOVWF  x04
5912:  MOVWF  x05
5914:  CLRF   x06
5916:  MOVLW  03
5918:  MOVWF  x07
591A:  MOVLB  0
591C:  CALL   24BE
....................           
....................          visual=0; 
5920:  MOVLB  4
5922:  BCF    x96.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
5924:  BSF    F92.0
5926:  BTFSS  F80.0
5928:  BRA    595C
....................          {   
....................             if(Setpoint<125) 
592A:  MOVF   xA6,W
592C:  SUBLW  7C
592E:  BNC   595C
....................             { 
....................                if(Setpoint<100) 
5930:  MOVF   xA6,W
5932:  SUBLW  63
5934:  BNC   594A
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
5936:  MOVLW  64
5938:  MOVWF  xA6
593A:  MOVLB  5
593C:  MOVWF  x03
593E:  MOVLB  0
5940:  CALL   103E
5944:  MOVLB  4
5946:  BSF    x96.4
....................                } 
....................                else 
5948:  BRA    595C
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
594A:  MOVLW  1E
594C:  MOVLB  5
594E:  MOVWF  x03
5950:  MOVLB  0
5952:  CALL   103E
5956:  MOVLB  4
5958:  INCF   xA6,F
595A:  BSF    x96.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
595C:  BSF    F92.1
595E:  BTFSS  F80.1
5960:  BRA    597A
....................          {   
....................             if(Setpoint>105) 
5962:  MOVF   xA6,W
5964:  SUBLW  69
5966:  BC    597A
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
5968:  MOVLW  1E
596A:  MOVLB  5
596C:  MOVWF  x03
596E:  MOVLB  0
5970:  CALL   103E
5974:  MOVLB  4
5976:  DECF   xA6,F
5978:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
597A:  BSF    F92.2
597C:  BTFSS  F80.2
597E:  BRA    5990
....................          {   
....................             delay_ms(30);visual=1; 
5980:  MOVLW  1E
5982:  MOVLB  5
5984:  MOVWF  x03
5986:  MOVLB  0
5988:  CALL   103E
598C:  MOVLB  4
598E:  BSF    x96.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5990:  BSF    F92.3
5992:  BTFSS  F80.3
5994:  BRA    59F0
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5996:  MOVLW  04
5998:  MOVLB  5
599A:  MOVWF  x02
599C:  MOVLW  AF
599E:  MOVWF  x03
59A0:  MOVLB  0
59A2:  CALL   103E
59A6:  MOVLB  5
59A8:  DECFSZ x02,F
59AA:  BRA    599C
59AC:  MOVLW  08
59AE:  MOVLB  4
59B0:  MOVWF  xA3
59B2:  MOVLB  5
59B4:  CLRF   x03
59B6:  MOVLB  0
59B8:  CALL   10A8
59BC:  MOVLW  01
59BE:  MOVLB  4
59C0:  MOVWF  xA8
59C2:  BSF    x96.4
....................             write_eeprom(8,Setpoint); 
59C4:  MOVLW  08
59C6:  MOVWF  FA9
59C8:  MOVFF  4A6,FA8
59CC:  BCF    FA6.6
59CE:  BCF    FA6.7
59D0:  BSF    FA6.2
59D2:  MOVF   FF2,W
59D4:  MOVWF  00
59D6:  BCF    FF2.7
59D8:  MOVLB  F
59DA:  MOVLW  55
59DC:  MOVWF  FA7
59DE:  MOVLW  AA
59E0:  MOVWF  FA7
59E2:  BSF    FA6.1
59E4:  BTFSC  FA6.1
59E6:  BRA    59E4
59E8:  BCF    FA6.2
59EA:  MOVF   00,W
59EC:  IORWF  FF2,F
59EE:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
59F0:  MOVF   xA3,W
59F2:  SUBLW  0E
59F4:  BTFSS  FD8.2
59F6:  BRA    5CE6
....................       if(Nivel>6) 
59F8:  MOVF   xB6,F
59FA:  BNZ   5A02
59FC:  MOVF   xB5,W
59FE:  SUBLW  06
5A00:  BC    5A08
....................          Nivel=6; 
5A02:  CLRF   xB6
5A04:  MOVLW  06
5A06:  MOVWF  xB5
....................           
....................       if(visual==1) 
5A08:  BTFSS  x96.4
5A0A:  BRA    5A6C
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
5A0C:  MOVLW  04
5A0E:  MOVWF  FEA
5A10:  MOVLW  E2
5A12:  MOVWF  FE9
5A14:  MOVFF  FF2,502
5A18:  BCF    FF2.7
5A1A:  MOVLW  00
5A1C:  MOVLB  0
5A1E:  CALL   0CF2
5A22:  TBLRD*-
5A24:  TBLRD*+
5A26:  MOVF   FF5,W
5A28:  MOVWF  FEE
5A2A:  IORLW  00
5A2C:  BNZ   5A24
5A2E:  MOVLB  5
5A30:  BTFSC  x02.7
5A32:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5A34:  MOVLW  04
5A36:  MOVWF  x03
5A38:  MOVLW  E2
5A3A:  MOVWF  x02
5A3C:  CLRF   x04
5A3E:  CLRF   x05
5A40:  MOVLW  01
5A42:  MOVWF  x06
5A44:  MOVLW  02
5A46:  MOVWF  x07
5A48:  MOVLB  0
5A4A:  CALL   16D6
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
5A4E:  MOVFF  4B5,503
5A52:  MOVLW  32
5A54:  MOVLB  5
5A56:  MOVWF  x04
5A58:  MOVLW  28
5A5A:  MOVWF  x05
5A5C:  CLRF   x06
5A5E:  MOVLW  02
5A60:  MOVWF  x07
5A62:  MOVLB  0
5A64:  CALL   24BE
....................           
....................          visual=0; 
5A68:  MOVLB  4
5A6A:  BCF    x96.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5A6C:  BSF    F92.0
5A6E:  BTFSS  F80.0
5A70:  BRA    5A92
....................          {   
....................             if(Nivel<6) 
5A72:  MOVF   xB6,F
5A74:  BNZ   5A92
5A76:  MOVF   xB5,W
5A78:  SUBLW  05
5A7A:  BNC   5A92
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
5A7C:  MOVLW  1E
5A7E:  MOVLB  5
5A80:  MOVWF  x03
5A82:  MOVLB  0
5A84:  CALL   103E
5A88:  MOVLB  4
5A8A:  INCF   xB5,F
5A8C:  BTFSC  FD8.2
5A8E:  INCF   xB6,F
5A90:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5A92:  BSF    F92.1
5A94:  BTFSS  F80.1
5A96:  BRA    5ABA
....................          {   
....................             if(Nivel>1) 
5A98:  MOVF   xB6,F
5A9A:  BNZ   5AA2
5A9C:  MOVF   xB5,W
5A9E:  SUBLW  01
5AA0:  BC    5ABA
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
5AA2:  MOVLW  1E
5AA4:  MOVLB  5
5AA6:  MOVWF  x03
5AA8:  MOVLB  0
5AAA:  CALL   103E
5AAE:  MOVLB  4
5AB0:  MOVF   xB5,W
5AB2:  BTFSC  FD8.2
5AB4:  DECF   xB6,F
5AB6:  DECF   xB5,F
5AB8:  BSF    x96.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
5ABA:  BTFSS  x96.5
5ABC:  BRA    5C76
....................          { 
....................             if(RIGHT)//Si oprime SET 
5ABE:  BSF    F92.2
5AC0:  BTFSS  F80.2
5AC2:  BRA    5C74
....................             {   
....................                write_eeprom(9,Nivel); 
5AC4:  MOVLW  09
5AC6:  MOVWF  FA9
5AC8:  MOVFF  4B5,FA8
5ACC:  BCF    FA6.6
5ACE:  BCF    FA6.7
5AD0:  BSF    FA6.2
5AD2:  MOVF   FF2,W
5AD4:  MOVWF  00
5AD6:  BCF    FF2.7
5AD8:  MOVLB  F
5ADA:  MOVLW  55
5ADC:  MOVWF  FA7
5ADE:  MOVLW  AA
5AE0:  MOVWF  FA7
5AE2:  BSF    FA6.1
5AE4:  BTFSC  FA6.1
5AE6:  BRA    5AE4
5AE8:  BCF    FA6.2
5AEA:  MOVF   00,W
5AEC:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5AEE:  MOVLW  14
5AF0:  MOVLB  4
5AF2:  MOVWF  xA3
5AF4:  MOVLW  0F
5AF6:  MOVLB  5
5AF8:  MOVWF  x14
5AFA:  MOVLW  12
5AFC:  MOVWF  x15
5AFE:  MOVLW  1E
5B00:  MOVWF  x16
5B02:  MOVLW  35
5B04:  MOVWF  x17
5B06:  CLRF   x18
5B08:  MOVLW  01
5B0A:  MOVWF  x19
5B0C:  MOVLB  0
5B0E:  CALL   1614
5B12:  MOVLB  4
5B14:  CLRF   xAA
5B16:  MOVLW  C0
5B18:  IORWF  FF2,F
5B1A:  MOVLB  5
5B1C:  CLRF   x03
5B1E:  MOVLB  0
5B20:  CALL   10A8
....................                strcpy(Menus.Letra,"Calentando"); 
5B24:  MOVLW  04
5B26:  MOVWF  FEA
5B28:  MOVLW  E2
5B2A:  MOVWF  FE9
5B2C:  MOVFF  FF2,502
5B30:  BCF    FF2.7
5B32:  MOVLW  00
5B34:  CALL   09B4
5B38:  TBLRD*-
5B3A:  TBLRD*+
5B3C:  MOVF   FF5,W
5B3E:  MOVWF  FEE
5B40:  IORLW  00
5B42:  BNZ   5B3A
5B44:  MOVLB  5
5B46:  BTFSC  x02.7
5B48:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
5B4A:  MOVLW  04
5B4C:  MOVWF  x03
5B4E:  MOVLW  E2
5B50:  MOVWF  x02
5B52:  CLRF   x04
5B54:  MOVLW  37
5B56:  MOVWF  x05
5B58:  MOVLW  02
5B5A:  MOVWF  x06
5B5C:  MOVLW  01
5B5E:  MOVWF  x07
5B60:  MOVLB  0
5B62:  CALL   16D6
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
5B66:  MOVLW  0F
5B68:  MOVLB  5
5B6A:  MOVWF  x14
5B6C:  MOVLW  12
5B6E:  MOVWF  x15
5B70:  MOVLW  1E
5B72:  MOVWF  x16
5B74:  MOVLW  35
5B76:  MOVWF  x17
5B78:  CLRF   x18
5B7A:  MOVLW  01
5B7C:  MOVWF  x19
5B7E:  MOVLB  0
5B80:  CALL   1614
....................                glcd_imagen(5); 
5B84:  MOVLW  05
5B86:  MOVLB  5
5B88:  MOVWF  x02
5B8A:  MOVLB  0
5B8C:  CALL   2112
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5B90:  MOVLW  04
5B92:  MOVWF  FEA
5B94:  MOVLW  E2
5B96:  MOVWF  FE9
5B98:  MOVFF  FF2,502
5B9C:  BCF    FF2.7
5B9E:  MOVLW  00
5BA0:  CALL   09DA
5BA4:  TBLRD*-
5BA6:  TBLRD*+
5BA8:  MOVF   FF5,W
5BAA:  MOVWF  FEE
5BAC:  IORLW  00
5BAE:  BNZ   5BA6
5BB0:  MOVLB  5
5BB2:  BTFSC  x02.7
5BB4:  BSF    FF2.7
5BB6:  MOVLW  04
5BB8:  MOVWF  x03
5BBA:  MOVLW  E2
5BBC:  MOVWF  x02
5BBE:  CLRF   x04
5BC0:  CLRF   x05
5BC2:  MOVLW  02
5BC4:  MOVWF  x06
5BC6:  MOVLW  01
5BC8:  MOVWF  x07
5BCA:  MOVLB  0
5BCC:  CALL   16D6
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5BD0:  MOVLW  04
5BD2:  MOVWF  FEA
5BD4:  MOVLW  E2
5BD6:  MOVWF  FE9
5BD8:  MOVFF  FF2,502
5BDC:  BCF    FF2.7
5BDE:  MOVLW  00
5BE0:  CALL   09FC
5BE4:  TBLRD*-
5BE6:  TBLRD*+
5BE8:  MOVF   FF5,W
5BEA:  MOVWF  FEE
5BEC:  IORLW  00
5BEE:  BNZ   5BE6
5BF0:  MOVLB  5
5BF2:  BTFSC  x02.7
5BF4:  BSF    FF2.7
5BF6:  MOVLW  04
5BF8:  MOVWF  x03
5BFA:  MOVLW  E2
5BFC:  MOVWF  x02
5BFE:  CLRF   x04
5C00:  MOVLW  08
5C02:  MOVWF  x05
5C04:  MOVLW  02
5C06:  MOVWF  x06
5C08:  MOVLW  01
5C0A:  MOVWF  x07
5C0C:  MOVLB  0
5C0E:  CALL   16D6
....................                glcd_circle(95,40,2,NO,ON); 
5C12:  MOVLW  5F
5C14:  MOVLB  5
5C16:  MOVWF  x02
5C18:  MOVLW  28
5C1A:  MOVWF  x03
5C1C:  MOVLW  02
5C1E:  MOVWF  x04
5C20:  CLRF   x05
5C22:  MOVLW  01
5C24:  MOVWF  x06
5C26:  MOVLB  0
5C28:  CALL   220E
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5C2C:  MOVLW  04
5C2E:  MOVWF  FEA
5C30:  MOVLW  E2
5C32:  MOVWF  FE9
5C34:  MOVFF  FF2,502
5C38:  BCF    FF2.7
5C3A:  MOVLW  00
5C3C:  CALL   0A1E
5C40:  TBLRD*-
5C42:  TBLRD*+
5C44:  MOVF   FF5,W
5C46:  MOVWF  FEE
5C48:  IORLW  00
5C4A:  BNZ   5C42
5C4C:  MOVLB  5
5C4E:  BTFSC  x02.7
5C50:  BSF    FF2.7
5C52:  MOVLW  04
5C54:  MOVWF  x03
5C56:  MOVLW  E2
5C58:  MOVWF  x02
5C5A:  MOVLW  66
5C5C:  MOVWF  x04
5C5E:  MOVLW  28
5C60:  MOVWF  x05
5C62:  MOVLW  02
5C64:  MOVWF  x06
5C66:  MOVWF  x07
5C68:  MOVLB  0
5C6A:  CALL   16D6
....................                MuestraTiemposProgramados(); 
5C6E:  CALL   260E
5C72:  MOVLB  4
....................             }       
....................          } 
....................          else 
5C74:  BRA    5CE6
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5C76:  BSF    F92.3
5C78:  BTFSS  F80.3
5C7A:  BRA    5CE6
....................             { 
....................                if(Nivel<6) 
5C7C:  MOVF   xB6,F
5C7E:  BNZ   5C8A
5C80:  MOVF   xB5,W
5C82:  SUBLW  05
5C84:  BNC   5C8A
....................                { 
....................                   desfoguelento=1; 
5C86:  BSF    x96.5
....................                } 
....................                else 
5C88:  BRA    5C8C
....................                { 
....................                   desfoguelento=0; 
5C8A:  BCF    x96.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5C8C:  MOVLW  04
5C8E:  MOVLB  5
5C90:  MOVWF  x02
5C92:  MOVLW  AF
5C94:  MOVWF  x03
5C96:  MOVLB  0
5C98:  CALL   103E
5C9C:  MOVLB  5
5C9E:  DECFSZ x02,F
5CA0:  BRA    5C92
5CA2:  MOVLW  08
5CA4:  MOVLB  4
5CA6:  MOVWF  xA3
5CA8:  MOVLB  5
5CAA:  CLRF   x03
5CAC:  MOVLB  0
5CAE:  CALL   10A8
5CB2:  MOVLW  01
5CB4:  MOVLB  4
5CB6:  MOVWF  xA8
5CB8:  BSF    x96.4
....................                write_eeprom(9,Nivel); 
5CBA:  MOVLW  09
5CBC:  MOVWF  FA9
5CBE:  MOVFF  4B5,FA8
5CC2:  BCF    FA6.6
5CC4:  BCF    FA6.7
5CC6:  BSF    FA6.2
5CC8:  MOVF   FF2,W
5CCA:  MOVWF  00
5CCC:  BCF    FF2.7
5CCE:  MOVLB  F
5CD0:  MOVLW  55
5CD2:  MOVWF  FA7
5CD4:  MOVLW  AA
5CD6:  MOVWF  FA7
5CD8:  BSF    FA6.1
5CDA:  BTFSC  FA6.1
5CDC:  BRA    5CDA
5CDE:  BCF    FA6.2
5CE0:  MOVF   00,W
5CE2:  IORWF  FF2,F
5CE4:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5CE6:  MOVF   xA3,W
5CE8:  SUBLW  0F
5CEA:  BTFSS  FD8.2
5CEC:  BRA    6024
....................        
....................       if(visual==1) 
5CEE:  BTFSS  x96.4
5CF0:  BRA    5E56
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5CF2:  MOVLW  04
5CF4:  MOVWF  FEA
5CF6:  MOVLW  E2
5CF8:  MOVWF  FE9
5CFA:  MOVFF  FF2,502
5CFE:  BCF    FF2.7
5D00:  MOVLW  00
5D02:  MOVLB  0
5D04:  CALL   0C62
5D08:  TBLRD*-
5D0A:  TBLRD*+
5D0C:  MOVF   FF5,W
5D0E:  MOVWF  FEE
5D10:  IORLW  00
5D12:  BNZ   5D0A
5D14:  MOVLB  5
5D16:  BTFSC  x02.7
5D18:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5D1A:  MOVLW  04
5D1C:  MOVWF  x03
5D1E:  MOVLW  E2
5D20:  MOVWF  x02
5D22:  CLRF   x04
5D24:  CLRF   x05
5D26:  MOVLW  01
5D28:  MOVWF  x06
5D2A:  MOVLW  02
5D2C:  MOVWF  x07
5D2E:  MOVLB  0
5D30:  CALL   16D6
....................           
....................          if(Opcion==2) 
5D34:  MOVLB  4
5D36:  MOVF   xA8,W
5D38:  SUBLW  02
5D3A:  BNZ   5DC6
....................          {strcpy(Menus.Letra,"SI"); 
5D3C:  MOVLW  04
5D3E:  MOVWF  FEA
5D40:  MOVLW  E2
5D42:  MOVWF  FE9
5D44:  MOVFF  FF2,502
5D48:  BCF    FF2.7
5D4A:  MOVLW  00
5D4C:  MOVLB  0
5D4E:  CALL   0D16
5D52:  TBLRD*-
5D54:  TBLRD*+
5D56:  MOVF   FF5,W
5D58:  MOVWF  FEE
5D5A:  IORLW  00
5D5C:  BNZ   5D54
5D5E:  MOVLB  5
5D60:  BTFSC  x02.7
5D62:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5D64:  MOVLW  04
5D66:  MOVWF  x03
5D68:  MOVLW  E2
5D6A:  MOVWF  x02
5D6C:  MOVLW  32
5D6E:  MOVWF  x04
5D70:  MOVLW  19
5D72:  MOVWF  x05
5D74:  MOVLW  01
5D76:  MOVWF  x06
5D78:  MOVLW  02
5D7A:  MOVWF  x07
5D7C:  MOVLB  0
5D7E:  CALL   16D6
....................          strcpy(Menus.Letra,"NO"); 
5D82:  MOVLW  04
5D84:  MOVWF  FEA
5D86:  MOVLW  E2
5D88:  MOVWF  FE9
5D8A:  MOVFF  FF2,502
5D8E:  BCF    FF2.7
5D90:  MOVLW  00
5D92:  CALL   0D34
5D96:  TBLRD*-
5D98:  TBLRD*+
5D9A:  MOVF   FF5,W
5D9C:  MOVWF  FEE
5D9E:  IORLW  00
5DA0:  BNZ   5D98
5DA2:  MOVLB  5
5DA4:  BTFSC  x02.7
5DA6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5DA8:  MOVLW  04
5DAA:  MOVWF  x03
5DAC:  MOVLW  E2
5DAE:  MOVWF  x02
5DB0:  MOVLW  32
5DB2:  MOVWF  x04
5DB4:  MOVLW  2D
5DB6:  MOVWF  x05
5DB8:  CLRF   x06
5DBA:  MOVLW  02
5DBC:  MOVWF  x07
5DBE:  MOVLB  0
5DC0:  CALL   16D6
5DC4:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
5DC6:  DECFSZ xA8,W
5DC8:  BRA    5E54
....................          {strcpy(Menus.Letra,"SI"); 
5DCA:  MOVLW  04
5DCC:  MOVWF  FEA
5DCE:  MOVLW  E2
5DD0:  MOVWF  FE9
5DD2:  MOVFF  FF2,502
5DD6:  BCF    FF2.7
5DD8:  MOVLW  00
5DDA:  MOVLB  0
5DDC:  CALL   0D16
5DE0:  TBLRD*-
5DE2:  TBLRD*+
5DE4:  MOVF   FF5,W
5DE6:  MOVWF  FEE
5DE8:  IORLW  00
5DEA:  BNZ   5DE2
5DEC:  MOVLB  5
5DEE:  BTFSC  x02.7
5DF0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5DF2:  MOVLW  04
5DF4:  MOVWF  x03
5DF6:  MOVLW  E2
5DF8:  MOVWF  x02
5DFA:  MOVLW  32
5DFC:  MOVWF  x04
5DFE:  MOVLW  19
5E00:  MOVWF  x05
5E02:  CLRF   x06
5E04:  MOVLW  02
5E06:  MOVWF  x07
5E08:  MOVLB  0
5E0A:  CALL   16D6
....................          strcpy(Menus.Letra,"NO"); 
5E0E:  MOVLW  04
5E10:  MOVWF  FEA
5E12:  MOVLW  E2
5E14:  MOVWF  FE9
5E16:  MOVFF  FF2,502
5E1A:  BCF    FF2.7
5E1C:  MOVLW  00
5E1E:  CALL   0D34
5E22:  TBLRD*-
5E24:  TBLRD*+
5E26:  MOVF   FF5,W
5E28:  MOVWF  FEE
5E2A:  IORLW  00
5E2C:  BNZ   5E24
5E2E:  MOVLB  5
5E30:  BTFSC  x02.7
5E32:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5E34:  MOVLW  04
5E36:  MOVWF  x03
5E38:  MOVLW  E2
5E3A:  MOVWF  x02
5E3C:  MOVLW  32
5E3E:  MOVWF  x04
5E40:  MOVLW  2D
5E42:  MOVWF  x05
5E44:  MOVLW  01
5E46:  MOVWF  x06
5E48:  MOVLW  02
5E4A:  MOVWF  x07
5E4C:  MOVLB  0
5E4E:  CALL   16D6
5E52:  MOVLB  4
....................          } 
....................          visual=0; 
5E54:  BCF    x96.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5E56:  BSF    F92.0
5E58:  BTFSS  F80.0
5E5A:  BRA    5E66
....................       { 
....................          if(Opcion<2) 
5E5C:  MOVF   xA8,W
5E5E:  SUBLW  01
5E60:  BNC   5E64
....................          { 
....................             Opcion++; 
5E62:  INCF   xA8,F
....................          } 
....................          visual=1; 
5E64:  BSF    x96.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5E66:  BSF    F92.1
5E68:  BTFSS  F80.1
5E6A:  BRA    5E76
....................       {   
....................          if(Opcion>1) 
5E6C:  MOVF   xA8,W
5E6E:  SUBLW  01
5E70:  BC    5E74
....................          { 
....................             Opcion--; 
5E72:  DECF   xA8,F
....................          }   
....................          visual=1; 
5E74:  BSF    x96.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5E76:  BSF    F92.2
5E78:  BTFSS  F80.2
5E7A:  BRA    5FF0
....................       {   
....................          if(Opcion==2) 
5E7C:  MOVF   xA8,W
5E7E:  SUBLW  02
5E80:  BTFSS  FD8.2
5E82:  BRA    5FC2
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5E84:  MOVLW  14
5E86:  MOVWF  xA3
5E88:  MOVLW  0F
5E8A:  MOVLB  5
5E8C:  MOVWF  x14
5E8E:  MOVLW  12
5E90:  MOVWF  x15
5E92:  MOVLW  1E
5E94:  MOVWF  x16
5E96:  MOVLW  35
5E98:  MOVWF  x17
5E9A:  CLRF   x18
5E9C:  MOVLW  01
5E9E:  MOVWF  x19
5EA0:  MOVLB  0
5EA2:  CALL   1614
5EA6:  MOVLB  4
5EA8:  CLRF   xAA
5EAA:  MOVLW  C0
5EAC:  IORWF  FF2,F
5EAE:  MOVLB  5
5EB0:  CLRF   x03
5EB2:  MOVLB  0
5EB4:  CALL   10A8
....................             strcpy(Menus.Letra,"Calentando"); 
5EB8:  MOVLW  04
5EBA:  MOVWF  FEA
5EBC:  MOVLW  E2
5EBE:  MOVWF  FE9
5EC0:  MOVFF  FF2,502
5EC4:  BCF    FF2.7
5EC6:  MOVLW  00
5EC8:  CALL   09B4
5ECC:  TBLRD*-
5ECE:  TBLRD*+
5ED0:  MOVF   FF5,W
5ED2:  MOVWF  FEE
5ED4:  IORLW  00
5ED6:  BNZ   5ECE
5ED8:  MOVLB  5
5EDA:  BTFSC  x02.7
5EDC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5EDE:  MOVLW  04
5EE0:  MOVWF  x03
5EE2:  MOVLW  E2
5EE4:  MOVWF  x02
5EE6:  CLRF   x04
5EE8:  MOVLW  37
5EEA:  MOVWF  x05
5EEC:  MOVLW  02
5EEE:  MOVWF  x06
5EF0:  MOVLW  01
5EF2:  MOVWF  x07
5EF4:  MOVLB  0
5EF6:  CALL   16D6
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5EFA:  MOVLW  0F
5EFC:  MOVLB  5
5EFE:  MOVWF  x14
5F00:  MOVLW  12
5F02:  MOVWF  x15
5F04:  MOVLW  1E
5F06:  MOVWF  x16
5F08:  MOVLW  35
5F0A:  MOVWF  x17
5F0C:  CLRF   x18
5F0E:  MOVLW  01
5F10:  MOVWF  x19
5F12:  MOVLB  0
5F14:  CALL   1614
....................             glcd_imagen(5); 
5F18:  MOVLW  05
5F1A:  MOVLB  5
5F1C:  MOVWF  x02
5F1E:  MOVLB  0
5F20:  CALL   2112
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5F24:  MOVLW  04
5F26:  MOVWF  FEA
5F28:  MOVLW  E2
5F2A:  MOVWF  FE9
5F2C:  MOVFF  FF2,502
5F30:  BCF    FF2.7
5F32:  MOVLW  00
5F34:  CALL   09DA
5F38:  TBLRD*-
5F3A:  TBLRD*+
5F3C:  MOVF   FF5,W
5F3E:  MOVWF  FEE
5F40:  IORLW  00
5F42:  BNZ   5F3A
5F44:  MOVLB  5
5F46:  BTFSC  x02.7
5F48:  BSF    FF2.7
5F4A:  MOVLW  04
5F4C:  MOVWF  x03
5F4E:  MOVLW  E2
5F50:  MOVWF  x02
5F52:  CLRF   x04
5F54:  CLRF   x05
5F56:  MOVLW  02
5F58:  MOVWF  x06
5F5A:  MOVLW  01
5F5C:  MOVWF  x07
5F5E:  MOVLB  0
5F60:  CALL   16D6
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5F64:  MOVLW  04
5F66:  MOVWF  FEA
5F68:  MOVLW  E2
5F6A:  MOVWF  FE9
5F6C:  MOVFF  FF2,502
5F70:  BCF    FF2.7
5F72:  MOVLW  00
5F74:  CALL   09FC
5F78:  TBLRD*-
5F7A:  TBLRD*+
5F7C:  MOVF   FF5,W
5F7E:  MOVWF  FEE
5F80:  IORLW  00
5F82:  BNZ   5F7A
5F84:  MOVLB  5
5F86:  BTFSC  x02.7
5F88:  BSF    FF2.7
5F8A:  MOVLW  04
5F8C:  MOVWF  x03
5F8E:  MOVLW  E2
5F90:  MOVWF  x02
5F92:  CLRF   x04
5F94:  MOVLW  08
5F96:  MOVWF  x05
5F98:  MOVLW  02
5F9A:  MOVWF  x06
5F9C:  MOVLW  01
5F9E:  MOVWF  x07
5FA0:  MOVLB  0
5FA2:  CALL   16D6
....................             MuestraTiemposProgramados(); 
5FA6:  CALL   260E
....................             if(Nivel<6) 
5FAA:  MOVLB  4
5FAC:  MOVF   xB6,F
5FAE:  BNZ   5FBA
5FB0:  MOVF   xB5,W
5FB2:  SUBLW  05
5FB4:  BNC   5FBA
....................                { 
....................                   desfoguelento=1; 
5FB6:  BSF    x96.5
....................                } 
....................                else 
5FB8:  BRA    5FBC
....................                { 
....................                   desfoguelento=0; 
5FBA:  BCF    x96.5
....................                } 
....................                EVTrampa=10; 
5FBC:  MOVLW  0A
5FBE:  MOVWF  x9C
....................          } 
....................          else 
5FC0:  BRA    5FF0
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5FC2:  MOVLW  04
5FC4:  MOVLB  5
5FC6:  MOVWF  x02
5FC8:  MOVLW  AF
5FCA:  MOVWF  x03
5FCC:  MOVLB  0
5FCE:  CALL   103E
5FD2:  MOVLB  5
5FD4:  DECFSZ x02,F
5FD6:  BRA    5FC8
5FD8:  MOVLW  08
5FDA:  MOVLB  4
5FDC:  MOVWF  xA3
5FDE:  MOVLB  5
5FE0:  CLRF   x03
5FE2:  MOVLB  0
5FE4:  CALL   10A8
5FE8:  MOVLW  01
5FEA:  MOVLB  4
5FEC:  MOVWF  xA8
5FEE:  BSF    x96.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5FF0:  BSF    F92.3
5FF2:  BTFSS  F80.3
5FF4:  BRA    6024
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5FF6:  MOVLW  04
5FF8:  MOVLB  5
5FFA:  MOVWF  x02
5FFC:  MOVLW  AF
5FFE:  MOVWF  x03
6000:  MOVLB  0
6002:  CALL   103E
6006:  MOVLB  5
6008:  DECFSZ x02,F
600A:  BRA    5FFC
600C:  MOVLW  08
600E:  MOVLB  4
6010:  MOVWF  xA3
6012:  MOVLB  5
6014:  CLRF   x03
6016:  MOVLB  0
6018:  CALL   10A8
601C:  MOVLW  01
601E:  MOVLB  4
6020:  MOVWF  xA8
6022:  BSF    x96.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
6024:  MOVF   xA3,W
6026:  SUBLW  14
6028:  BTFSS  FD8.2
602A:  GOTO   6C50
....................     
....................    Lectura_Esclavos(); 
602E:  MOVLB  0
6030:  CALL   1F58
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
6034:  MOVLB  4
6036:  BTFSS  x97.1
6038:  BRA    61BA
603A:  DECFSZ x8D,W
603C:  BRA    61BA
603E:  DECFSZ x8E,W
6040:  BRA    61BA
6042:  MOVF   xA9,W
6044:  SUBLW  01
6046:  BTFSS  FD8.0
6048:  BRA    61BA
604A:  MOVF   x92,F
604C:  BTFSS  FD8.2
604E:  BRA    61BA
6050:  MOVF   x93,F
6052:  BTFSS  FD8.2
6054:  BRA    61BA
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
6056:  MOVF   xA9,F
6058:  BNZ   60F2
605A:  BTFSC  x97.2
605C:  BRA    60F2
....................       { 
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
605E:  MOVLW  0F
6060:  MOVLB  5
6062:  MOVWF  x14
6064:  MOVLW  12
6066:  MOVWF  x15
6068:  MOVLW  1E
606A:  MOVWF  x16
606C:  MOVLW  35
606E:  MOVWF  x17
6070:  CLRF   x18
6072:  MOVLW  01
6074:  MOVWF  x19
6076:  MOVLB  0
6078:  CALL   1614
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
607C:  MOVLB  5
607E:  CLRF   x14
6080:  MOVLW  37
6082:  MOVWF  x15
6084:  MOVLW  7F
6086:  MOVWF  x16
6088:  MOVLW  3F
608A:  MOVWF  x17
608C:  MOVLW  01
608E:  MOVWF  x18
6090:  CLRF   x19
6092:  MOVLB  0
6094:  CALL   1614
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
6098:  MOVLW  04
609A:  MOVWF  FEA
609C:  MOVLW  E2
609E:  MOVWF  FE9
60A0:  MOVFF  FF2,502
60A4:  BCF    FF2.7
60A6:  MOVLW  00
60A8:  CALL   09B4
60AC:  TBLRD*-
60AE:  TBLRD*+
60B0:  MOVF   FF5,W
60B2:  MOVWF  FEE
60B4:  IORLW  00
60B6:  BNZ   60AE
60B8:  MOVLB  5
60BA:  BTFSC  x02.7
60BC:  BSF    FF2.7
60BE:  MOVLW  04
60C0:  MOVWF  x03
60C2:  MOVLW  E2
60C4:  MOVWF  x02
60C6:  CLRF   x04
60C8:  MOVLW  37
60CA:  MOVWF  x05
60CC:  MOVLW  02
60CE:  MOVWF  x06
60D0:  MOVLW  01
60D2:  MOVWF  x07
60D4:  MOVLB  0
60D6:  CALL   16D6
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
60DA:  MOVLB  4
60DC:  BSF    x97.2
60DE:  BCF    x97.3
60E0:  BCF    x97.4
60E2:  BCF    x97.5
60E4:  BCF    x97.6
60E6:  BCF    x97.7
60E8:  BCF    x98.0
60EA:  BCF    x98.1
....................          EVDesfogue=0;Control=1; 
60EC:  CLRF   x9A
60EE:  MOVLW  01
60F0:  MOVWF  xA1
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
60F2:  DECFSZ xA9,W
60F4:  BRA    6170
60F6:  BTFSC  x97.5
60F8:  BRA    6170
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
60FA:  MOVLB  5
60FC:  CLRF   x14
60FE:  MOVLW  37
6100:  MOVWF  x15
6102:  MOVLW  7F
6104:  MOVWF  x16
6106:  MOVLW  3F
6108:  MOVWF  x17
610A:  MOVLW  01
610C:  MOVWF  x18
610E:  CLRF   x19
6110:  MOVLB  0
6112:  CALL   1614
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
6116:  MOVLW  04
6118:  MOVWF  FEA
611A:  MOVLW  E2
611C:  MOVWF  FE9
611E:  MOVFF  FF2,502
6122:  BCF    FF2.7
6124:  MOVLW  00
6126:  CALL   0D52
612A:  TBLRD*-
612C:  TBLRD*+
612E:  MOVF   FF5,W
6130:  MOVWF  FEE
6132:  IORLW  00
6134:  BNZ   612C
6136:  MOVLB  5
6138:  BTFSC  x02.7
613A:  BSF    FF2.7
613C:  MOVLW  04
613E:  MOVWF  x03
6140:  MOVLW  E2
6142:  MOVWF  x02
6144:  CLRF   x04
6146:  MOVLW  37
6148:  MOVWF  x05
614A:  MOVLW  02
614C:  MOVWF  x06
614E:  MOVLW  01
6150:  MOVWF  x07
6152:  MOVLB  0
6154:  CALL   16D6
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6158:  MOVLB  4
615A:  BCF    x97.2
615C:  BCF    x97.3
615E:  BCF    x97.4
6160:  BSF    x97.5
6162:  BCF    x97.6
6164:  BCF    x97.7
6166:  BCF    x98.0
6168:  BCF    x98.1
....................          EVDesfogue=0;Control=1; 
616A:  CLRF   x9A
616C:  MOVLW  01
616E:  MOVWF  xA1
....................       } 
....................       if(ADC_Pt100>=100 && Presostato<5) 
6170:  MOVLB  5
6172:  CLRF   x05
6174:  CLRF   x04
6176:  MOVLW  48
6178:  MOVWF  x03
617A:  MOVLW  85
617C:  MOVWF  x02
617E:  MOVFF  4BE,509
6182:  MOVFF  4BD,508
6186:  MOVFF  4BC,507
618A:  MOVFF  4BB,506
618E:  MOVLB  0
6190:  CALL   274E
6194:  BC    6198
6196:  BNZ   61AA
6198:  MOVLB  4
619A:  MOVF   x91,W
619C:  SUBLW  04
619E:  BTFSC  FD8.0
61A0:  BRA    61A6
61A2:  MOVLB  0
61A4:  BRA    61AA
....................          Alarma2=5; 
61A6:  MOVLW  05
61A8:  MOVWF  x94
....................           
....................       Control=1; 
61AA:  MOVLW  01
61AC:  MOVLB  4
61AE:  MOVWF  xA1
....................       Envio_Esclavos(); 
61B0:  MOVLB  0
61B2:  CALL   20B2
....................    } 
....................    else 
61B6:  BRA    6682
61B8:  MOVLB  4
....................    { 
....................       Control=0; 
61BA:  CLRF   xA1
....................       if(Alarma>0 || Alarma2>0) 
61BC:  MOVF   x92,F
61BE:  BNZ   61C6
61C0:  MOVF   x94,F
61C2:  BTFSC  FD8.2
61C4:  BRA    632C
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
61C6:  DECFSZ x92,W
61C8:  BRA    6240
....................          { 
....................             if(disp_Alarma==0) 
61CA:  BTFSC  x98.3
61CC:  BRA    6240
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
61CE:  MOVLB  5
61D0:  CLRF   x14
61D2:  MOVLW  37
61D4:  MOVWF  x15
61D6:  MOVLW  7F
61D8:  MOVWF  x16
61DA:  MOVLW  3F
61DC:  MOVWF  x17
61DE:  MOVLW  01
61E0:  MOVWF  x18
61E2:  CLRF   x19
61E4:  MOVLB  0
61E6:  CALL   1614
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
61EA:  MOVLW  04
61EC:  MOVWF  FEA
61EE:  MOVLW  E2
61F0:  MOVWF  FE9
61F2:  MOVFF  FF2,502
61F6:  BCF    FF2.7
61F8:  MOVLW  00
61FA:  CALL   0D7A
61FE:  TBLRD*-
6200:  TBLRD*+
6202:  MOVF   FF5,W
6204:  MOVWF  FEE
6206:  IORLW  00
6208:  BNZ   6200
620A:  MOVLB  5
620C:  BTFSC  x02.7
620E:  BSF    FF2.7
6210:  MOVLW  04
6212:  MOVWF  x03
6214:  MOVLW  E2
6216:  MOVWF  x02
6218:  CLRF   x04
621A:  MOVLW  37
621C:  MOVWF  x05
621E:  MOVLW  02
6220:  MOVWF  x06
6222:  MOVLW  01
6224:  MOVWF  x07
6226:  MOVLB  0
6228:  CALL   16D6
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
622C:  MOVLB  4
622E:  BCF    x97.2
6230:  BCF    x97.3
6232:  BCF    x97.4
6234:  BCF    x97.5
6236:  BCF    x97.6
6238:  BCF    x97.7
623A:  BCF    x98.0
623C:  BCF    x98.1
....................                disp_Alarma=1; 
623E:  BSF    x98.3
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
6240:  MOVF   x92,W
6242:  SUBLW  02
6244:  BNZ   62C0
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
6246:  CLRF   xA9
6248:  CLRF   xAA
....................             if(disp_Alarma==0) 
624A:  BTFSC  x98.3
624C:  BRA    62C0
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
624E:  MOVLB  5
6250:  CLRF   x14
6252:  MOVLW  37
6254:  MOVWF  x15
6256:  MOVLW  7F
6258:  MOVWF  x16
625A:  MOVLW  3F
625C:  MOVWF  x17
625E:  MOVLW  01
6260:  MOVWF  x18
6262:  CLRF   x19
6264:  MOVLB  0
6266:  CALL   1614
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
626A:  MOVLW  04
626C:  MOVWF  FEA
626E:  MOVLW  E2
6270:  MOVWF  FE9
6272:  MOVFF  FF2,502
6276:  BCF    FF2.7
6278:  MOVLW  00
627A:  CALL   0DA0
627E:  TBLRD*-
6280:  TBLRD*+
6282:  MOVF   FF5,W
6284:  MOVWF  FEE
6286:  IORLW  00
6288:  BNZ   6280
628A:  MOVLB  5
628C:  BTFSC  x02.7
628E:  BSF    FF2.7
6290:  MOVLW  04
6292:  MOVWF  x03
6294:  MOVLW  E2
6296:  MOVWF  x02
6298:  CLRF   x04
629A:  MOVLW  37
629C:  MOVWF  x05
629E:  MOVLW  02
62A0:  MOVWF  x06
62A2:  MOVLW  01
62A4:  MOVWF  x07
62A6:  MOVLB  0
62A8:  CALL   16D6
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
62AC:  MOVLB  4
62AE:  BCF    x97.2
62B0:  BCF    x97.3
62B2:  BCF    x97.4
62B4:  BCF    x97.5
62B6:  BCF    x97.6
62B8:  BCF    x97.7
62BA:  BCF    x98.0
62BC:  BCF    x98.1
....................                disp_Alarma=1; 
62BE:  BSF    x98.3
....................             } 
....................          } 
....................           
....................          if(Alarma2==5) // Alarma de Error por falta de agua, por lo cual no genera Presión. 
62C0:  MOVF   x94,W
62C2:  SUBLW  05
62C4:  BNZ   632A
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
62C6:  CLRF   xA9
62C8:  CLRF   xAA
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
62CA:  MOVLB  5
62CC:  CLRF   x14
62CE:  MOVLW  37
62D0:  MOVWF  x15
62D2:  MOVLW  7F
62D4:  MOVWF  x16
62D6:  MOVLW  3F
62D8:  MOVWF  x17
62DA:  MOVLW  01
62DC:  MOVWF  x18
62DE:  CLRF   x19
62E0:  MOVLB  0
62E2:  CALL   1614
....................             strcpy(Menus.Letra,"Error:ET03");displayMenu(Menus.Letra,0,55,2,1); 
62E6:  MOVLW  04
62E8:  MOVWF  FEA
62EA:  MOVLW  E2
62EC:  MOVWF  FE9
62EE:  MOVFF  FF2,502
62F2:  BCF    FF2.7
62F4:  MOVLW  00
62F6:  CALL   0DC6
62FA:  TBLRD*-
62FC:  TBLRD*+
62FE:  MOVF   FF5,W
6300:  MOVWF  FEE
6302:  IORLW  00
6304:  BNZ   62FC
6306:  MOVLB  5
6308:  BTFSC  x02.7
630A:  BSF    FF2.7
630C:  MOVLW  04
630E:  MOVWF  x03
6310:  MOVLW  E2
6312:  MOVWF  x02
6314:  CLRF   x04
6316:  MOVLW  37
6318:  MOVWF  x05
631A:  MOVLW  02
631C:  MOVWF  x06
631E:  MOVLW  01
6320:  MOVWF  x07
6322:  MOVLB  0
6324:  CALL   16D6
6328:  MOVLB  4
....................          } 
....................       } 
....................       else 
632A:  BRA    667C
....................       {  
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
632C:  MOVF   xA9,W
632E:  SUBLW  02
6330:  BTFSS  FD8.2
6332:  BRA    64F4
6334:  BTFSS  x97.1
6336:  BRA    64F4
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
6338:  BTFSS  x96.5
633A:  BRA    641A
....................             { 
....................                if(z==0) 
633C:  BTFSC  x98.2
633E:  BRA    6390
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
6340:  MOVLB  5
6342:  CLRF   x02
6344:  MOVLW  5A
6346:  MOVWF  x03
6348:  MOVLW  38
634A:  MOVWF  x04
634C:  MOVLB  0
634E:  CALL   27C8
6352:  MOVLW  19
6354:  MOVLB  5
6356:  MOVWF  x14
6358:  MOVLW  12
635A:  MOVWF  x15
635C:  MOVLW  3C
635E:  MOVWF  x16
6360:  MOVLW  1A
6362:  MOVWF  x17
6364:  CLRF   x18
6366:  CLRF   x19
6368:  MOVLB  0
636A:  CALL   1614
636E:  MOVLW  37
6370:  MOVLB  5
6372:  MOVWF  x14
6374:  MOVLW  12
6376:  MOVWF  x15
6378:  MOVLW  44
637A:  MOVWF  x16
637C:  MOVLW  35
637E:  MOVWF  x17
6380:  CLRF   x18
6382:  MOVLW  01
6384:  MOVWF  x19
6386:  MOVLB  0
6388:  CALL   1614
638C:  MOVLB  4
638E:  BSF    x98.2
....................                } 
....................                if(disp_Despresurizando==0) 
6390:  BTFSC  x97.6
6392:  BRA    6412
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6394:  MOVLB  5
6396:  CLRF   x14
6398:  MOVLW  37
639A:  MOVWF  x15
639C:  MOVLW  7F
639E:  MOVWF  x16
63A0:  MOVLW  3F
63A2:  MOVWF  x17
63A4:  MOVLW  01
63A6:  MOVWF  x18
63A8:  CLRF   x19
63AA:  MOVLB  0
63AC:  CALL   1614
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
63B0:  MOVLW  04
63B2:  MOVWF  FEA
63B4:  MOVLW  E2
63B6:  MOVWF  FE9
63B8:  MOVFF  FF2,502
63BC:  BCF    FF2.7
63BE:  MOVLW  00
63C0:  CALL   0DEC
63C4:  TBLRD*-
63C6:  TBLRD*+
63C8:  MOVF   FF5,W
63CA:  MOVWF  FEE
63CC:  IORLW  00
63CE:  BNZ   63C6
63D0:  MOVLB  5
63D2:  BTFSC  x02.7
63D4:  BSF    FF2.7
63D6:  MOVLW  04
63D8:  MOVWF  x03
63DA:  MOVLW  E2
63DC:  MOVWF  x02
63DE:  CLRF   x04
63E0:  MOVLW  37
63E2:  MOVWF  x05
63E4:  MOVLW  02
63E6:  MOVWF  x06
63E8:  MOVLW  01
63EA:  MOVWF  x07
63EC:  MOVLB  0
63EE:  CALL   16D6
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
63F2:  MOVLB  4
63F4:  BCF    x97.2
63F6:  BCF    x97.3
63F8:  BCF    x97.4
63FA:  BCF    x97.5
63FC:  BSF    x97.6
63FE:  BCF    x97.7
6400:  BCF    x98.0
6402:  BCF    x98.1
....................                   glcd_imagen(5); 
6404:  MOVLW  05
6406:  MOVLB  5
6408:  MOVWF  x02
640A:  MOVLB  0
640C:  CALL   2112
6410:  MOVLB  4
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
6412:  MOVLW  02
6414:  MOVWF  xAB
6416:  MOVWF  xAA
....................             } 
....................             else 
6418:  BRA    64F4
....................             { 
....................                if(z==0) 
641A:  BTFSC  x98.2
641C:  BRA    646E
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
641E:  MOVLB  5
6420:  CLRF   x02
6422:  MOVLW  5A
6424:  MOVWF  x03
6426:  MOVLW  38
6428:  MOVWF  x04
642A:  MOVLB  0
642C:  CALL   27C8
6430:  MOVLW  19
6432:  MOVLB  5
6434:  MOVWF  x14
6436:  MOVLW  12
6438:  MOVWF  x15
643A:  MOVLW  3C
643C:  MOVWF  x16
643E:  MOVLW  1A
6440:  MOVWF  x17
6442:  CLRF   x18
6444:  CLRF   x19
6446:  MOVLB  0
6448:  CALL   1614
644C:  MOVLW  37
644E:  MOVLB  5
6450:  MOVWF  x14
6452:  MOVLW  12
6454:  MOVWF  x15
6456:  MOVLW  44
6458:  MOVWF  x16
645A:  MOVLW  35
645C:  MOVWF  x17
645E:  CLRF   x18
6460:  MOVLW  01
6462:  MOVWF  x19
6464:  MOVLB  0
6466:  CALL   1614
646A:  MOVLB  4
646C:  BSF    x98.2
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
646E:  BTFSC  x97.4
6470:  BRA    64F0
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6472:  MOVLB  5
6474:  CLRF   x14
6476:  MOVLW  37
6478:  MOVWF  x15
647A:  MOVLW  7F
647C:  MOVWF  x16
647E:  MOVLW  3F
6480:  MOVWF  x17
6482:  MOVLW  01
6484:  MOVWF  x18
6486:  CLRF   x19
6488:  MOVLB  0
648A:  CALL   1614
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
648E:  MOVLW  04
6490:  MOVWF  FEA
6492:  MOVLW  E2
6494:  MOVWF  FE9
6496:  MOVFF  FF2,502
649A:  BCF    FF2.7
649C:  MOVLW  00
649E:  CALL   0E16
64A2:  TBLRD*-
64A4:  TBLRD*+
64A6:  MOVF   FF5,W
64A8:  MOVWF  FEE
64AA:  IORLW  00
64AC:  BNZ   64A4
64AE:  MOVLB  5
64B0:  BTFSC  x02.7
64B2:  BSF    FF2.7
64B4:  MOVLW  04
64B6:  MOVWF  x03
64B8:  MOVLW  E2
64BA:  MOVWF  x02
64BC:  CLRF   x04
64BE:  MOVLW  37
64C0:  MOVWF  x05
64C2:  MOVLW  02
64C4:  MOVWF  x06
64C6:  MOVLW  01
64C8:  MOVWF  x07
64CA:  MOVLB  0
64CC:  CALL   16D6
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
64D0:  MOVLB  4
64D2:  BCF    x97.2
64D4:  BCF    x97.3
64D6:  BSF    x97.4
64D8:  BCF    x97.5
64DA:  BCF    x97.6
64DC:  BCF    x97.7
64DE:  BCF    x98.0
64E0:  BCF    x98.1
....................                   glcd_imagen(5); 
64E2:  MOVLW  05
64E4:  MOVLB  5
64E6:  MOVWF  x02
64E8:  MOVLB  0
64EA:  CALL   2112
64EE:  MOVLB  4
....................                } 
....................                Exhaust=1; 
64F0:  MOVLW  01
64F2:  MOVWF  xAB
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0 && AlarmaAgua==0) 
64F4:  MOVF   x8D,F
64F6:  BNZ   6578
64F8:  MOVF   x93,F
64FA:  BNZ   6578
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0 && flag_agua==1) 
64FC:  BTFSC  x98.0
64FE:  BRA    6578
6500:  MOVF   xA7,F
6502:  BNZ   6578
6504:  BTFSS  x97.1
6506:  BRA    6578
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6508:  MOVLB  5
650A:  CLRF   x14
650C:  MOVLW  37
650E:  MOVWF  x15
6510:  MOVLW  7F
6512:  MOVWF  x16
6514:  MOVLW  3F
6516:  MOVWF  x17
6518:  MOVLW  01
651A:  MOVWF  x18
651C:  CLRF   x19
651E:  MOVLB  0
6520:  CALL   1614
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
6524:  MOVLW  04
6526:  MOVWF  FEA
6528:  MOVLW  E2
652A:  MOVWF  FE9
652C:  MOVFF  FF2,502
6530:  BCF    FF2.7
6532:  MOVLW  00
6534:  CALL   0E38
6538:  TBLRD*-
653A:  TBLRD*+
653C:  MOVF   FF5,W
653E:  MOVWF  FEE
6540:  IORLW  00
6542:  BNZ   653A
6544:  MOVLB  5
6546:  BTFSC  x02.7
6548:  BSF    FF2.7
654A:  MOVLW  04
654C:  MOVWF  x03
654E:  MOVLW  E2
6550:  MOVWF  x02
6552:  CLRF   x04
6554:  MOVLW  37
6556:  MOVWF  x05
6558:  MOVLW  02
655A:  MOVWF  x06
655C:  MOVLW  01
655E:  MOVWF  x07
6560:  MOVLB  0
6562:  CALL   16D6
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
6566:  MOVLB  4
6568:  BCF    x97.2
656A:  BCF    x97.3
656C:  BCF    x97.4
656E:  BCF    x97.5
6570:  BCF    x97.6
6572:  BCF    x97.7
6574:  BSF    x98.0
6576:  BCF    x98.1
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          disp_Alarma=0; 
6578:  BCF    x98.3
....................          if(NivelTanque==1 && flag_agua==0 ) 
657A:  DECFSZ x90,W
657C:  BRA    6586
657E:  BTFSC  x97.1
6580:  BRA    6586
....................          { 
....................             flag_agua=1; 
6582:  BSF    x97.1
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
6584:  BRA    667C
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && flag_agua==0) 
6586:  MOVF   xA9,F
6588:  BNZ   6604
658A:  BTFSC  x97.3
658C:  BRA    6604
658E:  BTFSC  x97.1
6590:  BRA    6604
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6592:  MOVLB  5
6594:  CLRF   x14
6596:  MOVLW  37
6598:  MOVWF  x15
659A:  MOVLW  7F
659C:  MOVWF  x16
659E:  MOVLW  3F
65A0:  MOVWF  x17
65A2:  MOVLW  01
65A4:  MOVWF  x18
65A6:  CLRF   x19
65A8:  MOVLB  0
65AA:  CALL   1614
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
65AE:  MOVLW  04
65B0:  MOVWF  FEA
65B2:  MOVLW  E2
65B4:  MOVWF  FE9
65B6:  MOVFF  FF2,502
65BA:  BCF    FF2.7
65BC:  MOVLW  00
65BE:  CALL   0E62
65C2:  TBLRD*-
65C4:  TBLRD*+
65C6:  MOVF   FF5,W
65C8:  MOVWF  FEE
65CA:  IORLW  00
65CC:  BNZ   65C4
65CE:  MOVLB  5
65D0:  BTFSC  x02.7
65D2:  BSF    FF2.7
65D4:  MOVLW  04
65D6:  MOVWF  x03
65D8:  MOVLW  E2
65DA:  MOVWF  x02
65DC:  CLRF   x04
65DE:  MOVLW  37
65E0:  MOVWF  x05
65E2:  MOVLW  02
65E4:  MOVWF  x06
65E6:  MOVLW  01
65E8:  MOVWF  x07
65EA:  MOVLB  0
65EC:  CALL   16D6
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
65F0:  MOVLB  4
65F2:  BCF    x97.2
65F4:  BSF    x97.3
65F6:  BCF    x97.4
65F8:  BCF    x97.5
65FA:  BCF    x97.6
65FC:  BCF    x97.7
65FE:  BCF    x98.0
6600:  BCF    x98.1
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
6602:  CLRF   xA1
....................             } 
....................              
....................             if(AlarmaAgua==1) 
6604:  DECFSZ x93,W
6606:  BRA    667C
....................             { 
....................                if(disp_AlarmaAgua==0) 
6608:  BTFSC  x98.4
660A:  BRA    667C
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
660C:  MOVLB  5
660E:  CLRF   x14
6610:  MOVLW  37
6612:  MOVWF  x15
6614:  MOVLW  7F
6616:  MOVWF  x16
6618:  MOVLW  3F
661A:  MOVWF  x17
661C:  MOVLW  01
661E:  MOVWF  x18
6620:  CLRF   x19
6622:  MOVLB  0
6624:  CALL   1614
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
6628:  MOVLW  04
662A:  MOVWF  FEA
662C:  MOVLW  E2
662E:  MOVWF  FE9
6630:  MOVFF  FF2,502
6634:  BCF    FF2.7
6636:  MOVLW  00
6638:  CALL   0E86
663C:  TBLRD*-
663E:  TBLRD*+
6640:  MOVF   FF5,W
6642:  MOVWF  FEE
6644:  IORLW  00
6646:  BNZ   663E
6648:  MOVLB  5
664A:  BTFSC  x02.7
664C:  BSF    FF2.7
664E:  MOVLW  04
6650:  MOVWF  x03
6652:  MOVLW  E2
6654:  MOVWF  x02
6656:  CLRF   x04
6658:  MOVLW  37
665A:  MOVWF  x05
665C:  MOVLW  02
665E:  MOVWF  x06
6660:  MOVLW  01
6662:  MOVWF  x07
6664:  MOVLB  0
6666:  CALL   16D6
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
666A:  MOVLB  4
666C:  BCF    x97.2
666E:  BCF    x97.4
6670:  BCF    x97.5
6672:  BCF    x97.6
6674:  BCF    x97.7
6676:  BCF    x98.0
6678:  BCF    x98.1
....................                   disp_AlarmaAgua=1; 
667A:  BSF    x98.4
....................                } 
....................             } 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
667C:  MOVLB  0
667E:  CALL   20B2
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
6682:  MOVLB  4
6684:  BTFSS  x96.6
6686:  BRA    695E
....................    {                       
....................       Lectura=0; 
6688:  BCF    x96.6
....................       displayTiempo(Presostato,31,40,2,1); 
668A:  MOVFF  491,503
668E:  MOVLW  1F
6690:  MOVLB  5
6692:  MOVWF  x04
6694:  MOVLW  28
6696:  MOVWF  x05
6698:  MOVLW  02
669A:  MOVWF  x06
669C:  MOVLW  01
669E:  MOVWF  x07
66A0:  MOVLB  0
66A2:  CALL   24BE
....................       glcd_rect(51, 40, 62, 48, YES, OFF);glcd_text57(52, 40, kpa, 1, ON); 
66A6:  MOVLW  33
66A8:  MOVLB  5
66AA:  MOVWF  x14
66AC:  MOVLW  28
66AE:  MOVWF  x15
66B0:  MOVLW  3E
66B2:  MOVWF  x16
66B4:  MOVLW  30
66B6:  MOVWF  x17
66B8:  MOVLW  01
66BA:  MOVWF  x18
66BC:  CLRF   x19
66BE:  MOVLB  0
66C0:  CALL   1614
66C4:  MOVLW  34
66C6:  MOVLB  5
66C8:  MOVWF  x13
66CA:  MOVLW  28
66CC:  MOVWF  x14
66CE:  MOVLW  04
66D0:  MOVWF  x16
66D2:  MOVLW  89
66D4:  MOVWF  x15
66D6:  MOVLW  01
66D8:  MOVWF  x17
66DA:  MOVWF  x18
66DC:  MOVLB  0
66DE:  CALL   131E
....................       displayT(ADC_Pt100,69,20,2); 
66E2:  MOVFF  4BE,505
66E6:  MOVFF  4BD,504
66EA:  MOVFF  4BC,503
66EE:  MOVFF  4BB,502
66F2:  MOVLW  45
66F4:  MOVLB  5
66F6:  MOVWF  x06
66F8:  MOVLW  14
66FA:  MOVWF  x07
66FC:  MOVLW  02
66FE:  MOVWF  x08
6700:  MOVLB  0
6702:  GOTO   2B5C
....................       glcd_circle(95,40,2,NO,ON); 
6706:  MOVLW  5F
6708:  MOVLB  5
670A:  MOVWF  x02
670C:  MOVLW  28
670E:  MOVWF  x03
6710:  MOVLW  02
6712:  MOVWF  x04
6714:  CLRF   x05
6716:  MOVLW  01
6718:  MOVWF  x06
671A:  MOVLB  0
671C:  CALL   220E
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
6720:  MOVLW  04
6722:  MOVWF  FEA
6724:  MOVLW  E2
6726:  MOVWF  FE9
6728:  MOVFF  FF2,502
672C:  BCF    FF2.7
672E:  MOVLW  00
6730:  CALL   0A1E
6734:  TBLRD*-
6736:  TBLRD*+
6738:  MOVF   FF5,W
673A:  MOVWF  FEE
673C:  IORLW  00
673E:  BNZ   6736
6740:  MOVLB  5
6742:  BTFSC  x02.7
6744:  BSF    FF2.7
6746:  MOVLW  04
6748:  MOVWF  x03
674A:  MOVLW  E2
674C:  MOVWF  x02
674E:  MOVLW  66
6750:  MOVWF  x04
6752:  MOVLW  28
6754:  MOVWF  x05
6756:  MOVLW  02
6758:  MOVWF  x06
675A:  MOVWF  x07
675C:  MOVLB  0
675E:  CALL   16D6
....................       displayTiempo(Setpoint,5,20,2,1); 
6762:  MOVFF  4A6,503
6766:  MOVLW  05
6768:  MOVLB  5
676A:  MOVWF  x04
676C:  MOVLW  14
676E:  MOVWF  x05
6770:  MOVLW  02
6772:  MOVWF  x06
6774:  MOVLW  01
6776:  MOVWF  x07
6778:  MOVLB  0
677A:  CALL   24BE
....................  
....................       glcd_imagen(5); 
677E:  MOVLW  05
6780:  MOVLB  5
6782:  MOVWF  x02
6784:  MOVLB  0
6786:  CALL   2112
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
678A:  MOVLW  04
678C:  MOVWF  FEA
678E:  MOVLW  E2
6790:  MOVWF  FE9
6792:  MOVFF  FF2,502
6796:  BCF    FF2.7
6798:  MOVLW  00
679A:  CALL   09DA
679E:  TBLRD*-
67A0:  TBLRD*+
67A2:  MOVF   FF5,W
67A4:  MOVWF  FEE
67A6:  IORLW  00
67A8:  BNZ   67A0
67AA:  MOVLB  5
67AC:  BTFSC  x02.7
67AE:  BSF    FF2.7
67B0:  MOVLW  04
67B2:  MOVWF  x03
67B4:  MOVLW  E2
67B6:  MOVWF  x02
67B8:  CLRF   x04
67BA:  CLRF   x05
67BC:  MOVLW  02
67BE:  MOVWF  x06
67C0:  MOVLW  01
67C2:  MOVWF  x07
67C4:  MOVLB  0
67C6:  CALL   16D6
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
67CA:  MOVLW  04
67CC:  MOVWF  FEA
67CE:  MOVLW  E2
67D0:  MOVWF  FE9
67D2:  MOVFF  FF2,502
67D6:  BCF    FF2.7
67D8:  MOVLW  00
67DA:  CALL   09FC
67DE:  TBLRD*-
67E0:  TBLRD*+
67E2:  MOVF   FF5,W
67E4:  MOVWF  FEE
67E6:  IORLW  00
67E8:  BNZ   67E0
67EA:  MOVLB  5
67EC:  BTFSC  x02.7
67EE:  BSF    FF2.7
67F0:  MOVLW  04
67F2:  MOVWF  x03
67F4:  MOVLW  E2
67F6:  MOVWF  x02
67F8:  CLRF   x04
67FA:  MOVLW  08
67FC:  MOVWF  x05
67FE:  MOVLW  02
6800:  MOVWF  x06
6802:  MOVLW  01
6804:  MOVWF  x07
6806:  MOVLB  0
6808:  CALL   16D6
....................       MuestraTiemposProgramados(); 
680C:  CALL   260E
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
6810:  MOVFF  4C2,503
6814:  MOVLW  50
6816:  MOVLB  5
6818:  MOVWF  x04
681A:  CLRF   x05
681C:  CLRF   x06
681E:  MOVLW  01
6820:  MOVWF  x07
6822:  MOVLB  0
6824:  CALL   24BE
6828:  MOVFF  4C1,503
682C:  MOVLW  56
682E:  MOVLB  5
6830:  MOVWF  x04
6832:  CLRF   x05
6834:  CLRF   x06
6836:  MOVLW  01
6838:  MOVWF  x07
683A:  MOVLB  0
683C:  CALL   24BE
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
6840:  MOVLW  04
6842:  MOVWF  FEA
6844:  MOVLW  E2
6846:  MOVWF  FE9
6848:  MOVFF  FF2,502
684C:  BCF    FF2.7
684E:  MOVLW  00
6850:  CALL   06BE
6854:  TBLRD*-
6856:  TBLRD*+
6858:  MOVF   FF5,W
685A:  MOVWF  FEE
685C:  IORLW  00
685E:  BNZ   6856
6860:  MOVLB  5
6862:  BTFSC  x02.7
6864:  BSF    FF2.7
6866:  MOVLW  04
6868:  MOVWF  x03
686A:  MOVLW  E2
686C:  MOVWF  x02
686E:  MOVLW  5C
6870:  MOVWF  x04
6872:  CLRF   x05
6874:  MOVLW  02
6876:  MOVWF  x06
6878:  MOVLW  01
687A:  MOVWF  x07
687C:  MOVLB  0
687E:  CALL   16D6
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6882:  MOVFF  4C0,503
6886:  MOVLW  62
6888:  MOVLB  5
688A:  MOVWF  x04
688C:  CLRF   x05
688E:  CLRF   x06
6890:  MOVLW  01
6892:  MOVWF  x07
6894:  MOVLB  0
6896:  CALL   24BE
689A:  MOVFF  4BF,503
689E:  MOVLW  68
68A0:  MOVLB  5
68A2:  MOVWF  x04
68A4:  CLRF   x05
68A6:  CLRF   x06
68A8:  MOVLW  01
68AA:  MOVWF  x07
68AC:  MOVLB  0
68AE:  CALL   24BE
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
68B2:  MOVFF  4CA,503
68B6:  MOVLW  50
68B8:  MOVLB  5
68BA:  MOVWF  x04
68BC:  MOVLW  08
68BE:  MOVWF  x05
68C0:  CLRF   x06
68C2:  MOVLW  01
68C4:  MOVWF  x07
68C6:  MOVLB  0
68C8:  CALL   24BE
68CC:  MOVFF  4C9,503
68D0:  MOVLW  56
68D2:  MOVLB  5
68D4:  MOVWF  x04
68D6:  MOVLW  08
68D8:  MOVWF  x05
68DA:  CLRF   x06
68DC:  MOVLW  01
68DE:  MOVWF  x07
68E0:  MOVLB  0
68E2:  CALL   24BE
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
68E6:  MOVLW  04
68E8:  MOVWF  FEA
68EA:  MOVLW  E2
68EC:  MOVWF  FE9
68EE:  MOVFF  FF2,502
68F2:  BCF    FF2.7
68F4:  MOVLW  00
68F6:  CALL   06BE
68FA:  TBLRD*-
68FC:  TBLRD*+
68FE:  MOVF   FF5,W
6900:  MOVWF  FEE
6902:  IORLW  00
6904:  BNZ   68FC
6906:  MOVLB  5
6908:  BTFSC  x02.7
690A:  BSF    FF2.7
690C:  MOVLW  04
690E:  MOVWF  x03
6910:  MOVLW  E2
6912:  MOVWF  x02
6914:  MOVLW  5C
6916:  MOVWF  x04
6918:  MOVLW  08
691A:  MOVWF  x05
691C:  MOVLW  02
691E:  MOVWF  x06
6920:  MOVLW  01
6922:  MOVWF  x07
6924:  MOVLB  0
6926:  CALL   16D6
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
692A:  MOVFF  4C8,503
692E:  MOVLW  62
6930:  MOVLB  5
6932:  MOVWF  x04
6934:  MOVLW  08
6936:  MOVWF  x05
6938:  CLRF   x06
693A:  MOVLW  01
693C:  MOVWF  x07
693E:  MOVLB  0
6940:  CALL   24BE
6944:  MOVFF  4C7,503
6948:  MOVLW  68
694A:  MOVLB  5
694C:  MOVWF  x04
694E:  MOVLW  08
6950:  MOVWF  x05
6952:  CLRF   x06
6954:  MOVLW  01
6956:  MOVWF  x07
6958:  MOVLB  0
695A:  CALL   24BE
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint-1.0))// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
695E:  MOVLB  5
6960:  CLRF   x03
6962:  MOVFF  4A6,502
6966:  MOVLB  0
6968:  CALL   1A94
696C:  MOVFF  00,502
6970:  MOVFF  01,503
6974:  MOVFF  02,504
6978:  MOVFF  03,505
697C:  BSF    FD8.1
697E:  MOVFF  03,509
6982:  MOVFF  02,508
6986:  MOVFF  01,507
698A:  MOVFF  00,506
698E:  MOVLB  5
6990:  CLRF   x0D
6992:  CLRF   x0C
6994:  CLRF   x0B
6996:  MOVLW  7F
6998:  MOVWF  x0A
699A:  MOVLB  0
699C:  CALL   1C2A
69A0:  MOVFF  03,505
69A4:  MOVFF  02,504
69A8:  MOVFF  01,503
69AC:  MOVFF  00,502
69B0:  MOVFF  4BE,509
69B4:  MOVFF  4BD,508
69B8:  MOVFF  4BC,507
69BC:  MOVFF  4BB,506
69C0:  CALL   274E
69C4:  BC    69C8
69C6:  BNZ   6A9A
....................    { 
....................       if(ciclosecado==1) 
69C8:  MOVLB  4
69CA:  DECFSZ x95,W
69CC:  BRA    6A36
....................       { 
....................          if(est==0) 
69CE:  BTFSC  x97.0
69D0:  BRA    6A34
....................          { 
....................             tiempo_esterilizacion=2; 
69D2:  MOVLW  02
69D4:  MOVWF  xA9
....................             Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
69D6:  MOVLB  5
69D8:  CLRF   x02
69DA:  MOVLW  5A
69DC:  MOVWF  x03
69DE:  MOVLW  38
69E0:  MOVWF  x04
69E2:  MOVLB  0
69E4:  CALL   27C8
69E8:  MOVLW  0F
69EA:  MOVLB  5
69EC:  MOVWF  x14
69EE:  MOVLW  12
69F0:  MOVWF  x15
69F2:  MOVLW  1E
69F4:  MOVWF  x16
69F6:  MOVLW  35
69F8:  MOVWF  x17
69FA:  CLRF   x18
69FC:  CLRF   x19
69FE:  MOVLB  0
6A00:  CALL   1614
6A04:  MOVLW  19
6A06:  MOVLB  5
6A08:  MOVWF  x14
6A0A:  MOVLW  12
6A0C:  MOVWF  x15
6A0E:  MOVLW  3C
6A10:  MOVWF  x16
6A12:  MOVLW  1A
6A14:  MOVWF  x17
6A16:  CLRF   x18
6A18:  MOVLW  01
6A1A:  MOVWF  x19
6A1C:  MOVLB  0
6A1E:  CALL   1614
6A22:  MOVLB  4
6A24:  BSF    x97.0
....................             glcd_imagen(5); 
6A26:  MOVLW  05
6A28:  MOVLB  5
6A2A:  MOVWF  x02
6A2C:  MOVLB  0
6A2E:  CALL   2112
6A32:  MOVLB  4
....................          } 
....................       } 
....................       else 
6A34:  BRA    6A9C
....................       { 
....................          if(est==0) 
6A36:  BTFSC  x97.0
6A38:  BRA    6A9C
....................          { 
....................             tiempo_esterilizacion=1; 
6A3A:  MOVLW  01
6A3C:  MOVWF  xA9
....................             Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
6A3E:  MOVLB  5
6A40:  CLRF   x02
6A42:  MOVLW  5A
6A44:  MOVWF  x03
6A46:  MOVLW  38
6A48:  MOVWF  x04
6A4A:  MOVLB  0
6A4C:  CALL   27C8
6A50:  MOVLW  0F
6A52:  MOVLB  5
6A54:  MOVWF  x14
6A56:  MOVLW  12
6A58:  MOVWF  x15
6A5A:  MOVLW  1E
6A5C:  MOVWF  x16
6A5E:  MOVLW  35
6A60:  MOVWF  x17
6A62:  CLRF   x18
6A64:  CLRF   x19
6A66:  MOVLB  0
6A68:  CALL   1614
6A6C:  MOVLW  19
6A6E:  MOVLB  5
6A70:  MOVWF  x14
6A72:  MOVLW  12
6A74:  MOVWF  x15
6A76:  MOVLW  3C
6A78:  MOVWF  x16
6A7A:  MOVLW  1A
6A7C:  MOVWF  x17
6A7E:  CLRF   x18
6A80:  MOVLW  01
6A82:  MOVWF  x19
6A84:  MOVLB  0
6A86:  CALL   1614
6A8A:  MOVLB  4
6A8C:  BSF    x97.0
....................             glcd_imagen(5); 
6A8E:  MOVLW  05
6A90:  MOVLB  5
6A92:  MOVWF  x02
6A94:  MOVLB  0
6A96:  CALL   2112
6A9A:  MOVLB  4
....................          } 
....................       } 
....................    }   
....................     
....................    /*if(ADC_Pt100<((float)Setpoint-2.0)) 
....................    { 
....................       glcd_rect(15, 18, 30, 53, NO, ON); 
....................       if(est==1) 
....................       {glcd_rect(25, 18, 60, 26, NO, OFF);} 
....................       est=0;tiempo_esterilizacion=0; 
....................    }*/ 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
6A9C:  DECFSZ xAB,W
6A9E:  BRA    6AE4
6AA0:  MOVF   xA9,W
6AA2:  SUBLW  02
6AA4:  BNZ   6AE4
....................    { 
....................       if(ciclosecado==0) 
6AA6:  MOVF   x95,F
6AA8:  BNZ   6ACE
....................       { 
....................          // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................          Control=0; 
6AAA:  CLRF   xA1
....................          if(Presostato<20) 
6AAC:  MOVF   x91,W
6AAE:  SUBLW  13
6AB0:  BNC   6AB6
....................          { 
....................             EVDesfogue=3; 
6AB2:  MOVLW  03
6AB4:  MOVWF  x9A
....................          } 
....................          if(Presostato<2) 
6AB6:  MOVF   x91,W
6AB8:  SUBLW  01
6ABA:  BNC   6AC8
....................          { 
....................             tiempo_secado=1; 
6ABC:  MOVLW  01
6ABE:  MOVWF  xAA
....................             Control=0;EVDesfogue=4; 
6AC0:  CLRF   xA1
6AC2:  MOVLW  04
6AC4:  MOVWF  x9A
....................          } 
....................          else 
6AC6:  BRA    6ACC
....................          { 
....................             EVDesfogue=1; 
6AC8:  MOVLW  01
6ACA:  MOVWF  x9A
....................          } 
....................       } 
....................       else 
6ACC:  BRA    6AE4
....................       { 
....................          Control=0; 
6ACE:  CLRF   xA1
....................          if(Presostato<20) 
6AD0:  MOVF   x91,W
6AD2:  SUBLW  13
6AD4:  BNC   6AE0
....................          { 
....................             EVDesfogue=4; 
6AD6:  MOVLW  04
6AD8:  MOVWF  x9A
....................             tiempo_secado=1; 
6ADA:  MOVLW  01
6ADC:  MOVWF  xAA
....................          } 
....................          else 
6ADE:  BRA    6AE4
....................          { 
....................             EVDesfogue=1; 
6AE0:  MOVLW  01
6AE2:  MOVWF  x9A
....................          } 
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
6AE4:  MOVF   xAB,W
6AE6:  SUBLW  02
6AE8:  BNZ   6B18
6AEA:  MOVF   xA9,W
6AEC:  SUBLW  02
6AEE:  BNZ   6B18
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
6AF0:  CLRF   xA1
....................       if(Presostato<20) 
6AF2:  MOVF   x91,W
6AF4:  SUBLW  13
6AF6:  BNC   6AFE
....................       { 
....................          EVDesfogue=3; 
6AF8:  MOVLW  03
6AFA:  MOVWF  x9A
....................       } 
....................       else 
6AFC:  BRA    6B02
....................       { 
....................          EVDesfogue=2; 
6AFE:  MOVLW  02
6B00:  MOVWF  x9A
....................       } 
....................       if(Presostato<2) 
6B02:  MOVF   x91,W
6B04:  SUBLW  01
6B06:  BNC   6B18
....................       { 
....................          tiempo_esterilizacion=3; 
6B08:  MOVLW  03
6B0A:  MOVWF  xA9
....................          tiempo_secado=2; 
6B0C:  MOVLW  02
6B0E:  MOVWF  xAA
....................          fin_ciclo=1; 
6B10:  MOVLW  01
6B12:  MOVWF  xA7
....................          EVDesfogue=3; 
6B14:  MOVLW  03
6B16:  MOVWF  x9A
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]==Testerilizacionp[0])&&(Testerilizacion[1]==Testerilizacionp[1])&&(Testerilizacion[2]==Testerilizacionp[2])&&(Testerilizacion[3]==Testerilizacionp[3]) && tiempo_esterilizacion==1) 
6B18:  MOVF   xC3,W
6B1A:  SUBWF  xBF,W
6B1C:  BNZ   6B38
6B1E:  MOVF   xC4,W
6B20:  SUBWF  xC0,W
6B22:  BNZ   6B38
6B24:  MOVF   xC5,W
6B26:  SUBWF  xC1,W
6B28:  BNZ   6B38
6B2A:  MOVF   xC6,W
6B2C:  SUBWF  xC2,W
6B2E:  BNZ   6B38
6B30:  DECFSZ xA9,W
6B32:  BRA    6B38
....................    { 
....................       tiempo_esterilizacion=2; 
6B34:  MOVLW  02
6B36:  MOVWF  xA9
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
6B38:  MOVF   xCB,W
6B3A:  XORLW  80
6B3C:  MOVWF  00
6B3E:  MOVF   xC7,W
6B40:  XORLW  80
6B42:  SUBWF  00,W
6B44:  BZ    6B48
6B46:  BC    6B88
6B48:  MOVF   xCC,W
6B4A:  XORLW  80
6B4C:  MOVWF  00
6B4E:  MOVF   xC8,W
6B50:  XORLW  80
6B52:  SUBWF  00,W
6B54:  BZ    6B58
6B56:  BC    6B88
6B58:  MOVF   xCD,W
6B5A:  XORLW  80
6B5C:  MOVWF  00
6B5E:  MOVF   xC9,W
6B60:  XORLW  80
6B62:  SUBWF  00,W
6B64:  BZ    6B68
6B66:  BC    6B88
6B68:  MOVF   xCE,W
6B6A:  XORLW  80
6B6C:  MOVWF  00
6B6E:  MOVF   xCA,W
6B70:  XORLW  80
6B72:  SUBWF  00,W
6B74:  BZ    6B78
6B76:  BC    6B88
6B78:  DECFSZ xAA,W
6B7A:  BRA    6B88
....................    { 
....................       tiempo_esterilizacion=3; 
6B7C:  MOVLW  03
6B7E:  MOVWF  xA9
....................       tiempo_secado=2; 
6B80:  MOVLW  02
6B82:  MOVWF  xAA
....................       fin_ciclo=1; 
6B84:  MOVLW  01
6B86:  MOVWF  xA7
....................    } 
....................     
....................    if(fin_ciclo==1) 
6B88:  DECFSZ xA7,W
6B8A:  BRA    6C06
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
6B8C:  CLRF   xA1
6B8E:  MOVLW  03
6B90:  MOVWF  x9A
....................       if(disp_Fin==0) 
6B92:  BTFSC  x98.1
6B94:  BRA    6C06
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6B96:  MOVLB  5
6B98:  CLRF   x14
6B9A:  MOVLW  37
6B9C:  MOVWF  x15
6B9E:  MOVLW  7F
6BA0:  MOVWF  x16
6BA2:  MOVLW  3F
6BA4:  MOVWF  x17
6BA6:  MOVLW  01
6BA8:  MOVWF  x18
6BAA:  CLRF   x19
6BAC:  MOVLB  0
6BAE:  CALL   1614
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
6BB2:  MOVLW  04
6BB4:  MOVWF  FEA
6BB6:  MOVLW  E2
6BB8:  MOVWF  FE9
6BBA:  MOVFF  FF2,502
6BBE:  BCF    FF2.7
6BC0:  MOVLW  00
6BC2:  CALL   0EAC
6BC6:  TBLRD*-
6BC8:  TBLRD*+
6BCA:  MOVF   FF5,W
6BCC:  MOVWF  FEE
6BCE:  IORLW  00
6BD0:  BNZ   6BC8
6BD2:  MOVLB  5
6BD4:  BTFSC  x02.7
6BD6:  BSF    FF2.7
6BD8:  MOVLW  04
6BDA:  MOVWF  x03
6BDC:  MOVLW  E2
6BDE:  MOVWF  x02
6BE0:  CLRF   x04
6BE2:  MOVLW  37
6BE4:  MOVWF  x05
6BE6:  MOVLW  02
6BE8:  MOVWF  x06
6BEA:  MOVLW  01
6BEC:  MOVWF  x07
6BEE:  MOVLB  0
6BF0:  CALL   16D6
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
6BF4:  MOVLB  4
6BF6:  BCF    x97.2
6BF8:  BCF    x97.3
6BFA:  BSF    x97.4
6BFC:  BCF    x97.5
6BFE:  BSF    x97.6
6C00:  BCF    x97.7
6C02:  BCF    x98.0
6C04:  BSF    x98.1
....................       }    
....................        
....................    } 
....................    if(RIGHT) 
6C06:  BSF    F92.2
6C08:  BTFSS  F80.2
6C0A:  BRA    6C44
....................    { 
....................       glcd_init(ON); 
6C0C:  MOVLW  01
6C0E:  MOVLB  5
6C10:  MOVWF  x02
6C12:  MOVLB  0
6C14:  CALL   11BA
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6C18:  MOVLB  4
6C1A:  BCF    x97.2
6C1C:  BCF    x97.3
6C1E:  BCF    x97.4
6C20:  BCF    x97.5
6C22:  BCF    x97.6
6C24:  BCF    x97.7
6C26:  BCF    x98.0
6C28:  BCF    x98.1
....................       disp_Alarma=0; 
6C2A:  BCF    x98.3
....................       delay_ms(1000); 
6C2C:  MOVLW  04
6C2E:  MOVLB  5
6C30:  MOVWF  x02
6C32:  MOVLW  FA
6C34:  MOVWF  x03
6C36:  MOVLB  0
6C38:  CALL   103E
6C3C:  MOVLB  5
6C3E:  DECFSZ x02,F
6C40:  BRA    6C32
6C42:  MOVLB  4
....................    } 
....................    EVAgua=10; 
6C44:  MOVLW  0A
6C46:  MOVWF  x9B
....................    Envio_Esclavos(); 
6C48:  MOVLB  0
6C4A:  CALL   20B2
6C4E:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6C50:  MOVF   xA3,W
6C52:  SUBLW  64
6C54:  BTFSS  FD8.2
6C56:  BRA    6D52
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
6C58:  MOVFF  4D7,503
6C5C:  MOVLB  5
6C5E:  CLRF   x04
6C60:  MOVLW  0A
6C62:  MOVWF  x05
6C64:  MOVLW  02
6C66:  MOVWF  x06
6C68:  MOVLW  01
6C6A:  MOVWF  x07
6C6C:  MOVLB  0
6C6E:  CALL   24BE
....................    displayTiempo(datoRx[1],0,20,2,1); 
6C72:  MOVFF  4D8,503
6C76:  MOVLB  5
6C78:  CLRF   x04
6C7A:  MOVLW  14
6C7C:  MOVWF  x05
6C7E:  MOVLW  02
6C80:  MOVWF  x06
6C82:  MOVLW  01
6C84:  MOVWF  x07
6C86:  MOVLB  0
6C88:  CALL   24BE
....................    displayTiempo(datoRx[2],0,30,2,1); 
6C8C:  MOVFF  4D9,503
6C90:  MOVLB  5
6C92:  CLRF   x04
6C94:  MOVLW  1E
6C96:  MOVWF  x05
6C98:  MOVLW  02
6C9A:  MOVWF  x06
6C9C:  MOVLW  01
6C9E:  MOVWF  x07
6CA0:  MOVLB  0
6CA2:  CALL   24BE
....................    displayTiempo(datoRx[3],0,40,2,1); 
6CA6:  MOVFF  4DA,503
6CAA:  MOVLB  5
6CAC:  CLRF   x04
6CAE:  MOVLW  28
6CB0:  MOVWF  x05
6CB2:  MOVLW  02
6CB4:  MOVWF  x06
6CB6:  MOVLW  01
6CB8:  MOVWF  x07
6CBA:  MOVLB  0
6CBC:  CALL   24BE
....................    displayTiempo(Opcion,0,50,2,1); 
6CC0:  MOVFF  4A8,503
6CC4:  MOVLB  5
6CC6:  CLRF   x04
6CC8:  MOVLW  32
6CCA:  MOVWF  x05
6CCC:  MOVLW  02
6CCE:  MOVWF  x06
6CD0:  MOVLW  01
6CD2:  MOVWF  x07
6CD4:  MOVLB  0
6CD6:  CALL   24BE
....................    Lectura_Esclavos(); 
6CDA:  CALL   1F58
....................    Opcion++; 
6CDE:  MOVLB  4
6CE0:  INCF   xA8,F
....................    displayTiempo(Puerta,50,10,2,1); 
6CE2:  MOVFF  48D,503
6CE6:  MOVLW  32
6CE8:  MOVLB  5
6CEA:  MOVWF  x04
6CEC:  MOVLW  0A
6CEE:  MOVWF  x05
6CF0:  MOVLW  02
6CF2:  MOVWF  x06
6CF4:  MOVLW  01
6CF6:  MOVWF  x07
6CF8:  MOVLB  0
6CFA:  CALL   24BE
....................    displayTiempo(Parada,50,20,2,1); 
6CFE:  MOVFF  48E,503
6D02:  MOVLW  32
6D04:  MOVLB  5
6D06:  MOVWF  x04
6D08:  MOVLW  14
6D0A:  MOVWF  x05
6D0C:  MOVLW  02
6D0E:  MOVWF  x06
6D10:  MOVLW  01
6D12:  MOVWF  x07
6D14:  MOVLB  0
6D16:  CALL   24BE
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6D1A:  MOVFF  4BE,505
6D1E:  MOVFF  4BD,504
6D22:  MOVFF  4BC,503
6D26:  MOVFF  4BB,502
6D2A:  GOTO   2BD6
6D2E:  MOVFF  01,502
6D32:  MOVFF  01,503
6D36:  MOVLW  32
6D38:  MOVLB  5
6D3A:  MOVWF  x04
6D3C:  MOVLW  1E
6D3E:  MOVWF  x05
6D40:  MOVLW  02
6D42:  MOVWF  x06
6D44:  MOVLW  01
6D46:  MOVWF  x07
6D48:  MOVLB  0
6D4A:  CALL   24BE
....................     
....................  } 
6D4E:  MOVLB  4
6D50:  BRA    6C50
....................        
....................       while(Parada==0) 
....................       { 
6D52:  MOVF   x8E,F
6D54:  BNZ   6E0E
....................          Lectura_Esclavos(); 
6D56:  MOVLB  0
6D58:  CALL   1F58
....................          delay_ms(100); 
6D5C:  MOVLW  64
6D5E:  MOVLB  5
6D60:  MOVWF  x03
6D62:  MOVLB  0
6D64:  CALL   103E
....................          if(disp_Stop==0) 
6D68:  MOVLB  4
6D6A:  BTFSC  x97.7
6D6C:  BRA    6E0C
....................          { 
....................             glcd_fillScreen(OFF);  
6D6E:  MOVLB  5
6D70:  CLRF   x03
6D72:  MOVLB  0
6D74:  CALL   10A8
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6D78:  MOVLW  04
6D7A:  MOVWF  FEA
6D7C:  MOVLW  E2
6D7E:  MOVWF  FE9
6D80:  MOVFF  FF2,502
6D84:  BCF    FF2.7
6D86:  MOVLW  00
6D88:  CALL   0ED8
6D8C:  TBLRD*-
6D8E:  TBLRD*+
6D90:  MOVF   FF5,W
6D92:  MOVWF  FEE
6D94:  IORLW  00
6D96:  BNZ   6D8E
6D98:  MOVLB  5
6D9A:  BTFSC  x02.7
6D9C:  BSF    FF2.7
6D9E:  MOVLW  04
6DA0:  MOVWF  x03
6DA2:  MOVLW  E2
6DA4:  MOVWF  x02
6DA6:  CLRF   x04
6DA8:  MOVLW  0A
6DAA:  MOVWF  x05
6DAC:  CLRF   x06
6DAE:  MOVLW  02
6DB0:  MOVWF  x07
6DB2:  MOVLB  0
6DB4:  CALL   16D6
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6DB8:  MOVLW  04
6DBA:  MOVWF  FEA
6DBC:  MOVLW  E2
6DBE:  MOVWF  FE9
6DC0:  MOVFF  FF2,502
6DC4:  BCF    FF2.7
6DC6:  MOVLW  00
6DC8:  CALL   0EFE
6DCC:  TBLRD*-
6DCE:  TBLRD*+
6DD0:  MOVF   FF5,W
6DD2:  MOVWF  FEE
6DD4:  IORLW  00
6DD6:  BNZ   6DCE
6DD8:  MOVLB  5
6DDA:  BTFSC  x02.7
6DDC:  BSF    FF2.7
6DDE:  MOVLW  04
6DE0:  MOVWF  x03
6DE2:  MOVLW  E2
6DE4:  MOVWF  x02
6DE6:  CLRF   x04
6DE8:  MOVLW  1E
6DEA:  MOVWF  x05
6DEC:  CLRF   x06
6DEE:  MOVLW  02
6DF0:  MOVWF  x07
6DF2:  MOVLB  0
6DF4:  CALL   16D6
6DF8:  MOVLB  4
6DFA:  BSF    x96.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6DFC:  BCF    x97.2
6DFE:  BCF    x97.3
6E00:  BCF    x97.4
6E02:  BCF    x97.5
6E04:  BCF    x97.6
6E06:  BSF    x97.7
6E08:  BCF    x98.0
6E0A:  BCF    x98.1
....................          } 
....................       }    
6E0C:  BRA    6D52
....................       if(Parada==1) 
6E0E:  DECFSZ x8E,W
6E10:  BRA    6EBA
....................       { 
....................          while(emergency==1) 
....................          { 
6E12:  BTFSS  x96.3
6E14:  BRA    6EBA
....................             Lectura_Esclavos(); 
6E16:  MOVLB  0
6E18:  CALL   1F58
....................             if(disp_Stop==1) 
6E1C:  MOVLB  4
6E1E:  BTFSS  x97.7
6E20:  BRA    6E30
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6E22:  MOVLB  5
6E24:  CLRF   x03
6E26:  MOVLB  0
6E28:  CALL   10A8
6E2C:  MOVLB  4
6E2E:  BCF    x97.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6E30:  MOVLW  04
6E32:  MOVWF  FEA
6E34:  MOVLW  E2
6E36:  MOVWF  FE9
6E38:  MOVFF  FF2,502
6E3C:  BCF    FF2.7
6E3E:  MOVLW  00
6E40:  MOVLB  0
6E42:  CALL   0F24
6E46:  TBLRD*-
6E48:  TBLRD*+
6E4A:  MOVF   FF5,W
6E4C:  MOVWF  FEE
6E4E:  IORLW  00
6E50:  BNZ   6E48
6E52:  MOVLB  5
6E54:  BTFSC  x02.7
6E56:  BSF    FF2.7
6E58:  MOVLW  04
6E5A:  MOVWF  x03
6E5C:  MOVLW  E2
6E5E:  MOVWF  x02
6E60:  CLRF   x04
6E62:  MOVLW  0A
6E64:  MOVWF  x05
6E66:  CLRF   x06
6E68:  MOVLW  02
6E6A:  MOVWF  x07
6E6C:  MOVLB  0
6E6E:  CALL   16D6
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6E72:  MOVLW  04
6E74:  MOVWF  FEA
6E76:  MOVLW  E2
6E78:  MOVWF  FE9
6E7A:  MOVFF  FF2,502
6E7E:  BCF    FF2.7
6E80:  MOVLW  00
6E82:  CALL   0F4A
6E86:  TBLRD*-
6E88:  TBLRD*+
6E8A:  MOVF   FF5,W
6E8C:  MOVWF  FEE
6E8E:  IORLW  00
6E90:  BNZ   6E88
6E92:  MOVLB  5
6E94:  BTFSC  x02.7
6E96:  BSF    FF2.7
6E98:  MOVLW  04
6E9A:  MOVWF  x03
6E9C:  MOVLW  E2
6E9E:  MOVWF  x02
6EA0:  CLRF   x04
6EA2:  MOVLW  1E
6EA4:  MOVWF  x05
6EA6:  CLRF   x06
6EA8:  MOVLW  02
6EAA:  MOVWF  x07
6EAC:  MOVLB  0
6EAE:  CALL   16D6
....................          glcd_update();} 
6EB2:  CALL   1102
6EB6:  MOVLB  4
6EB8:  BRA    6E12
....................       } 
....................    } 
6EBA:  MOVLB  0
6EBC:  GOTO   3066
.................... } 
6EC0:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
