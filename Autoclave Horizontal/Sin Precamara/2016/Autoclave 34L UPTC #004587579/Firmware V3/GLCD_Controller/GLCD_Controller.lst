CCS PCH C Compiler, Version 4.104, 5967               10-dic.-16 10:46

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclave Horizontal\Sin Precamara\2016\Autoclave 34L UPTC\Firmware V3\GLCD_Controller\GLCD_Controller.lst

               ROM used: 28394 bytes (87%)
                         Largest free fragment is 4370
               RAM used: 1286 (63%) at main() level
                         1336 (65%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2C40
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0F9C
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
106A:  MOVLW  05
106C:  MOVWF  FEA
106E:  MOVLW  03
1070:  MOVWF  FE9
1072:  MOVF   FEF,W
1074:  BZ    1092
1076:  MOVLW  0F
1078:  MOVWF  01
107A:  CLRF   00
107C:  DECFSZ 00,F
107E:  BRA    107C
1080:  DECFSZ 01,F
1082:  BRA    107A
1084:  MOVLW  8F
1086:  MOVWF  00
1088:  DECFSZ 00,F
108A:  BRA    1088
108C:  NOP   
108E:  DECFSZ FEF,F
1090:  BRA    1076
1092:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
19DE:  MOVLW  08
19E0:  MOVWF  01
19E2:  MOVLW  11
19E4:  MOVWF  00
19E6:  DECFSZ 00,F
19E8:  BRA    19E6
19EA:  BCF    F8A.1
19EC:  BCF    F93.1
19EE:  MOVLW  11
19F0:  MOVWF  00
19F2:  DECFSZ 00,F
19F4:  BRA    19F2
19F6:  MOVLB  5
19F8:  RLCF   x06,F
19FA:  BCF    F8A.0
19FC:  BTFSC  FD8.0
19FE:  BSF    F93.0
1A00:  BTFSS  FD8.0
1A02:  BCF    F93.0
1A04:  BSF    F93.1
1A06:  BTFSS  F81.1
1A08:  BRA    1A06
1A0A:  DECFSZ 01,F
1A0C:  BRA    1A10
1A0E:  BRA    1A14
1A10:  MOVLB  0
1A12:  BRA    19E2
1A14:  MOVLW  11
1A16:  MOVWF  00
1A18:  DECFSZ 00,F
1A1A:  BRA    1A18
1A1C:  BCF    F8A.1
1A1E:  BCF    F93.1
1A20:  NOP   
1A22:  BSF    F93.0
1A24:  MOVLW  11
1A26:  MOVWF  00
1A28:  DECFSZ 00,F
1A2A:  BRA    1A28
1A2C:  MOVLW  11
1A2E:  MOVWF  00
1A30:  DECFSZ 00,F
1A32:  BRA    1A30
1A34:  BSF    F93.1
1A36:  BTFSS  F81.1
1A38:  BRA    1A36
1A3A:  CLRF   01
1A3C:  MOVLW  11
1A3E:  MOVWF  00
1A40:  DECFSZ 00,F
1A42:  BRA    1A40
1A44:  BTFSC  F81.0
1A46:  BSF    01.0
1A48:  BCF    F8A.1
1A4A:  BCF    F93.1
1A4C:  BCF    F8A.0
1A4E:  BCF    F93.0
1A50:  MOVLB  0
1A52:  RETLW  00
1A54:  MOVLW  08
1A56:  MOVLB  5
1A58:  MOVWF  x06
1A5A:  MOVFF  00,507
1A5E:  BSF    F93.0
1A60:  MOVLW  11
1A62:  MOVWF  00
1A64:  DECFSZ 00,F
1A66:  BRA    1A64
1A68:  BSF    F93.1
1A6A:  BTFSS  F81.1
1A6C:  BRA    1A6A
1A6E:  BTFSC  F81.0
1A70:  BSF    FD8.0
1A72:  BTFSS  F81.0
1A74:  BCF    FD8.0
1A76:  RLCF   01,F
1A78:  MOVLW  11
1A7A:  MOVWF  00
1A7C:  DECFSZ 00,F
1A7E:  BRA    1A7C
1A80:  BCF    F93.1
1A82:  BCF    F8A.1
1A84:  DECFSZ x06,F
1A86:  BRA    1A5E
1A88:  BSF    F93.0
1A8A:  MOVLW  11
1A8C:  MOVWF  00
1A8E:  DECFSZ 00,F
1A90:  BRA    1A8E
1A92:  BCF    F8A.0
1A94:  MOVF   x07,W
1A96:  BTFSS  FD8.2
1A98:  BCF    F93.0
1A9A:  NOP   
1A9C:  BSF    F93.1
1A9E:  BTFSS  F81.1
1AA0:  BRA    1A9E
1AA2:  MOVLW  11
1AA4:  MOVWF  00
1AA6:  DECFSZ 00,F
1AA8:  BRA    1AA6
1AAA:  BCF    F8A.1
1AAC:  BCF    F93.1
1AAE:  MOVLW  11
1AB0:  MOVWF  00
1AB2:  DECFSZ 00,F
1AB4:  BRA    1AB2
1AB6:  BCF    F8A.0
1AB8:  BCF    F93.0
1ABA:  MOVLB  0
1ABC:  GOTO   200A (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
11E6:  BCF    F93.2
11E8:  BSF    F8A.2
....................    output_low(GLCD_E); 
11EA:  BCF    F93.7
11EC:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
11EE:  BCF    F93.3
11F0:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
11F2:  BCF    F93.4
11F4:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
11F6:  BCF    F93.5
11F8:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
11FA:  MOVLB  5
11FC:  CLRF   x18
11FE:  MOVLW  C0
1200:  MOVWF  x19
1202:  MOVLB  0
1204:  RCALL  1094
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1206:  MOVLW  01
1208:  MOVLB  5
120A:  MOVWF  x18
120C:  MOVLW  C0
120E:  MOVWF  x19
1210:  MOVLB  0
1212:  RCALL  1094
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
1214:  MOVLB  5
1216:  CLRF   x18
1218:  MOVLW  40
121A:  MOVWF  x19
121C:  MOVLB  0
121E:  RCALL  1094
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
1220:  MOVLW  01
1222:  MOVLB  5
1224:  MOVWF  x18
1226:  MOVLW  40
1228:  MOVWF  x19
122A:  MOVLB  0
122C:  RCALL  1094
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
122E:  MOVLB  5
1230:  CLRF   x18
1232:  MOVLW  B8
1234:  MOVWF  x19
1236:  MOVLB  0
1238:  RCALL  1094
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
123A:  MOVLW  01
123C:  MOVLB  5
123E:  MOVWF  x18
1240:  MOVLW  B8
1242:  MOVWF  x19
1244:  MOVLB  0
1246:  RCALL  1094
....................  
....................    if(mode == ON) 
1248:  MOVLB  5
124A:  DECFSZ x02,W
124C:  BRA    126A
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
124E:  CLRF   x18
1250:  MOVLW  3F
1252:  MOVWF  x19
1254:  MOVLB  0
1256:  RCALL  1094
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1258:  MOVLW  01
125A:  MOVLB  5
125C:  MOVWF  x18
125E:  MOVLW  3F
1260:  MOVWF  x19
1262:  MOVLB  0
1264:  RCALL  1094
....................    } 
....................    else 
1266:  BRA    1282
1268:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
126A:  CLRF   x18
126C:  MOVLW  3E
126E:  MOVWF  x19
1270:  MOVLB  0
1272:  RCALL  1094
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
1274:  MOVLW  01
1276:  MOVLB  5
1278:  MOVWF  x18
127A:  MOVLW  3E
127C:  MOVWF  x19
127E:  MOVLB  0
1280:  RCALL  1094
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
1282:  MOVLB  5
1284:  CLRF   x03
1286:  MOVLB  0
1288:  RCALL  10D4
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
128A:  RCALL  112E
....................    #endif 
.................... } 
128C:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
112E:  MOVLB  5
1130:  CLRF   x14
1132:  MOVLW  16
1134:  MOVWF  x13
....................    p2 = displayData.right; 
1136:  MOVLW  02
1138:  MOVWF  x16
113A:  MOVLW  16
113C:  MOVWF  x15
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
113E:  CLRF   x11
1140:  MOVF   x11,W
1142:  SUBLW  07
1144:  BNC   11E2
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1146:  BCF    F93.5
1148:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
114A:  CLRF   x18
114C:  MOVLW  40
114E:  MOVWF  x19
1150:  MOVLB  0
1152:  RCALL  1094
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1154:  MOVLW  01
1156:  MOVLB  5
1158:  MOVWF  x18
115A:  MOVLW  40
115C:  MOVWF  x19
115E:  MOVLB  0
1160:  RCALL  1094
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1162:  MOVLB  5
1164:  MOVF   x11,W
1166:  IORLW  B8
1168:  MOVWF  x17
116A:  CLRF   x18
116C:  MOVWF  x19
116E:  MOVLB  0
1170:  RCALL  1094
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
1172:  MOVLB  5
1174:  MOVF   x11,W
1176:  IORLW  B8
1178:  MOVWF  x17
117A:  MOVLW  01
117C:  MOVWF  x18
117E:  MOVFF  517,519
1182:  MOVLB  0
1184:  RCALL  1094
....................       output_high(GLCD_DI);                     // Set for data 
1186:  BCF    F93.5
1188:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
118A:  MOVLB  5
118C:  CLRF   x12
118E:  MOVF   x12,W
1190:  SUBLW  3F
1192:  BNC   11DE
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
1194:  MOVFF  514,03
1198:  MOVF   x13,W
119A:  INCF   x13,F
119C:  BTFSC  FD8.2
119E:  INCF   x14,F
11A0:  MOVWF  FE9
11A2:  MOVFF  03,FEA
11A6:  MOVFF  FEF,517
11AA:  CLRF   x18
11AC:  MOVFF  517,519
11B0:  MOVLB  0
11B2:  RCALL  1094
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
11B4:  MOVLB  5
11B6:  MOVFF  516,03
11BA:  MOVF   x15,W
11BC:  INCF   x15,F
11BE:  BTFSC  FD8.2
11C0:  INCF   x16,F
11C2:  MOVWF  FE9
11C4:  MOVFF  03,FEA
11C8:  MOVFF  FEF,517
11CC:  MOVLW  01
11CE:  MOVWF  x18
11D0:  MOVFF  517,519
11D4:  MOVLB  0
11D6:  RCALL  1094
....................       } 
11D8:  MOVLB  5
11DA:  INCF   x12,F
11DC:  BRA    118E
....................    } 
11DE:  INCF   x11,F
11E0:  BRA    1140
.................... } 
11E2:  MOVLB  0
11E4:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
128E:  MOVLB  5
1290:  CLRF   x35
1292:  RRCF   x30,W
1294:  MOVWF  x34
1296:  RRCF   x34,F
1298:  RRCF   x34,F
129A:  MOVLW  1F
129C:  ANDWF  x34,F
....................    temp *= 64; 
129E:  RLCF   x34,F
12A0:  RLCF   x35,F
12A2:  RLCF   x34,F
12A4:  RLCF   x35,F
12A6:  RLCF   x34,F
12A8:  RLCF   x35,F
12AA:  RLCF   x34,F
12AC:  RLCF   x35,F
12AE:  RLCF   x34,F
12B0:  RLCF   x35,F
12B2:  RLCF   x34,F
12B4:  RLCF   x35,F
12B6:  MOVLW  C0
12B8:  ANDWF  x34,F
....................    temp += x; 
12BA:  MOVF   x2F,W
12BC:  ADDWF  x34,F
12BE:  MOVLW  00
12C0:  ADDWFC x35,F
....................  
....................    if(x > 63) 
12C2:  MOVF   x2F,W
12C4:  SUBLW  3F
12C6:  BC    12E2
....................    { 
....................       p = displayData.right + temp - 64; 
12C8:  MOVLW  16
12CA:  ADDWF  x34,W
12CC:  MOVWF  x36
12CE:  MOVLW  02
12D0:  ADDWFC x35,W
12D2:  MOVWF  x37
12D4:  MOVLW  40
12D6:  SUBWF  x36,W
12D8:  MOVWF  x32
12DA:  MOVLW  00
12DC:  SUBWFB x37,W
12DE:  MOVWF  x33
....................    } 
....................    else 
12E0:  BRA    12EE
....................    { 
....................       p = displayData.left + temp; 
12E2:  MOVLW  16
12E4:  ADDWF  x34,W
12E6:  MOVWF  x32
12E8:  MOVLW  00
12EA:  ADDWFC x35,W
12EC:  MOVWF  x33
....................    } 
....................  
....................    if(color) 
12EE:  MOVF   x31,F
12F0:  BZ    131C
....................    { 
....................       bit_set(*p, y%8); 
12F2:  MOVFF  533,03
12F6:  MOVFF  532,FE9
12FA:  MOVFF  533,FEA
12FE:  MOVF   x30,W
1300:  ANDLW  07
1302:  MOVWF  x36
1304:  MOVLW  01
1306:  MOVWF  00
1308:  MOVF   x36,W
130A:  MOVWF  01
130C:  BZ    1316
130E:  BCF    FD8.0
1310:  RLCF   00,F
1312:  DECFSZ 01,F
1314:  BRA    130E
1316:  MOVF   00,W
1318:  IORWF  FEF,F
....................    } 
....................    else 
131A:  BRA    1346
....................    { 
....................       bit_clear(*p, y%8); 
131C:  MOVFF  533,03
1320:  MOVFF  532,FE9
1324:  MOVFF  533,FEA
1328:  MOVF   x30,W
132A:  ANDLW  07
132C:  MOVWF  x36
132E:  MOVLW  01
1330:  MOVWF  00
1332:  MOVF   x36,W
1334:  MOVWF  01
1336:  BZ    1340
1338:  BCF    FD8.0
133A:  RLCF   00,F
133C:  DECFSZ 01,F
133E:  BRA    1338
1340:  MOVF   00,W
1342:  XORLW  FF
1344:  ANDWF  FEF,F
....................    } 
.................... } 
1346:  MOVLB  0
1348:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
10D4:  MOVLB  5
10D6:  CLRF   x06
10D8:  MOVLW  16
10DA:  MOVWF  x05
....................    p2 = displayData.right; 
10DC:  MOVLW  02
10DE:  MOVWF  x08
10E0:  MOVLW  16
10E2:  MOVWF  x07
....................    data = 0xFF * color; 
10E4:  MOVF   x03,W
10E6:  MULLW  FF
10E8:  MOVFF  FF3,504
....................  
....................    for(i=0; i<512; ++i) 
10EC:  CLRF   x0A
10EE:  CLRF   x09
10F0:  MOVF   x0A,W
10F2:  SUBLW  01
10F4:  BNC   112A
....................    { 
....................       *p1++ = data; 
10F6:  MOVFF  506,03
10FA:  MOVF   x05,W
10FC:  INCF   x05,F
10FE:  BTFSC  FD8.2
1100:  INCF   x06,F
1102:  MOVWF  FE9
1104:  MOVFF  03,FEA
1108:  MOVFF  504,FEF
....................       *p2++ = data; 
110C:  MOVFF  508,03
1110:  MOVF   x07,W
1112:  INCF   x07,F
1114:  BTFSC  FD8.2
1116:  INCF   x08,F
1118:  MOVWF  FE9
111A:  MOVFF  03,FEA
111E:  MOVFF  504,FEF
....................    } 
1122:  INCF   x09,F
1124:  BTFSC  FD8.2
1126:  INCF   x0A,F
1128:  BRA    10F0
.................... } 
112A:  MOVLB  0
112C:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
1094:  MOVLB  5
1096:  MOVF   x18,F
1098:  BZ    10A0
....................       output_high(GLCD_CS2); 
109A:  BCF    F93.4
109C:  BSF    F8A.4
....................    else 
109E:  BRA    10A4
....................       output_high(GLCD_CS1); 
10A0:  BCF    F93.3
10A2:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
10A4:  BCF    F93.6
10A6:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
10A8:  CLRF   F95
10AA:  MOVFF  519,F8C
....................    delay_cycles(50); 
10AE:  MOVLW  10
10B0:  MOVWF  00
10B2:  DECFSZ 00,F
10B4:  BRA    10B2
10B6:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
10B8:  BCF    F93.7
10BA:  BSF    F8A.7
....................    delay_cycles(250); 
10BC:  MOVLW  53
10BE:  MOVWF  00
10C0:  DECFSZ 00,F
10C2:  BRA    10C0
....................    output_low(GLCD_E); 
10C4:  BCF    F93.7
10C6:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
10C8:  BCF    F93.3
10CA:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
10CC:  BCF    F93.4
10CE:  BCF    F8A.4
.................... } 
10D0:  MOVLB  0
10D2:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
1502:  MOVLW  01
1504:  MOVLB  5
1506:  MOVWF  x28
1508:  MOVWF  x29
150A:  CLRF   x2E
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
150C:  MOVF   x1F,W
150E:  SUBWF  x21,W
1510:  MOVWF  x2F
1512:  MOVF   x2F,W
1514:  BTFSS  x2F.7
1516:  BRA    151E
1518:  MOVLW  00
151A:  BSF    FD8.0
151C:  SUBFWB x2F,W
151E:  CLRF   03
1520:  MOVWF  x26
1522:  MOVFF  03,527
....................    dy = abs((signed int8)(y2 - y1)); 
1526:  MOVF   x20,W
1528:  SUBWF  x22,W
152A:  MOVWF  x2F
152C:  MOVF   x2F,W
152E:  BTFSS  x2F.7
1530:  BRA    1538
1532:  MOVLW  00
1534:  BSF    FD8.0
1536:  SUBFWB x2F,W
1538:  CLRF   03
153A:  MOVWF  x24
153C:  MOVFF  03,525
....................    #endif 
....................  
....................    if(x1 > x2) 
1540:  MOVF   x1F,W
1542:  SUBWF  x21,W
1544:  BC    154A
....................       addx = -1; 
1546:  MOVLW  FF
1548:  MOVWF  x28
....................    if(y1 > y2) 
154A:  MOVF   x20,W
154C:  SUBWF  x22,W
154E:  BC    1554
....................       addy = -1; 
1550:  MOVLW  FF
1552:  MOVWF  x29
....................  
....................    if(dx >= dy) 
1554:  MOVF   x25,W
1556:  SUBWF  x27,W
1558:  BNC   15D0
155A:  BNZ   1562
155C:  MOVF   x24,W
155E:  SUBWF  x26,W
1560:  BNC   15D0
....................    { 
....................       dy *= 2; 
1562:  BCF    FD8.0
1564:  RLCF   x24,F
1566:  RLCF   x25,F
....................       P = dy - dx; 
1568:  MOVF   x26,W
156A:  SUBWF  x24,W
156C:  MOVWF  00
156E:  MOVF   x27,W
1570:  SUBWFB x25,W
1572:  MOVFF  00,52A
1576:  MOVWF  x2B
....................       diff = P - dx; 
1578:  MOVF   x26,W
157A:  SUBWF  x2A,W
157C:  MOVWF  x2C
157E:  MOVF   x27,W
1580:  SUBWFB x2B,W
1582:  MOVWF  x2D
....................  
....................       for(; i<=dx; ++i) 
1584:  MOVF   x27,F
1586:  BNZ   158E
1588:  MOVF   x2E,W
158A:  SUBWF  x26,W
158C:  BNC   15CE
....................       { 
....................          glcd_pixel(x1, y1, color); 
158E:  MOVFF  51F,52F
1592:  MOVFF  520,530
1596:  MOVFF  523,531
159A:  MOVLB  0
159C:  RCALL  128E
....................  
....................          if(P < 0) 
159E:  MOVLB  5
15A0:  BTFSC  x2B.7
15A2:  BRA    15A6
15A4:  BRA    15B6
....................          { 
....................             P  += dy; 
15A6:  MOVF   x24,W
15A8:  ADDWF  x2A,F
15AA:  MOVF   x25,W
15AC:  ADDWFC x2B,F
....................             x1 += addx; 
15AE:  MOVF   x28,W
15B0:  ADDWF  x1F,W
15B2:  MOVWF  x1F
....................          } 
....................          else 
15B4:  BRA    15CA
....................          { 
....................             P  += diff; 
15B6:  MOVF   x2C,W
15B8:  ADDWF  x2A,F
15BA:  MOVF   x2D,W
15BC:  ADDWFC x2B,F
....................             x1 += addx; 
15BE:  MOVF   x28,W
15C0:  ADDWF  x1F,W
15C2:  MOVWF  x1F
....................             y1 += addy; 
15C4:  MOVF   x29,W
15C6:  ADDWF  x20,W
15C8:  MOVWF  x20
....................          } 
....................       } 
15CA:  INCF   x2E,F
15CC:  BRA    1584
....................    } 
....................    else 
15CE:  BRA    163C
....................    { 
....................       dx *= 2; 
15D0:  BCF    FD8.0
15D2:  RLCF   x26,F
15D4:  RLCF   x27,F
....................       P = dx - dy; 
15D6:  MOVF   x24,W
15D8:  SUBWF  x26,W
15DA:  MOVWF  00
15DC:  MOVF   x25,W
15DE:  SUBWFB x27,W
15E0:  MOVFF  00,52A
15E4:  MOVWF  x2B
....................       diff = P - dy; 
15E6:  MOVF   x24,W
15E8:  SUBWF  x2A,W
15EA:  MOVWF  x2C
15EC:  MOVF   x25,W
15EE:  SUBWFB x2B,W
15F0:  MOVWF  x2D
....................  
....................       for(; i<=dy; ++i) 
15F2:  MOVF   x25,F
15F4:  BNZ   15FC
15F6:  MOVF   x2E,W
15F8:  SUBWF  x24,W
15FA:  BNC   163C
....................       { 
....................          glcd_pixel(x1, y1, color); 
15FC:  MOVFF  51F,52F
1600:  MOVFF  520,530
1604:  MOVFF  523,531
1608:  MOVLB  0
160A:  RCALL  128E
....................  
....................          if(P < 0) 
160C:  MOVLB  5
160E:  BTFSC  x2B.7
1610:  BRA    1614
1612:  BRA    1624
....................          { 
....................             P  += dx; 
1614:  MOVF   x26,W
1616:  ADDWF  x2A,F
1618:  MOVF   x27,W
161A:  ADDWFC x2B,F
....................             y1 += addy; 
161C:  MOVF   x29,W
161E:  ADDWF  x20,W
1620:  MOVWF  x20
....................          } 
....................          else 
1622:  BRA    1638
....................          { 
....................             P  += diff; 
1624:  MOVF   x2C,W
1626:  ADDWF  x2A,F
1628:  MOVF   x2D,W
162A:  ADDWFC x2B,F
....................             x1 += addx; 
162C:  MOVF   x28,W
162E:  ADDWF  x1F,W
1630:  MOVWF  x1F
....................             y1 += addy; 
1632:  MOVF   x29,W
1634:  ADDWF  x20,W
1636:  MOVWF  x20
....................          } 
....................       } 
1638:  INCF   x2E,F
163A:  BRA    15F2
....................    } 
.................... } 
163C:  MOVLB  0
163E:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1640:  MOVLB  5
1642:  MOVF   x18,F
1644:  BZ    16A2
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1646:  MOVF   x16,W
1648:  SUBWF  x14,W
164A:  BC    1656
....................       { 
....................          xmin = x1; 
164C:  MOVFF  514,51B
....................          xmax = x2; 
1650:  MOVFF  516,51C
....................       } 
....................       else 
1654:  BRA    165E
....................       { 
....................          xmin = x2; 
1656:  MOVFF  516,51B
....................          xmax = x1; 
165A:  MOVFF  514,51C
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
165E:  MOVF   x17,W
1660:  SUBWF  x15,W
1662:  BC    166E
....................       { 
....................          ymin = y1; 
1664:  MOVFF  515,51D
....................          ymax = y2; 
1668:  MOVFF  517,51E
....................       } 
....................       else 
166C:  BRA    1676
....................       { 
....................          ymin = y2; 
166E:  MOVFF  517,51D
....................          ymax = y1; 
1672:  MOVFF  515,51E
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
1676:  MOVF   x1B,W
1678:  SUBWF  x1C,W
167A:  BNC   16A0
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
167C:  MOVFF  51D,51A
1680:  MOVF   x1A,W
1682:  SUBWF  x1E,W
1684:  BNC   169C
....................          { 
....................             glcd_pixel(xmin, i, color); 
1686:  MOVFF  51B,52F
168A:  MOVFF  51A,530
168E:  MOVFF  519,531
1692:  MOVLB  0
1694:  RCALL  128E
....................          } 
1696:  MOVLB  5
1698:  INCF   x1A,F
169A:  BRA    1680
....................       } 
169C:  INCF   x1B,F
169E:  BRA    1676
....................    } 
....................    else 
16A0:  BRA    16FE
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
16A2:  MOVFF  514,51F
16A6:  MOVFF  515,520
16AA:  MOVFF  516,521
16AE:  MOVFF  515,522
16B2:  MOVFF  519,523
16B6:  MOVLB  0
16B8:  RCALL  1502
....................       glcd_line(x1, y2, x2, y2, color); 
16BA:  MOVFF  514,51F
16BE:  MOVFF  517,520
16C2:  MOVFF  516,521
16C6:  MOVFF  517,522
16CA:  MOVFF  519,523
16CE:  RCALL  1502
....................       glcd_line(x1, y1, x1, y2, color); 
16D0:  MOVFF  514,51F
16D4:  MOVFF  515,520
16D8:  MOVFF  514,521
16DC:  MOVFF  517,522
16E0:  MOVFF  519,523
16E4:  RCALL  1502
....................       glcd_line(x2, y1, x2, y2, color); 
16E6:  MOVFF  516,51F
16EA:  MOVFF  515,520
16EE:  MOVFF  516,521
16F2:  MOVFF  517,522
16F6:  MOVFF  519,523
16FA:  RCALL  1502
16FC:  MOVLB  5
....................    } 
.................... } 
16FE:  MOVLB  0
1700:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
223A:  MOVLB  5
223C:  CLRF   x07
....................    b = radius; 
223E:  MOVFF  504,508
....................    P = 1 - radius; 
2242:  MOVLW  01
2244:  BSF    FD8.0
2246:  SUBFWB x04,W
2248:  MOVWF  x09
....................  
....................    do 
....................    { 
....................       if(fill) 
224A:  MOVF   x05,F
224C:  BZ    2318
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
224E:  MOVF   x07,W
2250:  SUBWF  x02,W
2252:  MOVWF  x0A
2254:  MOVF   x08,W
2256:  ADDWF  x03,W
2258:  MOVWF  x0B
225A:  MOVF   x07,W
225C:  ADDWF  x02,W
225E:  MOVWF  x0C
2260:  MOVF   x08,W
2262:  ADDWF  x03,W
2264:  MOVWF  x0D
2266:  MOVFF  50A,51F
226A:  MOVFF  50B,520
226E:  MOVFF  50C,521
2272:  MOVWF  x22
2274:  MOVFF  506,523
2278:  MOVLB  0
227A:  CALL   1502
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
227E:  MOVLB  5
2280:  MOVF   x07,W
2282:  SUBWF  x02,W
2284:  MOVWF  x0A
2286:  MOVF   x08,W
2288:  SUBWF  x03,W
228A:  MOVWF  x0B
228C:  MOVF   x07,W
228E:  ADDWF  x02,W
2290:  MOVWF  x0C
2292:  MOVF   x08,W
2294:  SUBWF  x03,W
2296:  MOVWF  x0D
2298:  MOVFF  50A,51F
229C:  MOVFF  50B,520
22A0:  MOVFF  50C,521
22A4:  MOVWF  x22
22A6:  MOVFF  506,523
22AA:  MOVLB  0
22AC:  CALL   1502
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
22B0:  MOVLB  5
22B2:  MOVF   x08,W
22B4:  SUBWF  x02,W
22B6:  MOVWF  x0A
22B8:  MOVF   x07,W
22BA:  ADDWF  x03,W
22BC:  MOVWF  x0B
22BE:  MOVF   x08,W
22C0:  ADDWF  x02,W
22C2:  MOVWF  x0C
22C4:  MOVF   x07,W
22C6:  ADDWF  x03,W
22C8:  MOVWF  x0D
22CA:  MOVFF  50A,51F
22CE:  MOVFF  50B,520
22D2:  MOVFF  50C,521
22D6:  MOVWF  x22
22D8:  MOVFF  506,523
22DC:  MOVLB  0
22DE:  CALL   1502
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
22E2:  MOVLB  5
22E4:  MOVF   x08,W
22E6:  SUBWF  x02,W
22E8:  MOVWF  x0A
22EA:  MOVF   x07,W
22EC:  SUBWF  x03,W
22EE:  MOVWF  x0B
22F0:  MOVF   x08,W
22F2:  ADDWF  x02,W
22F4:  MOVWF  x0C
22F6:  MOVF   x07,W
22F8:  SUBWF  x03,W
22FA:  MOVWF  x0D
22FC:  MOVFF  50A,51F
2300:  MOVFF  50B,520
2304:  MOVFF  50C,521
2308:  MOVWF  x22
230A:  MOVFF  506,523
230E:  MOVLB  0
2310:  CALL   1502
....................       } 
....................       else 
2314:  BRA    2406
2316:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2318:  MOVF   x02,W
231A:  ADDWF  x07,W
231C:  MOVWF  x0A
231E:  MOVF   x03,W
2320:  ADDWF  x08,W
2322:  MOVWF  x0B
2324:  MOVFF  50A,52F
2328:  MOVWF  x30
232A:  MOVFF  506,531
232E:  MOVLB  0
2330:  CALL   128E
....................          glcd_pixel(b+x, a+y, color); 
2334:  MOVLB  5
2336:  MOVF   x02,W
2338:  ADDWF  x08,W
233A:  MOVWF  x0A
233C:  MOVF   x03,W
233E:  ADDWF  x07,W
2340:  MOVWF  x0B
2342:  MOVFF  50A,52F
2346:  MOVWF  x30
2348:  MOVFF  506,531
234C:  MOVLB  0
234E:  CALL   128E
....................          glcd_pixel(x-a, b+y, color); 
2352:  MOVLB  5
2354:  MOVF   x07,W
2356:  SUBWF  x02,W
2358:  MOVWF  x0A
235A:  MOVF   x03,W
235C:  ADDWF  x08,W
235E:  MOVWF  x0B
2360:  MOVFF  50A,52F
2364:  MOVWF  x30
2366:  MOVFF  506,531
236A:  MOVLB  0
236C:  CALL   128E
....................          glcd_pixel(x-b, a+y, color); 
2370:  MOVLB  5
2372:  MOVF   x08,W
2374:  SUBWF  x02,W
2376:  MOVWF  x0A
2378:  MOVF   x03,W
237A:  ADDWF  x07,W
237C:  MOVWF  x0B
237E:  MOVFF  50A,52F
2382:  MOVWF  x30
2384:  MOVFF  506,531
2388:  MOVLB  0
238A:  CALL   128E
....................          glcd_pixel(b+x, y-a, color); 
238E:  MOVLB  5
2390:  MOVF   x02,W
2392:  ADDWF  x08,W
2394:  MOVWF  x0A
2396:  MOVF   x07,W
2398:  SUBWF  x03,W
239A:  MOVWF  x0B
239C:  MOVFF  50A,52F
23A0:  MOVWF  x30
23A2:  MOVFF  506,531
23A6:  MOVLB  0
23A8:  CALL   128E
....................          glcd_pixel(a+x, y-b, color); 
23AC:  MOVLB  5
23AE:  MOVF   x02,W
23B0:  ADDWF  x07,W
23B2:  MOVWF  x0A
23B4:  MOVF   x08,W
23B6:  SUBWF  x03,W
23B8:  MOVWF  x0B
23BA:  MOVFF  50A,52F
23BE:  MOVWF  x30
23C0:  MOVFF  506,531
23C4:  MOVLB  0
23C6:  CALL   128E
....................          glcd_pixel(x-a, y-b, color); 
23CA:  MOVLB  5
23CC:  MOVF   x07,W
23CE:  SUBWF  x02,W
23D0:  MOVWF  x0A
23D2:  MOVF   x08,W
23D4:  SUBWF  x03,W
23D6:  MOVWF  x0B
23D8:  MOVFF  50A,52F
23DC:  MOVWF  x30
23DE:  MOVFF  506,531
23E2:  MOVLB  0
23E4:  CALL   128E
....................          glcd_pixel(x-b, y-a, color); 
23E8:  MOVLB  5
23EA:  MOVF   x08,W
23EC:  SUBWF  x02,W
23EE:  MOVWF  x0A
23F0:  MOVF   x07,W
23F2:  SUBWF  x03,W
23F4:  MOVWF  x0B
23F6:  MOVFF  50A,52F
23FA:  MOVWF  x30
23FC:  MOVFF  506,531
2400:  MOVLB  0
2402:  CALL   128E
....................       } 
....................  
....................       if(P < 0) 
2406:  MOVLB  5
2408:  BTFSC  x09.7
240A:  BRA    240E
240C:  BRA    242A
....................          P += 3 + 2 * a++; 
240E:  MOVF   x07,W
2410:  INCF   x07,F
2412:  MOVWF  x0A
2414:  MOVLW  02
2416:  MOVWF  x0B
2418:  MOVFF  50A,50C
241C:  MOVLB  0
241E:  RCALL  21EC
2420:  MOVF   01,W
2422:  ADDLW  03
2424:  MOVLB  5
2426:  ADDWF  x09,F
....................       else 
2428:  BRA    244C
....................          P += 5 + 2 * (a++ - b--); 
242A:  MOVF   x07,W
242C:  INCF   x07,F
242E:  MOVWF  x0A
2430:  MOVF   x08,W
2432:  DECF   x08,F
2434:  SUBWF  x0A,W
2436:  MOVWF  x0A
2438:  MOVLW  02
243A:  MOVWF  x0B
243C:  MOVFF  50A,50C
2440:  MOVLB  0
2442:  RCALL  21EC
2444:  MOVF   01,W
2446:  ADDLW  05
2448:  MOVLB  5
244A:  ADDWF  x09,F
....................     } while(a <= b); 
244C:  MOVF   x07,W
244E:  XORLW  80
2450:  MOVWF  00
2452:  MOVF   x08,W
2454:  XORLW  80
2456:  SUBWF  00,W
2458:  BTFSC  FD8.2
245A:  BRA    224A
245C:  BTFSS  FD8.0
245E:  BRA    224A
.................... } 
2460:  MOVLB  0
2462:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
134A:  MOVFF  516,03
134E:  MOVLB  5
1350:  MOVFF  515,FE9
1354:  MOVFF  516,FEA
1358:  MOVF   FEF,F
135A:  BTFSC  FD8.2
135C:  BRA    14FE
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
135E:  MOVFF  516,03
1362:  MOVFF  515,FE9
1366:  MOVFF  516,FEA
136A:  MOVF   FEF,W
136C:  SUBLW  52
136E:  BNC   13BE
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1370:  MOVFF  516,03
1374:  MOVFF  515,FE9
1378:  MOVFF  516,FEA
137C:  MOVLW  20
137E:  SUBWF  FEF,W
1380:  MULLW  05
1382:  MOVF   FF3,W
1384:  CLRF   03
1386:  MOVWF  x22
1388:  MOVLW  05
138A:  MOVWF  FEA
138C:  MOVLW  1D
138E:  MOVWF  FE9
1390:  CLRF   x26
1392:  MOVFF  522,525
1396:  MOVFF  FF2,523
139A:  BCF    FF2.7
139C:  MOVLW  05
139E:  MOVWF  01
13A0:  CLRF   FF7
13A2:  MOVF   x22,W
13A4:  MOVLB  0
13A6:  CALL   0096
13AA:  TBLRD*-
13AC:  TBLRD*+
13AE:  MOVFF  FF5,FEE
13B2:  DECFSZ 01,F
13B4:  BRA    13AC
13B6:  MOVLB  5
13B8:  BTFSC  x23.7
13BA:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
13BC:  BRA    1428
13BE:  MOVFF  516,03
13C2:  MOVFF  515,FE9
13C6:  MOVFF  516,FEA
13CA:  MOVF   FEF,W
13CC:  SUBLW  7E
13CE:  BNC   141E
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
13D0:  MOVFF  516,03
13D4:  MOVFF  515,FE9
13D8:  MOVFF  516,FEA
13DC:  MOVLW  53
13DE:  SUBWF  FEF,W
13E0:  MULLW  05
13E2:  MOVF   FF3,W
13E4:  CLRF   03
13E6:  MOVWF  x22
13E8:  MOVLW  05
13EA:  MOVWF  FEA
13EC:  MOVLW  1D
13EE:  MOVWF  FE9
13F0:  CLRF   x26
13F2:  MOVFF  522,525
13F6:  MOVFF  FF2,523
13FA:  BCF    FF2.7
13FC:  MOVLW  05
13FE:  MOVWF  01
1400:  CLRF   FF7
1402:  MOVF   x22,W
1404:  MOVLB  0
1406:  CALL   01B0
140A:  TBLRD*-
140C:  TBLRD*+
140E:  MOVFF  FF5,FEE
1412:  DECFSZ 01,F
1414:  BRA    140C
1416:  MOVLB  5
1418:  BTFSC  x23.7
141A:  BSF    FF2.7
....................       else 
141C:  BRA    1428
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
141E:  CLRF   x1D
1420:  CLRF   x1E
1422:  CLRF   x1F
1424:  CLRF   x20
1426:  CLRF   x21
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1428:  MOVFF  516,03
142C:  MOVF   x15,W
142E:  MOVWF  FE9
1430:  MOVFF  03,FEA
1434:  MOVF   FEF,W
1436:  XORLW  0A
1438:  MOVLB  0
143A:  BZ    1442
143C:  XORLW  07
143E:  BZ    1452
1440:  BRA    1458
....................          case '\n': 
....................             y += 7*size + 1; 
1442:  MOVLB  5
1444:  MOVF   x17,W
1446:  MULLW  07
1448:  MOVF   FF3,W
144A:  ADDLW  01
144C:  ADDWF  x14,F
....................             continue; 
144E:  BRA    14F0
1450:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1452:  MOVLB  5
1454:  CLRF   x13
....................             continue; 
1456:  BRA    14F0
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1458:  MOVLB  5
145A:  MOVF   x17,W
145C:  MULLW  05
145E:  MOVF   FF3,W
1460:  ADDWF  x13,W
1462:  SUBLW  7F
1464:  BC    1472
....................       { 
....................          x = 0;                           // Set x at far left position 
1466:  CLRF   x13
....................          y += 7*size + 1;                 // Set y at next position down 
1468:  MOVF   x17,W
146A:  MULLW  07
146C:  MOVF   FF3,W
146E:  ADDLW  01
1470:  ADDWF  x14,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1472:  CLRF   x19
1474:  MOVF   x19,W
1476:  SUBLW  04
1478:  BNC   14F0
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
147A:  CLRF   x1A
147C:  MOVF   x1A,W
147E:  SUBLW  06
1480:  BNC   14E8
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1482:  CLRF   03
1484:  MOVF   x19,W
1486:  ADDLW  1D
1488:  MOVWF  FE9
148A:  MOVLW  05
148C:  ADDWFC 03,W
148E:  MOVWF  FEA
1490:  MOVFF  FEF,522
1494:  MOVFF  522,00
1498:  MOVF   x1A,W
149A:  MOVWF  01
149C:  BZ    14A6
149E:  BCF    FD8.0
14A0:  RRCF   00,F
14A2:  DECFSZ 01,F
14A4:  BRA    149E
14A6:  BTFSS  00.0
14A8:  BRA    14E4
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
14AA:  CLRF   x1B
14AC:  MOVF   x17,W
14AE:  SUBWF  x1B,W
14B0:  BC    14E4
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
14B2:  CLRF   x1C
14B4:  MOVF   x17,W
14B6:  SUBWF  x1C,W
14B8:  BC    14E0
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
14BA:  MOVF   x1C,W
14BC:  ADDWF  x13,W
14BE:  MOVWF  x22
14C0:  MOVF   x1A,W
14C2:  MULWF  x17
14C4:  MOVF   FF3,W
14C6:  ADDWF  x14,W
14C8:  ADDWF  x1B,W
14CA:  MOVWF  x23
14CC:  MOVFF  522,52F
14D0:  MOVWF  x30
14D2:  MOVFF  518,531
14D6:  MOVLB  0
14D8:  RCALL  128E
....................                   } 
14DA:  MOVLB  5
14DC:  INCF   x1C,F
14DE:  BRA    14B4
....................                } 
14E0:  INCF   x1B,F
14E2:  BRA    14AC
....................             } 
....................          } 
14E4:  INCF   x1A,F
14E6:  BRA    147C
....................       } 
14E8:  INCF   x19,F
14EA:  MOVF   x17,W
14EC:  ADDWF  x13,F
14EE:  BRA    1474
....................    } 
14F0:  INCF   x15,F
14F2:  BTFSC  FD8.2
14F4:  INCF   x16,F
14F6:  INCF   x13,F
14F8:  MOVLB  0
14FA:  BRA    134A
14FC:  MOVLB  5
.................... } 
14FE:  MOVLB  0
1500:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0,ciclosecado=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=10,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
1702:  MOVLB  5
1704:  MOVFF  502,01
1708:  MOVFF  503,03
170C:  MOVFF  502,508
1710:  MOVFF  503,509
1714:  MOVLW  04
1716:  MOVWF  FEA
1718:  MOVLW  E2
171A:  MOVWF  FE9
171C:  MOVFF  503,FE2
1720:  MOVFF  502,FE1
1724:  MOVF   FE7,F
1726:  MOVFF  FE6,FEE
172A:  BNZ   1724
....................    if(sombreado==2) 
172C:  MOVF   x06,W
172E:  SUBLW  02
1730:  BNZ   175A
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1732:  MOVLW  01
1734:  ADDWF  x04,W
1736:  MOVWF  x08
1738:  MOVLW  01
173A:  ADDWF  x05,W
173C:  MOVWF  x09
173E:  MOVFF  508,513
1742:  MOVWF  x14
1744:  MOVLW  04
1746:  MOVWF  x16
1748:  MOVLW  E2
174A:  MOVWF  x15
174C:  MOVFF  507,517
1750:  MOVLW  01
1752:  MOVWF  x18
1754:  MOVLB  0
1756:  RCALL  134A
1758:  MOVLB  5
....................    if(sombreado==1) 
175A:  DECFSZ x06,W
175C:  BRA    17A8
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
175E:  MOVF   x07,W
1760:  MULLW  08
1762:  MOVF   FF3,W
1764:  ADDWF  x05,W
1766:  MOVWF  x08
1768:  CLRF   x14
176A:  MOVFF  505,515
176E:  MOVLW  7F
1770:  MOVWF  x16
1772:  MOVFF  508,517
1776:  MOVLW  01
1778:  MOVWF  x18
177A:  MOVWF  x19
177C:  MOVLB  0
177E:  RCALL  1640
1780:  MOVLW  01
1782:  MOVLB  5
1784:  ADDWF  x04,W
1786:  MOVWF  x08
1788:  MOVLW  01
178A:  ADDWF  x05,W
178C:  MOVWF  x09
178E:  MOVFF  508,513
1792:  MOVWF  x14
1794:  MOVLW  04
1796:  MOVWF  x16
1798:  MOVLW  E2
179A:  MOVWF  x15
179C:  MOVFF  507,517
17A0:  CLRF   x18
17A2:  MOVLB  0
17A4:  RCALL  134A
17A6:  MOVLB  5
....................    if(sombreado==0) 
17A8:  MOVF   x06,F
17AA:  BNZ   17F6
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
17AC:  MOVF   x07,W
17AE:  MULLW  08
17B0:  MOVF   FF3,W
17B2:  ADDWF  x05,W
17B4:  MOVWF  x08
17B6:  CLRF   x14
17B8:  MOVFF  505,515
17BC:  MOVLW  7F
17BE:  MOVWF  x16
17C0:  MOVFF  508,517
17C4:  MOVLW  01
17C6:  MOVWF  x18
17C8:  CLRF   x19
17CA:  MOVLB  0
17CC:  RCALL  1640
17CE:  MOVLW  01
17D0:  MOVLB  5
17D2:  ADDWF  x04,W
17D4:  MOVWF  x08
17D6:  MOVLW  01
17D8:  ADDWF  x05,W
17DA:  MOVWF  x09
17DC:  MOVFF  508,513
17E0:  MOVWF  x14
17E2:  MOVLW  04
17E4:  MOVWF  x16
17E6:  MOVLW  E2
17E8:  MOVWF  x15
17EA:  MOVFF  507,517
17EE:  MOVLW  01
17F0:  MOVWF  x18
17F2:  MOVLB  0
17F4:  RCALL  134A
....................    glcd_update(); 
17F6:  MOVLB  0
17F8:  RCALL  112E
.................... } 
17FA:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
24EA:  MOVLB  5
24EC:  MOVF   x06,W
24EE:  SUBLW  02
24F0:  BNZ   2562
....................    { 
....................       sprintf(voltage, "%03u", digito); 
24F2:  MOVLW  05
24F4:  MOVWF  x01
24F6:  MOVLW  08
24F8:  MOVWF  x00
24FA:  MOVFF  503,511
24FE:  MOVLW  03
2500:  MOVWF  x12
2502:  MOVLB  0
2504:  RCALL  2464
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2506:  MOVLB  5
2508:  MOVF   x07,W
250A:  MULLW  12
250C:  MOVF   FF3,W
250E:  ADDWF  x04,W
2510:  MOVWF  x11
2512:  MOVF   x07,W
2514:  MULLW  08
2516:  MOVF   FF3,W
2518:  ADDWF  x05,W
251A:  MOVWF  x12
251C:  MOVFF  504,514
2520:  MOVFF  505,515
2524:  MOVFF  511,516
2528:  MOVWF  x17
252A:  MOVLW  01
252C:  MOVWF  x18
252E:  MOVWF  x19
2530:  MOVLB  0
2532:  CALL   1640
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2536:  MOVLW  01
2538:  MOVLB  5
253A:  ADDWF  x04,W
253C:  MOVWF  x11
253E:  MOVLW  01
2540:  ADDWF  x05,W
2542:  MOVWF  x12
2544:  MOVFF  511,513
2548:  MOVWF  x14
254A:  MOVLW  05
254C:  MOVWF  x16
254E:  MOVLW  08
2550:  MOVWF  x15
2552:  MOVFF  507,517
2556:  CLRF   x18
2558:  MOVLB  0
255A:  CALL   134A
....................    } 
....................    else 
255E:  BRA    2630
2560:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
2562:  MOVLW  05
2564:  MOVWF  x01
2566:  MOVLW  08
2568:  MOVWF  x00
256A:  MOVFF  503,511
256E:  MOVLW  1B
2570:  MOVWF  x12
2572:  MOVLB  0
2574:  RCALL  2464
....................     
....................       if(sombreado==1) 
2576:  MOVLB  5
2578:  DECFSZ x06,W
257A:  BRA    25D4
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
257C:  MOVF   x07,W
257E:  MULLW  05
2580:  MOVF   FF3,W
2582:  ADDWF  x04,W
2584:  MOVWF  x11
2586:  MOVF   x07,W
2588:  MULLW  08
258A:  MOVF   FF3,W
258C:  ADDWF  x05,W
258E:  MOVWF  x12
2590:  MOVFF  504,514
2594:  MOVFF  505,515
2598:  MOVFF  511,516
259C:  MOVWF  x17
259E:  MOVLW  01
25A0:  MOVWF  x18
25A2:  MOVWF  x19
25A4:  MOVLB  0
25A6:  CALL   1640
25AA:  MOVLW  01
25AC:  MOVLB  5
25AE:  ADDWF  x04,W
25B0:  MOVWF  x11
25B2:  MOVLW  01
25B4:  ADDWF  x05,W
25B6:  MOVWF  x12
25B8:  MOVFF  511,513
25BC:  MOVWF  x14
25BE:  MOVLW  05
25C0:  MOVWF  x16
25C2:  MOVLW  08
25C4:  MOVWF  x15
25C6:  MOVFF  507,517
25CA:  CLRF   x18
25CC:  MOVLB  0
25CE:  CALL   134A
25D2:  MOVLB  5
....................       if(sombreado==0) 
25D4:  MOVF   x06,F
25D6:  BNZ   2632
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
25D8:  MOVF   x07,W
25DA:  MULLW  05
25DC:  MOVF   FF3,W
25DE:  ADDWF  x04,W
25E0:  MOVWF  x11
25E2:  MOVF   x07,W
25E4:  MULLW  08
25E6:  MOVF   FF3,W
25E8:  ADDWF  x05,W
25EA:  MOVWF  x12
25EC:  MOVFF  504,514
25F0:  MOVFF  505,515
25F4:  MOVFF  511,516
25F8:  MOVWF  x17
25FA:  MOVLW  01
25FC:  MOVWF  x18
25FE:  CLRF   x19
2600:  MOVLB  0
2602:  CALL   1640
2606:  MOVLW  01
2608:  MOVLB  5
260A:  ADDWF  x04,W
260C:  MOVWF  x11
260E:  MOVLW  01
2610:  ADDWF  x05,W
2612:  MOVWF  x12
2614:  MOVFF  511,513
2618:  MOVWF  x14
261A:  MOVLW  05
261C:  MOVWF  x16
261E:  MOVLW  08
2620:  MOVWF  x15
2622:  MOVFF  507,517
2626:  MOVLW  01
2628:  MOVWF  x18
262A:  MOVLB  0
262C:  CALL   134A
2630:  MOVLB  5
....................    } 
....................    glcd_update(); 
2632:  MOVLB  0
2634:  CALL   112E
.................... } 
2638:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
213E:  MOVLB  5
2140:  MOVF   x02,W
2142:  SUBLW  05
2144:  BNZ   21E8
....................    for( i = 0 ; i < 64 ; i ++ ) 
2146:  CLRF   x03
2148:  MOVF   x03,W
214A:  SUBLW  3F
214C:  BNC   21E8
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
214E:  CLRF   x04
2150:  MOVF   x04,W
2152:  SUBLW  0F
2154:  BNC   21E4
....................       {     
....................          for(k=7;k>-1;k--) 
2156:  MOVLW  07
2158:  MOVWF  x05
215A:  MOVF   x05,W
215C:  XORLW  80
215E:  SUBLW  7F
2160:  BC    21E0
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
2162:  CLRF   x07
2164:  MOVFF  503,506
2168:  CLRF   x09
216A:  MOVLW  10
216C:  MOVWF  x08
216E:  MOVLB  0
2170:  BRA    211A
2172:  MOVFF  02,507
2176:  MOVFF  01,506
217A:  MOVLB  5
217C:  MOVF   x04,W
217E:  ADDWF  01,W
2180:  MOVWF  01
2182:  MOVLW  00
2184:  ADDWFC 02,W
2186:  MOVWF  03
2188:  MOVF   01,W
218A:  MOVFF  FF2,506
218E:  BCF    FF2.7
2190:  MOVFF  03,FF7
2194:  MOVLB  0
2196:  CALL   02A6
219A:  MOVLB  5
219C:  BTFSC  x06.7
219E:  BSF    FF2.7
21A0:  MOVWF  x06
21A2:  MOVLW  07
21A4:  BSF    FD8.0
21A6:  SUBFWB x05,W
21A8:  MOVWF  x07
21AA:  MOVFF  506,00
21AE:  MOVF   x07,W
21B0:  MOVWF  01
21B2:  BZ    21BC
21B4:  BCF    FD8.0
21B6:  RRCF   00,F
21B8:  DECFSZ 01,F
21BA:  BRA    21B4
21BC:  BTFSS  00.0
21BE:  BRA    21DC
....................                glcd_pixel( j*8+k,i, ON ); 
21C0:  MOVF   x04,W
21C2:  MULLW  08
21C4:  MOVF   FF3,W
21C6:  ADDWF  x05,W
21C8:  MOVWF  x06
21CA:  MOVWF  x2F
21CC:  MOVFF  503,530
21D0:  MOVLW  01
21D2:  MOVWF  x31
21D4:  MOVLB  0
21D6:  CALL   128E
21DA:  MOVLB  5
....................          }   
21DC:  DECF   x05,F
21DE:  BRA    215A
....................       } 
21E0:  INCF   x04,F
21E2:  BRA    2150
....................    } 
21E4:  INCF   x03,F
21E6:  BRA    2148
....................    } 
....................     
.................... } 
21E8:  MOVLB  0
21EA:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0F9C:  MOVLW  15
0F9E:  MOVWF  FCF
0FA0:  MOVLW  A0
0FA2:  MOVWF  FCE
....................    tiempos++; 
0FA4:  MOVLB  4
0FA6:  INCF   xAD,F
0FA8:  BTFSC  FD8.2
0FAA:  INCF   xAE,F
....................    tiempos3++; 
0FAC:  INCF   xAF,F
0FAE:  BTFSC  FD8.2
0FB0:  INCF   xB0,F
....................    tiempoctrl++; 
0FB2:  INCF   xB1,F
0FB4:  BTFSC  FD8.2
0FB6:  INCF   xB2,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0FB8:  MOVF   xB0,F
0FBA:  BNZ   0FC2
0FBC:  MOVF   xAF,W
0FBE:  SUBLW  27
0FC0:  BC    0FD4
0FC2:  MOVF   xAB,W
0FC4:  SUBLW  02
0FC6:  BNZ   0FD4
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0FC8:  CLRF   xB0
0FCA:  CLRF   xAF
0FCC:  BSF    x96.7
0FCE:  INCF   xB7,F
0FD0:  BTFSC  FD8.2
0FD2:  INCF   xB8,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0FD4:  MOVF   xAD,W
0FD6:  SUBLW  C8
0FD8:  BNZ   1062
0FDA:  MOVF   xAE,F
0FDC:  BNZ   1062
....................    {tiempos=0;Lectura=1;tinicio++; 
0FDE:  CLRF   xAE
0FE0:  CLRF   xAD
0FE2:  BSF    x96.6
0FE4:  INCF   xB9,F
0FE6:  BTFSC  FD8.2
0FE8:  INCF   xBA,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0FEA:  DECFSZ xA9,W
0FEC:  BRA    1026
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0FEE:  INCF   xBF,F
....................       if(Testerilizacion[0]>9) 
0FF0:  BTFSC  xBF.7
0FF2:  BRA    0FFE
0FF4:  MOVF   xBF,W
0FF6:  SUBLW  09
0FF8:  BC    0FFE
....................          {Testerilizacion[0]=0; 
0FFA:  CLRF   xBF
....................           Testerilizacion[1]++;} 
0FFC:  INCF   xC0,F
....................        if(Testerilizacion[1]>5) 
0FFE:  BTFSC  xC0.7
1000:  BRA    100C
1002:  MOVF   xC0,W
1004:  SUBLW  05
1006:  BC    100C
....................          {Testerilizacion[1]=0; 
1008:  CLRF   xC0
....................           Testerilizacion[2]++;} 
100A:  INCF   xC1,F
....................          if(Testerilizacion[2]>9) 
100C:  BTFSC  xC1.7
100E:  BRA    101A
1010:  MOVF   xC1,W
1012:  SUBLW  09
1014:  BC    101A
....................             {Testerilizacion[2]=0; 
1016:  CLRF   xC1
....................              Testerilizacion[3]++;} 
1018:  INCF   xC2,F
....................             if(Testerilizacion[3]>5) 
101A:  BTFSC  xC2.7
101C:  BRA    1026
101E:  MOVF   xC2,W
1020:  SUBLW  05
1022:  BC    1026
....................                {Testerilizacion[3]=0;} 
1024:  CLRF   xC2
....................       }        
....................        
....................     if(tiempo_secado==1) 
1026:  DECFSZ xAA,W
1028:  BRA    1062
....................       { 
....................                       
....................       Tsecado[0]++; 
102A:  INCF   xC7,F
....................       if(Tsecado[0]>9) 
102C:  BTFSC  xC7.7
102E:  BRA    103A
1030:  MOVF   xC7,W
1032:  SUBLW  09
1034:  BC    103A
....................          {Tsecado[0]=0; 
1036:  CLRF   xC7
....................           Tsecado[1]++;} 
1038:  INCF   xC8,F
....................        if(Tsecado[1]>5) 
103A:  BTFSC  xC8.7
103C:  BRA    1048
103E:  MOVF   xC8,W
1040:  SUBLW  05
1042:  BC    1048
....................          {Tsecado[1]=0; 
1044:  CLRF   xC8
....................           Tsecado[2]++;} 
1046:  INCF   xC9,F
....................          if(Tsecado[2]>9) 
1048:  BTFSC  xC9.7
104A:  BRA    1056
104C:  MOVF   xC9,W
104E:  SUBLW  09
1050:  BC    1056
....................             {Tsecado[2]=0; 
1052:  CLRF   xC9
....................              Tsecado[3]++;} 
1054:  INCF   xCA,F
....................             if(Tsecado[3]>5) 
1056:  BTFSC  xCA.7
1058:  BRA    1062
105A:  MOVF   xCA,W
105C:  SUBLW  05
105E:  BC    1062
....................                {Tsecado[3]=0;} 
1060:  CLRF   xCA
....................       }   
....................    } 
....................    } 
....................     
1062:  BCF    F9E.0
1064:  MOVLB  0
1066:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
27F4:  MOVLW  07
27F6:  MOVLB  5
27F8:  ADDWF  x04,W
27FA:  MOVWF  x05
27FC:  MOVFF  502,514
2800:  MOVFF  504,515
2804:  MOVFF  503,516
2808:  MOVWF  x17
280A:  MOVLW  01
280C:  MOVWF  x18
280E:  CLRF   x19
2810:  MOVLB  0
2812:  CALL   1640
.................... } 
2816:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%3.1f",adc); // Converts adc to text 
*
2B88:  MOVLW  05
2B8A:  MOVLB  5
2B8C:  MOVWF  x01
2B8E:  MOVLW  09
2B90:  MOVWF  x00
2B92:  MOVLW  02
2B94:  MOVWF  FE9
2B96:  MOVFF  505,515
2B9A:  MOVFF  504,514
2B9E:  MOVFF  503,513
2BA2:  MOVFF  502,512
2BA6:  MOVLW  01
2BA8:  MOVWF  x16
2BAA:  MOVLB  0
2BAC:  BRA    29D4
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2BAE:  MOVLB  5
2BB0:  MOVF   x08,W
2BB2:  MULLW  1B
2BB4:  MOVF   FF3,W
2BB6:  ADDWF  x06,W
2BB8:  MOVWF  x12
2BBA:  MOVF   x08,W
2BBC:  MULLW  08
2BBE:  MOVF   FF3,W
2BC0:  ADDWF  x07,W
2BC2:  MOVWF  x13
2BC4:  MOVFF  506,514
2BC8:  MOVFF  507,515
2BCC:  MOVFF  512,516
2BD0:  MOVWF  x17
2BD2:  MOVLW  01
2BD4:  MOVWF  x18
2BD6:  CLRF   x19
2BD8:  MOVLB  0
2BDA:  CALL   1640
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2BDE:  MOVFF  506,513
2BE2:  MOVFF  507,514
2BE6:  MOVLW  05
2BE8:  MOVLB  5
2BEA:  MOVWF  x16
2BEC:  MOVLW  09
2BEE:  MOVWF  x15
2BF0:  MOVFF  508,517
2BF4:  MOVLW  01
2BF6:  MOVWF  x18
2BF8:  MOVLB  0
2BFA:  CALL   134A
.................... } 
2BFE:  GOTO   6732 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
263A:  MOVFF  4C6,503
263E:  MOVLW  24
2640:  MOVLB  5
2642:  MOVWF  x04
2644:  CLRF   x05
2646:  CLRF   x06
2648:  MOVLW  01
264A:  MOVWF  x07
264C:  MOVLB  0
264E:  RCALL  24EA
2650:  MOVFF  4C5,503
2654:  MOVLW  2A
2656:  MOVLB  5
2658:  MOVWF  x04
265A:  CLRF   x05
265C:  CLRF   x06
265E:  MOVLW  01
2660:  MOVWF  x07
2662:  MOVLB  0
2664:  RCALL  24EA
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
2666:  MOVLW  04
2668:  MOVWF  FEA
266A:  MOVLW  E2
266C:  MOVWF  FE9
266E:  MOVFF  FF2,502
2672:  BCF    FF2.7
2674:  MOVLW  00
2676:  CALL   06BE
267A:  TBLRD*-
267C:  TBLRD*+
267E:  MOVF   FF5,W
2680:  MOVWF  FEE
2682:  IORLW  00
2684:  BNZ   267C
2686:  MOVLB  5
2688:  BTFSC  x02.7
268A:  BSF    FF2.7
268C:  MOVLW  04
268E:  MOVWF  x03
2690:  MOVLW  E2
2692:  MOVWF  x02
2694:  MOVLW  31
2696:  MOVWF  x04
2698:  CLRF   x05
269A:  MOVLW  02
269C:  MOVWF  x06
269E:  MOVLW  01
26A0:  MOVWF  x07
26A2:  MOVLB  0
26A4:  CALL   1702
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
26A8:  MOVFF  4C4,503
26AC:  MOVLW  36
26AE:  MOVLB  5
26B0:  MOVWF  x04
26B2:  CLRF   x05
26B4:  CLRF   x06
26B6:  MOVLW  01
26B8:  MOVWF  x07
26BA:  MOVLB  0
26BC:  RCALL  24EA
26BE:  MOVFF  4C3,503
26C2:  MOVLW  3C
26C4:  MOVLB  5
26C6:  MOVWF  x04
26C8:  CLRF   x05
26CA:  CLRF   x06
26CC:  MOVLW  01
26CE:  MOVWF  x07
26D0:  MOVLB  0
26D2:  RCALL  24EA
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
26D4:  MOVFF  4CE,503
26D8:  MOVLW  24
26DA:  MOVLB  5
26DC:  MOVWF  x04
26DE:  MOVLW  08
26E0:  MOVWF  x05
26E2:  CLRF   x06
26E4:  MOVLW  01
26E6:  MOVWF  x07
26E8:  MOVLB  0
26EA:  RCALL  24EA
26EC:  MOVFF  4CD,503
26F0:  MOVLW  2A
26F2:  MOVLB  5
26F4:  MOVWF  x04
26F6:  MOVLW  08
26F8:  MOVWF  x05
26FA:  CLRF   x06
26FC:  MOVLW  01
26FE:  MOVWF  x07
2700:  MOVLB  0
2702:  RCALL  24EA
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
2704:  MOVLW  04
2706:  MOVWF  FEA
2708:  MOVLW  E2
270A:  MOVWF  FE9
270C:  MOVFF  FF2,502
2710:  BCF    FF2.7
2712:  MOVLW  00
2714:  CALL   06BE
2718:  TBLRD*-
271A:  TBLRD*+
271C:  MOVF   FF5,W
271E:  MOVWF  FEE
2720:  IORLW  00
2722:  BNZ   271A
2724:  MOVLB  5
2726:  BTFSC  x02.7
2728:  BSF    FF2.7
272A:  MOVLW  04
272C:  MOVWF  x03
272E:  MOVLW  E2
2730:  MOVWF  x02
2732:  MOVLW  31
2734:  MOVWF  x04
2736:  MOVLW  08
2738:  MOVWF  x05
273A:  MOVLW  02
273C:  MOVWF  x06
273E:  MOVLW  01
2740:  MOVWF  x07
2742:  MOVLB  0
2744:  CALL   1702
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
2748:  MOVFF  4CC,503
274C:  MOVLW  36
274E:  MOVLB  5
2750:  MOVWF  x04
2752:  MOVLW  08
2754:  MOVWF  x05
2756:  CLRF   x06
2758:  MOVLW  01
275A:  MOVWF  x07
275C:  MOVLB  0
275E:  RCALL  24EA
2760:  MOVFF  4CB,503
2764:  MOVLW  3C
2766:  MOVLB  5
2768:  MOVWF  x04
276A:  MOVLW  08
276C:  MOVWF  x05
276E:  CLRF   x06
2770:  MOVLW  01
2772:  MOVWF  x07
2774:  MOVLB  0
2776:  RCALL  24EA
.................... } 
2778:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1928:  MOVLW  05
192A:  MOVLB  5
192C:  MOVWF  x01
192E:  MOVLW  08
1930:  MOVWF  x00
1932:  MOVFF  504,511
1936:  MOVLW  1F
1938:  MOVWF  x12
193A:  MOVLB  0
193C:  BRA    1848
....................     
....................    if(sombreado==1) 
193E:  MOVLB  5
1940:  DECFSZ x07,W
1942:  BRA    1992
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1944:  MOVLW  12
1946:  ADDWF  x05,W
1948:  MOVWF  x11
194A:  MOVLW  18
194C:  ADDWF  x06,W
194E:  MOVWF  x12
1950:  MOVFF  505,514
1954:  MOVFF  506,515
1958:  MOVFF  511,516
195C:  MOVWF  x17
195E:  MOVLW  01
1960:  MOVWF  x18
1962:  MOVWF  x19
1964:  MOVLB  0
1966:  RCALL  1640
1968:  MOVLW  02
196A:  MOVLB  5
196C:  ADDWF  x05,W
196E:  MOVWF  x11
1970:  MOVLW  01
1972:  ADDWF  x06,W
1974:  MOVWF  x12
1976:  MOVFF  511,513
197A:  MOVWF  x14
197C:  MOVLW  05
197E:  MOVWF  x16
1980:  MOVLW  08
1982:  MOVWF  x15
1984:  MOVLW  02
1986:  MOVWF  x17
1988:  CLRF   x18
198A:  MOVLB  0
198C:  RCALL  134A
....................    else    
198E:  BRA    19DC
1990:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
1992:  MOVLW  12
1994:  ADDWF  x05,W
1996:  MOVWF  x11
1998:  MOVLW  18
199A:  ADDWF  x06,W
199C:  MOVWF  x12
199E:  MOVFF  505,514
19A2:  MOVFF  506,515
19A6:  MOVFF  511,516
19AA:  MOVWF  x17
19AC:  CLRF   x18
19AE:  CLRF   x19
19B0:  MOVLB  0
19B2:  RCALL  1640
19B4:  MOVLW  02
19B6:  MOVLB  5
19B8:  ADDWF  x05,W
19BA:  MOVWF  x11
19BC:  MOVLW  01
19BE:  ADDWF  x06,W
19C0:  MOVWF  x12
19C2:  MOVFF  511,513
19C6:  MOVWF  x14
19C8:  MOVLW  05
19CA:  MOVWF  x16
19CC:  MOVLW  08
19CE:  MOVWF  x15
19D0:  MOVLW  02
19D2:  MOVWF  x17
19D4:  MOVLW  01
19D6:  MOVWF  x18
19D8:  MOVLB  0
19DA:  RCALL  134A
....................  
.................... } 
19DC:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
2084:  BSF    F93.0
2086:  MOVLW  11
2088:  MOVWF  00
208A:  DECFSZ 00,F
208C:  BRA    208A
208E:  BSF    F93.1
2090:  MOVLW  11
2092:  MOVWF  00
2094:  DECFSZ 00,F
2096:  BRA    2094
2098:  BCF    F8A.0
209A:  BCF    F93.0
209C:  MOVLW  11
209E:  MOVWF  00
20A0:  DECFSZ 00,F
20A2:  BRA    20A0
20A4:  BCF    F8A.1
20A6:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
20A8:  MOVFF  503,506
20AC:  RCALL  19DE
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
20AE:  MOVFF  504,506
20B2:  RCALL  19DE
....................    i2c_write(dato);        // Dato a transmitir 
20B4:  MOVFF  505,506
20B8:  RCALL  19DE
....................    i2c_stop();             // Fin comunicación 
20BA:  BCF    F93.0
20BC:  NOP   
20BE:  BSF    F93.1
20C0:  BTFSS  F81.1
20C2:  BRA    20C0
20C4:  MOVLW  11
20C6:  MOVWF  00
20C8:  DECFSZ 00,F
20CA:  BRA    20C8
20CC:  BRA    20CE
20CE:  NOP   
20D0:  BSF    F93.0
20D2:  MOVLW  11
20D4:  MOVWF  00
20D6:  DECFSZ 00,F
20D8:  BRA    20D6
....................  } 
20DA:  GOTO   2110 (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1F9E:  BSF    F93.0
1FA0:  MOVLW  11
1FA2:  MOVWF  00
1FA4:  DECFSZ 00,F
1FA6:  BRA    1FA4
1FA8:  BSF    F93.1
1FAA:  MOVLW  11
1FAC:  MOVWF  00
1FAE:  DECFSZ 00,F
1FB0:  BRA    1FAE
1FB2:  BCF    F8A.0
1FB4:  BCF    F93.0
1FB6:  MOVLW  11
1FB8:  MOVWF  00
1FBA:  DECFSZ 00,F
1FBC:  BRA    1FBA
1FBE:  BCF    F8A.1
1FC0:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FC2:  MOVFF  502,506
1FC6:  MOVLB  0
1FC8:  RCALL  19DE
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1FCA:  MOVFF  503,506
1FCE:  RCALL  19DE
....................    i2c_start();            // Reinicio 
1FD0:  BSF    F93.0
1FD2:  MOVLW  11
1FD4:  MOVWF  00
1FD6:  DECFSZ 00,F
1FD8:  BRA    1FD6
1FDA:  BSF    F93.1
1FDC:  MOVLW  11
1FDE:  MOVWF  00
1FE0:  DECFSZ 00,F
1FE2:  BRA    1FE0
1FE4:  BTFSS  F81.1
1FE6:  BRA    1FE4
1FE8:  BCF    F8A.0
1FEA:  BCF    F93.0
1FEC:  MOVLW  11
1FEE:  MOVWF  00
1FF0:  DECFSZ 00,F
1FF2:  BRA    1FF0
1FF4:  BCF    F8A.1
1FF6:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1FF8:  MOVLW  01
1FFA:  MOVLB  5
1FFC:  ADDWF  x02,W
1FFE:  MOVWF  x04
2000:  MOVWF  x06
2002:  MOVLB  0
2004:  RCALL  19DE
....................    dato=i2c_read(0);       // Lectura del dato 
2006:  CLRF   00
2008:  BRA    1A54
200A:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
200E:  BCF    F93.0
2010:  NOP   
2012:  BSF    F93.1
2014:  BTFSS  F81.1
2016:  BRA    2014
2018:  MOVLW  11
201A:  MOVWF  00
201C:  DECFSZ 00,F
201E:  BRA    201C
2020:  BRA    2022
2022:  NOP   
2024:  BSF    F93.0
2026:  MOVLW  11
2028:  MOVWF  00
202A:  DECFSZ 00,F
202C:  BRA    202A
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
204C:  MOVFF  499,456
....................    SlaveA0Tx[1]=EVDesfogue; 
2050:  MOVFF  49A,457
....................    SlaveA0Tx[2]=EVAgua; 
2054:  MOVFF  49B,458
....................    SlaveA0Tx[3]=EVTrampa; 
2058:  MOVFF  49C,459
....................    SlaveA0Tx[4]=MotorPuerta; 
205C:  MOVFF  49D,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
2060:  MOVFF  49E,45B
....................    SlaveA0Tx[6]=BombaVacio; 
2064:  MOVFF  49F,45C
....................    SlaveA0Tx[7]=BombaAgua; 
2068:  MOVFF  4A0,45D
....................    SlaveA0Tx[8]=Control; 
206C:  MOVFF  4A1,45E
....................    SlaveA0Tx[9]=Setpoint; 
2070:  MOVFF  4A6,45F
....................    SlaveA0Tx[10]=20; 
2074:  MOVLW  14
2076:  MOVLB  4
2078:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
207A:  MOVFF  4B5,462
.................... } 
207E:  MOVLB  0
2080:  GOTO   20E0 (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1ECE:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1ED2:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1ED6:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1EDA:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1EDE:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1EE2:  MOVLB  5
1EE4:  CLRF   x03
1EE6:  MOVFF  41B,502
1EEA:  MOVLB  0
1EEC:  RCALL  1AC0
1EEE:  MOVFF  03,4BE
1EF2:  MOVFF  02,4BD
1EF6:  MOVFF  01,4BC
1EFA:  MOVFF  00,4BB
....................    Alarma=txbuf[6]; 
1EFE:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1F02:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1F06:  MOVFF  41E,4AC
....................    Decimal=txbuf[9]; 
1F0A:  MOVFF  41F,4A2
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1F0E:  MOVLB  5
1F10:  CLRF   x03
1F12:  MOVFF  4A2,502
1F16:  MOVLB  0
1F18:  RCALL  1AC0
1F1A:  MOVFF  00,502
1F1E:  MOVFF  01,503
1F22:  MOVFF  02,504
1F26:  MOVFF  03,505
1F2A:  MOVFF  03,509
1F2E:  MOVFF  02,508
1F32:  MOVFF  01,507
1F36:  MOVFF  00,506
1F3A:  MOVLB  5
1F3C:  CLRF   x0D
1F3E:  CLRF   x0C
1F40:  MOVLW  20
1F42:  MOVWF  x0B
1F44:  MOVLW  82
1F46:  MOVWF  x0A
1F48:  MOVLB  0
1F4A:  BRA    1AF6
1F4C:  BCF    FD8.1
1F4E:  MOVFF  4BE,509
1F52:  MOVFF  4BD,508
1F56:  MOVFF  4BC,507
1F5A:  MOVFF  4BB,506
1F5E:  MOVFF  03,50D
1F62:  MOVFF  02,50C
1F66:  MOVFF  01,50B
1F6A:  MOVFF  00,50A
1F6E:  RCALL  1C56
1F70:  MOVFF  03,4BE
1F74:  MOVFF  02,4BD
1F78:  MOVFF  01,4BC
1F7C:  MOVFF  00,4BB
.................... } 
1F80:  GOTO   204A (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
20DE:  BRA    204C
....................    for(i=0;i<13;i++) 
20E0:  MOVLB  4
20E2:  CLRF   xA5
20E4:  MOVF   xA5,W
20E6:  SUBLW  0C
20E8:  BNC   2116
....................    { 
....................       direccion=0xA0; 
20EA:  MOVLW  A0
20EC:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
20EE:  CLRF   03
20F0:  MOVF   xA5,W
20F2:  ADDLW  56
20F4:  MOVWF  FE9
20F6:  MOVLW  04
20F8:  ADDWFC 03,W
20FA:  MOVWF  FEA
20FC:  MOVFF  FEF,502
2100:  MOVFF  487,503
2104:  MOVFF  4A5,504
2108:  MOVFF  502,505
210C:  MOVLB  0
210E:  BRA    2084
....................    }  
2110:  MOVLB  4
2112:  INCF   xA5,F
2114:  BRA    20E4
.................... } 
2116:  MOVLB  0
2118:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
1F84:  MOVLB  4
1F86:  CLRF   xA5
1F88:  MOVF   xA5,W
1F8A:  SUBLW  09
1F8C:  BNC   2046
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1F8E:  MOVLW  A0
1F90:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1F92:  MOVFF  4A5,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1F96:  MOVFF  487,502
1F9A:  MOVFF  488,503
....................       txbuf[i]=(int8)dato; 
*
202E:  CLRF   03
2030:  MOVLB  4
2032:  MOVF   xA5,W
2034:  ADDLW  16
2036:  MOVWF  FE9
2038:  MOVLW  04
203A:  ADDWFC 03,W
203C:  MOVWF  FEA
203E:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
2042:  INCF   xA5,F
2044:  BRA    1F88
....................    Lee_Vector(); 
2046:  MOVLB  0
2048:  BRA    1ECE
.................... } 
204A:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2C40:  CLRF   FF8
2C42:  BCF    FD0.7
2C44:  BSF    07.7
2C46:  CLRF   FEA
2C48:  CLRF   FE9
2C4A:  MOVLB  4
2C4C:  CLRF   x86
2C4E:  CLRF   x87
2C50:  CLRF   x88
2C52:  CLRF   x8D
2C54:  MOVLW  01
2C56:  MOVWF  x8E
2C58:  CLRF   x8F
2C5A:  CLRF   x90
2C5C:  CLRF   x91
2C5E:  CLRF   x92
2C60:  CLRF   x93
2C62:  CLRF   x94
2C64:  CLRF   x95
2C66:  BCF    x96.0
2C68:  BCF    x96.1
2C6A:  BCF    x96.2
2C6C:  BCF    x96.3
2C6E:  BSF    x96.4
2C70:  BCF    x96.5
2C72:  BCF    x96.6
2C74:  BCF    x96.7
2C76:  BCF    x97.0
2C78:  BCF    x97.1
2C7A:  BCF    x97.2
2C7C:  BCF    x97.3
2C7E:  BCF    x97.4
2C80:  BCF    x97.5
2C82:  BCF    x97.6
2C84:  BCF    x97.7
2C86:  BCF    x98.0
2C88:  BCF    x98.1
2C8A:  BCF    x98.2
2C8C:  BCF    x98.3
2C8E:  BCF    x98.4
2C90:  CLRF   x99
2C92:  CLRF   x9A
2C94:  CLRF   x9B
2C96:  MOVLW  0A
2C98:  MOVWF  x9C
2C9A:  CLRF   x9D
2C9C:  CLRF   x9E
2C9E:  CLRF   x9F
2CA0:  CLRF   xA0
2CA2:  CLRF   xA1
2CA4:  CLRF   xA2
2CA6:  CLRF   xA3
2CA8:  MOVLW  01
2CAA:  MOVWF  xA4
2CAC:  CLRF   xA5
2CAE:  CLRF   xA6
2CB0:  CLRF   xA7
2CB2:  MOVWF  xA8
2CB4:  CLRF   xA9
2CB6:  CLRF   xAA
2CB8:  CLRF   xAB
2CBA:  CLRF   xAC
2CBC:  CLRF   xAE
2CBE:  CLRF   xAD
2CC0:  CLRF   xB0
2CC2:  CLRF   xAF
2CC4:  CLRF   xB2
2CC6:  CLRF   xB1
2CC8:  CLRF   xB4
2CCA:  MOVLW  0F
2CCC:  MOVWF  xB3
2CCE:  CLRF   xB6
2CD0:  CLRF   xB5
2CD2:  CLRF   xB8
2CD4:  CLRF   xB7
2CD6:  CLRF   xBA
2CD8:  CLRF   xB9
2CDA:  CLRF   xBE
2CDC:  CLRF   xBD
2CDE:  CLRF   xBC
2CE0:  CLRF   xBB
2CE2:  MOVF   FC1,W
2CE4:  ANDLW  C0
2CE6:  IORLW  0F
2CE8:  MOVWF  FC1
2CEA:  MOVLW  07
2CEC:  MOVWF  FB4
2CEE:  MOVLW  6B
2CF0:  MOVWF  x89
2CF2:  MOVLW  50
2CF4:  MOVWF  x8A
2CF6:  MOVLW  61
2CF8:  MOVWF  x8B
2CFA:  CLRF   x8C
2CFC:  CLRF   xBF
2CFE:  CLRF   xC0
2D00:  CLRF   xC1
2D02:  CLRF   xC2
2D04:  CLRF   xC3
2D06:  CLRF   xC4
2D08:  CLRF   xC5
2D0A:  CLRF   xC6
2D0C:  CLRF   xC7
2D0E:  CLRF   xC8
2D10:  CLRF   xC9
2D12:  CLRF   xCA
2D14:  CLRF   xCB
2D16:  CLRF   xCC
2D18:  CLRF   xCD
2D1A:  CLRF   xCE
2D1C:  CLRF   xCF
2D1E:  CLRF   xD0
2D20:  CLRF   xD1
2D22:  CLRF   xD2
2D24:  CLRF   xD3
2D26:  CLRF   xD4
2D28:  CLRF   xD5
2D2A:  CLRF   xD6
2D2C:  MOVLB  5
2D2E:  CLRF   x00
2D30:  CLRF   x01
....................    Display_on; 
2D32:  BSF    F8D.0
2D34:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2D36:  MOVLB  4
2D38:  CLRF   x88
2D3A:  MOVF   x88,W
2D3C:  SUBLW  0F
2D3E:  BNC   2D74
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2D40:  CLRF   03
2D42:  MOVF   x88,W
2D44:  ADDLW  56
2D46:  MOVWF  FE9
2D48:  MOVLW  04
2D4A:  ADDWFC 03,W
2D4C:  MOVWF  FEA
2D4E:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2D50:  CLRF   03
2D52:  MOVF   x88,W
2D54:  ADDLW  66
2D56:  MOVWF  FE9
2D58:  MOVLW  04
2D5A:  ADDWFC 03,W
2D5C:  MOVWF  FEA
2D5E:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2D60:  CLRF   03
2D62:  MOVF   x88,W
2D64:  ADDLW  76
2D66:  MOVWF  FE9
2D68:  MOVLW  04
2D6A:  ADDWFC 03,W
2D6C:  MOVWF  FEA
2D6E:  CLRF   FEF
....................    } 
2D70:  INCF   x88,F
2D72:  BRA    2D3A
....................    output_d(0); 
2D74:  CLRF   F95
2D76:  CLRF   F8C
....................    delay_ms(1000);    
2D78:  MOVLW  04
2D7A:  MOVLB  5
2D7C:  MOVWF  x02
2D7E:  MOVLW  FA
2D80:  MOVWF  x03
2D82:  MOVLB  0
2D84:  CALL   106A
2D88:  MOVLB  5
2D8A:  DECFSZ x02,F
2D8C:  BRA    2D7E
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2D8E:  MOVLW  85
2D90:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2D92:  BSF    F9D.0
....................    enable_interrupts(global); 
2D94:  MOVLW  C0
2D96:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2D98:  MOVFF  FF2,502
2D9C:  BCF    FF2.7
2D9E:  CLRF   FA9
2DA0:  BCF    FA6.6
2DA2:  BCF    FA6.7
2DA4:  BSF    FA6.0
2DA6:  MOVF   FA8,W
2DA8:  BTFSC  x02.7
2DAA:  BSF    FF2.7
2DAC:  MOVLB  4
2DAE:  MOVWF  xC3
2DB0:  MOVFF  FF2,502
2DB4:  BCF    FF2.7
2DB6:  MOVLW  01
2DB8:  MOVWF  FA9
2DBA:  BCF    FA6.6
2DBC:  BCF    FA6.7
2DBE:  BSF    FA6.0
2DC0:  MOVF   FA8,W
2DC2:  MOVLB  5
2DC4:  BTFSC  x02.7
2DC6:  BSF    FF2.7
2DC8:  MOVLB  4
2DCA:  MOVWF  xC4
2DCC:  MOVFF  FF2,502
2DD0:  BCF    FF2.7
2DD2:  MOVLW  02
2DD4:  MOVWF  FA9
2DD6:  BCF    FA6.6
2DD8:  BCF    FA6.7
2DDA:  BSF    FA6.0
2DDC:  MOVF   FA8,W
2DDE:  MOVLB  5
2DE0:  BTFSC  x02.7
2DE2:  BSF    FF2.7
2DE4:  MOVLB  4
2DE6:  MOVWF  xC5
2DE8:  MOVFF  FF2,502
2DEC:  BCF    FF2.7
2DEE:  MOVLW  03
2DF0:  MOVWF  FA9
2DF2:  BCF    FA6.6
2DF4:  BCF    FA6.7
2DF6:  BSF    FA6.0
2DF8:  MOVF   FA8,W
2DFA:  MOVLB  5
2DFC:  BTFSC  x02.7
2DFE:  BSF    FF2.7
2E00:  MOVLB  4
2E02:  MOVWF  xC6
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2E04:  MOVFF  FF2,502
2E08:  BCF    FF2.7
2E0A:  MOVLW  04
2E0C:  MOVWF  FA9
2E0E:  BCF    FA6.6
2E10:  BCF    FA6.7
2E12:  BSF    FA6.0
2E14:  MOVF   FA8,W
2E16:  MOVLB  5
2E18:  BTFSC  x02.7
2E1A:  BSF    FF2.7
2E1C:  MOVLB  4
2E1E:  MOVWF  xCB
2E20:  MOVFF  FF2,502
2E24:  BCF    FF2.7
2E26:  MOVLW  05
2E28:  MOVWF  FA9
2E2A:  BCF    FA6.6
2E2C:  BCF    FA6.7
2E2E:  BSF    FA6.0
2E30:  MOVF   FA8,W
2E32:  MOVLB  5
2E34:  BTFSC  x02.7
2E36:  BSF    FF2.7
2E38:  MOVLB  4
2E3A:  MOVWF  xCC
2E3C:  MOVFF  FF2,502
2E40:  BCF    FF2.7
2E42:  MOVLW  06
2E44:  MOVWF  FA9
2E46:  BCF    FA6.6
2E48:  BCF    FA6.7
2E4A:  BSF    FA6.0
2E4C:  MOVF   FA8,W
2E4E:  MOVLB  5
2E50:  BTFSC  x02.7
2E52:  BSF    FF2.7
2E54:  MOVLB  4
2E56:  MOVWF  xCD
2E58:  MOVFF  FF2,502
2E5C:  BCF    FF2.7
2E5E:  MOVLW  07
2E60:  MOVWF  FA9
2E62:  BCF    FA6.6
2E64:  BCF    FA6.7
2E66:  BSF    FA6.0
2E68:  MOVF   FA8,W
2E6A:  MOVLB  5
2E6C:  BTFSC  x02.7
2E6E:  BSF    FF2.7
2E70:  MOVLB  4
2E72:  MOVWF  xCE
2E74:  MOVFF  FF2,502
2E78:  BCF    FF2.7
2E7A:  MOVLW  08
2E7C:  MOVWF  FA9
2E7E:  BCF    FA6.6
2E80:  BCF    FA6.7
2E82:  BSF    FA6.0
2E84:  MOVF   FA8,W
2E86:  MOVLB  5
2E88:  BTFSC  x02.7
2E8A:  BSF    FF2.7
2E8C:  MOVLB  4
2E8E:  MOVWF  xA6
....................    Nivel=read_eeprom(9); 
2E90:  MOVFF  FF2,502
2E94:  BCF    FF2.7
2E96:  MOVLW  09
2E98:  MOVWF  FA9
2E9A:  BCF    FA6.6
2E9C:  BCF    FA6.7
2E9E:  BSF    FA6.0
2EA0:  MOVF   FA8,W
2EA2:  MOVLB  5
2EA4:  BTFSC  x02.7
2EA6:  BSF    FF2.7
2EA8:  MOVLB  4
2EAA:  CLRF   xB6
2EAC:  MOVWF  xB5
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2EAE:  MOVFF  FF2,502
2EB2:  BCF    FF2.7
2EB4:  MOVLW  0A
2EB6:  MOVWF  FA9
2EB8:  BCF    FA6.6
2EBA:  BCF    FA6.7
2EBC:  BSF    FA6.0
2EBE:  MOVF   FA8,W
2EC0:  MOVLB  5
2EC2:  BTFSC  x02.7
2EC4:  BSF    FF2.7
2EC6:  MOVLB  4
2EC8:  MOVWF  xD3
2ECA:  MOVFF  FF2,502
2ECE:  BCF    FF2.7
2ED0:  MOVLW  0B
2ED2:  MOVWF  FA9
2ED4:  BCF    FA6.6
2ED6:  BCF    FA6.7
2ED8:  BSF    FA6.0
2EDA:  MOVF   FA8,W
2EDC:  MOVLB  5
2EDE:  BTFSC  x02.7
2EE0:  BSF    FF2.7
2EE2:  MOVLB  4
2EE4:  MOVWF  xD4
2EE6:  MOVFF  FF2,502
2EEA:  BCF    FF2.7
2EEC:  MOVLW  0C
2EEE:  MOVWF  FA9
2EF0:  BCF    FA6.6
2EF2:  BCF    FA6.7
2EF4:  BSF    FA6.0
2EF6:  MOVF   FA8,W
2EF8:  MOVLB  5
2EFA:  BTFSC  x02.7
2EFC:  BSF    FF2.7
2EFE:  MOVLB  4
2F00:  MOVWF  xD5
2F02:  MOVFF  FF2,502
2F06:  BCF    FF2.7
2F08:  MOVLW  0D
2F0A:  MOVWF  FA9
2F0C:  BCF    FA6.6
2F0E:  BCF    FA6.7
2F10:  BSF    FA6.0
2F12:  MOVF   FA8,W
2F14:  MOVLB  5
2F16:  BTFSC  x02.7
2F18:  BSF    FF2.7
2F1A:  MOVLB  4
2F1C:  MOVWF  xD6
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2F1E:  MOVLW  01
2F20:  MOVLB  5
2F22:  MOVWF  x02
2F24:  MOVLB  0
2F26:  CALL   11E6
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2F2A:  MOVLB  5
2F2C:  CLRF   x03
2F2E:  MOVLB  0
2F30:  CALL   10D4
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2F34:  MOVLW  04
2F36:  MOVWF  FEA
2F38:  MOVLW  E2
2F3A:  MOVWF  FE9
2F3C:  MOVFF  FF2,502
2F40:  BCF    FF2.7
2F42:  MOVLW  00
2F44:  CALL   06DA
2F48:  TBLRD*-
2F4A:  TBLRD*+
2F4C:  MOVF   FF5,W
2F4E:  MOVWF  FEE
2F50:  IORLW  00
2F52:  BNZ   2F4A
2F54:  MOVLB  5
2F56:  BTFSC  x02.7
2F58:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2F5A:  MOVLW  04
2F5C:  MOVWF  x03
2F5E:  MOVLW  E2
2F60:  MOVWF  x02
2F62:  CLRF   x04
2F64:  CLRF   x05
2F66:  CLRF   x06
2F68:  MOVLW  02
2F6A:  MOVWF  x07
2F6C:  MOVLB  0
2F6E:  CALL   1702
....................    strcpy(Menus.Letra,"Autoclave Horizontal"); 
2F72:  MOVLW  04
2F74:  MOVWF  FEA
2F76:  MOVLW  E2
2F78:  MOVWF  FE9
2F7A:  MOVFF  FF2,502
2F7E:  BCF    FF2.7
2F80:  MOVLW  00
2F82:  CALL   0700
2F86:  TBLRD*-
2F88:  TBLRD*+
2F8A:  MOVF   FF5,W
2F8C:  MOVWF  FEE
2F8E:  IORLW  00
2F90:  BNZ   2F88
2F92:  MOVLB  5
2F94:  BTFSC  x02.7
2F96:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
2F98:  MOVLW  04
2F9A:  MOVWF  x03
2F9C:  MOVLW  E2
2F9E:  MOVWF  x02
2FA0:  CLRF   x04
2FA2:  MOVLW  14
2FA4:  MOVWF  x05
2FA6:  CLRF   x06
2FA8:  MOVLW  01
2FAA:  MOVWF  x07
2FAC:  MOVLB  0
2FAE:  CALL   1702
....................    strcpy(Menus.Letra," 34 Litros  "); 
2FB2:  MOVLW  04
2FB4:  MOVWF  FEA
2FB6:  MOVLW  E2
2FB8:  MOVWF  FE9
2FBA:  MOVFF  FF2,502
2FBE:  BCF    FF2.7
2FC0:  MOVLW  00
2FC2:  CALL   0730
2FC6:  TBLRD*-
2FC8:  TBLRD*+
2FCA:  MOVF   FF5,W
2FCC:  MOVWF  FEE
2FCE:  IORLW  00
2FD0:  BNZ   2FC8
2FD2:  MOVLB  5
2FD4:  BTFSC  x02.7
2FD6:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
2FD8:  MOVLW  04
2FDA:  MOVWF  x03
2FDC:  MOVLW  E2
2FDE:  MOVWF  x02
2FE0:  CLRF   x04
2FE2:  MOVLW  23
2FE4:  MOVWF  x05
2FE6:  CLRF   x06
2FE8:  MOVLW  02
2FEA:  MOVWF  x07
2FEC:  MOVLB  0
2FEE:  CALL   1702
....................    delay_ms(1000); 
2FF2:  MOVLW  04
2FF4:  MOVLB  5
2FF6:  MOVWF  x02
2FF8:  MOVLW  FA
2FFA:  MOVWF  x03
2FFC:  MOVLB  0
2FFE:  CALL   106A
3002:  MOVLB  5
3004:  DECFSZ x02,F
3006:  BRA    2FF8
....................    delay_ms(1000); 
3008:  MOVLW  04
300A:  MOVWF  x02
300C:  MOVLW  FA
300E:  MOVWF  x03
3010:  MOVLB  0
3012:  CALL   106A
3016:  MOVLB  5
3018:  DECFSZ x02,F
301A:  BRA    300C
....................    delay_ms(1000); 
301C:  MOVLW  04
301E:  MOVWF  x02
3020:  MOVLW  FA
3022:  MOVWF  x03
3024:  MOVLB  0
3026:  CALL   106A
302A:  MOVLB  5
302C:  DECFSZ x02,F
302E:  BRA    3020
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
3030:  CLRF   x03
3032:  MOVLB  0
3034:  CALL   10D4
....................    displayContrasena(Contrasena[0],20,30,1); 
3038:  MOVFF  4CF,504
303C:  MOVLW  14
303E:  MOVLB  5
3040:  MOVWF  x05
3042:  MOVLW  1E
3044:  MOVWF  x06
3046:  MOVLW  01
3048:  MOVWF  x07
304A:  MOVLB  0
304C:  CALL   1928
....................    displayContrasena(Contrasena[1],40,30,0); 
3050:  MOVFF  4D0,504
3054:  MOVLW  28
3056:  MOVLB  5
3058:  MOVWF  x05
305A:  MOVLW  1E
305C:  MOVWF  x06
305E:  CLRF   x07
3060:  MOVLB  0
3062:  CALL   1928
....................    displayContrasena(Contrasena[2],60,30,0); 
3066:  MOVFF  4D1,504
306A:  MOVLW  3C
306C:  MOVLB  5
306E:  MOVWF  x05
3070:  MOVLW  1E
3072:  MOVWF  x06
3074:  CLRF   x07
3076:  MOVLB  0
3078:  CALL   1928
....................    displayContrasena(Contrasena[3],80,30,0); 
307C:  MOVFF  4D2,504
3080:  MOVLW  50
3082:  MOVLB  5
3084:  MOVWF  x05
3086:  MOVLW  1E
3088:  MOVWF  x06
308A:  CLRF   x07
308C:  MOVLB  0
308E:  CALL   1928
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
3092:  CALL   1F84
....................        
....................       Envio_Esclavos(); 
3096:  CALL   20DE
....................       glcd_update(); 
309A:  CALL   112E
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
309E:  BSF    F92.0
30A0:  BTFSC  F80.0
30A2:  BRA    30B6
30A4:  BSF    F92.1
30A6:  BTFSC  F80.1
30A8:  BRA    30B6
30AA:  BSF    F92.2
30AC:  BTFSC  F80.2
30AE:  BRA    30B6
30B0:  BSF    F92.3
30B2:  BTFSS  F80.3
30B4:  BRA    30BE
....................       { 
....................          tinicio=0; 
30B6:  MOVLB  4
30B8:  CLRF   xBA
30BA:  CLRF   xB9
30BC:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
30BE:  MOVLB  4
30C0:  MOVF   xBA,W
30C2:  SUBLW  37
30C4:  BC    30E2
30C6:  XORLW  FF
30C8:  BNZ   30D0
30CA:  MOVF   xB9,W
30CC:  SUBLW  3F
30CE:  BC    30E2
....................          glcd_fillscreen(OFF); 
30D0:  MOVLB  5
30D2:  CLRF   x03
30D4:  MOVLB  0
30D6:  CALL   10D4
....................          Display_off; 
30DA:  BCF    F8D.0
30DC:  BCF    F96.0
....................       } 
30DE:  BRA    30BE
30E0:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
30E2:  MOVF   xA3,F
30E4:  BTFSS  FD8.2
30E6:  BRA    367C
....................        
....................       strcpy(Menus.Letra,"Clave"); 
30E8:  MOVLW  04
30EA:  MOVWF  FEA
30EC:  MOVLW  E2
30EE:  MOVWF  FE9
30F0:  MOVFF  FF2,502
30F4:  BCF    FF2.7
30F6:  MOVLW  00
30F8:  MOVLB  0
30FA:  CALL   0758
30FE:  TBLRD*-
3100:  TBLRD*+
3102:  MOVF   FF5,W
3104:  MOVWF  FEE
3106:  IORLW  00
3108:  BNZ   3100
310A:  MOVLB  5
310C:  BTFSC  x02.7
310E:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
3110:  MOVLW  04
3112:  MOVWF  x03
3114:  MOVLW  E2
3116:  MOVWF  x02
3118:  MOVLW  1E
311A:  MOVWF  x04
311C:  CLRF   x05
311E:  MOVLW  01
3120:  MOVWF  x06
3122:  MOVLW  02
3124:  MOVWF  x07
3126:  MOVLB  0
3128:  CALL   1702
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
312C:  BSF    F92.0
312E:  BTFSS  F80.0
3130:  BRA    3208
....................       { 
....................          if(Flanco == 0) 
3132:  MOVLB  4
3134:  BTFSC  x96.0
3136:  BRA    3206
....................          { 
....................             Flanco = 1;delay_ms(30); 
3138:  BSF    x96.0
313A:  MOVLW  1E
313C:  MOVLB  5
313E:  MOVWF  x03
3140:  MOVLB  0
3142:  CALL   106A
....................             for(i=1;i<=4;i++) 
3146:  MOVLW  01
3148:  MOVLB  4
314A:  MOVWF  xA5
314C:  MOVF   xA5,W
314E:  SUBLW  04
3150:  BNC   3206
....................             { 
....................                if(unidad==i) 
3152:  MOVF   xA5,W
3154:  SUBWF  xA4,W
3156:  BNZ   31CE
....................                { 
....................                   Contrasena[i-1]++; 
3158:  MOVLW  01
315A:  SUBWF  xA5,W
315C:  CLRF   03
315E:  ADDLW  CF
3160:  MOVWF  FE9
3162:  MOVLW  04
3164:  ADDWFC 03,W
3166:  MOVWF  FEA
3168:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
316A:  MOVLW  01
316C:  SUBWF  xA5,W
316E:  CLRF   03
3170:  ADDLW  CF
3172:  MOVWF  FE9
3174:  MOVLW  04
3176:  ADDWFC 03,W
3178:  MOVWF  FEA
317A:  BTFSC  FEF.7
317C:  BRA    3196
317E:  MOVF   FEF,W
3180:  SUBLW  09
3182:  BC    3196
....................                   { 
....................                      Contrasena[i-1]=0; 
3184:  MOVLW  01
3186:  SUBWF  xA5,W
3188:  CLRF   03
318A:  ADDLW  CF
318C:  MOVWF  FE9
318E:  MOVLW  04
3190:  ADDWFC 03,W
3192:  MOVWF  FEA
3194:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
3196:  MOVLW  01
3198:  SUBWF  xA5,W
319A:  CLRF   03
319C:  ADDLW  CF
319E:  MOVWF  FE9
31A0:  MOVLW  04
31A2:  ADDWFC 03,W
31A4:  MOVWF  FEA
31A6:  MOVFF  FEF,502
31AA:  MOVF   xA5,W
31AC:  MULLW  14
31AE:  MOVFF  FF3,503
31B2:  MOVLB  5
31B4:  MOVFF  502,504
31B8:  MOVFF  503,505
31BC:  MOVLW  1E
31BE:  MOVWF  x06
31C0:  MOVLW  01
31C2:  MOVWF  x07
31C4:  MOVLB  0
31C6:  CALL   1928
....................                } 
....................                else 
31CA:  BRA    3200
31CC:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
31CE:  MOVLW  01
31D0:  SUBWF  xA5,W
31D2:  CLRF   03
31D4:  ADDLW  CF
31D6:  MOVWF  FE9
31D8:  MOVLW  04
31DA:  ADDWFC 03,W
31DC:  MOVWF  FEA
31DE:  MOVFF  FEF,502
31E2:  MOVF   xA5,W
31E4:  MULLW  14
31E6:  MOVFF  FF3,503
31EA:  MOVLB  5
31EC:  MOVFF  502,504
31F0:  MOVFF  503,505
31F4:  MOVLW  1E
31F6:  MOVWF  x06
31F8:  CLRF   x07
31FA:  MOVLB  0
31FC:  CALL   1928
....................                } 
....................             } 
3200:  MOVLB  4
3202:  INCF   xA5,F
3204:  BRA    314C
....................          } 
....................       } 
....................          else 
3206:  BRA    320C
....................             {Flanco = 0;} 
3208:  MOVLB  4
320A:  BCF    x96.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
320C:  BSF    F92.1
320E:  BTFSS  F80.1
3210:  BRA    32E4
....................       { 
....................          if(Flanco2 == 0) 
3212:  BTFSC  x96.2
3214:  BRA    32E2
....................             {Flanco2 = 1;delay_ms(30); 
3216:  BSF    x96.2
3218:  MOVLW  1E
321A:  MOVLB  5
321C:  MOVWF  x03
321E:  MOVLB  0
3220:  CALL   106A
....................                for(i=1;i<=4;i++) 
3224:  MOVLW  01
3226:  MOVLB  4
3228:  MOVWF  xA5
322A:  MOVF   xA5,W
322C:  SUBLW  04
322E:  BNC   32E2
....................                { 
....................                   if(unidad==i) 
3230:  MOVF   xA5,W
3232:  SUBWF  xA4,W
3234:  BNZ   32AA
....................                   {Contrasena[i-1]--;  
3236:  MOVLW  01
3238:  SUBWF  xA5,W
323A:  CLRF   03
323C:  ADDLW  CF
323E:  MOVWF  FE9
3240:  MOVLW  04
3242:  ADDWFC 03,W
3244:  MOVWF  FEA
3246:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
3248:  MOVLW  01
324A:  SUBWF  xA5,W
324C:  CLRF   03
324E:  ADDLW  CF
3250:  MOVWF  FE9
3252:  MOVLW  04
3254:  ADDWFC 03,W
3256:  MOVWF  FEA
3258:  BTFSC  FEF.7
325A:  BRA    325E
325C:  BRA    3272
....................                         {Contrasena[i-1]=9;} 
325E:  MOVLW  01
3260:  SUBWF  xA5,W
3262:  CLRF   03
3264:  ADDLW  CF
3266:  MOVWF  FE9
3268:  MOVLW  04
326A:  ADDWFC 03,W
326C:  MOVWF  FEA
326E:  MOVLW  09
3270:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
3272:  MOVLW  01
3274:  SUBWF  xA5,W
3276:  CLRF   03
3278:  ADDLW  CF
327A:  MOVWF  FE9
327C:  MOVLW  04
327E:  ADDWFC 03,W
3280:  MOVWF  FEA
3282:  MOVFF  FEF,502
3286:  MOVF   xA5,W
3288:  MULLW  14
328A:  MOVFF  FF3,503
328E:  MOVLB  5
3290:  MOVFF  502,504
3294:  MOVFF  503,505
3298:  MOVLW  1E
329A:  MOVWF  x06
329C:  MOVLW  01
329E:  MOVWF  x07
32A0:  MOVLB  0
32A2:  CALL   1928
....................                   else 
32A6:  BRA    32DC
32A8:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
32AA:  MOVLW  01
32AC:  SUBWF  xA5,W
32AE:  CLRF   03
32B0:  ADDLW  CF
32B2:  MOVWF  FE9
32B4:  MOVLW  04
32B6:  ADDWFC 03,W
32B8:  MOVWF  FEA
32BA:  MOVFF  FEF,502
32BE:  MOVF   xA5,W
32C0:  MULLW  14
32C2:  MOVFF  FF3,503
32C6:  MOVLB  5
32C8:  MOVFF  502,504
32CC:  MOVFF  503,505
32D0:  MOVLW  1E
32D2:  MOVWF  x06
32D4:  CLRF   x07
32D6:  MOVLB  0
32D8:  CALL   1928
....................                }       
32DC:  MOVLB  4
32DE:  INCF   xA5,F
32E0:  BRA    322A
....................             }      
....................       } 
....................          else 
32E2:  BRA    32E6
....................             {Flanco2 = 0;}   
32E4:  BCF    x96.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
32E6:  BSF    F92.2
32E8:  BTFSS  F80.2
32EA:  BRA    3384
....................       { 
....................          if(Flanco1 == 0) 
32EC:  BTFSC  x96.1
32EE:  BRA    3382
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
32F0:  BSF    x96.1
32F2:  MOVLW  1E
32F4:  MOVLB  5
32F6:  MOVWF  x03
32F8:  MOVLB  0
32FA:  CALL   106A
32FE:  MOVLB  4
3300:  INCF   xA4,F
....................                for(i=1;i<=4;i++) 
3302:  MOVLW  01
3304:  MOVWF  xA5
3306:  MOVF   xA5,W
3308:  SUBLW  04
330A:  BNC   3382
....................                { 
....................                   if(unidad==i) 
330C:  MOVF   xA5,W
330E:  SUBWF  xA4,W
3310:  BNZ   334A
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
3312:  MOVLW  01
3314:  SUBWF  xA5,W
3316:  CLRF   03
3318:  ADDLW  CF
331A:  MOVWF  FE9
331C:  MOVLW  04
331E:  ADDWFC 03,W
3320:  MOVWF  FEA
3322:  MOVFF  FEF,502
3326:  MOVF   xA5,W
3328:  MULLW  14
332A:  MOVFF  FF3,503
332E:  MOVLB  5
3330:  MOVFF  502,504
3334:  MOVFF  503,505
3338:  MOVLW  1E
333A:  MOVWF  x06
333C:  MOVLW  01
333E:  MOVWF  x07
3340:  MOVLB  0
3342:  CALL   1928
....................                   else 
3346:  BRA    337C
3348:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
334A:  MOVLW  01
334C:  SUBWF  xA5,W
334E:  CLRF   03
3350:  ADDLW  CF
3352:  MOVWF  FE9
3354:  MOVLW  04
3356:  ADDWFC 03,W
3358:  MOVWF  FEA
335A:  MOVFF  FEF,502
335E:  MOVF   xA5,W
3360:  MULLW  14
3362:  MOVFF  FF3,503
3366:  MOVLB  5
3368:  MOVFF  502,504
336C:  MOVFF  503,505
3370:  MOVLW  1E
3372:  MOVWF  x06
3374:  CLRF   x07
3376:  MOVLB  0
3378:  CALL   1928
....................                } 
337C:  MOVLB  4
337E:  INCF   xA5,F
3380:  BRA    3306
....................             } 
....................       } 
....................          else 
3382:  BRA    3386
....................             {Flanco1 = 0;}   
3384:  BCF    x96.1
....................      
....................       if(unidad>4) 
3386:  MOVF   xA4,W
3388:  SUBLW  04
338A:  BTFSC  FD8.0
338C:  BRA    367C
....................       {glcd_fillScreen(OFF);unidad=4; 
338E:  MOVLB  5
3390:  CLRF   x03
3392:  MOVLB  0
3394:  CALL   10D4
3398:  MOVLW  04
339A:  MOVLB  4
339C:  MOVWF  xA4
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
339E:  MOVF   xCF,W
33A0:  SUBLW  03
33A2:  BNZ   348A
33A4:  MOVF   xD0,W
33A6:  SUBLW  08
33A8:  BNZ   348A
33AA:  MOVF   xD1,W
33AC:  SUBLW  09
33AE:  BNZ   348A
33B0:  MOVF   xD2,W
33B2:  SUBLW  02
33B4:  BNZ   348A
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
33B6:  MOVLW  0A
33B8:  MOVWF  FA9
33BA:  CLRF   FA8
33BC:  BCF    FA6.6
33BE:  BCF    FA6.7
33C0:  BSF    FA6.2
33C2:  MOVF   FF2,W
33C4:  MOVWF  00
33C6:  BCF    FF2.7
33C8:  MOVLB  F
33CA:  MOVLW  55
33CC:  MOVWF  FA7
33CE:  MOVLW  AA
33D0:  MOVWF  FA7
33D2:  BSF    FA6.1
33D4:  BTFSC  FA6.1
33D6:  BRA    33D4
33D8:  BCF    FA6.2
33DA:  MOVF   00,W
33DC:  IORWF  FF2,F
33DE:  MOVLW  14
33E0:  MOVLB  5
33E2:  MOVWF  x03
33E4:  MOVLB  0
33E6:  CALL   106A
33EA:  MOVLW  0B
33EC:  MOVWF  FA9
33EE:  CLRF   FA8
33F0:  BCF    FA6.6
33F2:  BCF    FA6.7
33F4:  BSF    FA6.2
33F6:  MOVF   FF2,W
33F8:  MOVWF  00
33FA:  BCF    FF2.7
33FC:  MOVLB  F
33FE:  MOVLW  55
3400:  MOVWF  FA7
3402:  MOVLW  AA
3404:  MOVWF  FA7
3406:  BSF    FA6.1
3408:  BTFSC  FA6.1
340A:  BRA    3408
340C:  BCF    FA6.2
340E:  MOVF   00,W
3410:  IORWF  FF2,F
3412:  MOVLW  14
3414:  MOVLB  5
3416:  MOVWF  x03
3418:  MOVLB  0
341A:  CALL   106A
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
341E:  MOVLW  0C
3420:  MOVWF  FA9
3422:  CLRF   FA8
3424:  BCF    FA6.6
3426:  BCF    FA6.7
3428:  BSF    FA6.2
342A:  MOVF   FF2,W
342C:  MOVWF  00
342E:  BCF    FF2.7
3430:  MOVLB  F
3432:  MOVLW  55
3434:  MOVWF  FA7
3436:  MOVLW  AA
3438:  MOVWF  FA7
343A:  BSF    FA6.1
343C:  BTFSC  FA6.1
343E:  BRA    343C
3440:  BCF    FA6.2
3442:  MOVF   00,W
3444:  IORWF  FF2,F
3446:  MOVLW  14
3448:  MOVLB  5
344A:  MOVWF  x03
344C:  MOVLB  0
344E:  CALL   106A
3452:  MOVLW  0D
3454:  MOVWF  FA9
3456:  CLRF   FA8
3458:  BCF    FA6.6
345A:  BCF    FA6.7
345C:  BSF    FA6.2
345E:  MOVF   FF2,W
3460:  MOVWF  00
3462:  BCF    FF2.7
3464:  MOVLB  F
3466:  MOVLW  55
3468:  MOVWF  FA7
346A:  MOVLW  AA
346C:  MOVWF  FA7
346E:  BSF    FA6.1
3470:  BTFSC  FA6.1
3472:  BRA    3470
3474:  BCF    FA6.2
3476:  MOVF   00,W
3478:  IORWF  FF2,F
347A:  MOVLW  14
347C:  MOVLB  5
347E:  MOVWF  x03
3480:  MOVLB  0
3482:  CALL   106A
....................              reset_cpu();}         
3486:  RESET
3488:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
348A:  MOVF   xD3,W
348C:  SUBWF  xCF,W
348E:  BNZ   3560
3490:  MOVF   xD4,W
3492:  SUBWF  xD0,W
3494:  BNZ   3560
3496:  MOVF   xD5,W
3498:  SUBWF  xD1,W
349A:  BNZ   3560
349C:  MOVF   xD6,W
349E:  SUBWF  xD2,W
34A0:  BNZ   3560
....................          { 
....................             glcd_fillScreen(OFF); 
34A2:  MOVLB  5
34A4:  CLRF   x03
34A6:  MOVLB  0
34A8:  CALL   10D4
....................             strcpy(Menus.Letra,"Clave"); 
34AC:  MOVLW  04
34AE:  MOVWF  FEA
34B0:  MOVLW  E2
34B2:  MOVWF  FE9
34B4:  MOVFF  FF2,502
34B8:  BCF    FF2.7
34BA:  MOVLW  00
34BC:  CALL   0758
34C0:  TBLRD*-
34C2:  TBLRD*+
34C4:  MOVF   FF5,W
34C6:  MOVWF  FEE
34C8:  IORLW  00
34CA:  BNZ   34C2
34CC:  MOVLB  5
34CE:  BTFSC  x02.7
34D0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
34D2:  MOVLW  04
34D4:  MOVWF  x03
34D6:  MOVLW  E2
34D8:  MOVWF  x02
34DA:  MOVLW  1E
34DC:  MOVWF  x04
34DE:  CLRF   x05
34E0:  CLRF   x06
34E2:  MOVLW  02
34E4:  MOVWF  x07
34E6:  MOVLB  0
34E8:  CALL   1702
....................             strcpy(Menus.Letra,"Correcta"); 
34EC:  MOVLW  04
34EE:  MOVWF  FEA
34F0:  MOVLW  E2
34F2:  MOVWF  FE9
34F4:  MOVFF  FF2,502
34F8:  BCF    FF2.7
34FA:  MOVLW  00
34FC:  CALL   0778
3500:  TBLRD*-
3502:  TBLRD*+
3504:  MOVF   FF5,W
3506:  MOVWF  FEE
3508:  IORLW  00
350A:  BNZ   3502
350C:  MOVLB  5
350E:  BTFSC  x02.7
3510:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
3512:  MOVLW  04
3514:  MOVWF  x03
3516:  MOVLW  E2
3518:  MOVWF  x02
351A:  MOVLW  0F
351C:  MOVWF  x04
351E:  MOVLW  1E
3520:  MOVWF  x05
3522:  CLRF   x06
3524:  MOVLW  02
3526:  MOVWF  x07
3528:  MOVLB  0
352A:  CALL   1702
....................             Menu=1;glcd_update();delay_ms(1000); 
352E:  MOVLW  01
3530:  MOVLB  4
3532:  MOVWF  xA3
3534:  MOVLB  0
3536:  CALL   112E
353A:  MOVLW  04
353C:  MOVLB  5
353E:  MOVWF  x02
3540:  MOVLW  FA
3542:  MOVWF  x03
3544:  MOVLB  0
3546:  CALL   106A
354A:  MOVLB  5
354C:  DECFSZ x02,F
354E:  BRA    3540
....................             glcd_fillScreen(OFF);unidad=1; 
3550:  CLRF   x03
3552:  MOVLB  0
3554:  CALL   10D4
3558:  MOVLW  01
355A:  MOVLB  4
355C:  MOVWF  xA4
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
355E:  BRA    367C
....................          { 
....................             glcd_fillScreen(OFF); 
3560:  MOVLB  5
3562:  CLRF   x03
3564:  MOVLB  0
3566:  CALL   10D4
....................             strcpy(Menus.Letra,"Clave"); 
356A:  MOVLW  04
356C:  MOVWF  FEA
356E:  MOVLW  E2
3570:  MOVWF  FE9
3572:  MOVFF  FF2,502
3576:  BCF    FF2.7
3578:  MOVLW  00
357A:  CALL   0758
357E:  TBLRD*-
3580:  TBLRD*+
3582:  MOVF   FF5,W
3584:  MOVWF  FEE
3586:  IORLW  00
3588:  BNZ   3580
358A:  MOVLB  5
358C:  BTFSC  x02.7
358E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3590:  MOVLW  04
3592:  MOVWF  x03
3594:  MOVLW  E2
3596:  MOVWF  x02
3598:  MOVLW  1E
359A:  MOVWF  x04
359C:  CLRF   x05
359E:  CLRF   x06
35A0:  MOVLW  02
35A2:  MOVWF  x07
35A4:  MOVLB  0
35A6:  CALL   1702
....................             strcpy(Menus.Letra,"Incorrecta"); 
35AA:  MOVLW  04
35AC:  MOVWF  FEA
35AE:  MOVLW  E2
35B0:  MOVWF  FE9
35B2:  MOVFF  FF2,502
35B6:  BCF    FF2.7
35B8:  MOVLW  00
35BA:  CALL   079C
35BE:  TBLRD*-
35C0:  TBLRD*+
35C2:  MOVF   FF5,W
35C4:  MOVWF  FEE
35C6:  IORLW  00
35C8:  BNZ   35C0
35CA:  MOVLB  5
35CC:  BTFSC  x02.7
35CE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
35D0:  MOVLW  04
35D2:  MOVWF  x03
35D4:  MOVLW  E2
35D6:  MOVWF  x02
35D8:  CLRF   x04
35DA:  MOVLW  1E
35DC:  MOVWF  x05
35DE:  CLRF   x06
35E0:  MOVLW  02
35E2:  MOVWF  x07
35E4:  MOVLB  0
35E6:  CALL   1702
....................             Menu=0;glcd_update();delay_ms(1000); 
35EA:  MOVLB  4
35EC:  CLRF   xA3
35EE:  MOVLB  0
35F0:  CALL   112E
35F4:  MOVLW  04
35F6:  MOVLB  5
35F8:  MOVWF  x02
35FA:  MOVLW  FA
35FC:  MOVWF  x03
35FE:  MOVLB  0
3600:  CALL   106A
3604:  MOVLB  5
3606:  DECFSZ x02,F
3608:  BRA    35FA
....................             glcd_fillScreen(OFF);unidad=1; 
360A:  CLRF   x03
360C:  MOVLB  0
360E:  CALL   10D4
3612:  MOVLW  01
3614:  MOVLB  4
3616:  MOVWF  xA4
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3618:  CLRF   xCF
361A:  CLRF   xD0
361C:  CLRF   xD1
361E:  CLRF   xD2
....................             displayContrasena(Contrasena[0],20,30,1); 
3620:  MOVFF  4CF,504
3624:  MOVLW  14
3626:  MOVLB  5
3628:  MOVWF  x05
362A:  MOVLW  1E
362C:  MOVWF  x06
362E:  MOVLW  01
3630:  MOVWF  x07
3632:  MOVLB  0
3634:  CALL   1928
....................             displayContrasena(Contrasena[1],40,30,0); 
3638:  MOVFF  4D0,504
363C:  MOVLW  28
363E:  MOVLB  5
3640:  MOVWF  x05
3642:  MOVLW  1E
3644:  MOVWF  x06
3646:  CLRF   x07
3648:  MOVLB  0
364A:  CALL   1928
....................             displayContrasena(Contrasena[2],60,30,0); 
364E:  MOVFF  4D1,504
3652:  MOVLW  3C
3654:  MOVLB  5
3656:  MOVWF  x05
3658:  MOVLW  1E
365A:  MOVWF  x06
365C:  CLRF   x07
365E:  MOVLB  0
3660:  CALL   1928
....................             displayContrasena(Contrasena[3],80,30,0); 
3664:  MOVFF  4D2,504
3668:  MOVLW  50
366A:  MOVLB  5
366C:  MOVWF  x05
366E:  MOVLW  1E
3670:  MOVWF  x06
3672:  CLRF   x07
3674:  MOVLB  0
3676:  CALL   1928
367A:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
367C:  DECFSZ xA3,W
367E:  BRA    3AB4
....................        
....................       if(visual==1) 
3680:  BTFSS  x96.4
3682:  BRA    3A3A
....................       { 
....................          if(Opcion>6) 
3684:  MOVF   xA8,W
3686:  SUBLW  06
3688:  BC    368E
....................          {Opcion=1;} 
368A:  MOVLW  01
368C:  MOVWF  xA8
....................          if(Opcion<1) 
368E:  MOVF   xA8,F
3690:  BNZ   3696
....................          {Opcion=6;} 
3692:  MOVLW  06
3694:  MOVWF  xA8
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
3696:  MOVLW  04
3698:  MOVWF  FEA
369A:  MOVLW  E2
369C:  MOVWF  FE9
369E:  MOVFF  FF2,502
36A2:  BCF    FF2.7
36A4:  MOVLW  00
36A6:  MOVLB  0
36A8:  CALL   07C2
36AC:  TBLRD*-
36AE:  TBLRD*+
36B0:  MOVF   FF5,W
36B2:  MOVWF  FEE
36B4:  IORLW  00
36B6:  BNZ   36AE
36B8:  MOVLB  5
36BA:  BTFSC  x02.7
36BC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
36BE:  MOVLW  04
36C0:  MOVWF  x03
36C2:  MOVLW  E2
36C4:  MOVWF  x02
36C6:  MOVLW  1E
36C8:  MOVWF  x04
36CA:  CLRF   x05
36CC:  MOVLW  01
36CE:  MOVWF  x06
36D0:  MOVWF  x07
36D2:  MOVLB  0
36D4:  CALL   1702
....................        
....................          if(Opcion==1)    
36D8:  MOVLB  4
36DA:  DECFSZ xA8,W
36DC:  BRA    3724
....................             {strcpy(Menus.Letra,"Inst. no envueltos"); 
36DE:  MOVLW  04
36E0:  MOVWF  FEA
36E2:  MOVLW  E2
36E4:  MOVWF  FE9
36E6:  MOVFF  FF2,502
36EA:  BCF    FF2.7
36EC:  MOVLW  00
36EE:  MOVLB  0
36F0:  CALL   07EC
36F4:  TBLRD*-
36F6:  TBLRD*+
36F8:  MOVF   FF5,W
36FA:  MOVWF  FEE
36FC:  IORLW  00
36FE:  BNZ   36F6
3700:  MOVLB  5
3702:  BTFSC  x02.7
3704:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
3706:  MOVLW  04
3708:  MOVWF  x03
370A:  MOVLW  E2
370C:  MOVWF  x02
370E:  CLRF   x04
3710:  MOVLW  0A
3712:  MOVWF  x05
3714:  MOVLW  01
3716:  MOVWF  x06
3718:  MOVWF  x07
371A:  MOVLB  0
371C:  CALL   1702
....................          else 
3720:  BRA    3766
3722:  MOVLB  4
....................             {strcpy(Menus.Letra,"Inst. no envueltos"); 
3724:  MOVLW  04
3726:  MOVWF  FEA
3728:  MOVLW  E2
372A:  MOVWF  FE9
372C:  MOVFF  FF2,502
3730:  BCF    FF2.7
3732:  MOVLW  00
3734:  MOVLB  0
3736:  CALL   07EC
373A:  TBLRD*-
373C:  TBLRD*+
373E:  MOVF   FF5,W
3740:  MOVWF  FEE
3742:  IORLW  00
3744:  BNZ   373C
3746:  MOVLB  5
3748:  BTFSC  x02.7
374A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
374C:  MOVLW  04
374E:  MOVWF  x03
3750:  MOVLW  E2
3752:  MOVWF  x02
3754:  CLRF   x04
3756:  MOVLW  0A
3758:  MOVWF  x05
375A:  CLRF   x06
375C:  MOVLW  01
375E:  MOVWF  x07
3760:  MOVLB  0
3762:  CALL   1702
....................           
....................          if(Opcion==2)    
3766:  MOVLB  4
3768:  MOVF   xA8,W
376A:  SUBLW  02
376C:  BNZ   37B4
....................             {strcpy(Menus.Letra,"Inst. envueltos"); 
376E:  MOVLW  04
3770:  MOVWF  FEA
3772:  MOVLW  E2
3774:  MOVWF  FE9
3776:  MOVFF  FF2,502
377A:  BCF    FF2.7
377C:  MOVLW  00
377E:  MOVLB  0
3780:  CALL   081A
3784:  TBLRD*-
3786:  TBLRD*+
3788:  MOVF   FF5,W
378A:  MOVWF  FEE
378C:  IORLW  00
378E:  BNZ   3786
3790:  MOVLB  5
3792:  BTFSC  x02.7
3794:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
3796:  MOVLW  04
3798:  MOVWF  x03
379A:  MOVLW  E2
379C:  MOVWF  x02
379E:  CLRF   x04
37A0:  MOVLW  13
37A2:  MOVWF  x05
37A4:  MOVLW  01
37A6:  MOVWF  x06
37A8:  MOVWF  x07
37AA:  MOVLB  0
37AC:  CALL   1702
....................          else 
37B0:  BRA    37F6
37B2:  MOVLB  4
....................             {strcpy(Menus.Letra,"Inst. envueltos"); 
37B4:  MOVLW  04
37B6:  MOVWF  FEA
37B8:  MOVLW  E2
37BA:  MOVWF  FE9
37BC:  MOVFF  FF2,502
37C0:  BCF    FF2.7
37C2:  MOVLW  00
37C4:  MOVLB  0
37C6:  CALL   081A
37CA:  TBLRD*-
37CC:  TBLRD*+
37CE:  MOVF   FF5,W
37D0:  MOVWF  FEE
37D2:  IORLW  00
37D4:  BNZ   37CC
37D6:  MOVLB  5
37D8:  BTFSC  x02.7
37DA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
37DC:  MOVLW  04
37DE:  MOVWF  x03
37E0:  MOVLW  E2
37E2:  MOVWF  x02
37E4:  CLRF   x04
37E6:  MOVLW  13
37E8:  MOVWF  x05
37EA:  CLRF   x06
37EC:  MOVLW  01
37EE:  MOVWF  x07
37F0:  MOVLB  0
37F2:  CALL   1702
....................              
....................           if(Opcion==3)    
37F6:  MOVLB  4
37F8:  MOVF   xA8,W
37FA:  SUBLW  03
37FC:  BNZ   3844
....................             {strcpy(Menus.Letra,"Liquidos"); 
37FE:  MOVLW  04
3800:  MOVWF  FEA
3802:  MOVLW  E2
3804:  MOVWF  FE9
3806:  MOVFF  FF2,502
380A:  BCF    FF2.7
380C:  MOVLW  00
380E:  MOVLB  0
3810:  CALL   0844
3814:  TBLRD*-
3816:  TBLRD*+
3818:  MOVF   FF5,W
381A:  MOVWF  FEE
381C:  IORLW  00
381E:  BNZ   3816
3820:  MOVLB  5
3822:  BTFSC  x02.7
3824:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
3826:  MOVLW  04
3828:  MOVWF  x03
382A:  MOVLW  E2
382C:  MOVWF  x02
382E:  CLRF   x04
3830:  MOVLW  1C
3832:  MOVWF  x05
3834:  MOVLW  01
3836:  MOVWF  x06
3838:  MOVWF  x07
383A:  MOVLB  0
383C:  CALL   1702
....................          else 
3840:  BRA    3886
3842:  MOVLB  4
....................             {strcpy(Menus.Letra,"Liquidos"); 
3844:  MOVLW  04
3846:  MOVWF  FEA
3848:  MOVLW  E2
384A:  MOVWF  FE9
384C:  MOVFF  FF2,502
3850:  BCF    FF2.7
3852:  MOVLW  00
3854:  MOVLB  0
3856:  CALL   0844
385A:  TBLRD*-
385C:  TBLRD*+
385E:  MOVF   FF5,W
3860:  MOVWF  FEE
3862:  IORLW  00
3864:  BNZ   385C
3866:  MOVLB  5
3868:  BTFSC  x02.7
386A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
386C:  MOVLW  04
386E:  MOVWF  x03
3870:  MOVLW  E2
3872:  MOVWF  x02
3874:  CLRF   x04
3876:  MOVLW  1C
3878:  MOVWF  x05
387A:  CLRF   x06
387C:  MOVLW  01
387E:  MOVWF  x07
3880:  MOVLB  0
3882:  CALL   1702
....................              
....................          if(Opcion==4)    
3886:  MOVLB  4
3888:  MOVF   xA8,W
388A:  SUBLW  04
388C:  BNZ   38D4
....................             {strcpy(Menus.Letra,"Secado"); 
388E:  MOVLW  04
3890:  MOVWF  FEA
3892:  MOVLW  E2
3894:  MOVWF  FE9
3896:  MOVFF  FF2,502
389A:  BCF    FF2.7
389C:  MOVLW  00
389E:  MOVLB  0
38A0:  CALL   0868
38A4:  TBLRD*-
38A6:  TBLRD*+
38A8:  MOVF   FF5,W
38AA:  MOVWF  FEE
38AC:  IORLW  00
38AE:  BNZ   38A6
38B0:  MOVLB  5
38B2:  BTFSC  x02.7
38B4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
38B6:  MOVLW  04
38B8:  MOVWF  x03
38BA:  MOVLW  E2
38BC:  MOVWF  x02
38BE:  CLRF   x04
38C0:  MOVLW  25
38C2:  MOVWF  x05
38C4:  MOVLW  01
38C6:  MOVWF  x06
38C8:  MOVWF  x07
38CA:  MOVLB  0
38CC:  CALL   1702
....................          else 
38D0:  BRA    3916
38D2:  MOVLB  4
....................             {strcpy(Menus.Letra,"Secado"); 
38D4:  MOVLW  04
38D6:  MOVWF  FEA
38D8:  MOVLW  E2
38DA:  MOVWF  FE9
38DC:  MOVFF  FF2,502
38E0:  BCF    FF2.7
38E2:  MOVLW  00
38E4:  MOVLB  0
38E6:  CALL   0868
38EA:  TBLRD*-
38EC:  TBLRD*+
38EE:  MOVF   FF5,W
38F0:  MOVWF  FEE
38F2:  IORLW  00
38F4:  BNZ   38EC
38F6:  MOVLB  5
38F8:  BTFSC  x02.7
38FA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
38FC:  MOVLW  04
38FE:  MOVWF  x03
3900:  MOVLW  E2
3902:  MOVWF  x02
3904:  CLRF   x04
3906:  MOVLW  25
3908:  MOVWF  x05
390A:  CLRF   x06
390C:  MOVLW  01
390E:  MOVWF  x07
3910:  MOVLB  0
3912:  CALL   1702
....................              
....................          if(Opcion==5)    
3916:  MOVLB  4
3918:  MOVF   xA8,W
391A:  SUBLW  05
391C:  BNZ   3964
....................             {strcpy(Menus.Letra,"Personalizado"); 
391E:  MOVLW  04
3920:  MOVWF  FEA
3922:  MOVLW  E2
3924:  MOVWF  FE9
3926:  MOVFF  FF2,502
392A:  BCF    FF2.7
392C:  MOVLW  00
392E:  MOVLB  0
3930:  CALL   088A
3934:  TBLRD*-
3936:  TBLRD*+
3938:  MOVF   FF5,W
393A:  MOVWF  FEE
393C:  IORLW  00
393E:  BNZ   3936
3940:  MOVLB  5
3942:  BTFSC  x02.7
3944:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
3946:  MOVLW  04
3948:  MOVWF  x03
394A:  MOVLW  E2
394C:  MOVWF  x02
394E:  CLRF   x04
3950:  MOVLW  2E
3952:  MOVWF  x05
3954:  MOVLW  01
3956:  MOVWF  x06
3958:  MOVWF  x07
395A:  MOVLB  0
395C:  CALL   1702
....................          else 
3960:  BRA    39A6
3962:  MOVLB  4
....................             {strcpy(Menus.Letra,"Personalizado"); 
3964:  MOVLW  04
3966:  MOVWF  FEA
3968:  MOVLW  E2
396A:  MOVWF  FE9
396C:  MOVFF  FF2,502
3970:  BCF    FF2.7
3972:  MOVLW  00
3974:  MOVLB  0
3976:  CALL   088A
397A:  TBLRD*-
397C:  TBLRD*+
397E:  MOVF   FF5,W
3980:  MOVWF  FEE
3982:  IORLW  00
3984:  BNZ   397C
3986:  MOVLB  5
3988:  BTFSC  x02.7
398A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
398C:  MOVLW  04
398E:  MOVWF  x03
3990:  MOVLW  E2
3992:  MOVWF  x02
3994:  CLRF   x04
3996:  MOVLW  2E
3998:  MOVWF  x05
399A:  CLRF   x06
399C:  MOVLW  01
399E:  MOVWF  x07
39A0:  MOVLB  0
39A2:  CALL   1702
....................              
....................          if(Opcion==6)    
39A6:  MOVLB  4
39A8:  MOVF   xA8,W
39AA:  SUBLW  06
39AC:  BNZ   39F4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
39AE:  MOVLW  04
39B0:  MOVWF  FEA
39B2:  MOVLW  E2
39B4:  MOVWF  FE9
39B6:  MOVFF  FF2,502
39BA:  BCF    FF2.7
39BC:  MOVLW  00
39BE:  MOVLB  0
39C0:  CALL   08B2
39C4:  TBLRD*-
39C6:  TBLRD*+
39C8:  MOVF   FF5,W
39CA:  MOVWF  FEE
39CC:  IORLW  00
39CE:  BNZ   39C6
39D0:  MOVLB  5
39D2:  BTFSC  x02.7
39D4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
39D6:  MOVLW  04
39D8:  MOVWF  x03
39DA:  MOVLW  E2
39DC:  MOVWF  x02
39DE:  CLRF   x04
39E0:  MOVLW  37
39E2:  MOVWF  x05
39E4:  MOVLW  01
39E6:  MOVWF  x06
39E8:  MOVWF  x07
39EA:  MOVLB  0
39EC:  CALL   1702
....................          else 
39F0:  BRA    3A36
39F2:  MOVLB  4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
39F4:  MOVLW  04
39F6:  MOVWF  FEA
39F8:  MOVLW  E2
39FA:  MOVWF  FE9
39FC:  MOVFF  FF2,502
3A00:  BCF    FF2.7
3A02:  MOVLW  00
3A04:  MOVLB  0
3A06:  CALL   08B2
3A0A:  TBLRD*-
3A0C:  TBLRD*+
3A0E:  MOVF   FF5,W
3A10:  MOVWF  FEE
3A12:  IORLW  00
3A14:  BNZ   3A0C
3A16:  MOVLB  5
3A18:  BTFSC  x02.7
3A1A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
3A1C:  MOVLW  04
3A1E:  MOVWF  x03
3A20:  MOVLW  E2
3A22:  MOVWF  x02
3A24:  CLRF   x04
3A26:  MOVLW  37
3A28:  MOVWF  x05
3A2A:  CLRF   x06
3A2C:  MOVLW  01
3A2E:  MOVWF  x07
3A30:  MOVLB  0
3A32:  CALL   1702
....................             visual=0; 
3A36:  MOVLB  4
3A38:  BCF    x96.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
3A3A:  BSF    F92.0
3A3C:  BTFSS  F80.0
3A3E:  BRA    3A5A
....................          {  if(Flanco == 0)  
3A40:  BTFSC  x96.0
3A42:  BRA    3A58
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3A44:  BSF    x96.0
3A46:  MOVLW  1E
3A48:  MOVLB  5
3A4A:  MOVWF  x03
3A4C:  MOVLB  0
3A4E:  CALL   106A
3A52:  MOVLB  4
3A54:  DECF   xA8,F
3A56:  BSF    x96.4
....................                } 
....................          } 
....................             else 
3A58:  BRA    3A5C
....................                {Flanco = 0;} 
3A5A:  BCF    x96.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
3A5C:  BSF    F92.1
3A5E:  BTFSS  F80.1
3A60:  BRA    3A7C
....................          {  if(Flanco2 == 0)  
3A62:  BTFSC  x96.2
3A64:  BRA    3A7A
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
3A66:  BSF    x96.2
3A68:  MOVLW  1E
3A6A:  MOVLB  5
3A6C:  MOVWF  x03
3A6E:  MOVLB  0
3A70:  CALL   106A
3A74:  MOVLB  4
3A76:  INCF   xA8,F
3A78:  BSF    x96.4
....................                }      
....................          } 
....................             else 
3A7A:  BRA    3A7E
....................                {Flanco2 = 0;}   
3A7C:  BCF    x96.2
....................                 
....................        if(RIGHT)//Si oprime SET 
3A7E:  BSF    F92.2
3A80:  BTFSS  F80.2
3A82:  BRA    3AB2
....................          {  if(Flanco1 == 0)  
3A84:  BTFSC  x96.1
3A86:  BRA    3AB0
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
3A88:  BSF    x96.1
3A8A:  MOVLW  1E
3A8C:  MOVLB  5
3A8E:  MOVWF  x03
3A90:  MOVLB  0
3A92:  CALL   106A
3A96:  MOVLW  03
3A98:  MOVLB  4
3A9A:  ADDWF  xA8,W
3A9C:  MOVWF  xA3
3A9E:  MOVLW  01
3AA0:  MOVWF  xA8
3AA2:  MOVLB  5
3AA4:  CLRF   x03
3AA6:  MOVLB  0
3AA8:  CALL   10D4
3AAC:  MOVLB  4
3AAE:  BSF    x96.4
....................                } 
....................          } 
....................             else 
3AB0:  BRA    3AB4
....................                {Flanco1 = 0;}   
3AB2:  BCF    x96.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Instrumentos No Envueltos 
3AB4:  MOVF   xA3,W
3AB6:  SUBLW  04
3AB8:  BTFSS  FD8.2
3ABA:  BRA    3DE4
....................        
....................       if(visual==1) 
3ABC:  BTFSS  x96.4
3ABE:  BRA    3C12
....................       { 
....................          glcd_imagen(2); //Guante 
3AC0:  MOVLW  02
3AC2:  MOVLB  5
3AC4:  MOVWF  x02
3AC6:  MOVLB  0
3AC8:  CALL   213E
....................          strcpy(Menus.Letra,"No Envueltos"); 
3ACC:  MOVLW  04
3ACE:  MOVWF  FEA
3AD0:  MOVLW  E2
3AD2:  MOVWF  FE9
3AD4:  MOVFF  FF2,502
3AD8:  BCF    FF2.7
3ADA:  MOVLW  00
3ADC:  CALL   08DA
3AE0:  TBLRD*-
3AE2:  TBLRD*+
3AE4:  MOVF   FF5,W
3AE6:  MOVWF  FEE
3AE8:  IORLW  00
3AEA:  BNZ   3AE2
3AEC:  MOVLB  5
3AEE:  BTFSC  x02.7
3AF0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3AF2:  MOVLW  04
3AF4:  MOVWF  x03
3AF6:  MOVLW  E2
3AF8:  MOVWF  x02
3AFA:  CLRF   x04
3AFC:  CLRF   x05
3AFE:  MOVLW  01
3B00:  MOVWF  x06
3B02:  MOVLW  02
3B04:  MOVWF  x07
3B06:  MOVLB  0
3B08:  CALL   1702
....................          
....................          strcpy(Menus.Letra,"Ins. No Envueltos"); 
3B0C:  MOVLW  04
3B0E:  MOVWF  FEA
3B10:  MOVLW  E2
3B12:  MOVWF  FE9
3B14:  MOVFF  FF2,502
3B18:  BCF    FF2.7
3B1A:  MOVLW  00
3B1C:  CALL   0902
3B20:  TBLRD*-
3B22:  TBLRD*+
3B24:  MOVF   FF5,W
3B26:  MOVWF  FEE
3B28:  IORLW  00
3B2A:  BNZ   3B22
3B2C:  MOVLB  5
3B2E:  BTFSC  x02.7
3B30:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3B32:  MOVLW  04
3B34:  MOVWF  x03
3B36:  MOVLW  E2
3B38:  MOVWF  x02
3B3A:  MOVLW  07
3B3C:  MOVWF  x04
3B3E:  MOVLW  37
3B40:  MOVWF  x05
3B42:  CLRF   x06
3B44:  MOVLW  01
3B46:  MOVWF  x07
3B48:  MOVLB  0
3B4A:  CALL   1702
....................           
....................          strcpy(Menus.Letra,"Temperatura:134 C"); 
3B4E:  MOVLW  04
3B50:  MOVWF  FEA
3B52:  MOVLW  E2
3B54:  MOVWF  FE9
3B56:  MOVFF  FF2,502
3B5A:  BCF    FF2.7
3B5C:  MOVLW  00
3B5E:  CALL   092E
3B62:  TBLRD*-
3B64:  TBLRD*+
3B66:  MOVF   FF5,W
3B68:  MOVWF  FEE
3B6A:  IORLW  00
3B6C:  BNZ   3B64
3B6E:  MOVLB  5
3B70:  BTFSC  x02.7
3B72:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3B74:  MOVLW  04
3B76:  MOVWF  x03
3B78:  MOVLW  E2
3B7A:  MOVWF  x02
3B7C:  CLRF   x04
3B7E:  MOVLW  1A
3B80:  MOVWF  x05
3B82:  CLRF   x06
3B84:  MOVLW  01
3B86:  MOVWF  x07
3B88:  MOVLB  0
3B8A:  CALL   1702
....................          strcpy(Menus.Letra,"T. Esterilizacion:3m"); 
3B8E:  MOVLW  04
3B90:  MOVWF  FEA
3B92:  MOVLW  E2
3B94:  MOVWF  FE9
3B96:  MOVFF  FF2,502
3B9A:  BCF    FF2.7
3B9C:  MOVLW  00
3B9E:  CALL   095A
3BA2:  TBLRD*-
3BA4:  TBLRD*+
3BA6:  MOVF   FF5,W
3BA8:  MOVWF  FEE
3BAA:  IORLW  00
3BAC:  BNZ   3BA4
3BAE:  MOVLB  5
3BB0:  BTFSC  x02.7
3BB2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3BB4:  MOVLW  04
3BB6:  MOVWF  x03
3BB8:  MOVLW  E2
3BBA:  MOVWF  x02
3BBC:  CLRF   x04
3BBE:  MOVLW  24
3BC0:  MOVWF  x05
3BC2:  CLRF   x06
3BC4:  MOVLW  01
3BC6:  MOVWF  x07
3BC8:  MOVLB  0
3BCA:  CALL   1702
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3BCE:  MOVLW  04
3BD0:  MOVWF  FEA
3BD2:  MOVLW  E2
3BD4:  MOVWF  FE9
3BD6:  MOVFF  FF2,502
3BDA:  BCF    FF2.7
3BDC:  MOVLW  00
3BDE:  CALL   098A
3BE2:  TBLRD*-
3BE4:  TBLRD*+
3BE6:  MOVF   FF5,W
3BE8:  MOVWF  FEE
3BEA:  IORLW  00
3BEC:  BNZ   3BE4
3BEE:  MOVLB  5
3BF0:  BTFSC  x02.7
3BF2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3BF4:  MOVLW  04
3BF6:  MOVWF  x03
3BF8:  MOVLW  E2
3BFA:  MOVWF  x02
3BFC:  CLRF   x04
3BFE:  MOVLW  2E
3C00:  MOVWF  x05
3C02:  CLRF   x06
3C04:  MOVLW  01
3C06:  MOVWF  x07
3C08:  MOVLB  0
3C0A:  CALL   1702
....................          visual=0; 
3C0E:  MOVLB  4
3C10:  BCF    x96.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3C12:  BSF    F92.3
3C14:  BTFSS  F80.3
3C16:  BRA    3C38
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3C18:  MOVLW  1E
3C1A:  MOVLB  5
3C1C:  MOVWF  x03
3C1E:  MOVLB  0
3C20:  CALL   106A
3C24:  MOVLW  01
3C26:  MOVLB  4
3C28:  MOVWF  xA3
3C2A:  MOVLB  5
3C2C:  CLRF   x03
3C2E:  MOVLB  0
3C30:  CALL   10D4
3C34:  MOVLB  4
3C36:  BSF    x96.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3C38:  BSF    F92.2
3C3A:  BTFSS  F80.2
3C3C:  BRA    3DE4
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=3;Testerilizacionp[3]=0;visual=1; 
3C3E:  CLRF   xC3
3C40:  CLRF   xC4
3C42:  MOVLW  03
3C44:  MOVWF  xC5
3C46:  CLRF   xC6
3C48:  BSF    x96.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;minutos=0;Setpoint=134;Menu=20; 
3C4A:  CLRF   xCB
3C4C:  CLRF   xCC
3C4E:  CLRF   xCD
3C50:  CLRF   xCE
3C52:  CLRF   xB4
3C54:  CLRF   xB3
3C56:  MOVLW  86
3C58:  MOVWF  xA6
3C5A:  MOVLW  14
3C5C:  MOVWF  xA3
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3C5E:  MOVWF  xA3
3C60:  MOVLW  0F
3C62:  MOVLB  5
3C64:  MOVWF  x14
3C66:  MOVLW  12
3C68:  MOVWF  x15
3C6A:  MOVLW  1E
3C6C:  MOVWF  x16
3C6E:  MOVLW  35
3C70:  MOVWF  x17
3C72:  CLRF   x18
3C74:  MOVLW  01
3C76:  MOVWF  x19
3C78:  MOVLB  0
3C7A:  CALL   1640
3C7E:  MOVLB  4
3C80:  CLRF   xAA
3C82:  MOVLW  C0
3C84:  IORWF  FF2,F
3C86:  MOVLB  5
3C88:  CLRF   x03
3C8A:  MOVLB  0
3C8C:  CALL   10D4
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3C90:  MOVLW  04
3C92:  MOVWF  FEA
3C94:  MOVLW  E2
3C96:  MOVWF  FE9
3C98:  MOVFF  FF2,502
3C9C:  BCF    FF2.7
3C9E:  MOVLW  00
3CA0:  CALL   09B4
3CA4:  TBLRD*-
3CA6:  TBLRD*+
3CA8:  MOVF   FF5,W
3CAA:  MOVWF  FEE
3CAC:  IORLW  00
3CAE:  BNZ   3CA6
3CB0:  MOVLB  5
3CB2:  BTFSC  x02.7
3CB4:  BSF    FF2.7
3CB6:  MOVLW  04
3CB8:  MOVWF  x03
3CBA:  MOVLW  E2
3CBC:  MOVWF  x02
3CBE:  CLRF   x04
3CC0:  MOVLW  37
3CC2:  MOVWF  x05
3CC4:  MOVLW  02
3CC6:  MOVWF  x06
3CC8:  MOVLW  01
3CCA:  MOVWF  x07
3CCC:  MOVLB  0
3CCE:  CALL   1702
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3CD2:  MOVLW  0F
3CD4:  MOVLB  5
3CD6:  MOVWF  x14
3CD8:  MOVLW  12
3CDA:  MOVWF  x15
3CDC:  MOVLW  1E
3CDE:  MOVWF  x16
3CE0:  MOVLW  35
3CE2:  MOVWF  x17
3CE4:  CLRF   x18
3CE6:  MOVLW  01
3CE8:  MOVWF  x19
3CEA:  MOVLB  0
3CEC:  CALL   1640
....................          glcd_imagen(5); 
3CF0:  MOVLW  05
3CF2:  MOVLB  5
3CF4:  MOVWF  x02
3CF6:  MOVLB  0
3CF8:  CALL   213E
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3CFC:  MOVLW  04
3CFE:  MOVWF  FEA
3D00:  MOVLW  E2
3D02:  MOVWF  FE9
3D04:  MOVFF  FF2,502
3D08:  BCF    FF2.7
3D0A:  MOVLW  00
3D0C:  CALL   09DA
3D10:  TBLRD*-
3D12:  TBLRD*+
3D14:  MOVF   FF5,W
3D16:  MOVWF  FEE
3D18:  IORLW  00
3D1A:  BNZ   3D12
3D1C:  MOVLB  5
3D1E:  BTFSC  x02.7
3D20:  BSF    FF2.7
3D22:  MOVLW  04
3D24:  MOVWF  x03
3D26:  MOVLW  E2
3D28:  MOVWF  x02
3D2A:  CLRF   x04
3D2C:  CLRF   x05
3D2E:  MOVLW  02
3D30:  MOVWF  x06
3D32:  MOVLW  01
3D34:  MOVWF  x07
3D36:  MOVLB  0
3D38:  CALL   1702
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3D3C:  MOVLW  04
3D3E:  MOVWF  FEA
3D40:  MOVLW  E2
3D42:  MOVWF  FE9
3D44:  MOVFF  FF2,502
3D48:  BCF    FF2.7
3D4A:  MOVLW  00
3D4C:  CALL   09FC
3D50:  TBLRD*-
3D52:  TBLRD*+
3D54:  MOVF   FF5,W
3D56:  MOVWF  FEE
3D58:  IORLW  00
3D5A:  BNZ   3D52
3D5C:  MOVLB  5
3D5E:  BTFSC  x02.7
3D60:  BSF    FF2.7
3D62:  MOVLW  04
3D64:  MOVWF  x03
3D66:  MOVLW  E2
3D68:  MOVWF  x02
3D6A:  CLRF   x04
3D6C:  MOVLW  08
3D6E:  MOVWF  x05
3D70:  MOVLW  02
3D72:  MOVWF  x06
3D74:  MOVLW  01
3D76:  MOVWF  x07
3D78:  MOVLB  0
3D7A:  CALL   1702
....................          glcd_circle(95,40,2,NO,ON); 
3D7E:  MOVLW  5F
3D80:  MOVLB  5
3D82:  MOVWF  x02
3D84:  MOVLW  28
3D86:  MOVWF  x03
3D88:  MOVLW  02
3D8A:  MOVWF  x04
3D8C:  CLRF   x05
3D8E:  MOVLW  01
3D90:  MOVWF  x06
3D92:  MOVLB  0
3D94:  CALL   223A
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3D98:  MOVLW  04
3D9A:  MOVWF  FEA
3D9C:  MOVLW  E2
3D9E:  MOVWF  FE9
3DA0:  MOVFF  FF2,502
3DA4:  BCF    FF2.7
3DA6:  MOVLW  00
3DA8:  CALL   0A1E
3DAC:  TBLRD*-
3DAE:  TBLRD*+
3DB0:  MOVF   FF5,W
3DB2:  MOVWF  FEE
3DB4:  IORLW  00
3DB6:  BNZ   3DAE
3DB8:  MOVLB  5
3DBA:  BTFSC  x02.7
3DBC:  BSF    FF2.7
3DBE:  MOVLW  04
3DC0:  MOVWF  x03
3DC2:  MOVLW  E2
3DC4:  MOVWF  x02
3DC6:  MOVLW  66
3DC8:  MOVWF  x04
3DCA:  MOVLW  28
3DCC:  MOVWF  x05
3DCE:  MOVLW  02
3DD0:  MOVWF  x06
3DD2:  MOVWF  x07
3DD4:  MOVLB  0
3DD6:  CALL   1702
....................          MuestraTiemposProgramados(); 
3DDA:  CALL   263A
....................          EVTrampa=10; 
3DDE:  MOVLW  0A
3DE0:  MOVLB  4
3DE2:  MOVWF  x9C
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Instrumentos Envueltos      
3DE4:  MOVF   xA3,W
3DE6:  SUBLW  05
3DE8:  BTFSS  FD8.2
3DEA:  BRA    4132
....................        
....................       if(visual==1) 
3DEC:  BTFSS  x96.4
3DEE:  BRA    3F44
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
3DF0:  MOVLW  03
3DF2:  MOVLB  5
3DF4:  MOVWF  x02
3DF6:  MOVLB  0
3DF8:  CALL   213E
....................           
....................          strcpy(Menus.Letra,"Envueltos"); 
3DFC:  MOVLW  04
3DFE:  MOVWF  FEA
3E00:  MOVLW  E2
3E02:  MOVWF  FE9
3E04:  MOVFF  FF2,502
3E08:  BCF    FF2.7
3E0A:  MOVLW  00
3E0C:  CALL   0A3A
3E10:  TBLRD*-
3E12:  TBLRD*+
3E14:  MOVF   FF5,W
3E16:  MOVWF  FEE
3E18:  IORLW  00
3E1A:  BNZ   3E12
3E1C:  MOVLB  5
3E1E:  BTFSC  x02.7
3E20:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3E22:  MOVLW  04
3E24:  MOVWF  x03
3E26:  MOVLW  E2
3E28:  MOVWF  x02
3E2A:  CLRF   x04
3E2C:  CLRF   x05
3E2E:  MOVLW  01
3E30:  MOVWF  x06
3E32:  MOVLW  02
3E34:  MOVWF  x07
3E36:  MOVLB  0
3E38:  CALL   1702
....................           
....................          strcpy(Menus.Letra,"Ins. Envueltos"); 
3E3C:  MOVLW  04
3E3E:  MOVWF  FEA
3E40:  MOVLW  E2
3E42:  MOVWF  FE9
3E44:  MOVFF  FF2,502
3E48:  BCF    FF2.7
3E4A:  MOVLW  00
3E4C:  CALL   0A5E
3E50:  TBLRD*-
3E52:  TBLRD*+
3E54:  MOVF   FF5,W
3E56:  MOVWF  FEE
3E58:  IORLW  00
3E5A:  BNZ   3E52
3E5C:  MOVLB  5
3E5E:  BTFSC  x02.7
3E60:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3E62:  MOVLW  04
3E64:  MOVWF  x03
3E66:  MOVLW  E2
3E68:  MOVWF  x02
3E6A:  MOVLW  07
3E6C:  MOVWF  x04
3E6E:  MOVLW  37
3E70:  MOVWF  x05
3E72:  MOVLW  02
3E74:  MOVWF  x06
3E76:  MOVLW  01
3E78:  MOVWF  x07
3E7A:  MOVLB  0
3E7C:  CALL   1702
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3E80:  MOVLW  04
3E82:  MOVWF  FEA
3E84:  MOVLW  E2
3E86:  MOVWF  FE9
3E88:  MOVFF  FF2,502
3E8C:  BCF    FF2.7
3E8E:  MOVLW  00
3E90:  CALL   0A88
3E94:  TBLRD*-
3E96:  TBLRD*+
3E98:  MOVF   FF5,W
3E9A:  MOVWF  FEE
3E9C:  IORLW  00
3E9E:  BNZ   3E96
3EA0:  MOVLB  5
3EA2:  BTFSC  x02.7
3EA4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3EA6:  MOVLW  04
3EA8:  MOVWF  x03
3EAA:  MOVLW  E2
3EAC:  MOVWF  x02
3EAE:  CLRF   x04
3EB0:  MOVLW  1A
3EB2:  MOVWF  x05
3EB4:  CLRF   x06
3EB6:  MOVLW  01
3EB8:  MOVWF  x07
3EBA:  MOVLB  0
3EBC:  CALL   1702
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3EC0:  MOVLW  04
3EC2:  MOVWF  FEA
3EC4:  MOVLW  E2
3EC6:  MOVWF  FE9
3EC8:  MOVFF  FF2,502
3ECC:  BCF    FF2.7
3ECE:  MOVLW  00
3ED0:  CALL   0AB4
3ED4:  TBLRD*-
3ED6:  TBLRD*+
3ED8:  MOVF   FF5,W
3EDA:  MOVWF  FEE
3EDC:  IORLW  00
3EDE:  BNZ   3ED6
3EE0:  MOVLB  5
3EE2:  BTFSC  x02.7
3EE4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3EE6:  MOVLW  04
3EE8:  MOVWF  x03
3EEA:  MOVLW  E2
3EEC:  MOVWF  x02
3EEE:  CLRF   x04
3EF0:  MOVLW  24
3EF2:  MOVWF  x05
3EF4:  CLRF   x06
3EF6:  MOVLW  01
3EF8:  MOVWF  x07
3EFA:  MOVLB  0
3EFC:  CALL   1702
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3F00:  MOVLW  04
3F02:  MOVWF  FEA
3F04:  MOVLW  E2
3F06:  MOVWF  FE9
3F08:  MOVFF  FF2,502
3F0C:  BCF    FF2.7
3F0E:  MOVLW  00
3F10:  CALL   0AE4
3F14:  TBLRD*-
3F16:  TBLRD*+
3F18:  MOVF   FF5,W
3F1A:  MOVWF  FEE
3F1C:  IORLW  00
3F1E:  BNZ   3F16
3F20:  MOVLB  5
3F22:  BTFSC  x02.7
3F24:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
3F26:  MOVLW  04
3F28:  MOVWF  x03
3F2A:  MOVLW  E2
3F2C:  MOVWF  x02
3F2E:  CLRF   x04
3F30:  MOVLW  2E
3F32:  MOVWF  x05
3F34:  CLRF   x06
3F36:  MOVLW  01
3F38:  MOVWF  x07
3F3A:  MOVLB  0
3F3C:  CALL   1702
....................          visual=0; 
3F40:  MOVLB  4
3F42:  BCF    x96.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
3F44:  BSF    F92.3
3F46:  BTFSS  F80.3
3F48:  BRA    3F6A
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3F4A:  MOVLW  1E
3F4C:  MOVLB  5
3F4E:  MOVWF  x03
3F50:  MOVLB  0
3F52:  CALL   106A
3F56:  MOVLW  01
3F58:  MOVLB  4
3F5A:  MOVWF  xA3
3F5C:  MOVLB  5
3F5E:  CLRF   x03
3F60:  MOVLB  0
3F62:  CALL   10D4
3F66:  MOVLB  4
3F68:  BSF    x96.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
3F6A:  BSF    F92.2
3F6C:  BTFSS  F80.2
3F6E:  BRA    4132
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;visual=1; 
3F70:  CLRF   xC3
3F72:  CLRF   xC4
3F74:  MOVLW  05
3F76:  MOVWF  xC5
3F78:  MOVLW  01
3F7A:  MOVWF  xC6
3F7C:  BSF    x96.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
3F7E:  CLRF   xCB
3F80:  CLRF   xCC
3F82:  MOVLW  05
3F84:  MOVWF  xCD
3F86:  MOVLW  01
3F88:  MOVWF  xCE
3F8A:  MOVLW  79
3F8C:  MOVWF  xA6
3F8E:  MOVLW  14
3F90:  MOVWF  xA3
3F92:  MOVLW  04
3F94:  MOVLB  5
3F96:  MOVWF  x02
3F98:  MOVLW  AF
3F9A:  MOVWF  x03
3F9C:  MOVLB  0
3F9E:  CALL   106A
3FA2:  MOVLB  5
3FA4:  DECFSZ x02,F
3FA6:  BRA    3F98
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3FA8:  MOVLW  14
3FAA:  MOVLB  4
3FAC:  MOVWF  xA3
3FAE:  MOVLW  0F
3FB0:  MOVLB  5
3FB2:  MOVWF  x14
3FB4:  MOVLW  12
3FB6:  MOVWF  x15
3FB8:  MOVLW  1E
3FBA:  MOVWF  x16
3FBC:  MOVLW  35
3FBE:  MOVWF  x17
3FC0:  CLRF   x18
3FC2:  MOVLW  01
3FC4:  MOVWF  x19
3FC6:  MOVLB  0
3FC8:  CALL   1640
3FCC:  MOVLB  4
3FCE:  CLRF   xAA
3FD0:  MOVLW  C0
3FD2:  IORWF  FF2,F
3FD4:  MOVLB  5
3FD6:  CLRF   x03
3FD8:  MOVLB  0
3FDA:  CALL   10D4
....................          strcpy(Menus.Letra,"Calentando"); 
3FDE:  MOVLW  04
3FE0:  MOVWF  FEA
3FE2:  MOVLW  E2
3FE4:  MOVWF  FE9
3FE6:  MOVFF  FF2,502
3FEA:  BCF    FF2.7
3FEC:  MOVLW  00
3FEE:  CALL   09B4
3FF2:  TBLRD*-
3FF4:  TBLRD*+
3FF6:  MOVF   FF5,W
3FF8:  MOVWF  FEE
3FFA:  IORLW  00
3FFC:  BNZ   3FF4
3FFE:  MOVLB  5
4000:  BTFSC  x02.7
4002:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4004:  MOVLW  04
4006:  MOVWF  x03
4008:  MOVLW  E2
400A:  MOVWF  x02
400C:  CLRF   x04
400E:  MOVLW  37
4010:  MOVWF  x05
4012:  MOVLW  02
4014:  MOVWF  x06
4016:  MOVLW  01
4018:  MOVWF  x07
401A:  MOVLB  0
401C:  CALL   1702
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
4020:  MOVLW  0F
4022:  MOVLB  5
4024:  MOVWF  x14
4026:  MOVLW  12
4028:  MOVWF  x15
402A:  MOVLW  1E
402C:  MOVWF  x16
402E:  MOVLW  35
4030:  MOVWF  x17
4032:  CLRF   x18
4034:  MOVLW  01
4036:  MOVWF  x19
4038:  MOVLB  0
403A:  CALL   1640
....................          glcd_imagen(5); 
403E:  MOVLW  05
4040:  MOVLB  5
4042:  MOVWF  x02
4044:  MOVLB  0
4046:  CALL   213E
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
404A:  MOVLW  04
404C:  MOVWF  FEA
404E:  MOVLW  E2
4050:  MOVWF  FE9
4052:  MOVFF  FF2,502
4056:  BCF    FF2.7
4058:  MOVLW  00
405A:  CALL   09DA
405E:  TBLRD*-
4060:  TBLRD*+
4062:  MOVF   FF5,W
4064:  MOVWF  FEE
4066:  IORLW  00
4068:  BNZ   4060
406A:  MOVLB  5
406C:  BTFSC  x02.7
406E:  BSF    FF2.7
4070:  MOVLW  04
4072:  MOVWF  x03
4074:  MOVLW  E2
4076:  MOVWF  x02
4078:  CLRF   x04
407A:  CLRF   x05
407C:  MOVLW  02
407E:  MOVWF  x06
4080:  MOVLW  01
4082:  MOVWF  x07
4084:  MOVLB  0
4086:  CALL   1702
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
408A:  MOVLW  04
408C:  MOVWF  FEA
408E:  MOVLW  E2
4090:  MOVWF  FE9
4092:  MOVFF  FF2,502
4096:  BCF    FF2.7
4098:  MOVLW  00
409A:  CALL   09FC
409E:  TBLRD*-
40A0:  TBLRD*+
40A2:  MOVF   FF5,W
40A4:  MOVWF  FEE
40A6:  IORLW  00
40A8:  BNZ   40A0
40AA:  MOVLB  5
40AC:  BTFSC  x02.7
40AE:  BSF    FF2.7
40B0:  MOVLW  04
40B2:  MOVWF  x03
40B4:  MOVLW  E2
40B6:  MOVWF  x02
40B8:  CLRF   x04
40BA:  MOVLW  08
40BC:  MOVWF  x05
40BE:  MOVLW  02
40C0:  MOVWF  x06
40C2:  MOVLW  01
40C4:  MOVWF  x07
40C6:  MOVLB  0
40C8:  CALL   1702
....................          glcd_circle(95,40,2,NO,ON); 
40CC:  MOVLW  5F
40CE:  MOVLB  5
40D0:  MOVWF  x02
40D2:  MOVLW  28
40D4:  MOVWF  x03
40D6:  MOVLW  02
40D8:  MOVWF  x04
40DA:  CLRF   x05
40DC:  MOVLW  01
40DE:  MOVWF  x06
40E0:  MOVLB  0
40E2:  CALL   223A
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
40E6:  MOVLW  04
40E8:  MOVWF  FEA
40EA:  MOVLW  E2
40EC:  MOVWF  FE9
40EE:  MOVFF  FF2,502
40F2:  BCF    FF2.7
40F4:  MOVLW  00
40F6:  CALL   0A1E
40FA:  TBLRD*-
40FC:  TBLRD*+
40FE:  MOVF   FF5,W
4100:  MOVWF  FEE
4102:  IORLW  00
4104:  BNZ   40FC
4106:  MOVLB  5
4108:  BTFSC  x02.7
410A:  BSF    FF2.7
410C:  MOVLW  04
410E:  MOVWF  x03
4110:  MOVLW  E2
4112:  MOVWF  x02
4114:  MOVLW  66
4116:  MOVWF  x04
4118:  MOVLW  28
411A:  MOVWF  x05
411C:  MOVLW  02
411E:  MOVWF  x06
4120:  MOVWF  x07
4122:  MOVLB  0
4124:  CALL   1702
....................          MuestraTiemposProgramados(); 
4128:  CALL   263A
....................          EVTrampa=10; 
412C:  MOVLW  0A
412E:  MOVLB  4
4130:  MOVWF  x9C
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Liquido       
4132:  MOVF   xA3,W
4134:  SUBLW  06
4136:  BTFSS  FD8.2
4138:  BRA    4302
....................        
....................       if(visual==1) 
413A:  BTFSS  x96.4
413C:  BRA    4294
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
413E:  MOVLW  04
4140:  MOVLB  5
4142:  MOVWF  x02
4144:  MOVLB  0
4146:  CALL   213E
....................          strcpy(Menus.Letra,"Liquidos"); 
414A:  MOVLW  04
414C:  MOVWF  FEA
414E:  MOVLW  E2
4150:  MOVWF  FE9
4152:  MOVFF  FF2,502
4156:  BCF    FF2.7
4158:  MOVLW  00
415A:  CALL   0844
415E:  TBLRD*-
4160:  TBLRD*+
4162:  MOVF   FF5,W
4164:  MOVWF  FEE
4166:  IORLW  00
4168:  BNZ   4160
416A:  MOVLB  5
416C:  BTFSC  x02.7
416E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
4170:  MOVLW  04
4172:  MOVWF  x03
4174:  MOVLW  E2
4176:  MOVWF  x02
4178:  MOVLW  14
417A:  MOVWF  x04
417C:  CLRF   x05
417E:  MOVLW  01
4180:  MOVWF  x06
4182:  MOVLW  02
4184:  MOVWF  x07
4186:  MOVLB  0
4188:  CALL   1702
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
418C:  MOVLW  04
418E:  MOVWF  FEA
4190:  MOVLW  E2
4192:  MOVWF  FE9
4194:  MOVFF  FF2,502
4198:  BCF    FF2.7
419A:  MOVLW  00
419C:  CALL   0844
41A0:  TBLRD*-
41A2:  TBLRD*+
41A4:  MOVF   FF5,W
41A6:  MOVWF  FEE
41A8:  IORLW  00
41AA:  BNZ   41A2
41AC:  MOVLB  5
41AE:  BTFSC  x02.7
41B0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
41B2:  MOVLW  04
41B4:  MOVWF  x03
41B6:  MOVLW  E2
41B8:  MOVWF  x02
41BA:  MOVLW  07
41BC:  MOVWF  x04
41BE:  MOVLW  37
41C0:  MOVWF  x05
41C2:  MOVLW  02
41C4:  MOVWF  x06
41C6:  MOVLW  01
41C8:  MOVWF  x07
41CA:  MOVLB  0
41CC:  CALL   1702
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
41D0:  MOVLW  04
41D2:  MOVWF  FEA
41D4:  MOVLW  E2
41D6:  MOVWF  FE9
41D8:  MOVFF  FF2,502
41DC:  BCF    FF2.7
41DE:  MOVLW  00
41E0:  CALL   0A88
41E4:  TBLRD*-
41E6:  TBLRD*+
41E8:  MOVF   FF5,W
41EA:  MOVWF  FEE
41EC:  IORLW  00
41EE:  BNZ   41E6
41F0:  MOVLB  5
41F2:  BTFSC  x02.7
41F4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
41F6:  MOVLW  04
41F8:  MOVWF  x03
41FA:  MOVLW  E2
41FC:  MOVWF  x02
41FE:  CLRF   x04
4200:  MOVLW  1A
4202:  MOVWF  x05
4204:  CLRF   x06
4206:  MOVLW  01
4208:  MOVWF  x07
420A:  MOVLB  0
420C:  CALL   1702
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
4210:  MOVLW  04
4212:  MOVWF  FEA
4214:  MOVLW  E2
4216:  MOVWF  FE9
4218:  MOVFF  FF2,502
421C:  BCF    FF2.7
421E:  MOVLW  00
4220:  CALL   0B0E
4224:  TBLRD*-
4226:  TBLRD*+
4228:  MOVF   FF5,W
422A:  MOVWF  FEE
422C:  IORLW  00
422E:  BNZ   4226
4230:  MOVLB  5
4232:  BTFSC  x02.7
4234:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4236:  MOVLW  04
4238:  MOVWF  x03
423A:  MOVLW  E2
423C:  MOVWF  x02
423E:  CLRF   x04
4240:  MOVLW  24
4242:  MOVWF  x05
4244:  CLRF   x06
4246:  MOVLW  01
4248:  MOVWF  x07
424A:  MOVLB  0
424C:  CALL   1702
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
4250:  MOVLW  04
4252:  MOVWF  FEA
4254:  MOVLW  E2
4256:  MOVWF  FE9
4258:  MOVFF  FF2,502
425C:  BCF    FF2.7
425E:  MOVLW  00
4260:  CALL   098A
4264:  TBLRD*-
4266:  TBLRD*+
4268:  MOVF   FF5,W
426A:  MOVWF  FEE
426C:  IORLW  00
426E:  BNZ   4266
4270:  MOVLB  5
4272:  BTFSC  x02.7
4274:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
4276:  MOVLW  04
4278:  MOVWF  x03
427A:  MOVLW  E2
427C:  MOVWF  x02
427E:  CLRF   x04
4280:  MOVLW  2E
4282:  MOVWF  x05
4284:  CLRF   x06
4286:  MOVLW  01
4288:  MOVWF  x07
428A:  MOVLB  0
428C:  CALL   1702
....................          visual=0; 
4290:  MOVLB  4
4292:  BCF    x96.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
4294:  BSF    F92.3
4296:  BTFSS  F80.3
4298:  BRA    42BA
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
429A:  MOVLW  1E
429C:  MOVLB  5
429E:  MOVWF  x03
42A0:  MOVLB  0
42A2:  CALL   106A
42A6:  MOVLW  01
42A8:  MOVLB  4
42AA:  MOVWF  xA3
42AC:  MOVLB  5
42AE:  CLRF   x03
42B0:  MOVLB  0
42B2:  CALL   10D4
42B6:  MOVLB  4
42B8:  BSF    x96.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
42BA:  BSF    F92.2
42BC:  BTFSS  F80.2
42BE:  BRA    4302
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
42C0:  CLRF   xC3
42C2:  CLRF   xC4
42C4:  CLRF   xC5
42C6:  MOVLW  02
42C8:  MOVWF  xC6
42CA:  BSF    x96.5
42CC:  BSF    x96.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
42CE:  CLRF   xCB
42D0:  CLRF   xCC
42D2:  CLRF   xCD
42D4:  CLRF   xCE
42D6:  MOVLW  79
42D8:  MOVWF  xA6
42DA:  MOVLW  0E
42DC:  MOVWF  xA3
42DE:  MOVLW  04
42E0:  MOVLB  5
42E2:  MOVWF  x02
42E4:  MOVLW  AF
42E6:  MOVWF  x03
42E8:  MOVLB  0
42EA:  CALL   106A
42EE:  MOVLB  5
42F0:  DECFSZ x02,F
42F2:  BRA    42E4
42F4:  CLRF   x03
42F6:  MOVLB  0
42F8:  CALL   10D4
....................          EVTrampa=10; 
42FC:  MOVLW  0A
42FE:  MOVLB  4
4300:  MOVWF  x9C
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de Secado 
4302:  MOVF   xA3,W
4304:  SUBLW  07
4306:  BTFSS  FD8.2
4308:  BRA    464C
....................        
....................       if(visual==1) 
430A:  BTFSS  x96.4
430C:  BRA    4460
....................       { 
....................          glcd_imagen(1);  
430E:  MOVLW  01
4310:  MOVLB  5
4312:  MOVWF  x02
4314:  MOVLB  0
4316:  CALL   213E
....................          strcpy(Menus.Letra,"Secado"); 
431A:  MOVLW  04
431C:  MOVWF  FEA
431E:  MOVLW  E2
4320:  MOVWF  FE9
4322:  MOVFF  FF2,502
4326:  BCF    FF2.7
4328:  MOVLW  00
432A:  CALL   0868
432E:  TBLRD*-
4330:  TBLRD*+
4332:  MOVF   FF5,W
4334:  MOVWF  FEE
4336:  IORLW  00
4338:  BNZ   4330
433A:  MOVLB  5
433C:  BTFSC  x02.7
433E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4340:  MOVLW  04
4342:  MOVWF  x03
4344:  MOVLW  E2
4346:  MOVWF  x02
4348:  CLRF   x04
434A:  CLRF   x05
434C:  MOVLW  01
434E:  MOVWF  x06
4350:  MOVLW  02
4352:  MOVWF  x07
4354:  MOVLB  0
4356:  CALL   1702
....................        
....................          strcpy(Menus.Letra,"Sin Vacio"); 
435A:  MOVLW  04
435C:  MOVWF  FEA
435E:  MOVLW  E2
4360:  MOVWF  FE9
4362:  MOVFF  FF2,502
4366:  BCF    FF2.7
4368:  MOVLW  00
436A:  CALL   0B3E
436E:  TBLRD*-
4370:  TBLRD*+
4372:  MOVF   FF5,W
4374:  MOVWF  FEE
4376:  IORLW  00
4378:  BNZ   4370
437A:  MOVLB  5
437C:  BTFSC  x02.7
437E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4380:  MOVLW  04
4382:  MOVWF  x03
4384:  MOVLW  E2
4386:  MOVWF  x02
4388:  CLRF   x04
438A:  MOVLW  37
438C:  MOVWF  x05
438E:  MOVLW  02
4390:  MOVWF  x06
4392:  MOVLW  01
4394:  MOVWF  x07
4396:  MOVLB  0
4398:  CALL   1702
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
439C:  MOVLW  04
439E:  MOVWF  FEA
43A0:  MOVLW  E2
43A2:  MOVWF  FE9
43A4:  MOVFF  FF2,502
43A8:  BCF    FF2.7
43AA:  MOVLW  00
43AC:  CALL   0A88
43B0:  TBLRD*-
43B2:  TBLRD*+
43B4:  MOVF   FF5,W
43B6:  MOVWF  FEE
43B8:  IORLW  00
43BA:  BNZ   43B2
43BC:  MOVLB  5
43BE:  BTFSC  x02.7
43C0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
43C2:  MOVLW  04
43C4:  MOVWF  x03
43C6:  MOVLW  E2
43C8:  MOVWF  x02
43CA:  CLRF   x04
43CC:  MOVLW  1A
43CE:  MOVWF  x05
43D0:  CLRF   x06
43D2:  MOVLW  01
43D4:  MOVWF  x07
43D6:  MOVLB  0
43D8:  CALL   1702
....................          strcpy(Menus.Letra,"T. Esterilizacion:N/A"); 
43DC:  MOVLW  04
43DE:  MOVWF  FEA
43E0:  MOVLW  E2
43E2:  MOVWF  FE9
43E4:  MOVFF  FF2,502
43E8:  BCF    FF2.7
43EA:  MOVLW  00
43EC:  CALL   0B62
43F0:  TBLRD*-
43F2:  TBLRD*+
43F4:  MOVF   FF5,W
43F6:  MOVWF  FEE
43F8:  IORLW  00
43FA:  BNZ   43F2
43FC:  MOVLB  5
43FE:  BTFSC  x02.7
4400:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4402:  MOVLW  04
4404:  MOVWF  x03
4406:  MOVLW  E2
4408:  MOVWF  x02
440A:  CLRF   x04
440C:  MOVLW  24
440E:  MOVWF  x05
4410:  CLRF   x06
4412:  MOVLW  01
4414:  MOVWF  x07
4416:  MOVLB  0
4418:  CALL   1702
....................          strcpy(Menus.Letra,"T. Secado= 20m "); 
441C:  MOVLW  04
441E:  MOVWF  FEA
4420:  MOVLW  E2
4422:  MOVWF  FE9
4424:  MOVFF  FF2,502
4428:  BCF    FF2.7
442A:  MOVLW  00
442C:  CALL   0B92
4430:  TBLRD*-
4432:  TBLRD*+
4434:  MOVF   FF5,W
4436:  MOVWF  FEE
4438:  IORLW  00
443A:  BNZ   4432
443C:  MOVLB  5
443E:  BTFSC  x02.7
4440:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4442:  MOVLW  04
4444:  MOVWF  x03
4446:  MOVLW  E2
4448:  MOVWF  x02
444A:  CLRF   x04
444C:  MOVLW  2E
444E:  MOVWF  x05
4450:  CLRF   x06
4452:  MOVLW  01
4454:  MOVWF  x07
4456:  MOVLB  0
4458:  CALL   1702
....................          visual=0; 
445C:  MOVLB  4
445E:  BCF    x96.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4460:  BSF    F92.3
4462:  BTFSS  F80.3
4464:  BRA    4486
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4466:  MOVLW  1E
4468:  MOVLB  5
446A:  MOVWF  x03
446C:  MOVLB  0
446E:  CALL   106A
4472:  MOVLW  01
4474:  MOVLB  4
4476:  MOVWF  xA3
4478:  MOVLB  5
447A:  CLRF   x03
447C:  MOVLB  0
447E:  CALL   10D4
4482:  MOVLB  4
4484:  BSF    x96.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
4486:  BSF    F92.2
4488:  BTFSS  F80.2
448A:  BRA    464C
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=0;visual=1;ciclosecado=1; 
448C:  CLRF   xC3
448E:  CLRF   xC4
4490:  CLRF   xC5
4492:  CLRF   xC6
4494:  BSF    x96.4
4496:  MOVLW  01
4498:  MOVWF  x95
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=2;Setpoint=121;Menu=20;delay_ms(700); 
449A:  CLRF   xCB
449C:  CLRF   xCC
449E:  CLRF   xCD
44A0:  MOVLW  02
44A2:  MOVWF  xCE
44A4:  MOVLW  79
44A6:  MOVWF  xA6
44A8:  MOVLW  14
44AA:  MOVWF  xA3
44AC:  MOVLW  04
44AE:  MOVLB  5
44B0:  MOVWF  x02
44B2:  MOVLW  AF
44B4:  MOVWF  x03
44B6:  MOVLB  0
44B8:  CALL   106A
44BC:  MOVLB  5
44BE:  DECFSZ x02,F
44C0:  BRA    44B2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
44C2:  MOVLW  14
44C4:  MOVLB  4
44C6:  MOVWF  xA3
44C8:  MOVLW  0F
44CA:  MOVLB  5
44CC:  MOVWF  x14
44CE:  MOVLW  12
44D0:  MOVWF  x15
44D2:  MOVLW  1E
44D4:  MOVWF  x16
44D6:  MOVLW  35
44D8:  MOVWF  x17
44DA:  CLRF   x18
44DC:  MOVLW  01
44DE:  MOVWF  x19
44E0:  MOVLB  0
44E2:  CALL   1640
44E6:  MOVLB  4
44E8:  CLRF   xAA
44EA:  MOVLW  C0
44EC:  IORWF  FF2,F
44EE:  MOVLB  5
44F0:  CLRF   x03
44F2:  MOVLB  0
44F4:  CALL   10D4
....................          strcpy(Menus.Letra,"Calentando"); 
44F8:  MOVLW  04
44FA:  MOVWF  FEA
44FC:  MOVLW  E2
44FE:  MOVWF  FE9
4500:  MOVFF  FF2,502
4504:  BCF    FF2.7
4506:  MOVLW  00
4508:  CALL   09B4
450C:  TBLRD*-
450E:  TBLRD*+
4510:  MOVF   FF5,W
4512:  MOVWF  FEE
4514:  IORLW  00
4516:  BNZ   450E
4518:  MOVLB  5
451A:  BTFSC  x02.7
451C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
451E:  MOVLW  04
4520:  MOVWF  x03
4522:  MOVLW  E2
4524:  MOVWF  x02
4526:  CLRF   x04
4528:  MOVLW  37
452A:  MOVWF  x05
452C:  MOVLW  02
452E:  MOVWF  x06
4530:  MOVLW  01
4532:  MOVWF  x07
4534:  MOVLB  0
4536:  CALL   1702
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
453A:  MOVLW  0F
453C:  MOVLB  5
453E:  MOVWF  x14
4540:  MOVLW  12
4542:  MOVWF  x15
4544:  MOVLW  1E
4546:  MOVWF  x16
4548:  MOVLW  35
454A:  MOVWF  x17
454C:  CLRF   x18
454E:  MOVLW  01
4550:  MOVWF  x19
4552:  MOVLB  0
4554:  CALL   1640
....................          glcd_imagen(5); 
4558:  MOVLW  05
455A:  MOVLB  5
455C:  MOVWF  x02
455E:  MOVLB  0
4560:  CALL   213E
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4564:  MOVLW  04
4566:  MOVWF  FEA
4568:  MOVLW  E2
456A:  MOVWF  FE9
456C:  MOVFF  FF2,502
4570:  BCF    FF2.7
4572:  MOVLW  00
4574:  CALL   09DA
4578:  TBLRD*-
457A:  TBLRD*+
457C:  MOVF   FF5,W
457E:  MOVWF  FEE
4580:  IORLW  00
4582:  BNZ   457A
4584:  MOVLB  5
4586:  BTFSC  x02.7
4588:  BSF    FF2.7
458A:  MOVLW  04
458C:  MOVWF  x03
458E:  MOVLW  E2
4590:  MOVWF  x02
4592:  CLRF   x04
4594:  CLRF   x05
4596:  MOVLW  02
4598:  MOVWF  x06
459A:  MOVLW  01
459C:  MOVWF  x07
459E:  MOVLB  0
45A0:  CALL   1702
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
45A4:  MOVLW  04
45A6:  MOVWF  FEA
45A8:  MOVLW  E2
45AA:  MOVWF  FE9
45AC:  MOVFF  FF2,502
45B0:  BCF    FF2.7
45B2:  MOVLW  00
45B4:  CALL   09FC
45B8:  TBLRD*-
45BA:  TBLRD*+
45BC:  MOVF   FF5,W
45BE:  MOVWF  FEE
45C0:  IORLW  00
45C2:  BNZ   45BA
45C4:  MOVLB  5
45C6:  BTFSC  x02.7
45C8:  BSF    FF2.7
45CA:  MOVLW  04
45CC:  MOVWF  x03
45CE:  MOVLW  E2
45D0:  MOVWF  x02
45D2:  CLRF   x04
45D4:  MOVLW  08
45D6:  MOVWF  x05
45D8:  MOVLW  02
45DA:  MOVWF  x06
45DC:  MOVLW  01
45DE:  MOVWF  x07
45E0:  MOVLB  0
45E2:  CALL   1702
....................          glcd_circle(95,40,2,NO,ON); 
45E6:  MOVLW  5F
45E8:  MOVLB  5
45EA:  MOVWF  x02
45EC:  MOVLW  28
45EE:  MOVWF  x03
45F0:  MOVLW  02
45F2:  MOVWF  x04
45F4:  CLRF   x05
45F6:  MOVLW  01
45F8:  MOVWF  x06
45FA:  MOVLB  0
45FC:  CALL   223A
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
4600:  MOVLW  04
4602:  MOVWF  FEA
4604:  MOVLW  E2
4606:  MOVWF  FE9
4608:  MOVFF  FF2,502
460C:  BCF    FF2.7
460E:  MOVLW  00
4610:  CALL   0A1E
4614:  TBLRD*-
4616:  TBLRD*+
4618:  MOVF   FF5,W
461A:  MOVWF  FEE
461C:  IORLW  00
461E:  BNZ   4616
4620:  MOVLB  5
4622:  BTFSC  x02.7
4624:  BSF    FF2.7
4626:  MOVLW  04
4628:  MOVWF  x03
462A:  MOVLW  E2
462C:  MOVWF  x02
462E:  MOVLW  66
4630:  MOVWF  x04
4632:  MOVLW  28
4634:  MOVWF  x05
4636:  MOVLW  02
4638:  MOVWF  x06
463A:  MOVWF  x07
463C:  MOVLB  0
463E:  CALL   1702
....................          MuestraTiemposProgramados(); 
4642:  CALL   263A
....................          EVTrampa=10; 
4646:  MOVLW  0A
4648:  MOVLB  4
464A:  MOVWF  x9C
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
464C:  MOVF   xA3,W
464E:  SUBLW  08
4650:  BTFSS  FD8.2
4652:  BRA    4A30
....................          
....................          if(visual==1) 
4654:  BTFSS  x96.4
4656:  BRA    497C
....................          { 
....................             if(Opcion>5) 
4658:  MOVF   xA8,W
465A:  SUBLW  05
465C:  BC    4662
....................             {Opcion=1;} 
465E:  MOVLW  01
4660:  MOVWF  xA8
....................             if(Opcion<1) 
4662:  MOVF   xA8,F
4664:  BNZ   466A
....................             {Opcion=5;} 
4666:  MOVLW  05
4668:  MOVWF  xA8
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
466A:  MOVLW  04
466C:  MOVWF  FEA
466E:  MOVLW  E2
4670:  MOVWF  FE9
4672:  MOVFF  FF2,502
4676:  BCF    FF2.7
4678:  MOVLW  00
467A:  MOVLB  0
467C:  CALL   0BBC
4680:  TBLRD*-
4682:  TBLRD*+
4684:  MOVF   FF5,W
4686:  MOVWF  FEE
4688:  IORLW  00
468A:  BNZ   4682
468C:  MOVLB  5
468E:  BTFSC  x02.7
4690:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4692:  MOVLW  04
4694:  MOVWF  x03
4696:  MOVLW  E2
4698:  MOVWF  x02
469A:  CLRF   x04
469C:  CLRF   x05
469E:  MOVLW  01
46A0:  MOVWF  x06
46A2:  MOVWF  x07
46A4:  MOVLB  0
46A6:  CALL   1702
....................        
....................             if(Opcion==1)    
46AA:  MOVLB  4
46AC:  DECFSZ xA8,W
46AE:  BRA    46F6
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
46B0:  MOVLW  04
46B2:  MOVWF  FEA
46B4:  MOVLW  E2
46B6:  MOVWF  FE9
46B8:  MOVFF  FF2,502
46BC:  BCF    FF2.7
46BE:  MOVLW  00
46C0:  MOVLB  0
46C2:  CALL   0BEC
46C6:  TBLRD*-
46C8:  TBLRD*+
46CA:  MOVF   FF5,W
46CC:  MOVWF  FEE
46CE:  IORLW  00
46D0:  BNZ   46C8
46D2:  MOVLB  5
46D4:  BTFSC  x02.7
46D6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
46D8:  MOVLW  04
46DA:  MOVWF  x03
46DC:  MOVLW  E2
46DE:  MOVWF  x02
46E0:  CLRF   x04
46E2:  MOVLW  0A
46E4:  MOVWF  x05
46E6:  MOVLW  01
46E8:  MOVWF  x06
46EA:  MOVWF  x07
46EC:  MOVLB  0
46EE:  CALL   1702
....................             else 
46F2:  BRA    4738
46F4:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
46F6:  MOVLW  04
46F8:  MOVWF  FEA
46FA:  MOVLW  E2
46FC:  MOVWF  FE9
46FE:  MOVFF  FF2,502
4702:  BCF    FF2.7
4704:  MOVLW  00
4706:  MOVLB  0
4708:  CALL   0BEC
470C:  TBLRD*-
470E:  TBLRD*+
4710:  MOVF   FF5,W
4712:  MOVWF  FEE
4714:  IORLW  00
4716:  BNZ   470E
4718:  MOVLB  5
471A:  BTFSC  x02.7
471C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
471E:  MOVLW  04
4720:  MOVWF  x03
4722:  MOVLW  E2
4724:  MOVWF  x02
4726:  CLRF   x04
4728:  MOVLW  0A
472A:  MOVWF  x05
472C:  CLRF   x06
472E:  MOVLW  01
4730:  MOVWF  x07
4732:  MOVLB  0
4734:  CALL   1702
....................              
....................             if(Opcion==2)    
4738:  MOVLB  4
473A:  MOVF   xA8,W
473C:  SUBLW  02
473E:  BNZ   4786
....................                {strcpy(Menus.Letra,"T. Secado"); 
4740:  MOVLW  04
4742:  MOVWF  FEA
4744:  MOVLW  E2
4746:  MOVWF  FE9
4748:  MOVFF  FF2,502
474C:  BCF    FF2.7
474E:  MOVLW  00
4750:  MOVLB  0
4752:  CALL   0C18
4756:  TBLRD*-
4758:  TBLRD*+
475A:  MOVF   FF5,W
475C:  MOVWF  FEE
475E:  IORLW  00
4760:  BNZ   4758
4762:  MOVLB  5
4764:  BTFSC  x02.7
4766:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
4768:  MOVLW  04
476A:  MOVWF  x03
476C:  MOVLW  E2
476E:  MOVWF  x02
4770:  CLRF   x04
4772:  MOVLW  14
4774:  MOVWF  x05
4776:  MOVLW  01
4778:  MOVWF  x06
477A:  MOVWF  x07
477C:  MOVLB  0
477E:  CALL   1702
....................             else 
4782:  BRA    47C8
4784:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
4786:  MOVLW  04
4788:  MOVWF  FEA
478A:  MOVLW  E2
478C:  MOVWF  FE9
478E:  MOVFF  FF2,502
4792:  BCF    FF2.7
4794:  MOVLW  00
4796:  MOVLB  0
4798:  CALL   0C18
479C:  TBLRD*-
479E:  TBLRD*+
47A0:  MOVF   FF5,W
47A2:  MOVWF  FEE
47A4:  IORLW  00
47A6:  BNZ   479E
47A8:  MOVLB  5
47AA:  BTFSC  x02.7
47AC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
47AE:  MOVLW  04
47B0:  MOVWF  x03
47B2:  MOVLW  E2
47B4:  MOVWF  x02
47B6:  CLRF   x04
47B8:  MOVLW  14
47BA:  MOVWF  x05
47BC:  CLRF   x06
47BE:  MOVLW  01
47C0:  MOVWF  x07
47C2:  MOVLB  0
47C4:  CALL   1702
....................                 
....................              if(Opcion==3)    
47C8:  MOVLB  4
47CA:  MOVF   xA8,W
47CC:  SUBLW  03
47CE:  BNZ   4816
....................                {strcpy(Menus.Letra,"Temperatura"); 
47D0:  MOVLW  04
47D2:  MOVWF  FEA
47D4:  MOVLW  E2
47D6:  MOVWF  FE9
47D8:  MOVFF  FF2,502
47DC:  BCF    FF2.7
47DE:  MOVLW  00
47E0:  MOVLB  0
47E2:  CALL   0C3C
47E6:  TBLRD*-
47E8:  TBLRD*+
47EA:  MOVF   FF5,W
47EC:  MOVWF  FEE
47EE:  IORLW  00
47F0:  BNZ   47E8
47F2:  MOVLB  5
47F4:  BTFSC  x02.7
47F6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
47F8:  MOVLW  04
47FA:  MOVWF  x03
47FC:  MOVLW  E2
47FE:  MOVWF  x02
4800:  CLRF   x04
4802:  MOVLW  1E
4804:  MOVWF  x05
4806:  MOVLW  01
4808:  MOVWF  x06
480A:  MOVWF  x07
480C:  MOVLB  0
480E:  CALL   1702
....................             else 
4812:  BRA    4858
4814:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
4816:  MOVLW  04
4818:  MOVWF  FEA
481A:  MOVLW  E2
481C:  MOVWF  FE9
481E:  MOVFF  FF2,502
4822:  BCF    FF2.7
4824:  MOVLW  00
4826:  MOVLB  0
4828:  CALL   0C3C
482C:  TBLRD*-
482E:  TBLRD*+
4830:  MOVF   FF5,W
4832:  MOVWF  FEE
4834:  IORLW  00
4836:  BNZ   482E
4838:  MOVLB  5
483A:  BTFSC  x02.7
483C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
483E:  MOVLW  04
4840:  MOVWF  x03
4842:  MOVLW  E2
4844:  MOVWF  x02
4846:  CLRF   x04
4848:  MOVLW  1E
484A:  MOVWF  x05
484C:  CLRF   x06
484E:  MOVLW  01
4850:  MOVWF  x07
4852:  MOVLB  0
4854:  CALL   1702
....................                 
....................             if(Opcion==4)    
4858:  MOVLB  4
485A:  MOVF   xA8,W
485C:  SUBLW  04
485E:  BNZ   48A6
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4860:  MOVLW  04
4862:  MOVWF  FEA
4864:  MOVLW  E2
4866:  MOVWF  FE9
4868:  MOVFF  FF2,502
486C:  BCF    FF2.7
486E:  MOVLW  00
4870:  MOVLB  0
4872:  CALL   0C62
4876:  TBLRD*-
4878:  TBLRD*+
487A:  MOVF   FF5,W
487C:  MOVWF  FEE
487E:  IORLW  00
4880:  BNZ   4878
4882:  MOVLB  5
4884:  BTFSC  x02.7
4886:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
4888:  MOVLW  04
488A:  MOVWF  x03
488C:  MOVLW  E2
488E:  MOVWF  x02
4890:  CLRF   x04
4892:  MOVLW  28
4894:  MOVWF  x05
4896:  MOVLW  01
4898:  MOVWF  x06
489A:  MOVWF  x07
489C:  MOVLB  0
489E:  CALL   1702
....................             else 
48A2:  BRA    48E8
48A4:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
48A6:  MOVLW  04
48A8:  MOVWF  FEA
48AA:  MOVLW  E2
48AC:  MOVWF  FE9
48AE:  MOVFF  FF2,502
48B2:  BCF    FF2.7
48B4:  MOVLW  00
48B6:  MOVLB  0
48B8:  CALL   0C62
48BC:  TBLRD*-
48BE:  TBLRD*+
48C0:  MOVF   FF5,W
48C2:  MOVWF  FEE
48C4:  IORLW  00
48C6:  BNZ   48BE
48C8:  MOVLB  5
48CA:  BTFSC  x02.7
48CC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
48CE:  MOVLW  04
48D0:  MOVWF  x03
48D2:  MOVLW  E2
48D4:  MOVWF  x02
48D6:  CLRF   x04
48D8:  MOVLW  28
48DA:  MOVWF  x05
48DC:  CLRF   x06
48DE:  MOVLW  01
48E0:  MOVWF  x07
48E2:  MOVLB  0
48E4:  CALL   1702
....................                 
....................             if(Opcion==5)    
48E8:  MOVLB  4
48EA:  MOVF   xA8,W
48EC:  SUBLW  05
48EE:  BNZ   4936
....................                {strcpy(Menus.Letra,"Continuar"); 
48F0:  MOVLW  04
48F2:  MOVWF  FEA
48F4:  MOVLW  E2
48F6:  MOVWF  FE9
48F8:  MOVFF  FF2,502
48FC:  BCF    FF2.7
48FE:  MOVLW  00
4900:  MOVLB  0
4902:  CALL   0C8E
4906:  TBLRD*-
4908:  TBLRD*+
490A:  MOVF   FF5,W
490C:  MOVWF  FEE
490E:  IORLW  00
4910:  BNZ   4908
4912:  MOVLB  5
4914:  BTFSC  x02.7
4916:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
4918:  MOVLW  04
491A:  MOVWF  x03
491C:  MOVLW  E2
491E:  MOVWF  x02
4920:  CLRF   x04
4922:  MOVLW  32
4924:  MOVWF  x05
4926:  MOVLW  01
4928:  MOVWF  x06
492A:  MOVWF  x07
492C:  MOVLB  0
492E:  CALL   1702
....................             else 
4932:  BRA    4978
4934:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
4936:  MOVLW  04
4938:  MOVWF  FEA
493A:  MOVLW  E2
493C:  MOVWF  FE9
493E:  MOVFF  FF2,502
4942:  BCF    FF2.7
4944:  MOVLW  00
4946:  MOVLB  0
4948:  CALL   0C8E
494C:  TBLRD*-
494E:  TBLRD*+
4950:  MOVF   FF5,W
4952:  MOVWF  FEE
4954:  IORLW  00
4956:  BNZ   494E
4958:  MOVLB  5
495A:  BTFSC  x02.7
495C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
495E:  MOVLW  04
4960:  MOVWF  x03
4962:  MOVLW  E2
4964:  MOVWF  x02
4966:  CLRF   x04
4968:  MOVLW  32
496A:  MOVWF  x05
496C:  CLRF   x06
496E:  MOVLW  01
4970:  MOVWF  x07
4972:  MOVLB  0
4974:  CALL   1702
....................                           
....................             visual=0; 
4978:  MOVLB  4
497A:  BCF    x96.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
497C:  BSF    F92.0
497E:  BTFSS  F80.0
4980:  BRA    499C
....................          {  if(Flanco == 0)  
4982:  BTFSC  x96.0
4984:  BRA    499A
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4986:  BSF    x96.0
4988:  MOVLW  1E
498A:  MOVLB  5
498C:  MOVWF  x03
498E:  MOVLB  0
4990:  CALL   106A
4994:  MOVLB  4
4996:  DECF   xA8,F
4998:  BSF    x96.4
....................                } 
....................          } 
....................             else 
499A:  BRA    499E
....................                {Flanco = 0;} 
499C:  BCF    x96.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
499E:  BSF    F92.1
49A0:  BTFSS  F80.1
49A2:  BRA    49BE
....................          {  if(Flanco2 == 0)  
49A4:  BTFSC  x96.2
49A6:  BRA    49BC
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
49A8:  BSF    x96.2
49AA:  MOVLW  1E
49AC:  MOVLB  5
49AE:  MOVWF  x03
49B0:  MOVLB  0
49B2:  CALL   106A
49B6:  MOVLB  4
49B8:  INCF   xA8,F
49BA:  BSF    x96.4
....................                }      
....................          } 
....................             else 
49BC:  BRA    49C0
....................                {Flanco2 = 0;}   
49BE:  BCF    x96.2
....................                 
....................          if(RIGHT)//Si oprime SET 
49C0:  BSF    F92.2
49C2:  BTFSS  F80.2
49C4:  BRA    49FE
....................          {  if(Flanco1 == 0)  
49C6:  BTFSC  x96.1
49C8:  BRA    49FC
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
49CA:  BSF    x96.1
49CC:  MOVLW  02
49CE:  MOVLB  5
49D0:  MOVWF  x02
49D2:  MOVLW  96
49D4:  MOVWF  x03
49D6:  MOVLB  0
49D8:  CALL   106A
49DC:  MOVLB  5
49DE:  DECFSZ x02,F
49E0:  BRA    49D2
49E2:  MOVLW  0A
49E4:  MOVLB  4
49E6:  ADDWF  xA8,W
49E8:  MOVWF  xA3
49EA:  MOVLW  01
49EC:  MOVWF  xA8
49EE:  MOVLB  5
49F0:  CLRF   x03
49F2:  MOVLB  0
49F4:  CALL   10D4
49F8:  MOVLB  4
49FA:  BSF    x96.4
....................                } 
....................          } 
....................             else 
49FC:  BRA    4A00
....................                {Flanco1 = 0;}   
49FE:  BCF    x96.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
4A00:  BSF    F92.3
4A02:  BTFSS  F80.3
4A04:  BRA    4A30
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
4A06:  MOVLW  04
4A08:  MOVLB  5
4A0A:  MOVWF  x02
4A0C:  MOVLW  AF
4A0E:  MOVWF  x03
4A10:  MOVLB  0
4A12:  CALL   106A
4A16:  MOVLB  5
4A18:  DECFSZ x02,F
4A1A:  BRA    4A0C
4A1C:  MOVLW  01
4A1E:  MOVLB  4
4A20:  MOVWF  xA3
4A22:  MOVLB  5
4A24:  CLRF   x03
4A26:  MOVLB  0
4A28:  CALL   10D4
4A2C:  MOVLB  4
4A2E:  BSF    x96.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
4A30:  MOVF   xA3,W
4A32:  SUBLW  09
4A34:  BTFSS  FD8.2
4A36:  BRA    4EEC
....................          
....................       strcpy(Menus.Letra,"Clave"); 
4A38:  MOVLW  04
4A3A:  MOVWF  FEA
4A3C:  MOVLW  E2
4A3E:  MOVWF  FE9
4A40:  MOVFF  FF2,502
4A44:  BCF    FF2.7
4A46:  MOVLW  00
4A48:  MOVLB  0
4A4A:  CALL   0758
4A4E:  TBLRD*-
4A50:  TBLRD*+
4A52:  MOVF   FF5,W
4A54:  MOVWF  FEE
4A56:  IORLW  00
4A58:  BNZ   4A50
4A5A:  MOVLB  5
4A5C:  BTFSC  x02.7
4A5E:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4A60:  MOVLW  04
4A62:  MOVWF  x03
4A64:  MOVLW  E2
4A66:  MOVWF  x02
4A68:  MOVLW  1E
4A6A:  MOVWF  x04
4A6C:  CLRF   x05
4A6E:  MOVLW  01
4A70:  MOVWF  x06
4A72:  MOVLW  02
4A74:  MOVWF  x07
4A76:  MOVLB  0
4A78:  CALL   1702
....................        
....................       if(unidad==1) 
4A7C:  MOVLB  4
4A7E:  DECFSZ xA4,W
4A80:  BRA    4AE0
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4A82:  MOVFF  4CF,504
4A86:  MOVLW  14
4A88:  MOVLB  5
4A8A:  MOVWF  x05
4A8C:  MOVLW  1E
4A8E:  MOVWF  x06
4A90:  MOVLW  01
4A92:  MOVWF  x07
4A94:  MOVLB  0
4A96:  CALL   1928
....................          displayContrasena(Contrasena[1],40,30,0); 
4A9A:  MOVFF  4D0,504
4A9E:  MOVLW  28
4AA0:  MOVLB  5
4AA2:  MOVWF  x05
4AA4:  MOVLW  1E
4AA6:  MOVWF  x06
4AA8:  CLRF   x07
4AAA:  MOVLB  0
4AAC:  CALL   1928
....................          displayContrasena(Contrasena[2],60,30,0); 
4AB0:  MOVFF  4D1,504
4AB4:  MOVLW  3C
4AB6:  MOVLB  5
4AB8:  MOVWF  x05
4ABA:  MOVLW  1E
4ABC:  MOVWF  x06
4ABE:  CLRF   x07
4AC0:  MOVLB  0
4AC2:  CALL   1928
....................          displayContrasena(Contrasena[3],80,30,0); 
4AC6:  MOVFF  4D2,504
4ACA:  MOVLW  50
4ACC:  MOVLB  5
4ACE:  MOVWF  x05
4AD0:  MOVLW  1E
4AD2:  MOVWF  x06
4AD4:  CLRF   x07
4AD6:  MOVLB  0
4AD8:  CALL   1928
....................       } 
....................       else 
4ADC:  BRA    4C08
4ADE:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4AE0:  MOVF   xA4,W
4AE2:  SUBLW  02
4AE4:  BNZ   4B44
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
4AE6:  MOVFF  4CF,504
4AEA:  MOVLW  14
4AEC:  MOVLB  5
4AEE:  MOVWF  x05
4AF0:  MOVLW  1E
4AF2:  MOVWF  x06
4AF4:  CLRF   x07
4AF6:  MOVLB  0
4AF8:  CALL   1928
....................             displayContrasena(Contrasena[1],40,30,1); 
4AFC:  MOVFF  4D0,504
4B00:  MOVLW  28
4B02:  MOVLB  5
4B04:  MOVWF  x05
4B06:  MOVLW  1E
4B08:  MOVWF  x06
4B0A:  MOVLW  01
4B0C:  MOVWF  x07
4B0E:  MOVLB  0
4B10:  CALL   1928
....................             displayContrasena(Contrasena[2],60,30,0); 
4B14:  MOVFF  4D1,504
4B18:  MOVLW  3C
4B1A:  MOVLB  5
4B1C:  MOVWF  x05
4B1E:  MOVLW  1E
4B20:  MOVWF  x06
4B22:  CLRF   x07
4B24:  MOVLB  0
4B26:  CALL   1928
....................             displayContrasena(Contrasena[3],80,30,0); 
4B2A:  MOVFF  4D2,504
4B2E:  MOVLW  50
4B30:  MOVLB  5
4B32:  MOVWF  x05
4B34:  MOVLW  1E
4B36:  MOVWF  x06
4B38:  CLRF   x07
4B3A:  MOVLB  0
4B3C:  CALL   1928
....................          } 
....................          else 
4B40:  BRA    4C08
4B42:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4B44:  MOVF   xA4,W
4B46:  SUBLW  03
4B48:  BNZ   4BA8
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4B4A:  MOVFF  4CF,504
4B4E:  MOVLW  14
4B50:  MOVLB  5
4B52:  MOVWF  x05
4B54:  MOVLW  1E
4B56:  MOVWF  x06
4B58:  CLRF   x07
4B5A:  MOVLB  0
4B5C:  CALL   1928
....................                displayContrasena(Contrasena[1],40,30,0); 
4B60:  MOVFF  4D0,504
4B64:  MOVLW  28
4B66:  MOVLB  5
4B68:  MOVWF  x05
4B6A:  MOVLW  1E
4B6C:  MOVWF  x06
4B6E:  CLRF   x07
4B70:  MOVLB  0
4B72:  CALL   1928
....................                displayContrasena(Contrasena[2],60,30,1); 
4B76:  MOVFF  4D1,504
4B7A:  MOVLW  3C
4B7C:  MOVLB  5
4B7E:  MOVWF  x05
4B80:  MOVLW  1E
4B82:  MOVWF  x06
4B84:  MOVLW  01
4B86:  MOVWF  x07
4B88:  MOVLB  0
4B8A:  CALL   1928
....................                displayContrasena(Contrasena[3],80,30,0); 
4B8E:  MOVFF  4D2,504
4B92:  MOVLW  50
4B94:  MOVLB  5
4B96:  MOVWF  x05
4B98:  MOVLW  1E
4B9A:  MOVWF  x06
4B9C:  CLRF   x07
4B9E:  MOVLB  0
4BA0:  CALL   1928
....................             } 
....................             else 
4BA4:  BRA    4C08
4BA6:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4BA8:  MOVF   xA4,W
4BAA:  SUBLW  04
4BAC:  BNZ   4C0A
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4BAE:  MOVFF  4CF,504
4BB2:  MOVLW  14
4BB4:  MOVLB  5
4BB6:  MOVWF  x05
4BB8:  MOVLW  1E
4BBA:  MOVWF  x06
4BBC:  CLRF   x07
4BBE:  MOVLB  0
4BC0:  CALL   1928
....................                   displayContrasena(Contrasena[1],40,30,0); 
4BC4:  MOVFF  4D0,504
4BC8:  MOVLW  28
4BCA:  MOVLB  5
4BCC:  MOVWF  x05
4BCE:  MOVLW  1E
4BD0:  MOVWF  x06
4BD2:  CLRF   x07
4BD4:  MOVLB  0
4BD6:  CALL   1928
....................                   displayContrasena(Contrasena[2],60,30,0); 
4BDA:  MOVFF  4D1,504
4BDE:  MOVLW  3C
4BE0:  MOVLB  5
4BE2:  MOVWF  x05
4BE4:  MOVLW  1E
4BE6:  MOVWF  x06
4BE8:  CLRF   x07
4BEA:  MOVLB  0
4BEC:  CALL   1928
....................                   displayContrasena(Contrasena[3],80,30,1); 
4BF0:  MOVFF  4D2,504
4BF4:  MOVLW  50
4BF6:  MOVLB  5
4BF8:  MOVWF  x05
4BFA:  MOVLW  1E
4BFC:  MOVWF  x06
4BFE:  MOVLW  01
4C00:  MOVWF  x07
4C02:  MOVLB  0
4C04:  CALL   1928
4C08:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4C0A:  BSF    F92.0
4C0C:  BTFSS  F80.0
4C0E:  BRA    4C78
....................       { 
....................          if(Flanco == 0) 
4C10:  BTFSC  x96.0
4C12:  BRA    4C76
....................          { 
....................             Flanco = 1;delay_ms(30); 
4C14:  BSF    x96.0
4C16:  MOVLW  1E
4C18:  MOVLB  5
4C1A:  MOVWF  x03
4C1C:  MOVLB  0
4C1E:  CALL   106A
....................             for(i=1;i<=4;i++) 
4C22:  MOVLW  01
4C24:  MOVLB  4
4C26:  MOVWF  xA5
4C28:  MOVF   xA5,W
4C2A:  SUBLW  04
4C2C:  BNC   4C76
....................             { 
....................                if(unidad==i) 
4C2E:  MOVF   xA5,W
4C30:  SUBWF  xA4,W
4C32:  BNZ   4C72
....................                { 
....................                   Contrasena[i-1]++; 
4C34:  MOVLW  01
4C36:  SUBWF  xA5,W
4C38:  CLRF   03
4C3A:  ADDLW  CF
4C3C:  MOVWF  FE9
4C3E:  MOVLW  04
4C40:  ADDWFC 03,W
4C42:  MOVWF  FEA
4C44:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4C46:  MOVLW  01
4C48:  SUBWF  xA5,W
4C4A:  CLRF   03
4C4C:  ADDLW  CF
4C4E:  MOVWF  FE9
4C50:  MOVLW  04
4C52:  ADDWFC 03,W
4C54:  MOVWF  FEA
4C56:  BTFSC  FEF.7
4C58:  BRA    4C72
4C5A:  MOVF   FEF,W
4C5C:  SUBLW  09
4C5E:  BC    4C72
....................                   { 
....................                      Contrasena[i-1]=0; 
4C60:  MOVLW  01
4C62:  SUBWF  xA5,W
4C64:  CLRF   03
4C66:  ADDLW  CF
4C68:  MOVWF  FE9
4C6A:  MOVLW  04
4C6C:  ADDWFC 03,W
4C6E:  MOVWF  FEA
4C70:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4C72:  INCF   xA5,F
4C74:  BRA    4C28
....................          } 
....................       } 
....................       else 
4C76:  BRA    4C7A
....................       { 
....................          Flanco = 0; 
4C78:  BCF    x96.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4C7A:  BSF    F92.1
4C7C:  BTFSS  F80.1
4C7E:  BRA    4CE6
....................       { 
....................          if(Flanco2 == 0) 
4C80:  BTFSC  x96.2
4C82:  BRA    4CE4
....................             {Flanco2 = 1;delay_ms(30); 
4C84:  BSF    x96.2
4C86:  MOVLW  1E
4C88:  MOVLB  5
4C8A:  MOVWF  x03
4C8C:  MOVLB  0
4C8E:  CALL   106A
....................                for(i=1;i<=4;i++) 
4C92:  MOVLW  01
4C94:  MOVLB  4
4C96:  MOVWF  xA5
4C98:  MOVF   xA5,W
4C9A:  SUBLW  04
4C9C:  BNC   4CE4
....................                { 
....................                   if(unidad==i) 
4C9E:  MOVF   xA5,W
4CA0:  SUBWF  xA4,W
4CA2:  BNZ   4CE0
....................                   {Contrasena[i-1]--;  
4CA4:  MOVLW  01
4CA6:  SUBWF  xA5,W
4CA8:  CLRF   03
4CAA:  ADDLW  CF
4CAC:  MOVWF  FE9
4CAE:  MOVLW  04
4CB0:  ADDWFC 03,W
4CB2:  MOVWF  FEA
4CB4:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4CB6:  MOVLW  01
4CB8:  SUBWF  xA5,W
4CBA:  CLRF   03
4CBC:  ADDLW  CF
4CBE:  MOVWF  FE9
4CC0:  MOVLW  04
4CC2:  ADDWFC 03,W
4CC4:  MOVWF  FEA
4CC6:  BTFSC  FEF.7
4CC8:  BRA    4CCC
4CCA:  BRA    4CE0
....................                         {Contrasena[i-1]=9;} 
4CCC:  MOVLW  01
4CCE:  SUBWF  xA5,W
4CD0:  CLRF   03
4CD2:  ADDLW  CF
4CD4:  MOVWF  FE9
4CD6:  MOVLW  04
4CD8:  ADDWFC 03,W
4CDA:  MOVWF  FEA
4CDC:  MOVLW  09
4CDE:  MOVWF  FEF
....................                   } 
....................                }       
4CE0:  INCF   xA5,F
4CE2:  BRA    4C98
....................             }      
....................       } 
....................       else 
4CE4:  BRA    4CE8
....................       { 
....................          Flanco2 = 0; 
4CE6:  BCF    x96.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4CE8:  BSF    F92.2
4CEA:  BTFSS  F80.2
4CEC:  BRA    4D10
....................       { 
....................          if(Flanco1 == 0) 
4CEE:  BTFSC  x96.1
4CF0:  BRA    4D0E
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4CF2:  BSF    x96.1
4CF4:  MOVLW  02
4CF6:  MOVLB  5
4CF8:  MOVWF  x02
4CFA:  MOVLW  96
4CFC:  MOVWF  x03
4CFE:  MOVLB  0
4D00:  CALL   106A
4D04:  MOVLB  5
4D06:  DECFSZ x02,F
4D08:  BRA    4CFA
4D0A:  MOVLB  4
4D0C:  INCF   xA4,F
....................       } 
....................       else 
4D0E:  BRA    4D12
....................       { 
....................          Flanco1 = 0; 
4D10:  BCF    x96.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4D12:  BSF    F92.3
4D14:  BTFSS  F80.3
4D16:  BRA    4D40
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4D18:  MOVLW  04
4D1A:  MOVLB  5
4D1C:  MOVWF  x02
4D1E:  MOVLW  AF
4D20:  MOVWF  x03
4D22:  MOVLB  0
4D24:  CALL   106A
4D28:  MOVLB  5
4D2A:  DECFSZ x02,F
4D2C:  BRA    4D1E
4D2E:  MOVLW  01
4D30:  MOVLB  4
4D32:  MOVWF  xA3
4D34:  MOVLB  5
4D36:  CLRF   x03
4D38:  MOVLB  0
4D3A:  CALL   10D4
4D3E:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4D40:  MOVF   xA4,W
4D42:  SUBLW  04
4D44:  BTFSC  FD8.0
4D46:  BRA    4EEC
....................       {glcd_fillScreen(OFF); 
4D48:  MOVLB  5
4D4A:  CLRF   x03
4D4C:  MOVLB  0
4D4E:  CALL   10D4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4D52:  MOVLB  4
4D54:  MOVF   xD3,W
4D56:  SUBWF  xCF,W
4D58:  BNZ   4E2A
4D5A:  MOVF   xD4,W
4D5C:  SUBWF  xD0,W
4D5E:  BNZ   4E2A
4D60:  MOVF   xD5,W
4D62:  SUBWF  xD1,W
4D64:  BNZ   4E2A
4D66:  MOVF   xD6,W
4D68:  SUBWF  xD2,W
4D6A:  BNZ   4E2A
....................          { 
....................             glcd_fillScreen(OFF); 
4D6C:  MOVLB  5
4D6E:  CLRF   x03
4D70:  MOVLB  0
4D72:  CALL   10D4
....................             strcpy(Menus.Letra,"Clave"); 
4D76:  MOVLW  04
4D78:  MOVWF  FEA
4D7A:  MOVLW  E2
4D7C:  MOVWF  FE9
4D7E:  MOVFF  FF2,502
4D82:  BCF    FF2.7
4D84:  MOVLW  00
4D86:  CALL   0758
4D8A:  TBLRD*-
4D8C:  TBLRD*+
4D8E:  MOVF   FF5,W
4D90:  MOVWF  FEE
4D92:  IORLW  00
4D94:  BNZ   4D8C
4D96:  MOVLB  5
4D98:  BTFSC  x02.7
4D9A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4D9C:  MOVLW  04
4D9E:  MOVWF  x03
4DA0:  MOVLW  E2
4DA2:  MOVWF  x02
4DA4:  MOVLW  1E
4DA6:  MOVWF  x04
4DA8:  CLRF   x05
4DAA:  CLRF   x06
4DAC:  MOVLW  02
4DAE:  MOVWF  x07
4DB0:  MOVLB  0
4DB2:  CALL   1702
....................             strcpy(Menus.Letra,"Correcta"); 
4DB6:  MOVLW  04
4DB8:  MOVWF  FEA
4DBA:  MOVLW  E2
4DBC:  MOVWF  FE9
4DBE:  MOVFF  FF2,502
4DC2:  BCF    FF2.7
4DC4:  MOVLW  00
4DC6:  CALL   0778
4DCA:  TBLRD*-
4DCC:  TBLRD*+
4DCE:  MOVF   FF5,W
4DD0:  MOVWF  FEE
4DD2:  IORLW  00
4DD4:  BNZ   4DCC
4DD6:  MOVLB  5
4DD8:  BTFSC  x02.7
4DDA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4DDC:  MOVLW  04
4DDE:  MOVWF  x03
4DE0:  MOVLW  E2
4DE2:  MOVWF  x02
4DE4:  MOVLW  0F
4DE6:  MOVWF  x04
4DE8:  MOVLW  1E
4DEA:  MOVWF  x05
4DEC:  CLRF   x06
4DEE:  MOVLW  02
4DF0:  MOVWF  x07
4DF2:  MOVLB  0
4DF4:  CALL   1702
....................             Menu=91;glcd_update();delay_ms(1000); 
4DF8:  MOVLW  5B
4DFA:  MOVLB  4
4DFC:  MOVWF  xA3
4DFE:  MOVLB  0
4E00:  CALL   112E
4E04:  MOVLW  04
4E06:  MOVLB  5
4E08:  MOVWF  x02
4E0A:  MOVLW  FA
4E0C:  MOVWF  x03
4E0E:  MOVLB  0
4E10:  CALL   106A
4E14:  MOVLB  5
4E16:  DECFSZ x02,F
4E18:  BRA    4E0A
....................             glcd_fillScreen(OFF);unidad=1; 
4E1A:  CLRF   x03
4E1C:  MOVLB  0
4E1E:  CALL   10D4
4E22:  MOVLW  01
4E24:  MOVLB  4
4E26:  MOVWF  xA4
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4E28:  BRA    4EEC
....................          { 
....................             glcd_fillScreen(OFF); 
4E2A:  MOVLB  5
4E2C:  CLRF   x03
4E2E:  MOVLB  0
4E30:  CALL   10D4
....................             strcpy(Menus.Letra,"Clave"); 
4E34:  MOVLW  04
4E36:  MOVWF  FEA
4E38:  MOVLW  E2
4E3A:  MOVWF  FE9
4E3C:  MOVFF  FF2,502
4E40:  BCF    FF2.7
4E42:  MOVLW  00
4E44:  CALL   0758
4E48:  TBLRD*-
4E4A:  TBLRD*+
4E4C:  MOVF   FF5,W
4E4E:  MOVWF  FEE
4E50:  IORLW  00
4E52:  BNZ   4E4A
4E54:  MOVLB  5
4E56:  BTFSC  x02.7
4E58:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4E5A:  MOVLW  04
4E5C:  MOVWF  x03
4E5E:  MOVLW  E2
4E60:  MOVWF  x02
4E62:  MOVLW  1E
4E64:  MOVWF  x04
4E66:  CLRF   x05
4E68:  CLRF   x06
4E6A:  MOVLW  02
4E6C:  MOVWF  x07
4E6E:  MOVLB  0
4E70:  CALL   1702
....................             strcpy(Menus.Letra,"Incorrecta"); 
4E74:  MOVLW  04
4E76:  MOVWF  FEA
4E78:  MOVLW  E2
4E7A:  MOVWF  FE9
4E7C:  MOVFF  FF2,502
4E80:  BCF    FF2.7
4E82:  MOVLW  00
4E84:  CALL   079C
4E88:  TBLRD*-
4E8A:  TBLRD*+
4E8C:  MOVF   FF5,W
4E8E:  MOVWF  FEE
4E90:  IORLW  00
4E92:  BNZ   4E8A
4E94:  MOVLB  5
4E96:  BTFSC  x02.7
4E98:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4E9A:  MOVLW  04
4E9C:  MOVWF  x03
4E9E:  MOVLW  E2
4EA0:  MOVWF  x02
4EA2:  CLRF   x04
4EA4:  MOVLW  1E
4EA6:  MOVWF  x05
4EA8:  CLRF   x06
4EAA:  MOVLW  02
4EAC:  MOVWF  x07
4EAE:  MOVLB  0
4EB0:  CALL   1702
....................             Menu=1;glcd_update();delay_ms(1000); 
4EB4:  MOVLW  01
4EB6:  MOVLB  4
4EB8:  MOVWF  xA3
4EBA:  MOVLB  0
4EBC:  CALL   112E
4EC0:  MOVLW  04
4EC2:  MOVLB  5
4EC4:  MOVWF  x02
4EC6:  MOVLW  FA
4EC8:  MOVWF  x03
4ECA:  MOVLB  0
4ECC:  CALL   106A
4ED0:  MOVLB  5
4ED2:  DECFSZ x02,F
4ED4:  BRA    4EC6
....................             glcd_fillScreen(OFF);unidad=1; 
4ED6:  CLRF   x03
4ED8:  MOVLB  0
4EDA:  CALL   10D4
4EDE:  MOVLW  01
4EE0:  MOVLB  4
4EE2:  MOVWF  xA4
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4EE4:  CLRF   xCF
4EE6:  CLRF   xD0
4EE8:  CLRF   xD1
4EEA:  CLRF   xD2
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4EEC:  MOVF   xA3,W
4EEE:  SUBLW  5B
4EF0:  BTFSS  FD8.2
4EF2:  BRA    52CC
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4EF4:  MOVLW  04
4EF6:  MOVWF  FEA
4EF8:  MOVLW  E2
4EFA:  MOVWF  FE9
4EFC:  MOVFF  FF2,502
4F00:  BCF    FF2.7
4F02:  MOVLW  00
4F04:  MOVLB  0
4F06:  CALL   0CB2
4F0A:  TBLRD*-
4F0C:  TBLRD*+
4F0E:  MOVF   FF5,W
4F10:  MOVWF  FEE
4F12:  IORLW  00
4F14:  BNZ   4F0C
4F16:  MOVLB  5
4F18:  BTFSC  x02.7
4F1A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4F1C:  MOVLW  04
4F1E:  MOVWF  x03
4F20:  MOVLW  E2
4F22:  MOVWF  x02
4F24:  CLRF   x04
4F26:  CLRF   x05
4F28:  MOVLW  01
4F2A:  MOVWF  x06
4F2C:  MOVLW  02
4F2E:  MOVWF  x07
4F30:  MOVLB  0
4F32:  CALL   1702
....................        
....................       if(unidad==1) 
4F36:  MOVLB  4
4F38:  DECFSZ xA4,W
4F3A:  BRA    4F9A
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4F3C:  MOVFF  4D3,504
4F40:  MOVLW  14
4F42:  MOVLB  5
4F44:  MOVWF  x05
4F46:  MOVLW  1E
4F48:  MOVWF  x06
4F4A:  MOVLW  01
4F4C:  MOVWF  x07
4F4E:  MOVLB  0
4F50:  CALL   1928
....................          displayContrasena(Password[1],40,30,0); 
4F54:  MOVFF  4D4,504
4F58:  MOVLW  28
4F5A:  MOVLB  5
4F5C:  MOVWF  x05
4F5E:  MOVLW  1E
4F60:  MOVWF  x06
4F62:  CLRF   x07
4F64:  MOVLB  0
4F66:  CALL   1928
....................          displayContrasena(Password[2],60,30,0); 
4F6A:  MOVFF  4D5,504
4F6E:  MOVLW  3C
4F70:  MOVLB  5
4F72:  MOVWF  x05
4F74:  MOVLW  1E
4F76:  MOVWF  x06
4F78:  CLRF   x07
4F7A:  MOVLB  0
4F7C:  CALL   1928
....................          displayContrasena(Password[3],80,30,0); 
4F80:  MOVFF  4D6,504
4F84:  MOVLW  50
4F86:  MOVLB  5
4F88:  MOVWF  x05
4F8A:  MOVLW  1E
4F8C:  MOVWF  x06
4F8E:  CLRF   x07
4F90:  MOVLB  0
4F92:  CALL   1928
....................       } 
....................       else 
4F96:  BRA    50C2
4F98:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4F9A:  MOVF   xA4,W
4F9C:  SUBLW  02
4F9E:  BNZ   4FFE
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4FA0:  MOVFF  4D3,504
4FA4:  MOVLW  14
4FA6:  MOVLB  5
4FA8:  MOVWF  x05
4FAA:  MOVLW  1E
4FAC:  MOVWF  x06
4FAE:  CLRF   x07
4FB0:  MOVLB  0
4FB2:  CALL   1928
....................             displayContrasena(Password[1],40,30,1); 
4FB6:  MOVFF  4D4,504
4FBA:  MOVLW  28
4FBC:  MOVLB  5
4FBE:  MOVWF  x05
4FC0:  MOVLW  1E
4FC2:  MOVWF  x06
4FC4:  MOVLW  01
4FC6:  MOVWF  x07
4FC8:  MOVLB  0
4FCA:  CALL   1928
....................             displayContrasena(Password[2],60,30,0); 
4FCE:  MOVFF  4D5,504
4FD2:  MOVLW  3C
4FD4:  MOVLB  5
4FD6:  MOVWF  x05
4FD8:  MOVLW  1E
4FDA:  MOVWF  x06
4FDC:  CLRF   x07
4FDE:  MOVLB  0
4FE0:  CALL   1928
....................             displayContrasena(Password[3],80,30,0); 
4FE4:  MOVFF  4D6,504
4FE8:  MOVLW  50
4FEA:  MOVLB  5
4FEC:  MOVWF  x05
4FEE:  MOVLW  1E
4FF0:  MOVWF  x06
4FF2:  CLRF   x07
4FF4:  MOVLB  0
4FF6:  CALL   1928
....................          } 
....................          else 
4FFA:  BRA    50C2
4FFC:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4FFE:  MOVF   xA4,W
5000:  SUBLW  03
5002:  BNZ   5062
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
5004:  MOVFF  4D3,504
5008:  MOVLW  14
500A:  MOVLB  5
500C:  MOVWF  x05
500E:  MOVLW  1E
5010:  MOVWF  x06
5012:  CLRF   x07
5014:  MOVLB  0
5016:  CALL   1928
....................                displayContrasena(Password[1],40,30,0); 
501A:  MOVFF  4D4,504
501E:  MOVLW  28
5020:  MOVLB  5
5022:  MOVWF  x05
5024:  MOVLW  1E
5026:  MOVWF  x06
5028:  CLRF   x07
502A:  MOVLB  0
502C:  CALL   1928
....................                displayContrasena(Password[2],60,30,1); 
5030:  MOVFF  4D5,504
5034:  MOVLW  3C
5036:  MOVLB  5
5038:  MOVWF  x05
503A:  MOVLW  1E
503C:  MOVWF  x06
503E:  MOVLW  01
5040:  MOVWF  x07
5042:  MOVLB  0
5044:  CALL   1928
....................                displayContrasena(Password[3],80,30,0); 
5048:  MOVFF  4D6,504
504C:  MOVLW  50
504E:  MOVLB  5
5050:  MOVWF  x05
5052:  MOVLW  1E
5054:  MOVWF  x06
5056:  CLRF   x07
5058:  MOVLB  0
505A:  CALL   1928
....................             } 
....................             else 
505E:  BRA    50C2
5060:  MOVLB  4
....................             { 
....................                if(unidad==4) 
5062:  MOVF   xA4,W
5064:  SUBLW  04
5066:  BNZ   50C4
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
5068:  MOVFF  4D3,504
506C:  MOVLW  14
506E:  MOVLB  5
5070:  MOVWF  x05
5072:  MOVLW  1E
5074:  MOVWF  x06
5076:  CLRF   x07
5078:  MOVLB  0
507A:  CALL   1928
....................                   displayContrasena(Password[1],40,30,0); 
507E:  MOVFF  4D4,504
5082:  MOVLW  28
5084:  MOVLB  5
5086:  MOVWF  x05
5088:  MOVLW  1E
508A:  MOVWF  x06
508C:  CLRF   x07
508E:  MOVLB  0
5090:  CALL   1928
....................                   displayContrasena(Password[2],60,30,0); 
5094:  MOVFF  4D5,504
5098:  MOVLW  3C
509A:  MOVLB  5
509C:  MOVWF  x05
509E:  MOVLW  1E
50A0:  MOVWF  x06
50A2:  CLRF   x07
50A4:  MOVLB  0
50A6:  CALL   1928
....................                   displayContrasena(Password[3],80,30,1); 
50AA:  MOVFF  4D6,504
50AE:  MOVLW  50
50B0:  MOVLB  5
50B2:  MOVWF  x05
50B4:  MOVLW  1E
50B6:  MOVWF  x06
50B8:  MOVLW  01
50BA:  MOVWF  x07
50BC:  MOVLB  0
50BE:  CALL   1928
50C2:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
50C4:  BSF    F92.0
50C6:  BTFSS  F80.0
50C8:  BRA    5132
....................       { 
....................          if(Flanco == 0) 
50CA:  BTFSC  x96.0
50CC:  BRA    5130
....................          { 
....................             Flanco = 1;delay_ms(30); 
50CE:  BSF    x96.0
50D0:  MOVLW  1E
50D2:  MOVLB  5
50D4:  MOVWF  x03
50D6:  MOVLB  0
50D8:  CALL   106A
....................             for(i=1;i<=4;i++) 
50DC:  MOVLW  01
50DE:  MOVLB  4
50E0:  MOVWF  xA5
50E2:  MOVF   xA5,W
50E4:  SUBLW  04
50E6:  BNC   5130
....................             { 
....................                if(unidad==i) 
50E8:  MOVF   xA5,W
50EA:  SUBWF  xA4,W
50EC:  BNZ   512C
....................                { 
....................                   Password[i-1]++; 
50EE:  MOVLW  01
50F0:  SUBWF  xA5,W
50F2:  CLRF   03
50F4:  ADDLW  D3
50F6:  MOVWF  FE9
50F8:  MOVLW  04
50FA:  ADDWFC 03,W
50FC:  MOVWF  FEA
50FE:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
5100:  MOVLW  01
5102:  SUBWF  xA5,W
5104:  CLRF   03
5106:  ADDLW  D3
5108:  MOVWF  FE9
510A:  MOVLW  04
510C:  ADDWFC 03,W
510E:  MOVWF  FEA
5110:  BTFSC  FEF.7
5112:  BRA    512C
5114:  MOVF   FEF,W
5116:  SUBLW  09
5118:  BC    512C
....................                   { 
....................                      Password[i-1]=0; 
511A:  MOVLW  01
511C:  SUBWF  xA5,W
511E:  CLRF   03
5120:  ADDLW  D3
5122:  MOVWF  FE9
5124:  MOVLW  04
5126:  ADDWFC 03,W
5128:  MOVWF  FEA
512A:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
512C:  INCF   xA5,F
512E:  BRA    50E2
....................          } 
....................       } 
....................       else 
5130:  BRA    5134
....................       { 
....................          Flanco = 0; 
5132:  BCF    x96.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5134:  BSF    F92.1
5136:  BTFSS  F80.1
5138:  BRA    51A0
....................       { 
....................          if(Flanco2 == 0) 
513A:  BTFSC  x96.2
513C:  BRA    519E
....................             {Flanco2 = 1;delay_ms(30); 
513E:  BSF    x96.2
5140:  MOVLW  1E
5142:  MOVLB  5
5144:  MOVWF  x03
5146:  MOVLB  0
5148:  CALL   106A
....................                for(i=1;i<=4;i++) 
514C:  MOVLW  01
514E:  MOVLB  4
5150:  MOVWF  xA5
5152:  MOVF   xA5,W
5154:  SUBLW  04
5156:  BNC   519E
....................                { 
....................                   if(unidad==i) 
5158:  MOVF   xA5,W
515A:  SUBWF  xA4,W
515C:  BNZ   519A
....................                   { 
....................                      Password[i-1]--; 
515E:  MOVLW  01
5160:  SUBWF  xA5,W
5162:  CLRF   03
5164:  ADDLW  D3
5166:  MOVWF  FE9
5168:  MOVLW  04
516A:  ADDWFC 03,W
516C:  MOVWF  FEA
516E:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
5170:  MOVLW  01
5172:  SUBWF  xA5,W
5174:  CLRF   03
5176:  ADDLW  D3
5178:  MOVWF  FE9
517A:  MOVLW  04
517C:  ADDWFC 03,W
517E:  MOVWF  FEA
5180:  BTFSC  FEF.7
5182:  BRA    5186
5184:  BRA    519A
....................                      { 
....................                         Password[i-1]=9; 
5186:  MOVLW  01
5188:  SUBWF  xA5,W
518A:  CLRF   03
518C:  ADDLW  D3
518E:  MOVWF  FE9
5190:  MOVLW  04
5192:  ADDWFC 03,W
5194:  MOVWF  FEA
5196:  MOVLW  09
5198:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
519A:  INCF   xA5,F
519C:  BRA    5152
....................             }      
....................       } 
....................       else 
519E:  BRA    51A2
....................       { 
....................          Flanco2 = 0; 
51A0:  BCF    x96.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
51A2:  BSF    F92.2
51A4:  BTFSS  F80.2
51A6:  BRA    51CA
....................       { 
....................          if(Flanco1 == 0) 
51A8:  BTFSC  x96.1
51AA:  BRA    51C8
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
51AC:  BSF    x96.1
51AE:  MOVLW  02
51B0:  MOVLB  5
51B2:  MOVWF  x02
51B4:  MOVLW  96
51B6:  MOVWF  x03
51B8:  MOVLB  0
51BA:  CALL   106A
51BE:  MOVLB  5
51C0:  DECFSZ x02,F
51C2:  BRA    51B4
51C4:  MOVLB  4
51C6:  INCF   xA4,F
....................       } 
....................       else 
51C8:  BRA    51CC
....................       { 
....................          Flanco1 = 0; 
51CA:  BCF    x96.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
51CC:  BSF    F92.3
51CE:  BTFSS  F80.3
51D0:  BRA    51FA
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
51D2:  MOVLW  04
51D4:  MOVLB  5
51D6:  MOVWF  x02
51D8:  MOVLW  AF
51DA:  MOVWF  x03
51DC:  MOVLB  0
51DE:  CALL   106A
51E2:  MOVLB  5
51E4:  DECFSZ x02,F
51E6:  BRA    51D8
51E8:  MOVLW  01
51EA:  MOVLB  4
51EC:  MOVWF  xA3
51EE:  MOVLB  5
51F0:  CLRF   x03
51F2:  MOVLB  0
51F4:  CALL   10D4
51F8:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
51FA:  MOVF   xA4,W
51FC:  SUBLW  04
51FE:  BC    52CC
....................       { 
....................          Opcion=1;unidad=1; 
5200:  MOVLW  01
5202:  MOVWF  xA8
5204:  MOVWF  xA4
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
5206:  MOVLW  0A
5208:  MOVWF  FA9
520A:  MOVFF  4D3,FA8
520E:  BCF    FA6.6
5210:  BCF    FA6.7
5212:  BSF    FA6.2
5214:  MOVF   FF2,W
5216:  MOVWF  00
5218:  BCF    FF2.7
521A:  MOVLB  F
521C:  MOVLW  55
521E:  MOVWF  FA7
5220:  MOVLW  AA
5222:  MOVWF  FA7
5224:  BSF    FA6.1
5226:  BTFSC  FA6.1
5228:  BRA    5226
522A:  BCF    FA6.2
522C:  MOVF   00,W
522E:  IORWF  FF2,F
5230:  MOVLW  0B
5232:  MOVWF  FA9
5234:  MOVFF  4D4,FA8
5238:  BCF    FA6.6
523A:  BCF    FA6.7
523C:  BSF    FA6.2
523E:  MOVF   FF2,W
5240:  MOVWF  00
5242:  BCF    FF2.7
5244:  MOVLW  55
5246:  MOVWF  FA7
5248:  MOVLW  AA
524A:  MOVWF  FA7
524C:  BSF    FA6.1
524E:  BTFSC  FA6.1
5250:  BRA    524E
5252:  BCF    FA6.2
5254:  MOVF   00,W
5256:  IORWF  FF2,F
5258:  MOVLW  0C
525A:  MOVWF  FA9
525C:  MOVFF  4D5,FA8
5260:  BCF    FA6.6
5262:  BCF    FA6.7
5264:  BSF    FA6.2
5266:  MOVF   FF2,W
5268:  MOVWF  00
526A:  BCF    FF2.7
526C:  MOVLW  55
526E:  MOVWF  FA7
5270:  MOVLW  AA
5272:  MOVWF  FA7
5274:  BSF    FA6.1
5276:  BTFSC  FA6.1
5278:  BRA    5276
527A:  BCF    FA6.2
527C:  MOVF   00,W
527E:  IORWF  FF2,F
5280:  MOVLW  0D
5282:  MOVWF  FA9
5284:  MOVFF  4D6,FA8
5288:  BCF    FA6.6
528A:  BCF    FA6.7
528C:  BSF    FA6.2
528E:  MOVF   FF2,W
5290:  MOVWF  00
5292:  BCF    FF2.7
5294:  MOVLW  55
5296:  MOVWF  FA7
5298:  MOVLW  AA
529A:  MOVWF  FA7
529C:  BSF    FA6.1
529E:  BTFSC  FA6.1
52A0:  BRA    529E
52A2:  BCF    FA6.2
52A4:  MOVF   00,W
52A6:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
52A8:  MOVLW  04
52AA:  MOVLB  5
52AC:  MOVWF  x02
52AE:  MOVLW  FA
52B0:  MOVWF  x03
52B2:  MOVLB  0
52B4:  CALL   106A
52B8:  MOVLB  5
52BA:  DECFSZ x02,F
52BC:  BRA    52AE
52BE:  CLRF   x03
52C0:  MOVLB  0
52C2:  CALL   10D4
52C6:  MOVLW  01
52C8:  MOVLB  4
52CA:  MOVWF  xA3
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
52CC:  MOVF   xA3,W
52CE:  SUBLW  0B
52D0:  BTFSS  FD8.2
52D2:  BRA    55D4
....................       
....................       if(visual==1) 
52D4:  BTFSS  x96.4
52D6:  BRA    5462
....................       { 
....................          if(unidad<1) 
52D8:  MOVF   xA4,F
52DA:  BNZ   52E0
....................          {unidad=4;} 
52DC:  MOVLW  04
52DE:  MOVWF  xA4
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
52E0:  MOVLW  04
52E2:  MOVWF  FEA
52E4:  MOVLW  E2
52E6:  MOVWF  FE9
52E8:  MOVFF  FF2,502
52EC:  BCF    FF2.7
52EE:  MOVLW  00
52F0:  MOVLB  0
52F2:  CALL   0CD8
52F6:  TBLRD*-
52F8:  TBLRD*+
52FA:  MOVF   FF5,W
52FC:  MOVWF  FEE
52FE:  IORLW  00
5300:  BNZ   52F8
5302:  MOVLB  5
5304:  BTFSC  x02.7
5306:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5308:  MOVLW  04
530A:  MOVWF  x03
530C:  MOVLW  E2
530E:  MOVWF  x02
5310:  CLRF   x04
5312:  CLRF   x05
5314:  MOVLW  01
5316:  MOVWF  x06
5318:  MOVLW  02
531A:  MOVWF  x07
531C:  MOVLB  0
531E:  CALL   1702
....................           
....................          if(unidad==4) 
5322:  MOVLB  4
5324:  MOVF   xA4,W
5326:  SUBLW  04
5328:  BNZ   5348
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
532A:  MOVFF  4C6,503
532E:  MOVLW  14
5330:  MOVLB  5
5332:  MOVWF  x04
5334:  MOVLW  28
5336:  MOVWF  x05
5338:  MOVLW  01
533A:  MOVWF  x06
533C:  MOVLW  02
533E:  MOVWF  x07
5340:  MOVLB  0
5342:  CALL   24EA
....................          else 
5346:  BRA    5362
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
5348:  MOVFF  4C6,503
534C:  MOVLW  14
534E:  MOVLB  5
5350:  MOVWF  x04
5352:  MOVLW  28
5354:  MOVWF  x05
5356:  CLRF   x06
5358:  MOVLW  02
535A:  MOVWF  x07
535C:  MOVLB  0
535E:  CALL   24EA
....................           
....................          if(unidad==3) 
5362:  MOVLB  4
5364:  MOVF   xA4,W
5366:  SUBLW  03
5368:  BNZ   5386
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
536A:  MOVFF  4C5,503
536E:  MOVLW  28
5370:  MOVLB  5
5372:  MOVWF  x04
5374:  MOVWF  x05
5376:  MOVLW  01
5378:  MOVWF  x06
537A:  MOVLW  02
537C:  MOVWF  x07
537E:  MOVLB  0
5380:  CALL   24EA
....................          else 
5384:  BRA    539E
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
5386:  MOVFF  4C5,503
538A:  MOVLW  28
538C:  MOVLB  5
538E:  MOVWF  x04
5390:  MOVWF  x05
5392:  CLRF   x06
5394:  MOVLW  02
5396:  MOVWF  x07
5398:  MOVLB  0
539A:  CALL   24EA
....................           
....................          if(unidad==2) 
539E:  MOVLB  4
53A0:  MOVF   xA4,W
53A2:  SUBLW  02
53A4:  BNZ   53C4
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
53A6:  MOVFF  4C4,503
53AA:  MOVLW  46
53AC:  MOVLB  5
53AE:  MOVWF  x04
53B0:  MOVLW  28
53B2:  MOVWF  x05
53B4:  MOVLW  01
53B6:  MOVWF  x06
53B8:  MOVLW  02
53BA:  MOVWF  x07
53BC:  MOVLB  0
53BE:  CALL   24EA
....................          else 
53C2:  BRA    53DE
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
53C4:  MOVFF  4C4,503
53C8:  MOVLW  46
53CA:  MOVLB  5
53CC:  MOVWF  x04
53CE:  MOVLW  28
53D0:  MOVWF  x05
53D2:  CLRF   x06
53D4:  MOVLW  02
53D6:  MOVWF  x07
53D8:  MOVLB  0
53DA:  CALL   24EA
....................           
....................          if(unidad==1) 
53DE:  MOVLB  4
53E0:  DECFSZ xA4,W
53E2:  BRA    5402
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
53E4:  MOVFF  4C3,503
53E8:  MOVLW  5A
53EA:  MOVLB  5
53EC:  MOVWF  x04
53EE:  MOVLW  28
53F0:  MOVWF  x05
53F2:  MOVLW  01
53F4:  MOVWF  x06
53F6:  MOVLW  02
53F8:  MOVWF  x07
53FA:  MOVLB  0
53FC:  CALL   24EA
....................          else 
5400:  BRA    541C
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
5402:  MOVFF  4C3,503
5406:  MOVLW  5A
5408:  MOVLB  5
540A:  MOVWF  x04
540C:  MOVLW  28
540E:  MOVWF  x05
5410:  CLRF   x06
5412:  MOVLW  02
5414:  MOVWF  x07
5416:  MOVLB  0
5418:  CALL   24EA
....................           
....................          strcpy(Menus.Letra,":"); 
541C:  MOVLW  04
541E:  MOVWF  FEA
5420:  MOVLW  E2
5422:  MOVWF  FE9
5424:  MOVFF  FF2,502
5428:  BCF    FF2.7
542A:  MOVLW  00
542C:  CALL   06BE
5430:  TBLRD*-
5432:  TBLRD*+
5434:  MOVF   FF5,W
5436:  MOVWF  FEE
5438:  IORLW  00
543A:  BNZ   5432
543C:  MOVLB  5
543E:  BTFSC  x02.7
5440:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
5442:  MOVLW  04
5444:  MOVWF  x03
5446:  MOVLW  E2
5448:  MOVWF  x02
544A:  MOVLW  3C
544C:  MOVWF  x04
544E:  MOVLW  2A
5450:  MOVWF  x05
5452:  MOVLW  02
5454:  MOVWF  x06
5456:  MOVWF  x07
5458:  MOVLB  0
545A:  CALL   1702
....................           
....................          visual=0; 
545E:  MOVLB  4
5460:  BCF    x96.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5462:  BSF    F92.0
5464:  BTFSS  F80.0
5466:  BRA    54A4
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
5468:  MOVLW  01
546A:  SUBWF  xA4,W
546C:  CLRF   03
546E:  ADDLW  C3
5470:  MOVWF  FE9
5472:  MOVLW  04
5474:  ADDWFC 03,W
5476:  MOVWF  FEA
5478:  BTFSC  FEF.7
547A:  BRA    5482
547C:  MOVF   FEF,W
547E:  SUBLW  08
5480:  BNC   54A4
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
5482:  MOVLW  1E
5484:  MOVLB  5
5486:  MOVWF  x03
5488:  MOVLB  0
548A:  CALL   106A
548E:  MOVLW  01
5490:  MOVLB  4
5492:  SUBWF  xA4,W
5494:  CLRF   03
5496:  ADDLW  C3
5498:  MOVWF  FE9
549A:  MOVLW  04
549C:  ADDWFC 03,W
549E:  MOVWF  FEA
54A0:  INCF   FEF,F
54A2:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
54A4:  BSF    F92.1
54A6:  BTFSS  F80.1
54A8:  BRA    54E6
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
54AA:  MOVLW  01
54AC:  SUBWF  xA4,W
54AE:  CLRF   03
54B0:  ADDLW  C3
54B2:  MOVWF  FE9
54B4:  MOVLW  04
54B6:  ADDWFC 03,W
54B8:  MOVWF  FEA
54BA:  BTFSC  FEF.7
54BC:  BRA    54E6
54BE:  MOVF   FEF,W
54C0:  SUBLW  00
54C2:  BC    54E6
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
54C4:  MOVLW  1E
54C6:  MOVLB  5
54C8:  MOVWF  x03
54CA:  MOVLB  0
54CC:  CALL   106A
54D0:  MOVLW  01
54D2:  MOVLB  4
54D4:  SUBWF  xA4,W
54D6:  CLRF   03
54D8:  ADDLW  C3
54DA:  MOVWF  FE9
54DC:  MOVLW  04
54DE:  ADDWFC 03,W
54E0:  MOVWF  FEA
54E2:  DECF   FEF,F
54E4:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
54E6:  BSF    F92.2
54E8:  BTFSS  F80.2
54EA:  BRA    54FE
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
54EC:  MOVLW  1E
54EE:  MOVLB  5
54F0:  MOVWF  x03
54F2:  MOVLB  0
54F4:  CALL   106A
54F8:  MOVLB  4
54FA:  DECF   xA4,F
54FC:  BSF    x96.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
54FE:  BSF    F92.3
5500:  BTFSS  F80.3
5502:  BRA    55D4
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5504:  MOVLW  04
5506:  MOVLB  5
5508:  MOVWF  x02
550A:  MOVLW  AF
550C:  MOVWF  x03
550E:  MOVLB  0
5510:  CALL   106A
5514:  MOVLB  5
5516:  DECFSZ x02,F
5518:  BRA    550A
551A:  MOVLW  08
551C:  MOVLB  4
551E:  MOVWF  xA3
5520:  MOVLB  5
5522:  CLRF   x03
5524:  MOVLB  0
5526:  CALL   10D4
552A:  MOVLW  01
552C:  MOVLB  4
552E:  MOVWF  xA8
5530:  BSF    x96.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
5532:  CLRF   FA9
5534:  MOVFF  4C3,FA8
5538:  BCF    FA6.6
553A:  BCF    FA6.7
553C:  BSF    FA6.2
553E:  MOVF   FF2,W
5540:  MOVWF  00
5542:  BCF    FF2.7
5544:  MOVLB  F
5546:  MOVLW  55
5548:  MOVWF  FA7
554A:  MOVLW  AA
554C:  MOVWF  FA7
554E:  BSF    FA6.1
5550:  BTFSC  FA6.1
5552:  BRA    5550
5554:  BCF    FA6.2
5556:  MOVF   00,W
5558:  IORWF  FF2,F
555A:  MOVLW  01
555C:  MOVWF  FA9
555E:  MOVFF  4C4,FA8
5562:  BCF    FA6.6
5564:  BCF    FA6.7
5566:  BSF    FA6.2
5568:  MOVF   FF2,W
556A:  MOVWF  00
556C:  BCF    FF2.7
556E:  MOVLW  55
5570:  MOVWF  FA7
5572:  MOVLW  AA
5574:  MOVWF  FA7
5576:  BSF    FA6.1
5578:  BTFSC  FA6.1
557A:  BRA    5578
557C:  BCF    FA6.2
557E:  MOVF   00,W
5580:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
5582:  MOVLW  02
5584:  MOVWF  FA9
5586:  MOVFF  4C5,FA8
558A:  BCF    FA6.6
558C:  BCF    FA6.7
558E:  BSF    FA6.2
5590:  MOVFF  FF2,00
5594:  BCF    FF2.7
5596:  MOVLW  55
5598:  MOVWF  FA7
559A:  MOVLW  AA
559C:  MOVWF  FA7
559E:  BSF    FA6.1
55A0:  BTFSC  FA6.1
55A2:  BRA    55A0
55A4:  BCF    FA6.2
55A6:  MOVF   00,W
55A8:  IORWF  FF2,F
55AA:  MOVLW  03
55AC:  MOVWF  FA9
55AE:  MOVFF  4C6,FA8
55B2:  BCF    FA6.6
55B4:  BCF    FA6.7
55B6:  BSF    FA6.2
55B8:  MOVFF  FF2,00
55BC:  BCF    FF2.7
55BE:  MOVLW  55
55C0:  MOVWF  FA7
55C2:  MOVLW  AA
55C4:  MOVWF  FA7
55C6:  BSF    FA6.1
55C8:  BTFSC  FA6.1
55CA:  BRA    55C8
55CC:  BCF    FA6.2
55CE:  MOVF   00,W
55D0:  IORWF  FF2,F
55D2:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
55D4:  MOVF   xA3,W
55D6:  SUBLW  0C
55D8:  BTFSS  FD8.2
55DA:  BRA    58DE
....................       
....................       if(visual==1) 
55DC:  BTFSS  x96.4
55DE:  BRA    576A
....................       { 
....................          if(unidad<1) 
55E0:  MOVF   xA4,F
55E2:  BNZ   55E8
....................          {unidad=4;} 
55E4:  MOVLW  04
55E6:  MOVWF  xA4
....................           
....................          strcpy(Menus.Letra," Secado"); 
55E8:  MOVLW  04
55EA:  MOVWF  FEA
55EC:  MOVLW  E2
55EE:  MOVWF  FE9
55F0:  MOVFF  FF2,502
55F4:  BCF    FF2.7
55F6:  MOVLW  00
55F8:  MOVLB  0
55FA:  CALL   0CFC
55FE:  TBLRD*-
5600:  TBLRD*+
5602:  MOVF   FF5,W
5604:  MOVWF  FEE
5606:  IORLW  00
5608:  BNZ   5600
560A:  MOVLB  5
560C:  BTFSC  x02.7
560E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5610:  MOVLW  04
5612:  MOVWF  x03
5614:  MOVLW  E2
5616:  MOVWF  x02
5618:  CLRF   x04
561A:  CLRF   x05
561C:  MOVLW  01
561E:  MOVWF  x06
5620:  MOVLW  02
5622:  MOVWF  x07
5624:  MOVLB  0
5626:  CALL   1702
....................           
....................          if(unidad==4) 
562A:  MOVLB  4
562C:  MOVF   xA4,W
562E:  SUBLW  04
5630:  BNZ   5650
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
5632:  MOVFF  4CE,503
5636:  MOVLW  14
5638:  MOVLB  5
563A:  MOVWF  x04
563C:  MOVLW  28
563E:  MOVWF  x05
5640:  MOVLW  01
5642:  MOVWF  x06
5644:  MOVLW  02
5646:  MOVWF  x07
5648:  MOVLB  0
564A:  CALL   24EA
....................          else 
564E:  BRA    566A
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
5650:  MOVFF  4CE,503
5654:  MOVLW  14
5656:  MOVLB  5
5658:  MOVWF  x04
565A:  MOVLW  28
565C:  MOVWF  x05
565E:  CLRF   x06
5660:  MOVLW  02
5662:  MOVWF  x07
5664:  MOVLB  0
5666:  CALL   24EA
....................           
....................          if(unidad==3) 
566A:  MOVLB  4
566C:  MOVF   xA4,W
566E:  SUBLW  03
5670:  BNZ   568E
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
5672:  MOVFF  4CD,503
5676:  MOVLW  28
5678:  MOVLB  5
567A:  MOVWF  x04
567C:  MOVWF  x05
567E:  MOVLW  01
5680:  MOVWF  x06
5682:  MOVLW  02
5684:  MOVWF  x07
5686:  MOVLB  0
5688:  CALL   24EA
....................          else 
568C:  BRA    56A6
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
568E:  MOVFF  4CD,503
5692:  MOVLW  28
5694:  MOVLB  5
5696:  MOVWF  x04
5698:  MOVWF  x05
569A:  CLRF   x06
569C:  MOVLW  02
569E:  MOVWF  x07
56A0:  MOVLB  0
56A2:  CALL   24EA
....................           
....................          if(unidad==2) 
56A6:  MOVLB  4
56A8:  MOVF   xA4,W
56AA:  SUBLW  02
56AC:  BNZ   56CC
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
56AE:  MOVFF  4CC,503
56B2:  MOVLW  46
56B4:  MOVLB  5
56B6:  MOVWF  x04
56B8:  MOVLW  28
56BA:  MOVWF  x05
56BC:  MOVLW  01
56BE:  MOVWF  x06
56C0:  MOVLW  02
56C2:  MOVWF  x07
56C4:  MOVLB  0
56C6:  CALL   24EA
....................          else 
56CA:  BRA    56E6
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
56CC:  MOVFF  4CC,503
56D0:  MOVLW  46
56D2:  MOVLB  5
56D4:  MOVWF  x04
56D6:  MOVLW  28
56D8:  MOVWF  x05
56DA:  CLRF   x06
56DC:  MOVLW  02
56DE:  MOVWF  x07
56E0:  MOVLB  0
56E2:  CALL   24EA
....................           
....................          if(unidad==1) 
56E6:  MOVLB  4
56E8:  DECFSZ xA4,W
56EA:  BRA    570A
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
56EC:  MOVFF  4CB,503
56F0:  MOVLW  5A
56F2:  MOVLB  5
56F4:  MOVWF  x04
56F6:  MOVLW  28
56F8:  MOVWF  x05
56FA:  MOVLW  01
56FC:  MOVWF  x06
56FE:  MOVLW  02
5700:  MOVWF  x07
5702:  MOVLB  0
5704:  CALL   24EA
....................          else 
5708:  BRA    5724
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
570A:  MOVFF  4CB,503
570E:  MOVLW  5A
5710:  MOVLB  5
5712:  MOVWF  x04
5714:  MOVLW  28
5716:  MOVWF  x05
5718:  CLRF   x06
571A:  MOVLW  02
571C:  MOVWF  x07
571E:  MOVLB  0
5720:  CALL   24EA
....................           
....................          strcpy(Menus.Letra,":"); 
5724:  MOVLW  04
5726:  MOVWF  FEA
5728:  MOVLW  E2
572A:  MOVWF  FE9
572C:  MOVFF  FF2,502
5730:  BCF    FF2.7
5732:  MOVLW  00
5734:  CALL   06BE
5738:  TBLRD*-
573A:  TBLRD*+
573C:  MOVF   FF5,W
573E:  MOVWF  FEE
5740:  IORLW  00
5742:  BNZ   573A
5744:  MOVLB  5
5746:  BTFSC  x02.7
5748:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
574A:  MOVLW  04
574C:  MOVWF  x03
574E:  MOVLW  E2
5750:  MOVWF  x02
5752:  MOVLW  3C
5754:  MOVWF  x04
5756:  MOVLW  2A
5758:  MOVWF  x05
575A:  MOVLW  02
575C:  MOVWF  x06
575E:  MOVWF  x07
5760:  MOVLB  0
5762:  CALL   1702
....................           
....................          visual=0; 
5766:  MOVLB  4
5768:  BCF    x96.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
576A:  BSF    F92.0
576C:  BTFSS  F80.0
576E:  BRA    57AC
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
5770:  MOVLW  01
5772:  SUBWF  xA4,W
5774:  CLRF   03
5776:  ADDLW  CB
5778:  MOVWF  FE9
577A:  MOVLW  04
577C:  ADDWFC 03,W
577E:  MOVWF  FEA
5780:  BTFSC  FEF.7
5782:  BRA    578A
5784:  MOVF   FEF,W
5786:  SUBLW  08
5788:  BNC   57AC
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
578A:  MOVLW  1E
578C:  MOVLB  5
578E:  MOVWF  x03
5790:  MOVLB  0
5792:  CALL   106A
5796:  MOVLW  01
5798:  MOVLB  4
579A:  SUBWF  xA4,W
579C:  CLRF   03
579E:  ADDLW  CB
57A0:  MOVWF  FE9
57A2:  MOVLW  04
57A4:  ADDWFC 03,W
57A6:  MOVWF  FEA
57A8:  INCF   FEF,F
57AA:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
57AC:  BSF    F92.1
57AE:  BTFSS  F80.1
57B0:  BRA    57EE
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
57B2:  MOVLW  01
57B4:  SUBWF  xA4,W
57B6:  CLRF   03
57B8:  ADDLW  CB
57BA:  MOVWF  FE9
57BC:  MOVLW  04
57BE:  ADDWFC 03,W
57C0:  MOVWF  FEA
57C2:  BTFSC  FEF.7
57C4:  BRA    57EE
57C6:  MOVF   FEF,W
57C8:  SUBLW  00
57CA:  BC    57EE
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
57CC:  MOVLW  1E
57CE:  MOVLB  5
57D0:  MOVWF  x03
57D2:  MOVLB  0
57D4:  CALL   106A
57D8:  MOVLW  01
57DA:  MOVLB  4
57DC:  SUBWF  xA4,W
57DE:  CLRF   03
57E0:  ADDLW  CB
57E2:  MOVWF  FE9
57E4:  MOVLW  04
57E6:  ADDWFC 03,W
57E8:  MOVWF  FEA
57EA:  DECF   FEF,F
57EC:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
57EE:  BSF    F92.2
57F0:  BTFSS  F80.2
57F2:  BRA    5806
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
57F4:  MOVLW  1E
57F6:  MOVLB  5
57F8:  MOVWF  x03
57FA:  MOVLB  0
57FC:  CALL   106A
5800:  MOVLB  4
5802:  DECF   xA4,F
5804:  BSF    x96.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5806:  BSF    F92.3
5808:  BTFSS  F80.3
580A:  BRA    58DE
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
580C:  MOVLW  04
580E:  MOVLB  5
5810:  MOVWF  x02
5812:  MOVLW  AF
5814:  MOVWF  x03
5816:  MOVLB  0
5818:  CALL   106A
581C:  MOVLB  5
581E:  DECFSZ x02,F
5820:  BRA    5812
5822:  MOVLW  08
5824:  MOVLB  4
5826:  MOVWF  xA3
5828:  MOVLB  5
582A:  CLRF   x03
582C:  MOVLB  0
582E:  CALL   10D4
5832:  MOVLW  01
5834:  MOVLB  4
5836:  MOVWF  xA8
5838:  BSF    x96.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
583A:  MOVLW  04
583C:  MOVWF  FA9
583E:  MOVFF  4CB,FA8
5842:  BCF    FA6.6
5844:  BCF    FA6.7
5846:  BSF    FA6.2
5848:  MOVF   FF2,W
584A:  MOVWF  00
584C:  BCF    FF2.7
584E:  MOVLB  F
5850:  MOVLW  55
5852:  MOVWF  FA7
5854:  MOVLW  AA
5856:  MOVWF  FA7
5858:  BSF    FA6.1
585A:  BTFSC  FA6.1
585C:  BRA    585A
585E:  BCF    FA6.2
5860:  MOVF   00,W
5862:  IORWF  FF2,F
5864:  MOVLW  05
5866:  MOVWF  FA9
5868:  MOVFF  4CC,FA8
586C:  BCF    FA6.6
586E:  BCF    FA6.7
5870:  BSF    FA6.2
5872:  MOVF   FF2,W
5874:  MOVWF  00
5876:  BCF    FF2.7
5878:  MOVLW  55
587A:  MOVWF  FA7
587C:  MOVLW  AA
587E:  MOVWF  FA7
5880:  BSF    FA6.1
5882:  BTFSC  FA6.1
5884:  BRA    5882
5886:  BCF    FA6.2
5888:  MOVF   00,W
588A:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
588C:  MOVLW  06
588E:  MOVWF  FA9
5890:  MOVFF  4CD,FA8
5894:  BCF    FA6.6
5896:  BCF    FA6.7
5898:  BSF    FA6.2
589A:  MOVFF  FF2,00
589E:  BCF    FF2.7
58A0:  MOVLW  55
58A2:  MOVWF  FA7
58A4:  MOVLW  AA
58A6:  MOVWF  FA7
58A8:  BSF    FA6.1
58AA:  BTFSC  FA6.1
58AC:  BRA    58AA
58AE:  BCF    FA6.2
58B0:  MOVF   00,W
58B2:  IORWF  FF2,F
58B4:  MOVLW  07
58B6:  MOVWF  FA9
58B8:  MOVFF  4CE,FA8
58BC:  BCF    FA6.6
58BE:  BCF    FA6.7
58C0:  BSF    FA6.2
58C2:  MOVFF  FF2,00
58C6:  BCF    FF2.7
58C8:  MOVLW  55
58CA:  MOVWF  FA7
58CC:  MOVLW  AA
58CE:  MOVWF  FA7
58D0:  BSF    FA6.1
58D2:  BTFSC  FA6.1
58D4:  BRA    58D2
58D6:  BCF    FA6.2
58D8:  MOVF   00,W
58DA:  IORWF  FF2,F
58DC:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
58DE:  MOVF   xA3,W
58E0:  SUBLW  0D
58E2:  BTFSS  FD8.2
58E4:  BRA    5A1C
....................       
....................       if(visual==1) 
58E6:  BTFSS  x96.4
58E8:  BRA    5950
....................       { 
....................          glcd_fillScreen(OFF); 
58EA:  MOVLB  5
58EC:  CLRF   x03
58EE:  MOVLB  0
58F0:  CALL   10D4
....................          strcpy(Menus.Letra,"Temperatura"); 
58F4:  MOVLW  04
58F6:  MOVWF  FEA
58F8:  MOVLW  E2
58FA:  MOVWF  FE9
58FC:  MOVFF  FF2,502
5900:  BCF    FF2.7
5902:  MOVLW  00
5904:  CALL   0C3C
5908:  TBLRD*-
590A:  TBLRD*+
590C:  MOVF   FF5,W
590E:  MOVWF  FEE
5910:  IORLW  00
5912:  BNZ   590A
5914:  MOVLB  5
5916:  BTFSC  x02.7
5918:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
591A:  MOVLW  04
591C:  MOVWF  x03
591E:  MOVLW  E2
5920:  MOVWF  x02
5922:  CLRF   x04
5924:  CLRF   x05
5926:  MOVLW  01
5928:  MOVWF  x06
592A:  MOVLW  02
592C:  MOVWF  x07
592E:  MOVLB  0
5930:  CALL   1702
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
5934:  MOVFF  4A6,503
5938:  MOVLW  1E
593A:  MOVLB  5
593C:  MOVWF  x04
593E:  MOVWF  x05
5940:  CLRF   x06
5942:  MOVLW  03
5944:  MOVWF  x07
5946:  MOVLB  0
5948:  CALL   24EA
....................           
....................          visual=0; 
594C:  MOVLB  4
594E:  BCF    x96.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
5950:  BSF    F92.0
5952:  BTFSS  F80.0
5954:  BRA    5988
....................          {   
....................             if(Setpoint<134) 
5956:  MOVF   xA6,W
5958:  SUBLW  85
595A:  BNC   5988
....................             { 
....................                if(Setpoint<100) 
595C:  MOVF   xA6,W
595E:  SUBLW  63
5960:  BNC   5976
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
5962:  MOVLW  64
5964:  MOVWF  xA6
5966:  MOVLB  5
5968:  MOVWF  x03
596A:  MOVLB  0
596C:  CALL   106A
5970:  MOVLB  4
5972:  BSF    x96.4
....................                } 
....................                else 
5974:  BRA    5988
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
5976:  MOVLW  1E
5978:  MOVLB  5
597A:  MOVWF  x03
597C:  MOVLB  0
597E:  CALL   106A
5982:  MOVLB  4
5984:  INCF   xA6,F
5986:  BSF    x96.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5988:  BSF    F92.1
598A:  BTFSS  F80.1
598C:  BRA    59A6
....................          {   
....................             if(Setpoint>105) 
598E:  MOVF   xA6,W
5990:  SUBLW  69
5992:  BC    59A6
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
5994:  MOVLW  1E
5996:  MOVLB  5
5998:  MOVWF  x03
599A:  MOVLB  0
599C:  CALL   106A
59A0:  MOVLB  4
59A2:  DECF   xA6,F
59A4:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
59A6:  BSF    F92.2
59A8:  BTFSS  F80.2
59AA:  BRA    59BC
....................          {   
....................             delay_ms(30);visual=1; 
59AC:  MOVLW  1E
59AE:  MOVLB  5
59B0:  MOVWF  x03
59B2:  MOVLB  0
59B4:  CALL   106A
59B8:  MOVLB  4
59BA:  BSF    x96.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
59BC:  BSF    F92.3
59BE:  BTFSS  F80.3
59C0:  BRA    5A1C
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
59C2:  MOVLW  04
59C4:  MOVLB  5
59C6:  MOVWF  x02
59C8:  MOVLW  AF
59CA:  MOVWF  x03
59CC:  MOVLB  0
59CE:  CALL   106A
59D2:  MOVLB  5
59D4:  DECFSZ x02,F
59D6:  BRA    59C8
59D8:  MOVLW  08
59DA:  MOVLB  4
59DC:  MOVWF  xA3
59DE:  MOVLB  5
59E0:  CLRF   x03
59E2:  MOVLB  0
59E4:  CALL   10D4
59E8:  MOVLW  01
59EA:  MOVLB  4
59EC:  MOVWF  xA8
59EE:  BSF    x96.4
....................             write_eeprom(8,Setpoint); 
59F0:  MOVLW  08
59F2:  MOVWF  FA9
59F4:  MOVFF  4A6,FA8
59F8:  BCF    FA6.6
59FA:  BCF    FA6.7
59FC:  BSF    FA6.2
59FE:  MOVF   FF2,W
5A00:  MOVWF  00
5A02:  BCF    FF2.7
5A04:  MOVLB  F
5A06:  MOVLW  55
5A08:  MOVWF  FA7
5A0A:  MOVLW  AA
5A0C:  MOVWF  FA7
5A0E:  BSF    FA6.1
5A10:  BTFSC  FA6.1
5A12:  BRA    5A10
5A14:  BCF    FA6.2
5A16:  MOVF   00,W
5A18:  IORWF  FF2,F
5A1A:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
5A1C:  MOVF   xA3,W
5A1E:  SUBLW  0E
5A20:  BTFSS  FD8.2
5A22:  BRA    5D12
....................       if(Nivel>6) 
5A24:  MOVF   xB6,F
5A26:  BNZ   5A2E
5A28:  MOVF   xB5,W
5A2A:  SUBLW  06
5A2C:  BC    5A34
....................          Nivel=6; 
5A2E:  CLRF   xB6
5A30:  MOVLW  06
5A32:  MOVWF  xB5
....................           
....................       if(visual==1) 
5A34:  BTFSS  x96.4
5A36:  BRA    5A98
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
5A38:  MOVLW  04
5A3A:  MOVWF  FEA
5A3C:  MOVLW  E2
5A3E:  MOVWF  FE9
5A40:  MOVFF  FF2,502
5A44:  BCF    FF2.7
5A46:  MOVLW  00
5A48:  MOVLB  0
5A4A:  CALL   0D1E
5A4E:  TBLRD*-
5A50:  TBLRD*+
5A52:  MOVF   FF5,W
5A54:  MOVWF  FEE
5A56:  IORLW  00
5A58:  BNZ   5A50
5A5A:  MOVLB  5
5A5C:  BTFSC  x02.7
5A5E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5A60:  MOVLW  04
5A62:  MOVWF  x03
5A64:  MOVLW  E2
5A66:  MOVWF  x02
5A68:  CLRF   x04
5A6A:  CLRF   x05
5A6C:  MOVLW  01
5A6E:  MOVWF  x06
5A70:  MOVLW  02
5A72:  MOVWF  x07
5A74:  MOVLB  0
5A76:  CALL   1702
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
5A7A:  MOVFF  4B5,503
5A7E:  MOVLW  32
5A80:  MOVLB  5
5A82:  MOVWF  x04
5A84:  MOVLW  28
5A86:  MOVWF  x05
5A88:  CLRF   x06
5A8A:  MOVLW  02
5A8C:  MOVWF  x07
5A8E:  MOVLB  0
5A90:  CALL   24EA
....................           
....................          visual=0; 
5A94:  MOVLB  4
5A96:  BCF    x96.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5A98:  BSF    F92.0
5A9A:  BTFSS  F80.0
5A9C:  BRA    5ABE
....................          {   
....................             if(Nivel<6) 
5A9E:  MOVF   xB6,F
5AA0:  BNZ   5ABE
5AA2:  MOVF   xB5,W
5AA4:  SUBLW  05
5AA6:  BNC   5ABE
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
5AA8:  MOVLW  1E
5AAA:  MOVLB  5
5AAC:  MOVWF  x03
5AAE:  MOVLB  0
5AB0:  CALL   106A
5AB4:  MOVLB  4
5AB6:  INCF   xB5,F
5AB8:  BTFSC  FD8.2
5ABA:  INCF   xB6,F
5ABC:  BSF    x96.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5ABE:  BSF    F92.1
5AC0:  BTFSS  F80.1
5AC2:  BRA    5AE6
....................          {   
....................             if(Nivel>1) 
5AC4:  MOVF   xB6,F
5AC6:  BNZ   5ACE
5AC8:  MOVF   xB5,W
5ACA:  SUBLW  01
5ACC:  BC    5AE6
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
5ACE:  MOVLW  1E
5AD0:  MOVLB  5
5AD2:  MOVWF  x03
5AD4:  MOVLB  0
5AD6:  CALL   106A
5ADA:  MOVLB  4
5ADC:  MOVF   xB5,W
5ADE:  BTFSC  FD8.2
5AE0:  DECF   xB6,F
5AE2:  DECF   xB5,F
5AE4:  BSF    x96.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
5AE6:  BTFSS  x96.5
5AE8:  BRA    5CA2
....................          { 
....................             if(RIGHT)//Si oprime SET 
5AEA:  BSF    F92.2
5AEC:  BTFSS  F80.2
5AEE:  BRA    5CA0
....................             {   
....................                write_eeprom(9,Nivel); 
5AF0:  MOVLW  09
5AF2:  MOVWF  FA9
5AF4:  MOVFF  4B5,FA8
5AF8:  BCF    FA6.6
5AFA:  BCF    FA6.7
5AFC:  BSF    FA6.2
5AFE:  MOVF   FF2,W
5B00:  MOVWF  00
5B02:  BCF    FF2.7
5B04:  MOVLB  F
5B06:  MOVLW  55
5B08:  MOVWF  FA7
5B0A:  MOVLW  AA
5B0C:  MOVWF  FA7
5B0E:  BSF    FA6.1
5B10:  BTFSC  FA6.1
5B12:  BRA    5B10
5B14:  BCF    FA6.2
5B16:  MOVF   00,W
5B18:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5B1A:  MOVLW  14
5B1C:  MOVLB  4
5B1E:  MOVWF  xA3
5B20:  MOVLW  0F
5B22:  MOVLB  5
5B24:  MOVWF  x14
5B26:  MOVLW  12
5B28:  MOVWF  x15
5B2A:  MOVLW  1E
5B2C:  MOVWF  x16
5B2E:  MOVLW  35
5B30:  MOVWF  x17
5B32:  CLRF   x18
5B34:  MOVLW  01
5B36:  MOVWF  x19
5B38:  MOVLB  0
5B3A:  CALL   1640
5B3E:  MOVLB  4
5B40:  CLRF   xAA
5B42:  MOVLW  C0
5B44:  IORWF  FF2,F
5B46:  MOVLB  5
5B48:  CLRF   x03
5B4A:  MOVLB  0
5B4C:  CALL   10D4
....................                strcpy(Menus.Letra,"Calentando"); 
5B50:  MOVLW  04
5B52:  MOVWF  FEA
5B54:  MOVLW  E2
5B56:  MOVWF  FE9
5B58:  MOVFF  FF2,502
5B5C:  BCF    FF2.7
5B5E:  MOVLW  00
5B60:  CALL   09B4
5B64:  TBLRD*-
5B66:  TBLRD*+
5B68:  MOVF   FF5,W
5B6A:  MOVWF  FEE
5B6C:  IORLW  00
5B6E:  BNZ   5B66
5B70:  MOVLB  5
5B72:  BTFSC  x02.7
5B74:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
5B76:  MOVLW  04
5B78:  MOVWF  x03
5B7A:  MOVLW  E2
5B7C:  MOVWF  x02
5B7E:  CLRF   x04
5B80:  MOVLW  37
5B82:  MOVWF  x05
5B84:  MOVLW  02
5B86:  MOVWF  x06
5B88:  MOVLW  01
5B8A:  MOVWF  x07
5B8C:  MOVLB  0
5B8E:  CALL   1702
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
5B92:  MOVLW  0F
5B94:  MOVLB  5
5B96:  MOVWF  x14
5B98:  MOVLW  12
5B9A:  MOVWF  x15
5B9C:  MOVLW  1E
5B9E:  MOVWF  x16
5BA0:  MOVLW  35
5BA2:  MOVWF  x17
5BA4:  CLRF   x18
5BA6:  MOVLW  01
5BA8:  MOVWF  x19
5BAA:  MOVLB  0
5BAC:  CALL   1640
....................                glcd_imagen(5); 
5BB0:  MOVLW  05
5BB2:  MOVLB  5
5BB4:  MOVWF  x02
5BB6:  MOVLB  0
5BB8:  CALL   213E
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5BBC:  MOVLW  04
5BBE:  MOVWF  FEA
5BC0:  MOVLW  E2
5BC2:  MOVWF  FE9
5BC4:  MOVFF  FF2,502
5BC8:  BCF    FF2.7
5BCA:  MOVLW  00
5BCC:  CALL   09DA
5BD0:  TBLRD*-
5BD2:  TBLRD*+
5BD4:  MOVF   FF5,W
5BD6:  MOVWF  FEE
5BD8:  IORLW  00
5BDA:  BNZ   5BD2
5BDC:  MOVLB  5
5BDE:  BTFSC  x02.7
5BE0:  BSF    FF2.7
5BE2:  MOVLW  04
5BE4:  MOVWF  x03
5BE6:  MOVLW  E2
5BE8:  MOVWF  x02
5BEA:  CLRF   x04
5BEC:  CLRF   x05
5BEE:  MOVLW  02
5BF0:  MOVWF  x06
5BF2:  MOVLW  01
5BF4:  MOVWF  x07
5BF6:  MOVLB  0
5BF8:  CALL   1702
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5BFC:  MOVLW  04
5BFE:  MOVWF  FEA
5C00:  MOVLW  E2
5C02:  MOVWF  FE9
5C04:  MOVFF  FF2,502
5C08:  BCF    FF2.7
5C0A:  MOVLW  00
5C0C:  CALL   09FC
5C10:  TBLRD*-
5C12:  TBLRD*+
5C14:  MOVF   FF5,W
5C16:  MOVWF  FEE
5C18:  IORLW  00
5C1A:  BNZ   5C12
5C1C:  MOVLB  5
5C1E:  BTFSC  x02.7
5C20:  BSF    FF2.7
5C22:  MOVLW  04
5C24:  MOVWF  x03
5C26:  MOVLW  E2
5C28:  MOVWF  x02
5C2A:  CLRF   x04
5C2C:  MOVLW  08
5C2E:  MOVWF  x05
5C30:  MOVLW  02
5C32:  MOVWF  x06
5C34:  MOVLW  01
5C36:  MOVWF  x07
5C38:  MOVLB  0
5C3A:  CALL   1702
....................                glcd_circle(95,40,2,NO,ON); 
5C3E:  MOVLW  5F
5C40:  MOVLB  5
5C42:  MOVWF  x02
5C44:  MOVLW  28
5C46:  MOVWF  x03
5C48:  MOVLW  02
5C4A:  MOVWF  x04
5C4C:  CLRF   x05
5C4E:  MOVLW  01
5C50:  MOVWF  x06
5C52:  MOVLB  0
5C54:  CALL   223A
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5C58:  MOVLW  04
5C5A:  MOVWF  FEA
5C5C:  MOVLW  E2
5C5E:  MOVWF  FE9
5C60:  MOVFF  FF2,502
5C64:  BCF    FF2.7
5C66:  MOVLW  00
5C68:  CALL   0A1E
5C6C:  TBLRD*-
5C6E:  TBLRD*+
5C70:  MOVF   FF5,W
5C72:  MOVWF  FEE
5C74:  IORLW  00
5C76:  BNZ   5C6E
5C78:  MOVLB  5
5C7A:  BTFSC  x02.7
5C7C:  BSF    FF2.7
5C7E:  MOVLW  04
5C80:  MOVWF  x03
5C82:  MOVLW  E2
5C84:  MOVWF  x02
5C86:  MOVLW  66
5C88:  MOVWF  x04
5C8A:  MOVLW  28
5C8C:  MOVWF  x05
5C8E:  MOVLW  02
5C90:  MOVWF  x06
5C92:  MOVWF  x07
5C94:  MOVLB  0
5C96:  CALL   1702
....................                MuestraTiemposProgramados(); 
5C9A:  CALL   263A
5C9E:  MOVLB  4
....................             }       
....................          } 
....................          else 
5CA0:  BRA    5D12
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5CA2:  BSF    F92.3
5CA4:  BTFSS  F80.3
5CA6:  BRA    5D12
....................             { 
....................                if(Nivel<6) 
5CA8:  MOVF   xB6,F
5CAA:  BNZ   5CB6
5CAC:  MOVF   xB5,W
5CAE:  SUBLW  05
5CB0:  BNC   5CB6
....................                { 
....................                   desfoguelento=1; 
5CB2:  BSF    x96.5
....................                } 
....................                else 
5CB4:  BRA    5CB8
....................                { 
....................                   desfoguelento=0; 
5CB6:  BCF    x96.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5CB8:  MOVLW  04
5CBA:  MOVLB  5
5CBC:  MOVWF  x02
5CBE:  MOVLW  AF
5CC0:  MOVWF  x03
5CC2:  MOVLB  0
5CC4:  CALL   106A
5CC8:  MOVLB  5
5CCA:  DECFSZ x02,F
5CCC:  BRA    5CBE
5CCE:  MOVLW  08
5CD0:  MOVLB  4
5CD2:  MOVWF  xA3
5CD4:  MOVLB  5
5CD6:  CLRF   x03
5CD8:  MOVLB  0
5CDA:  CALL   10D4
5CDE:  MOVLW  01
5CE0:  MOVLB  4
5CE2:  MOVWF  xA8
5CE4:  BSF    x96.4
....................                write_eeprom(9,Nivel); 
5CE6:  MOVLW  09
5CE8:  MOVWF  FA9
5CEA:  MOVFF  4B5,FA8
5CEE:  BCF    FA6.6
5CF0:  BCF    FA6.7
5CF2:  BSF    FA6.2
5CF4:  MOVF   FF2,W
5CF6:  MOVWF  00
5CF8:  BCF    FF2.7
5CFA:  MOVLB  F
5CFC:  MOVLW  55
5CFE:  MOVWF  FA7
5D00:  MOVLW  AA
5D02:  MOVWF  FA7
5D04:  BSF    FA6.1
5D06:  BTFSC  FA6.1
5D08:  BRA    5D06
5D0A:  BCF    FA6.2
5D0C:  MOVF   00,W
5D0E:  IORWF  FF2,F
5D10:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5D12:  MOVF   xA3,W
5D14:  SUBLW  0F
5D16:  BTFSS  FD8.2
5D18:  BRA    6050
....................        
....................       if(visual==1) 
5D1A:  BTFSS  x96.4
5D1C:  BRA    5E82
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5D1E:  MOVLW  04
5D20:  MOVWF  FEA
5D22:  MOVLW  E2
5D24:  MOVWF  FE9
5D26:  MOVFF  FF2,502
5D2A:  BCF    FF2.7
5D2C:  MOVLW  00
5D2E:  MOVLB  0
5D30:  CALL   0C8E
5D34:  TBLRD*-
5D36:  TBLRD*+
5D38:  MOVF   FF5,W
5D3A:  MOVWF  FEE
5D3C:  IORLW  00
5D3E:  BNZ   5D36
5D40:  MOVLB  5
5D42:  BTFSC  x02.7
5D44:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5D46:  MOVLW  04
5D48:  MOVWF  x03
5D4A:  MOVLW  E2
5D4C:  MOVWF  x02
5D4E:  CLRF   x04
5D50:  CLRF   x05
5D52:  MOVLW  01
5D54:  MOVWF  x06
5D56:  MOVLW  02
5D58:  MOVWF  x07
5D5A:  MOVLB  0
5D5C:  CALL   1702
....................           
....................          if(Opcion==2) 
5D60:  MOVLB  4
5D62:  MOVF   xA8,W
5D64:  SUBLW  02
5D66:  BNZ   5DF2
....................          {strcpy(Menus.Letra,"SI"); 
5D68:  MOVLW  04
5D6A:  MOVWF  FEA
5D6C:  MOVLW  E2
5D6E:  MOVWF  FE9
5D70:  MOVFF  FF2,502
5D74:  BCF    FF2.7
5D76:  MOVLW  00
5D78:  MOVLB  0
5D7A:  CALL   0D42
5D7E:  TBLRD*-
5D80:  TBLRD*+
5D82:  MOVF   FF5,W
5D84:  MOVWF  FEE
5D86:  IORLW  00
5D88:  BNZ   5D80
5D8A:  MOVLB  5
5D8C:  BTFSC  x02.7
5D8E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5D90:  MOVLW  04
5D92:  MOVWF  x03
5D94:  MOVLW  E2
5D96:  MOVWF  x02
5D98:  MOVLW  32
5D9A:  MOVWF  x04
5D9C:  MOVLW  19
5D9E:  MOVWF  x05
5DA0:  MOVLW  01
5DA2:  MOVWF  x06
5DA4:  MOVLW  02
5DA6:  MOVWF  x07
5DA8:  MOVLB  0
5DAA:  CALL   1702
....................          strcpy(Menus.Letra,"NO"); 
5DAE:  MOVLW  04
5DB0:  MOVWF  FEA
5DB2:  MOVLW  E2
5DB4:  MOVWF  FE9
5DB6:  MOVFF  FF2,502
5DBA:  BCF    FF2.7
5DBC:  MOVLW  00
5DBE:  CALL   0D60
5DC2:  TBLRD*-
5DC4:  TBLRD*+
5DC6:  MOVF   FF5,W
5DC8:  MOVWF  FEE
5DCA:  IORLW  00
5DCC:  BNZ   5DC4
5DCE:  MOVLB  5
5DD0:  BTFSC  x02.7
5DD2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5DD4:  MOVLW  04
5DD6:  MOVWF  x03
5DD8:  MOVLW  E2
5DDA:  MOVWF  x02
5DDC:  MOVLW  32
5DDE:  MOVWF  x04
5DE0:  MOVLW  2D
5DE2:  MOVWF  x05
5DE4:  CLRF   x06
5DE6:  MOVLW  02
5DE8:  MOVWF  x07
5DEA:  MOVLB  0
5DEC:  CALL   1702
5DF0:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
5DF2:  DECFSZ xA8,W
5DF4:  BRA    5E80
....................          {strcpy(Menus.Letra,"SI"); 
5DF6:  MOVLW  04
5DF8:  MOVWF  FEA
5DFA:  MOVLW  E2
5DFC:  MOVWF  FE9
5DFE:  MOVFF  FF2,502
5E02:  BCF    FF2.7
5E04:  MOVLW  00
5E06:  MOVLB  0
5E08:  CALL   0D42
5E0C:  TBLRD*-
5E0E:  TBLRD*+
5E10:  MOVF   FF5,W
5E12:  MOVWF  FEE
5E14:  IORLW  00
5E16:  BNZ   5E0E
5E18:  MOVLB  5
5E1A:  BTFSC  x02.7
5E1C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5E1E:  MOVLW  04
5E20:  MOVWF  x03
5E22:  MOVLW  E2
5E24:  MOVWF  x02
5E26:  MOVLW  32
5E28:  MOVWF  x04
5E2A:  MOVLW  19
5E2C:  MOVWF  x05
5E2E:  CLRF   x06
5E30:  MOVLW  02
5E32:  MOVWF  x07
5E34:  MOVLB  0
5E36:  CALL   1702
....................          strcpy(Menus.Letra,"NO"); 
5E3A:  MOVLW  04
5E3C:  MOVWF  FEA
5E3E:  MOVLW  E2
5E40:  MOVWF  FE9
5E42:  MOVFF  FF2,502
5E46:  BCF    FF2.7
5E48:  MOVLW  00
5E4A:  CALL   0D60
5E4E:  TBLRD*-
5E50:  TBLRD*+
5E52:  MOVF   FF5,W
5E54:  MOVWF  FEE
5E56:  IORLW  00
5E58:  BNZ   5E50
5E5A:  MOVLB  5
5E5C:  BTFSC  x02.7
5E5E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5E60:  MOVLW  04
5E62:  MOVWF  x03
5E64:  MOVLW  E2
5E66:  MOVWF  x02
5E68:  MOVLW  32
5E6A:  MOVWF  x04
5E6C:  MOVLW  2D
5E6E:  MOVWF  x05
5E70:  MOVLW  01
5E72:  MOVWF  x06
5E74:  MOVLW  02
5E76:  MOVWF  x07
5E78:  MOVLB  0
5E7A:  CALL   1702
5E7E:  MOVLB  4
....................          } 
....................          visual=0; 
5E80:  BCF    x96.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5E82:  BSF    F92.0
5E84:  BTFSS  F80.0
5E86:  BRA    5E92
....................       { 
....................          if(Opcion<2) 
5E88:  MOVF   xA8,W
5E8A:  SUBLW  01
5E8C:  BNC   5E90
....................          { 
....................             Opcion++; 
5E8E:  INCF   xA8,F
....................          } 
....................          visual=1; 
5E90:  BSF    x96.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5E92:  BSF    F92.1
5E94:  BTFSS  F80.1
5E96:  BRA    5EA2
....................       {   
....................          if(Opcion>1) 
5E98:  MOVF   xA8,W
5E9A:  SUBLW  01
5E9C:  BC    5EA0
....................          { 
....................             Opcion--; 
5E9E:  DECF   xA8,F
....................          }   
....................          visual=1; 
5EA0:  BSF    x96.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5EA2:  BSF    F92.2
5EA4:  BTFSS  F80.2
5EA6:  BRA    601C
....................       {   
....................          if(Opcion==2) 
5EA8:  MOVF   xA8,W
5EAA:  SUBLW  02
5EAC:  BTFSS  FD8.2
5EAE:  BRA    5FEE
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5EB0:  MOVLW  14
5EB2:  MOVWF  xA3
5EB4:  MOVLW  0F
5EB6:  MOVLB  5
5EB8:  MOVWF  x14
5EBA:  MOVLW  12
5EBC:  MOVWF  x15
5EBE:  MOVLW  1E
5EC0:  MOVWF  x16
5EC2:  MOVLW  35
5EC4:  MOVWF  x17
5EC6:  CLRF   x18
5EC8:  MOVLW  01
5ECA:  MOVWF  x19
5ECC:  MOVLB  0
5ECE:  CALL   1640
5ED2:  MOVLB  4
5ED4:  CLRF   xAA
5ED6:  MOVLW  C0
5ED8:  IORWF  FF2,F
5EDA:  MOVLB  5
5EDC:  CLRF   x03
5EDE:  MOVLB  0
5EE0:  CALL   10D4
....................             strcpy(Menus.Letra,"Calentando"); 
5EE4:  MOVLW  04
5EE6:  MOVWF  FEA
5EE8:  MOVLW  E2
5EEA:  MOVWF  FE9
5EEC:  MOVFF  FF2,502
5EF0:  BCF    FF2.7
5EF2:  MOVLW  00
5EF4:  CALL   09B4
5EF8:  TBLRD*-
5EFA:  TBLRD*+
5EFC:  MOVF   FF5,W
5EFE:  MOVWF  FEE
5F00:  IORLW  00
5F02:  BNZ   5EFA
5F04:  MOVLB  5
5F06:  BTFSC  x02.7
5F08:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5F0A:  MOVLW  04
5F0C:  MOVWF  x03
5F0E:  MOVLW  E2
5F10:  MOVWF  x02
5F12:  CLRF   x04
5F14:  MOVLW  37
5F16:  MOVWF  x05
5F18:  MOVLW  02
5F1A:  MOVWF  x06
5F1C:  MOVLW  01
5F1E:  MOVWF  x07
5F20:  MOVLB  0
5F22:  CALL   1702
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5F26:  MOVLW  0F
5F28:  MOVLB  5
5F2A:  MOVWF  x14
5F2C:  MOVLW  12
5F2E:  MOVWF  x15
5F30:  MOVLW  1E
5F32:  MOVWF  x16
5F34:  MOVLW  35
5F36:  MOVWF  x17
5F38:  CLRF   x18
5F3A:  MOVLW  01
5F3C:  MOVWF  x19
5F3E:  MOVLB  0
5F40:  CALL   1640
....................             glcd_imagen(5); 
5F44:  MOVLW  05
5F46:  MOVLB  5
5F48:  MOVWF  x02
5F4A:  MOVLB  0
5F4C:  CALL   213E
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5F50:  MOVLW  04
5F52:  MOVWF  FEA
5F54:  MOVLW  E2
5F56:  MOVWF  FE9
5F58:  MOVFF  FF2,502
5F5C:  BCF    FF2.7
5F5E:  MOVLW  00
5F60:  CALL   09DA
5F64:  TBLRD*-
5F66:  TBLRD*+
5F68:  MOVF   FF5,W
5F6A:  MOVWF  FEE
5F6C:  IORLW  00
5F6E:  BNZ   5F66
5F70:  MOVLB  5
5F72:  BTFSC  x02.7
5F74:  BSF    FF2.7
5F76:  MOVLW  04
5F78:  MOVWF  x03
5F7A:  MOVLW  E2
5F7C:  MOVWF  x02
5F7E:  CLRF   x04
5F80:  CLRF   x05
5F82:  MOVLW  02
5F84:  MOVWF  x06
5F86:  MOVLW  01
5F88:  MOVWF  x07
5F8A:  MOVLB  0
5F8C:  CALL   1702
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5F90:  MOVLW  04
5F92:  MOVWF  FEA
5F94:  MOVLW  E2
5F96:  MOVWF  FE9
5F98:  MOVFF  FF2,502
5F9C:  BCF    FF2.7
5F9E:  MOVLW  00
5FA0:  CALL   09FC
5FA4:  TBLRD*-
5FA6:  TBLRD*+
5FA8:  MOVF   FF5,W
5FAA:  MOVWF  FEE
5FAC:  IORLW  00
5FAE:  BNZ   5FA6
5FB0:  MOVLB  5
5FB2:  BTFSC  x02.7
5FB4:  BSF    FF2.7
5FB6:  MOVLW  04
5FB8:  MOVWF  x03
5FBA:  MOVLW  E2
5FBC:  MOVWF  x02
5FBE:  CLRF   x04
5FC0:  MOVLW  08
5FC2:  MOVWF  x05
5FC4:  MOVLW  02
5FC6:  MOVWF  x06
5FC8:  MOVLW  01
5FCA:  MOVWF  x07
5FCC:  MOVLB  0
5FCE:  CALL   1702
....................             MuestraTiemposProgramados(); 
5FD2:  CALL   263A
....................             if(Nivel<6) 
5FD6:  MOVLB  4
5FD8:  MOVF   xB6,F
5FDA:  BNZ   5FE6
5FDC:  MOVF   xB5,W
5FDE:  SUBLW  05
5FE0:  BNC   5FE6
....................                { 
....................                   desfoguelento=1; 
5FE2:  BSF    x96.5
....................                } 
....................                else 
5FE4:  BRA    5FE8
....................                { 
....................                   desfoguelento=0; 
5FE6:  BCF    x96.5
....................                } 
....................                EVTrampa=10; 
5FE8:  MOVLW  0A
5FEA:  MOVWF  x9C
....................          } 
....................          else 
5FEC:  BRA    601C
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5FEE:  MOVLW  04
5FF0:  MOVLB  5
5FF2:  MOVWF  x02
5FF4:  MOVLW  AF
5FF6:  MOVWF  x03
5FF8:  MOVLB  0
5FFA:  CALL   106A
5FFE:  MOVLB  5
6000:  DECFSZ x02,F
6002:  BRA    5FF4
6004:  MOVLW  08
6006:  MOVLB  4
6008:  MOVWF  xA3
600A:  MOVLB  5
600C:  CLRF   x03
600E:  MOVLB  0
6010:  CALL   10D4
6014:  MOVLW  01
6016:  MOVLB  4
6018:  MOVWF  xA8
601A:  BSF    x96.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
601C:  BSF    F92.3
601E:  BTFSS  F80.3
6020:  BRA    6050
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6022:  MOVLW  04
6024:  MOVLB  5
6026:  MOVWF  x02
6028:  MOVLW  AF
602A:  MOVWF  x03
602C:  MOVLB  0
602E:  CALL   106A
6032:  MOVLB  5
6034:  DECFSZ x02,F
6036:  BRA    6028
6038:  MOVLW  08
603A:  MOVLB  4
603C:  MOVWF  xA3
603E:  MOVLB  5
6040:  CLRF   x03
6042:  MOVLB  0
6044:  CALL   10D4
6048:  MOVLW  01
604A:  MOVLB  4
604C:  MOVWF  xA8
604E:  BSF    x96.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
6050:  MOVF   xA3,W
6052:  SUBLW  14
6054:  BTFSS  FD8.2
6056:  GOTO   6C7C
....................     
....................    Lectura_Esclavos(); 
605A:  MOVLB  0
605C:  CALL   1F84
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
6060:  MOVLB  4
6062:  BTFSS  x97.1
6064:  BRA    61E6
6066:  DECFSZ x8D,W
6068:  BRA    61E6
606A:  DECFSZ x8E,W
606C:  BRA    61E6
606E:  MOVF   xA9,W
6070:  SUBLW  01
6072:  BTFSS  FD8.0
6074:  BRA    61E6
6076:  MOVF   x92,F
6078:  BTFSS  FD8.2
607A:  BRA    61E6
607C:  MOVF   x93,F
607E:  BTFSS  FD8.2
6080:  BRA    61E6
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
6082:  MOVF   xA9,F
6084:  BNZ   611E
6086:  BTFSC  x97.2
6088:  BRA    611E
....................       { 
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
608A:  MOVLW  0F
608C:  MOVLB  5
608E:  MOVWF  x14
6090:  MOVLW  12
6092:  MOVWF  x15
6094:  MOVLW  1E
6096:  MOVWF  x16
6098:  MOVLW  35
609A:  MOVWF  x17
609C:  CLRF   x18
609E:  MOVLW  01
60A0:  MOVWF  x19
60A2:  MOVLB  0
60A4:  CALL   1640
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
60A8:  MOVLB  5
60AA:  CLRF   x14
60AC:  MOVLW  37
60AE:  MOVWF  x15
60B0:  MOVLW  7F
60B2:  MOVWF  x16
60B4:  MOVLW  3F
60B6:  MOVWF  x17
60B8:  MOVLW  01
60BA:  MOVWF  x18
60BC:  CLRF   x19
60BE:  MOVLB  0
60C0:  CALL   1640
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
60C4:  MOVLW  04
60C6:  MOVWF  FEA
60C8:  MOVLW  E2
60CA:  MOVWF  FE9
60CC:  MOVFF  FF2,502
60D0:  BCF    FF2.7
60D2:  MOVLW  00
60D4:  CALL   09B4
60D8:  TBLRD*-
60DA:  TBLRD*+
60DC:  MOVF   FF5,W
60DE:  MOVWF  FEE
60E0:  IORLW  00
60E2:  BNZ   60DA
60E4:  MOVLB  5
60E6:  BTFSC  x02.7
60E8:  BSF    FF2.7
60EA:  MOVLW  04
60EC:  MOVWF  x03
60EE:  MOVLW  E2
60F0:  MOVWF  x02
60F2:  CLRF   x04
60F4:  MOVLW  37
60F6:  MOVWF  x05
60F8:  MOVLW  02
60FA:  MOVWF  x06
60FC:  MOVLW  01
60FE:  MOVWF  x07
6100:  MOVLB  0
6102:  CALL   1702
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6106:  MOVLB  4
6108:  BSF    x97.2
610A:  BCF    x97.3
610C:  BCF    x97.4
610E:  BCF    x97.5
6110:  BCF    x97.6
6112:  BCF    x97.7
6114:  BCF    x98.0
6116:  BCF    x98.1
....................          EVDesfogue=0;Control=1; 
6118:  CLRF   x9A
611A:  MOVLW  01
611C:  MOVWF  xA1
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
611E:  DECFSZ xA9,W
6120:  BRA    619C
6122:  BTFSC  x97.5
6124:  BRA    619C
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6126:  MOVLB  5
6128:  CLRF   x14
612A:  MOVLW  37
612C:  MOVWF  x15
612E:  MOVLW  7F
6130:  MOVWF  x16
6132:  MOVLW  3F
6134:  MOVWF  x17
6136:  MOVLW  01
6138:  MOVWF  x18
613A:  CLRF   x19
613C:  MOVLB  0
613E:  CALL   1640
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
6142:  MOVLW  04
6144:  MOVWF  FEA
6146:  MOVLW  E2
6148:  MOVWF  FE9
614A:  MOVFF  FF2,502
614E:  BCF    FF2.7
6150:  MOVLW  00
6152:  CALL   0D7E
6156:  TBLRD*-
6158:  TBLRD*+
615A:  MOVF   FF5,W
615C:  MOVWF  FEE
615E:  IORLW  00
6160:  BNZ   6158
6162:  MOVLB  5
6164:  BTFSC  x02.7
6166:  BSF    FF2.7
6168:  MOVLW  04
616A:  MOVWF  x03
616C:  MOVLW  E2
616E:  MOVWF  x02
6170:  CLRF   x04
6172:  MOVLW  37
6174:  MOVWF  x05
6176:  MOVLW  02
6178:  MOVWF  x06
617A:  MOVLW  01
617C:  MOVWF  x07
617E:  MOVLB  0
6180:  CALL   1702
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6184:  MOVLB  4
6186:  BCF    x97.2
6188:  BCF    x97.3
618A:  BCF    x97.4
618C:  BSF    x97.5
618E:  BCF    x97.6
6190:  BCF    x97.7
6192:  BCF    x98.0
6194:  BCF    x98.1
....................          EVDesfogue=0;Control=1; 
6196:  CLRF   x9A
6198:  MOVLW  01
619A:  MOVWF  xA1
....................       } 
....................       if(ADC_Pt100>=100 && Presostato<5) 
619C:  MOVLB  5
619E:  CLRF   x05
61A0:  CLRF   x04
61A2:  MOVLW  48
61A4:  MOVWF  x03
61A6:  MOVLW  85
61A8:  MOVWF  x02
61AA:  MOVFF  4BE,509
61AE:  MOVFF  4BD,508
61B2:  MOVFF  4BC,507
61B6:  MOVFF  4BB,506
61BA:  MOVLB  0
61BC:  CALL   277A
61C0:  BC    61C4
61C2:  BNZ   61D6
61C4:  MOVLB  4
61C6:  MOVF   x91,W
61C8:  SUBLW  04
61CA:  BTFSC  FD8.0
61CC:  BRA    61D2
61CE:  MOVLB  0
61D0:  BRA    61D6
....................          Alarma2=5; 
61D2:  MOVLW  05
61D4:  MOVWF  x94
....................           
....................       Control=1; 
61D6:  MOVLW  01
61D8:  MOVLB  4
61DA:  MOVWF  xA1
....................       Envio_Esclavos(); 
61DC:  MOVLB  0
61DE:  CALL   20DE
....................    } 
....................    else 
61E2:  BRA    66AE
61E4:  MOVLB  4
....................    { 
....................       Control=0; 
61E6:  CLRF   xA1
....................       if(Alarma>0 || Alarma2>0) 
61E8:  MOVF   x92,F
61EA:  BNZ   61F2
61EC:  MOVF   x94,F
61EE:  BTFSC  FD8.2
61F0:  BRA    6358
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
61F2:  DECFSZ x92,W
61F4:  BRA    626C
....................          { 
....................             if(disp_Alarma==0) 
61F6:  BTFSC  x98.3
61F8:  BRA    626C
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
61FA:  MOVLB  5
61FC:  CLRF   x14
61FE:  MOVLW  37
6200:  MOVWF  x15
6202:  MOVLW  7F
6204:  MOVWF  x16
6206:  MOVLW  3F
6208:  MOVWF  x17
620A:  MOVLW  01
620C:  MOVWF  x18
620E:  CLRF   x19
6210:  MOVLB  0
6212:  CALL   1640
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
6216:  MOVLW  04
6218:  MOVWF  FEA
621A:  MOVLW  E2
621C:  MOVWF  FE9
621E:  MOVFF  FF2,502
6222:  BCF    FF2.7
6224:  MOVLW  00
6226:  CALL   0DA6
622A:  TBLRD*-
622C:  TBLRD*+
622E:  MOVF   FF5,W
6230:  MOVWF  FEE
6232:  IORLW  00
6234:  BNZ   622C
6236:  MOVLB  5
6238:  BTFSC  x02.7
623A:  BSF    FF2.7
623C:  MOVLW  04
623E:  MOVWF  x03
6240:  MOVLW  E2
6242:  MOVWF  x02
6244:  CLRF   x04
6246:  MOVLW  37
6248:  MOVWF  x05
624A:  MOVLW  02
624C:  MOVWF  x06
624E:  MOVLW  01
6250:  MOVWF  x07
6252:  MOVLB  0
6254:  CALL   1702
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
6258:  MOVLB  4
625A:  BCF    x97.2
625C:  BCF    x97.3
625E:  BCF    x97.4
6260:  BCF    x97.5
6262:  BCF    x97.6
6264:  BCF    x97.7
6266:  BCF    x98.0
6268:  BCF    x98.1
....................                disp_Alarma=1; 
626A:  BSF    x98.3
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
626C:  MOVF   x92,W
626E:  SUBLW  02
6270:  BNZ   62EC
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
6272:  CLRF   xA9
6274:  CLRF   xAA
....................             if(disp_Alarma==0) 
6276:  BTFSC  x98.3
6278:  BRA    62EC
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
627A:  MOVLB  5
627C:  CLRF   x14
627E:  MOVLW  37
6280:  MOVWF  x15
6282:  MOVLW  7F
6284:  MOVWF  x16
6286:  MOVLW  3F
6288:  MOVWF  x17
628A:  MOVLW  01
628C:  MOVWF  x18
628E:  CLRF   x19
6290:  MOVLB  0
6292:  CALL   1640
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6296:  MOVLW  04
6298:  MOVWF  FEA
629A:  MOVLW  E2
629C:  MOVWF  FE9
629E:  MOVFF  FF2,502
62A2:  BCF    FF2.7
62A4:  MOVLW  00
62A6:  CALL   0DCC
62AA:  TBLRD*-
62AC:  TBLRD*+
62AE:  MOVF   FF5,W
62B0:  MOVWF  FEE
62B2:  IORLW  00
62B4:  BNZ   62AC
62B6:  MOVLB  5
62B8:  BTFSC  x02.7
62BA:  BSF    FF2.7
62BC:  MOVLW  04
62BE:  MOVWF  x03
62C0:  MOVLW  E2
62C2:  MOVWF  x02
62C4:  CLRF   x04
62C6:  MOVLW  37
62C8:  MOVWF  x05
62CA:  MOVLW  02
62CC:  MOVWF  x06
62CE:  MOVLW  01
62D0:  MOVWF  x07
62D2:  MOVLB  0
62D4:  CALL   1702
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
62D8:  MOVLB  4
62DA:  BCF    x97.2
62DC:  BCF    x97.3
62DE:  BCF    x97.4
62E0:  BCF    x97.5
62E2:  BCF    x97.6
62E4:  BCF    x97.7
62E6:  BCF    x98.0
62E8:  BCF    x98.1
....................                disp_Alarma=1; 
62EA:  BSF    x98.3
....................             } 
....................          } 
....................           
....................          if(Alarma2==5) // Alarma de Error por falta de agua, por lo cual no genera Presión. 
62EC:  MOVF   x94,W
62EE:  SUBLW  05
62F0:  BNZ   6356
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
62F2:  CLRF   xA9
62F4:  CLRF   xAA
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
62F6:  MOVLB  5
62F8:  CLRF   x14
62FA:  MOVLW  37
62FC:  MOVWF  x15
62FE:  MOVLW  7F
6300:  MOVWF  x16
6302:  MOVLW  3F
6304:  MOVWF  x17
6306:  MOVLW  01
6308:  MOVWF  x18
630A:  CLRF   x19
630C:  MOVLB  0
630E:  CALL   1640
....................             strcpy(Menus.Letra,"Error:ET03");displayMenu(Menus.Letra,0,55,2,1); 
6312:  MOVLW  04
6314:  MOVWF  FEA
6316:  MOVLW  E2
6318:  MOVWF  FE9
631A:  MOVFF  FF2,502
631E:  BCF    FF2.7
6320:  MOVLW  00
6322:  CALL   0DF2
6326:  TBLRD*-
6328:  TBLRD*+
632A:  MOVF   FF5,W
632C:  MOVWF  FEE
632E:  IORLW  00
6330:  BNZ   6328
6332:  MOVLB  5
6334:  BTFSC  x02.7
6336:  BSF    FF2.7
6338:  MOVLW  04
633A:  MOVWF  x03
633C:  MOVLW  E2
633E:  MOVWF  x02
6340:  CLRF   x04
6342:  MOVLW  37
6344:  MOVWF  x05
6346:  MOVLW  02
6348:  MOVWF  x06
634A:  MOVLW  01
634C:  MOVWF  x07
634E:  MOVLB  0
6350:  CALL   1702
6354:  MOVLB  4
....................          } 
....................       } 
....................       else 
6356:  BRA    66A8
....................       {  
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
6358:  MOVF   xA9,W
635A:  SUBLW  02
635C:  BTFSS  FD8.2
635E:  BRA    6520
6360:  BTFSS  x97.1
6362:  BRA    6520
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
6364:  BTFSS  x96.5
6366:  BRA    6446
....................             { 
....................                if(z==0) 
6368:  BTFSC  x98.2
636A:  BRA    63BC
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
636C:  MOVLB  5
636E:  CLRF   x02
6370:  MOVLW  5A
6372:  MOVWF  x03
6374:  MOVLW  38
6376:  MOVWF  x04
6378:  MOVLB  0
637A:  CALL   27F4
637E:  MOVLW  19
6380:  MOVLB  5
6382:  MOVWF  x14
6384:  MOVLW  12
6386:  MOVWF  x15
6388:  MOVLW  3C
638A:  MOVWF  x16
638C:  MOVLW  1A
638E:  MOVWF  x17
6390:  CLRF   x18
6392:  CLRF   x19
6394:  MOVLB  0
6396:  CALL   1640
639A:  MOVLW  37
639C:  MOVLB  5
639E:  MOVWF  x14
63A0:  MOVLW  12
63A2:  MOVWF  x15
63A4:  MOVLW  44
63A6:  MOVWF  x16
63A8:  MOVLW  35
63AA:  MOVWF  x17
63AC:  CLRF   x18
63AE:  MOVLW  01
63B0:  MOVWF  x19
63B2:  MOVLB  0
63B4:  CALL   1640
63B8:  MOVLB  4
63BA:  BSF    x98.2
....................                } 
....................                if(disp_Despresurizando==0) 
63BC:  BTFSC  x97.6
63BE:  BRA    643E
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
63C0:  MOVLB  5
63C2:  CLRF   x14
63C4:  MOVLW  37
63C6:  MOVWF  x15
63C8:  MOVLW  7F
63CA:  MOVWF  x16
63CC:  MOVLW  3F
63CE:  MOVWF  x17
63D0:  MOVLW  01
63D2:  MOVWF  x18
63D4:  CLRF   x19
63D6:  MOVLB  0
63D8:  CALL   1640
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
63DC:  MOVLW  04
63DE:  MOVWF  FEA
63E0:  MOVLW  E2
63E2:  MOVWF  FE9
63E4:  MOVFF  FF2,502
63E8:  BCF    FF2.7
63EA:  MOVLW  00
63EC:  CALL   0E18
63F0:  TBLRD*-
63F2:  TBLRD*+
63F4:  MOVF   FF5,W
63F6:  MOVWF  FEE
63F8:  IORLW  00
63FA:  BNZ   63F2
63FC:  MOVLB  5
63FE:  BTFSC  x02.7
6400:  BSF    FF2.7
6402:  MOVLW  04
6404:  MOVWF  x03
6406:  MOVLW  E2
6408:  MOVWF  x02
640A:  CLRF   x04
640C:  MOVLW  37
640E:  MOVWF  x05
6410:  MOVLW  02
6412:  MOVWF  x06
6414:  MOVLW  01
6416:  MOVWF  x07
6418:  MOVLB  0
641A:  CALL   1702
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
641E:  MOVLB  4
6420:  BCF    x97.2
6422:  BCF    x97.3
6424:  BCF    x97.4
6426:  BCF    x97.5
6428:  BSF    x97.6
642A:  BCF    x97.7
642C:  BCF    x98.0
642E:  BCF    x98.1
....................                   glcd_imagen(5); 
6430:  MOVLW  05
6432:  MOVLB  5
6434:  MOVWF  x02
6436:  MOVLB  0
6438:  CALL   213E
643C:  MOVLB  4
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
643E:  MOVLW  02
6440:  MOVWF  xAB
6442:  MOVWF  xAA
....................             } 
....................             else 
6444:  BRA    6520
....................             { 
....................                if(z==0) 
6446:  BTFSC  x98.2
6448:  BRA    649A
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
644A:  MOVLB  5
644C:  CLRF   x02
644E:  MOVLW  5A
6450:  MOVWF  x03
6452:  MOVLW  38
6454:  MOVWF  x04
6456:  MOVLB  0
6458:  CALL   27F4
645C:  MOVLW  19
645E:  MOVLB  5
6460:  MOVWF  x14
6462:  MOVLW  12
6464:  MOVWF  x15
6466:  MOVLW  3C
6468:  MOVWF  x16
646A:  MOVLW  1A
646C:  MOVWF  x17
646E:  CLRF   x18
6470:  CLRF   x19
6472:  MOVLB  0
6474:  CALL   1640
6478:  MOVLW  37
647A:  MOVLB  5
647C:  MOVWF  x14
647E:  MOVLW  12
6480:  MOVWF  x15
6482:  MOVLW  44
6484:  MOVWF  x16
6486:  MOVLW  35
6488:  MOVWF  x17
648A:  CLRF   x18
648C:  MOVLW  01
648E:  MOVWF  x19
6490:  MOVLB  0
6492:  CALL   1640
6496:  MOVLB  4
6498:  BSF    x98.2
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
649A:  BTFSC  x97.4
649C:  BRA    651C
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
649E:  MOVLB  5
64A0:  CLRF   x14
64A2:  MOVLW  37
64A4:  MOVWF  x15
64A6:  MOVLW  7F
64A8:  MOVWF  x16
64AA:  MOVLW  3F
64AC:  MOVWF  x17
64AE:  MOVLW  01
64B0:  MOVWF  x18
64B2:  CLRF   x19
64B4:  MOVLB  0
64B6:  CALL   1640
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
64BA:  MOVLW  04
64BC:  MOVWF  FEA
64BE:  MOVLW  E2
64C0:  MOVWF  FE9
64C2:  MOVFF  FF2,502
64C6:  BCF    FF2.7
64C8:  MOVLW  00
64CA:  CALL   0E42
64CE:  TBLRD*-
64D0:  TBLRD*+
64D2:  MOVF   FF5,W
64D4:  MOVWF  FEE
64D6:  IORLW  00
64D8:  BNZ   64D0
64DA:  MOVLB  5
64DC:  BTFSC  x02.7
64DE:  BSF    FF2.7
64E0:  MOVLW  04
64E2:  MOVWF  x03
64E4:  MOVLW  E2
64E6:  MOVWF  x02
64E8:  CLRF   x04
64EA:  MOVLW  37
64EC:  MOVWF  x05
64EE:  MOVLW  02
64F0:  MOVWF  x06
64F2:  MOVLW  01
64F4:  MOVWF  x07
64F6:  MOVLB  0
64F8:  CALL   1702
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
64FC:  MOVLB  4
64FE:  BCF    x97.2
6500:  BCF    x97.3
6502:  BSF    x97.4
6504:  BCF    x97.5
6506:  BCF    x97.6
6508:  BCF    x97.7
650A:  BCF    x98.0
650C:  BCF    x98.1
....................                   glcd_imagen(5); 
650E:  MOVLW  05
6510:  MOVLB  5
6512:  MOVWF  x02
6514:  MOVLB  0
6516:  CALL   213E
651A:  MOVLB  4
....................                } 
....................                Exhaust=1; 
651C:  MOVLW  01
651E:  MOVWF  xAB
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0 && AlarmaAgua==0) 
6520:  MOVF   x8D,F
6522:  BNZ   65A4
6524:  MOVF   x93,F
6526:  BNZ   65A4
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0 && flag_agua==1) 
6528:  BTFSC  x98.0
652A:  BRA    65A4
652C:  MOVF   xA7,F
652E:  BNZ   65A4
6530:  BTFSS  x97.1
6532:  BRA    65A4
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6534:  MOVLB  5
6536:  CLRF   x14
6538:  MOVLW  37
653A:  MOVWF  x15
653C:  MOVLW  7F
653E:  MOVWF  x16
6540:  MOVLW  3F
6542:  MOVWF  x17
6544:  MOVLW  01
6546:  MOVWF  x18
6548:  CLRF   x19
654A:  MOVLB  0
654C:  CALL   1640
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
6550:  MOVLW  04
6552:  MOVWF  FEA
6554:  MOVLW  E2
6556:  MOVWF  FE9
6558:  MOVFF  FF2,502
655C:  BCF    FF2.7
655E:  MOVLW  00
6560:  CALL   0E64
6564:  TBLRD*-
6566:  TBLRD*+
6568:  MOVF   FF5,W
656A:  MOVWF  FEE
656C:  IORLW  00
656E:  BNZ   6566
6570:  MOVLB  5
6572:  BTFSC  x02.7
6574:  BSF    FF2.7
6576:  MOVLW  04
6578:  MOVWF  x03
657A:  MOVLW  E2
657C:  MOVWF  x02
657E:  CLRF   x04
6580:  MOVLW  37
6582:  MOVWF  x05
6584:  MOVLW  02
6586:  MOVWF  x06
6588:  MOVLW  01
658A:  MOVWF  x07
658C:  MOVLB  0
658E:  CALL   1702
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
6592:  MOVLB  4
6594:  BCF    x97.2
6596:  BCF    x97.3
6598:  BCF    x97.4
659A:  BCF    x97.5
659C:  BCF    x97.6
659E:  BCF    x97.7
65A0:  BSF    x98.0
65A2:  BCF    x98.1
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          disp_Alarma=0; 
65A4:  BCF    x98.3
....................          if(NivelTanque==1 && flag_agua==0 ) 
65A6:  DECFSZ x90,W
65A8:  BRA    65B2
65AA:  BTFSC  x97.1
65AC:  BRA    65B2
....................          { 
....................             flag_agua=1; 
65AE:  BSF    x97.1
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
65B0:  BRA    66A8
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && flag_agua==0) 
65B2:  MOVF   xA9,F
65B4:  BNZ   6630
65B6:  BTFSC  x97.3
65B8:  BRA    6630
65BA:  BTFSC  x97.1
65BC:  BRA    6630
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
65BE:  MOVLB  5
65C0:  CLRF   x14
65C2:  MOVLW  37
65C4:  MOVWF  x15
65C6:  MOVLW  7F
65C8:  MOVWF  x16
65CA:  MOVLW  3F
65CC:  MOVWF  x17
65CE:  MOVLW  01
65D0:  MOVWF  x18
65D2:  CLRF   x19
65D4:  MOVLB  0
65D6:  CALL   1640
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
65DA:  MOVLW  04
65DC:  MOVWF  FEA
65DE:  MOVLW  E2
65E0:  MOVWF  FE9
65E2:  MOVFF  FF2,502
65E6:  BCF    FF2.7
65E8:  MOVLW  00
65EA:  CALL   0E8E
65EE:  TBLRD*-
65F0:  TBLRD*+
65F2:  MOVF   FF5,W
65F4:  MOVWF  FEE
65F6:  IORLW  00
65F8:  BNZ   65F0
65FA:  MOVLB  5
65FC:  BTFSC  x02.7
65FE:  BSF    FF2.7
6600:  MOVLW  04
6602:  MOVWF  x03
6604:  MOVLW  E2
6606:  MOVWF  x02
6608:  CLRF   x04
660A:  MOVLW  37
660C:  MOVWF  x05
660E:  MOVLW  02
6610:  MOVWF  x06
6612:  MOVLW  01
6614:  MOVWF  x07
6616:  MOVLB  0
6618:  CALL   1702
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
661C:  MOVLB  4
661E:  BCF    x97.2
6620:  BSF    x97.3
6622:  BCF    x97.4
6624:  BCF    x97.5
6626:  BCF    x97.6
6628:  BCF    x97.7
662A:  BCF    x98.0
662C:  BCF    x98.1
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
662E:  CLRF   xA1
....................             } 
....................              
....................             if(AlarmaAgua==1) 
6630:  DECFSZ x93,W
6632:  BRA    66A8
....................             { 
....................                if(disp_AlarmaAgua==0) 
6634:  BTFSC  x98.4
6636:  BRA    66A8
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6638:  MOVLB  5
663A:  CLRF   x14
663C:  MOVLW  37
663E:  MOVWF  x15
6640:  MOVLW  7F
6642:  MOVWF  x16
6644:  MOVLW  3F
6646:  MOVWF  x17
6648:  MOVLW  01
664A:  MOVWF  x18
664C:  CLRF   x19
664E:  MOVLB  0
6650:  CALL   1640
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
6654:  MOVLW  04
6656:  MOVWF  FEA
6658:  MOVLW  E2
665A:  MOVWF  FE9
665C:  MOVFF  FF2,502
6660:  BCF    FF2.7
6662:  MOVLW  00
6664:  CALL   0EB2
6668:  TBLRD*-
666A:  TBLRD*+
666C:  MOVF   FF5,W
666E:  MOVWF  FEE
6670:  IORLW  00
6672:  BNZ   666A
6674:  MOVLB  5
6676:  BTFSC  x02.7
6678:  BSF    FF2.7
667A:  MOVLW  04
667C:  MOVWF  x03
667E:  MOVLW  E2
6680:  MOVWF  x02
6682:  CLRF   x04
6684:  MOVLW  37
6686:  MOVWF  x05
6688:  MOVLW  02
668A:  MOVWF  x06
668C:  MOVLW  01
668E:  MOVWF  x07
6690:  MOVLB  0
6692:  CALL   1702
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6696:  MOVLB  4
6698:  BCF    x97.2
669A:  BCF    x97.4
669C:  BCF    x97.5
669E:  BCF    x97.6
66A0:  BCF    x97.7
66A2:  BCF    x98.0
66A4:  BCF    x98.1
....................                   disp_AlarmaAgua=1; 
66A6:  BSF    x98.4
....................                } 
....................             } 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
66A8:  MOVLB  0
66AA:  CALL   20DE
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
66AE:  MOVLB  4
66B0:  BTFSS  x96.6
66B2:  BRA    698A
....................    {                       
....................       Lectura=0; 
66B4:  BCF    x96.6
....................       displayTiempo(Presostato,31,40,2,1); 
66B6:  MOVFF  491,503
66BA:  MOVLW  1F
66BC:  MOVLB  5
66BE:  MOVWF  x04
66C0:  MOVLW  28
66C2:  MOVWF  x05
66C4:  MOVLW  02
66C6:  MOVWF  x06
66C8:  MOVLW  01
66CA:  MOVWF  x07
66CC:  MOVLB  0
66CE:  CALL   24EA
....................       glcd_rect(51, 40, 62, 48, YES, OFF);glcd_text57(52, 40, kpa, 1, ON); 
66D2:  MOVLW  33
66D4:  MOVLB  5
66D6:  MOVWF  x14
66D8:  MOVLW  28
66DA:  MOVWF  x15
66DC:  MOVLW  3E
66DE:  MOVWF  x16
66E0:  MOVLW  30
66E2:  MOVWF  x17
66E4:  MOVLW  01
66E6:  MOVWF  x18
66E8:  CLRF   x19
66EA:  MOVLB  0
66EC:  CALL   1640
66F0:  MOVLW  34
66F2:  MOVLB  5
66F4:  MOVWF  x13
66F6:  MOVLW  28
66F8:  MOVWF  x14
66FA:  MOVLW  04
66FC:  MOVWF  x16
66FE:  MOVLW  89
6700:  MOVWF  x15
6702:  MOVLW  01
6704:  MOVWF  x17
6706:  MOVWF  x18
6708:  MOVLB  0
670A:  CALL   134A
....................       displayT(ADC_Pt100,69,20,2); 
670E:  MOVFF  4BE,505
6712:  MOVFF  4BD,504
6716:  MOVFF  4BC,503
671A:  MOVFF  4BB,502
671E:  MOVLW  45
6720:  MOVLB  5
6722:  MOVWF  x06
6724:  MOVLW  14
6726:  MOVWF  x07
6728:  MOVLW  02
672A:  MOVWF  x08
672C:  MOVLB  0
672E:  GOTO   2B88
....................       glcd_circle(95,40,2,NO,ON); 
6732:  MOVLW  5F
6734:  MOVLB  5
6736:  MOVWF  x02
6738:  MOVLW  28
673A:  MOVWF  x03
673C:  MOVLW  02
673E:  MOVWF  x04
6740:  CLRF   x05
6742:  MOVLW  01
6744:  MOVWF  x06
6746:  MOVLB  0
6748:  CALL   223A
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
674C:  MOVLW  04
674E:  MOVWF  FEA
6750:  MOVLW  E2
6752:  MOVWF  FE9
6754:  MOVFF  FF2,502
6758:  BCF    FF2.7
675A:  MOVLW  00
675C:  CALL   0A1E
6760:  TBLRD*-
6762:  TBLRD*+
6764:  MOVF   FF5,W
6766:  MOVWF  FEE
6768:  IORLW  00
676A:  BNZ   6762
676C:  MOVLB  5
676E:  BTFSC  x02.7
6770:  BSF    FF2.7
6772:  MOVLW  04
6774:  MOVWF  x03
6776:  MOVLW  E2
6778:  MOVWF  x02
677A:  MOVLW  66
677C:  MOVWF  x04
677E:  MOVLW  28
6780:  MOVWF  x05
6782:  MOVLW  02
6784:  MOVWF  x06
6786:  MOVWF  x07
6788:  MOVLB  0
678A:  CALL   1702
....................       displayTiempo(Setpoint,5,20,2,1); 
678E:  MOVFF  4A6,503
6792:  MOVLW  05
6794:  MOVLB  5
6796:  MOVWF  x04
6798:  MOVLW  14
679A:  MOVWF  x05
679C:  MOVLW  02
679E:  MOVWF  x06
67A0:  MOVLW  01
67A2:  MOVWF  x07
67A4:  MOVLB  0
67A6:  CALL   24EA
....................  
....................       glcd_imagen(5); 
67AA:  MOVLW  05
67AC:  MOVLB  5
67AE:  MOVWF  x02
67B0:  MOVLB  0
67B2:  CALL   213E
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
67B6:  MOVLW  04
67B8:  MOVWF  FEA
67BA:  MOVLW  E2
67BC:  MOVWF  FE9
67BE:  MOVFF  FF2,502
67C2:  BCF    FF2.7
67C4:  MOVLW  00
67C6:  CALL   09DA
67CA:  TBLRD*-
67CC:  TBLRD*+
67CE:  MOVF   FF5,W
67D0:  MOVWF  FEE
67D2:  IORLW  00
67D4:  BNZ   67CC
67D6:  MOVLB  5
67D8:  BTFSC  x02.7
67DA:  BSF    FF2.7
67DC:  MOVLW  04
67DE:  MOVWF  x03
67E0:  MOVLW  E2
67E2:  MOVWF  x02
67E4:  CLRF   x04
67E6:  CLRF   x05
67E8:  MOVLW  02
67EA:  MOVWF  x06
67EC:  MOVLW  01
67EE:  MOVWF  x07
67F0:  MOVLB  0
67F2:  CALL   1702
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
67F6:  MOVLW  04
67F8:  MOVWF  FEA
67FA:  MOVLW  E2
67FC:  MOVWF  FE9
67FE:  MOVFF  FF2,502
6802:  BCF    FF2.7
6804:  MOVLW  00
6806:  CALL   09FC
680A:  TBLRD*-
680C:  TBLRD*+
680E:  MOVF   FF5,W
6810:  MOVWF  FEE
6812:  IORLW  00
6814:  BNZ   680C
6816:  MOVLB  5
6818:  BTFSC  x02.7
681A:  BSF    FF2.7
681C:  MOVLW  04
681E:  MOVWF  x03
6820:  MOVLW  E2
6822:  MOVWF  x02
6824:  CLRF   x04
6826:  MOVLW  08
6828:  MOVWF  x05
682A:  MOVLW  02
682C:  MOVWF  x06
682E:  MOVLW  01
6830:  MOVWF  x07
6832:  MOVLB  0
6834:  CALL   1702
....................       MuestraTiemposProgramados(); 
6838:  CALL   263A
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
683C:  MOVFF  4C2,503
6840:  MOVLW  50
6842:  MOVLB  5
6844:  MOVWF  x04
6846:  CLRF   x05
6848:  CLRF   x06
684A:  MOVLW  01
684C:  MOVWF  x07
684E:  MOVLB  0
6850:  CALL   24EA
6854:  MOVFF  4C1,503
6858:  MOVLW  56
685A:  MOVLB  5
685C:  MOVWF  x04
685E:  CLRF   x05
6860:  CLRF   x06
6862:  MOVLW  01
6864:  MOVWF  x07
6866:  MOVLB  0
6868:  CALL   24EA
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
686C:  MOVLW  04
686E:  MOVWF  FEA
6870:  MOVLW  E2
6872:  MOVWF  FE9
6874:  MOVFF  FF2,502
6878:  BCF    FF2.7
687A:  MOVLW  00
687C:  CALL   06BE
6880:  TBLRD*-
6882:  TBLRD*+
6884:  MOVF   FF5,W
6886:  MOVWF  FEE
6888:  IORLW  00
688A:  BNZ   6882
688C:  MOVLB  5
688E:  BTFSC  x02.7
6890:  BSF    FF2.7
6892:  MOVLW  04
6894:  MOVWF  x03
6896:  MOVLW  E2
6898:  MOVWF  x02
689A:  MOVLW  5C
689C:  MOVWF  x04
689E:  CLRF   x05
68A0:  MOVLW  02
68A2:  MOVWF  x06
68A4:  MOVLW  01
68A6:  MOVWF  x07
68A8:  MOVLB  0
68AA:  CALL   1702
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
68AE:  MOVFF  4C0,503
68B2:  MOVLW  62
68B4:  MOVLB  5
68B6:  MOVWF  x04
68B8:  CLRF   x05
68BA:  CLRF   x06
68BC:  MOVLW  01
68BE:  MOVWF  x07
68C0:  MOVLB  0
68C2:  CALL   24EA
68C6:  MOVFF  4BF,503
68CA:  MOVLW  68
68CC:  MOVLB  5
68CE:  MOVWF  x04
68D0:  CLRF   x05
68D2:  CLRF   x06
68D4:  MOVLW  01
68D6:  MOVWF  x07
68D8:  MOVLB  0
68DA:  CALL   24EA
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
68DE:  MOVFF  4CA,503
68E2:  MOVLW  50
68E4:  MOVLB  5
68E6:  MOVWF  x04
68E8:  MOVLW  08
68EA:  MOVWF  x05
68EC:  CLRF   x06
68EE:  MOVLW  01
68F0:  MOVWF  x07
68F2:  MOVLB  0
68F4:  CALL   24EA
68F8:  MOVFF  4C9,503
68FC:  MOVLW  56
68FE:  MOVLB  5
6900:  MOVWF  x04
6902:  MOVLW  08
6904:  MOVWF  x05
6906:  CLRF   x06
6908:  MOVLW  01
690A:  MOVWF  x07
690C:  MOVLB  0
690E:  CALL   24EA
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
6912:  MOVLW  04
6914:  MOVWF  FEA
6916:  MOVLW  E2
6918:  MOVWF  FE9
691A:  MOVFF  FF2,502
691E:  BCF    FF2.7
6920:  MOVLW  00
6922:  CALL   06BE
6926:  TBLRD*-
6928:  TBLRD*+
692A:  MOVF   FF5,W
692C:  MOVWF  FEE
692E:  IORLW  00
6930:  BNZ   6928
6932:  MOVLB  5
6934:  BTFSC  x02.7
6936:  BSF    FF2.7
6938:  MOVLW  04
693A:  MOVWF  x03
693C:  MOVLW  E2
693E:  MOVWF  x02
6940:  MOVLW  5C
6942:  MOVWF  x04
6944:  MOVLW  08
6946:  MOVWF  x05
6948:  MOVLW  02
694A:  MOVWF  x06
694C:  MOVLW  01
694E:  MOVWF  x07
6950:  MOVLB  0
6952:  CALL   1702
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
6956:  MOVFF  4C8,503
695A:  MOVLW  62
695C:  MOVLB  5
695E:  MOVWF  x04
6960:  MOVLW  08
6962:  MOVWF  x05
6964:  CLRF   x06
6966:  MOVLW  01
6968:  MOVWF  x07
696A:  MOVLB  0
696C:  CALL   24EA
6970:  MOVFF  4C7,503
6974:  MOVLW  68
6976:  MOVLB  5
6978:  MOVWF  x04
697A:  MOVLW  08
697C:  MOVWF  x05
697E:  CLRF   x06
6980:  MOVLW  01
6982:  MOVWF  x07
6984:  MOVLB  0
6986:  CALL   24EA
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint-1.0))// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
698A:  MOVLB  5
698C:  CLRF   x03
698E:  MOVFF  4A6,502
6992:  MOVLB  0
6994:  CALL   1AC0
6998:  MOVFF  00,502
699C:  MOVFF  01,503
69A0:  MOVFF  02,504
69A4:  MOVFF  03,505
69A8:  BSF    FD8.1
69AA:  MOVFF  03,509
69AE:  MOVFF  02,508
69B2:  MOVFF  01,507
69B6:  MOVFF  00,506
69BA:  MOVLB  5
69BC:  CLRF   x0D
69BE:  CLRF   x0C
69C0:  CLRF   x0B
69C2:  MOVLW  7F
69C4:  MOVWF  x0A
69C6:  MOVLB  0
69C8:  CALL   1C56
69CC:  MOVFF  03,505
69D0:  MOVFF  02,504
69D4:  MOVFF  01,503
69D8:  MOVFF  00,502
69DC:  MOVFF  4BE,509
69E0:  MOVFF  4BD,508
69E4:  MOVFF  4BC,507
69E8:  MOVFF  4BB,506
69EC:  CALL   277A
69F0:  BC    69F4
69F2:  BNZ   6AC6
....................    { 
....................       if(ciclosecado==1) 
69F4:  MOVLB  4
69F6:  DECFSZ x95,W
69F8:  BRA    6A62
....................       { 
....................          if(est==0) 
69FA:  BTFSC  x97.0
69FC:  BRA    6A60
....................          { 
....................             tiempo_esterilizacion=2; 
69FE:  MOVLW  02
6A00:  MOVWF  xA9
....................             Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
6A02:  MOVLB  5
6A04:  CLRF   x02
6A06:  MOVLW  5A
6A08:  MOVWF  x03
6A0A:  MOVLW  38
6A0C:  MOVWF  x04
6A0E:  MOVLB  0
6A10:  CALL   27F4
6A14:  MOVLW  0F
6A16:  MOVLB  5
6A18:  MOVWF  x14
6A1A:  MOVLW  12
6A1C:  MOVWF  x15
6A1E:  MOVLW  1E
6A20:  MOVWF  x16
6A22:  MOVLW  35
6A24:  MOVWF  x17
6A26:  CLRF   x18
6A28:  CLRF   x19
6A2A:  MOVLB  0
6A2C:  CALL   1640
6A30:  MOVLW  19
6A32:  MOVLB  5
6A34:  MOVWF  x14
6A36:  MOVLW  12
6A38:  MOVWF  x15
6A3A:  MOVLW  3C
6A3C:  MOVWF  x16
6A3E:  MOVLW  1A
6A40:  MOVWF  x17
6A42:  CLRF   x18
6A44:  MOVLW  01
6A46:  MOVWF  x19
6A48:  MOVLB  0
6A4A:  CALL   1640
6A4E:  MOVLB  4
6A50:  BSF    x97.0
....................             glcd_imagen(5); 
6A52:  MOVLW  05
6A54:  MOVLB  5
6A56:  MOVWF  x02
6A58:  MOVLB  0
6A5A:  CALL   213E
6A5E:  MOVLB  4
....................          } 
....................       } 
....................       else 
6A60:  BRA    6AC8
....................       { 
....................          if(est==0) 
6A62:  BTFSC  x97.0
6A64:  BRA    6AC8
....................          { 
....................             tiempo_esterilizacion=1; 
6A66:  MOVLW  01
6A68:  MOVWF  xA9
....................             Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
6A6A:  MOVLB  5
6A6C:  CLRF   x02
6A6E:  MOVLW  5A
6A70:  MOVWF  x03
6A72:  MOVLW  38
6A74:  MOVWF  x04
6A76:  MOVLB  0
6A78:  CALL   27F4
6A7C:  MOVLW  0F
6A7E:  MOVLB  5
6A80:  MOVWF  x14
6A82:  MOVLW  12
6A84:  MOVWF  x15
6A86:  MOVLW  1E
6A88:  MOVWF  x16
6A8A:  MOVLW  35
6A8C:  MOVWF  x17
6A8E:  CLRF   x18
6A90:  CLRF   x19
6A92:  MOVLB  0
6A94:  CALL   1640
6A98:  MOVLW  19
6A9A:  MOVLB  5
6A9C:  MOVWF  x14
6A9E:  MOVLW  12
6AA0:  MOVWF  x15
6AA2:  MOVLW  3C
6AA4:  MOVWF  x16
6AA6:  MOVLW  1A
6AA8:  MOVWF  x17
6AAA:  CLRF   x18
6AAC:  MOVLW  01
6AAE:  MOVWF  x19
6AB0:  MOVLB  0
6AB2:  CALL   1640
6AB6:  MOVLB  4
6AB8:  BSF    x97.0
....................             glcd_imagen(5); 
6ABA:  MOVLW  05
6ABC:  MOVLB  5
6ABE:  MOVWF  x02
6AC0:  MOVLB  0
6AC2:  CALL   213E
6AC6:  MOVLB  4
....................          } 
....................       } 
....................    }   
....................     
....................    /*if(ADC_Pt100<((float)Setpoint-2.0)) 
....................    { 
....................       glcd_rect(15, 18, 30, 53, NO, ON); 
....................       if(est==1) 
....................       {glcd_rect(25, 18, 60, 26, NO, OFF);} 
....................       est=0;tiempo_esterilizacion=0; 
....................    }*/ 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
6AC8:  DECFSZ xAB,W
6ACA:  BRA    6B10
6ACC:  MOVF   xA9,W
6ACE:  SUBLW  02
6AD0:  BNZ   6B10
....................    { 
....................       if(ciclosecado==0) 
6AD2:  MOVF   x95,F
6AD4:  BNZ   6AFA
....................       { 
....................          // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................          Control=0; 
6AD6:  CLRF   xA1
....................          if(Presostato<20) 
6AD8:  MOVF   x91,W
6ADA:  SUBLW  13
6ADC:  BNC   6AE2
....................          { 
....................             EVDesfogue=3; 
6ADE:  MOVLW  03
6AE0:  MOVWF  x9A
....................          } 
....................          if(Presostato<2) 
6AE2:  MOVF   x91,W
6AE4:  SUBLW  01
6AE6:  BNC   6AF4
....................          { 
....................             tiempo_secado=1; 
6AE8:  MOVLW  01
6AEA:  MOVWF  xAA
....................             Control=0;EVDesfogue=3; 
6AEC:  CLRF   xA1
6AEE:  MOVLW  03
6AF0:  MOVWF  x9A
....................          } 
....................          else 
6AF2:  BRA    6AF8
....................          { 
....................             EVDesfogue=1; 
6AF4:  MOVLW  01
6AF6:  MOVWF  x9A
....................          } 
....................       } 
....................       else 
6AF8:  BRA    6B10
....................       { 
....................          Control=0; 
6AFA:  CLRF   xA1
....................          if(Presostato<20) 
6AFC:  MOVF   x91,W
6AFE:  SUBLW  13
6B00:  BNC   6B0C
....................          { 
....................             EVDesfogue=3; 
6B02:  MOVLW  03
6B04:  MOVWF  x9A
....................             tiempo_secado=1; 
6B06:  MOVLW  01
6B08:  MOVWF  xAA
....................          } 
....................          else 
6B0A:  BRA    6B10
....................          { 
....................             EVDesfogue=1; 
6B0C:  MOVLW  01
6B0E:  MOVWF  x9A
....................          } 
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
6B10:  MOVF   xAB,W
6B12:  SUBLW  02
6B14:  BNZ   6B44
6B16:  MOVF   xA9,W
6B18:  SUBLW  02
6B1A:  BNZ   6B44
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
6B1C:  CLRF   xA1
....................       if(Presostato<20) 
6B1E:  MOVF   x91,W
6B20:  SUBLW  13
6B22:  BNC   6B2A
....................       { 
....................          EVDesfogue=3; 
6B24:  MOVLW  03
6B26:  MOVWF  x9A
....................       } 
....................       else 
6B28:  BRA    6B2E
....................       { 
....................          EVDesfogue=2; 
6B2A:  MOVLW  02
6B2C:  MOVWF  x9A
....................       } 
....................       if(Presostato<2) 
6B2E:  MOVF   x91,W
6B30:  SUBLW  01
6B32:  BNC   6B44
....................       { 
....................          tiempo_esterilizacion=3; 
6B34:  MOVLW  03
6B36:  MOVWF  xA9
....................          tiempo_secado=2; 
6B38:  MOVLW  02
6B3A:  MOVWF  xAA
....................          fin_ciclo=1; 
6B3C:  MOVLW  01
6B3E:  MOVWF  xA7
....................          EVDesfogue=3; 
6B40:  MOVLW  03
6B42:  MOVWF  x9A
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]==Testerilizacionp[0])&&(Testerilizacion[1]==Testerilizacionp[1])&&(Testerilizacion[2]==Testerilizacionp[2])&&(Testerilizacion[3]==Testerilizacionp[3]) && tiempo_esterilizacion==1) 
6B44:  MOVF   xC3,W
6B46:  SUBWF  xBF,W
6B48:  BNZ   6B64
6B4A:  MOVF   xC4,W
6B4C:  SUBWF  xC0,W
6B4E:  BNZ   6B64
6B50:  MOVF   xC5,W
6B52:  SUBWF  xC1,W
6B54:  BNZ   6B64
6B56:  MOVF   xC6,W
6B58:  SUBWF  xC2,W
6B5A:  BNZ   6B64
6B5C:  DECFSZ xA9,W
6B5E:  BRA    6B64
....................    { 
....................       tiempo_esterilizacion=2; 
6B60:  MOVLW  02
6B62:  MOVWF  xA9
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
6B64:  MOVF   xCB,W
6B66:  XORLW  80
6B68:  MOVWF  00
6B6A:  MOVF   xC7,W
6B6C:  XORLW  80
6B6E:  SUBWF  00,W
6B70:  BZ    6B74
6B72:  BC    6BB4
6B74:  MOVF   xCC,W
6B76:  XORLW  80
6B78:  MOVWF  00
6B7A:  MOVF   xC8,W
6B7C:  XORLW  80
6B7E:  SUBWF  00,W
6B80:  BZ    6B84
6B82:  BC    6BB4
6B84:  MOVF   xCD,W
6B86:  XORLW  80
6B88:  MOVWF  00
6B8A:  MOVF   xC9,W
6B8C:  XORLW  80
6B8E:  SUBWF  00,W
6B90:  BZ    6B94
6B92:  BC    6BB4
6B94:  MOVF   xCE,W
6B96:  XORLW  80
6B98:  MOVWF  00
6B9A:  MOVF   xCA,W
6B9C:  XORLW  80
6B9E:  SUBWF  00,W
6BA0:  BZ    6BA4
6BA2:  BC    6BB4
6BA4:  DECFSZ xAA,W
6BA6:  BRA    6BB4
....................    { 
....................       tiempo_esterilizacion=3; 
6BA8:  MOVLW  03
6BAA:  MOVWF  xA9
....................       tiempo_secado=2; 
6BAC:  MOVLW  02
6BAE:  MOVWF  xAA
....................       fin_ciclo=1; 
6BB0:  MOVLW  01
6BB2:  MOVWF  xA7
....................    } 
....................     
....................    if(fin_ciclo==1) 
6BB4:  DECFSZ xA7,W
6BB6:  BRA    6C32
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
6BB8:  CLRF   xA1
6BBA:  MOVLW  03
6BBC:  MOVWF  x9A
....................       if(disp_Fin==0) 
6BBE:  BTFSC  x98.1
6BC0:  BRA    6C32
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6BC2:  MOVLB  5
6BC4:  CLRF   x14
6BC6:  MOVLW  37
6BC8:  MOVWF  x15
6BCA:  MOVLW  7F
6BCC:  MOVWF  x16
6BCE:  MOVLW  3F
6BD0:  MOVWF  x17
6BD2:  MOVLW  01
6BD4:  MOVWF  x18
6BD6:  CLRF   x19
6BD8:  MOVLB  0
6BDA:  CALL   1640
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
6BDE:  MOVLW  04
6BE0:  MOVWF  FEA
6BE2:  MOVLW  E2
6BE4:  MOVWF  FE9
6BE6:  MOVFF  FF2,502
6BEA:  BCF    FF2.7
6BEC:  MOVLW  00
6BEE:  CALL   0ED8
6BF2:  TBLRD*-
6BF4:  TBLRD*+
6BF6:  MOVF   FF5,W
6BF8:  MOVWF  FEE
6BFA:  IORLW  00
6BFC:  BNZ   6BF4
6BFE:  MOVLB  5
6C00:  BTFSC  x02.7
6C02:  BSF    FF2.7
6C04:  MOVLW  04
6C06:  MOVWF  x03
6C08:  MOVLW  E2
6C0A:  MOVWF  x02
6C0C:  CLRF   x04
6C0E:  MOVLW  37
6C10:  MOVWF  x05
6C12:  MOVLW  02
6C14:  MOVWF  x06
6C16:  MOVLW  01
6C18:  MOVWF  x07
6C1A:  MOVLB  0
6C1C:  CALL   1702
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
6C20:  MOVLB  4
6C22:  BCF    x97.2
6C24:  BCF    x97.3
6C26:  BSF    x97.4
6C28:  BCF    x97.5
6C2A:  BSF    x97.6
6C2C:  BCF    x97.7
6C2E:  BCF    x98.0
6C30:  BSF    x98.1
....................       }    
....................        
....................    } 
....................    if(RIGHT) 
6C32:  BSF    F92.2
6C34:  BTFSS  F80.2
6C36:  BRA    6C70
....................    { 
....................       glcd_init(ON); 
6C38:  MOVLW  01
6C3A:  MOVLB  5
6C3C:  MOVWF  x02
6C3E:  MOVLB  0
6C40:  CALL   11E6
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6C44:  MOVLB  4
6C46:  BCF    x97.2
6C48:  BCF    x97.3
6C4A:  BCF    x97.4
6C4C:  BCF    x97.5
6C4E:  BCF    x97.6
6C50:  BCF    x97.7
6C52:  BCF    x98.0
6C54:  BCF    x98.1
....................       disp_Alarma=0; 
6C56:  BCF    x98.3
....................       delay_ms(1000); 
6C58:  MOVLW  04
6C5A:  MOVLB  5
6C5C:  MOVWF  x02
6C5E:  MOVLW  FA
6C60:  MOVWF  x03
6C62:  MOVLB  0
6C64:  CALL   106A
6C68:  MOVLB  5
6C6A:  DECFSZ x02,F
6C6C:  BRA    6C5E
6C6E:  MOVLB  4
....................    } 
....................    EVAgua=10; 
6C70:  MOVLW  0A
6C72:  MOVWF  x9B
....................    Envio_Esclavos(); 
6C74:  MOVLB  0
6C76:  CALL   20DE
6C7A:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6C7C:  MOVF   xA3,W
6C7E:  SUBLW  64
6C80:  BTFSS  FD8.2
6C82:  BRA    6D7E
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
6C84:  MOVFF  4D7,503
6C88:  MOVLB  5
6C8A:  CLRF   x04
6C8C:  MOVLW  0A
6C8E:  MOVWF  x05
6C90:  MOVLW  02
6C92:  MOVWF  x06
6C94:  MOVLW  01
6C96:  MOVWF  x07
6C98:  MOVLB  0
6C9A:  CALL   24EA
....................    displayTiempo(datoRx[1],0,20,2,1); 
6C9E:  MOVFF  4D8,503
6CA2:  MOVLB  5
6CA4:  CLRF   x04
6CA6:  MOVLW  14
6CA8:  MOVWF  x05
6CAA:  MOVLW  02
6CAC:  MOVWF  x06
6CAE:  MOVLW  01
6CB0:  MOVWF  x07
6CB2:  MOVLB  0
6CB4:  CALL   24EA
....................    displayTiempo(datoRx[2],0,30,2,1); 
6CB8:  MOVFF  4D9,503
6CBC:  MOVLB  5
6CBE:  CLRF   x04
6CC0:  MOVLW  1E
6CC2:  MOVWF  x05
6CC4:  MOVLW  02
6CC6:  MOVWF  x06
6CC8:  MOVLW  01
6CCA:  MOVWF  x07
6CCC:  MOVLB  0
6CCE:  CALL   24EA
....................    displayTiempo(datoRx[3],0,40,2,1); 
6CD2:  MOVFF  4DA,503
6CD6:  MOVLB  5
6CD8:  CLRF   x04
6CDA:  MOVLW  28
6CDC:  MOVWF  x05
6CDE:  MOVLW  02
6CE0:  MOVWF  x06
6CE2:  MOVLW  01
6CE4:  MOVWF  x07
6CE6:  MOVLB  0
6CE8:  CALL   24EA
....................    displayTiempo(Opcion,0,50,2,1); 
6CEC:  MOVFF  4A8,503
6CF0:  MOVLB  5
6CF2:  CLRF   x04
6CF4:  MOVLW  32
6CF6:  MOVWF  x05
6CF8:  MOVLW  02
6CFA:  MOVWF  x06
6CFC:  MOVLW  01
6CFE:  MOVWF  x07
6D00:  MOVLB  0
6D02:  CALL   24EA
....................    Lectura_Esclavos(); 
6D06:  CALL   1F84
....................    Opcion++; 
6D0A:  MOVLB  4
6D0C:  INCF   xA8,F
....................    displayTiempo(Puerta,50,10,2,1); 
6D0E:  MOVFF  48D,503
6D12:  MOVLW  32
6D14:  MOVLB  5
6D16:  MOVWF  x04
6D18:  MOVLW  0A
6D1A:  MOVWF  x05
6D1C:  MOVLW  02
6D1E:  MOVWF  x06
6D20:  MOVLW  01
6D22:  MOVWF  x07
6D24:  MOVLB  0
6D26:  CALL   24EA
....................    displayTiempo(Parada,50,20,2,1); 
6D2A:  MOVFF  48E,503
6D2E:  MOVLW  32
6D30:  MOVLB  5
6D32:  MOVWF  x04
6D34:  MOVLW  14
6D36:  MOVWF  x05
6D38:  MOVLW  02
6D3A:  MOVWF  x06
6D3C:  MOVLW  01
6D3E:  MOVWF  x07
6D40:  MOVLB  0
6D42:  CALL   24EA
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6D46:  MOVFF  4BE,505
6D4A:  MOVFF  4BD,504
6D4E:  MOVFF  4BC,503
6D52:  MOVFF  4BB,502
6D56:  GOTO   2C02
6D5A:  MOVFF  01,502
6D5E:  MOVFF  01,503
6D62:  MOVLW  32
6D64:  MOVLB  5
6D66:  MOVWF  x04
6D68:  MOVLW  1E
6D6A:  MOVWF  x05
6D6C:  MOVLW  02
6D6E:  MOVWF  x06
6D70:  MOVLW  01
6D72:  MOVWF  x07
6D74:  MOVLB  0
6D76:  CALL   24EA
....................     
....................  } 
6D7A:  MOVLB  4
6D7C:  BRA    6C7C
....................        
....................       while(Parada==0) 
....................       { 
6D7E:  MOVF   x8E,F
6D80:  BNZ   6E3A
....................          Lectura_Esclavos(); 
6D82:  MOVLB  0
6D84:  CALL   1F84
....................          delay_ms(100); 
6D88:  MOVLW  64
6D8A:  MOVLB  5
6D8C:  MOVWF  x03
6D8E:  MOVLB  0
6D90:  CALL   106A
....................          if(disp_Stop==0) 
6D94:  MOVLB  4
6D96:  BTFSC  x97.7
6D98:  BRA    6E38
....................          { 
....................             glcd_fillScreen(OFF);  
6D9A:  MOVLB  5
6D9C:  CLRF   x03
6D9E:  MOVLB  0
6DA0:  CALL   10D4
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6DA4:  MOVLW  04
6DA6:  MOVWF  FEA
6DA8:  MOVLW  E2
6DAA:  MOVWF  FE9
6DAC:  MOVFF  FF2,502
6DB0:  BCF    FF2.7
6DB2:  MOVLW  00
6DB4:  CALL   0F04
6DB8:  TBLRD*-
6DBA:  TBLRD*+
6DBC:  MOVF   FF5,W
6DBE:  MOVWF  FEE
6DC0:  IORLW  00
6DC2:  BNZ   6DBA
6DC4:  MOVLB  5
6DC6:  BTFSC  x02.7
6DC8:  BSF    FF2.7
6DCA:  MOVLW  04
6DCC:  MOVWF  x03
6DCE:  MOVLW  E2
6DD0:  MOVWF  x02
6DD2:  CLRF   x04
6DD4:  MOVLW  0A
6DD6:  MOVWF  x05
6DD8:  CLRF   x06
6DDA:  MOVLW  02
6DDC:  MOVWF  x07
6DDE:  MOVLB  0
6DE0:  CALL   1702
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6DE4:  MOVLW  04
6DE6:  MOVWF  FEA
6DE8:  MOVLW  E2
6DEA:  MOVWF  FE9
6DEC:  MOVFF  FF2,502
6DF0:  BCF    FF2.7
6DF2:  MOVLW  00
6DF4:  CALL   0F2A
6DF8:  TBLRD*-
6DFA:  TBLRD*+
6DFC:  MOVF   FF5,W
6DFE:  MOVWF  FEE
6E00:  IORLW  00
6E02:  BNZ   6DFA
6E04:  MOVLB  5
6E06:  BTFSC  x02.7
6E08:  BSF    FF2.7
6E0A:  MOVLW  04
6E0C:  MOVWF  x03
6E0E:  MOVLW  E2
6E10:  MOVWF  x02
6E12:  CLRF   x04
6E14:  MOVLW  1E
6E16:  MOVWF  x05
6E18:  CLRF   x06
6E1A:  MOVLW  02
6E1C:  MOVWF  x07
6E1E:  MOVLB  0
6E20:  CALL   1702
6E24:  MOVLB  4
6E26:  BSF    x96.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6E28:  BCF    x97.2
6E2A:  BCF    x97.3
6E2C:  BCF    x97.4
6E2E:  BCF    x97.5
6E30:  BCF    x97.6
6E32:  BSF    x97.7
6E34:  BCF    x98.0
6E36:  BCF    x98.1
....................          } 
....................       }    
6E38:  BRA    6D7E
....................       if(Parada==1) 
6E3A:  DECFSZ x8E,W
6E3C:  BRA    6EE6
....................       { 
....................          while(emergency==1) 
....................          { 
6E3E:  BTFSS  x96.3
6E40:  BRA    6EE6
....................             Lectura_Esclavos(); 
6E42:  MOVLB  0
6E44:  CALL   1F84
....................             if(disp_Stop==1) 
6E48:  MOVLB  4
6E4A:  BTFSS  x97.7
6E4C:  BRA    6E5C
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6E4E:  MOVLB  5
6E50:  CLRF   x03
6E52:  MOVLB  0
6E54:  CALL   10D4
6E58:  MOVLB  4
6E5A:  BCF    x97.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6E5C:  MOVLW  04
6E5E:  MOVWF  FEA
6E60:  MOVLW  E2
6E62:  MOVWF  FE9
6E64:  MOVFF  FF2,502
6E68:  BCF    FF2.7
6E6A:  MOVLW  00
6E6C:  MOVLB  0
6E6E:  CALL   0F50
6E72:  TBLRD*-
6E74:  TBLRD*+
6E76:  MOVF   FF5,W
6E78:  MOVWF  FEE
6E7A:  IORLW  00
6E7C:  BNZ   6E74
6E7E:  MOVLB  5
6E80:  BTFSC  x02.7
6E82:  BSF    FF2.7
6E84:  MOVLW  04
6E86:  MOVWF  x03
6E88:  MOVLW  E2
6E8A:  MOVWF  x02
6E8C:  CLRF   x04
6E8E:  MOVLW  0A
6E90:  MOVWF  x05
6E92:  CLRF   x06
6E94:  MOVLW  02
6E96:  MOVWF  x07
6E98:  MOVLB  0
6E9A:  CALL   1702
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6E9E:  MOVLW  04
6EA0:  MOVWF  FEA
6EA2:  MOVLW  E2
6EA4:  MOVWF  FE9
6EA6:  MOVFF  FF2,502
6EAA:  BCF    FF2.7
6EAC:  MOVLW  00
6EAE:  CALL   0F76
6EB2:  TBLRD*-
6EB4:  TBLRD*+
6EB6:  MOVF   FF5,W
6EB8:  MOVWF  FEE
6EBA:  IORLW  00
6EBC:  BNZ   6EB4
6EBE:  MOVLB  5
6EC0:  BTFSC  x02.7
6EC2:  BSF    FF2.7
6EC4:  MOVLW  04
6EC6:  MOVWF  x03
6EC8:  MOVLW  E2
6ECA:  MOVWF  x02
6ECC:  CLRF   x04
6ECE:  MOVLW  1E
6ED0:  MOVWF  x05
6ED2:  CLRF   x06
6ED4:  MOVLW  02
6ED6:  MOVWF  x07
6ED8:  MOVLB  0
6EDA:  CALL   1702
....................          glcd_update();} 
6EDE:  CALL   112E
6EE2:  MOVLB  4
6EE4:  BRA    6E3E
....................       } 
....................    } 
6EE6:  MOVLB  0
6EE8:  GOTO   3092
.................... } 
6EEC:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
