CCS PCH C Compiler, Version 4.104, 5967               27-jun-16 11:38

               Filename: C:\Users\JP Electronica\Desktop\Autoclave FedeArroz\Firmware V3\GLCD_Controller\GLCD_Controller.lst

               ROM used: 27632 bytes (84%)
                         Largest free fragment is 5132
               RAM used: 1508 (74%) at main() level
                         1561 (76%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2BE6
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0EA4
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0F72:  MOVLW  05
0F74:  MOVWF  FEA
0F76:  MOVLW  E1
0F78:  MOVWF  FE9
0F7A:  MOVF   FEF,W
0F7C:  BZ    0F9A
0F7E:  MOVLW  0F
0F80:  MOVWF  01
0F82:  CLRF   00
0F84:  DECFSZ 00,F
0F86:  BRA    0F84
0F88:  DECFSZ 01,F
0F8A:  BRA    0F82
0F8C:  MOVLW  8F
0F8E:  MOVWF  00
0F90:  DECFSZ 00,F
0F92:  BRA    0F90
0F94:  NOP   
0F96:  DECFSZ FEF,F
0F98:  BRA    0F7E
0F9A:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
1922:  MOVLW  08
1924:  MOVWF  01
1926:  MOVLW  11
1928:  MOVWF  00
192A:  DECFSZ 00,F
192C:  BRA    192A
192E:  BCF    F8A.1
1930:  BCF    F93.1
1932:  MOVLW  11
1934:  MOVWF  00
1936:  DECFSZ 00,F
1938:  BRA    1936
193A:  MOVLB  5
193C:  RLCF   xE4,F
193E:  BCF    F8A.0
1940:  BTFSC  FD8.0
1942:  BSF    F93.0
1944:  BTFSS  FD8.0
1946:  BCF    F93.0
1948:  BSF    F93.1
194A:  BTFSS  F81.1
194C:  BRA    194A
194E:  DECFSZ 01,F
1950:  BRA    1954
1952:  BRA    1958
1954:  MOVLB  0
1956:  BRA    1926
1958:  MOVLW  11
195A:  MOVWF  00
195C:  DECFSZ 00,F
195E:  BRA    195C
1960:  BCF    F8A.1
1962:  BCF    F93.1
1964:  NOP   
1966:  BSF    F93.0
1968:  MOVLW  11
196A:  MOVWF  00
196C:  DECFSZ 00,F
196E:  BRA    196C
1970:  MOVLW  11
1972:  MOVWF  00
1974:  DECFSZ 00,F
1976:  BRA    1974
1978:  BSF    F93.1
197A:  BTFSS  F81.1
197C:  BRA    197A
197E:  CLRF   01
1980:  MOVLW  11
1982:  MOVWF  00
1984:  DECFSZ 00,F
1986:  BRA    1984
1988:  BTFSC  F81.0
198A:  BSF    01.0
198C:  BCF    F8A.1
198E:  BCF    F93.1
1990:  BCF    F8A.0
1992:  BCF    F93.0
1994:  MOVLB  0
1996:  RETLW  00
1998:  MOVLW  08
199A:  MOVLB  5
199C:  MOVWF  xE4
199E:  MOVFF  00,5E5
19A2:  BSF    F93.0
19A4:  MOVLW  11
19A6:  MOVWF  00
19A8:  DECFSZ 00,F
19AA:  BRA    19A8
19AC:  BSF    F93.1
19AE:  BTFSS  F81.1
19B0:  BRA    19AE
19B2:  BTFSC  F81.0
19B4:  BSF    FD8.0
19B6:  BTFSS  F81.0
19B8:  BCF    FD8.0
19BA:  RLCF   01,F
19BC:  MOVLW  11
19BE:  MOVWF  00
19C0:  DECFSZ 00,F
19C2:  BRA    19C0
19C4:  BCF    F93.1
19C6:  BCF    F8A.1
19C8:  DECFSZ xE4,F
19CA:  BRA    19A2
19CC:  BSF    F93.0
19CE:  MOVLW  11
19D0:  MOVWF  00
19D2:  DECFSZ 00,F
19D4:  BRA    19D2
19D6:  BCF    F8A.0
19D8:  MOVF   xE5,W
19DA:  BTFSS  FD8.2
19DC:  BCF    F93.0
19DE:  NOP   
19E0:  BSF    F93.1
19E2:  BTFSS  F81.1
19E4:  BRA    19E2
19E6:  MOVLW  11
19E8:  MOVWF  00
19EA:  DECFSZ 00,F
19EC:  BRA    19EA
19EE:  BCF    F8A.1
19F0:  BCF    F93.1
19F2:  MOVLW  11
19F4:  MOVWF  00
19F6:  DECFSZ 00,F
19F8:  BRA    19F6
19FA:  BCF    F8A.0
19FC:  BCF    F93.0
19FE:  MOVLB  0
1A00:  GOTO   1F50 (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
10EE:  BCF    F93.2
10F0:  BSF    F8A.2
....................    output_low(GLCD_E); 
10F2:  BCF    F93.7
10F4:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
10F6:  BCF    F93.3
10F8:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
10FA:  BCF    F93.4
10FC:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
10FE:  BCF    F93.5
1100:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1102:  MOVLB  5
1104:  CLRF   xF6
1106:  MOVLW  C0
1108:  MOVWF  xF7
110A:  MOVLB  0
110C:  RCALL  0F9C
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
110E:  MOVLW  01
1110:  MOVLB  5
1112:  MOVWF  xF6
1114:  MOVLW  C0
1116:  MOVWF  xF7
1118:  MOVLB  0
111A:  RCALL  0F9C
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
111C:  MOVLB  5
111E:  CLRF   xF6
1120:  MOVLW  40
1122:  MOVWF  xF7
1124:  MOVLB  0
1126:  RCALL  0F9C
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
1128:  MOVLW  01
112A:  MOVLB  5
112C:  MOVWF  xF6
112E:  MOVLW  40
1130:  MOVWF  xF7
1132:  MOVLB  0
1134:  RCALL  0F9C
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
1136:  MOVLB  5
1138:  CLRF   xF6
113A:  MOVLW  B8
113C:  MOVWF  xF7
113E:  MOVLB  0
1140:  RCALL  0F9C
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
1142:  MOVLW  01
1144:  MOVLB  5
1146:  MOVWF  xF6
1148:  MOVLW  B8
114A:  MOVWF  xF7
114C:  MOVLB  0
114E:  RCALL  0F9C
....................  
....................    if(mode == ON) 
1150:  MOVLB  5
1152:  DECFSZ xE0,W
1154:  BRA    1172
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
1156:  CLRF   xF6
1158:  MOVLW  3F
115A:  MOVWF  xF7
115C:  MOVLB  0
115E:  RCALL  0F9C
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1160:  MOVLW  01
1162:  MOVLB  5
1164:  MOVWF  xF6
1166:  MOVLW  3F
1168:  MOVWF  xF7
116A:  MOVLB  0
116C:  RCALL  0F9C
....................    } 
....................    else 
116E:  BRA    118A
1170:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
1172:  CLRF   xF6
1174:  MOVLW  3E
1176:  MOVWF  xF7
1178:  MOVLB  0
117A:  RCALL  0F9C
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
117C:  MOVLW  01
117E:  MOVLB  5
1180:  MOVWF  xF6
1182:  MOVLW  3E
1184:  MOVWF  xF7
1186:  MOVLB  0
1188:  RCALL  0F9C
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
118A:  MOVLB  5
118C:  CLRF   xE1
118E:  MOVLB  0
1190:  RCALL  0FDC
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
1192:  RCALL  1036
....................    #endif 
.................... } 
1194:  GOTO   2FBE (RETURN)
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
1036:  MOVLB  5
1038:  CLRF   xF2
103A:  MOVLW  16
103C:  MOVWF  xF1
....................    p2 = displayData.right; 
103E:  MOVLW  02
1040:  MOVWF  xF4
1042:  MOVLW  16
1044:  MOVWF  xF3
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
1046:  CLRF   xEF
1048:  MOVF   xEF,W
104A:  SUBLW  07
104C:  BNC   10EA
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
104E:  BCF    F93.5
1050:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
1052:  CLRF   xF6
1054:  MOVLW  40
1056:  MOVWF  xF7
1058:  MOVLB  0
105A:  RCALL  0F9C
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
105C:  MOVLW  01
105E:  MOVLB  5
1060:  MOVWF  xF6
1062:  MOVLW  40
1064:  MOVWF  xF7
1066:  MOVLB  0
1068:  RCALL  0F9C
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
106A:  MOVLB  5
106C:  MOVF   xEF,W
106E:  IORLW  B8
1070:  MOVWF  xF5
1072:  CLRF   xF6
1074:  MOVWF  xF7
1076:  MOVLB  0
1078:  RCALL  0F9C
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
107A:  MOVLB  5
107C:  MOVF   xEF,W
107E:  IORLW  B8
1080:  MOVWF  xF5
1082:  MOVLW  01
1084:  MOVWF  xF6
1086:  MOVFF  5F5,5F7
108A:  MOVLB  0
108C:  RCALL  0F9C
....................       output_high(GLCD_DI);                     // Set for data 
108E:  BCF    F93.5
1090:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
1092:  MOVLB  5
1094:  CLRF   xF0
1096:  MOVF   xF0,W
1098:  SUBLW  3F
109A:  BNC   10E6
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
109C:  MOVFF  5F2,03
10A0:  MOVF   xF1,W
10A2:  INCF   xF1,F
10A4:  BTFSC  FD8.2
10A6:  INCF   xF2,F
10A8:  MOVWF  FE9
10AA:  MOVFF  03,FEA
10AE:  MOVFF  FEF,5F5
10B2:  CLRF   xF6
10B4:  MOVFF  5F5,5F7
10B8:  MOVLB  0
10BA:  RCALL  0F9C
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
10BC:  MOVLB  5
10BE:  MOVFF  5F4,03
10C2:  MOVF   xF3,W
10C4:  INCF   xF3,F
10C6:  BTFSC  FD8.2
10C8:  INCF   xF4,F
10CA:  MOVWF  FE9
10CC:  MOVFF  03,FEA
10D0:  MOVFF  FEF,5F5
10D4:  MOVLW  01
10D6:  MOVWF  xF6
10D8:  MOVFF  5F5,5F7
10DC:  MOVLB  0
10DE:  RCALL  0F9C
....................       } 
10E0:  MOVLB  5
10E2:  INCF   xF0,F
10E4:  BRA    1096
....................    } 
10E6:  INCF   xEF,F
10E8:  BRA    1048
.................... } 
10EA:  MOVLB  0
10EC:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
1198:  MOVLB  6
119A:  CLRF   x13
119C:  RRCF   x0E,W
119E:  MOVWF  x12
11A0:  RRCF   x12,F
11A2:  RRCF   x12,F
11A4:  MOVLW  1F
11A6:  ANDWF  x12,F
....................    temp *= 64; 
11A8:  RLCF   x12,F
11AA:  RLCF   x13,F
11AC:  RLCF   x12,F
11AE:  RLCF   x13,F
11B0:  RLCF   x12,F
11B2:  RLCF   x13,F
11B4:  RLCF   x12,F
11B6:  RLCF   x13,F
11B8:  RLCF   x12,F
11BA:  RLCF   x13,F
11BC:  RLCF   x12,F
11BE:  RLCF   x13,F
11C0:  MOVLW  C0
11C2:  ANDWF  x12,F
....................    temp += x; 
11C4:  MOVF   x0D,W
11C6:  ADDWF  x12,F
11C8:  MOVLW  00
11CA:  ADDWFC x13,F
....................  
....................    if(x > 63) 
11CC:  MOVF   x0D,W
11CE:  SUBLW  3F
11D0:  BC    11EC
....................    { 
....................       p = displayData.right + temp - 64; 
11D2:  MOVLW  16
11D4:  ADDWF  x12,W
11D6:  MOVWF  x14
11D8:  MOVLW  02
11DA:  ADDWFC x13,W
11DC:  MOVWF  x15
11DE:  MOVLW  40
11E0:  SUBWF  x14,W
11E2:  MOVWF  x10
11E4:  MOVLW  00
11E6:  SUBWFB x15,W
11E8:  MOVWF  x11
....................    } 
....................    else 
11EA:  BRA    11F8
....................    { 
....................       p = displayData.left + temp; 
11EC:  MOVLW  16
11EE:  ADDWF  x12,W
11F0:  MOVWF  x10
11F2:  MOVLW  00
11F4:  ADDWFC x13,W
11F6:  MOVWF  x11
....................    } 
....................  
....................    if(color) 
11F8:  MOVF   x0F,F
11FA:  BZ    1226
....................    { 
....................       bit_set(*p, y%8); 
11FC:  MOVFF  611,03
1200:  MOVFF  610,FE9
1204:  MOVFF  611,FEA
1208:  MOVF   x0E,W
120A:  ANDLW  07
120C:  MOVWF  x14
120E:  MOVLW  01
1210:  MOVWF  00
1212:  MOVF   x14,W
1214:  MOVWF  01
1216:  BZ    1220
1218:  BCF    FD8.0
121A:  RLCF   00,F
121C:  DECFSZ 01,F
121E:  BRA    1218
1220:  MOVF   00,W
1222:  IORWF  FEF,F
....................    } 
....................    else 
1224:  BRA    1250
....................    { 
....................       bit_clear(*p, y%8); 
1226:  MOVFF  611,03
122A:  MOVFF  610,FE9
122E:  MOVFF  611,FEA
1232:  MOVF   x0E,W
1234:  ANDLW  07
1236:  MOVWF  x14
1238:  MOVLW  01
123A:  MOVWF  00
123C:  MOVF   x14,W
123E:  MOVWF  01
1240:  BZ    124A
1242:  BCF    FD8.0
1244:  RLCF   00,F
1246:  DECFSZ 01,F
1248:  BRA    1242
124A:  MOVF   00,W
124C:  XORLW  FF
124E:  ANDWF  FEF,F
....................    } 
.................... } 
1250:  MOVLB  0
1252:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
0FDC:  MOVLB  5
0FDE:  CLRF   xE4
0FE0:  MOVLW  16
0FE2:  MOVWF  xE3
....................    p2 = displayData.right; 
0FE4:  MOVLW  02
0FE6:  MOVWF  xE6
0FE8:  MOVLW  16
0FEA:  MOVWF  xE5
....................    data = 0xFF * color; 
0FEC:  MOVF   xE1,W
0FEE:  MULLW  FF
0FF0:  MOVFF  FF3,5E2
....................  
....................    for(i=0; i<512; ++i) 
0FF4:  CLRF   xE8
0FF6:  CLRF   xE7
0FF8:  MOVF   xE8,W
0FFA:  SUBLW  01
0FFC:  BNC   1032
....................    { 
....................       *p1++ = data; 
0FFE:  MOVFF  5E4,03
1002:  MOVF   xE3,W
1004:  INCF   xE3,F
1006:  BTFSC  FD8.2
1008:  INCF   xE4,F
100A:  MOVWF  FE9
100C:  MOVFF  03,FEA
1010:  MOVFF  5E2,FEF
....................       *p2++ = data; 
1014:  MOVFF  5E6,03
1018:  MOVF   xE5,W
101A:  INCF   xE5,F
101C:  BTFSC  FD8.2
101E:  INCF   xE6,F
1020:  MOVWF  FE9
1022:  MOVFF  03,FEA
1026:  MOVFF  5E2,FEF
....................    } 
102A:  INCF   xE7,F
102C:  BTFSC  FD8.2
102E:  INCF   xE8,F
1030:  BRA    0FF8
.................... } 
1032:  MOVLB  0
1034:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0F9C:  MOVLB  5
0F9E:  MOVF   xF6,F
0FA0:  BZ    0FA8
....................       output_high(GLCD_CS2); 
0FA2:  BCF    F93.4
0FA4:  BSF    F8A.4
....................    else 
0FA6:  BRA    0FAC
....................       output_high(GLCD_CS1); 
0FA8:  BCF    F93.3
0FAA:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0FAC:  BCF    F93.6
0FAE:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0FB0:  CLRF   F95
0FB2:  MOVFF  5F7,F8C
....................    delay_cycles(50); 
0FB6:  MOVLW  10
0FB8:  MOVWF  00
0FBA:  DECFSZ 00,F
0FBC:  BRA    0FBA
0FBE:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0FC0:  BCF    F93.7
0FC2:  BSF    F8A.7
....................    delay_cycles(250); 
0FC4:  MOVLW  53
0FC6:  MOVWF  00
0FC8:  DECFSZ 00,F
0FCA:  BRA    0FC8
....................    output_low(GLCD_E); 
0FCC:  BCF    F93.7
0FCE:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0FD0:  BCF    F93.3
0FD2:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0FD4:  BCF    F93.4
0FD6:  BCF    F8A.4
.................... } 
0FD8:  MOVLB  0
0FDA:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
141E:  MOVLW  01
1420:  MOVLB  6
1422:  MOVWF  x06
1424:  MOVWF  x07
1426:  CLRF   x0C
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
1428:  MOVLB  5
142A:  MOVF   xFD,W
142C:  SUBWF  xFF,W
142E:  MOVLB  6
1430:  MOVWF  x0D
1432:  MOVF   x0D,W
1434:  BTFSS  x0D.7
1436:  BRA    143E
1438:  MOVLW  00
143A:  BSF    FD8.0
143C:  SUBFWB x0D,W
143E:  CLRF   03
1440:  MOVWF  x04
1442:  MOVFF  03,605
....................    dy = abs((signed int8)(y2 - y1)); 
1446:  MOVLB  5
1448:  MOVF   xFE,W
144A:  MOVLB  6
144C:  SUBWF  x00,W
144E:  MOVWF  x0D
1450:  MOVF   x0D,W
1452:  BTFSS  x0D.7
1454:  BRA    145C
1456:  MOVLW  00
1458:  BSF    FD8.0
145A:  SUBFWB x0D,W
145C:  CLRF   03
145E:  MOVWF  x02
1460:  MOVFF  03,603
....................    #endif 
....................  
....................    if(x1 > x2) 
1464:  MOVLB  5
1466:  MOVF   xFD,W
1468:  SUBWF  xFF,W
146A:  BC    1474
....................       addx = -1; 
146C:  MOVLW  FF
146E:  MOVLB  6
1470:  MOVWF  x06
1472:  MOVLB  5
....................    if(y1 > y2) 
1474:  MOVF   xFE,W
1476:  MOVLB  6
1478:  SUBWF  x00,W
147A:  BC    1480
....................       addy = -1; 
147C:  MOVLW  FF
147E:  MOVWF  x07
....................  
....................    if(dx >= dy) 
1480:  MOVF   x03,W
1482:  SUBWF  x05,W
1484:  BNC   1508
1486:  BNZ   148E
1488:  MOVF   x02,W
148A:  SUBWF  x04,W
148C:  BNC   1508
....................    { 
....................       dy *= 2; 
148E:  BCF    FD8.0
1490:  RLCF   x02,F
1492:  RLCF   x03,F
....................       P = dy - dx; 
1494:  MOVF   x04,W
1496:  SUBWF  x02,W
1498:  MOVWF  00
149A:  MOVF   x05,W
149C:  SUBWFB x03,W
149E:  MOVFF  00,608
14A2:  MOVWF  x09
....................       diff = P - dx; 
14A4:  MOVF   x04,W
14A6:  SUBWF  x08,W
14A8:  MOVWF  x0A
14AA:  MOVF   x05,W
14AC:  SUBWFB x09,W
14AE:  MOVWF  x0B
....................  
....................       for(; i<=dx; ++i) 
14B0:  MOVF   x05,F
14B2:  BNZ   14BA
14B4:  MOVF   x0C,W
14B6:  SUBWF  x04,W
14B8:  BNC   1506
....................       { 
....................          glcd_pixel(x1, y1, color); 
14BA:  MOVFF  5FD,60D
14BE:  MOVFF  5FE,60E
14C2:  MOVFF  601,60F
14C6:  MOVLB  0
14C8:  RCALL  1198
....................  
....................          if(P < 0) 
14CA:  MOVLB  6
14CC:  BTFSC  x09.7
14CE:  BRA    14D2
14D0:  BRA    14E6
....................          { 
....................             P  += dy; 
14D2:  MOVF   x02,W
14D4:  ADDWF  x08,F
14D6:  MOVF   x03,W
14D8:  ADDWFC x09,F
....................             x1 += addx; 
14DA:  MOVF   x06,W
14DC:  MOVLB  5
14DE:  ADDWF  xFD,W
14E0:  MOVWF  xFD
....................          } 
....................          else 
14E2:  BRA    1500
14E4:  MOVLB  6
....................          { 
....................             P  += diff; 
14E6:  MOVF   x0A,W
14E8:  ADDWF  x08,F
14EA:  MOVF   x0B,W
14EC:  ADDWFC x09,F
....................             x1 += addx; 
14EE:  MOVF   x06,W
14F0:  MOVLB  5
14F2:  ADDWF  xFD,W
14F4:  MOVWF  xFD
....................             y1 += addy; 
14F6:  MOVLB  6
14F8:  MOVF   x07,W
14FA:  MOVLB  5
14FC:  ADDWF  xFE,W
14FE:  MOVWF  xFE
....................          } 
....................       } 
1500:  MOVLB  6
1502:  INCF   x0C,F
1504:  BRA    14B0
....................    } 
....................    else 
1506:  BRA    1580
....................    { 
....................       dx *= 2; 
1508:  BCF    FD8.0
150A:  RLCF   x04,F
150C:  RLCF   x05,F
....................       P = dx - dy; 
150E:  MOVF   x02,W
1510:  SUBWF  x04,W
1512:  MOVWF  00
1514:  MOVF   x03,W
1516:  SUBWFB x05,W
1518:  MOVFF  00,608
151C:  MOVWF  x09
....................       diff = P - dy; 
151E:  MOVF   x02,W
1520:  SUBWF  x08,W
1522:  MOVWF  x0A
1524:  MOVF   x03,W
1526:  SUBWFB x09,W
1528:  MOVWF  x0B
....................  
....................       for(; i<=dy; ++i) 
152A:  MOVF   x03,F
152C:  BNZ   1534
152E:  MOVF   x0C,W
1530:  SUBWF  x02,W
1532:  BNC   1580
....................       { 
....................          glcd_pixel(x1, y1, color); 
1534:  MOVFF  5FD,60D
1538:  MOVFF  5FE,60E
153C:  MOVFF  601,60F
1540:  MOVLB  0
1542:  RCALL  1198
....................  
....................          if(P < 0) 
1544:  MOVLB  6
1546:  BTFSC  x09.7
1548:  BRA    154C
154A:  BRA    1560
....................          { 
....................             P  += dx; 
154C:  MOVF   x04,W
154E:  ADDWF  x08,F
1550:  MOVF   x05,W
1552:  ADDWFC x09,F
....................             y1 += addy; 
1554:  MOVF   x07,W
1556:  MOVLB  5
1558:  ADDWF  xFE,W
155A:  MOVWF  xFE
....................          } 
....................          else 
155C:  BRA    157A
155E:  MOVLB  6
....................          { 
....................             P  += diff; 
1560:  MOVF   x0A,W
1562:  ADDWF  x08,F
1564:  MOVF   x0B,W
1566:  ADDWFC x09,F
....................             x1 += addx; 
1568:  MOVF   x06,W
156A:  MOVLB  5
156C:  ADDWF  xFD,W
156E:  MOVWF  xFD
....................             y1 += addy; 
1570:  MOVLB  6
1572:  MOVF   x07,W
1574:  MOVLB  5
1576:  ADDWF  xFE,W
1578:  MOVWF  xFE
....................          } 
....................       } 
157A:  MOVLB  6
157C:  INCF   x0C,F
157E:  BRA    152A
....................    } 
.................... } 
1580:  MOVLB  0
1582:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1584:  MOVLB  5
1586:  MOVF   xF6,F
1588:  BZ    15E6
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
158A:  MOVF   xF4,W
158C:  SUBWF  xF2,W
158E:  BC    159A
....................       { 
....................          xmin = x1; 
1590:  MOVFF  5F2,5F9
....................          xmax = x2; 
1594:  MOVFF  5F4,5FA
....................       } 
....................       else 
1598:  BRA    15A2
....................       { 
....................          xmin = x2; 
159A:  MOVFF  5F4,5F9
....................          xmax = x1; 
159E:  MOVFF  5F2,5FA
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
15A2:  MOVF   xF5,W
15A4:  SUBWF  xF3,W
15A6:  BC    15B2
....................       { 
....................          ymin = y1; 
15A8:  MOVFF  5F3,5FB
....................          ymax = y2; 
15AC:  MOVFF  5F5,5FC
....................       } 
....................       else 
15B0:  BRA    15BA
....................       { 
....................          ymin = y2; 
15B2:  MOVFF  5F5,5FB
....................          ymax = y1; 
15B6:  MOVFF  5F3,5FC
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
15BA:  MOVF   xF9,W
15BC:  SUBWF  xFA,W
15BE:  BNC   15E4
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
15C0:  MOVFF  5FB,5F8
15C4:  MOVF   xF8,W
15C6:  SUBWF  xFC,W
15C8:  BNC   15E0
....................          { 
....................             glcd_pixel(xmin, i, color); 
15CA:  MOVFF  5F9,60D
15CE:  MOVFF  5F8,60E
15D2:  MOVFF  5F7,60F
15D6:  MOVLB  0
15D8:  RCALL  1198
....................          } 
15DA:  MOVLB  5
15DC:  INCF   xF8,F
15DE:  BRA    15C4
....................       } 
15E0:  INCF   xF9,F
15E2:  BRA    15BA
....................    } 
....................    else 
15E4:  BRA    1642
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
15E6:  MOVFF  5F2,5FD
15EA:  MOVFF  5F3,5FE
15EE:  MOVFF  5F4,5FF
15F2:  MOVFF  5F3,600
15F6:  MOVFF  5F7,601
15FA:  MOVLB  0
15FC:  RCALL  141E
....................       glcd_line(x1, y2, x2, y2, color); 
15FE:  MOVFF  5F2,5FD
1602:  MOVFF  5F5,5FE
1606:  MOVFF  5F4,5FF
160A:  MOVFF  5F5,600
160E:  MOVFF  5F7,601
1612:  RCALL  141E
....................       glcd_line(x1, y1, x1, y2, color); 
1614:  MOVFF  5F2,5FD
1618:  MOVFF  5F3,5FE
161C:  MOVFF  5F2,5FF
1620:  MOVFF  5F5,600
1624:  MOVFF  5F7,601
1628:  RCALL  141E
....................       glcd_line(x2, y1, x2, y2, color); 
162A:  MOVFF  5F4,5FD
162E:  MOVFF  5F3,5FE
1632:  MOVFF  5F4,5FF
1636:  MOVFF  5F5,600
163A:  MOVFF  5F7,601
163E:  RCALL  141E
1640:  MOVLB  5
....................    } 
.................... } 
1642:  MOVLB  0
1644:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2188:  MOVLB  5
218A:  CLRF   xE5
....................    b = radius; 
218C:  MOVFF  5E2,5E6
....................    P = 1 - radius; 
2190:  MOVLW  01
2192:  BSF    FD8.0
2194:  SUBFWB xE2,W
2196:  MOVWF  xE7
....................  
....................    do 
....................    { 
....................       if(fill) 
2198:  MOVF   xE3,F
219A:  BZ    226E
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
219C:  MOVF   xE5,W
219E:  SUBWF  xE0,W
21A0:  MOVWF  xE8
21A2:  MOVF   xE6,W
21A4:  ADDWF  xE1,W
21A6:  MOVWF  xE9
21A8:  MOVF   xE5,W
21AA:  ADDWF  xE0,W
21AC:  MOVWF  xEA
21AE:  MOVF   xE6,W
21B0:  ADDWF  xE1,W
21B2:  MOVWF  xEB
21B4:  MOVFF  5E8,5FD
21B8:  MOVFF  5E9,5FE
21BC:  MOVFF  5EA,5FF
21C0:  MOVFF  FE8,600
21C4:  MOVFF  5E4,601
21C8:  MOVLB  0
21CA:  CALL   141E
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
21CE:  MOVLB  5
21D0:  MOVF   xE5,W
21D2:  SUBWF  xE0,W
21D4:  MOVWF  xE8
21D6:  MOVF   xE6,W
21D8:  SUBWF  xE1,W
21DA:  MOVWF  xE9
21DC:  MOVF   xE5,W
21DE:  ADDWF  xE0,W
21E0:  MOVWF  xEA
21E2:  MOVF   xE6,W
21E4:  SUBWF  xE1,W
21E6:  MOVWF  xEB
21E8:  MOVFF  5E8,5FD
21EC:  MOVFF  5E9,5FE
21F0:  MOVFF  5EA,5FF
21F4:  MOVFF  FE8,600
21F8:  MOVFF  5E4,601
21FC:  MOVLB  0
21FE:  CALL   141E
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
2202:  MOVLB  5
2204:  MOVF   xE6,W
2206:  SUBWF  xE0,W
2208:  MOVWF  xE8
220A:  MOVF   xE5,W
220C:  ADDWF  xE1,W
220E:  MOVWF  xE9
2210:  MOVF   xE6,W
2212:  ADDWF  xE0,W
2214:  MOVWF  xEA
2216:  MOVF   xE5,W
2218:  ADDWF  xE1,W
221A:  MOVWF  xEB
221C:  MOVFF  5E8,5FD
2220:  MOVFF  5E9,5FE
2224:  MOVFF  5EA,5FF
2228:  MOVFF  FE8,600
222C:  MOVFF  5E4,601
2230:  MOVLB  0
2232:  CALL   141E
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
2236:  MOVLB  5
2238:  MOVF   xE6,W
223A:  SUBWF  xE0,W
223C:  MOVWF  xE8
223E:  MOVF   xE5,W
2240:  SUBWF  xE1,W
2242:  MOVWF  xE9
2244:  MOVF   xE6,W
2246:  ADDWF  xE0,W
2248:  MOVWF  xEA
224A:  MOVF   xE5,W
224C:  SUBWF  xE1,W
224E:  MOVWF  xEB
2250:  MOVFF  5E8,5FD
2254:  MOVFF  5E9,5FE
2258:  MOVFF  5EA,5FF
225C:  MOVFF  FE8,600
2260:  MOVFF  5E4,601
2264:  MOVLB  0
2266:  CALL   141E
....................       } 
....................       else 
226A:  BRA    236C
226C:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
226E:  MOVF   xE0,W
2270:  ADDWF  xE5,W
2272:  MOVWF  xE8
2274:  MOVF   xE1,W
2276:  ADDWF  xE6,W
2278:  MOVWF  xE9
227A:  MOVFF  5E8,60D
227E:  MOVFF  FE8,60E
2282:  MOVFF  5E4,60F
2286:  MOVLB  0
2288:  CALL   1198
....................          glcd_pixel(b+x, a+y, color); 
228C:  MOVLB  5
228E:  MOVF   xE0,W
2290:  ADDWF  xE6,W
2292:  MOVWF  xE8
2294:  MOVF   xE1,W
2296:  ADDWF  xE5,W
2298:  MOVWF  xE9
229A:  MOVFF  5E8,60D
229E:  MOVFF  FE8,60E
22A2:  MOVFF  5E4,60F
22A6:  MOVLB  0
22A8:  CALL   1198
....................          glcd_pixel(x-a, b+y, color); 
22AC:  MOVLB  5
22AE:  MOVF   xE5,W
22B0:  SUBWF  xE0,W
22B2:  MOVWF  xE8
22B4:  MOVF   xE1,W
22B6:  ADDWF  xE6,W
22B8:  MOVWF  xE9
22BA:  MOVFF  5E8,60D
22BE:  MOVFF  FE8,60E
22C2:  MOVFF  5E4,60F
22C6:  MOVLB  0
22C8:  CALL   1198
....................          glcd_pixel(x-b, a+y, color); 
22CC:  MOVLB  5
22CE:  MOVF   xE6,W
22D0:  SUBWF  xE0,W
22D2:  MOVWF  xE8
22D4:  MOVF   xE1,W
22D6:  ADDWF  xE5,W
22D8:  MOVWF  xE9
22DA:  MOVFF  5E8,60D
22DE:  MOVFF  FE8,60E
22E2:  MOVFF  5E4,60F
22E6:  MOVLB  0
22E8:  CALL   1198
....................          glcd_pixel(b+x, y-a, color); 
22EC:  MOVLB  5
22EE:  MOVF   xE0,W
22F0:  ADDWF  xE6,W
22F2:  MOVWF  xE8
22F4:  MOVF   xE5,W
22F6:  SUBWF  xE1,W
22F8:  MOVWF  xE9
22FA:  MOVFF  5E8,60D
22FE:  MOVFF  FE8,60E
2302:  MOVFF  5E4,60F
2306:  MOVLB  0
2308:  CALL   1198
....................          glcd_pixel(a+x, y-b, color); 
230C:  MOVLB  5
230E:  MOVF   xE0,W
2310:  ADDWF  xE5,W
2312:  MOVWF  xE8
2314:  MOVF   xE6,W
2316:  SUBWF  xE1,W
2318:  MOVWF  xE9
231A:  MOVFF  5E8,60D
231E:  MOVFF  FE8,60E
2322:  MOVFF  5E4,60F
2326:  MOVLB  0
2328:  CALL   1198
....................          glcd_pixel(x-a, y-b, color); 
232C:  MOVLB  5
232E:  MOVF   xE5,W
2330:  SUBWF  xE0,W
2332:  MOVWF  xE8
2334:  MOVF   xE6,W
2336:  SUBWF  xE1,W
2338:  MOVWF  xE9
233A:  MOVFF  5E8,60D
233E:  MOVFF  FE8,60E
2342:  MOVFF  5E4,60F
2346:  MOVLB  0
2348:  CALL   1198
....................          glcd_pixel(x-b, y-a, color); 
234C:  MOVLB  5
234E:  MOVF   xE6,W
2350:  SUBWF  xE0,W
2352:  MOVWF  xE8
2354:  MOVF   xE5,W
2356:  SUBWF  xE1,W
2358:  MOVWF  xE9
235A:  MOVFF  5E8,60D
235E:  MOVFF  FE8,60E
2362:  MOVFF  5E4,60F
2366:  MOVLB  0
2368:  CALL   1198
....................       } 
....................  
....................       if(P < 0) 
236C:  MOVLB  5
236E:  BTFSC  xE7.7
2370:  BRA    2374
2372:  BRA    2390
....................          P += 3 + 2 * a++; 
2374:  MOVF   xE5,W
2376:  INCF   xE5,F
2378:  MOVWF  xE8
237A:  MOVLW  02
237C:  MOVWF  xE9
237E:  MOVFF  5E8,5EA
2382:  MOVLB  0
2384:  RCALL  213A
2386:  MOVF   01,W
2388:  ADDLW  03
238A:  MOVLB  5
238C:  ADDWF  xE7,F
....................       else 
238E:  BRA    23B2
....................          P += 5 + 2 * (a++ - b--); 
2390:  MOVF   xE5,W
2392:  INCF   xE5,F
2394:  MOVWF  xE8
2396:  MOVF   xE6,W
2398:  DECF   xE6,F
239A:  SUBWF  xE8,W
239C:  MOVWF  xE8
239E:  MOVLW  02
23A0:  MOVWF  xE9
23A2:  MOVFF  5E8,5EA
23A6:  MOVLB  0
23A8:  RCALL  213A
23AA:  MOVF   01,W
23AC:  ADDLW  05
23AE:  MOVLB  5
23B0:  ADDWF  xE7,F
....................     } while(a <= b); 
23B2:  MOVF   xE5,W
23B4:  XORLW  80
23B6:  MOVWF  00
23B8:  MOVF   xE6,W
23BA:  XORLW  80
23BC:  SUBWF  00,W
23BE:  BTFSC  FD8.2
23C0:  BRA    2198
23C2:  BTFSS  FD8.0
23C4:  BRA    2198
.................... } 
23C6:  MOVLB  0
23C8:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
1254:  MOVFF  5F4,03
1258:  MOVLB  5
125A:  MOVFF  5F3,FE9
125E:  MOVFF  5F4,FEA
1262:  MOVF   FEF,F
1264:  BTFSC  FD8.2
1266:  BRA    141A
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
1268:  MOVFF  5F4,03
126C:  MOVFF  5F3,FE9
1270:  MOVFF  5F4,FEA
1274:  MOVF   FEF,W
1276:  SUBLW  52
1278:  BNC   12CC
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
127A:  MOVFF  5F4,03
127E:  MOVFF  5F3,FE9
1282:  MOVFF  5F4,FEA
1286:  MOVLW  20
1288:  SUBWF  FEF,W
128A:  MULLW  05
128C:  MOVF   FF3,W
128E:  CLRF   03
1290:  MOVLB  6
1292:  MOVWF  x00
1294:  MOVLW  05
1296:  MOVWF  FEA
1298:  MOVLW  FB
129A:  MOVWF  FE9
129C:  CLRF   x04
129E:  MOVFF  600,603
12A2:  MOVFF  FF2,601
12A6:  BCF    FF2.7
12A8:  MOVLW  05
12AA:  MOVWF  01
12AC:  CLRF   FF7
12AE:  MOVF   x00,W
12B0:  MOVLB  0
12B2:  CALL   0096
12B6:  TBLRD*-
12B8:  TBLRD*+
12BA:  MOVFF  FF5,FEE
12BE:  DECFSZ 01,F
12C0:  BRA    12B8
12C2:  MOVLB  6
12C4:  BTFSC  x01.7
12C6:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
12C8:  BRA    133C
12CA:  MOVLB  5
12CC:  MOVFF  5F4,03
12D0:  MOVFF  5F3,FE9
12D4:  MOVFF  5F4,FEA
12D8:  MOVF   FEF,W
12DA:  SUBLW  7E
12DC:  BNC   1330
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
12DE:  MOVFF  5F4,03
12E2:  MOVFF  5F3,FE9
12E6:  MOVFF  5F4,FEA
12EA:  MOVLW  53
12EC:  SUBWF  FEF,W
12EE:  MULLW  05
12F0:  MOVF   FF3,W
12F2:  CLRF   03
12F4:  MOVLB  6
12F6:  MOVWF  x00
12F8:  MOVLW  05
12FA:  MOVWF  FEA
12FC:  MOVLW  FB
12FE:  MOVWF  FE9
1300:  CLRF   x04
1302:  MOVFF  600,603
1306:  MOVFF  FF2,601
130A:  BCF    FF2.7
130C:  MOVLW  05
130E:  MOVWF  01
1310:  CLRF   FF7
1312:  MOVF   x00,W
1314:  MOVLB  0
1316:  CALL   01B0
131A:  TBLRD*-
131C:  TBLRD*+
131E:  MOVFF  FF5,FEE
1322:  DECFSZ 01,F
1324:  BRA    131C
1326:  MOVLB  6
1328:  BTFSC  x01.7
132A:  BSF    FF2.7
....................       else 
132C:  BRA    133C
132E:  MOVLB  5
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
1330:  CLRF   xFB
1332:  CLRF   xFC
1334:  CLRF   xFD
1336:  CLRF   xFE
1338:  CLRF   xFF
133A:  MOVLB  6
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
133C:  MOVFF  5F4,03
1340:  MOVLB  5
1342:  MOVF   xF3,W
1344:  MOVWF  FE9
1346:  MOVFF  03,FEA
134A:  MOVF   FEF,W
134C:  XORLW  0A
134E:  MOVLB  0
1350:  BZ    1358
1352:  XORLW  07
1354:  BZ    1368
1356:  BRA    136E
....................          case '\n': 
....................             y += 7*size + 1; 
1358:  MOVLB  5
135A:  MOVF   xF5,W
135C:  MULLW  07
135E:  MOVF   FF3,W
1360:  ADDLW  01
1362:  ADDWF  xF2,F
....................             continue; 
1364:  BRA    140C
1366:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1368:  MOVLB  5
136A:  CLRF   xF1
....................             continue; 
136C:  BRA    140C
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
136E:  MOVLB  5
1370:  MOVF   xF5,W
1372:  MULLW  05
1374:  MOVF   FF3,W
1376:  ADDWF  xF1,W
1378:  SUBLW  7F
137A:  BC    1388
....................       { 
....................          x = 0;                           // Set x at far left position 
137C:  CLRF   xF1
....................          y += 7*size + 1;                 // Set y at next position down 
137E:  MOVF   xF5,W
1380:  MULLW  07
1382:  MOVF   FF3,W
1384:  ADDLW  01
1386:  ADDWF  xF2,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1388:  CLRF   xF7
138A:  MOVF   xF7,W
138C:  SUBLW  04
138E:  BNC   140C
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
1390:  CLRF   xF8
1392:  MOVF   xF8,W
1394:  SUBLW  06
1396:  BNC   1404
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1398:  CLRF   03
139A:  MOVF   xF7,W
139C:  ADDLW  FB
139E:  MOVWF  FE9
13A0:  MOVLW  05
13A2:  ADDWFC 03,W
13A4:  MOVWF  FEA
13A6:  MOVFF  FEF,600
13AA:  MOVFF  600,00
13AE:  MOVF   xF8,W
13B0:  MOVWF  01
13B2:  BZ    13BC
13B4:  BCF    FD8.0
13B6:  RRCF   00,F
13B8:  DECFSZ 01,F
13BA:  BRA    13B4
13BC:  BTFSS  00.0
13BE:  BRA    1400
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
13C0:  CLRF   xF9
13C2:  MOVF   xF5,W
13C4:  SUBWF  xF9,W
13C6:  BC    1400
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
13C8:  CLRF   xFA
13CA:  MOVF   xF5,W
13CC:  SUBWF  xFA,W
13CE:  BC    13FC
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
13D0:  MOVF   xFA,W
13D2:  ADDWF  xF1,W
13D4:  MOVLB  6
13D6:  MOVWF  x00
13D8:  MOVLB  5
13DA:  MOVF   xF8,W
13DC:  MULWF  xF5
13DE:  MOVF   FF3,W
13E0:  ADDWF  xF2,W
13E2:  ADDWF  xF9,W
13E4:  MOVLB  6
13E6:  MOVWF  x01
13E8:  MOVFF  600,60D
13EC:  MOVWF  x0E
13EE:  MOVFF  5F6,60F
13F2:  MOVLB  0
13F4:  RCALL  1198
....................                   } 
13F6:  MOVLB  5
13F8:  INCF   xFA,F
13FA:  BRA    13CA
....................                } 
13FC:  INCF   xF9,F
13FE:  BRA    13C2
....................             } 
....................          } 
1400:  INCF   xF8,F
1402:  BRA    1392
....................       } 
1404:  INCF   xF7,F
1406:  MOVF   xF5,W
1408:  ADDWF  xF1,F
140A:  BRA    138A
....................    } 
140C:  INCF   xF3,F
140E:  BTFSC  FD8.2
1410:  INCF   xF4,F
1412:  INCF   xF1,F
1414:  MOVLB  0
1416:  BRA    1254
1418:  MOVLB  5
.................... } 
141A:  MOVLB  0
141C:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Tijeras [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1F, 0xF0, 0xFF, 0xF8, 0xFF, 0xFC, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0xFF, 0xF8, 0xFF, 0xFC, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x7E, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x3F, 0x83, 0xFC, 0x01, 0x00, 0x80, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x3F, 0xFF, 0xFC, 0x01, 0x81, 0x80, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x3F, 0xFF, 0xFC, 0x00, 0x83, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x7F, 0xFF, 0xFC, 0x00, 0xC3, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x00, 0x46, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x0E, 0x3C, 0x78, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0xC3, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0x82, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0x81, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0x00, 0x88, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x0C, 0x00, 0x60, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1F, 0xFF, 0x3F, 0xFF, 0x8F, 0xFF, 0x87, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Guante [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xBF, 0xEF, 0xF9, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x3F, 0xEF, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x06, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x36, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xB6, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xB6, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xFF, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xFF, 0xE0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x20, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x20, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xFF, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x01, 0xFF, 0xC0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x01, 0xFF, 0xC0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xCF, 0xF9, 0xFE, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xEF, 0xF9, 0xFE, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Delicado [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x7E, 0x7F, 0xDF, 0xFB, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x03, 0xFF, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x02, 0x00, 0x60, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x03, 0xFF, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x80, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0xC0, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x80, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x80, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x01, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x02, 0x00, 0x60, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x0E, 0x00, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x0C, 0x00, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x18, 0x00, 0x0C, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x10, 0x1F, 0x84, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x1F, 0xFF, 0xFC, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x7F, 0xDF, 0xFB, 0xFE, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Liquido [64][16] = { 
.................... 0x07, 0xFC, 0x7F, 0xF9, 0xFF, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xFC, 0x7F, 0xF9, 0xFF, 0xF3, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x38, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x0C, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x0E, 0x00, 0x03, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x18, 0x00, 0x01, 0x80, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x04, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x70, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x04, 0x03, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x03, 0xFF, 0xFF, 0xFF, 0xFE, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x0F, 0xFF, 0xFF, 0xFF, 0xFE, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x0F, 0xFF, 0xFF, 0xFF, 0xFC, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x0F, 0xFF, 0xFF, 0xFF, 0xFC, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x0F, 0xFF, 0xFF, 0xFF, 0xFC, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0xFF, 0xFF, 0xFF, 0xE0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x7F, 0xFF, 0xFF, 0xE0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xFF, 0x9F, 0xFF, 0x9F, 0xFE, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xFF, 0x9F, 0xFF, 0x9F, 0xFE, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... int8 rxbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... float promedio[20]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,h=0,l=0,Ajuste=0,Ajusten=0,R2=0,Alarma=0,AlarmaAgua=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,Visua=0,flag_agua=0,CadenaRecibida=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,bite=0,TamanoCadena=0,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoTx[14]; 
.................... char datoRx[11]; 
.................... char ADCTemperatura[4]; 
.................... char SetTemperatura[3]={0,0,0}; 
.................... float V0=0.0,R1=6180.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=25.0,Ganancia2=20.0,desvio=0.0,d3=0.0; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
1646:  MOVLB  5
1648:  MOVFF  5E0,01
164C:  MOVFF  5E1,03
1650:  MOVFF  5E0,5E6
1654:  MOVFF  5E1,5E7
1658:  MOVLW  05
165A:  MOVWF  FEA
165C:  MOVLW  C0
165E:  MOVWF  FE9
1660:  MOVFF  5E1,FE2
1664:  MOVFF  5E0,FE1
1668:  MOVF   FE7,F
166A:  MOVFF  FE6,FEE
166E:  BNZ   1668
....................    if(sombreado==2) 
1670:  MOVF   xE4,W
1672:  SUBLW  02
1674:  BNZ   169E
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1676:  MOVLW  01
1678:  ADDWF  xE2,W
167A:  MOVWF  xE6
167C:  MOVLW  01
167E:  ADDWF  xE3,W
1680:  MOVWF  xE7
1682:  MOVFF  5E6,5F1
1686:  MOVWF  xF2
1688:  MOVLW  05
168A:  MOVWF  xF4
168C:  MOVLW  C0
168E:  MOVWF  xF3
1690:  MOVFF  5E5,5F5
1694:  MOVLW  01
1696:  MOVWF  xF6
1698:  MOVLB  0
169A:  RCALL  1254
169C:  MOVLB  5
....................    if(sombreado==1) 
169E:  DECFSZ xE4,W
16A0:  BRA    16EC
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
16A2:  MOVF   xE5,W
16A4:  MULLW  08
16A6:  MOVF   FF3,W
16A8:  ADDWF  xE3,W
16AA:  MOVWF  xE6
16AC:  CLRF   xF2
16AE:  MOVFF  5E3,5F3
16B2:  MOVLW  7F
16B4:  MOVWF  xF4
16B6:  MOVFF  5E6,5F5
16BA:  MOVLW  01
16BC:  MOVWF  xF6
16BE:  MOVWF  xF7
16C0:  MOVLB  0
16C2:  RCALL  1584
16C4:  MOVLW  01
16C6:  MOVLB  5
16C8:  ADDWF  xE2,W
16CA:  MOVWF  xE6
16CC:  MOVLW  01
16CE:  ADDWF  xE3,W
16D0:  MOVWF  xE7
16D2:  MOVFF  5E6,5F1
16D6:  MOVWF  xF2
16D8:  MOVLW  05
16DA:  MOVWF  xF4
16DC:  MOVLW  C0
16DE:  MOVWF  xF3
16E0:  MOVFF  5E5,5F5
16E4:  CLRF   xF6
16E6:  MOVLB  0
16E8:  RCALL  1254
16EA:  MOVLB  5
....................    if(sombreado==0) 
16EC:  MOVF   xE4,F
16EE:  BNZ   173A
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
16F0:  MOVF   xE5,W
16F2:  MULLW  08
16F4:  MOVF   FF3,W
16F6:  ADDWF  xE3,W
16F8:  MOVWF  xE6
16FA:  CLRF   xF2
16FC:  MOVFF  5E3,5F3
1700:  MOVLW  7F
1702:  MOVWF  xF4
1704:  MOVFF  5E6,5F5
1708:  MOVLW  01
170A:  MOVWF  xF6
170C:  CLRF   xF7
170E:  MOVLB  0
1710:  RCALL  1584
1712:  MOVLW  01
1714:  MOVLB  5
1716:  ADDWF  xE2,W
1718:  MOVWF  xE6
171A:  MOVLW  01
171C:  ADDWF  xE3,W
171E:  MOVWF  xE7
1720:  MOVFF  5E6,5F1
1724:  MOVWF  xF2
1726:  MOVLW  05
1728:  MOVWF  xF4
172A:  MOVLW  C0
172C:  MOVWF  xF3
172E:  MOVFF  5E5,5F5
1732:  MOVLW  01
1734:  MOVWF  xF6
1736:  MOVLB  0
1738:  RCALL  1254
....................    glcd_update(); 
173A:  MOVLB  0
173C:  RCALL  1036
.................... } 
173E:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
2450:  MOVLB  5
2452:  MOVF   xE4,W
2454:  SUBLW  02
2456:  BNZ   24C8
....................    { 
....................       sprintf(voltage, "%03u", digito); 
2458:  MOVLW  05
245A:  MOVWF  xDF
245C:  MOVLW  E6
245E:  MOVWF  xDE
2460:  MOVFF  5E1,5EF
2464:  MOVLW  03
2466:  MOVWF  xF0
2468:  MOVLB  0
246A:  RCALL  23CA
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
246C:  MOVLB  5
246E:  MOVF   xE5,W
2470:  MULLW  12
2472:  MOVF   FF3,W
2474:  ADDWF  xE2,W
2476:  MOVWF  xEF
2478:  MOVF   xE5,W
247A:  MULLW  08
247C:  MOVF   FF3,W
247E:  ADDWF  xE3,W
2480:  MOVWF  xF0
2482:  MOVFF  5E2,5F2
2486:  MOVFF  5E3,5F3
248A:  MOVFF  5EF,5F4
248E:  MOVWF  xF5
2490:  MOVLW  01
2492:  MOVWF  xF6
2494:  MOVWF  xF7
2496:  MOVLB  0
2498:  CALL   1584
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
249C:  MOVLW  01
249E:  MOVLB  5
24A0:  ADDWF  xE2,W
24A2:  MOVWF  xEF
24A4:  MOVLW  01
24A6:  ADDWF  xE3,W
24A8:  MOVWF  xF0
24AA:  MOVFF  5EF,5F1
24AE:  MOVWF  xF2
24B0:  MOVLW  05
24B2:  MOVWF  xF4
24B4:  MOVLW  E6
24B6:  MOVWF  xF3
24B8:  MOVFF  5E5,5F5
24BC:  CLRF   xF6
24BE:  MOVLB  0
24C0:  CALL   1254
....................    } 
....................    else 
24C4:  BRA    2596
24C6:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
24C8:  MOVLW  05
24CA:  MOVWF  xDF
24CC:  MOVLW  E6
24CE:  MOVWF  xDE
24D0:  MOVFF  5E1,5EF
24D4:  MOVLW  1B
24D6:  MOVWF  xF0
24D8:  MOVLB  0
24DA:  RCALL  23CA
....................     
....................       if(sombreado==1) 
24DC:  MOVLB  5
24DE:  DECFSZ xE4,W
24E0:  BRA    253A
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24E2:  MOVF   xE5,W
24E4:  MULLW  05
24E6:  MOVF   FF3,W
24E8:  ADDWF  xE2,W
24EA:  MOVWF  xEF
24EC:  MOVF   xE5,W
24EE:  MULLW  08
24F0:  MOVF   FF3,W
24F2:  ADDWF  xE3,W
24F4:  MOVWF  xF0
24F6:  MOVFF  5E2,5F2
24FA:  MOVFF  5E3,5F3
24FE:  MOVFF  5EF,5F4
2502:  MOVWF  xF5
2504:  MOVLW  01
2506:  MOVWF  xF6
2508:  MOVWF  xF7
250A:  MOVLB  0
250C:  CALL   1584
2510:  MOVLW  01
2512:  MOVLB  5
2514:  ADDWF  xE2,W
2516:  MOVWF  xEF
2518:  MOVLW  01
251A:  ADDWF  xE3,W
251C:  MOVWF  xF0
251E:  MOVFF  5EF,5F1
2522:  MOVWF  xF2
2524:  MOVLW  05
2526:  MOVWF  xF4
2528:  MOVLW  E6
252A:  MOVWF  xF3
252C:  MOVFF  5E5,5F5
2530:  CLRF   xF6
2532:  MOVLB  0
2534:  CALL   1254
2538:  MOVLB  5
....................       if(sombreado==0) 
253A:  MOVF   xE4,F
253C:  BNZ   2598
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
253E:  MOVF   xE5,W
2540:  MULLW  05
2542:  MOVF   FF3,W
2544:  ADDWF  xE2,W
2546:  MOVWF  xEF
2548:  MOVF   xE5,W
254A:  MULLW  08
254C:  MOVF   FF3,W
254E:  ADDWF  xE3,W
2550:  MOVWF  xF0
2552:  MOVFF  5E2,5F2
2556:  MOVFF  5E3,5F3
255A:  MOVFF  5EF,5F4
255E:  MOVWF  xF5
2560:  MOVLW  01
2562:  MOVWF  xF6
2564:  CLRF   xF7
2566:  MOVLB  0
2568:  CALL   1584
256C:  MOVLW  01
256E:  MOVLB  5
2570:  ADDWF  xE2,W
2572:  MOVWF  xEF
2574:  MOVLW  01
2576:  ADDWF  xE3,W
2578:  MOVWF  xF0
257A:  MOVFF  5EF,5F1
257E:  MOVWF  xF2
2580:  MOVLW  05
2582:  MOVWF  xF4
2584:  MOVLW  E6
2586:  MOVWF  xF3
2588:  MOVFF  5E5,5F5
258C:  MOVLW  01
258E:  MOVWF  xF6
2590:  MOVLB  0
2592:  CALL   1254
2596:  MOVLB  5
....................    } 
....................    glcd_update(); 
2598:  MOVLB  0
259A:  CALL   1036
.................... } 
259E:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2088:  MOVLB  5
208A:  MOVF   xE0,W
208C:  SUBLW  05
208E:  BNZ   2136
....................    for( i = 0 ; i < 64 ; i ++ ) 
2090:  CLRF   xE1
2092:  MOVF   xE1,W
2094:  SUBLW  3F
2096:  BNC   2136
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2098:  CLRF   xE2
209A:  MOVF   xE2,W
209C:  SUBLW  0F
209E:  BNC   2132
....................       {     
....................          for(k=7;k>-1;k--) 
20A0:  MOVLW  07
20A2:  MOVWF  xE3
20A4:  MOVF   xE3,W
20A6:  XORLW  80
20A8:  SUBLW  7F
20AA:  BC    212E
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
20AC:  CLRF   xE5
20AE:  MOVFF  5E1,5E4
20B2:  CLRF   xE7
20B4:  MOVLW  10
20B6:  MOVWF  xE6
20B8:  MOVLB  0
20BA:  BRA    2064
20BC:  MOVFF  02,5E5
20C0:  MOVFF  01,5E4
20C4:  MOVLB  5
20C6:  MOVF   xE2,W
20C8:  ADDWF  01,W
20CA:  MOVWF  01
20CC:  MOVLW  00
20CE:  ADDWFC 02,W
20D0:  MOVWF  03
20D2:  MOVF   01,W
20D4:  MOVFF  FF2,5E4
20D8:  BCF    FF2.7
20DA:  MOVFF  03,FF7
20DE:  MOVLB  0
20E0:  CALL   02A6
20E4:  MOVLB  5
20E6:  BTFSC  xE4.7
20E8:  BSF    FF2.7
20EA:  MOVWF  xE4
20EC:  MOVLW  07
20EE:  BSF    FD8.0
20F0:  SUBFWB xE3,W
20F2:  MOVWF  xE5
20F4:  MOVFF  5E4,00
20F8:  MOVF   xE5,W
20FA:  MOVWF  01
20FC:  BZ    2106
20FE:  BCF    FD8.0
2100:  RRCF   00,F
2102:  DECFSZ 01,F
2104:  BRA    20FE
2106:  BTFSS  00.0
2108:  BRA    212A
....................                glcd_pixel( j*8+k,i, ON ); 
210A:  MOVF   xE2,W
210C:  MULLW  08
210E:  MOVF   FF3,W
2110:  ADDWF  xE3,W
2112:  MOVWF  xE4
2114:  MOVFF  FE8,60D
2118:  MOVFF  5E1,60E
211C:  MOVLW  01
211E:  MOVLB  6
2120:  MOVWF  x0F
2122:  MOVLB  0
2124:  CALL   1198
2128:  MOVLB  5
....................          }   
212A:  DECF   xE3,F
212C:  BRA    20A4
....................       } 
212E:  INCF   xE2,F
2130:  BRA    209A
....................    } 
2132:  INCF   xE1,F
2134:  BRA    2092
....................    } 
....................     
.................... } 
2136:  MOVLB  0
2138:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0EA4:  MOVLW  15
0EA6:  MOVWF  FCF
0EA8:  MOVLW  A0
0EAA:  MOVWF  FCE
....................    tiempos++; 
0EAC:  MOVLB  5
0EAE:  INCF   x42,F
0EB0:  BTFSC  FD8.2
0EB2:  INCF   x43,F
....................    tiempos3++; 
0EB4:  INCF   x44,F
0EB6:  BTFSC  FD8.2
0EB8:  INCF   x45,F
....................    tiempoctrl++; 
0EBA:  INCF   x46,F
0EBC:  BTFSC  FD8.2
0EBE:  INCF   x47,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0EC0:  MOVF   x45,F
0EC2:  BNZ   0ECA
0EC4:  MOVF   x44,W
0EC6:  SUBLW  27
0EC8:  BC    0EDC
0ECA:  MOVF   x40,W
0ECC:  SUBLW  02
0ECE:  BNZ   0EDC
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0ED0:  CLRF   x45
0ED2:  CLRF   x44
0ED4:  BSF    x29.7
0ED6:  INCF   x4C,F
0ED8:  BTFSC  FD8.2
0EDA:  INCF   x4D,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0EDC:  MOVF   x42,W
0EDE:  SUBLW  C8
0EE0:  BNZ   0F6A
0EE2:  MOVF   x43,F
0EE4:  BNZ   0F6A
....................    {tiempos=0;Lectura=1;tinicio++; 
0EE6:  CLRF   x43
0EE8:  CLRF   x42
0EEA:  BSF    x29.6
0EEC:  INCF   x4E,F
0EEE:  BTFSC  FD8.2
0EF0:  INCF   x4F,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0EF2:  DECFSZ x3E,W
0EF4:  BRA    0F2E
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0EF6:  INCF   x54,F
....................       if(Testerilizacion[0]>9) 
0EF8:  BTFSC  x54.7
0EFA:  BRA    0F06
0EFC:  MOVF   x54,W
0EFE:  SUBLW  09
0F00:  BC    0F06
....................          {Testerilizacion[0]=0; 
0F02:  CLRF   x54
....................           Testerilizacion[1]++;} 
0F04:  INCF   x55,F
....................        if(Testerilizacion[1]>5) 
0F06:  BTFSC  x55.7
0F08:  BRA    0F14
0F0A:  MOVF   x55,W
0F0C:  SUBLW  05
0F0E:  BC    0F14
....................          {Testerilizacion[1]=0; 
0F10:  CLRF   x55
....................           Testerilizacion[2]++;} 
0F12:  INCF   x56,F
....................          if(Testerilizacion[2]>9) 
0F14:  BTFSC  x56.7
0F16:  BRA    0F22
0F18:  MOVF   x56,W
0F1A:  SUBLW  09
0F1C:  BC    0F22
....................             {Testerilizacion[2]=0; 
0F1E:  CLRF   x56
....................              Testerilizacion[3]++;} 
0F20:  INCF   x57,F
....................             if(Testerilizacion[3]>5) 
0F22:  BTFSC  x57.7
0F24:  BRA    0F2E
0F26:  MOVF   x57,W
0F28:  SUBLW  05
0F2A:  BC    0F2E
....................                {Testerilizacion[3]=0;} 
0F2C:  CLRF   x57
....................       }        
....................        
....................     if(tiempo_secado==1) 
0F2E:  DECFSZ x3F,W
0F30:  BRA    0F6A
....................       { 
....................                       
....................       Tsecado[0]++; 
0F32:  INCF   x5C,F
....................       if(Tsecado[0]>9) 
0F34:  BTFSC  x5C.7
0F36:  BRA    0F42
0F38:  MOVF   x5C,W
0F3A:  SUBLW  09
0F3C:  BC    0F42
....................          {Tsecado[0]=0; 
0F3E:  CLRF   x5C
....................           Tsecado[1]++;} 
0F40:  INCF   x5D,F
....................        if(Tsecado[1]>5) 
0F42:  BTFSC  x5D.7
0F44:  BRA    0F50
0F46:  MOVF   x5D,W
0F48:  SUBLW  05
0F4A:  BC    0F50
....................          {Tsecado[1]=0; 
0F4C:  CLRF   x5D
....................           Tsecado[2]++;} 
0F4E:  INCF   x5E,F
....................          if(Tsecado[2]>9) 
0F50:  BTFSC  x5E.7
0F52:  BRA    0F5E
0F54:  MOVF   x5E,W
0F56:  SUBLW  09
0F58:  BC    0F5E
....................             {Tsecado[2]=0; 
0F5A:  CLRF   x5E
....................              Tsecado[3]++;} 
0F5C:  INCF   x5F,F
....................             if(Tsecado[3]>5) 
0F5E:  BTFSC  x5F.7
0F60:  BRA    0F6A
0F62:  MOVF   x5F,W
0F64:  SUBLW  05
0F66:  BC    0F6A
....................                {Tsecado[3]=0;} 
0F68:  CLRF   x5F
....................       }   
....................    } 
....................    } 
....................     
0F6A:  BCF    F9E.0
0F6C:  MOVLB  0
0F6E:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
26E0:  MOVLW  07
26E2:  MOVLB  5
26E4:  ADDWF  xE2,W
26E6:  MOVWF  xE3
26E8:  MOVFF  5E0,5F2
26EC:  MOVFF  5E2,5F3
26F0:  MOVFF  5E1,5F4
26F4:  MOVWF  xF5
26F6:  MOVLW  01
26F8:  MOVWF  xF6
26FA:  CLRF   xF7
26FC:  MOVLB  0
26FE:  CALL   1584
.................... } 
2702:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%3.1f",adc); // Converts adc to text 
*
2AB4:  MOVLW  05
2AB6:  MOVLB  5
2AB8:  MOVWF  xDF
2ABA:  MOVLW  E7
2ABC:  MOVWF  xDE
2ABE:  MOVLW  02
2AC0:  MOVWF  FE9
2AC2:  MOVFF  5E3,5F3
2AC6:  MOVFF  5E2,5F2
2ACA:  MOVFF  5E1,5F1
2ACE:  MOVFF  5E0,5F0
2AD2:  MOVLW  01
2AD4:  MOVWF  xF4
2AD6:  MOVLB  0
2AD8:  BRA    28FE
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2ADA:  MOVLB  5
2ADC:  MOVF   xE6,W
2ADE:  MULLW  1B
2AE0:  MOVF   FF3,W
2AE2:  ADDWF  xE4,W
2AE4:  MOVWF  xF0
2AE6:  MOVF   xE6,W
2AE8:  MULLW  08
2AEA:  MOVF   FF3,W
2AEC:  ADDWF  xE5,W
2AEE:  MOVWF  xF1
2AF0:  MOVFF  5E4,5F2
2AF4:  MOVFF  5E5,5F3
2AF8:  MOVFF  5F0,5F4
2AFC:  MOVWF  xF5
2AFE:  MOVLW  01
2B00:  MOVWF  xF6
2B02:  CLRF   xF7
2B04:  MOVLB  0
2B06:  CALL   1584
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2B0A:  MOVFF  5E4,5F1
2B0E:  MOVFF  5E5,5F2
2B12:  MOVLW  05
2B14:  MOVLB  5
2B16:  MOVWF  xF4
2B18:  MOVLW  E7
2B1A:  MOVWF  xF3
2B1C:  MOVFF  5E6,5F5
2B20:  MOVLW  01
2B22:  MOVWF  xF6
2B24:  MOVLB  0
2B26:  CALL   1254
.................... } 
2B2A:  GOTO   6472 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
25A0:  MOVFF  55B,5E1
25A4:  MOVLW  24
25A6:  MOVLB  5
25A8:  MOVWF  xE2
25AA:  CLRF   xE3
25AC:  CLRF   xE4
25AE:  MOVLW  01
25B0:  MOVWF  xE5
25B2:  MOVLB  0
25B4:  RCALL  2450
25B6:  MOVFF  55A,5E1
25BA:  MOVLW  2A
25BC:  MOVLB  5
25BE:  MOVWF  xE2
25C0:  CLRF   xE3
25C2:  CLRF   xE4
25C4:  MOVLW  01
25C6:  MOVWF  xE5
25C8:  MOVLB  0
25CA:  RCALL  2450
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
25CC:  MOVLW  05
25CE:  MOVWF  FEA
25D0:  MOVLW  C0
25D2:  MOVWF  FE9
25D4:  MOVFF  FF2,5E0
25D8:  BCF    FF2.7
25DA:  MOVLW  00
25DC:  CALL   06BE
25E0:  TBLRD*-
25E2:  TBLRD*+
25E4:  MOVF   FF5,W
25E6:  MOVWF  FEE
25E8:  IORLW  00
25EA:  BNZ   25E2
25EC:  MOVLB  5
25EE:  BTFSC  xE0.7
25F0:  BSF    FF2.7
25F2:  MOVLW  05
25F4:  MOVWF  xE1
25F6:  MOVLW  C0
25F8:  MOVWF  xE0
25FA:  MOVLW  31
25FC:  MOVWF  xE2
25FE:  CLRF   xE3
2600:  MOVLW  02
2602:  MOVWF  xE4
2604:  MOVLW  01
2606:  MOVWF  xE5
2608:  MOVLB  0
260A:  CALL   1646
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
260E:  MOVFF  559,5E1
2612:  MOVLW  36
2614:  MOVLB  5
2616:  MOVWF  xE2
2618:  CLRF   xE3
261A:  CLRF   xE4
261C:  MOVLW  01
261E:  MOVWF  xE5
2620:  MOVLB  0
2622:  RCALL  2450
2624:  MOVFF  558,5E1
2628:  MOVLW  3C
262A:  MOVLB  5
262C:  MOVWF  xE2
262E:  CLRF   xE3
2630:  CLRF   xE4
2632:  MOVLW  01
2634:  MOVWF  xE5
2636:  MOVLB  0
2638:  RCALL  2450
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
263A:  MOVFF  563,5E1
263E:  MOVLW  24
2640:  MOVLB  5
2642:  MOVWF  xE2
2644:  MOVLW  08
2646:  MOVWF  xE3
2648:  CLRF   xE4
264A:  MOVLW  01
264C:  MOVWF  xE5
264E:  MOVLB  0
2650:  RCALL  2450
2652:  MOVFF  562,5E1
2656:  MOVLW  2A
2658:  MOVLB  5
265A:  MOVWF  xE2
265C:  MOVLW  08
265E:  MOVWF  xE3
2660:  CLRF   xE4
2662:  MOVLW  01
2664:  MOVWF  xE5
2666:  MOVLB  0
2668:  RCALL  2450
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
266A:  MOVLW  05
266C:  MOVWF  FEA
266E:  MOVLW  C0
2670:  MOVWF  FE9
2672:  MOVFF  FF2,5E0
2676:  BCF    FF2.7
2678:  MOVLW  00
267A:  CALL   06BE
267E:  TBLRD*-
2680:  TBLRD*+
2682:  MOVF   FF5,W
2684:  MOVWF  FEE
2686:  IORLW  00
2688:  BNZ   2680
268A:  MOVLB  5
268C:  BTFSC  xE0.7
268E:  BSF    FF2.7
2690:  MOVLW  05
2692:  MOVWF  xE1
2694:  MOVLW  C0
2696:  MOVWF  xE0
2698:  MOVLW  31
269A:  MOVWF  xE2
269C:  MOVLW  08
269E:  MOVWF  xE3
26A0:  MOVLW  02
26A2:  MOVWF  xE4
26A4:  MOVLW  01
26A6:  MOVWF  xE5
26A8:  MOVLB  0
26AA:  CALL   1646
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
26AE:  MOVFF  561,5E1
26B2:  MOVLW  36
26B4:  MOVLB  5
26B6:  MOVWF  xE2
26B8:  MOVLW  08
26BA:  MOVWF  xE3
26BC:  CLRF   xE4
26BE:  MOVLW  01
26C0:  MOVWF  xE5
26C2:  MOVLB  0
26C4:  RCALL  2450
26C6:  MOVFF  560,5E1
26CA:  MOVLW  3C
26CC:  MOVLB  5
26CE:  MOVWF  xE2
26D0:  MOVLW  08
26D2:  MOVWF  xE3
26D4:  CLRF   xE4
26D6:  MOVLW  01
26D8:  MOVWF  xE5
26DA:  MOVLB  0
26DC:  RCALL  2450
.................... } 
26DE:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
186C:  MOVLW  05
186E:  MOVLB  5
1870:  MOVWF  xDF
1872:  MOVLW  E6
1874:  MOVWF  xDE
1876:  MOVFF  5E2,5EF
187A:  MOVLW  1F
187C:  MOVWF  xF0
187E:  MOVLB  0
1880:  BRA    178C
....................     
....................    if(sombreado==1) 
1882:  MOVLB  5
1884:  DECFSZ xE5,W
1886:  BRA    18D6
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1888:  MOVLW  12
188A:  ADDWF  xE3,W
188C:  MOVWF  xEF
188E:  MOVLW  18
1890:  ADDWF  xE4,W
1892:  MOVWF  xF0
1894:  MOVFF  5E3,5F2
1898:  MOVFF  5E4,5F3
189C:  MOVFF  5EF,5F4
18A0:  MOVWF  xF5
18A2:  MOVLW  01
18A4:  MOVWF  xF6
18A6:  MOVWF  xF7
18A8:  MOVLB  0
18AA:  RCALL  1584
18AC:  MOVLW  02
18AE:  MOVLB  5
18B0:  ADDWF  xE3,W
18B2:  MOVWF  xEF
18B4:  MOVLW  01
18B6:  ADDWF  xE4,W
18B8:  MOVWF  xF0
18BA:  MOVFF  5EF,5F1
18BE:  MOVWF  xF2
18C0:  MOVLW  05
18C2:  MOVWF  xF4
18C4:  MOVLW  E6
18C6:  MOVWF  xF3
18C8:  MOVLW  02
18CA:  MOVWF  xF5
18CC:  CLRF   xF6
18CE:  MOVLB  0
18D0:  RCALL  1254
....................    else    
18D2:  BRA    1920
18D4:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
18D6:  MOVLW  12
18D8:  ADDWF  xE3,W
18DA:  MOVWF  xEF
18DC:  MOVLW  18
18DE:  ADDWF  xE4,W
18E0:  MOVWF  xF0
18E2:  MOVFF  5E3,5F2
18E6:  MOVFF  5E4,5F3
18EA:  MOVFF  5EF,5F4
18EE:  MOVWF  xF5
18F0:  CLRF   xF6
18F2:  CLRF   xF7
18F4:  MOVLB  0
18F6:  RCALL  1584
18F8:  MOVLW  02
18FA:  MOVLB  5
18FC:  ADDWF  xE3,W
18FE:  MOVWF  xEF
1900:  MOVLW  01
1902:  ADDWF  xE4,W
1904:  MOVWF  xF0
1906:  MOVFF  5EF,5F1
190A:  MOVWF  xF2
190C:  MOVLW  05
190E:  MOVWF  xF4
1910:  MOVLW  E6
1912:  MOVWF  xF3
1914:  MOVLW  02
1916:  MOVWF  xF5
1918:  MOVLW  01
191A:  MOVWF  xF6
191C:  MOVLB  0
191E:  RCALL  1254
....................  
.................... } 
1920:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
1FCA:  BSF    F93.0
1FCC:  MOVLW  11
1FCE:  MOVWF  00
1FD0:  DECFSZ 00,F
1FD2:  BRA    1FD0
1FD4:  BSF    F93.1
1FD6:  MOVLW  11
1FD8:  MOVWF  00
1FDA:  DECFSZ 00,F
1FDC:  BRA    1FDA
1FDE:  BCF    F8A.0
1FE0:  BCF    F93.0
1FE2:  MOVLW  11
1FE4:  MOVWF  00
1FE6:  DECFSZ 00,F
1FE8:  BRA    1FE6
1FEA:  BCF    F8A.1
1FEC:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FEE:  MOVFF  5E1,5E4
1FF2:  RCALL  1922
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
1FF4:  MOVFF  5E2,5E4
1FF8:  RCALL  1922
....................    i2c_write(dato);        // Dato a transmitir 
1FFA:  MOVFF  5E3,5E4
1FFE:  RCALL  1922
....................    i2c_stop();             // Fin comunicación 
2000:  BCF    F93.0
2002:  NOP   
2004:  BSF    F93.1
2006:  BTFSS  F81.1
2008:  BRA    2006
200A:  MOVLW  11
200C:  MOVWF  00
200E:  DECFSZ 00,F
2010:  BRA    200E
2012:  BRA    2014
2014:  NOP   
2016:  BSF    F93.0
2018:  MOVLW  11
201A:  MOVWF  00
201C:  DECFSZ 00,F
201E:  BRA    201C
....................  } 
2020:  GOTO   205A (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1EE4:  BSF    F93.0
1EE6:  MOVLW  11
1EE8:  MOVWF  00
1EEA:  DECFSZ 00,F
1EEC:  BRA    1EEA
1EEE:  BSF    F93.1
1EF0:  MOVLW  11
1EF2:  MOVWF  00
1EF4:  DECFSZ 00,F
1EF6:  BRA    1EF4
1EF8:  BCF    F8A.0
1EFA:  BCF    F93.0
1EFC:  MOVLW  11
1EFE:  MOVWF  00
1F00:  DECFSZ 00,F
1F02:  BRA    1F00
1F04:  BCF    F8A.1
1F06:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1F08:  MOVFF  5E0,5E4
1F0C:  MOVLB  0
1F0E:  RCALL  1922
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1F10:  MOVFF  5E1,5E4
1F14:  RCALL  1922
....................    i2c_start();            // Reinicio 
1F16:  BSF    F93.0
1F18:  MOVLW  11
1F1A:  MOVWF  00
1F1C:  DECFSZ 00,F
1F1E:  BRA    1F1C
1F20:  BSF    F93.1
1F22:  MOVLW  11
1F24:  MOVWF  00
1F26:  DECFSZ 00,F
1F28:  BRA    1F26
1F2A:  BTFSS  F81.1
1F2C:  BRA    1F2A
1F2E:  BCF    F8A.0
1F30:  BCF    F93.0
1F32:  MOVLW  11
1F34:  MOVWF  00
1F36:  DECFSZ 00,F
1F38:  BRA    1F36
1F3A:  BCF    F8A.1
1F3C:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1F3E:  MOVLW  01
1F40:  MOVLB  5
1F42:  ADDWF  xE0,W
1F44:  MOVWF  xE2
1F46:  MOVWF  xE4
1F48:  MOVLB  0
1F4A:  RCALL  1922
....................    dato=i2c_read(0);       // Lectura del dato 
1F4C:  CLRF   00
1F4E:  BRA    1998
1F50:  MOVFF  01,4C6
....................    i2c_stop();             // Fin comunicación 
1F54:  BCF    F93.0
1F56:  NOP   
1F58:  BSF    F93.1
1F5A:  BTFSS  F81.1
1F5C:  BRA    1F5A
1F5E:  MOVLW  11
1F60:  MOVWF  00
1F62:  DECFSZ 00,F
1F64:  BRA    1F62
1F66:  BRA    1F68
1F68:  NOP   
1F6A:  BSF    F93.0
1F6C:  MOVLW  11
1F6E:  MOVWF  00
1F70:  DECFSZ 00,F
1F72:  BRA    1F70
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
1F92:  MOVFF  52C,496
....................    SlaveA0Tx[1]=EVDesfogue; 
1F96:  MOVFF  52D,497
....................    SlaveA0Tx[2]=EVAgua; 
1F9A:  MOVFF  52E,498
....................    SlaveA0Tx[3]=EVTrampa; 
1F9E:  MOVFF  52F,499
....................    SlaveA0Tx[4]=MotorPuerta; 
1FA2:  MOVFF  530,49A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
1FA6:  MOVFF  531,49B
....................    SlaveA0Tx[6]=BombaVacio; 
1FAA:  MOVFF  532,49C
....................    SlaveA0Tx[7]=BombaAgua; 
1FAE:  MOVFF  533,49D
....................    SlaveA0Tx[8]=Control; 
1FB2:  MOVFF  534,49E
....................    SlaveA0Tx[9]=Setpoint; 
1FB6:  MOVFF  53B,49F
....................    SlaveA0Tx[10]=20; 
1FBA:  MOVLW  14
1FBC:  MOVLB  4
1FBE:  MOVWF  xA0
....................    SlaveA0Tx[12]=Nivel; 
1FC0:  MOVFF  54A,4A2
.................... } 
1FC4:  MOVLB  0
1FC6:  GOTO   2026 (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1E12:  MOVFF  416,51D
....................    Parada=txbuf[1]; 
1E16:  MOVFF  417,51E
....................    NivelReservorio=txbuf[2]; 
1E1A:  MOVFF  418,51F
....................    NivelTanque=txbuf[3]; 
1E1E:  MOVFF  419,520
....................    Presostato=txbuf[4]; 
1E22:  MOVFF  41A,521
....................    ADC_Pt100=(float)txbuf[5]; 
1E26:  MOVLB  5
1E28:  CLRF   xE1
1E2A:  MOVFF  41B,5E0
1E2E:  MOVLB  0
1E30:  RCALL  1A04
1E32:  MOVFF  03,553
1E36:  MOVFF  02,552
1E3A:  MOVFF  01,551
1E3E:  MOVFF  00,550
....................    Alarma=txbuf[6]; 
1E42:  MOVFF  41C,527
....................    AlarmaAgua=txbuf[7]; 
1E46:  MOVFF  41D,528
....................    Chksum=txbuf[8]; 
1E4A:  MOVFF  41E,541
....................    Decimal=txbuf[9]; 
1E4E:  MOVFF  41F,535
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1E52:  MOVLB  5
1E54:  CLRF   xE1
1E56:  MOVFF  535,5E0
1E5A:  MOVLB  0
1E5C:  RCALL  1A04
1E5E:  MOVFF  00,5E0
1E62:  MOVFF  01,5E1
1E66:  MOVFF  02,5E2
1E6A:  MOVFF  03,5E3
1E6E:  MOVFF  03,5E7
1E72:  MOVFF  02,5E6
1E76:  MOVFF  01,5E5
1E7A:  MOVFF  00,5E4
1E7E:  MOVLB  5
1E80:  CLRF   xEB
1E82:  CLRF   xEA
1E84:  MOVLW  20
1E86:  MOVWF  xE9
1E88:  MOVLW  82
1E8A:  MOVWF  xE8
1E8C:  MOVLB  0
1E8E:  BRA    1A3A
1E90:  BCF    FD8.1
1E92:  MOVFF  553,5E7
1E96:  MOVFF  552,5E6
1E9A:  MOVFF  551,5E5
1E9E:  MOVFF  550,5E4
1EA2:  MOVFF  03,5EB
1EA6:  MOVFF  02,5EA
1EAA:  MOVFF  01,5E9
1EAE:  MOVFF  00,5E8
1EB2:  RCALL  1B9A
1EB4:  MOVFF  03,553
1EB8:  MOVFF  02,552
1EBC:  MOVFF  01,551
1EC0:  MOVFF  00,550
.................... } 
1EC4:  GOTO   1F90 (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
2024:  BRA    1F92
....................    for(i=0;i<13;i++) 
2026:  MOVLB  5
2028:  CLRF   x3A
202A:  MOVF   x3A,W
202C:  SUBLW  0C
202E:  BNC   2060
....................    { 
....................       direccion=0xA0; 
2030:  MOVLW  A0
2032:  MOVLB  4
2034:  MOVWF  xC7
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
2036:  CLRF   03
2038:  MOVLB  5
203A:  MOVF   x3A,W
203C:  ADDLW  96
203E:  MOVWF  FE9
2040:  MOVLW  04
2042:  ADDWFC 03,W
2044:  MOVWF  FEA
2046:  MOVFF  FEF,5E0
204A:  MOVFF  4C7,5E1
204E:  MOVFF  53A,5E2
2052:  MOVFF  5E0,5E3
2056:  MOVLB  0
2058:  BRA    1FCA
....................    }  
205A:  MOVLB  5
205C:  INCF   x3A,F
205E:  BRA    202A
.................... } 
2060:  MOVLB  0
2062:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
1EC8:  MOVLB  5
1ECA:  CLRF   x3A
1ECC:  MOVF   x3A,W
1ECE:  SUBLW  09
1ED0:  BNC   1F8C
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1ED2:  MOVLW  A0
1ED4:  MOVLB  4
1ED6:  MOVWF  xC7
....................       posicion=i;                         //Posición de memoria a leer 
1ED8:  MOVFF  53A,4C8
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1EDC:  MOVFF  4C7,5E0
1EE0:  MOVFF  4C8,5E1
....................       txbuf[i]=(int8)dato; 
*
1F74:  CLRF   03
1F76:  MOVLB  5
1F78:  MOVF   x3A,W
1F7A:  ADDLW  16
1F7C:  MOVWF  FE9
1F7E:  MOVLW  04
1F80:  ADDWFC 03,W
1F82:  MOVWF  FEA
1F84:  MOVFF  4C6,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
1F88:  INCF   x3A,F
1F8A:  BRA    1ECC
....................    Lee_Vector(); 
1F8C:  MOVLB  0
1F8E:  BRA    1E12
.................... } 
1F90:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2BE6:  CLRF   FF8
2BE8:  BCF    FD0.7
2BEA:  BSF    07.7
2BEC:  CLRF   FEA
2BEE:  CLRF   FE9
2BF0:  MOVLB  4
2BF2:  CLRF   xC6
2BF4:  CLRF   xC7
2BF6:  CLRF   xC8
2BF8:  MOVLB  5
2BFA:  CLRF   x1D
2BFC:  MOVLW  01
2BFE:  MOVWF  x1E
2C00:  CLRF   x1F
2C02:  CLRF   x20
2C04:  CLRF   x21
2C06:  CLRF   x22
2C08:  CLRF   x23
2C0A:  CLRF   x24
2C0C:  CLRF   x25
2C0E:  CLRF   x26
2C10:  CLRF   x27
2C12:  CLRF   x28
2C14:  BCF    x29.0
2C16:  BCF    x29.1
2C18:  BCF    x29.2
2C1A:  BCF    x29.3
2C1C:  BSF    x29.4
2C1E:  BCF    x29.5
2C20:  BCF    x29.6
2C22:  BCF    x29.7
2C24:  BCF    x2A.0
2C26:  BCF    x2A.1
2C28:  BCF    x2A.2
2C2A:  BCF    x2A.3
2C2C:  BCF    x2A.4
2C2E:  BCF    x2A.5
2C30:  BCF    x2A.6
2C32:  BCF    x2A.7
2C34:  BCF    x2B.0
2C36:  BCF    x2B.1
2C38:  BCF    x2B.2
2C3A:  BCF    x2B.3
2C3C:  BCF    x2B.4
2C3E:  BCF    x2B.5
2C40:  BCF    x2B.6
2C42:  CLRF   x2C
2C44:  CLRF   x2D
2C46:  CLRF   x2E
2C48:  CLRF   x2F
2C4A:  CLRF   x30
2C4C:  CLRF   x31
2C4E:  CLRF   x32
2C50:  CLRF   x33
2C52:  CLRF   x34
2C54:  CLRF   x35
2C56:  CLRF   x36
2C58:  MOVWF  x37
2C5A:  CLRF   x38
2C5C:  CLRF   x39
2C5E:  CLRF   x3A
2C60:  CLRF   x3B
2C62:  CLRF   x3C
2C64:  MOVWF  x3D
2C66:  CLRF   x3E
2C68:  CLRF   x3F
2C6A:  CLRF   x40
2C6C:  CLRF   x41
2C6E:  CLRF   x43
2C70:  CLRF   x42
2C72:  CLRF   x45
2C74:  CLRF   x44
2C76:  CLRF   x47
2C78:  CLRF   x46
2C7A:  CLRF   x49
2C7C:  MOVLW  0F
2C7E:  MOVWF  x48
2C80:  CLRF   x4B
2C82:  CLRF   x4A
2C84:  CLRF   x4D
2C86:  CLRF   x4C
2C88:  CLRF   x4F
2C8A:  CLRF   x4E
2C8C:  CLRF   x53
2C8E:  CLRF   x52
2C90:  CLRF   x51
2C92:  CLRF   x50
2C94:  CLRF   x8F
2C96:  CLRF   x8E
2C98:  CLRF   x8D
2C9A:  CLRF   x8C
2C9C:  CLRF   x93
2C9E:  MOVLW  20
2CA0:  MOVWF  x92
2CA2:  MOVLW  41
2CA4:  MOVWF  x91
2CA6:  MOVLW  8B
2CA8:  MOVWF  x90
2CAA:  CLRF   x9B
2CAC:  CLRF   x9A
2CAE:  MOVLW  20
2CB0:  MOVWF  x99
2CB2:  MOVLW  82
2CB4:  MOVWF  x98
2CB6:  CLRF   x9F
2CB8:  CLRF   x9E
2CBA:  CLRF   x9D
2CBC:  CLRF   x9C
2CBE:  CLRF   xA3
2CC0:  CLRF   xA2
2CC2:  CLRF   xA1
2CC4:  CLRF   xA0
2CC6:  CLRF   xA7
2CC8:  CLRF   xA6
2CCA:  CLRF   xA5
2CCC:  CLRF   xA4
2CCE:  CLRF   xAB
2CD0:  CLRF   xAA
2CD2:  CLRF   xA9
2CD4:  CLRF   xA8
2CD6:  CLRF   xAF
2CD8:  CLRF   xAE
2CDA:  CLRF   xAD
2CDC:  CLRF   xAC
2CDE:  CLRF   xB3
2CE0:  CLRF   xB2
2CE2:  MOVLW  48
2CE4:  MOVWF  xB1
2CE6:  MOVLW  83
2CE8:  MOVWF  xB0
2CEA:  CLRF   xB7
2CEC:  CLRF   xB6
2CEE:  MOVLW  20
2CF0:  MOVWF  xB5
2CF2:  MOVLW  83
2CF4:  MOVWF  xB4
2CF6:  CLRF   xBB
2CF8:  CLRF   xBA
2CFA:  CLRF   xB9
2CFC:  CLRF   xB8
2CFE:  CLRF   xBF
2D00:  CLRF   xBE
2D02:  CLRF   xBD
2D04:  CLRF   xBC
2D06:  MOVF   FC1,W
2D08:  ANDLW  C0
2D0A:  IORLW  0F
2D0C:  MOVWF  FC1
2D0E:  MOVLW  07
2D10:  MOVWF  FB4
2D12:  MOVLW  6B
2D14:  MOVLB  4
2D16:  MOVWF  xC9
2D18:  MOVLW  50
2D1A:  MOVWF  xCA
2D1C:  MOVLW  61
2D1E:  MOVWF  xCB
2D20:  CLRF   xCC
2D22:  CLRF   xCD
2D24:  CLRF   xCE
2D26:  CLRF   xCF
2D28:  CLRF   xD0
2D2A:  CLRF   xD1
2D2C:  CLRF   xD2
2D2E:  CLRF   xD3
2D30:  CLRF   xD4
2D32:  CLRF   xD5
2D34:  CLRF   xD6
2D36:  CLRF   xD7
2D38:  CLRF   xD8
2D3A:  CLRF   xD9
2D3C:  CLRF   xDA
2D3E:  CLRF   xDB
2D40:  CLRF   xDC
2D42:  CLRF   xDD
2D44:  CLRF   xDE
2D46:  CLRF   xDF
2D48:  CLRF   xE0
2D4A:  CLRF   xE1
2D4C:  CLRF   xE2
2D4E:  CLRF   xE3
2D50:  CLRF   xE4
2D52:  CLRF   xE5
2D54:  CLRF   xE6
2D56:  CLRF   xE7
2D58:  CLRF   xE8
2D5A:  CLRF   xE9
2D5C:  CLRF   xEA
2D5E:  CLRF   xEB
2D60:  CLRF   xEC
2D62:  CLRF   xED
2D64:  CLRF   xEE
2D66:  CLRF   xEF
2D68:  CLRF   xF0
2D6A:  CLRF   xF1
2D6C:  CLRF   xF2
2D6E:  CLRF   xF3
2D70:  CLRF   xF4
2D72:  CLRF   xF5
2D74:  CLRF   xF6
2D76:  CLRF   xF7
2D78:  CLRF   xF8
2D7A:  CLRF   xF9
2D7C:  CLRF   xFA
2D7E:  CLRF   xFB
2D80:  CLRF   xFC
2D82:  CLRF   xFD
2D84:  CLRF   xFE
2D86:  CLRF   xFF
2D88:  MOVLB  5
2D8A:  CLRF   x00
2D8C:  CLRF   x01
2D8E:  CLRF   x02
2D90:  CLRF   x03
2D92:  CLRF   x04
2D94:  CLRF   x05
2D96:  CLRF   x06
2D98:  CLRF   x07
2D9A:  CLRF   x08
2D9C:  CLRF   x09
2D9E:  CLRF   x0A
2DA0:  CLRF   x0B
2DA2:  CLRF   x0C
2DA4:  CLRF   x0D
2DA6:  CLRF   x0E
2DA8:  CLRF   x0F
2DAA:  CLRF   x10
2DAC:  CLRF   x11
2DAE:  CLRF   x12
2DB0:  CLRF   x13
2DB2:  CLRF   x14
2DB4:  CLRF   x15
2DB6:  CLRF   x16
2DB8:  CLRF   x17
2DBA:  CLRF   x18
2DBC:  CLRF   x19
2DBE:  CLRF   x1A
2DC0:  CLRF   x1B
2DC2:  CLRF   x1C
2DC4:  CLRF   x54
2DC6:  CLRF   x55
2DC8:  CLRF   x56
2DCA:  CLRF   x57
2DCC:  CLRF   x58
2DCE:  CLRF   x59
2DD0:  CLRF   x5A
2DD2:  CLRF   x5B
2DD4:  CLRF   x5C
2DD6:  CLRF   x5D
2DD8:  CLRF   x5E
2DDA:  CLRF   x5F
2DDC:  CLRF   x60
2DDE:  CLRF   x61
2DE0:  CLRF   x62
2DE2:  CLRF   x63
2DE4:  CLRF   x64
2DE6:  CLRF   x65
2DE8:  CLRF   x66
2DEA:  CLRF   x67
2DEC:  CLRF   x68
2DEE:  CLRF   x69
2DF0:  CLRF   x6A
2DF2:  CLRF   x6B
2DF4:  CLRF   x89
2DF6:  CLRF   x8A
2DF8:  CLRF   x8B
2DFA:  CLRF   xDE
2DFC:  CLRF   xDF
....................    Display_on; 
2DFE:  BSF    F8D.0
2E00:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2E02:  MOVLB  4
2E04:  CLRF   xC8
2E06:  MOVF   xC8,W
2E08:  SUBLW  0F
2E0A:  BNC   2E40
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2E0C:  CLRF   03
2E0E:  MOVF   xC8,W
2E10:  ADDLW  96
2E12:  MOVWF  FE9
2E14:  MOVLW  04
2E16:  ADDWFC 03,W
2E18:  MOVWF  FEA
2E1A:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2E1C:  CLRF   03
2E1E:  MOVF   xC8,W
2E20:  ADDLW  A6
2E22:  MOVWF  FE9
2E24:  MOVLW  04
2E26:  ADDWFC 03,W
2E28:  MOVWF  FEA
2E2A:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2E2C:  CLRF   03
2E2E:  MOVF   xC8,W
2E30:  ADDLW  B6
2E32:  MOVWF  FE9
2E34:  MOVLW  04
2E36:  ADDWFC 03,W
2E38:  MOVWF  FEA
2E3A:  CLRF   FEF
....................    } 
2E3C:  INCF   xC8,F
2E3E:  BRA    2E06
....................    output_d(0); 
2E40:  CLRF   F95
2E42:  CLRF   F8C
....................    delay_ms(1000);    
2E44:  MOVLW  04
2E46:  MOVLB  5
2E48:  MOVWF  xE0
2E4A:  MOVLW  FA
2E4C:  MOVWF  xE1
2E4E:  MOVLB  0
2E50:  CALL   0F72
2E54:  MOVLB  5
2E56:  DECFSZ xE0,F
2E58:  BRA    2E4A
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2E5A:  MOVLW  85
2E5C:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2E5E:  BSF    F9D.0
....................    enable_interrupts(global); 
2E60:  MOVLW  C0
2E62:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2E64:  MOVFF  FF2,5E0
2E68:  BCF    FF2.7
2E6A:  CLRF   FA9
2E6C:  BCF    FA6.6
2E6E:  BCF    FA6.7
2E70:  BSF    FA6.0
2E72:  MOVF   FA8,W
2E74:  BTFSC  xE0.7
2E76:  BSF    FF2.7
2E78:  MOVWF  x58
2E7A:  MOVFF  FF2,5E0
2E7E:  BCF    FF2.7
2E80:  MOVLW  01
2E82:  MOVWF  FA9
2E84:  BCF    FA6.6
2E86:  BCF    FA6.7
2E88:  BSF    FA6.0
2E8A:  MOVF   FA8,W
2E8C:  BTFSC  xE0.7
2E8E:  BSF    FF2.7
2E90:  MOVWF  x59
2E92:  MOVFF  FF2,5E0
2E96:  BCF    FF2.7
2E98:  MOVLW  02
2E9A:  MOVWF  FA9
2E9C:  BCF    FA6.6
2E9E:  BCF    FA6.7
2EA0:  BSF    FA6.0
2EA2:  MOVF   FA8,W
2EA4:  BTFSC  xE0.7
2EA6:  BSF    FF2.7
2EA8:  MOVWF  x5A
2EAA:  MOVFF  FF2,5E0
2EAE:  BCF    FF2.7
2EB0:  MOVLW  03
2EB2:  MOVWF  FA9
2EB4:  BCF    FA6.6
2EB6:  BCF    FA6.7
2EB8:  BSF    FA6.0
2EBA:  MOVF   FA8,W
2EBC:  BTFSC  xE0.7
2EBE:  BSF    FF2.7
2EC0:  MOVWF  x5B
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2EC2:  MOVFF  FF2,5E0
2EC6:  BCF    FF2.7
2EC8:  MOVLW  04
2ECA:  MOVWF  FA9
2ECC:  BCF    FA6.6
2ECE:  BCF    FA6.7
2ED0:  BSF    FA6.0
2ED2:  MOVF   FA8,W
2ED4:  BTFSC  xE0.7
2ED6:  BSF    FF2.7
2ED8:  MOVWF  x60
2EDA:  MOVFF  FF2,5E0
2EDE:  BCF    FF2.7
2EE0:  MOVLW  05
2EE2:  MOVWF  FA9
2EE4:  BCF    FA6.6
2EE6:  BCF    FA6.7
2EE8:  BSF    FA6.0
2EEA:  MOVF   FA8,W
2EEC:  BTFSC  xE0.7
2EEE:  BSF    FF2.7
2EF0:  MOVWF  x61
2EF2:  MOVFF  FF2,5E0
2EF6:  BCF    FF2.7
2EF8:  MOVLW  06
2EFA:  MOVWF  FA9
2EFC:  BCF    FA6.6
2EFE:  BCF    FA6.7
2F00:  BSF    FA6.0
2F02:  MOVF   FA8,W
2F04:  BTFSC  xE0.7
2F06:  BSF    FF2.7
2F08:  MOVWF  x62
2F0A:  MOVFF  FF2,5E0
2F0E:  BCF    FF2.7
2F10:  MOVLW  07
2F12:  MOVWF  FA9
2F14:  BCF    FA6.6
2F16:  BCF    FA6.7
2F18:  BSF    FA6.0
2F1A:  MOVF   FA8,W
2F1C:  BTFSC  xE0.7
2F1E:  BSF    FF2.7
2F20:  MOVWF  x63
2F22:  MOVFF  FF2,5E0
2F26:  BCF    FF2.7
2F28:  MOVLW  08
2F2A:  MOVWF  FA9
2F2C:  BCF    FA6.6
2F2E:  BCF    FA6.7
2F30:  BSF    FA6.0
2F32:  MOVF   FA8,W
2F34:  BTFSC  xE0.7
2F36:  BSF    FF2.7
2F38:  MOVWF  x3B
....................    Nivel=read_eeprom(9); 
2F3A:  MOVFF  FF2,5E0
2F3E:  BCF    FF2.7
2F40:  MOVLW  09
2F42:  MOVWF  FA9
2F44:  BCF    FA6.6
2F46:  BCF    FA6.7
2F48:  BSF    FA6.0
2F4A:  MOVF   FA8,W
2F4C:  BTFSC  xE0.7
2F4E:  BSF    FF2.7
2F50:  CLRF   x4B
2F52:  MOVWF  x4A
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2F54:  MOVFF  FF2,5E0
2F58:  BCF    FF2.7
2F5A:  MOVLW  0A
2F5C:  MOVWF  FA9
2F5E:  BCF    FA6.6
2F60:  BCF    FA6.7
2F62:  BSF    FA6.0
2F64:  MOVF   FA8,W
2F66:  BTFSC  xE0.7
2F68:  BSF    FF2.7
2F6A:  MOVWF  x68
2F6C:  MOVFF  FF2,5E0
2F70:  BCF    FF2.7
2F72:  MOVLW  0B
2F74:  MOVWF  FA9
2F76:  BCF    FA6.6
2F78:  BCF    FA6.7
2F7A:  BSF    FA6.0
2F7C:  MOVF   FA8,W
2F7E:  BTFSC  xE0.7
2F80:  BSF    FF2.7
2F82:  MOVWF  x69
2F84:  MOVFF  FF2,5E0
2F88:  BCF    FF2.7
2F8A:  MOVLW  0C
2F8C:  MOVWF  FA9
2F8E:  BCF    FA6.6
2F90:  BCF    FA6.7
2F92:  BSF    FA6.0
2F94:  MOVF   FA8,W
2F96:  BTFSC  xE0.7
2F98:  BSF    FF2.7
2F9A:  MOVWF  x6A
2F9C:  MOVFF  FF2,5E0
2FA0:  BCF    FF2.7
2FA2:  MOVLW  0D
2FA4:  MOVWF  FA9
2FA6:  BCF    FA6.6
2FA8:  BCF    FA6.7
2FAA:  BSF    FA6.0
2FAC:  MOVF   FA8,W
2FAE:  BTFSC  xE0.7
2FB0:  BSF    FF2.7
2FB2:  MOVWF  x6B
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2FB4:  MOVLW  01
2FB6:  MOVWF  xE0
2FB8:  MOVLB  0
2FBA:  GOTO   10EE
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2FBE:  MOVLB  5
2FC0:  CLRF   xE1
2FC2:  MOVLB  0
2FC4:  CALL   0FDC
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2FC8:  MOVLW  05
2FCA:  MOVWF  FEA
2FCC:  MOVLW  C0
2FCE:  MOVWF  FE9
2FD0:  MOVFF  FF2,5E0
2FD4:  BCF    FF2.7
2FD6:  MOVLW  00
2FD8:  CALL   06DA
2FDC:  TBLRD*-
2FDE:  TBLRD*+
2FE0:  MOVF   FF5,W
2FE2:  MOVWF  FEE
2FE4:  IORLW  00
2FE6:  BNZ   2FDE
2FE8:  MOVLB  5
2FEA:  BTFSC  xE0.7
2FEC:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2FEE:  MOVLW  05
2FF0:  MOVWF  xE1
2FF2:  MOVLW  C0
2FF4:  MOVWF  xE0
2FF6:  CLRF   xE2
2FF8:  CLRF   xE3
2FFA:  CLRF   xE4
2FFC:  MOVLW  02
2FFE:  MOVWF  xE5
3000:  MOVLB  0
3002:  CALL   1646
....................    strcpy(Menus.Letra,"Autoclave Horizontal"); 
3006:  MOVLW  05
3008:  MOVWF  FEA
300A:  MOVLW  C0
300C:  MOVWF  FE9
300E:  MOVFF  FF2,5E0
3012:  BCF    FF2.7
3014:  MOVLW  00
3016:  CALL   0700
301A:  TBLRD*-
301C:  TBLRD*+
301E:  MOVF   FF5,W
3020:  MOVWF  FEE
3022:  IORLW  00
3024:  BNZ   301C
3026:  MOVLB  5
3028:  BTFSC  xE0.7
302A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
302C:  MOVLW  05
302E:  MOVWF  xE1
3030:  MOVLW  C0
3032:  MOVWF  xE0
3034:  CLRF   xE2
3036:  MOVLW  14
3038:  MOVWF  xE3
303A:  CLRF   xE4
303C:  MOVLW  01
303E:  MOVWF  xE5
3040:  MOVLB  0
3042:  CALL   1646
....................    strcpy(Menus.Letra," 40 Litros  "); 
3046:  MOVLW  05
3048:  MOVWF  FEA
304A:  MOVLW  C0
304C:  MOVWF  FE9
304E:  MOVFF  FF2,5E0
3052:  BCF    FF2.7
3054:  MOVLW  00
3056:  CALL   0730
305A:  TBLRD*-
305C:  TBLRD*+
305E:  MOVF   FF5,W
3060:  MOVWF  FEE
3062:  IORLW  00
3064:  BNZ   305C
3066:  MOVLB  5
3068:  BTFSC  xE0.7
306A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
306C:  MOVLW  05
306E:  MOVWF  xE1
3070:  MOVLW  C0
3072:  MOVWF  xE0
3074:  CLRF   xE2
3076:  MOVLW  23
3078:  MOVWF  xE3
307A:  CLRF   xE4
307C:  MOVLW  02
307E:  MOVWF  xE5
3080:  MOVLB  0
3082:  CALL   1646
....................    delay_ms(1000); 
3086:  MOVLW  04
3088:  MOVLB  5
308A:  MOVWF  xE0
308C:  MOVLW  FA
308E:  MOVWF  xE1
3090:  MOVLB  0
3092:  CALL   0F72
3096:  MOVLB  5
3098:  DECFSZ xE0,F
309A:  BRA    308C
....................    delay_ms(1000); 
309C:  MOVLW  04
309E:  MOVWF  xE0
30A0:  MOVLW  FA
30A2:  MOVWF  xE1
30A4:  MOVLB  0
30A6:  CALL   0F72
30AA:  MOVLB  5
30AC:  DECFSZ xE0,F
30AE:  BRA    30A0
....................    delay_ms(1000); 
30B0:  MOVLW  04
30B2:  MOVWF  xE0
30B4:  MOVLW  FA
30B6:  MOVWF  xE1
30B8:  MOVLB  0
30BA:  CALL   0F72
30BE:  MOVLB  5
30C0:  DECFSZ xE0,F
30C2:  BRA    30B4
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
30C4:  CLRF   xE1
30C6:  MOVLB  0
30C8:  CALL   0FDC
....................    displayContrasena(Contrasena[0],20,30,1); 
30CC:  MOVFF  564,5E2
30D0:  MOVLW  14
30D2:  MOVLB  5
30D4:  MOVWF  xE3
30D6:  MOVLW  1E
30D8:  MOVWF  xE4
30DA:  MOVLW  01
30DC:  MOVWF  xE5
30DE:  MOVLB  0
30E0:  CALL   186C
....................    displayContrasena(Contrasena[1],40,30,0); 
30E4:  MOVFF  565,5E2
30E8:  MOVLW  28
30EA:  MOVLB  5
30EC:  MOVWF  xE3
30EE:  MOVLW  1E
30F0:  MOVWF  xE4
30F2:  CLRF   xE5
30F4:  MOVLB  0
30F6:  CALL   186C
....................    displayContrasena(Contrasena[2],60,30,0); 
30FA:  MOVFF  566,5E2
30FE:  MOVLW  3C
3100:  MOVLB  5
3102:  MOVWF  xE3
3104:  MOVLW  1E
3106:  MOVWF  xE4
3108:  CLRF   xE5
310A:  MOVLB  0
310C:  CALL   186C
....................    displayContrasena(Contrasena[3],80,30,0); 
3110:  MOVFF  567,5E2
3114:  MOVLW  50
3116:  MOVLB  5
3118:  MOVWF  xE3
311A:  MOVLW  1E
311C:  MOVWF  xE4
311E:  CLRF   xE5
3120:  MOVLB  0
3122:  CALL   186C
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
3126:  CALL   1EC8
....................        
....................       Envio_Esclavos(); 
312A:  CALL   2024
....................       glcd_update(); 
312E:  CALL   1036
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
3132:  BSF    F92.0
3134:  BTFSC  F80.0
3136:  BRA    314A
3138:  BSF    F92.1
313A:  BTFSC  F80.1
313C:  BRA    314A
313E:  BSF    F92.2
3140:  BTFSC  F80.2
3142:  BRA    314A
3144:  BSF    F92.3
3146:  BTFSS  F80.3
3148:  BRA    3152
....................       { 
....................          tinicio=0; 
314A:  MOVLB  5
314C:  CLRF   x4F
314E:  CLRF   x4E
3150:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
3152:  MOVLB  5
3154:  MOVF   x4F,W
3156:  SUBLW  37
3158:  BC    3174
315A:  XORLW  FF
315C:  BNZ   3164
315E:  MOVF   x4E,W
3160:  SUBLW  3F
3162:  BC    3174
....................          glcd_fillscreen(OFF); 
3164:  CLRF   xE1
3166:  MOVLB  0
3168:  CALL   0FDC
....................          Display_off; 
316C:  BCF    F8D.0
316E:  BCF    F96.0
....................       } 
3170:  BRA    3152
3172:  MOVLB  5
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
3174:  MOVF   x36,F
3176:  BTFSS  FD8.2
3178:  BRA    36F4
....................        
....................       strcpy(Menus.Letra,"Clave"); 
317A:  MOVLW  05
317C:  MOVWF  FEA
317E:  MOVLW  C0
3180:  MOVWF  FE9
3182:  MOVFF  FF2,5E0
3186:  BCF    FF2.7
3188:  MOVLW  00
318A:  MOVLB  0
318C:  CALL   0758
3190:  TBLRD*-
3192:  TBLRD*+
3194:  MOVF   FF5,W
3196:  MOVWF  FEE
3198:  IORLW  00
319A:  BNZ   3192
319C:  MOVLB  5
319E:  BTFSC  xE0.7
31A0:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
31A2:  MOVLW  05
31A4:  MOVWF  xE1
31A6:  MOVLW  C0
31A8:  MOVWF  xE0
31AA:  MOVLW  1E
31AC:  MOVWF  xE2
31AE:  CLRF   xE3
31B0:  MOVLW  01
31B2:  MOVWF  xE4
31B4:  MOVLW  02
31B6:  MOVWF  xE5
31B8:  MOVLB  0
31BA:  CALL   1646
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
31BE:  BSF    F92.0
31C0:  BTFSS  F80.0
31C2:  BRA    3294
....................       { 
....................          if(Flanco == 0) 
31C4:  MOVLB  5
31C6:  BTFSC  x29.0
31C8:  BRA    3292
....................          { 
....................             Flanco = 1;delay_ms(30); 
31CA:  BSF    x29.0
31CC:  MOVLW  1E
31CE:  MOVWF  xE1
31D0:  MOVLB  0
31D2:  CALL   0F72
....................             for(i=1;i<=4;i++) 
31D6:  MOVLW  01
31D8:  MOVLB  5
31DA:  MOVWF  x3A
31DC:  MOVF   x3A,W
31DE:  SUBLW  04
31E0:  BNC   3292
....................             { 
....................                if(unidad==i) 
31E2:  MOVF   x3A,W
31E4:  SUBWF  x37,W
31E6:  BNZ   325C
....................                { 
....................                   Contrasena[i-1]++; 
31E8:  MOVLW  01
31EA:  SUBWF  x3A,W
31EC:  CLRF   03
31EE:  ADDLW  64
31F0:  MOVWF  FE9
31F2:  MOVLW  05
31F4:  ADDWFC 03,W
31F6:  MOVWF  FEA
31F8:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
31FA:  MOVLW  01
31FC:  SUBWF  x3A,W
31FE:  CLRF   03
3200:  ADDLW  64
3202:  MOVWF  FE9
3204:  MOVLW  05
3206:  ADDWFC 03,W
3208:  MOVWF  FEA
320A:  BTFSC  FEF.7
320C:  BRA    3226
320E:  MOVF   FEF,W
3210:  SUBLW  09
3212:  BC    3226
....................                   { 
....................                      Contrasena[i-1]=0; 
3214:  MOVLW  01
3216:  SUBWF  x3A,W
3218:  CLRF   03
321A:  ADDLW  64
321C:  MOVWF  FE9
321E:  MOVLW  05
3220:  ADDWFC 03,W
3222:  MOVWF  FEA
3224:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
3226:  MOVLW  01
3228:  SUBWF  x3A,W
322A:  CLRF   03
322C:  ADDLW  64
322E:  MOVWF  FE9
3230:  MOVLW  05
3232:  ADDWFC 03,W
3234:  MOVWF  FEA
3236:  MOVFF  FEF,5E0
323A:  MOVF   x3A,W
323C:  MULLW  14
323E:  MOVFF  FF3,5E1
3242:  MOVFF  5E0,5E2
3246:  MOVFF  5E1,5E3
324A:  MOVLW  1E
324C:  MOVWF  xE4
324E:  MOVLW  01
3250:  MOVWF  xE5
3252:  MOVLB  0
3254:  CALL   186C
....................                } 
....................                else 
3258:  BRA    328C
325A:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
325C:  MOVLW  01
325E:  SUBWF  x3A,W
3260:  CLRF   03
3262:  ADDLW  64
3264:  MOVWF  FE9
3266:  MOVLW  05
3268:  ADDWFC 03,W
326A:  MOVWF  FEA
326C:  MOVFF  FEF,5E0
3270:  MOVF   x3A,W
3272:  MULLW  14
3274:  MOVFF  FF3,5E1
3278:  MOVFF  5E0,5E2
327C:  MOVFF  5E1,5E3
3280:  MOVLW  1E
3282:  MOVWF  xE4
3284:  CLRF   xE5
3286:  MOVLB  0
3288:  CALL   186C
....................                } 
....................             } 
328C:  MOVLB  5
328E:  INCF   x3A,F
3290:  BRA    31DC
....................          } 
....................       } 
....................          else 
3292:  BRA    3298
....................             {Flanco = 0;} 
3294:  MOVLB  5
3296:  BCF    x29.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3298:  BSF    F92.1
329A:  BTFSS  F80.1
329C:  BRA    336A
....................       { 
....................          if(Flanco2 == 0) 
329E:  BTFSC  x29.2
32A0:  BRA    3368
....................             {Flanco2 = 1;delay_ms(30); 
32A2:  BSF    x29.2
32A4:  MOVLW  1E
32A6:  MOVWF  xE1
32A8:  MOVLB  0
32AA:  CALL   0F72
....................                for(i=1;i<=4;i++) 
32AE:  MOVLW  01
32B0:  MOVLB  5
32B2:  MOVWF  x3A
32B4:  MOVF   x3A,W
32B6:  SUBLW  04
32B8:  BNC   3368
....................                { 
....................                   if(unidad==i) 
32BA:  MOVF   x3A,W
32BC:  SUBWF  x37,W
32BE:  BNZ   3332
....................                   {Contrasena[i-1]--;  
32C0:  MOVLW  01
32C2:  SUBWF  x3A,W
32C4:  CLRF   03
32C6:  ADDLW  64
32C8:  MOVWF  FE9
32CA:  MOVLW  05
32CC:  ADDWFC 03,W
32CE:  MOVWF  FEA
32D0:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
32D2:  MOVLW  01
32D4:  SUBWF  x3A,W
32D6:  CLRF   03
32D8:  ADDLW  64
32DA:  MOVWF  FE9
32DC:  MOVLW  05
32DE:  ADDWFC 03,W
32E0:  MOVWF  FEA
32E2:  BTFSC  FEF.7
32E4:  BRA    32E8
32E6:  BRA    32FC
....................                         {Contrasena[i-1]=9;} 
32E8:  MOVLW  01
32EA:  SUBWF  x3A,W
32EC:  CLRF   03
32EE:  ADDLW  64
32F0:  MOVWF  FE9
32F2:  MOVLW  05
32F4:  ADDWFC 03,W
32F6:  MOVWF  FEA
32F8:  MOVLW  09
32FA:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
32FC:  MOVLW  01
32FE:  SUBWF  x3A,W
3300:  CLRF   03
3302:  ADDLW  64
3304:  MOVWF  FE9
3306:  MOVLW  05
3308:  ADDWFC 03,W
330A:  MOVWF  FEA
330C:  MOVFF  FEF,5E0
3310:  MOVF   x3A,W
3312:  MULLW  14
3314:  MOVFF  FF3,5E1
3318:  MOVFF  5E0,5E2
331C:  MOVFF  5E1,5E3
3320:  MOVLW  1E
3322:  MOVWF  xE4
3324:  MOVLW  01
3326:  MOVWF  xE5
3328:  MOVLB  0
332A:  CALL   186C
....................                   else 
332E:  BRA    3362
3330:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3332:  MOVLW  01
3334:  SUBWF  x3A,W
3336:  CLRF   03
3338:  ADDLW  64
333A:  MOVWF  FE9
333C:  MOVLW  05
333E:  ADDWFC 03,W
3340:  MOVWF  FEA
3342:  MOVFF  FEF,5E0
3346:  MOVF   x3A,W
3348:  MULLW  14
334A:  MOVFF  FF3,5E1
334E:  MOVFF  5E0,5E2
3352:  MOVFF  5E1,5E3
3356:  MOVLW  1E
3358:  MOVWF  xE4
335A:  CLRF   xE5
335C:  MOVLB  0
335E:  CALL   186C
....................                }       
3362:  MOVLB  5
3364:  INCF   x3A,F
3366:  BRA    32B4
....................             }      
....................       } 
....................          else 
3368:  BRA    336C
....................             {Flanco2 = 0;}   
336A:  BCF    x29.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
336C:  BSF    F92.2
336E:  BTFSS  F80.2
3370:  BRA    3404
....................       { 
....................          if(Flanco1 == 0) 
3372:  BTFSC  x29.1
3374:  BRA    3402
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
3376:  BSF    x29.1
3378:  MOVLW  1E
337A:  MOVWF  xE1
337C:  MOVLB  0
337E:  CALL   0F72
3382:  MOVLB  5
3384:  INCF   x37,F
....................                for(i=1;i<=4;i++) 
3386:  MOVLW  01
3388:  MOVWF  x3A
338A:  MOVF   x3A,W
338C:  SUBLW  04
338E:  BNC   3402
....................                { 
....................                   if(unidad==i) 
3390:  MOVF   x3A,W
3392:  SUBWF  x37,W
3394:  BNZ   33CC
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
3396:  MOVLW  01
3398:  SUBWF  x3A,W
339A:  CLRF   03
339C:  ADDLW  64
339E:  MOVWF  FE9
33A0:  MOVLW  05
33A2:  ADDWFC 03,W
33A4:  MOVWF  FEA
33A6:  MOVFF  FEF,5E0
33AA:  MOVF   x3A,W
33AC:  MULLW  14
33AE:  MOVFF  FF3,5E1
33B2:  MOVFF  5E0,5E2
33B6:  MOVFF  5E1,5E3
33BA:  MOVLW  1E
33BC:  MOVWF  xE4
33BE:  MOVLW  01
33C0:  MOVWF  xE5
33C2:  MOVLB  0
33C4:  CALL   186C
....................                   else 
33C8:  BRA    33FC
33CA:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
33CC:  MOVLW  01
33CE:  SUBWF  x3A,W
33D0:  CLRF   03
33D2:  ADDLW  64
33D4:  MOVWF  FE9
33D6:  MOVLW  05
33D8:  ADDWFC 03,W
33DA:  MOVWF  FEA
33DC:  MOVFF  FEF,5E0
33E0:  MOVF   x3A,W
33E2:  MULLW  14
33E4:  MOVFF  FF3,5E1
33E8:  MOVFF  5E0,5E2
33EC:  MOVFF  5E1,5E3
33F0:  MOVLW  1E
33F2:  MOVWF  xE4
33F4:  CLRF   xE5
33F6:  MOVLB  0
33F8:  CALL   186C
....................                } 
33FC:  MOVLB  5
33FE:  INCF   x3A,F
3400:  BRA    338A
....................             } 
....................       } 
....................          else 
3402:  BRA    3406
....................             {Flanco1 = 0;}   
3404:  BCF    x29.1
....................      
....................       if(unidad>4) 
3406:  MOVF   x37,W
3408:  SUBLW  04
340A:  BTFSC  FD8.0
340C:  BRA    36F4
....................       {glcd_fillScreen(OFF);unidad=4; 
340E:  CLRF   xE1
3410:  MOVLB  0
3412:  CALL   0FDC
3416:  MOVLW  04
3418:  MOVLB  5
341A:  MOVWF  x37
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
341C:  MOVF   x64,W
341E:  SUBLW  03
3420:  BNZ   3508
3422:  MOVF   x65,W
3424:  SUBLW  08
3426:  BNZ   3508
3428:  MOVF   x66,W
342A:  SUBLW  09
342C:  BNZ   3508
342E:  MOVF   x67,W
3430:  SUBLW  02
3432:  BNZ   3508
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3434:  MOVLW  0A
3436:  MOVWF  FA9
3438:  CLRF   FA8
343A:  BCF    FA6.6
343C:  BCF    FA6.7
343E:  BSF    FA6.2
3440:  MOVF   FF2,W
3442:  MOVWF  00
3444:  BCF    FF2.7
3446:  MOVLB  F
3448:  MOVLW  55
344A:  MOVWF  FA7
344C:  MOVLW  AA
344E:  MOVWF  FA7
3450:  BSF    FA6.1
3452:  BTFSC  FA6.1
3454:  BRA    3452
3456:  BCF    FA6.2
3458:  MOVF   00,W
345A:  IORWF  FF2,F
345C:  MOVLW  14
345E:  MOVLB  5
3460:  MOVWF  xE1
3462:  MOVLB  0
3464:  CALL   0F72
3468:  MOVLW  0B
346A:  MOVWF  FA9
346C:  CLRF   FA8
346E:  BCF    FA6.6
3470:  BCF    FA6.7
3472:  BSF    FA6.2
3474:  MOVF   FF2,W
3476:  MOVWF  00
3478:  BCF    FF2.7
347A:  MOVLB  F
347C:  MOVLW  55
347E:  MOVWF  FA7
3480:  MOVLW  AA
3482:  MOVWF  FA7
3484:  BSF    FA6.1
3486:  BTFSC  FA6.1
3488:  BRA    3486
348A:  BCF    FA6.2
348C:  MOVF   00,W
348E:  IORWF  FF2,F
3490:  MOVLW  14
3492:  MOVLB  5
3494:  MOVWF  xE1
3496:  MOVLB  0
3498:  CALL   0F72
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
349C:  MOVLW  0C
349E:  MOVWF  FA9
34A0:  CLRF   FA8
34A2:  BCF    FA6.6
34A4:  BCF    FA6.7
34A6:  BSF    FA6.2
34A8:  MOVF   FF2,W
34AA:  MOVWF  00
34AC:  BCF    FF2.7
34AE:  MOVLB  F
34B0:  MOVLW  55
34B2:  MOVWF  FA7
34B4:  MOVLW  AA
34B6:  MOVWF  FA7
34B8:  BSF    FA6.1
34BA:  BTFSC  FA6.1
34BC:  BRA    34BA
34BE:  BCF    FA6.2
34C0:  MOVF   00,W
34C2:  IORWF  FF2,F
34C4:  MOVLW  14
34C6:  MOVLB  5
34C8:  MOVWF  xE1
34CA:  MOVLB  0
34CC:  CALL   0F72
34D0:  MOVLW  0D
34D2:  MOVWF  FA9
34D4:  CLRF   FA8
34D6:  BCF    FA6.6
34D8:  BCF    FA6.7
34DA:  BSF    FA6.2
34DC:  MOVF   FF2,W
34DE:  MOVWF  00
34E0:  BCF    FF2.7
34E2:  MOVLB  F
34E4:  MOVLW  55
34E6:  MOVWF  FA7
34E8:  MOVLW  AA
34EA:  MOVWF  FA7
34EC:  BSF    FA6.1
34EE:  BTFSC  FA6.1
34F0:  BRA    34EE
34F2:  BCF    FA6.2
34F4:  MOVF   00,W
34F6:  IORWF  FF2,F
34F8:  MOVLW  14
34FA:  MOVLB  5
34FC:  MOVWF  xE1
34FE:  MOVLB  0
3500:  CALL   0F72
....................              reset_cpu();}         
3504:  RESET
3506:  MOVLB  5
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
3508:  MOVF   x68,W
350A:  SUBWF  x64,W
350C:  BNZ   35DC
350E:  MOVF   x69,W
3510:  SUBWF  x65,W
3512:  BNZ   35DC
3514:  MOVF   x6A,W
3516:  SUBWF  x66,W
3518:  BNZ   35DC
351A:  MOVF   x6B,W
351C:  SUBWF  x67,W
351E:  BNZ   35DC
....................          { 
....................             glcd_fillScreen(OFF); 
3520:  CLRF   xE1
3522:  MOVLB  0
3524:  CALL   0FDC
....................             strcpy(Menus.Letra,"Clave"); 
3528:  MOVLW  05
352A:  MOVWF  FEA
352C:  MOVLW  C0
352E:  MOVWF  FE9
3530:  MOVFF  FF2,5E0
3534:  BCF    FF2.7
3536:  MOVLW  00
3538:  CALL   0758
353C:  TBLRD*-
353E:  TBLRD*+
3540:  MOVF   FF5,W
3542:  MOVWF  FEE
3544:  IORLW  00
3546:  BNZ   353E
3548:  MOVLB  5
354A:  BTFSC  xE0.7
354C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
354E:  MOVLW  05
3550:  MOVWF  xE1
3552:  MOVLW  C0
3554:  MOVWF  xE0
3556:  MOVLW  1E
3558:  MOVWF  xE2
355A:  CLRF   xE3
355C:  CLRF   xE4
355E:  MOVLW  02
3560:  MOVWF  xE5
3562:  MOVLB  0
3564:  CALL   1646
....................             strcpy(Menus.Letra,"Correcta"); 
3568:  MOVLW  05
356A:  MOVWF  FEA
356C:  MOVLW  C0
356E:  MOVWF  FE9
3570:  MOVFF  FF2,5E0
3574:  BCF    FF2.7
3576:  MOVLW  00
3578:  CALL   0778
357C:  TBLRD*-
357E:  TBLRD*+
3580:  MOVF   FF5,W
3582:  MOVWF  FEE
3584:  IORLW  00
3586:  BNZ   357E
3588:  MOVLB  5
358A:  BTFSC  xE0.7
358C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
358E:  MOVLW  05
3590:  MOVWF  xE1
3592:  MOVLW  C0
3594:  MOVWF  xE0
3596:  MOVLW  0F
3598:  MOVWF  xE2
359A:  MOVLW  1E
359C:  MOVWF  xE3
359E:  CLRF   xE4
35A0:  MOVLW  02
35A2:  MOVWF  xE5
35A4:  MOVLB  0
35A6:  CALL   1646
....................             Menu=1;glcd_update();delay_ms(1000); 
35AA:  MOVLW  01
35AC:  MOVLB  5
35AE:  MOVWF  x36
35B0:  MOVLB  0
35B2:  CALL   1036
35B6:  MOVLW  04
35B8:  MOVLB  5
35BA:  MOVWF  xE0
35BC:  MOVLW  FA
35BE:  MOVWF  xE1
35C0:  MOVLB  0
35C2:  CALL   0F72
35C6:  MOVLB  5
35C8:  DECFSZ xE0,F
35CA:  BRA    35BC
....................             glcd_fillScreen(OFF);unidad=1; 
35CC:  CLRF   xE1
35CE:  MOVLB  0
35D0:  CALL   0FDC
35D4:  MOVLW  01
35D6:  MOVLB  5
35D8:  MOVWF  x37
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
35DA:  BRA    36F4
....................          { 
....................             glcd_fillScreen(OFF); 
35DC:  CLRF   xE1
35DE:  MOVLB  0
35E0:  CALL   0FDC
....................             strcpy(Menus.Letra,"Clave"); 
35E4:  MOVLW  05
35E6:  MOVWF  FEA
35E8:  MOVLW  C0
35EA:  MOVWF  FE9
35EC:  MOVFF  FF2,5E0
35F0:  BCF    FF2.7
35F2:  MOVLW  00
35F4:  CALL   0758
35F8:  TBLRD*-
35FA:  TBLRD*+
35FC:  MOVF   FF5,W
35FE:  MOVWF  FEE
3600:  IORLW  00
3602:  BNZ   35FA
3604:  MOVLB  5
3606:  BTFSC  xE0.7
3608:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
360A:  MOVLW  05
360C:  MOVWF  xE1
360E:  MOVLW  C0
3610:  MOVWF  xE0
3612:  MOVLW  1E
3614:  MOVWF  xE2
3616:  CLRF   xE3
3618:  CLRF   xE4
361A:  MOVLW  02
361C:  MOVWF  xE5
361E:  MOVLB  0
3620:  CALL   1646
....................             strcpy(Menus.Letra,"Incorrecta"); 
3624:  MOVLW  05
3626:  MOVWF  FEA
3628:  MOVLW  C0
362A:  MOVWF  FE9
362C:  MOVFF  FF2,5E0
3630:  BCF    FF2.7
3632:  MOVLW  00
3634:  CALL   079C
3638:  TBLRD*-
363A:  TBLRD*+
363C:  MOVF   FF5,W
363E:  MOVWF  FEE
3640:  IORLW  00
3642:  BNZ   363A
3644:  MOVLB  5
3646:  BTFSC  xE0.7
3648:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
364A:  MOVLW  05
364C:  MOVWF  xE1
364E:  MOVLW  C0
3650:  MOVWF  xE0
3652:  CLRF   xE2
3654:  MOVLW  1E
3656:  MOVWF  xE3
3658:  CLRF   xE4
365A:  MOVLW  02
365C:  MOVWF  xE5
365E:  MOVLB  0
3660:  CALL   1646
....................             Menu=0;glcd_update();delay_ms(1000); 
3664:  MOVLB  5
3666:  CLRF   x36
3668:  MOVLB  0
366A:  CALL   1036
366E:  MOVLW  04
3670:  MOVLB  5
3672:  MOVWF  xE0
3674:  MOVLW  FA
3676:  MOVWF  xE1
3678:  MOVLB  0
367A:  CALL   0F72
367E:  MOVLB  5
3680:  DECFSZ xE0,F
3682:  BRA    3674
....................             glcd_fillScreen(OFF);unidad=1; 
3684:  CLRF   xE1
3686:  MOVLB  0
3688:  CALL   0FDC
368C:  MOVLW  01
368E:  MOVLB  5
3690:  MOVWF  x37
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3692:  CLRF   x64
3694:  CLRF   x65
3696:  CLRF   x66
3698:  CLRF   x67
....................             displayContrasena(Contrasena[0],20,30,1); 
369A:  MOVFF  564,5E2
369E:  MOVLW  14
36A0:  MOVWF  xE3
36A2:  MOVLW  1E
36A4:  MOVWF  xE4
36A6:  MOVLW  01
36A8:  MOVWF  xE5
36AA:  MOVLB  0
36AC:  CALL   186C
....................             displayContrasena(Contrasena[1],40,30,0); 
36B0:  MOVFF  565,5E2
36B4:  MOVLW  28
36B6:  MOVLB  5
36B8:  MOVWF  xE3
36BA:  MOVLW  1E
36BC:  MOVWF  xE4
36BE:  CLRF   xE5
36C0:  MOVLB  0
36C2:  CALL   186C
....................             displayContrasena(Contrasena[2],60,30,0); 
36C6:  MOVFF  566,5E2
36CA:  MOVLW  3C
36CC:  MOVLB  5
36CE:  MOVWF  xE3
36D0:  MOVLW  1E
36D2:  MOVWF  xE4
36D4:  CLRF   xE5
36D6:  MOVLB  0
36D8:  CALL   186C
....................             displayContrasena(Contrasena[3],80,30,0); 
36DC:  MOVFF  567,5E2
36E0:  MOVLW  50
36E2:  MOVLB  5
36E4:  MOVWF  xE3
36E6:  MOVLW  1E
36E8:  MOVWF  xE4
36EA:  CLRF   xE5
36EC:  MOVLB  0
36EE:  CALL   186C
36F2:  MOVLB  5
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
36F4:  DECFSZ x36,W
36F6:  BRA    3B24
....................        
....................       if(visual==1) 
36F8:  BTFSS  x29.4
36FA:  BRA    3AB2
....................       { 
....................          if(Opcion>6) 
36FC:  MOVF   x3D,W
36FE:  SUBLW  06
3700:  BC    3706
....................          {Opcion=1;} 
3702:  MOVLW  01
3704:  MOVWF  x3D
....................          if(Opcion<1) 
3706:  MOVF   x3D,F
3708:  BNZ   370E
....................          {Opcion=6;} 
370A:  MOVLW  06
370C:  MOVWF  x3D
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
370E:  MOVLW  05
3710:  MOVWF  FEA
3712:  MOVLW  C0
3714:  MOVWF  FE9
3716:  MOVFF  FF2,5E0
371A:  BCF    FF2.7
371C:  MOVLW  00
371E:  MOVLB  0
3720:  CALL   07C2
3724:  TBLRD*-
3726:  TBLRD*+
3728:  MOVF   FF5,W
372A:  MOVWF  FEE
372C:  IORLW  00
372E:  BNZ   3726
3730:  MOVLB  5
3732:  BTFSC  xE0.7
3734:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
3736:  MOVLW  05
3738:  MOVWF  xE1
373A:  MOVLW  C0
373C:  MOVWF  xE0
373E:  MOVLW  1E
3740:  MOVWF  xE2
3742:  CLRF   xE3
3744:  MOVLW  01
3746:  MOVWF  xE4
3748:  MOVWF  xE5
374A:  MOVLB  0
374C:  CALL   1646
....................        
....................          if(Opcion==1)    
3750:  MOVLB  5
3752:  DECFSZ x3D,W
3754:  BRA    379C
....................             {strcpy(Menus.Letra,"Caucho"); 
3756:  MOVLW  05
3758:  MOVWF  FEA
375A:  MOVLW  C0
375C:  MOVWF  FE9
375E:  MOVFF  FF2,5E0
3762:  BCF    FF2.7
3764:  MOVLW  00
3766:  MOVLB  0
3768:  CALL   07EC
376C:  TBLRD*-
376E:  TBLRD*+
3770:  MOVF   FF5,W
3772:  MOVWF  FEE
3774:  IORLW  00
3776:  BNZ   376E
3778:  MOVLB  5
377A:  BTFSC  xE0.7
377C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
377E:  MOVLW  05
3780:  MOVWF  xE1
3782:  MOVLW  C0
3784:  MOVWF  xE0
3786:  CLRF   xE2
3788:  MOVLW  0A
378A:  MOVWF  xE3
378C:  MOVLW  01
378E:  MOVWF  xE4
3790:  MOVWF  xE5
3792:  MOVLB  0
3794:  CALL   1646
....................          else 
3798:  BRA    37DE
379A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Caucho"); 
379C:  MOVLW  05
379E:  MOVWF  FEA
37A0:  MOVLW  C0
37A2:  MOVWF  FE9
37A4:  MOVFF  FF2,5E0
37A8:  BCF    FF2.7
37AA:  MOVLW  00
37AC:  MOVLB  0
37AE:  CALL   07EC
37B2:  TBLRD*-
37B4:  TBLRD*+
37B6:  MOVF   FF5,W
37B8:  MOVWF  FEE
37BA:  IORLW  00
37BC:  BNZ   37B4
37BE:  MOVLB  5
37C0:  BTFSC  xE0.7
37C2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
37C4:  MOVLW  05
37C6:  MOVWF  xE1
37C8:  MOVLW  C0
37CA:  MOVWF  xE0
37CC:  CLRF   xE2
37CE:  MOVLW  0A
37D0:  MOVWF  xE3
37D2:  CLRF   xE4
37D4:  MOVLW  01
37D6:  MOVWF  xE5
37D8:  MOVLB  0
37DA:  CALL   1646
....................           
....................          if(Opcion==2)    
37DE:  MOVLB  5
37E0:  MOVF   x3D,W
37E2:  SUBLW  02
37E4:  BNZ   382C
....................             {strcpy(Menus.Letra,"Liquidos"); 
37E6:  MOVLW  05
37E8:  MOVWF  FEA
37EA:  MOVLW  C0
37EC:  MOVWF  FE9
37EE:  MOVFF  FF2,5E0
37F2:  BCF    FF2.7
37F4:  MOVLW  00
37F6:  MOVLB  0
37F8:  CALL   080E
37FC:  TBLRD*-
37FE:  TBLRD*+
3800:  MOVF   FF5,W
3802:  MOVWF  FEE
3804:  IORLW  00
3806:  BNZ   37FE
3808:  MOVLB  5
380A:  BTFSC  xE0.7
380C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
380E:  MOVLW  05
3810:  MOVWF  xE1
3812:  MOVLW  C0
3814:  MOVWF  xE0
3816:  CLRF   xE2
3818:  MOVLW  13
381A:  MOVWF  xE3
381C:  MOVLW  01
381E:  MOVWF  xE4
3820:  MOVWF  xE5
3822:  MOVLB  0
3824:  CALL   1646
....................          else 
3828:  BRA    386E
382A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Liquidos"); 
382C:  MOVLW  05
382E:  MOVWF  FEA
3830:  MOVLW  C0
3832:  MOVWF  FE9
3834:  MOVFF  FF2,5E0
3838:  BCF    FF2.7
383A:  MOVLW  00
383C:  MOVLB  0
383E:  CALL   080E
3842:  TBLRD*-
3844:  TBLRD*+
3846:  MOVF   FF5,W
3848:  MOVWF  FEE
384A:  IORLW  00
384C:  BNZ   3844
384E:  MOVLB  5
3850:  BTFSC  xE0.7
3852:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
3854:  MOVLW  05
3856:  MOVWF  xE1
3858:  MOVLW  C0
385A:  MOVWF  xE0
385C:  CLRF   xE2
385E:  MOVLW  13
3860:  MOVWF  xE3
3862:  CLRF   xE4
3864:  MOVLW  01
3866:  MOVWF  xE5
3868:  MOVLB  0
386A:  CALL   1646
....................              
....................           if(Opcion==3)    
386E:  MOVLB  5
3870:  MOVF   x3D,W
3872:  SUBLW  03
3874:  BNZ   38BC
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
3876:  MOVLW  05
3878:  MOVWF  FEA
387A:  MOVLW  C0
387C:  MOVWF  FE9
387E:  MOVFF  FF2,5E0
3882:  BCF    FF2.7
3884:  MOVLW  00
3886:  MOVLB  0
3888:  CALL   0832
388C:  TBLRD*-
388E:  TBLRD*+
3890:  MOVF   FF5,W
3892:  MOVWF  FEE
3894:  IORLW  00
3896:  BNZ   388E
3898:  MOVLB  5
389A:  BTFSC  xE0.7
389C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
389E:  MOVLW  05
38A0:  MOVWF  xE1
38A2:  MOVLW  C0
38A4:  MOVWF  xE0
38A6:  CLRF   xE2
38A8:  MOVLW  1C
38AA:  MOVWF  xE3
38AC:  MOVLW  01
38AE:  MOVWF  xE4
38B0:  MOVWF  xE5
38B2:  MOVLB  0
38B4:  CALL   1646
....................          else 
38B8:  BRA    38FE
38BA:  MOVLB  5
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
38BC:  MOVLW  05
38BE:  MOVWF  FEA
38C0:  MOVLW  C0
38C2:  MOVWF  FE9
38C4:  MOVFF  FF2,5E0
38C8:  BCF    FF2.7
38CA:  MOVLW  00
38CC:  MOVLB  0
38CE:  CALL   0832
38D2:  TBLRD*-
38D4:  TBLRD*+
38D6:  MOVF   FF5,W
38D8:  MOVWF  FEE
38DA:  IORLW  00
38DC:  BNZ   38D4
38DE:  MOVLB  5
38E0:  BTFSC  xE0.7
38E2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
38E4:  MOVLW  05
38E6:  MOVWF  xE1
38E8:  MOVLW  C0
38EA:  MOVWF  xE0
38EC:  CLRF   xE2
38EE:  MOVLW  1C
38F0:  MOVWF  xE3
38F2:  CLRF   xE4
38F4:  MOVLW  01
38F6:  MOVWF  xE5
38F8:  MOVLB  0
38FA:  CALL   1646
....................              
....................          if(Opcion==4)    
38FE:  MOVLB  5
3900:  MOVF   x3D,W
3902:  SUBLW  04
3904:  BNZ   394C
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
3906:  MOVLW  05
3908:  MOVWF  FEA
390A:  MOVLW  C0
390C:  MOVWF  FE9
390E:  MOVFF  FF2,5E0
3912:  BCF    FF2.7
3914:  MOVLW  00
3916:  MOVLB  0
3918:  CALL   0860
391C:  TBLRD*-
391E:  TBLRD*+
3920:  MOVF   FF5,W
3922:  MOVWF  FEE
3924:  IORLW  00
3926:  BNZ   391E
3928:  MOVLB  5
392A:  BTFSC  xE0.7
392C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
392E:  MOVLW  05
3930:  MOVWF  xE1
3932:  MOVLW  C0
3934:  MOVWF  xE0
3936:  CLRF   xE2
3938:  MOVLW  25
393A:  MOVWF  xE3
393C:  MOVLW  01
393E:  MOVWF  xE4
3940:  MOVWF  xE5
3942:  MOVLB  0
3944:  CALL   1646
....................          else 
3948:  BRA    398E
394A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
394C:  MOVLW  05
394E:  MOVWF  FEA
3950:  MOVLW  C0
3952:  MOVWF  FE9
3954:  MOVFF  FF2,5E0
3958:  BCF    FF2.7
395A:  MOVLW  00
395C:  MOVLB  0
395E:  CALL   0860
3962:  TBLRD*-
3964:  TBLRD*+
3966:  MOVF   FF5,W
3968:  MOVWF  FEE
396A:  IORLW  00
396C:  BNZ   3964
396E:  MOVLB  5
3970:  BTFSC  xE0.7
3972:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
3974:  MOVLW  05
3976:  MOVWF  xE1
3978:  MOVLW  C0
397A:  MOVWF  xE0
397C:  CLRF   xE2
397E:  MOVLW  25
3980:  MOVWF  xE3
3982:  CLRF   xE4
3984:  MOVLW  01
3986:  MOVWF  xE5
3988:  MOVLB  0
398A:  CALL   1646
....................              
....................          if(Opcion==5)    
398E:  MOVLB  5
3990:  MOVF   x3D,W
3992:  SUBLW  05
3994:  BNZ   39DC
....................             {strcpy(Menus.Letra,"Personalizado"); 
3996:  MOVLW  05
3998:  MOVWF  FEA
399A:  MOVLW  C0
399C:  MOVWF  FE9
399E:  MOVFF  FF2,5E0
39A2:  BCF    FF2.7
39A4:  MOVLW  00
39A6:  MOVLB  0
39A8:  CALL   0890
39AC:  TBLRD*-
39AE:  TBLRD*+
39B0:  MOVF   FF5,W
39B2:  MOVWF  FEE
39B4:  IORLW  00
39B6:  BNZ   39AE
39B8:  MOVLB  5
39BA:  BTFSC  xE0.7
39BC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
39BE:  MOVLW  05
39C0:  MOVWF  xE1
39C2:  MOVLW  C0
39C4:  MOVWF  xE0
39C6:  CLRF   xE2
39C8:  MOVLW  2E
39CA:  MOVWF  xE3
39CC:  MOVLW  01
39CE:  MOVWF  xE4
39D0:  MOVWF  xE5
39D2:  MOVLB  0
39D4:  CALL   1646
....................          else 
39D8:  BRA    3A1E
39DA:  MOVLB  5
....................             {strcpy(Menus.Letra,"Personalizado"); 
39DC:  MOVLW  05
39DE:  MOVWF  FEA
39E0:  MOVLW  C0
39E2:  MOVWF  FE9
39E4:  MOVFF  FF2,5E0
39E8:  BCF    FF2.7
39EA:  MOVLW  00
39EC:  MOVLB  0
39EE:  CALL   0890
39F2:  TBLRD*-
39F4:  TBLRD*+
39F6:  MOVF   FF5,W
39F8:  MOVWF  FEE
39FA:  IORLW  00
39FC:  BNZ   39F4
39FE:  MOVLB  5
3A00:  BTFSC  xE0.7
3A02:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
3A04:  MOVLW  05
3A06:  MOVWF  xE1
3A08:  MOVLW  C0
3A0A:  MOVWF  xE0
3A0C:  CLRF   xE2
3A0E:  MOVLW  2E
3A10:  MOVWF  xE3
3A12:  CLRF   xE4
3A14:  MOVLW  01
3A16:  MOVWF  xE5
3A18:  MOVLB  0
3A1A:  CALL   1646
....................              
....................          if(Opcion==6)    
3A1E:  MOVLB  5
3A20:  MOVF   x3D,W
3A22:  SUBLW  06
3A24:  BNZ   3A6C
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3A26:  MOVLW  05
3A28:  MOVWF  FEA
3A2A:  MOVLW  C0
3A2C:  MOVWF  FE9
3A2E:  MOVFF  FF2,5E0
3A32:  BCF    FF2.7
3A34:  MOVLW  00
3A36:  MOVLB  0
3A38:  CALL   08B8
3A3C:  TBLRD*-
3A3E:  TBLRD*+
3A40:  MOVF   FF5,W
3A42:  MOVWF  FEE
3A44:  IORLW  00
3A46:  BNZ   3A3E
3A48:  MOVLB  5
3A4A:  BTFSC  xE0.7
3A4C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
3A4E:  MOVLW  05
3A50:  MOVWF  xE1
3A52:  MOVLW  C0
3A54:  MOVWF  xE0
3A56:  CLRF   xE2
3A58:  MOVLW  37
3A5A:  MOVWF  xE3
3A5C:  MOVLW  01
3A5E:  MOVWF  xE4
3A60:  MOVWF  xE5
3A62:  MOVLB  0
3A64:  CALL   1646
....................          else 
3A68:  BRA    3AAE
3A6A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3A6C:  MOVLW  05
3A6E:  MOVWF  FEA
3A70:  MOVLW  C0
3A72:  MOVWF  FE9
3A74:  MOVFF  FF2,5E0
3A78:  BCF    FF2.7
3A7A:  MOVLW  00
3A7C:  MOVLB  0
3A7E:  CALL   08B8
3A82:  TBLRD*-
3A84:  TBLRD*+
3A86:  MOVF   FF5,W
3A88:  MOVWF  FEE
3A8A:  IORLW  00
3A8C:  BNZ   3A84
3A8E:  MOVLB  5
3A90:  BTFSC  xE0.7
3A92:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
3A94:  MOVLW  05
3A96:  MOVWF  xE1
3A98:  MOVLW  C0
3A9A:  MOVWF  xE0
3A9C:  CLRF   xE2
3A9E:  MOVLW  37
3AA0:  MOVWF  xE3
3AA2:  CLRF   xE4
3AA4:  MOVLW  01
3AA6:  MOVWF  xE5
3AA8:  MOVLB  0
3AAA:  CALL   1646
....................             visual=0; 
3AAE:  MOVLB  5
3AB0:  BCF    x29.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
3AB2:  BSF    F92.0
3AB4:  BTFSS  F80.0
3AB6:  BRA    3AD0
....................          {  if(Flanco == 0)  
3AB8:  BTFSC  x29.0
3ABA:  BRA    3ACE
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3ABC:  BSF    x29.0
3ABE:  MOVLW  1E
3AC0:  MOVWF  xE1
3AC2:  MOVLB  0
3AC4:  CALL   0F72
3AC8:  MOVLB  5
3ACA:  DECF   x3D,F
3ACC:  BSF    x29.4
....................                } 
....................          } 
....................             else 
3ACE:  BRA    3AD2
....................                {Flanco = 0;} 
3AD0:  BCF    x29.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
3AD2:  BSF    F92.1
3AD4:  BTFSS  F80.1
3AD6:  BRA    3AF0
....................          {  if(Flanco2 == 0)  
3AD8:  BTFSC  x29.2
3ADA:  BRA    3AEE
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
3ADC:  BSF    x29.2
3ADE:  MOVLW  1E
3AE0:  MOVWF  xE1
3AE2:  MOVLB  0
3AE4:  CALL   0F72
3AE8:  MOVLB  5
3AEA:  INCF   x3D,F
3AEC:  BSF    x29.4
....................                }      
....................          } 
....................             else 
3AEE:  BRA    3AF2
....................                {Flanco2 = 0;}   
3AF0:  BCF    x29.2
....................                 
....................        if(RIGHT)//Si oprime SET 
3AF2:  BSF    F92.2
3AF4:  BTFSS  F80.2
3AF6:  BRA    3B22
....................          {  if(Flanco1 == 0)  
3AF8:  BTFSC  x29.1
3AFA:  BRA    3B20
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
3AFC:  BSF    x29.1
3AFE:  MOVLW  1E
3B00:  MOVWF  xE1
3B02:  MOVLB  0
3B04:  CALL   0F72
3B08:  MOVLW  03
3B0A:  MOVLB  5
3B0C:  ADDWF  x3D,W
3B0E:  MOVWF  x36
3B10:  MOVLW  01
3B12:  MOVWF  x3D
3B14:  CLRF   xE1
3B16:  MOVLB  0
3B18:  CALL   0FDC
3B1C:  MOVLB  5
3B1E:  BSF    x29.4
....................                } 
....................          } 
....................             else 
3B20:  BRA    3B24
....................                {Flanco1 = 0;}   
3B22:  BCF    x29.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
3B24:  MOVF   x36,W
3B26:  SUBLW  04
3B28:  BTFSS  FD8.2
3B2A:  BRA    3E4E
....................        
....................       if(visual==1) 
3B2C:  BTFSS  x29.4
3B2E:  BRA    3C82
....................       { 
....................          glcd_imagen(2); //Guante 
3B30:  MOVLW  02
3B32:  MOVWF  xE0
3B34:  MOVLB  0
3B36:  CALL   2088
....................          strcpy(Menus.Letra,"Caucho"); 
3B3A:  MOVLW  05
3B3C:  MOVWF  FEA
3B3E:  MOVLW  C0
3B40:  MOVWF  FE9
3B42:  MOVFF  FF2,5E0
3B46:  BCF    FF2.7
3B48:  MOVLW  00
3B4A:  CALL   07EC
3B4E:  TBLRD*-
3B50:  TBLRD*+
3B52:  MOVF   FF5,W
3B54:  MOVWF  FEE
3B56:  IORLW  00
3B58:  BNZ   3B50
3B5A:  MOVLB  5
3B5C:  BTFSC  xE0.7
3B5E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3B60:  MOVLW  05
3B62:  MOVWF  xE1
3B64:  MOVLW  C0
3B66:  MOVWF  xE0
3B68:  MOVLW  14
3B6A:  MOVWF  xE2
3B6C:  CLRF   xE3
3B6E:  MOVLW  01
3B70:  MOVWF  xE4
3B72:  MOVLW  02
3B74:  MOVWF  xE5
3B76:  MOVLB  0
3B78:  CALL   1646
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3B7C:  MOVLW  05
3B7E:  MOVWF  FEA
3B80:  MOVLW  C0
3B82:  MOVWF  FE9
3B84:  MOVFF  FF2,5E0
3B88:  BCF    FF2.7
3B8A:  MOVLW  00
3B8C:  CALL   07EC
3B90:  TBLRD*-
3B92:  TBLRD*+
3B94:  MOVF   FF5,W
3B96:  MOVWF  FEE
3B98:  IORLW  00
3B9A:  BNZ   3B92
3B9C:  MOVLB  5
3B9E:  BTFSC  xE0.7
3BA0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3BA2:  MOVLW  05
3BA4:  MOVWF  xE1
3BA6:  MOVLW  C0
3BA8:  MOVWF  xE0
3BAA:  MOVLW  07
3BAC:  MOVWF  xE2
3BAE:  MOVLW  37
3BB0:  MOVWF  xE3
3BB2:  CLRF   xE4
3BB4:  MOVLW  01
3BB6:  MOVWF  xE5
3BB8:  MOVLB  0
3BBA:  CALL   1646
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3BBE:  MOVLW  05
3BC0:  MOVWF  FEA
3BC2:  MOVLW  C0
3BC4:  MOVWF  FE9
3BC6:  MOVFF  FF2,5E0
3BCA:  BCF    FF2.7
3BCC:  MOVLW  00
3BCE:  CALL   08E0
3BD2:  TBLRD*-
3BD4:  TBLRD*+
3BD6:  MOVF   FF5,W
3BD8:  MOVWF  FEE
3BDA:  IORLW  00
3BDC:  BNZ   3BD4
3BDE:  MOVLB  5
3BE0:  BTFSC  xE0.7
3BE2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3BE4:  MOVLW  05
3BE6:  MOVWF  xE1
3BE8:  MOVLW  C0
3BEA:  MOVWF  xE0
3BEC:  CLRF   xE2
3BEE:  MOVLW  1A
3BF0:  MOVWF  xE3
3BF2:  CLRF   xE4
3BF4:  MOVLW  01
3BF6:  MOVWF  xE5
3BF8:  MOVLB  0
3BFA:  CALL   1646
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
3BFE:  MOVLW  05
3C00:  MOVWF  FEA
3C02:  MOVLW  C0
3C04:  MOVWF  FE9
3C06:  MOVFF  FF2,5E0
3C0A:  BCF    FF2.7
3C0C:  MOVLW  00
3C0E:  CALL   090C
3C12:  TBLRD*-
3C14:  TBLRD*+
3C16:  MOVF   FF5,W
3C18:  MOVWF  FEE
3C1A:  IORLW  00
3C1C:  BNZ   3C14
3C1E:  MOVLB  5
3C20:  BTFSC  xE0.7
3C22:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3C24:  MOVLW  05
3C26:  MOVWF  xE1
3C28:  MOVLW  C0
3C2A:  MOVWF  xE0
3C2C:  CLRF   xE2
3C2E:  MOVLW  24
3C30:  MOVWF  xE3
3C32:  CLRF   xE4
3C34:  MOVLW  01
3C36:  MOVWF  xE5
3C38:  MOVLB  0
3C3A:  CALL   1646
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3C3E:  MOVLW  05
3C40:  MOVWF  FEA
3C42:  MOVLW  C0
3C44:  MOVWF  FE9
3C46:  MOVFF  FF2,5E0
3C4A:  BCF    FF2.7
3C4C:  MOVLW  00
3C4E:  CALL   093C
3C52:  TBLRD*-
3C54:  TBLRD*+
3C56:  MOVF   FF5,W
3C58:  MOVWF  FEE
3C5A:  IORLW  00
3C5C:  BNZ   3C54
3C5E:  MOVLB  5
3C60:  BTFSC  xE0.7
3C62:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3C64:  MOVLW  05
3C66:  MOVWF  xE1
3C68:  MOVLW  C0
3C6A:  MOVWF  xE0
3C6C:  CLRF   xE2
3C6E:  MOVLW  2E
3C70:  MOVWF  xE3
3C72:  CLRF   xE4
3C74:  MOVLW  01
3C76:  MOVWF  xE5
3C78:  MOVLB  0
3C7A:  CALL   1646
....................          visual=0; 
3C7E:  MOVLB  5
3C80:  BCF    x29.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3C82:  BSF    F92.3
3C84:  BTFSS  F80.3
3C86:  BRA    3CA4
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3C88:  MOVLW  1E
3C8A:  MOVWF  xE1
3C8C:  MOVLB  0
3C8E:  CALL   0F72
3C92:  MOVLW  01
3C94:  MOVLB  5
3C96:  MOVWF  x36
3C98:  CLRF   xE1
3C9A:  MOVLB  0
3C9C:  CALL   0FDC
3CA0:  MOVLB  5
3CA2:  BSF    x29.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3CA4:  BSF    F92.2
3CA6:  BTFSS  F80.2
3CA8:  BRA    3E4E
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
3CAA:  CLRF   x58
3CAC:  CLRF   x59
3CAE:  MOVLW  05
3CB0:  MOVWF  x5A
3CB2:  MOVLW  02
3CB4:  MOVWF  x5B
3CB6:  BSF    x29.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3CB8:  CLRF   x60
3CBA:  CLRF   x61
3CBC:  MOVLW  05
3CBE:  MOVWF  x62
3CC0:  MOVLW  01
3CC2:  MOVWF  x63
3CC4:  CLRF   x49
3CC6:  CLRF   x48
3CC8:  MOVLW  79
3CCA:  MOVWF  x3B
3CCC:  MOVLW  14
3CCE:  MOVWF  x36
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3CD0:  MOVWF  x36
3CD2:  MOVLW  0F
3CD4:  MOVWF  xF2
3CD6:  MOVLW  12
3CD8:  MOVWF  xF3
3CDA:  MOVLW  1E
3CDC:  MOVWF  xF4
3CDE:  MOVLW  35
3CE0:  MOVWF  xF5
3CE2:  CLRF   xF6
3CE4:  MOVLW  01
3CE6:  MOVWF  xF7
3CE8:  MOVLB  0
3CEA:  CALL   1584
3CEE:  MOVLB  5
3CF0:  CLRF   x3F
3CF2:  MOVLW  C0
3CF4:  IORWF  FF2,F
3CF6:  CLRF   xE1
3CF8:  MOVLB  0
3CFA:  CALL   0FDC
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3CFE:  MOVLW  05
3D00:  MOVWF  FEA
3D02:  MOVLW  C0
3D04:  MOVWF  FE9
3D06:  MOVFF  FF2,5E0
3D0A:  BCF    FF2.7
3D0C:  MOVLW  00
3D0E:  CALL   0966
3D12:  TBLRD*-
3D14:  TBLRD*+
3D16:  MOVF   FF5,W
3D18:  MOVWF  FEE
3D1A:  IORLW  00
3D1C:  BNZ   3D14
3D1E:  MOVLB  5
3D20:  BTFSC  xE0.7
3D22:  BSF    FF2.7
3D24:  MOVLW  05
3D26:  MOVWF  xE1
3D28:  MOVLW  C0
3D2A:  MOVWF  xE0
3D2C:  CLRF   xE2
3D2E:  MOVLW  37
3D30:  MOVWF  xE3
3D32:  MOVLW  02
3D34:  MOVWF  xE4
3D36:  MOVLW  01
3D38:  MOVWF  xE5
3D3A:  MOVLB  0
3D3C:  CALL   1646
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3D40:  MOVLW  0F
3D42:  MOVLB  5
3D44:  MOVWF  xF2
3D46:  MOVLW  12
3D48:  MOVWF  xF3
3D4A:  MOVLW  1E
3D4C:  MOVWF  xF4
3D4E:  MOVLW  35
3D50:  MOVWF  xF5
3D52:  CLRF   xF6
3D54:  MOVLW  01
3D56:  MOVWF  xF7
3D58:  MOVLB  0
3D5A:  CALL   1584
....................          glcd_imagen(5); 
3D5E:  MOVLW  05
3D60:  MOVLB  5
3D62:  MOVWF  xE0
3D64:  MOVLB  0
3D66:  CALL   2088
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3D6A:  MOVLW  05
3D6C:  MOVWF  FEA
3D6E:  MOVLW  C0
3D70:  MOVWF  FE9
3D72:  MOVFF  FF2,5E0
3D76:  BCF    FF2.7
3D78:  MOVLW  00
3D7A:  CALL   098C
3D7E:  TBLRD*-
3D80:  TBLRD*+
3D82:  MOVF   FF5,W
3D84:  MOVWF  FEE
3D86:  IORLW  00
3D88:  BNZ   3D80
3D8A:  MOVLB  5
3D8C:  BTFSC  xE0.7
3D8E:  BSF    FF2.7
3D90:  MOVLW  05
3D92:  MOVWF  xE1
3D94:  MOVLW  C0
3D96:  MOVWF  xE0
3D98:  CLRF   xE2
3D9A:  CLRF   xE3
3D9C:  MOVLW  02
3D9E:  MOVWF  xE4
3DA0:  MOVLW  01
3DA2:  MOVWF  xE5
3DA4:  MOVLB  0
3DA6:  CALL   1646
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3DAA:  MOVLW  05
3DAC:  MOVWF  FEA
3DAE:  MOVLW  C0
3DB0:  MOVWF  FE9
3DB2:  MOVFF  FF2,5E0
3DB6:  BCF    FF2.7
3DB8:  MOVLW  00
3DBA:  CALL   09AE
3DBE:  TBLRD*-
3DC0:  TBLRD*+
3DC2:  MOVF   FF5,W
3DC4:  MOVWF  FEE
3DC6:  IORLW  00
3DC8:  BNZ   3DC0
3DCA:  MOVLB  5
3DCC:  BTFSC  xE0.7
3DCE:  BSF    FF2.7
3DD0:  MOVLW  05
3DD2:  MOVWF  xE1
3DD4:  MOVLW  C0
3DD6:  MOVWF  xE0
3DD8:  CLRF   xE2
3DDA:  MOVLW  08
3DDC:  MOVWF  xE3
3DDE:  MOVLW  02
3DE0:  MOVWF  xE4
3DE2:  MOVLW  01
3DE4:  MOVWF  xE5
3DE6:  MOVLB  0
3DE8:  CALL   1646
....................          glcd_circle(95,40,2,NO,ON); 
3DEC:  MOVLW  5F
3DEE:  MOVLB  5
3DF0:  MOVWF  xE0
3DF2:  MOVLW  28
3DF4:  MOVWF  xE1
3DF6:  MOVLW  02
3DF8:  MOVWF  xE2
3DFA:  CLRF   xE3
3DFC:  MOVLW  01
3DFE:  MOVWF  xE4
3E00:  MOVLB  0
3E02:  CALL   2188
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3E06:  MOVLW  05
3E08:  MOVWF  FEA
3E0A:  MOVLW  C0
3E0C:  MOVWF  FE9
3E0E:  MOVFF  FF2,5E0
3E12:  BCF    FF2.7
3E14:  MOVLW  00
3E16:  CALL   09D0
3E1A:  TBLRD*-
3E1C:  TBLRD*+
3E1E:  MOVF   FF5,W
3E20:  MOVWF  FEE
3E22:  IORLW  00
3E24:  BNZ   3E1C
3E26:  MOVLB  5
3E28:  BTFSC  xE0.7
3E2A:  BSF    FF2.7
3E2C:  MOVLW  05
3E2E:  MOVWF  xE1
3E30:  MOVLW  C0
3E32:  MOVWF  xE0
3E34:  MOVLW  66
3E36:  MOVWF  xE2
3E38:  MOVLW  28
3E3A:  MOVWF  xE3
3E3C:  MOVLW  02
3E3E:  MOVWF  xE4
3E40:  MOVWF  xE5
3E42:  MOVLB  0
3E44:  CALL   1646
....................          MuestraTiemposProgramados(); 
3E48:  CALL   25A0
3E4C:  MOVLB  5
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
3E4E:  MOVF   x36,W
3E50:  SUBLW  05
3E52:  BTFSS  FD8.2
3E54:  BRA    4012
....................        
....................       if(visual==1) 
3E56:  BTFSS  x29.4
3E58:  BRA    3FAE
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
3E5A:  MOVLW  04
3E5C:  MOVWF  xE0
3E5E:  MOVLB  0
3E60:  CALL   2088
....................          strcpy(Menus.Letra,"Liquidos"); 
3E64:  MOVLW  05
3E66:  MOVWF  FEA
3E68:  MOVLW  C0
3E6A:  MOVWF  FE9
3E6C:  MOVFF  FF2,5E0
3E70:  BCF    FF2.7
3E72:  MOVLW  00
3E74:  CALL   080E
3E78:  TBLRD*-
3E7A:  TBLRD*+
3E7C:  MOVF   FF5,W
3E7E:  MOVWF  FEE
3E80:  IORLW  00
3E82:  BNZ   3E7A
3E84:  MOVLB  5
3E86:  BTFSC  xE0.7
3E88:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3E8A:  MOVLW  05
3E8C:  MOVWF  xE1
3E8E:  MOVLW  C0
3E90:  MOVWF  xE0
3E92:  MOVLW  14
3E94:  MOVWF  xE2
3E96:  CLRF   xE3
3E98:  MOVLW  01
3E9A:  MOVWF  xE4
3E9C:  MOVLW  02
3E9E:  MOVWF  xE5
3EA0:  MOVLB  0
3EA2:  CALL   1646
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
3EA6:  MOVLW  05
3EA8:  MOVWF  FEA
3EAA:  MOVLW  C0
3EAC:  MOVWF  FE9
3EAE:  MOVFF  FF2,5E0
3EB2:  BCF    FF2.7
3EB4:  MOVLW  00
3EB6:  CALL   080E
3EBA:  TBLRD*-
3EBC:  TBLRD*+
3EBE:  MOVF   FF5,W
3EC0:  MOVWF  FEE
3EC2:  IORLW  00
3EC4:  BNZ   3EBC
3EC6:  MOVLB  5
3EC8:  BTFSC  xE0.7
3ECA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3ECC:  MOVLW  05
3ECE:  MOVWF  xE1
3ED0:  MOVLW  C0
3ED2:  MOVWF  xE0
3ED4:  MOVLW  07
3ED6:  MOVWF  xE2
3ED8:  MOVLW  37
3EDA:  MOVWF  xE3
3EDC:  MOVLW  02
3EDE:  MOVWF  xE4
3EE0:  MOVLW  01
3EE2:  MOVWF  xE5
3EE4:  MOVLB  0
3EE6:  CALL   1646
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3EEA:  MOVLW  05
3EEC:  MOVWF  FEA
3EEE:  MOVLW  C0
3EF0:  MOVWF  FE9
3EF2:  MOVFF  FF2,5E0
3EF6:  BCF    FF2.7
3EF8:  MOVLW  00
3EFA:  CALL   08E0
3EFE:  TBLRD*-
3F00:  TBLRD*+
3F02:  MOVF   FF5,W
3F04:  MOVWF  FEE
3F06:  IORLW  00
3F08:  BNZ   3F00
3F0A:  MOVLB  5
3F0C:  BTFSC  xE0.7
3F0E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3F10:  MOVLW  05
3F12:  MOVWF  xE1
3F14:  MOVLW  C0
3F16:  MOVWF  xE0
3F18:  CLRF   xE2
3F1A:  MOVLW  1A
3F1C:  MOVWF  xE3
3F1E:  CLRF   xE4
3F20:  MOVLW  01
3F22:  MOVWF  xE5
3F24:  MOVLB  0
3F26:  CALL   1646
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
3F2A:  MOVLW  05
3F2C:  MOVWF  FEA
3F2E:  MOVLW  C0
3F30:  MOVWF  FE9
3F32:  MOVFF  FF2,5E0
3F36:  BCF    FF2.7
3F38:  MOVLW  00
3F3A:  CALL   09EC
3F3E:  TBLRD*-
3F40:  TBLRD*+
3F42:  MOVF   FF5,W
3F44:  MOVWF  FEE
3F46:  IORLW  00
3F48:  BNZ   3F40
3F4A:  MOVLB  5
3F4C:  BTFSC  xE0.7
3F4E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3F50:  MOVLW  05
3F52:  MOVWF  xE1
3F54:  MOVLW  C0
3F56:  MOVWF  xE0
3F58:  CLRF   xE2
3F5A:  MOVLW  24
3F5C:  MOVWF  xE3
3F5E:  CLRF   xE4
3F60:  MOVLW  01
3F62:  MOVWF  xE5
3F64:  MOVLB  0
3F66:  CALL   1646
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3F6A:  MOVLW  05
3F6C:  MOVWF  FEA
3F6E:  MOVLW  C0
3F70:  MOVWF  FE9
3F72:  MOVFF  FF2,5E0
3F76:  BCF    FF2.7
3F78:  MOVLW  00
3F7A:  CALL   0A1C
3F7E:  TBLRD*-
3F80:  TBLRD*+
3F82:  MOVF   FF5,W
3F84:  MOVWF  FEE
3F86:  IORLW  00
3F88:  BNZ   3F80
3F8A:  MOVLB  5
3F8C:  BTFSC  xE0.7
3F8E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
3F90:  MOVLW  05
3F92:  MOVWF  xE1
3F94:  MOVLW  C0
3F96:  MOVWF  xE0
3F98:  CLRF   xE2
3F9A:  MOVLW  2E
3F9C:  MOVWF  xE3
3F9E:  CLRF   xE4
3FA0:  MOVLW  01
3FA2:  MOVWF  xE5
3FA4:  MOVLB  0
3FA6:  CALL   1646
....................          visual=0; 
3FAA:  MOVLB  5
3FAC:  BCF    x29.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
3FAE:  BSF    F92.3
3FB0:  BTFSS  F80.3
3FB2:  BRA    3FD0
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3FB4:  MOVLW  1E
3FB6:  MOVWF  xE1
3FB8:  MOVLB  0
3FBA:  CALL   0F72
3FBE:  MOVLW  01
3FC0:  MOVLB  5
3FC2:  MOVWF  x36
3FC4:  CLRF   xE1
3FC6:  MOVLB  0
3FC8:  CALL   0FDC
3FCC:  MOVLB  5
3FCE:  BSF    x29.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
3FD0:  BSF    F92.2
3FD2:  BTFSS  F80.2
3FD4:  BRA    4012
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
3FD6:  CLRF   x58
3FD8:  CLRF   x59
3FDA:  CLRF   x5A
3FDC:  MOVLW  02
3FDE:  MOVWF  x5B
3FE0:  BSF    x29.5
3FE2:  BSF    x29.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
3FE4:  CLRF   x60
3FE6:  CLRF   x61
3FE8:  CLRF   x62
3FEA:  CLRF   x63
3FEC:  MOVLW  79
3FEE:  MOVWF  x3B
3FF0:  MOVLW  0E
3FF2:  MOVWF  x36
3FF4:  MOVLW  04
3FF6:  MOVWF  xE0
3FF8:  MOVLW  AF
3FFA:  MOVWF  xE1
3FFC:  MOVLB  0
3FFE:  CALL   0F72
4002:  MOVLB  5
4004:  DECFSZ xE0,F
4006:  BRA    3FF8
4008:  CLRF   xE1
400A:  MOVLB  0
400C:  CALL   0FDC
4010:  MOVLB  5
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
4012:  MOVF   x36,W
4014:  SUBLW  06
4016:  BTFSS  FD8.2
4018:  BRA    41D6
....................        
....................       if(visual==1) 
401A:  BTFSS  x29.4
401C:  BRA    4170
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
401E:  MOVLW  03
4020:  MOVWF  xE0
4022:  MOVLB  0
4024:  CALL   2088
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
4028:  MOVLW  05
402A:  MOVWF  FEA
402C:  MOVLW  C0
402E:  MOVWF  FE9
4030:  MOVFF  FF2,5E0
4034:  BCF    FF2.7
4036:  MOVLW  00
4038:  CALL   0A46
403C:  TBLRD*-
403E:  TBLRD*+
4040:  MOVF   FF5,W
4042:  MOVWF  FEE
4044:  IORLW  00
4046:  BNZ   403E
4048:  MOVLB  5
404A:  BTFSC  xE0.7
404C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
404E:  MOVLW  05
4050:  MOVWF  xE1
4052:  MOVLW  C0
4054:  MOVWF  xE0
4056:  CLRF   xE2
4058:  CLRF   xE3
405A:  MOVLW  01
405C:  MOVWF  xE4
405E:  MOVLW  02
4060:  MOVWF  xE5
4062:  MOVLB  0
4064:  CALL   1646
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
4068:  MOVLW  05
406A:  MOVWF  FEA
406C:  MOVLW  C0
406E:  MOVWF  FE9
4070:  MOVFF  FF2,5E0
4074:  BCF    FF2.7
4076:  MOVLW  00
4078:  CALL   0832
407C:  TBLRD*-
407E:  TBLRD*+
4080:  MOVF   FF5,W
4082:  MOVWF  FEE
4084:  IORLW  00
4086:  BNZ   407E
4088:  MOVLB  5
408A:  BTFSC  xE0.7
408C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
408E:  MOVLW  05
4090:  MOVWF  xE1
4092:  MOVLW  C0
4094:  MOVWF  xE0
4096:  MOVLW  07
4098:  MOVWF  xE2
409A:  MOVLW  37
409C:  MOVWF  xE3
409E:  MOVLW  02
40A0:  MOVWF  xE4
40A2:  MOVLW  01
40A4:  MOVWF  xE5
40A6:  MOVLB  0
40A8:  CALL   1646
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
40AC:  MOVLW  05
40AE:  MOVWF  FEA
40B0:  MOVLW  C0
40B2:  MOVWF  FE9
40B4:  MOVFF  FF2,5E0
40B8:  BCF    FF2.7
40BA:  MOVLW  00
40BC:  CALL   08E0
40C0:  TBLRD*-
40C2:  TBLRD*+
40C4:  MOVF   FF5,W
40C6:  MOVWF  FEE
40C8:  IORLW  00
40CA:  BNZ   40C2
40CC:  MOVLB  5
40CE:  BTFSC  xE0.7
40D0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
40D2:  MOVLW  05
40D4:  MOVWF  xE1
40D6:  MOVLW  C0
40D8:  MOVWF  xE0
40DA:  CLRF   xE2
40DC:  MOVLW  1A
40DE:  MOVWF  xE3
40E0:  CLRF   xE4
40E2:  MOVLW  01
40E4:  MOVWF  xE5
40E6:  MOVLB  0
40E8:  CALL   1646
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
40EC:  MOVLW  05
40EE:  MOVWF  FEA
40F0:  MOVLW  C0
40F2:  MOVWF  FE9
40F4:  MOVFF  FF2,5E0
40F8:  BCF    FF2.7
40FA:  MOVLW  00
40FC:  CALL   0A6C
4100:  TBLRD*-
4102:  TBLRD*+
4104:  MOVF   FF5,W
4106:  MOVWF  FEE
4108:  IORLW  00
410A:  BNZ   4102
410C:  MOVLB  5
410E:  BTFSC  xE0.7
4110:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4112:  MOVLW  05
4114:  MOVWF  xE1
4116:  MOVLW  C0
4118:  MOVWF  xE0
411A:  CLRF   xE2
411C:  MOVLW  24
411E:  MOVWF  xE3
4120:  CLRF   xE4
4122:  MOVLW  01
4124:  MOVWF  xE5
4126:  MOVLB  0
4128:  CALL   1646
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
412C:  MOVLW  05
412E:  MOVWF  FEA
4130:  MOVLW  C0
4132:  MOVWF  FE9
4134:  MOVFF  FF2,5E0
4138:  BCF    FF2.7
413A:  MOVLW  00
413C:  CALL   0A1C
4140:  TBLRD*-
4142:  TBLRD*+
4144:  MOVF   FF5,W
4146:  MOVWF  FEE
4148:  IORLW  00
414A:  BNZ   4142
414C:  MOVLB  5
414E:  BTFSC  xE0.7
4150:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4152:  MOVLW  05
4154:  MOVWF  xE1
4156:  MOVLW  C0
4158:  MOVWF  xE0
415A:  CLRF   xE2
415C:  MOVLW  2E
415E:  MOVWF  xE3
4160:  CLRF   xE4
4162:  MOVLW  01
4164:  MOVWF  xE5
4166:  MOVLB  0
4168:  CALL   1646
....................          visual=0; 
416C:  MOVLB  5
416E:  BCF    x29.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4170:  BSF    F92.3
4172:  BTFSS  F80.3
4174:  BRA    4192
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4176:  MOVLW  1E
4178:  MOVWF  xE1
417A:  MOVLB  0
417C:  CALL   0F72
4180:  MOVLW  01
4182:  MOVLB  5
4184:  MOVWF  x36
4186:  CLRF   xE1
4188:  MOVLB  0
418A:  CALL   0FDC
418E:  MOVLB  5
4190:  BSF    x29.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
4192:  BSF    F92.2
4194:  BTFSS  F80.2
4196:  BRA    41D6
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
4198:  CLRF   x58
419A:  CLRF   x59
419C:  MOVLW  05
419E:  MOVWF  x5A
41A0:  MOVLW  01
41A2:  MOVWF  x5B
41A4:  BSF    x29.5
41A6:  BSF    x29.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
41A8:  CLRF   x60
41AA:  CLRF   x61
41AC:  CLRF   x62
41AE:  CLRF   x63
41B0:  MOVLW  79
41B2:  MOVWF  x3B
41B4:  MOVLW  0E
41B6:  MOVWF  x36
41B8:  MOVLW  04
41BA:  MOVWF  xE0
41BC:  MOVLW  AF
41BE:  MOVWF  xE1
41C0:  MOVLB  0
41C2:  CALL   0F72
41C6:  MOVLB  5
41C8:  DECFSZ xE0,F
41CA:  BRA    41BC
41CC:  CLRF   xE1
41CE:  MOVLB  0
41D0:  CALL   0FDC
41D4:  MOVLB  5
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
41D6:  MOVF   x36,W
41D8:  SUBLW  07
41DA:  BTFSS  FD8.2
41DC:  BRA    450E
....................        
....................       if(visual==1) 
41DE:  BTFSS  x29.4
41E0:  BRA    4332
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
41E2:  MOVLW  01
41E4:  MOVWF  xE0
41E6:  MOVLB  0
41E8:  CALL   2088
....................          strcpy(Menus.Letra,"Tex & Ins"); 
41EC:  MOVLW  05
41EE:  MOVWF  FEA
41F0:  MOVLW  C0
41F2:  MOVWF  FE9
41F4:  MOVFF  FF2,5E0
41F8:  BCF    FF2.7
41FA:  MOVLW  00
41FC:  CALL   0A9C
4200:  TBLRD*-
4202:  TBLRD*+
4204:  MOVF   FF5,W
4206:  MOVWF  FEE
4208:  IORLW  00
420A:  BNZ   4202
420C:  MOVLB  5
420E:  BTFSC  xE0.7
4210:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4212:  MOVLW  05
4214:  MOVWF  xE1
4216:  MOVLW  C0
4218:  MOVWF  xE0
421A:  CLRF   xE2
421C:  CLRF   xE3
421E:  MOVLW  01
4220:  MOVWF  xE4
4222:  MOVLW  02
4224:  MOVWF  xE5
4226:  MOVLB  0
4228:  CALL   1646
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
422C:  MOVLW  05
422E:  MOVWF  FEA
4230:  MOVLW  C0
4232:  MOVWF  FE9
4234:  MOVFF  FF2,5E0
4238:  BCF    FF2.7
423A:  MOVLW  00
423C:  CALL   0860
4240:  TBLRD*-
4242:  TBLRD*+
4244:  MOVF   FF5,W
4246:  MOVWF  FEE
4248:  IORLW  00
424A:  BNZ   4242
424C:  MOVLB  5
424E:  BTFSC  xE0.7
4250:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4252:  MOVLW  05
4254:  MOVWF  xE1
4256:  MOVLW  C0
4258:  MOVWF  xE0
425A:  CLRF   xE2
425C:  MOVLW  37
425E:  MOVWF  xE3
4260:  MOVLW  02
4262:  MOVWF  xE4
4264:  MOVLW  01
4266:  MOVWF  xE5
4268:  MOVLB  0
426A:  CALL   1646
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
426E:  MOVLW  05
4270:  MOVWF  FEA
4272:  MOVLW  C0
4274:  MOVWF  FE9
4276:  MOVFF  FF2,5E0
427A:  BCF    FF2.7
427C:  MOVLW  00
427E:  CALL   08E0
4282:  TBLRD*-
4284:  TBLRD*+
4286:  MOVF   FF5,W
4288:  MOVWF  FEE
428A:  IORLW  00
428C:  BNZ   4284
428E:  MOVLB  5
4290:  BTFSC  xE0.7
4292:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4294:  MOVLW  05
4296:  MOVWF  xE1
4298:  MOVLW  C0
429A:  MOVWF  xE0
429C:  CLRF   xE2
429E:  MOVLW  1A
42A0:  MOVWF  xE3
42A2:  CLRF   xE4
42A4:  MOVLW  01
42A6:  MOVWF  xE5
42A8:  MOVLB  0
42AA:  CALL   1646
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
42AE:  MOVLW  05
42B0:  MOVWF  FEA
42B2:  MOVLW  C0
42B4:  MOVWF  FE9
42B6:  MOVFF  FF2,5E0
42BA:  BCF    FF2.7
42BC:  MOVLW  00
42BE:  CALL   090C
42C2:  TBLRD*-
42C4:  TBLRD*+
42C6:  MOVF   FF5,W
42C8:  MOVWF  FEE
42CA:  IORLW  00
42CC:  BNZ   42C4
42CE:  MOVLB  5
42D0:  BTFSC  xE0.7
42D2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
42D4:  MOVLW  05
42D6:  MOVWF  xE1
42D8:  MOVLW  C0
42DA:  MOVWF  xE0
42DC:  CLRF   xE2
42DE:  MOVLW  24
42E0:  MOVWF  xE3
42E2:  CLRF   xE4
42E4:  MOVLW  01
42E6:  MOVWF  xE5
42E8:  MOVLB  0
42EA:  CALL   1646
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
42EE:  MOVLW  05
42F0:  MOVWF  FEA
42F2:  MOVLW  C0
42F4:  MOVWF  FE9
42F6:  MOVFF  FF2,5E0
42FA:  BCF    FF2.7
42FC:  MOVLW  00
42FE:  CALL   0AC0
4302:  TBLRD*-
4304:  TBLRD*+
4306:  MOVF   FF5,W
4308:  MOVWF  FEE
430A:  IORLW  00
430C:  BNZ   4304
430E:  MOVLB  5
4310:  BTFSC  xE0.7
4312:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4314:  MOVLW  05
4316:  MOVWF  xE1
4318:  MOVLW  C0
431A:  MOVWF  xE0
431C:  CLRF   xE2
431E:  MOVLW  2E
4320:  MOVWF  xE3
4322:  CLRF   xE4
4324:  MOVLW  01
4326:  MOVWF  xE5
4328:  MOVLB  0
432A:  CALL   1646
....................          visual=0; 
432E:  MOVLB  5
4330:  BCF    x29.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4332:  BSF    F92.3
4334:  BTFSS  F80.3
4336:  BRA    4354
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4338:  MOVLW  1E
433A:  MOVWF  xE1
433C:  MOVLB  0
433E:  CALL   0F72
4342:  MOVLW  01
4344:  MOVLB  5
4346:  MOVWF  x36
4348:  CLRF   xE1
434A:  MOVLB  0
434C:  CALL   0FDC
4350:  MOVLB  5
4352:  BSF    x29.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
4354:  BSF    F92.2
4356:  BTFSS  F80.2
4358:  BRA    450E
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
435A:  CLRF   x58
435C:  CLRF   x59
435E:  MOVLW  05
4360:  MOVWF  x5A
4362:  MOVLW  02
4364:  MOVWF  x5B
4366:  BSF    x29.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
4368:  CLRF   x60
436A:  CLRF   x61
436C:  CLRF   x62
436E:  MOVLW  01
4370:  MOVWF  x63
4372:  MOVLW  79
4374:  MOVWF  x3B
4376:  MOVLW  14
4378:  MOVWF  x36
437A:  MOVLW  04
437C:  MOVWF  xE0
437E:  MOVLW  AF
4380:  MOVWF  xE1
4382:  MOVLB  0
4384:  CALL   0F72
4388:  MOVLB  5
438A:  DECFSZ xE0,F
438C:  BRA    437E
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
438E:  MOVLW  14
4390:  MOVWF  x36
4392:  MOVLW  0F
4394:  MOVWF  xF2
4396:  MOVLW  12
4398:  MOVWF  xF3
439A:  MOVLW  1E
439C:  MOVWF  xF4
439E:  MOVLW  35
43A0:  MOVWF  xF5
43A2:  CLRF   xF6
43A4:  MOVLW  01
43A6:  MOVWF  xF7
43A8:  MOVLB  0
43AA:  CALL   1584
43AE:  MOVLB  5
43B0:  CLRF   x3F
43B2:  MOVLW  C0
43B4:  IORWF  FF2,F
43B6:  CLRF   xE1
43B8:  MOVLB  0
43BA:  CALL   0FDC
....................          strcpy(Menus.Letra,"Calentando"); 
43BE:  MOVLW  05
43C0:  MOVWF  FEA
43C2:  MOVLW  C0
43C4:  MOVWF  FE9
43C6:  MOVFF  FF2,5E0
43CA:  BCF    FF2.7
43CC:  MOVLW  00
43CE:  CALL   0966
43D2:  TBLRD*-
43D4:  TBLRD*+
43D6:  MOVF   FF5,W
43D8:  MOVWF  FEE
43DA:  IORLW  00
43DC:  BNZ   43D4
43DE:  MOVLB  5
43E0:  BTFSC  xE0.7
43E2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
43E4:  MOVLW  05
43E6:  MOVWF  xE1
43E8:  MOVLW  C0
43EA:  MOVWF  xE0
43EC:  CLRF   xE2
43EE:  MOVLW  37
43F0:  MOVWF  xE3
43F2:  MOVLW  02
43F4:  MOVWF  xE4
43F6:  MOVLW  01
43F8:  MOVWF  xE5
43FA:  MOVLB  0
43FC:  CALL   1646
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
4400:  MOVLW  0F
4402:  MOVLB  5
4404:  MOVWF  xF2
4406:  MOVLW  12
4408:  MOVWF  xF3
440A:  MOVLW  1E
440C:  MOVWF  xF4
440E:  MOVLW  35
4410:  MOVWF  xF5
4412:  CLRF   xF6
4414:  MOVLW  01
4416:  MOVWF  xF7
4418:  MOVLB  0
441A:  CALL   1584
....................          glcd_imagen(5); 
441E:  MOVLW  05
4420:  MOVLB  5
4422:  MOVWF  xE0
4424:  MOVLB  0
4426:  CALL   2088
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
442A:  MOVLW  05
442C:  MOVWF  FEA
442E:  MOVLW  C0
4430:  MOVWF  FE9
4432:  MOVFF  FF2,5E0
4436:  BCF    FF2.7
4438:  MOVLW  00
443A:  CALL   098C
443E:  TBLRD*-
4440:  TBLRD*+
4442:  MOVF   FF5,W
4444:  MOVWF  FEE
4446:  IORLW  00
4448:  BNZ   4440
444A:  MOVLB  5
444C:  BTFSC  xE0.7
444E:  BSF    FF2.7
4450:  MOVLW  05
4452:  MOVWF  xE1
4454:  MOVLW  C0
4456:  MOVWF  xE0
4458:  CLRF   xE2
445A:  CLRF   xE3
445C:  MOVLW  02
445E:  MOVWF  xE4
4460:  MOVLW  01
4462:  MOVWF  xE5
4464:  MOVLB  0
4466:  CALL   1646
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
446A:  MOVLW  05
446C:  MOVWF  FEA
446E:  MOVLW  C0
4470:  MOVWF  FE9
4472:  MOVFF  FF2,5E0
4476:  BCF    FF2.7
4478:  MOVLW  00
447A:  CALL   09AE
447E:  TBLRD*-
4480:  TBLRD*+
4482:  MOVF   FF5,W
4484:  MOVWF  FEE
4486:  IORLW  00
4488:  BNZ   4480
448A:  MOVLB  5
448C:  BTFSC  xE0.7
448E:  BSF    FF2.7
4490:  MOVLW  05
4492:  MOVWF  xE1
4494:  MOVLW  C0
4496:  MOVWF  xE0
4498:  CLRF   xE2
449A:  MOVLW  08
449C:  MOVWF  xE3
449E:  MOVLW  02
44A0:  MOVWF  xE4
44A2:  MOVLW  01
44A4:  MOVWF  xE5
44A6:  MOVLB  0
44A8:  CALL   1646
....................          glcd_circle(95,40,2,NO,ON); 
44AC:  MOVLW  5F
44AE:  MOVLB  5
44B0:  MOVWF  xE0
44B2:  MOVLW  28
44B4:  MOVWF  xE1
44B6:  MOVLW  02
44B8:  MOVWF  xE2
44BA:  CLRF   xE3
44BC:  MOVLW  01
44BE:  MOVWF  xE4
44C0:  MOVLB  0
44C2:  CALL   2188
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
44C6:  MOVLW  05
44C8:  MOVWF  FEA
44CA:  MOVLW  C0
44CC:  MOVWF  FE9
44CE:  MOVFF  FF2,5E0
44D2:  BCF    FF2.7
44D4:  MOVLW  00
44D6:  CALL   09D0
44DA:  TBLRD*-
44DC:  TBLRD*+
44DE:  MOVF   FF5,W
44E0:  MOVWF  FEE
44E2:  IORLW  00
44E4:  BNZ   44DC
44E6:  MOVLB  5
44E8:  BTFSC  xE0.7
44EA:  BSF    FF2.7
44EC:  MOVLW  05
44EE:  MOVWF  xE1
44F0:  MOVLW  C0
44F2:  MOVWF  xE0
44F4:  MOVLW  66
44F6:  MOVWF  xE2
44F8:  MOVLW  28
44FA:  MOVWF  xE3
44FC:  MOVLW  02
44FE:  MOVWF  xE4
4500:  MOVWF  xE5
4502:  MOVLB  0
4504:  CALL   1646
....................          MuestraTiemposProgramados(); 
4508:  CALL   25A0
450C:  MOVLB  5
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
450E:  MOVF   x36,W
4510:  SUBLW  08
4512:  BTFSS  FD8.2
4514:  BRA    48E2
....................          
....................          if(visual==1) 
4516:  BTFSS  x29.4
4518:  BRA    483E
....................          { 
....................             if(Opcion>5) 
451A:  MOVF   x3D,W
451C:  SUBLW  05
451E:  BC    4524
....................             {Opcion=1;} 
4520:  MOVLW  01
4522:  MOVWF  x3D
....................             if(Opcion<1) 
4524:  MOVF   x3D,F
4526:  BNZ   452C
....................             {Opcion=5;} 
4528:  MOVLW  05
452A:  MOVWF  x3D
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
452C:  MOVLW  05
452E:  MOVWF  FEA
4530:  MOVLW  C0
4532:  MOVWF  FE9
4534:  MOVFF  FF2,5E0
4538:  BCF    FF2.7
453A:  MOVLW  00
453C:  MOVLB  0
453E:  CALL   0AEA
4542:  TBLRD*-
4544:  TBLRD*+
4546:  MOVF   FF5,W
4548:  MOVWF  FEE
454A:  IORLW  00
454C:  BNZ   4544
454E:  MOVLB  5
4550:  BTFSC  xE0.7
4552:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4554:  MOVLW  05
4556:  MOVWF  xE1
4558:  MOVLW  C0
455A:  MOVWF  xE0
455C:  CLRF   xE2
455E:  CLRF   xE3
4560:  MOVLW  01
4562:  MOVWF  xE4
4564:  MOVWF  xE5
4566:  MOVLB  0
4568:  CALL   1646
....................        
....................             if(Opcion==1)    
456C:  MOVLB  5
456E:  DECFSZ x3D,W
4570:  BRA    45B8
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
4572:  MOVLW  05
4574:  MOVWF  FEA
4576:  MOVLW  C0
4578:  MOVWF  FE9
457A:  MOVFF  FF2,5E0
457E:  BCF    FF2.7
4580:  MOVLW  00
4582:  MOVLB  0
4584:  CALL   0B1A
4588:  TBLRD*-
458A:  TBLRD*+
458C:  MOVF   FF5,W
458E:  MOVWF  FEE
4590:  IORLW  00
4592:  BNZ   458A
4594:  MOVLB  5
4596:  BTFSC  xE0.7
4598:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
459A:  MOVLW  05
459C:  MOVWF  xE1
459E:  MOVLW  C0
45A0:  MOVWF  xE0
45A2:  CLRF   xE2
45A4:  MOVLW  0A
45A6:  MOVWF  xE3
45A8:  MOVLW  01
45AA:  MOVWF  xE4
45AC:  MOVWF  xE5
45AE:  MOVLB  0
45B0:  CALL   1646
....................             else 
45B4:  BRA    45FA
45B6:  MOVLB  5
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
45B8:  MOVLW  05
45BA:  MOVWF  FEA
45BC:  MOVLW  C0
45BE:  MOVWF  FE9
45C0:  MOVFF  FF2,5E0
45C4:  BCF    FF2.7
45C6:  MOVLW  00
45C8:  MOVLB  0
45CA:  CALL   0B1A
45CE:  TBLRD*-
45D0:  TBLRD*+
45D2:  MOVF   FF5,W
45D4:  MOVWF  FEE
45D6:  IORLW  00
45D8:  BNZ   45D0
45DA:  MOVLB  5
45DC:  BTFSC  xE0.7
45DE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
45E0:  MOVLW  05
45E2:  MOVWF  xE1
45E4:  MOVLW  C0
45E6:  MOVWF  xE0
45E8:  CLRF   xE2
45EA:  MOVLW  0A
45EC:  MOVWF  xE3
45EE:  CLRF   xE4
45F0:  MOVLW  01
45F2:  MOVWF  xE5
45F4:  MOVLB  0
45F6:  CALL   1646
....................              
....................             if(Opcion==2)    
45FA:  MOVLB  5
45FC:  MOVF   x3D,W
45FE:  SUBLW  02
4600:  BNZ   4648
....................                {strcpy(Menus.Letra,"T. Secado"); 
4602:  MOVLW  05
4604:  MOVWF  FEA
4606:  MOVLW  C0
4608:  MOVWF  FE9
460A:  MOVFF  FF2,5E0
460E:  BCF    FF2.7
4610:  MOVLW  00
4612:  MOVLB  0
4614:  CALL   0B46
4618:  TBLRD*-
461A:  TBLRD*+
461C:  MOVF   FF5,W
461E:  MOVWF  FEE
4620:  IORLW  00
4622:  BNZ   461A
4624:  MOVLB  5
4626:  BTFSC  xE0.7
4628:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
462A:  MOVLW  05
462C:  MOVWF  xE1
462E:  MOVLW  C0
4630:  MOVWF  xE0
4632:  CLRF   xE2
4634:  MOVLW  14
4636:  MOVWF  xE3
4638:  MOVLW  01
463A:  MOVWF  xE4
463C:  MOVWF  xE5
463E:  MOVLB  0
4640:  CALL   1646
....................             else 
4644:  BRA    468A
4646:  MOVLB  5
....................                {strcpy(Menus.Letra,"T. Secado"); 
4648:  MOVLW  05
464A:  MOVWF  FEA
464C:  MOVLW  C0
464E:  MOVWF  FE9
4650:  MOVFF  FF2,5E0
4654:  BCF    FF2.7
4656:  MOVLW  00
4658:  MOVLB  0
465A:  CALL   0B46
465E:  TBLRD*-
4660:  TBLRD*+
4662:  MOVF   FF5,W
4664:  MOVWF  FEE
4666:  IORLW  00
4668:  BNZ   4660
466A:  MOVLB  5
466C:  BTFSC  xE0.7
466E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
4670:  MOVLW  05
4672:  MOVWF  xE1
4674:  MOVLW  C0
4676:  MOVWF  xE0
4678:  CLRF   xE2
467A:  MOVLW  14
467C:  MOVWF  xE3
467E:  CLRF   xE4
4680:  MOVLW  01
4682:  MOVWF  xE5
4684:  MOVLB  0
4686:  CALL   1646
....................                 
....................              if(Opcion==3)    
468A:  MOVLB  5
468C:  MOVF   x3D,W
468E:  SUBLW  03
4690:  BNZ   46D8
....................                {strcpy(Menus.Letra,"Temperatura"); 
4692:  MOVLW  05
4694:  MOVWF  FEA
4696:  MOVLW  C0
4698:  MOVWF  FE9
469A:  MOVFF  FF2,5E0
469E:  BCF    FF2.7
46A0:  MOVLW  00
46A2:  MOVLB  0
46A4:  CALL   0B6A
46A8:  TBLRD*-
46AA:  TBLRD*+
46AC:  MOVF   FF5,W
46AE:  MOVWF  FEE
46B0:  IORLW  00
46B2:  BNZ   46AA
46B4:  MOVLB  5
46B6:  BTFSC  xE0.7
46B8:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
46BA:  MOVLW  05
46BC:  MOVWF  xE1
46BE:  MOVLW  C0
46C0:  MOVWF  xE0
46C2:  CLRF   xE2
46C4:  MOVLW  1E
46C6:  MOVWF  xE3
46C8:  MOVLW  01
46CA:  MOVWF  xE4
46CC:  MOVWF  xE5
46CE:  MOVLB  0
46D0:  CALL   1646
....................             else 
46D4:  BRA    471A
46D6:  MOVLB  5
....................                {strcpy(Menus.Letra,"Temperatura"); 
46D8:  MOVLW  05
46DA:  MOVWF  FEA
46DC:  MOVLW  C0
46DE:  MOVWF  FE9
46E0:  MOVFF  FF2,5E0
46E4:  BCF    FF2.7
46E6:  MOVLW  00
46E8:  MOVLB  0
46EA:  CALL   0B6A
46EE:  TBLRD*-
46F0:  TBLRD*+
46F2:  MOVF   FF5,W
46F4:  MOVWF  FEE
46F6:  IORLW  00
46F8:  BNZ   46F0
46FA:  MOVLB  5
46FC:  BTFSC  xE0.7
46FE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
4700:  MOVLW  05
4702:  MOVWF  xE1
4704:  MOVLW  C0
4706:  MOVWF  xE0
4708:  CLRF   xE2
470A:  MOVLW  1E
470C:  MOVWF  xE3
470E:  CLRF   xE4
4710:  MOVLW  01
4712:  MOVWF  xE5
4714:  MOVLB  0
4716:  CALL   1646
....................                 
....................             if(Opcion==4)    
471A:  MOVLB  5
471C:  MOVF   x3D,W
471E:  SUBLW  04
4720:  BNZ   4768
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4722:  MOVLW  05
4724:  MOVWF  FEA
4726:  MOVLW  C0
4728:  MOVWF  FE9
472A:  MOVFF  FF2,5E0
472E:  BCF    FF2.7
4730:  MOVLW  00
4732:  MOVLB  0
4734:  CALL   0B90
4738:  TBLRD*-
473A:  TBLRD*+
473C:  MOVF   FF5,W
473E:  MOVWF  FEE
4740:  IORLW  00
4742:  BNZ   473A
4744:  MOVLB  5
4746:  BTFSC  xE0.7
4748:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
474A:  MOVLW  05
474C:  MOVWF  xE1
474E:  MOVLW  C0
4750:  MOVWF  xE0
4752:  CLRF   xE2
4754:  MOVLW  28
4756:  MOVWF  xE3
4758:  MOVLW  01
475A:  MOVWF  xE4
475C:  MOVWF  xE5
475E:  MOVLB  0
4760:  CALL   1646
....................             else 
4764:  BRA    47AA
4766:  MOVLB  5
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4768:  MOVLW  05
476A:  MOVWF  FEA
476C:  MOVLW  C0
476E:  MOVWF  FE9
4770:  MOVFF  FF2,5E0
4774:  BCF    FF2.7
4776:  MOVLW  00
4778:  MOVLB  0
477A:  CALL   0B90
477E:  TBLRD*-
4780:  TBLRD*+
4782:  MOVF   FF5,W
4784:  MOVWF  FEE
4786:  IORLW  00
4788:  BNZ   4780
478A:  MOVLB  5
478C:  BTFSC  xE0.7
478E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
4790:  MOVLW  05
4792:  MOVWF  xE1
4794:  MOVLW  C0
4796:  MOVWF  xE0
4798:  CLRF   xE2
479A:  MOVLW  28
479C:  MOVWF  xE3
479E:  CLRF   xE4
47A0:  MOVLW  01
47A2:  MOVWF  xE5
47A4:  MOVLB  0
47A6:  CALL   1646
....................                 
....................             if(Opcion==5)    
47AA:  MOVLB  5
47AC:  MOVF   x3D,W
47AE:  SUBLW  05
47B0:  BNZ   47F8
....................                {strcpy(Menus.Letra,"Continuar"); 
47B2:  MOVLW  05
47B4:  MOVWF  FEA
47B6:  MOVLW  C0
47B8:  MOVWF  FE9
47BA:  MOVFF  FF2,5E0
47BE:  BCF    FF2.7
47C0:  MOVLW  00
47C2:  MOVLB  0
47C4:  CALL   0BBC
47C8:  TBLRD*-
47CA:  TBLRD*+
47CC:  MOVF   FF5,W
47CE:  MOVWF  FEE
47D0:  IORLW  00
47D2:  BNZ   47CA
47D4:  MOVLB  5
47D6:  BTFSC  xE0.7
47D8:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
47DA:  MOVLW  05
47DC:  MOVWF  xE1
47DE:  MOVLW  C0
47E0:  MOVWF  xE0
47E2:  CLRF   xE2
47E4:  MOVLW  32
47E6:  MOVWF  xE3
47E8:  MOVLW  01
47EA:  MOVWF  xE4
47EC:  MOVWF  xE5
47EE:  MOVLB  0
47F0:  CALL   1646
....................             else 
47F4:  BRA    483A
47F6:  MOVLB  5
....................                {strcpy(Menus.Letra,"Continuar"); 
47F8:  MOVLW  05
47FA:  MOVWF  FEA
47FC:  MOVLW  C0
47FE:  MOVWF  FE9
4800:  MOVFF  FF2,5E0
4804:  BCF    FF2.7
4806:  MOVLW  00
4808:  MOVLB  0
480A:  CALL   0BBC
480E:  TBLRD*-
4810:  TBLRD*+
4812:  MOVF   FF5,W
4814:  MOVWF  FEE
4816:  IORLW  00
4818:  BNZ   4810
481A:  MOVLB  5
481C:  BTFSC  xE0.7
481E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
4820:  MOVLW  05
4822:  MOVWF  xE1
4824:  MOVLW  C0
4826:  MOVWF  xE0
4828:  CLRF   xE2
482A:  MOVLW  32
482C:  MOVWF  xE3
482E:  CLRF   xE4
4830:  MOVLW  01
4832:  MOVWF  xE5
4834:  MOVLB  0
4836:  CALL   1646
....................                           
....................             visual=0; 
483A:  MOVLB  5
483C:  BCF    x29.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
483E:  BSF    F92.0
4840:  BTFSS  F80.0
4842:  BRA    485C
....................          {  if(Flanco == 0)  
4844:  BTFSC  x29.0
4846:  BRA    485A
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4848:  BSF    x29.0
484A:  MOVLW  1E
484C:  MOVWF  xE1
484E:  MOVLB  0
4850:  CALL   0F72
4854:  MOVLB  5
4856:  DECF   x3D,F
4858:  BSF    x29.4
....................                } 
....................          } 
....................             else 
485A:  BRA    485E
....................                {Flanco = 0;} 
485C:  BCF    x29.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
485E:  BSF    F92.1
4860:  BTFSS  F80.1
4862:  BRA    487C
....................          {  if(Flanco2 == 0)  
4864:  BTFSC  x29.2
4866:  BRA    487A
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4868:  BSF    x29.2
486A:  MOVLW  1E
486C:  MOVWF  xE1
486E:  MOVLB  0
4870:  CALL   0F72
4874:  MOVLB  5
4876:  INCF   x3D,F
4878:  BSF    x29.4
....................                }      
....................          } 
....................             else 
487A:  BRA    487E
....................                {Flanco2 = 0;}   
487C:  BCF    x29.2
....................                 
....................          if(RIGHT)//Si oprime SET 
487E:  BSF    F92.2
4880:  BTFSS  F80.2
4882:  BRA    48B6
....................          {  if(Flanco1 == 0)  
4884:  BTFSC  x29.1
4886:  BRA    48B4
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4888:  BSF    x29.1
488A:  MOVLW  02
488C:  MOVWF  xE0
488E:  MOVLW  96
4890:  MOVWF  xE1
4892:  MOVLB  0
4894:  CALL   0F72
4898:  MOVLB  5
489A:  DECFSZ xE0,F
489C:  BRA    488E
489E:  MOVLW  0A
48A0:  ADDWF  x3D,W
48A2:  MOVWF  x36
48A4:  MOVLW  01
48A6:  MOVWF  x3D
48A8:  CLRF   xE1
48AA:  MOVLB  0
48AC:  CALL   0FDC
48B0:  MOVLB  5
48B2:  BSF    x29.4
....................                } 
....................          } 
....................             else 
48B4:  BRA    48B8
....................                {Flanco1 = 0;}   
48B6:  BCF    x29.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
48B8:  BSF    F92.3
48BA:  BTFSS  F80.3
48BC:  BRA    48E2
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
48BE:  MOVLW  04
48C0:  MOVWF  xE0
48C2:  MOVLW  AF
48C4:  MOVWF  xE1
48C6:  MOVLB  0
48C8:  CALL   0F72
48CC:  MOVLB  5
48CE:  DECFSZ xE0,F
48D0:  BRA    48C2
48D2:  MOVLW  01
48D4:  MOVWF  x36
48D6:  CLRF   xE1
48D8:  MOVLB  0
48DA:  CALL   0FDC
48DE:  MOVLB  5
48E0:  BSF    x29.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
48E2:  MOVF   x36,W
48E4:  SUBLW  09
48E6:  BTFSS  FD8.2
48E8:  BRA    4D82
....................          
....................       strcpy(Menus.Letra,"Clave"); 
48EA:  MOVLW  05
48EC:  MOVWF  FEA
48EE:  MOVLW  C0
48F0:  MOVWF  FE9
48F2:  MOVFF  FF2,5E0
48F6:  BCF    FF2.7
48F8:  MOVLW  00
48FA:  MOVLB  0
48FC:  CALL   0758
4900:  TBLRD*-
4902:  TBLRD*+
4904:  MOVF   FF5,W
4906:  MOVWF  FEE
4908:  IORLW  00
490A:  BNZ   4902
490C:  MOVLB  5
490E:  BTFSC  xE0.7
4910:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4912:  MOVLW  05
4914:  MOVWF  xE1
4916:  MOVLW  C0
4918:  MOVWF  xE0
491A:  MOVLW  1E
491C:  MOVWF  xE2
491E:  CLRF   xE3
4920:  MOVLW  01
4922:  MOVWF  xE4
4924:  MOVLW  02
4926:  MOVWF  xE5
4928:  MOVLB  0
492A:  CALL   1646
....................        
....................       if(unidad==1) 
492E:  MOVLB  5
4930:  DECFSZ x37,W
4932:  BRA    4990
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4934:  MOVFF  564,5E2
4938:  MOVLW  14
493A:  MOVWF  xE3
493C:  MOVLW  1E
493E:  MOVWF  xE4
4940:  MOVLW  01
4942:  MOVWF  xE5
4944:  MOVLB  0
4946:  CALL   186C
....................          displayContrasena(Contrasena[1],40,30,0); 
494A:  MOVFF  565,5E2
494E:  MOVLW  28
4950:  MOVLB  5
4952:  MOVWF  xE3
4954:  MOVLW  1E
4956:  MOVWF  xE4
4958:  CLRF   xE5
495A:  MOVLB  0
495C:  CALL   186C
....................          displayContrasena(Contrasena[2],60,30,0); 
4960:  MOVFF  566,5E2
4964:  MOVLW  3C
4966:  MOVLB  5
4968:  MOVWF  xE3
496A:  MOVLW  1E
496C:  MOVWF  xE4
496E:  CLRF   xE5
4970:  MOVLB  0
4972:  CALL   186C
....................          displayContrasena(Contrasena[3],80,30,0); 
4976:  MOVFF  567,5E2
497A:  MOVLW  50
497C:  MOVLB  5
497E:  MOVWF  xE3
4980:  MOVLW  1E
4982:  MOVWF  xE4
4984:  CLRF   xE5
4986:  MOVLB  0
4988:  CALL   186C
....................       } 
....................       else 
498C:  BRA    4AB2
498E:  MOVLB  5
....................       { 
....................          if(unidad==2) 
4990:  MOVF   x37,W
4992:  SUBLW  02
4994:  BNZ   49F2
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
4996:  MOVFF  564,5E2
499A:  MOVLW  14
499C:  MOVWF  xE3
499E:  MOVLW  1E
49A0:  MOVWF  xE4
49A2:  CLRF   xE5
49A4:  MOVLB  0
49A6:  CALL   186C
....................             displayContrasena(Contrasena[1],40,30,1); 
49AA:  MOVFF  565,5E2
49AE:  MOVLW  28
49B0:  MOVLB  5
49B2:  MOVWF  xE3
49B4:  MOVLW  1E
49B6:  MOVWF  xE4
49B8:  MOVLW  01
49BA:  MOVWF  xE5
49BC:  MOVLB  0
49BE:  CALL   186C
....................             displayContrasena(Contrasena[2],60,30,0); 
49C2:  MOVFF  566,5E2
49C6:  MOVLW  3C
49C8:  MOVLB  5
49CA:  MOVWF  xE3
49CC:  MOVLW  1E
49CE:  MOVWF  xE4
49D0:  CLRF   xE5
49D2:  MOVLB  0
49D4:  CALL   186C
....................             displayContrasena(Contrasena[3],80,30,0); 
49D8:  MOVFF  567,5E2
49DC:  MOVLW  50
49DE:  MOVLB  5
49E0:  MOVWF  xE3
49E2:  MOVLW  1E
49E4:  MOVWF  xE4
49E6:  CLRF   xE5
49E8:  MOVLB  0
49EA:  CALL   186C
....................          } 
....................          else 
49EE:  BRA    4AB2
49F0:  MOVLB  5
....................          { 
....................             if(unidad==3) 
49F2:  MOVF   x37,W
49F4:  SUBLW  03
49F6:  BNZ   4A54
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
49F8:  MOVFF  564,5E2
49FC:  MOVLW  14
49FE:  MOVWF  xE3
4A00:  MOVLW  1E
4A02:  MOVWF  xE4
4A04:  CLRF   xE5
4A06:  MOVLB  0
4A08:  CALL   186C
....................                displayContrasena(Contrasena[1],40,30,0); 
4A0C:  MOVFF  565,5E2
4A10:  MOVLW  28
4A12:  MOVLB  5
4A14:  MOVWF  xE3
4A16:  MOVLW  1E
4A18:  MOVWF  xE4
4A1A:  CLRF   xE5
4A1C:  MOVLB  0
4A1E:  CALL   186C
....................                displayContrasena(Contrasena[2],60,30,1); 
4A22:  MOVFF  566,5E2
4A26:  MOVLW  3C
4A28:  MOVLB  5
4A2A:  MOVWF  xE3
4A2C:  MOVLW  1E
4A2E:  MOVWF  xE4
4A30:  MOVLW  01
4A32:  MOVWF  xE5
4A34:  MOVLB  0
4A36:  CALL   186C
....................                displayContrasena(Contrasena[3],80,30,0); 
4A3A:  MOVFF  567,5E2
4A3E:  MOVLW  50
4A40:  MOVLB  5
4A42:  MOVWF  xE3
4A44:  MOVLW  1E
4A46:  MOVWF  xE4
4A48:  CLRF   xE5
4A4A:  MOVLB  0
4A4C:  CALL   186C
....................             } 
....................             else 
4A50:  BRA    4AB2
4A52:  MOVLB  5
....................             { 
....................                if(unidad==4) 
4A54:  MOVF   x37,W
4A56:  SUBLW  04
4A58:  BNZ   4AB4
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4A5A:  MOVFF  564,5E2
4A5E:  MOVLW  14
4A60:  MOVWF  xE3
4A62:  MOVLW  1E
4A64:  MOVWF  xE4
4A66:  CLRF   xE5
4A68:  MOVLB  0
4A6A:  CALL   186C
....................                   displayContrasena(Contrasena[1],40,30,0); 
4A6E:  MOVFF  565,5E2
4A72:  MOVLW  28
4A74:  MOVLB  5
4A76:  MOVWF  xE3
4A78:  MOVLW  1E
4A7A:  MOVWF  xE4
4A7C:  CLRF   xE5
4A7E:  MOVLB  0
4A80:  CALL   186C
....................                   displayContrasena(Contrasena[2],60,30,0); 
4A84:  MOVFF  566,5E2
4A88:  MOVLW  3C
4A8A:  MOVLB  5
4A8C:  MOVWF  xE3
4A8E:  MOVLW  1E
4A90:  MOVWF  xE4
4A92:  CLRF   xE5
4A94:  MOVLB  0
4A96:  CALL   186C
....................                   displayContrasena(Contrasena[3],80,30,1); 
4A9A:  MOVFF  567,5E2
4A9E:  MOVLW  50
4AA0:  MOVLB  5
4AA2:  MOVWF  xE3
4AA4:  MOVLW  1E
4AA6:  MOVWF  xE4
4AA8:  MOVLW  01
4AAA:  MOVWF  xE5
4AAC:  MOVLB  0
4AAE:  CALL   186C
4AB2:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4AB4:  BSF    F92.0
4AB6:  BTFSS  F80.0
4AB8:  BRA    4B20
....................       { 
....................          if(Flanco == 0) 
4ABA:  BTFSC  x29.0
4ABC:  BRA    4B1E
....................          { 
....................             Flanco = 1;delay_ms(30); 
4ABE:  BSF    x29.0
4AC0:  MOVLW  1E
4AC2:  MOVWF  xE1
4AC4:  MOVLB  0
4AC6:  CALL   0F72
....................             for(i=1;i<=4;i++) 
4ACA:  MOVLW  01
4ACC:  MOVLB  5
4ACE:  MOVWF  x3A
4AD0:  MOVF   x3A,W
4AD2:  SUBLW  04
4AD4:  BNC   4B1E
....................             { 
....................                if(unidad==i) 
4AD6:  MOVF   x3A,W
4AD8:  SUBWF  x37,W
4ADA:  BNZ   4B1A
....................                { 
....................                   Contrasena[i-1]++; 
4ADC:  MOVLW  01
4ADE:  SUBWF  x3A,W
4AE0:  CLRF   03
4AE2:  ADDLW  64
4AE4:  MOVWF  FE9
4AE6:  MOVLW  05
4AE8:  ADDWFC 03,W
4AEA:  MOVWF  FEA
4AEC:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4AEE:  MOVLW  01
4AF0:  SUBWF  x3A,W
4AF2:  CLRF   03
4AF4:  ADDLW  64
4AF6:  MOVWF  FE9
4AF8:  MOVLW  05
4AFA:  ADDWFC 03,W
4AFC:  MOVWF  FEA
4AFE:  BTFSC  FEF.7
4B00:  BRA    4B1A
4B02:  MOVF   FEF,W
4B04:  SUBLW  09
4B06:  BC    4B1A
....................                   { 
....................                      Contrasena[i-1]=0; 
4B08:  MOVLW  01
4B0A:  SUBWF  x3A,W
4B0C:  CLRF   03
4B0E:  ADDLW  64
4B10:  MOVWF  FE9
4B12:  MOVLW  05
4B14:  ADDWFC 03,W
4B16:  MOVWF  FEA
4B18:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4B1A:  INCF   x3A,F
4B1C:  BRA    4AD0
....................          } 
....................       } 
....................       else 
4B1E:  BRA    4B22
....................       { 
....................          Flanco = 0; 
4B20:  BCF    x29.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4B22:  BSF    F92.1
4B24:  BTFSS  F80.1
4B26:  BRA    4B8C
....................       { 
....................          if(Flanco2 == 0) 
4B28:  BTFSC  x29.2
4B2A:  BRA    4B8A
....................             {Flanco2 = 1;delay_ms(30); 
4B2C:  BSF    x29.2
4B2E:  MOVLW  1E
4B30:  MOVWF  xE1
4B32:  MOVLB  0
4B34:  CALL   0F72
....................                for(i=1;i<=4;i++) 
4B38:  MOVLW  01
4B3A:  MOVLB  5
4B3C:  MOVWF  x3A
4B3E:  MOVF   x3A,W
4B40:  SUBLW  04
4B42:  BNC   4B8A
....................                { 
....................                   if(unidad==i) 
4B44:  MOVF   x3A,W
4B46:  SUBWF  x37,W
4B48:  BNZ   4B86
....................                   {Contrasena[i-1]--;  
4B4A:  MOVLW  01
4B4C:  SUBWF  x3A,W
4B4E:  CLRF   03
4B50:  ADDLW  64
4B52:  MOVWF  FE9
4B54:  MOVLW  05
4B56:  ADDWFC 03,W
4B58:  MOVWF  FEA
4B5A:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4B5C:  MOVLW  01
4B5E:  SUBWF  x3A,W
4B60:  CLRF   03
4B62:  ADDLW  64
4B64:  MOVWF  FE9
4B66:  MOVLW  05
4B68:  ADDWFC 03,W
4B6A:  MOVWF  FEA
4B6C:  BTFSC  FEF.7
4B6E:  BRA    4B72
4B70:  BRA    4B86
....................                         {Contrasena[i-1]=9;} 
4B72:  MOVLW  01
4B74:  SUBWF  x3A,W
4B76:  CLRF   03
4B78:  ADDLW  64
4B7A:  MOVWF  FE9
4B7C:  MOVLW  05
4B7E:  ADDWFC 03,W
4B80:  MOVWF  FEA
4B82:  MOVLW  09
4B84:  MOVWF  FEF
....................                   } 
....................                }       
4B86:  INCF   x3A,F
4B88:  BRA    4B3E
....................             }      
....................       } 
....................       else 
4B8A:  BRA    4B8E
....................       { 
....................          Flanco2 = 0; 
4B8C:  BCF    x29.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4B8E:  BSF    F92.2
4B90:  BTFSS  F80.2
4B92:  BRA    4BB2
....................       { 
....................          if(Flanco1 == 0) 
4B94:  BTFSC  x29.1
4B96:  BRA    4BB0
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4B98:  BSF    x29.1
4B9A:  MOVLW  02
4B9C:  MOVWF  xE0
4B9E:  MOVLW  96
4BA0:  MOVWF  xE1
4BA2:  MOVLB  0
4BA4:  CALL   0F72
4BA8:  MOVLB  5
4BAA:  DECFSZ xE0,F
4BAC:  BRA    4B9E
4BAE:  INCF   x37,F
....................       } 
....................       else 
4BB0:  BRA    4BB4
....................       { 
....................          Flanco1 = 0; 
4BB2:  BCF    x29.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4BB4:  BSF    F92.3
4BB6:  BTFSS  F80.3
4BB8:  BRA    4BDC
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4BBA:  MOVLW  04
4BBC:  MOVWF  xE0
4BBE:  MOVLW  AF
4BC0:  MOVWF  xE1
4BC2:  MOVLB  0
4BC4:  CALL   0F72
4BC8:  MOVLB  5
4BCA:  DECFSZ xE0,F
4BCC:  BRA    4BBE
4BCE:  MOVLW  01
4BD0:  MOVWF  x36
4BD2:  CLRF   xE1
4BD4:  MOVLB  0
4BD6:  CALL   0FDC
4BDA:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
4BDC:  MOVF   x37,W
4BDE:  SUBLW  04
4BE0:  BTFSC  FD8.0
4BE2:  BRA    4D82
....................       {glcd_fillScreen(OFF); 
4BE4:  CLRF   xE1
4BE6:  MOVLB  0
4BE8:  CALL   0FDC
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4BEC:  MOVLB  5
4BEE:  MOVF   x68,W
4BF0:  SUBWF  x64,W
4BF2:  BNZ   4CC2
4BF4:  MOVF   x69,W
4BF6:  SUBWF  x65,W
4BF8:  BNZ   4CC2
4BFA:  MOVF   x6A,W
4BFC:  SUBWF  x66,W
4BFE:  BNZ   4CC2
4C00:  MOVF   x6B,W
4C02:  SUBWF  x67,W
4C04:  BNZ   4CC2
....................          { 
....................             glcd_fillScreen(OFF); 
4C06:  CLRF   xE1
4C08:  MOVLB  0
4C0A:  CALL   0FDC
....................             strcpy(Menus.Letra,"Clave"); 
4C0E:  MOVLW  05
4C10:  MOVWF  FEA
4C12:  MOVLW  C0
4C14:  MOVWF  FE9
4C16:  MOVFF  FF2,5E0
4C1A:  BCF    FF2.7
4C1C:  MOVLW  00
4C1E:  CALL   0758
4C22:  TBLRD*-
4C24:  TBLRD*+
4C26:  MOVF   FF5,W
4C28:  MOVWF  FEE
4C2A:  IORLW  00
4C2C:  BNZ   4C24
4C2E:  MOVLB  5
4C30:  BTFSC  xE0.7
4C32:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4C34:  MOVLW  05
4C36:  MOVWF  xE1
4C38:  MOVLW  C0
4C3A:  MOVWF  xE0
4C3C:  MOVLW  1E
4C3E:  MOVWF  xE2
4C40:  CLRF   xE3
4C42:  CLRF   xE4
4C44:  MOVLW  02
4C46:  MOVWF  xE5
4C48:  MOVLB  0
4C4A:  CALL   1646
....................             strcpy(Menus.Letra,"Correcta"); 
4C4E:  MOVLW  05
4C50:  MOVWF  FEA
4C52:  MOVLW  C0
4C54:  MOVWF  FE9
4C56:  MOVFF  FF2,5E0
4C5A:  BCF    FF2.7
4C5C:  MOVLW  00
4C5E:  CALL   0778
4C62:  TBLRD*-
4C64:  TBLRD*+
4C66:  MOVF   FF5,W
4C68:  MOVWF  FEE
4C6A:  IORLW  00
4C6C:  BNZ   4C64
4C6E:  MOVLB  5
4C70:  BTFSC  xE0.7
4C72:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4C74:  MOVLW  05
4C76:  MOVWF  xE1
4C78:  MOVLW  C0
4C7A:  MOVWF  xE0
4C7C:  MOVLW  0F
4C7E:  MOVWF  xE2
4C80:  MOVLW  1E
4C82:  MOVWF  xE3
4C84:  CLRF   xE4
4C86:  MOVLW  02
4C88:  MOVWF  xE5
4C8A:  MOVLB  0
4C8C:  CALL   1646
....................             Menu=91;glcd_update();delay_ms(1000); 
4C90:  MOVLW  5B
4C92:  MOVLB  5
4C94:  MOVWF  x36
4C96:  MOVLB  0
4C98:  CALL   1036
4C9C:  MOVLW  04
4C9E:  MOVLB  5
4CA0:  MOVWF  xE0
4CA2:  MOVLW  FA
4CA4:  MOVWF  xE1
4CA6:  MOVLB  0
4CA8:  CALL   0F72
4CAC:  MOVLB  5
4CAE:  DECFSZ xE0,F
4CB0:  BRA    4CA2
....................             glcd_fillScreen(OFF);unidad=1; 
4CB2:  CLRF   xE1
4CB4:  MOVLB  0
4CB6:  CALL   0FDC
4CBA:  MOVLW  01
4CBC:  MOVLB  5
4CBE:  MOVWF  x37
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4CC0:  BRA    4D82
....................          { 
....................             glcd_fillScreen(OFF); 
4CC2:  CLRF   xE1
4CC4:  MOVLB  0
4CC6:  CALL   0FDC
....................             strcpy(Menus.Letra,"Clave"); 
4CCA:  MOVLW  05
4CCC:  MOVWF  FEA
4CCE:  MOVLW  C0
4CD0:  MOVWF  FE9
4CD2:  MOVFF  FF2,5E0
4CD6:  BCF    FF2.7
4CD8:  MOVLW  00
4CDA:  CALL   0758
4CDE:  TBLRD*-
4CE0:  TBLRD*+
4CE2:  MOVF   FF5,W
4CE4:  MOVWF  FEE
4CE6:  IORLW  00
4CE8:  BNZ   4CE0
4CEA:  MOVLB  5
4CEC:  BTFSC  xE0.7
4CEE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4CF0:  MOVLW  05
4CF2:  MOVWF  xE1
4CF4:  MOVLW  C0
4CF6:  MOVWF  xE0
4CF8:  MOVLW  1E
4CFA:  MOVWF  xE2
4CFC:  CLRF   xE3
4CFE:  CLRF   xE4
4D00:  MOVLW  02
4D02:  MOVWF  xE5
4D04:  MOVLB  0
4D06:  CALL   1646
....................             strcpy(Menus.Letra,"Incorrecta"); 
4D0A:  MOVLW  05
4D0C:  MOVWF  FEA
4D0E:  MOVLW  C0
4D10:  MOVWF  FE9
4D12:  MOVFF  FF2,5E0
4D16:  BCF    FF2.7
4D18:  MOVLW  00
4D1A:  CALL   079C
4D1E:  TBLRD*-
4D20:  TBLRD*+
4D22:  MOVF   FF5,W
4D24:  MOVWF  FEE
4D26:  IORLW  00
4D28:  BNZ   4D20
4D2A:  MOVLB  5
4D2C:  BTFSC  xE0.7
4D2E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4D30:  MOVLW  05
4D32:  MOVWF  xE1
4D34:  MOVLW  C0
4D36:  MOVWF  xE0
4D38:  CLRF   xE2
4D3A:  MOVLW  1E
4D3C:  MOVWF  xE3
4D3E:  CLRF   xE4
4D40:  MOVLW  02
4D42:  MOVWF  xE5
4D44:  MOVLB  0
4D46:  CALL   1646
....................             Menu=1;glcd_update();delay_ms(1000); 
4D4A:  MOVLW  01
4D4C:  MOVLB  5
4D4E:  MOVWF  x36
4D50:  MOVLB  0
4D52:  CALL   1036
4D56:  MOVLW  04
4D58:  MOVLB  5
4D5A:  MOVWF  xE0
4D5C:  MOVLW  FA
4D5E:  MOVWF  xE1
4D60:  MOVLB  0
4D62:  CALL   0F72
4D66:  MOVLB  5
4D68:  DECFSZ xE0,F
4D6A:  BRA    4D5C
....................             glcd_fillScreen(OFF);unidad=1; 
4D6C:  CLRF   xE1
4D6E:  MOVLB  0
4D70:  CALL   0FDC
4D74:  MOVLW  01
4D76:  MOVLB  5
4D78:  MOVWF  x37
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4D7A:  CLRF   x64
4D7C:  CLRF   x65
4D7E:  CLRF   x66
4D80:  CLRF   x67
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4D82:  MOVF   x36,W
4D84:  SUBLW  5B
4D86:  BTFSS  FD8.2
4D88:  BRA    514C
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4D8A:  MOVLW  05
4D8C:  MOVWF  FEA
4D8E:  MOVLW  C0
4D90:  MOVWF  FE9
4D92:  MOVFF  FF2,5E0
4D96:  BCF    FF2.7
4D98:  MOVLW  00
4D9A:  MOVLB  0
4D9C:  CALL   0BE0
4DA0:  TBLRD*-
4DA2:  TBLRD*+
4DA4:  MOVF   FF5,W
4DA6:  MOVWF  FEE
4DA8:  IORLW  00
4DAA:  BNZ   4DA2
4DAC:  MOVLB  5
4DAE:  BTFSC  xE0.7
4DB0:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4DB2:  MOVLW  05
4DB4:  MOVWF  xE1
4DB6:  MOVLW  C0
4DB8:  MOVWF  xE0
4DBA:  CLRF   xE2
4DBC:  CLRF   xE3
4DBE:  MOVLW  01
4DC0:  MOVWF  xE4
4DC2:  MOVLW  02
4DC4:  MOVWF  xE5
4DC6:  MOVLB  0
4DC8:  CALL   1646
....................        
....................       if(unidad==1) 
4DCC:  MOVLB  5
4DCE:  DECFSZ x37,W
4DD0:  BRA    4E2E
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4DD2:  MOVFF  568,5E2
4DD6:  MOVLW  14
4DD8:  MOVWF  xE3
4DDA:  MOVLW  1E
4DDC:  MOVWF  xE4
4DDE:  MOVLW  01
4DE0:  MOVWF  xE5
4DE2:  MOVLB  0
4DE4:  CALL   186C
....................          displayContrasena(Password[1],40,30,0); 
4DE8:  MOVFF  569,5E2
4DEC:  MOVLW  28
4DEE:  MOVLB  5
4DF0:  MOVWF  xE3
4DF2:  MOVLW  1E
4DF4:  MOVWF  xE4
4DF6:  CLRF   xE5
4DF8:  MOVLB  0
4DFA:  CALL   186C
....................          displayContrasena(Password[2],60,30,0); 
4DFE:  MOVFF  56A,5E2
4E02:  MOVLW  3C
4E04:  MOVLB  5
4E06:  MOVWF  xE3
4E08:  MOVLW  1E
4E0A:  MOVWF  xE4
4E0C:  CLRF   xE5
4E0E:  MOVLB  0
4E10:  CALL   186C
....................          displayContrasena(Password[3],80,30,0); 
4E14:  MOVFF  56B,5E2
4E18:  MOVLW  50
4E1A:  MOVLB  5
4E1C:  MOVWF  xE3
4E1E:  MOVLW  1E
4E20:  MOVWF  xE4
4E22:  CLRF   xE5
4E24:  MOVLB  0
4E26:  CALL   186C
....................       } 
....................       else 
4E2A:  BRA    4F50
4E2C:  MOVLB  5
....................       { 
....................          if(unidad==2) 
4E2E:  MOVF   x37,W
4E30:  SUBLW  02
4E32:  BNZ   4E90
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4E34:  MOVFF  568,5E2
4E38:  MOVLW  14
4E3A:  MOVWF  xE3
4E3C:  MOVLW  1E
4E3E:  MOVWF  xE4
4E40:  CLRF   xE5
4E42:  MOVLB  0
4E44:  CALL   186C
....................             displayContrasena(Password[1],40,30,1); 
4E48:  MOVFF  569,5E2
4E4C:  MOVLW  28
4E4E:  MOVLB  5
4E50:  MOVWF  xE3
4E52:  MOVLW  1E
4E54:  MOVWF  xE4
4E56:  MOVLW  01
4E58:  MOVWF  xE5
4E5A:  MOVLB  0
4E5C:  CALL   186C
....................             displayContrasena(Password[2],60,30,0); 
4E60:  MOVFF  56A,5E2
4E64:  MOVLW  3C
4E66:  MOVLB  5
4E68:  MOVWF  xE3
4E6A:  MOVLW  1E
4E6C:  MOVWF  xE4
4E6E:  CLRF   xE5
4E70:  MOVLB  0
4E72:  CALL   186C
....................             displayContrasena(Password[3],80,30,0); 
4E76:  MOVFF  56B,5E2
4E7A:  MOVLW  50
4E7C:  MOVLB  5
4E7E:  MOVWF  xE3
4E80:  MOVLW  1E
4E82:  MOVWF  xE4
4E84:  CLRF   xE5
4E86:  MOVLB  0
4E88:  CALL   186C
....................          } 
....................          else 
4E8C:  BRA    4F50
4E8E:  MOVLB  5
....................          { 
....................             if(unidad==3) 
4E90:  MOVF   x37,W
4E92:  SUBLW  03
4E94:  BNZ   4EF2
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4E96:  MOVFF  568,5E2
4E9A:  MOVLW  14
4E9C:  MOVWF  xE3
4E9E:  MOVLW  1E
4EA0:  MOVWF  xE4
4EA2:  CLRF   xE5
4EA4:  MOVLB  0
4EA6:  CALL   186C
....................                displayContrasena(Password[1],40,30,0); 
4EAA:  MOVFF  569,5E2
4EAE:  MOVLW  28
4EB0:  MOVLB  5
4EB2:  MOVWF  xE3
4EB4:  MOVLW  1E
4EB6:  MOVWF  xE4
4EB8:  CLRF   xE5
4EBA:  MOVLB  0
4EBC:  CALL   186C
....................                displayContrasena(Password[2],60,30,1); 
4EC0:  MOVFF  56A,5E2
4EC4:  MOVLW  3C
4EC6:  MOVLB  5
4EC8:  MOVWF  xE3
4ECA:  MOVLW  1E
4ECC:  MOVWF  xE4
4ECE:  MOVLW  01
4ED0:  MOVWF  xE5
4ED2:  MOVLB  0
4ED4:  CALL   186C
....................                displayContrasena(Password[3],80,30,0); 
4ED8:  MOVFF  56B,5E2
4EDC:  MOVLW  50
4EDE:  MOVLB  5
4EE0:  MOVWF  xE3
4EE2:  MOVLW  1E
4EE4:  MOVWF  xE4
4EE6:  CLRF   xE5
4EE8:  MOVLB  0
4EEA:  CALL   186C
....................             } 
....................             else 
4EEE:  BRA    4F50
4EF0:  MOVLB  5
....................             { 
....................                if(unidad==4) 
4EF2:  MOVF   x37,W
4EF4:  SUBLW  04
4EF6:  BNZ   4F52
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4EF8:  MOVFF  568,5E2
4EFC:  MOVLW  14
4EFE:  MOVWF  xE3
4F00:  MOVLW  1E
4F02:  MOVWF  xE4
4F04:  CLRF   xE5
4F06:  MOVLB  0
4F08:  CALL   186C
....................                   displayContrasena(Password[1],40,30,0); 
4F0C:  MOVFF  569,5E2
4F10:  MOVLW  28
4F12:  MOVLB  5
4F14:  MOVWF  xE3
4F16:  MOVLW  1E
4F18:  MOVWF  xE4
4F1A:  CLRF   xE5
4F1C:  MOVLB  0
4F1E:  CALL   186C
....................                   displayContrasena(Password[2],60,30,0); 
4F22:  MOVFF  56A,5E2
4F26:  MOVLW  3C
4F28:  MOVLB  5
4F2A:  MOVWF  xE3
4F2C:  MOVLW  1E
4F2E:  MOVWF  xE4
4F30:  CLRF   xE5
4F32:  MOVLB  0
4F34:  CALL   186C
....................                   displayContrasena(Password[3],80,30,1); 
4F38:  MOVFF  56B,5E2
4F3C:  MOVLW  50
4F3E:  MOVLB  5
4F40:  MOVWF  xE3
4F42:  MOVLW  1E
4F44:  MOVWF  xE4
4F46:  MOVLW  01
4F48:  MOVWF  xE5
4F4A:  MOVLB  0
4F4C:  CALL   186C
4F50:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4F52:  BSF    F92.0
4F54:  BTFSS  F80.0
4F56:  BRA    4FBE
....................       { 
....................          if(Flanco == 0) 
4F58:  BTFSC  x29.0
4F5A:  BRA    4FBC
....................          { 
....................             Flanco = 1;delay_ms(30); 
4F5C:  BSF    x29.0
4F5E:  MOVLW  1E
4F60:  MOVWF  xE1
4F62:  MOVLB  0
4F64:  CALL   0F72
....................             for(i=1;i<=4;i++) 
4F68:  MOVLW  01
4F6A:  MOVLB  5
4F6C:  MOVWF  x3A
4F6E:  MOVF   x3A,W
4F70:  SUBLW  04
4F72:  BNC   4FBC
....................             { 
....................                if(unidad==i) 
4F74:  MOVF   x3A,W
4F76:  SUBWF  x37,W
4F78:  BNZ   4FB8
....................                { 
....................                   Password[i-1]++; 
4F7A:  MOVLW  01
4F7C:  SUBWF  x3A,W
4F7E:  CLRF   03
4F80:  ADDLW  68
4F82:  MOVWF  FE9
4F84:  MOVLW  05
4F86:  ADDWFC 03,W
4F88:  MOVWF  FEA
4F8A:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4F8C:  MOVLW  01
4F8E:  SUBWF  x3A,W
4F90:  CLRF   03
4F92:  ADDLW  68
4F94:  MOVWF  FE9
4F96:  MOVLW  05
4F98:  ADDWFC 03,W
4F9A:  MOVWF  FEA
4F9C:  BTFSC  FEF.7
4F9E:  BRA    4FB8
4FA0:  MOVF   FEF,W
4FA2:  SUBLW  09
4FA4:  BC    4FB8
....................                   { 
....................                      Password[i-1]=0; 
4FA6:  MOVLW  01
4FA8:  SUBWF  x3A,W
4FAA:  CLRF   03
4FAC:  ADDLW  68
4FAE:  MOVWF  FE9
4FB0:  MOVLW  05
4FB2:  ADDWFC 03,W
4FB4:  MOVWF  FEA
4FB6:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4FB8:  INCF   x3A,F
4FBA:  BRA    4F6E
....................          } 
....................       } 
....................       else 
4FBC:  BRA    4FC0
....................       { 
....................          Flanco = 0; 
4FBE:  BCF    x29.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4FC0:  BSF    F92.1
4FC2:  BTFSS  F80.1
4FC4:  BRA    502A
....................       { 
....................          if(Flanco2 == 0) 
4FC6:  BTFSC  x29.2
4FC8:  BRA    5028
....................             {Flanco2 = 1;delay_ms(30); 
4FCA:  BSF    x29.2
4FCC:  MOVLW  1E
4FCE:  MOVWF  xE1
4FD0:  MOVLB  0
4FD2:  CALL   0F72
....................                for(i=1;i<=4;i++) 
4FD6:  MOVLW  01
4FD8:  MOVLB  5
4FDA:  MOVWF  x3A
4FDC:  MOVF   x3A,W
4FDE:  SUBLW  04
4FE0:  BNC   5028
....................                { 
....................                   if(unidad==i) 
4FE2:  MOVF   x3A,W
4FE4:  SUBWF  x37,W
4FE6:  BNZ   5024
....................                   { 
....................                      Password[i-1]--; 
4FE8:  MOVLW  01
4FEA:  SUBWF  x3A,W
4FEC:  CLRF   03
4FEE:  ADDLW  68
4FF0:  MOVWF  FE9
4FF2:  MOVLW  05
4FF4:  ADDWFC 03,W
4FF6:  MOVWF  FEA
4FF8:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4FFA:  MOVLW  01
4FFC:  SUBWF  x3A,W
4FFE:  CLRF   03
5000:  ADDLW  68
5002:  MOVWF  FE9
5004:  MOVLW  05
5006:  ADDWFC 03,W
5008:  MOVWF  FEA
500A:  BTFSC  FEF.7
500C:  BRA    5010
500E:  BRA    5024
....................                      { 
....................                         Password[i-1]=9; 
5010:  MOVLW  01
5012:  SUBWF  x3A,W
5014:  CLRF   03
5016:  ADDLW  68
5018:  MOVWF  FE9
501A:  MOVLW  05
501C:  ADDWFC 03,W
501E:  MOVWF  FEA
5020:  MOVLW  09
5022:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
5024:  INCF   x3A,F
5026:  BRA    4FDC
....................             }      
....................       } 
....................       else 
5028:  BRA    502C
....................       { 
....................          Flanco2 = 0; 
502A:  BCF    x29.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
502C:  BSF    F92.2
502E:  BTFSS  F80.2
5030:  BRA    5050
....................       { 
....................          if(Flanco1 == 0) 
5032:  BTFSC  x29.1
5034:  BRA    504E
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
5036:  BSF    x29.1
5038:  MOVLW  02
503A:  MOVWF  xE0
503C:  MOVLW  96
503E:  MOVWF  xE1
5040:  MOVLB  0
5042:  CALL   0F72
5046:  MOVLB  5
5048:  DECFSZ xE0,F
504A:  BRA    503C
504C:  INCF   x37,F
....................       } 
....................       else 
504E:  BRA    5052
....................       { 
....................          Flanco1 = 0; 
5050:  BCF    x29.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
5052:  BSF    F92.3
5054:  BTFSS  F80.3
5056:  BRA    507A
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
5058:  MOVLW  04
505A:  MOVWF  xE0
505C:  MOVLW  AF
505E:  MOVWF  xE1
5060:  MOVLB  0
5062:  CALL   0F72
5066:  MOVLB  5
5068:  DECFSZ xE0,F
506A:  BRA    505C
506C:  MOVLW  01
506E:  MOVWF  x36
5070:  CLRF   xE1
5072:  MOVLB  0
5074:  CALL   0FDC
5078:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
507A:  MOVF   x37,W
507C:  SUBLW  04
507E:  BC    514C
....................       { 
....................          Opcion=1;unidad=1; 
5080:  MOVLW  01
5082:  MOVWF  x3D
5084:  MOVWF  x37
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
5086:  MOVLW  0A
5088:  MOVWF  FA9
508A:  MOVFF  568,FA8
508E:  BCF    FA6.6
5090:  BCF    FA6.7
5092:  BSF    FA6.2
5094:  MOVF   FF2,W
5096:  MOVWF  00
5098:  BCF    FF2.7
509A:  MOVLB  F
509C:  MOVLW  55
509E:  MOVWF  FA7
50A0:  MOVLW  AA
50A2:  MOVWF  FA7
50A4:  BSF    FA6.1
50A6:  BTFSC  FA6.1
50A8:  BRA    50A6
50AA:  BCF    FA6.2
50AC:  MOVF   00,W
50AE:  IORWF  FF2,F
50B0:  MOVLW  0B
50B2:  MOVWF  FA9
50B4:  MOVFF  569,FA8
50B8:  BCF    FA6.6
50BA:  BCF    FA6.7
50BC:  BSF    FA6.2
50BE:  MOVF   FF2,W
50C0:  MOVWF  00
50C2:  BCF    FF2.7
50C4:  MOVLW  55
50C6:  MOVWF  FA7
50C8:  MOVLW  AA
50CA:  MOVWF  FA7
50CC:  BSF    FA6.1
50CE:  BTFSC  FA6.1
50D0:  BRA    50CE
50D2:  BCF    FA6.2
50D4:  MOVF   00,W
50D6:  IORWF  FF2,F
50D8:  MOVLW  0C
50DA:  MOVWF  FA9
50DC:  MOVFF  56A,FA8
50E0:  BCF    FA6.6
50E2:  BCF    FA6.7
50E4:  BSF    FA6.2
50E6:  MOVF   FF2,W
50E8:  MOVWF  00
50EA:  BCF    FF2.7
50EC:  MOVLW  55
50EE:  MOVWF  FA7
50F0:  MOVLW  AA
50F2:  MOVWF  FA7
50F4:  BSF    FA6.1
50F6:  BTFSC  FA6.1
50F8:  BRA    50F6
50FA:  BCF    FA6.2
50FC:  MOVF   00,W
50FE:  IORWF  FF2,F
5100:  MOVLW  0D
5102:  MOVWF  FA9
5104:  MOVFF  56B,FA8
5108:  BCF    FA6.6
510A:  BCF    FA6.7
510C:  BSF    FA6.2
510E:  MOVF   FF2,W
5110:  MOVWF  00
5112:  BCF    FF2.7
5114:  MOVLW  55
5116:  MOVWF  FA7
5118:  MOVLW  AA
511A:  MOVWF  FA7
511C:  BSF    FA6.1
511E:  BTFSC  FA6.1
5120:  BRA    511E
5122:  BCF    FA6.2
5124:  MOVF   00,W
5126:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
5128:  MOVLW  04
512A:  MOVLB  5
512C:  MOVWF  xE0
512E:  MOVLW  FA
5130:  MOVWF  xE1
5132:  MOVLB  0
5134:  CALL   0F72
5138:  MOVLB  5
513A:  DECFSZ xE0,F
513C:  BRA    512E
513E:  CLRF   xE1
5140:  MOVLB  0
5142:  CALL   0FDC
5146:  MOVLW  01
5148:  MOVLB  5
514A:  MOVWF  x36
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
514C:  MOVF   x36,W
514E:  SUBLW  0B
5150:  BTFSS  FD8.2
5152:  BRA    5440
....................       
....................       if(visual==1) 
5154:  BTFSS  x29.4
5156:  BRA    52DA
....................       { 
....................          if(unidad<1) 
5158:  MOVF   x37,F
515A:  BNZ   5160
....................          {unidad=4;} 
515C:  MOVLW  04
515E:  MOVWF  x37
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
5160:  MOVLW  05
5162:  MOVWF  FEA
5164:  MOVLW  C0
5166:  MOVWF  FE9
5168:  MOVFF  FF2,5E0
516C:  BCF    FF2.7
516E:  MOVLW  00
5170:  MOVLB  0
5172:  CALL   0C06
5176:  TBLRD*-
5178:  TBLRD*+
517A:  MOVF   FF5,W
517C:  MOVWF  FEE
517E:  IORLW  00
5180:  BNZ   5178
5182:  MOVLB  5
5184:  BTFSC  xE0.7
5186:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5188:  MOVLW  05
518A:  MOVWF  xE1
518C:  MOVLW  C0
518E:  MOVWF  xE0
5190:  CLRF   xE2
5192:  CLRF   xE3
5194:  MOVLW  01
5196:  MOVWF  xE4
5198:  MOVLW  02
519A:  MOVWF  xE5
519C:  MOVLB  0
519E:  CALL   1646
....................           
....................          if(unidad==4) 
51A2:  MOVLB  5
51A4:  MOVF   x37,W
51A6:  SUBLW  04
51A8:  BNZ   51C8
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
51AA:  MOVFF  55B,5E1
51AE:  MOVLW  14
51B0:  MOVWF  xE2
51B2:  MOVLW  28
51B4:  MOVWF  xE3
51B6:  MOVLW  01
51B8:  MOVWF  xE4
51BA:  MOVLW  02
51BC:  MOVWF  xE5
51BE:  MOVLB  0
51C0:  CALL   2450
....................          else 
51C4:  BRA    51E0
51C6:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
51C8:  MOVFF  55B,5E1
51CC:  MOVLW  14
51CE:  MOVWF  xE2
51D0:  MOVLW  28
51D2:  MOVWF  xE3
51D4:  CLRF   xE4
51D6:  MOVLW  02
51D8:  MOVWF  xE5
51DA:  MOVLB  0
51DC:  CALL   2450
....................           
....................          if(unidad==3) 
51E0:  MOVLB  5
51E2:  MOVF   x37,W
51E4:  SUBLW  03
51E6:  BNZ   5204
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
51E8:  MOVFF  55A,5E1
51EC:  MOVLW  28
51EE:  MOVWF  xE2
51F0:  MOVWF  xE3
51F2:  MOVLW  01
51F4:  MOVWF  xE4
51F6:  MOVLW  02
51F8:  MOVWF  xE5
51FA:  MOVLB  0
51FC:  CALL   2450
....................          else 
5200:  BRA    521A
5202:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
5204:  MOVFF  55A,5E1
5208:  MOVLW  28
520A:  MOVWF  xE2
520C:  MOVWF  xE3
520E:  CLRF   xE4
5210:  MOVLW  02
5212:  MOVWF  xE5
5214:  MOVLB  0
5216:  CALL   2450
....................           
....................          if(unidad==2) 
521A:  MOVLB  5
521C:  MOVF   x37,W
521E:  SUBLW  02
5220:  BNZ   5240
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
5222:  MOVFF  559,5E1
5226:  MOVLW  46
5228:  MOVWF  xE2
522A:  MOVLW  28
522C:  MOVWF  xE3
522E:  MOVLW  01
5230:  MOVWF  xE4
5232:  MOVLW  02
5234:  MOVWF  xE5
5236:  MOVLB  0
5238:  CALL   2450
....................          else 
523C:  BRA    5258
523E:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
5240:  MOVFF  559,5E1
5244:  MOVLW  46
5246:  MOVWF  xE2
5248:  MOVLW  28
524A:  MOVWF  xE3
524C:  CLRF   xE4
524E:  MOVLW  02
5250:  MOVWF  xE5
5252:  MOVLB  0
5254:  CALL   2450
....................           
....................          if(unidad==1) 
5258:  MOVLB  5
525A:  DECFSZ x37,W
525C:  BRA    527C
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
525E:  MOVFF  558,5E1
5262:  MOVLW  5A
5264:  MOVWF  xE2
5266:  MOVLW  28
5268:  MOVWF  xE3
526A:  MOVLW  01
526C:  MOVWF  xE4
526E:  MOVLW  02
5270:  MOVWF  xE5
5272:  MOVLB  0
5274:  CALL   2450
....................          else 
5278:  BRA    5294
527A:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
527C:  MOVFF  558,5E1
5280:  MOVLW  5A
5282:  MOVWF  xE2
5284:  MOVLW  28
5286:  MOVWF  xE3
5288:  CLRF   xE4
528A:  MOVLW  02
528C:  MOVWF  xE5
528E:  MOVLB  0
5290:  CALL   2450
....................           
....................          strcpy(Menus.Letra,":"); 
5294:  MOVLW  05
5296:  MOVWF  FEA
5298:  MOVLW  C0
529A:  MOVWF  FE9
529C:  MOVFF  FF2,5E0
52A0:  BCF    FF2.7
52A2:  MOVLW  00
52A4:  CALL   06BE
52A8:  TBLRD*-
52AA:  TBLRD*+
52AC:  MOVF   FF5,W
52AE:  MOVWF  FEE
52B0:  IORLW  00
52B2:  BNZ   52AA
52B4:  MOVLB  5
52B6:  BTFSC  xE0.7
52B8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
52BA:  MOVLW  05
52BC:  MOVWF  xE1
52BE:  MOVLW  C0
52C0:  MOVWF  xE0
52C2:  MOVLW  3C
52C4:  MOVWF  xE2
52C6:  MOVLW  2A
52C8:  MOVWF  xE3
52CA:  MOVLW  02
52CC:  MOVWF  xE4
52CE:  MOVWF  xE5
52D0:  MOVLB  0
52D2:  CALL   1646
....................           
....................          visual=0; 
52D6:  MOVLB  5
52D8:  BCF    x29.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
52DA:  BSF    F92.0
52DC:  BTFSS  F80.0
52DE:  BRA    531A
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
52E0:  MOVLW  01
52E2:  SUBWF  x37,W
52E4:  CLRF   03
52E6:  ADDLW  58
52E8:  MOVWF  FE9
52EA:  MOVLW  05
52EC:  ADDWFC 03,W
52EE:  MOVWF  FEA
52F0:  BTFSC  FEF.7
52F2:  BRA    52FA
52F4:  MOVF   FEF,W
52F6:  SUBLW  08
52F8:  BNC   531A
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
52FA:  MOVLW  1E
52FC:  MOVWF  xE1
52FE:  MOVLB  0
5300:  CALL   0F72
5304:  MOVLW  01
5306:  MOVLB  5
5308:  SUBWF  x37,W
530A:  CLRF   03
530C:  ADDLW  58
530E:  MOVWF  FE9
5310:  MOVLW  05
5312:  ADDWFC 03,W
5314:  MOVWF  FEA
5316:  INCF   FEF,F
5318:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
531A:  BSF    F92.1
531C:  BTFSS  F80.1
531E:  BRA    535A
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
5320:  MOVLW  01
5322:  SUBWF  x37,W
5324:  CLRF   03
5326:  ADDLW  58
5328:  MOVWF  FE9
532A:  MOVLW  05
532C:  ADDWFC 03,W
532E:  MOVWF  FEA
5330:  BTFSC  FEF.7
5332:  BRA    535A
5334:  MOVF   FEF,W
5336:  SUBLW  00
5338:  BC    535A
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
533A:  MOVLW  1E
533C:  MOVWF  xE1
533E:  MOVLB  0
5340:  CALL   0F72
5344:  MOVLW  01
5346:  MOVLB  5
5348:  SUBWF  x37,W
534A:  CLRF   03
534C:  ADDLW  58
534E:  MOVWF  FE9
5350:  MOVLW  05
5352:  ADDWFC 03,W
5354:  MOVWF  FEA
5356:  DECF   FEF,F
5358:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
535A:  BSF    F92.2
535C:  BTFSS  F80.2
535E:  BRA    5370
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5360:  MOVLW  1E
5362:  MOVWF  xE1
5364:  MOVLB  0
5366:  CALL   0F72
536A:  MOVLB  5
536C:  DECF   x37,F
536E:  BSF    x29.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5370:  BSF    F92.3
5372:  BTFSS  F80.3
5374:  BRA    5440
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5376:  MOVLW  04
5378:  MOVWF  xE0
537A:  MOVLW  AF
537C:  MOVWF  xE1
537E:  MOVLB  0
5380:  CALL   0F72
5384:  MOVLB  5
5386:  DECFSZ xE0,F
5388:  BRA    537A
538A:  MOVLW  08
538C:  MOVWF  x36
538E:  CLRF   xE1
5390:  MOVLB  0
5392:  CALL   0FDC
5396:  MOVLW  01
5398:  MOVLB  5
539A:  MOVWF  x3D
539C:  BSF    x29.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
539E:  CLRF   FA9
53A0:  MOVFF  558,FA8
53A4:  BCF    FA6.6
53A6:  BCF    FA6.7
53A8:  BSF    FA6.2
53AA:  MOVF   FF2,W
53AC:  MOVWF  00
53AE:  BCF    FF2.7
53B0:  MOVLB  F
53B2:  MOVLW  55
53B4:  MOVWF  FA7
53B6:  MOVLW  AA
53B8:  MOVWF  FA7
53BA:  BSF    FA6.1
53BC:  BTFSC  FA6.1
53BE:  BRA    53BC
53C0:  BCF    FA6.2
53C2:  MOVF   00,W
53C4:  IORWF  FF2,F
53C6:  MOVLW  01
53C8:  MOVWF  FA9
53CA:  MOVFF  559,FA8
53CE:  BCF    FA6.6
53D0:  BCF    FA6.7
53D2:  BSF    FA6.2
53D4:  MOVF   FF2,W
53D6:  MOVWF  00
53D8:  BCF    FF2.7
53DA:  MOVLW  55
53DC:  MOVWF  FA7
53DE:  MOVLW  AA
53E0:  MOVWF  FA7
53E2:  BSF    FA6.1
53E4:  BTFSC  FA6.1
53E6:  BRA    53E4
53E8:  BCF    FA6.2
53EA:  MOVF   00,W
53EC:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
53EE:  MOVLW  02
53F0:  MOVWF  FA9
53F2:  MOVFF  55A,FA8
53F6:  BCF    FA6.6
53F8:  BCF    FA6.7
53FA:  BSF    FA6.2
53FC:  MOVFF  FF2,00
5400:  BCF    FF2.7
5402:  MOVLW  55
5404:  MOVWF  FA7
5406:  MOVLW  AA
5408:  MOVWF  FA7
540A:  BSF    FA6.1
540C:  BTFSC  FA6.1
540E:  BRA    540C
5410:  BCF    FA6.2
5412:  MOVF   00,W
5414:  IORWF  FF2,F
5416:  MOVLW  03
5418:  MOVWF  FA9
541A:  MOVFF  55B,FA8
541E:  BCF    FA6.6
5420:  BCF    FA6.7
5422:  BSF    FA6.2
5424:  MOVFF  FF2,00
5428:  BCF    FF2.7
542A:  MOVLW  55
542C:  MOVWF  FA7
542E:  MOVLW  AA
5430:  MOVWF  FA7
5432:  BSF    FA6.1
5434:  BTFSC  FA6.1
5436:  BRA    5434
5438:  BCF    FA6.2
543A:  MOVF   00,W
543C:  IORWF  FF2,F
543E:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
5440:  MOVF   x36,W
5442:  SUBLW  0C
5444:  BTFSS  FD8.2
5446:  BRA    5736
....................       
....................       if(visual==1) 
5448:  BTFSS  x29.4
544A:  BRA    55CE
....................       { 
....................          if(unidad<1) 
544C:  MOVF   x37,F
544E:  BNZ   5454
....................          {unidad=4;} 
5450:  MOVLW  04
5452:  MOVWF  x37
....................           
....................          strcpy(Menus.Letra," Secado"); 
5454:  MOVLW  05
5456:  MOVWF  FEA
5458:  MOVLW  C0
545A:  MOVWF  FE9
545C:  MOVFF  FF2,5E0
5460:  BCF    FF2.7
5462:  MOVLW  00
5464:  MOVLB  0
5466:  CALL   0C2A
546A:  TBLRD*-
546C:  TBLRD*+
546E:  MOVF   FF5,W
5470:  MOVWF  FEE
5472:  IORLW  00
5474:  BNZ   546C
5476:  MOVLB  5
5478:  BTFSC  xE0.7
547A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
547C:  MOVLW  05
547E:  MOVWF  xE1
5480:  MOVLW  C0
5482:  MOVWF  xE0
5484:  CLRF   xE2
5486:  CLRF   xE3
5488:  MOVLW  01
548A:  MOVWF  xE4
548C:  MOVLW  02
548E:  MOVWF  xE5
5490:  MOVLB  0
5492:  CALL   1646
....................           
....................          if(unidad==4) 
5496:  MOVLB  5
5498:  MOVF   x37,W
549A:  SUBLW  04
549C:  BNZ   54BC
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
549E:  MOVFF  563,5E1
54A2:  MOVLW  14
54A4:  MOVWF  xE2
54A6:  MOVLW  28
54A8:  MOVWF  xE3
54AA:  MOVLW  01
54AC:  MOVWF  xE4
54AE:  MOVLW  02
54B0:  MOVWF  xE5
54B2:  MOVLB  0
54B4:  CALL   2450
....................          else 
54B8:  BRA    54D4
54BA:  MOVLB  5
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
54BC:  MOVFF  563,5E1
54C0:  MOVLW  14
54C2:  MOVWF  xE2
54C4:  MOVLW  28
54C6:  MOVWF  xE3
54C8:  CLRF   xE4
54CA:  MOVLW  02
54CC:  MOVWF  xE5
54CE:  MOVLB  0
54D0:  CALL   2450
....................           
....................          if(unidad==3) 
54D4:  MOVLB  5
54D6:  MOVF   x37,W
54D8:  SUBLW  03
54DA:  BNZ   54F8
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
54DC:  MOVFF  562,5E1
54E0:  MOVLW  28
54E2:  MOVWF  xE2
54E4:  MOVWF  xE3
54E6:  MOVLW  01
54E8:  MOVWF  xE4
54EA:  MOVLW  02
54EC:  MOVWF  xE5
54EE:  MOVLB  0
54F0:  CALL   2450
....................          else 
54F4:  BRA    550E
54F6:  MOVLB  5
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
54F8:  MOVFF  562,5E1
54FC:  MOVLW  28
54FE:  MOVWF  xE2
5500:  MOVWF  xE3
5502:  CLRF   xE4
5504:  MOVLW  02
5506:  MOVWF  xE5
5508:  MOVLB  0
550A:  CALL   2450
....................           
....................          if(unidad==2) 
550E:  MOVLB  5
5510:  MOVF   x37,W
5512:  SUBLW  02
5514:  BNZ   5534
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
5516:  MOVFF  561,5E1
551A:  MOVLW  46
551C:  MOVWF  xE2
551E:  MOVLW  28
5520:  MOVWF  xE3
5522:  MOVLW  01
5524:  MOVWF  xE4
5526:  MOVLW  02
5528:  MOVWF  xE5
552A:  MOVLB  0
552C:  CALL   2450
....................          else 
5530:  BRA    554C
5532:  MOVLB  5
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
5534:  MOVFF  561,5E1
5538:  MOVLW  46
553A:  MOVWF  xE2
553C:  MOVLW  28
553E:  MOVWF  xE3
5540:  CLRF   xE4
5542:  MOVLW  02
5544:  MOVWF  xE5
5546:  MOVLB  0
5548:  CALL   2450
....................           
....................          if(unidad==1) 
554C:  MOVLB  5
554E:  DECFSZ x37,W
5550:  BRA    5570
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
5552:  MOVFF  560,5E1
5556:  MOVLW  5A
5558:  MOVWF  xE2
555A:  MOVLW  28
555C:  MOVWF  xE3
555E:  MOVLW  01
5560:  MOVWF  xE4
5562:  MOVLW  02
5564:  MOVWF  xE5
5566:  MOVLB  0
5568:  CALL   2450
....................          else 
556C:  BRA    5588
556E:  MOVLB  5
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
5570:  MOVFF  560,5E1
5574:  MOVLW  5A
5576:  MOVWF  xE2
5578:  MOVLW  28
557A:  MOVWF  xE3
557C:  CLRF   xE4
557E:  MOVLW  02
5580:  MOVWF  xE5
5582:  MOVLB  0
5584:  CALL   2450
....................           
....................          strcpy(Menus.Letra,":"); 
5588:  MOVLW  05
558A:  MOVWF  FEA
558C:  MOVLW  C0
558E:  MOVWF  FE9
5590:  MOVFF  FF2,5E0
5594:  BCF    FF2.7
5596:  MOVLW  00
5598:  CALL   06BE
559C:  TBLRD*-
559E:  TBLRD*+
55A0:  MOVF   FF5,W
55A2:  MOVWF  FEE
55A4:  IORLW  00
55A6:  BNZ   559E
55A8:  MOVLB  5
55AA:  BTFSC  xE0.7
55AC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
55AE:  MOVLW  05
55B0:  MOVWF  xE1
55B2:  MOVLW  C0
55B4:  MOVWF  xE0
55B6:  MOVLW  3C
55B8:  MOVWF  xE2
55BA:  MOVLW  2A
55BC:  MOVWF  xE3
55BE:  MOVLW  02
55C0:  MOVWF  xE4
55C2:  MOVWF  xE5
55C4:  MOVLB  0
55C6:  CALL   1646
....................           
....................          visual=0; 
55CA:  MOVLB  5
55CC:  BCF    x29.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
55CE:  BSF    F92.0
55D0:  BTFSS  F80.0
55D2:  BRA    560E
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
55D4:  MOVLW  01
55D6:  SUBWF  x37,W
55D8:  CLRF   03
55DA:  ADDLW  60
55DC:  MOVWF  FE9
55DE:  MOVLW  05
55E0:  ADDWFC 03,W
55E2:  MOVWF  FEA
55E4:  BTFSC  FEF.7
55E6:  BRA    55EE
55E8:  MOVF   FEF,W
55EA:  SUBLW  08
55EC:  BNC   560E
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
55EE:  MOVLW  1E
55F0:  MOVWF  xE1
55F2:  MOVLB  0
55F4:  CALL   0F72
55F8:  MOVLW  01
55FA:  MOVLB  5
55FC:  SUBWF  x37,W
55FE:  CLRF   03
5600:  ADDLW  60
5602:  MOVWF  FE9
5604:  MOVLW  05
5606:  ADDWFC 03,W
5608:  MOVWF  FEA
560A:  INCF   FEF,F
560C:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
560E:  BSF    F92.1
5610:  BTFSS  F80.1
5612:  BRA    564E
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
5614:  MOVLW  01
5616:  SUBWF  x37,W
5618:  CLRF   03
561A:  ADDLW  60
561C:  MOVWF  FE9
561E:  MOVLW  05
5620:  ADDWFC 03,W
5622:  MOVWF  FEA
5624:  BTFSC  FEF.7
5626:  BRA    564E
5628:  MOVF   FEF,W
562A:  SUBLW  00
562C:  BC    564E
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
562E:  MOVLW  1E
5630:  MOVWF  xE1
5632:  MOVLB  0
5634:  CALL   0F72
5638:  MOVLW  01
563A:  MOVLB  5
563C:  SUBWF  x37,W
563E:  CLRF   03
5640:  ADDLW  60
5642:  MOVWF  FE9
5644:  MOVLW  05
5646:  ADDWFC 03,W
5648:  MOVWF  FEA
564A:  DECF   FEF,F
564C:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
564E:  BSF    F92.2
5650:  BTFSS  F80.2
5652:  BRA    5664
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5654:  MOVLW  1E
5656:  MOVWF  xE1
5658:  MOVLB  0
565A:  CALL   0F72
565E:  MOVLB  5
5660:  DECF   x37,F
5662:  BSF    x29.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5664:  BSF    F92.3
5666:  BTFSS  F80.3
5668:  BRA    5736
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
566A:  MOVLW  04
566C:  MOVWF  xE0
566E:  MOVLW  AF
5670:  MOVWF  xE1
5672:  MOVLB  0
5674:  CALL   0F72
5678:  MOVLB  5
567A:  DECFSZ xE0,F
567C:  BRA    566E
567E:  MOVLW  08
5680:  MOVWF  x36
5682:  CLRF   xE1
5684:  MOVLB  0
5686:  CALL   0FDC
568A:  MOVLW  01
568C:  MOVLB  5
568E:  MOVWF  x3D
5690:  BSF    x29.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
5692:  MOVLW  04
5694:  MOVWF  FA9
5696:  MOVFF  560,FA8
569A:  BCF    FA6.6
569C:  BCF    FA6.7
569E:  BSF    FA6.2
56A0:  MOVF   FF2,W
56A2:  MOVWF  00
56A4:  BCF    FF2.7
56A6:  MOVLB  F
56A8:  MOVLW  55
56AA:  MOVWF  FA7
56AC:  MOVLW  AA
56AE:  MOVWF  FA7
56B0:  BSF    FA6.1
56B2:  BTFSC  FA6.1
56B4:  BRA    56B2
56B6:  BCF    FA6.2
56B8:  MOVF   00,W
56BA:  IORWF  FF2,F
56BC:  MOVLW  05
56BE:  MOVWF  FA9
56C0:  MOVFF  561,FA8
56C4:  BCF    FA6.6
56C6:  BCF    FA6.7
56C8:  BSF    FA6.2
56CA:  MOVF   FF2,W
56CC:  MOVWF  00
56CE:  BCF    FF2.7
56D0:  MOVLW  55
56D2:  MOVWF  FA7
56D4:  MOVLW  AA
56D6:  MOVWF  FA7
56D8:  BSF    FA6.1
56DA:  BTFSC  FA6.1
56DC:  BRA    56DA
56DE:  BCF    FA6.2
56E0:  MOVF   00,W
56E2:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
56E4:  MOVLW  06
56E6:  MOVWF  FA9
56E8:  MOVFF  562,FA8
56EC:  BCF    FA6.6
56EE:  BCF    FA6.7
56F0:  BSF    FA6.2
56F2:  MOVFF  FF2,00
56F6:  BCF    FF2.7
56F8:  MOVLW  55
56FA:  MOVWF  FA7
56FC:  MOVLW  AA
56FE:  MOVWF  FA7
5700:  BSF    FA6.1
5702:  BTFSC  FA6.1
5704:  BRA    5702
5706:  BCF    FA6.2
5708:  MOVF   00,W
570A:  IORWF  FF2,F
570C:  MOVLW  07
570E:  MOVWF  FA9
5710:  MOVFF  563,FA8
5714:  BCF    FA6.6
5716:  BCF    FA6.7
5718:  BSF    FA6.2
571A:  MOVFF  FF2,00
571E:  BCF    FF2.7
5720:  MOVLW  55
5722:  MOVWF  FA7
5724:  MOVLW  AA
5726:  MOVWF  FA7
5728:  BSF    FA6.1
572A:  BTFSC  FA6.1
572C:  BRA    572A
572E:  BCF    FA6.2
5730:  MOVF   00,W
5732:  IORWF  FF2,F
5734:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
5736:  MOVF   x36,W
5738:  SUBLW  0D
573A:  BTFSS  FD8.2
573C:  BRA    5864
....................       
....................       if(visual==1) 
573E:  BTFSS  x29.4
5740:  BRA    57A6
....................       { 
....................          glcd_fillScreen(OFF); 
5742:  CLRF   xE1
5744:  MOVLB  0
5746:  CALL   0FDC
....................          strcpy(Menus.Letra,"Temperatura"); 
574A:  MOVLW  05
574C:  MOVWF  FEA
574E:  MOVLW  C0
5750:  MOVWF  FE9
5752:  MOVFF  FF2,5E0
5756:  BCF    FF2.7
5758:  MOVLW  00
575A:  CALL   0B6A
575E:  TBLRD*-
5760:  TBLRD*+
5762:  MOVF   FF5,W
5764:  MOVWF  FEE
5766:  IORLW  00
5768:  BNZ   5760
576A:  MOVLB  5
576C:  BTFSC  xE0.7
576E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5770:  MOVLW  05
5772:  MOVWF  xE1
5774:  MOVLW  C0
5776:  MOVWF  xE0
5778:  CLRF   xE2
577A:  CLRF   xE3
577C:  MOVLW  01
577E:  MOVWF  xE4
5780:  MOVLW  02
5782:  MOVWF  xE5
5784:  MOVLB  0
5786:  CALL   1646
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
578A:  MOVFF  53B,5E1
578E:  MOVLW  1E
5790:  MOVLB  5
5792:  MOVWF  xE2
5794:  MOVWF  xE3
5796:  CLRF   xE4
5798:  MOVLW  03
579A:  MOVWF  xE5
579C:  MOVLB  0
579E:  CALL   2450
....................           
....................          visual=0; 
57A2:  MOVLB  5
57A4:  BCF    x29.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
57A6:  BSF    F92.0
57A8:  BTFSS  F80.0
57AA:  BRA    57DA
....................          {   
....................             if(Setpoint<134) 
57AC:  MOVF   x3B,W
57AE:  SUBLW  85
57B0:  BNC   57DA
....................             { 
....................                if(Setpoint<100) 
57B2:  MOVF   x3B,W
57B4:  SUBLW  63
57B6:  BNC   57CA
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
57B8:  MOVLW  64
57BA:  MOVWF  x3B
57BC:  MOVWF  xE1
57BE:  MOVLB  0
57C0:  CALL   0F72
57C4:  MOVLB  5
57C6:  BSF    x29.4
....................                } 
....................                else 
57C8:  BRA    57DA
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
57CA:  MOVLW  1E
57CC:  MOVWF  xE1
57CE:  MOVLB  0
57D0:  CALL   0F72
57D4:  MOVLB  5
57D6:  INCF   x3B,F
57D8:  BSF    x29.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
57DA:  BSF    F92.1
57DC:  BTFSS  F80.1
57DE:  BRA    57F6
....................          {   
....................             if(Setpoint>105) 
57E0:  MOVF   x3B,W
57E2:  SUBLW  69
57E4:  BC    57F6
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
57E6:  MOVLW  1E
57E8:  MOVWF  xE1
57EA:  MOVLB  0
57EC:  CALL   0F72
57F0:  MOVLB  5
57F2:  DECF   x3B,F
57F4:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
57F6:  BSF    F92.2
57F8:  BTFSS  F80.2
57FA:  BRA    580A
....................          {   
....................             delay_ms(30);visual=1; 
57FC:  MOVLW  1E
57FE:  MOVWF  xE1
5800:  MOVLB  0
5802:  CALL   0F72
5806:  MOVLB  5
5808:  BSF    x29.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
580A:  BSF    F92.3
580C:  BTFSS  F80.3
580E:  BRA    5864
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5810:  MOVLW  04
5812:  MOVWF  xE0
5814:  MOVLW  AF
5816:  MOVWF  xE1
5818:  MOVLB  0
581A:  CALL   0F72
581E:  MOVLB  5
5820:  DECFSZ xE0,F
5822:  BRA    5814
5824:  MOVLW  08
5826:  MOVWF  x36
5828:  CLRF   xE1
582A:  MOVLB  0
582C:  CALL   0FDC
5830:  MOVLW  01
5832:  MOVLB  5
5834:  MOVWF  x3D
5836:  BSF    x29.4
....................             write_eeprom(8,Setpoint); 
5838:  MOVLW  08
583A:  MOVWF  FA9
583C:  MOVFF  53B,FA8
5840:  BCF    FA6.6
5842:  BCF    FA6.7
5844:  BSF    FA6.2
5846:  MOVF   FF2,W
5848:  MOVWF  00
584A:  BCF    FF2.7
584C:  MOVLB  F
584E:  MOVLW  55
5850:  MOVWF  FA7
5852:  MOVLW  AA
5854:  MOVWF  FA7
5856:  BSF    FA6.1
5858:  BTFSC  FA6.1
585A:  BRA    5858
585C:  BCF    FA6.2
585E:  MOVF   00,W
5860:  IORWF  FF2,F
5862:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
5864:  MOVF   x36,W
5866:  SUBLW  0E
5868:  BTFSS  FD8.2
586A:  BRA    5B4C
....................       if(Nivel>6) 
586C:  MOVF   x4B,F
586E:  BNZ   5876
5870:  MOVF   x4A,W
5872:  SUBLW  06
5874:  BC    587C
....................          Nivel=6; 
5876:  CLRF   x4B
5878:  MOVLW  06
587A:  MOVWF  x4A
....................           
....................       if(visual==1) 
587C:  BTFSS  x29.4
587E:  BRA    58E0
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
5880:  MOVLW  05
5882:  MOVWF  FEA
5884:  MOVLW  C0
5886:  MOVWF  FE9
5888:  MOVFF  FF2,5E0
588C:  BCF    FF2.7
588E:  MOVLW  00
5890:  MOVLB  0
5892:  CALL   0C4C
5896:  TBLRD*-
5898:  TBLRD*+
589A:  MOVF   FF5,W
589C:  MOVWF  FEE
589E:  IORLW  00
58A0:  BNZ   5898
58A2:  MOVLB  5
58A4:  BTFSC  xE0.7
58A6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
58A8:  MOVLW  05
58AA:  MOVWF  xE1
58AC:  MOVLW  C0
58AE:  MOVWF  xE0
58B0:  CLRF   xE2
58B2:  CLRF   xE3
58B4:  MOVLW  01
58B6:  MOVWF  xE4
58B8:  MOVLW  02
58BA:  MOVWF  xE5
58BC:  MOVLB  0
58BE:  CALL   1646
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
58C2:  MOVFF  54A,5E1
58C6:  MOVLW  32
58C8:  MOVLB  5
58CA:  MOVWF  xE2
58CC:  MOVLW  28
58CE:  MOVWF  xE3
58D0:  CLRF   xE4
58D2:  MOVLW  02
58D4:  MOVWF  xE5
58D6:  MOVLB  0
58D8:  CALL   2450
....................           
....................          visual=0; 
58DC:  MOVLB  5
58DE:  BCF    x29.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
58E0:  BSF    F92.0
58E2:  BTFSS  F80.0
58E4:  BRA    5904
....................          {   
....................             if(Nivel<6) 
58E6:  MOVF   x4B,F
58E8:  BNZ   5904
58EA:  MOVF   x4A,W
58EC:  SUBLW  05
58EE:  BNC   5904
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
58F0:  MOVLW  1E
58F2:  MOVWF  xE1
58F4:  MOVLB  0
58F6:  CALL   0F72
58FA:  MOVLB  5
58FC:  INCF   x4A,F
58FE:  BTFSC  FD8.2
5900:  INCF   x4B,F
5902:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5904:  BSF    F92.1
5906:  BTFSS  F80.1
5908:  BRA    592A
....................          {   
....................             if(Nivel>1) 
590A:  MOVF   x4B,F
590C:  BNZ   5914
590E:  MOVF   x4A,W
5910:  SUBLW  01
5912:  BC    592A
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
5914:  MOVLW  1E
5916:  MOVWF  xE1
5918:  MOVLB  0
591A:  CALL   0F72
591E:  MOVLB  5
5920:  MOVF   x4A,W
5922:  BTFSC  FD8.2
5924:  DECF   x4B,F
5926:  DECF   x4A,F
5928:  BSF    x29.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
592A:  BTFSS  x29.5
592C:  BRA    5AE2
....................          { 
....................             if(RIGHT)//Si oprime SET 
592E:  BSF    F92.2
5930:  BTFSS  F80.2
5932:  BRA    5AE0
....................             {   
....................                write_eeprom(9,Nivel); 
5934:  MOVLW  09
5936:  MOVWF  FA9
5938:  MOVFF  54A,FA8
593C:  BCF    FA6.6
593E:  BCF    FA6.7
5940:  BSF    FA6.2
5942:  MOVF   FF2,W
5944:  MOVWF  00
5946:  BCF    FF2.7
5948:  MOVLB  F
594A:  MOVLW  55
594C:  MOVWF  FA7
594E:  MOVLW  AA
5950:  MOVWF  FA7
5952:  BSF    FA6.1
5954:  BTFSC  FA6.1
5956:  BRA    5954
5958:  BCF    FA6.2
595A:  MOVF   00,W
595C:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
595E:  MOVLW  14
5960:  MOVLB  5
5962:  MOVWF  x36
5964:  MOVLW  0F
5966:  MOVWF  xF2
5968:  MOVLW  12
596A:  MOVWF  xF3
596C:  MOVLW  1E
596E:  MOVWF  xF4
5970:  MOVLW  35
5972:  MOVWF  xF5
5974:  CLRF   xF6
5976:  MOVLW  01
5978:  MOVWF  xF7
597A:  MOVLB  0
597C:  CALL   1584
5980:  MOVLB  5
5982:  CLRF   x3F
5984:  MOVLW  C0
5986:  IORWF  FF2,F
5988:  CLRF   xE1
598A:  MOVLB  0
598C:  CALL   0FDC
....................                strcpy(Menus.Letra,"Calentando"); 
5990:  MOVLW  05
5992:  MOVWF  FEA
5994:  MOVLW  C0
5996:  MOVWF  FE9
5998:  MOVFF  FF2,5E0
599C:  BCF    FF2.7
599E:  MOVLW  00
59A0:  CALL   0966
59A4:  TBLRD*-
59A6:  TBLRD*+
59A8:  MOVF   FF5,W
59AA:  MOVWF  FEE
59AC:  IORLW  00
59AE:  BNZ   59A6
59B0:  MOVLB  5
59B2:  BTFSC  xE0.7
59B4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
59B6:  MOVLW  05
59B8:  MOVWF  xE1
59BA:  MOVLW  C0
59BC:  MOVWF  xE0
59BE:  CLRF   xE2
59C0:  MOVLW  37
59C2:  MOVWF  xE3
59C4:  MOVLW  02
59C6:  MOVWF  xE4
59C8:  MOVLW  01
59CA:  MOVWF  xE5
59CC:  MOVLB  0
59CE:  CALL   1646
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
59D2:  MOVLW  0F
59D4:  MOVLB  5
59D6:  MOVWF  xF2
59D8:  MOVLW  12
59DA:  MOVWF  xF3
59DC:  MOVLW  1E
59DE:  MOVWF  xF4
59E0:  MOVLW  35
59E2:  MOVWF  xF5
59E4:  CLRF   xF6
59E6:  MOVLW  01
59E8:  MOVWF  xF7
59EA:  MOVLB  0
59EC:  CALL   1584
....................                glcd_imagen(5); 
59F0:  MOVLW  05
59F2:  MOVLB  5
59F4:  MOVWF  xE0
59F6:  MOVLB  0
59F8:  CALL   2088
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
59FC:  MOVLW  05
59FE:  MOVWF  FEA
5A00:  MOVLW  C0
5A02:  MOVWF  FE9
5A04:  MOVFF  FF2,5E0
5A08:  BCF    FF2.7
5A0A:  MOVLW  00
5A0C:  CALL   098C
5A10:  TBLRD*-
5A12:  TBLRD*+
5A14:  MOVF   FF5,W
5A16:  MOVWF  FEE
5A18:  IORLW  00
5A1A:  BNZ   5A12
5A1C:  MOVLB  5
5A1E:  BTFSC  xE0.7
5A20:  BSF    FF2.7
5A22:  MOVLW  05
5A24:  MOVWF  xE1
5A26:  MOVLW  C0
5A28:  MOVWF  xE0
5A2A:  CLRF   xE2
5A2C:  CLRF   xE3
5A2E:  MOVLW  02
5A30:  MOVWF  xE4
5A32:  MOVLW  01
5A34:  MOVWF  xE5
5A36:  MOVLB  0
5A38:  CALL   1646
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5A3C:  MOVLW  05
5A3E:  MOVWF  FEA
5A40:  MOVLW  C0
5A42:  MOVWF  FE9
5A44:  MOVFF  FF2,5E0
5A48:  BCF    FF2.7
5A4A:  MOVLW  00
5A4C:  CALL   09AE
5A50:  TBLRD*-
5A52:  TBLRD*+
5A54:  MOVF   FF5,W
5A56:  MOVWF  FEE
5A58:  IORLW  00
5A5A:  BNZ   5A52
5A5C:  MOVLB  5
5A5E:  BTFSC  xE0.7
5A60:  BSF    FF2.7
5A62:  MOVLW  05
5A64:  MOVWF  xE1
5A66:  MOVLW  C0
5A68:  MOVWF  xE0
5A6A:  CLRF   xE2
5A6C:  MOVLW  08
5A6E:  MOVWF  xE3
5A70:  MOVLW  02
5A72:  MOVWF  xE4
5A74:  MOVLW  01
5A76:  MOVWF  xE5
5A78:  MOVLB  0
5A7A:  CALL   1646
....................                glcd_circle(95,40,2,NO,ON); 
5A7E:  MOVLW  5F
5A80:  MOVLB  5
5A82:  MOVWF  xE0
5A84:  MOVLW  28
5A86:  MOVWF  xE1
5A88:  MOVLW  02
5A8A:  MOVWF  xE2
5A8C:  CLRF   xE3
5A8E:  MOVLW  01
5A90:  MOVWF  xE4
5A92:  MOVLB  0
5A94:  CALL   2188
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5A98:  MOVLW  05
5A9A:  MOVWF  FEA
5A9C:  MOVLW  C0
5A9E:  MOVWF  FE9
5AA0:  MOVFF  FF2,5E0
5AA4:  BCF    FF2.7
5AA6:  MOVLW  00
5AA8:  CALL   09D0
5AAC:  TBLRD*-
5AAE:  TBLRD*+
5AB0:  MOVF   FF5,W
5AB2:  MOVWF  FEE
5AB4:  IORLW  00
5AB6:  BNZ   5AAE
5AB8:  MOVLB  5
5ABA:  BTFSC  xE0.7
5ABC:  BSF    FF2.7
5ABE:  MOVLW  05
5AC0:  MOVWF  xE1
5AC2:  MOVLW  C0
5AC4:  MOVWF  xE0
5AC6:  MOVLW  66
5AC8:  MOVWF  xE2
5ACA:  MOVLW  28
5ACC:  MOVWF  xE3
5ACE:  MOVLW  02
5AD0:  MOVWF  xE4
5AD2:  MOVWF  xE5
5AD4:  MOVLB  0
5AD6:  CALL   1646
....................                MuestraTiemposProgramados(); 
5ADA:  CALL   25A0
5ADE:  MOVLB  5
....................             }       
....................          } 
....................          else 
5AE0:  BRA    5B4C
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5AE2:  BSF    F92.3
5AE4:  BTFSS  F80.3
5AE6:  BRA    5B4C
....................             { 
....................                if(Nivel<6) 
5AE8:  MOVF   x4B,F
5AEA:  BNZ   5AF6
5AEC:  MOVF   x4A,W
5AEE:  SUBLW  05
5AF0:  BNC   5AF6
....................                { 
....................                   desfoguelento=1; 
5AF2:  BSF    x29.5
....................                } 
....................                else 
5AF4:  BRA    5AF8
....................                { 
....................                   desfoguelento=0; 
5AF6:  BCF    x29.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5AF8:  MOVLW  04
5AFA:  MOVWF  xE0
5AFC:  MOVLW  AF
5AFE:  MOVWF  xE1
5B00:  MOVLB  0
5B02:  CALL   0F72
5B06:  MOVLB  5
5B08:  DECFSZ xE0,F
5B0A:  BRA    5AFC
5B0C:  MOVLW  08
5B0E:  MOVWF  x36
5B10:  CLRF   xE1
5B12:  MOVLB  0
5B14:  CALL   0FDC
5B18:  MOVLW  01
5B1A:  MOVLB  5
5B1C:  MOVWF  x3D
5B1E:  BSF    x29.4
....................                write_eeprom(9,Nivel); 
5B20:  MOVLW  09
5B22:  MOVWF  FA9
5B24:  MOVFF  54A,FA8
5B28:  BCF    FA6.6
5B2A:  BCF    FA6.7
5B2C:  BSF    FA6.2
5B2E:  MOVF   FF2,W
5B30:  MOVWF  00
5B32:  BCF    FF2.7
5B34:  MOVLB  F
5B36:  MOVLW  55
5B38:  MOVWF  FA7
5B3A:  MOVLW  AA
5B3C:  MOVWF  FA7
5B3E:  BSF    FA6.1
5B40:  BTFSC  FA6.1
5B42:  BRA    5B40
5B44:  BCF    FA6.2
5B46:  MOVF   00,W
5B48:  IORWF  FF2,F
5B4A:  MOVLB  5
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5B4C:  MOVF   x36,W
5B4E:  SUBLW  0F
5B50:  BTFSS  FD8.2
5B52:  BRA    5E76
....................        
....................       if(visual==1) 
5B54:  BTFSS  x29.4
5B56:  BRA    5CBC
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5B58:  MOVLW  05
5B5A:  MOVWF  FEA
5B5C:  MOVLW  C0
5B5E:  MOVWF  FE9
5B60:  MOVFF  FF2,5E0
5B64:  BCF    FF2.7
5B66:  MOVLW  00
5B68:  MOVLB  0
5B6A:  CALL   0BBC
5B6E:  TBLRD*-
5B70:  TBLRD*+
5B72:  MOVF   FF5,W
5B74:  MOVWF  FEE
5B76:  IORLW  00
5B78:  BNZ   5B70
5B7A:  MOVLB  5
5B7C:  BTFSC  xE0.7
5B7E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5B80:  MOVLW  05
5B82:  MOVWF  xE1
5B84:  MOVLW  C0
5B86:  MOVWF  xE0
5B88:  CLRF   xE2
5B8A:  CLRF   xE3
5B8C:  MOVLW  01
5B8E:  MOVWF  xE4
5B90:  MOVLW  02
5B92:  MOVWF  xE5
5B94:  MOVLB  0
5B96:  CALL   1646
....................           
....................          if(Opcion==2) 
5B9A:  MOVLB  5
5B9C:  MOVF   x3D,W
5B9E:  SUBLW  02
5BA0:  BNZ   5C2C
....................          {strcpy(Menus.Letra,"SI"); 
5BA2:  MOVLW  05
5BA4:  MOVWF  FEA
5BA6:  MOVLW  C0
5BA8:  MOVWF  FE9
5BAA:  MOVFF  FF2,5E0
5BAE:  BCF    FF2.7
5BB0:  MOVLW  00
5BB2:  MOVLB  0
5BB4:  CALL   0C70
5BB8:  TBLRD*-
5BBA:  TBLRD*+
5BBC:  MOVF   FF5,W
5BBE:  MOVWF  FEE
5BC0:  IORLW  00
5BC2:  BNZ   5BBA
5BC4:  MOVLB  5
5BC6:  BTFSC  xE0.7
5BC8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5BCA:  MOVLW  05
5BCC:  MOVWF  xE1
5BCE:  MOVLW  C0
5BD0:  MOVWF  xE0
5BD2:  MOVLW  32
5BD4:  MOVWF  xE2
5BD6:  MOVLW  19
5BD8:  MOVWF  xE3
5BDA:  MOVLW  01
5BDC:  MOVWF  xE4
5BDE:  MOVLW  02
5BE0:  MOVWF  xE5
5BE2:  MOVLB  0
5BE4:  CALL   1646
....................          strcpy(Menus.Letra,"NO"); 
5BE8:  MOVLW  05
5BEA:  MOVWF  FEA
5BEC:  MOVLW  C0
5BEE:  MOVWF  FE9
5BF0:  MOVFF  FF2,5E0
5BF4:  BCF    FF2.7
5BF6:  MOVLW  00
5BF8:  CALL   0C8E
5BFC:  TBLRD*-
5BFE:  TBLRD*+
5C00:  MOVF   FF5,W
5C02:  MOVWF  FEE
5C04:  IORLW  00
5C06:  BNZ   5BFE
5C08:  MOVLB  5
5C0A:  BTFSC  xE0.7
5C0C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5C0E:  MOVLW  05
5C10:  MOVWF  xE1
5C12:  MOVLW  C0
5C14:  MOVWF  xE0
5C16:  MOVLW  32
5C18:  MOVWF  xE2
5C1A:  MOVLW  2D
5C1C:  MOVWF  xE3
5C1E:  CLRF   xE4
5C20:  MOVLW  02
5C22:  MOVWF  xE5
5C24:  MOVLB  0
5C26:  CALL   1646
5C2A:  MOVLB  5
....................          } 
....................          if(Opcion==1) 
5C2C:  DECFSZ x3D,W
5C2E:  BRA    5CBA
....................          {strcpy(Menus.Letra,"SI"); 
5C30:  MOVLW  05
5C32:  MOVWF  FEA
5C34:  MOVLW  C0
5C36:  MOVWF  FE9
5C38:  MOVFF  FF2,5E0
5C3C:  BCF    FF2.7
5C3E:  MOVLW  00
5C40:  MOVLB  0
5C42:  CALL   0C70
5C46:  TBLRD*-
5C48:  TBLRD*+
5C4A:  MOVF   FF5,W
5C4C:  MOVWF  FEE
5C4E:  IORLW  00
5C50:  BNZ   5C48
5C52:  MOVLB  5
5C54:  BTFSC  xE0.7
5C56:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5C58:  MOVLW  05
5C5A:  MOVWF  xE1
5C5C:  MOVLW  C0
5C5E:  MOVWF  xE0
5C60:  MOVLW  32
5C62:  MOVWF  xE2
5C64:  MOVLW  19
5C66:  MOVWF  xE3
5C68:  CLRF   xE4
5C6A:  MOVLW  02
5C6C:  MOVWF  xE5
5C6E:  MOVLB  0
5C70:  CALL   1646
....................          strcpy(Menus.Letra,"NO"); 
5C74:  MOVLW  05
5C76:  MOVWF  FEA
5C78:  MOVLW  C0
5C7A:  MOVWF  FE9
5C7C:  MOVFF  FF2,5E0
5C80:  BCF    FF2.7
5C82:  MOVLW  00
5C84:  CALL   0C8E
5C88:  TBLRD*-
5C8A:  TBLRD*+
5C8C:  MOVF   FF5,W
5C8E:  MOVWF  FEE
5C90:  IORLW  00
5C92:  BNZ   5C8A
5C94:  MOVLB  5
5C96:  BTFSC  xE0.7
5C98:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5C9A:  MOVLW  05
5C9C:  MOVWF  xE1
5C9E:  MOVLW  C0
5CA0:  MOVWF  xE0
5CA2:  MOVLW  32
5CA4:  MOVWF  xE2
5CA6:  MOVLW  2D
5CA8:  MOVWF  xE3
5CAA:  MOVLW  01
5CAC:  MOVWF  xE4
5CAE:  MOVLW  02
5CB0:  MOVWF  xE5
5CB2:  MOVLB  0
5CB4:  CALL   1646
5CB8:  MOVLB  5
....................          } 
....................          visual=0; 
5CBA:  BCF    x29.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5CBC:  BSF    F92.0
5CBE:  BTFSS  F80.0
5CC0:  BRA    5CCC
....................       { 
....................          if(Opcion<2) 
5CC2:  MOVF   x3D,W
5CC4:  SUBLW  01
5CC6:  BNC   5CCA
....................          { 
....................             Opcion++; 
5CC8:  INCF   x3D,F
....................          } 
....................          visual=1; 
5CCA:  BSF    x29.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5CCC:  BSF    F92.1
5CCE:  BTFSS  F80.1
5CD0:  BRA    5CDC
....................       {   
....................          if(Opcion>1) 
5CD2:  MOVF   x3D,W
5CD4:  SUBLW  01
5CD6:  BC    5CDA
....................          { 
....................             Opcion--; 
5CD8:  DECF   x3D,F
....................          }   
....................          visual=1; 
5CDA:  BSF    x29.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5CDC:  BSF    F92.2
5CDE:  BTFSS  F80.2
5CE0:  BRA    5E48
....................       {   
....................          if(Opcion==2) 
5CE2:  MOVF   x3D,W
5CE4:  SUBLW  02
5CE6:  BTFSS  FD8.2
5CE8:  BRA    5E20
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5CEA:  MOVLW  14
5CEC:  MOVWF  x36
5CEE:  MOVLW  0F
5CF0:  MOVWF  xF2
5CF2:  MOVLW  12
5CF4:  MOVWF  xF3
5CF6:  MOVLW  1E
5CF8:  MOVWF  xF4
5CFA:  MOVLW  35
5CFC:  MOVWF  xF5
5CFE:  CLRF   xF6
5D00:  MOVLW  01
5D02:  MOVWF  xF7
5D04:  MOVLB  0
5D06:  CALL   1584
5D0A:  MOVLB  5
5D0C:  CLRF   x3F
5D0E:  MOVLW  C0
5D10:  IORWF  FF2,F
5D12:  CLRF   xE1
5D14:  MOVLB  0
5D16:  CALL   0FDC
....................             strcpy(Menus.Letra,"Calentando"); 
5D1A:  MOVLW  05
5D1C:  MOVWF  FEA
5D1E:  MOVLW  C0
5D20:  MOVWF  FE9
5D22:  MOVFF  FF2,5E0
5D26:  BCF    FF2.7
5D28:  MOVLW  00
5D2A:  CALL   0966
5D2E:  TBLRD*-
5D30:  TBLRD*+
5D32:  MOVF   FF5,W
5D34:  MOVWF  FEE
5D36:  IORLW  00
5D38:  BNZ   5D30
5D3A:  MOVLB  5
5D3C:  BTFSC  xE0.7
5D3E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5D40:  MOVLW  05
5D42:  MOVWF  xE1
5D44:  MOVLW  C0
5D46:  MOVWF  xE0
5D48:  CLRF   xE2
5D4A:  MOVLW  37
5D4C:  MOVWF  xE3
5D4E:  MOVLW  02
5D50:  MOVWF  xE4
5D52:  MOVLW  01
5D54:  MOVWF  xE5
5D56:  MOVLB  0
5D58:  CALL   1646
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5D5C:  MOVLW  0F
5D5E:  MOVLB  5
5D60:  MOVWF  xF2
5D62:  MOVLW  12
5D64:  MOVWF  xF3
5D66:  MOVLW  1E
5D68:  MOVWF  xF4
5D6A:  MOVLW  35
5D6C:  MOVWF  xF5
5D6E:  CLRF   xF6
5D70:  MOVLW  01
5D72:  MOVWF  xF7
5D74:  MOVLB  0
5D76:  CALL   1584
....................             glcd_imagen(5); 
5D7A:  MOVLW  05
5D7C:  MOVLB  5
5D7E:  MOVWF  xE0
5D80:  MOVLB  0
5D82:  CALL   2088
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5D86:  MOVLW  05
5D88:  MOVWF  FEA
5D8A:  MOVLW  C0
5D8C:  MOVWF  FE9
5D8E:  MOVFF  FF2,5E0
5D92:  BCF    FF2.7
5D94:  MOVLW  00
5D96:  CALL   098C
5D9A:  TBLRD*-
5D9C:  TBLRD*+
5D9E:  MOVF   FF5,W
5DA0:  MOVWF  FEE
5DA2:  IORLW  00
5DA4:  BNZ   5D9C
5DA6:  MOVLB  5
5DA8:  BTFSC  xE0.7
5DAA:  BSF    FF2.7
5DAC:  MOVLW  05
5DAE:  MOVWF  xE1
5DB0:  MOVLW  C0
5DB2:  MOVWF  xE0
5DB4:  CLRF   xE2
5DB6:  CLRF   xE3
5DB8:  MOVLW  02
5DBA:  MOVWF  xE4
5DBC:  MOVLW  01
5DBE:  MOVWF  xE5
5DC0:  MOVLB  0
5DC2:  CALL   1646
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5DC6:  MOVLW  05
5DC8:  MOVWF  FEA
5DCA:  MOVLW  C0
5DCC:  MOVWF  FE9
5DCE:  MOVFF  FF2,5E0
5DD2:  BCF    FF2.7
5DD4:  MOVLW  00
5DD6:  CALL   09AE
5DDA:  TBLRD*-
5DDC:  TBLRD*+
5DDE:  MOVF   FF5,W
5DE0:  MOVWF  FEE
5DE2:  IORLW  00
5DE4:  BNZ   5DDC
5DE6:  MOVLB  5
5DE8:  BTFSC  xE0.7
5DEA:  BSF    FF2.7
5DEC:  MOVLW  05
5DEE:  MOVWF  xE1
5DF0:  MOVLW  C0
5DF2:  MOVWF  xE0
5DF4:  CLRF   xE2
5DF6:  MOVLW  08
5DF8:  MOVWF  xE3
5DFA:  MOVLW  02
5DFC:  MOVWF  xE4
5DFE:  MOVLW  01
5E00:  MOVWF  xE5
5E02:  MOVLB  0
5E04:  CALL   1646
....................             MuestraTiemposProgramados(); 
5E08:  CALL   25A0
....................             if(Nivel<6) 
5E0C:  MOVLB  5
5E0E:  MOVF   x4B,F
5E10:  BNZ   5E1C
5E12:  MOVF   x4A,W
5E14:  SUBLW  05
5E16:  BNC   5E1C
....................                { 
....................                   desfoguelento=1; 
5E18:  BSF    x29.5
....................                } 
....................                else 
5E1A:  BRA    5E1E
....................                { 
....................                   desfoguelento=0; 
5E1C:  BCF    x29.5
....................                } 
....................          } 
....................          else 
5E1E:  BRA    5E48
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5E20:  MOVLW  04
5E22:  MOVWF  xE0
5E24:  MOVLW  AF
5E26:  MOVWF  xE1
5E28:  MOVLB  0
5E2A:  CALL   0F72
5E2E:  MOVLB  5
5E30:  DECFSZ xE0,F
5E32:  BRA    5E24
5E34:  MOVLW  08
5E36:  MOVWF  x36
5E38:  CLRF   xE1
5E3A:  MOVLB  0
5E3C:  CALL   0FDC
5E40:  MOVLW  01
5E42:  MOVLB  5
5E44:  MOVWF  x3D
5E46:  BSF    x29.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5E48:  BSF    F92.3
5E4A:  BTFSS  F80.3
5E4C:  BRA    5E76
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5E4E:  MOVLW  04
5E50:  MOVWF  xE0
5E52:  MOVLW  AF
5E54:  MOVWF  xE1
5E56:  MOVLB  0
5E58:  CALL   0F72
5E5C:  MOVLB  5
5E5E:  DECFSZ xE0,F
5E60:  BRA    5E52
5E62:  MOVLW  08
5E64:  MOVWF  x36
5E66:  CLRF   xE1
5E68:  MOVLB  0
5E6A:  CALL   0FDC
5E6E:  MOVLW  01
5E70:  MOVLB  5
5E72:  MOVWF  x3D
5E74:  BSF    x29.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
5E76:  MOVF   x36,W
5E78:  SUBLW  14
5E7A:  BTFSS  FD8.2
5E7C:  GOTO   698C
....................     
....................    Lectura_Esclavos(); 
5E80:  MOVLB  0
5E82:  CALL   1EC8
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
5E86:  MOVLB  5
5E88:  BTFSS  x2A.2
5E8A:  BRA    5FB0
5E8C:  DECFSZ x1D,W
5E8E:  BRA    5FB0
5E90:  DECFSZ x1E,W
5E92:  BRA    5FB0
5E94:  MOVF   x3E,W
5E96:  SUBLW  01
5E98:  BTFSS  FD8.0
5E9A:  BRA    5FB0
5E9C:  MOVF   x27,F
5E9E:  BTFSS  FD8.2
5EA0:  BRA    5FB0
5EA2:  MOVF   x28,F
5EA4:  BTFSS  FD8.2
5EA6:  BRA    5FB0
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
5EA8:  MOVF   x3E,F
5EAA:  BNZ   5F24
5EAC:  BTFSC  x2A.4
5EAE:  BRA    5F24
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5EB0:  CLRF   xF2
5EB2:  MOVLW  37
5EB4:  MOVWF  xF3
5EB6:  MOVLW  7F
5EB8:  MOVWF  xF4
5EBA:  MOVLW  3F
5EBC:  MOVWF  xF5
5EBE:  MOVLW  01
5EC0:  MOVWF  xF6
5EC2:  CLRF   xF7
5EC4:  MOVLB  0
5EC6:  CALL   1584
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
5ECA:  MOVLW  05
5ECC:  MOVWF  FEA
5ECE:  MOVLW  C0
5ED0:  MOVWF  FE9
5ED2:  MOVFF  FF2,5E0
5ED6:  BCF    FF2.7
5ED8:  MOVLW  00
5EDA:  CALL   0966
5EDE:  TBLRD*-
5EE0:  TBLRD*+
5EE2:  MOVF   FF5,W
5EE4:  MOVWF  FEE
5EE6:  IORLW  00
5EE8:  BNZ   5EE0
5EEA:  MOVLB  5
5EEC:  BTFSC  xE0.7
5EEE:  BSF    FF2.7
5EF0:  MOVLW  05
5EF2:  MOVWF  xE1
5EF4:  MOVLW  C0
5EF6:  MOVWF  xE0
5EF8:  CLRF   xE2
5EFA:  MOVLW  37
5EFC:  MOVWF  xE3
5EFE:  MOVLW  02
5F00:  MOVWF  xE4
5F02:  MOVLW  01
5F04:  MOVWF  xE5
5F06:  MOVLB  0
5F08:  CALL   1646
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F0C:  MOVLB  5
5F0E:  BSF    x2A.4
5F10:  BCF    x2A.5
5F12:  BCF    x2A.6
5F14:  BCF    x2A.7
5F16:  BCF    x2B.0
5F18:  BCF    x2B.1
5F1A:  BCF    x2B.2
5F1C:  BCF    x2B.3
....................          EVDesfogue=0;Control=1; 
5F1E:  CLRF   x2D
5F20:  MOVLW  01
5F22:  MOVWF  x34
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
5F24:  DECFSZ x3E,W
5F26:  BRA    5FA2
5F28:  BTFSC  x2A.7
5F2A:  BRA    5FA2
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5F2C:  CLRF   xF2
5F2E:  MOVLW  37
5F30:  MOVWF  xF3
5F32:  MOVLW  7F
5F34:  MOVWF  xF4
5F36:  MOVLW  3F
5F38:  MOVWF  xF5
5F3A:  MOVLW  01
5F3C:  MOVWF  xF6
5F3E:  CLRF   xF7
5F40:  MOVLB  0
5F42:  CALL   1584
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
5F46:  MOVLW  05
5F48:  MOVWF  FEA
5F4A:  MOVLW  C0
5F4C:  MOVWF  FE9
5F4E:  MOVFF  FF2,5E0
5F52:  BCF    FF2.7
5F54:  MOVLW  00
5F56:  CALL   0CAC
5F5A:  TBLRD*-
5F5C:  TBLRD*+
5F5E:  MOVF   FF5,W
5F60:  MOVWF  FEE
5F62:  IORLW  00
5F64:  BNZ   5F5C
5F66:  MOVLB  5
5F68:  BTFSC  xE0.7
5F6A:  BSF    FF2.7
5F6C:  MOVLW  05
5F6E:  MOVWF  xE1
5F70:  MOVLW  C0
5F72:  MOVWF  xE0
5F74:  CLRF   xE2
5F76:  MOVLW  37
5F78:  MOVWF  xE3
5F7A:  MOVLW  02
5F7C:  MOVWF  xE4
5F7E:  MOVLW  01
5F80:  MOVWF  xE5
5F82:  MOVLB  0
5F84:  CALL   1646
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F88:  MOVLB  5
5F8A:  BCF    x2A.4
5F8C:  BCF    x2A.5
5F8E:  BCF    x2A.6
5F90:  BSF    x2A.7
5F92:  BCF    x2B.0
5F94:  BCF    x2B.1
5F96:  BCF    x2B.2
5F98:  BCF    x2B.3
....................          EVDesfogue=0;EVTrampa=0;Control=1; 
5F9A:  CLRF   x2D
5F9C:  CLRF   x2F
5F9E:  MOVLW  01
5FA0:  MOVWF  x34
....................       } 
....................       Control=1; 
5FA2:  MOVLW  01
5FA4:  MOVWF  x34
....................       Envio_Esclavos(); 
5FA6:  MOVLB  0
5FA8:  CALL   2024
....................    } 
....................    else 
5FAC:  BRA    63F0
5FAE:  MOVLB  5
....................    { 
....................       Control=0; 
5FB0:  CLRF   x34
....................       if(Alarma>0) 
5FB2:  MOVF   x27,F
5FB4:  BTFSC  FD8.2
5FB6:  BRA    60B0
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
5FB8:  DECFSZ x27,W
5FBA:  BRA    6030
....................          { 
....................             if(disp_Alarma==0) 
5FBC:  BTFSC  x2B.5
5FBE:  BRA    6030
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5FC0:  CLRF   xF2
5FC2:  MOVLW  37
5FC4:  MOVWF  xF3
5FC6:  MOVLW  7F
5FC8:  MOVWF  xF4
5FCA:  MOVLW  3F
5FCC:  MOVWF  xF5
5FCE:  MOVLW  01
5FD0:  MOVWF  xF6
5FD2:  CLRF   xF7
5FD4:  MOVLB  0
5FD6:  CALL   1584
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
5FDA:  MOVLW  05
5FDC:  MOVWF  FEA
5FDE:  MOVLW  C0
5FE0:  MOVWF  FE9
5FE2:  MOVFF  FF2,5E0
5FE6:  BCF    FF2.7
5FE8:  MOVLW  00
5FEA:  CALL   0CD4
5FEE:  TBLRD*-
5FF0:  TBLRD*+
5FF2:  MOVF   FF5,W
5FF4:  MOVWF  FEE
5FF6:  IORLW  00
5FF8:  BNZ   5FF0
5FFA:  MOVLB  5
5FFC:  BTFSC  xE0.7
5FFE:  BSF    FF2.7
6000:  MOVLW  05
6002:  MOVWF  xE1
6004:  MOVLW  C0
6006:  MOVWF  xE0
6008:  CLRF   xE2
600A:  MOVLW  37
600C:  MOVWF  xE3
600E:  MOVLW  02
6010:  MOVWF  xE4
6012:  MOVLW  01
6014:  MOVWF  xE5
6016:  MOVLB  0
6018:  CALL   1646
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
601C:  MOVLB  5
601E:  BCF    x2A.4
6020:  BCF    x2A.5
6022:  BCF    x2A.6
6024:  BCF    x2A.7
6026:  BCF    x2B.0
6028:  BCF    x2B.1
602A:  BCF    x2B.2
602C:  BCF    x2B.3
....................                disp_Alarma=1; 
602E:  BSF    x2B.5
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
6030:  MOVF   x27,W
6032:  SUBLW  02
6034:  BNZ   60AE
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
6036:  CLRF   x3E
6038:  CLRF   x3F
....................             if(disp_Alarma==0) 
603A:  BTFSC  x2B.5
603C:  BRA    60AE
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
603E:  CLRF   xF2
6040:  MOVLW  37
6042:  MOVWF  xF3
6044:  MOVLW  7F
6046:  MOVWF  xF4
6048:  MOVLW  3F
604A:  MOVWF  xF5
604C:  MOVLW  01
604E:  MOVWF  xF6
6050:  CLRF   xF7
6052:  MOVLB  0
6054:  CALL   1584
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6058:  MOVLW  05
605A:  MOVWF  FEA
605C:  MOVLW  C0
605E:  MOVWF  FE9
6060:  MOVFF  FF2,5E0
6064:  BCF    FF2.7
6066:  MOVLW  00
6068:  CALL   0CFA
606C:  TBLRD*-
606E:  TBLRD*+
6070:  MOVF   FF5,W
6072:  MOVWF  FEE
6074:  IORLW  00
6076:  BNZ   606E
6078:  MOVLB  5
607A:  BTFSC  xE0.7
607C:  BSF    FF2.7
607E:  MOVLW  05
6080:  MOVWF  xE1
6082:  MOVLW  C0
6084:  MOVWF  xE0
6086:  CLRF   xE2
6088:  MOVLW  37
608A:  MOVWF  xE3
608C:  MOVLW  02
608E:  MOVWF  xE4
6090:  MOVLW  01
6092:  MOVWF  xE5
6094:  MOVLB  0
6096:  CALL   1646
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
609A:  MOVLB  5
609C:  BCF    x2A.4
609E:  BCF    x2A.5
60A0:  BCF    x2A.6
60A2:  BCF    x2A.7
60A4:  BCF    x2B.0
60A6:  BCF    x2B.1
60A8:  BCF    x2B.2
60AA:  BCF    x2B.3
....................                disp_Alarma=1; 
60AC:  BSF    x2B.5
....................             } 
....................          } 
....................       } 
....................       else 
60AE:  BRA    63EA
....................       {  
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
60B0:  MOVF   x3E,W
60B2:  SUBLW  02
60B4:  BTFSS  FD8.2
60B6:  BRA    626C
60B8:  BTFSS  x2A.2
60BA:  BRA    626C
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
60BC:  BTFSS  x29.5
60BE:  BRA    6198
....................             { 
....................                if(z==0) 
60C0:  BTFSC  x2B.4
60C2:  BRA    6112
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
60C4:  CLRF   xE0
60C6:  MOVLW  5A
60C8:  MOVWF  xE1
60CA:  MOVLW  38
60CC:  MOVWF  xE2
60CE:  MOVLB  0
60D0:  CALL   26E0
60D4:  MOVLW  19
60D6:  MOVLB  5
60D8:  MOVWF  xF2
60DA:  MOVLW  12
60DC:  MOVWF  xF3
60DE:  MOVLW  3C
60E0:  MOVWF  xF4
60E2:  MOVLW  1A
60E4:  MOVWF  xF5
60E6:  CLRF   xF6
60E8:  CLRF   xF7
60EA:  MOVLB  0
60EC:  CALL   1584
60F0:  MOVLW  37
60F2:  MOVLB  5
60F4:  MOVWF  xF2
60F6:  MOVLW  12
60F8:  MOVWF  xF3
60FA:  MOVLW  44
60FC:  MOVWF  xF4
60FE:  MOVLW  35
6100:  MOVWF  xF5
6102:  CLRF   xF6
6104:  MOVLW  01
6106:  MOVWF  xF7
6108:  MOVLB  0
610A:  CALL   1584
610E:  MOVLB  5
6110:  BSF    x2B.4
....................                } 
....................                if(disp_Despresurizando==0) 
6112:  BTFSC  x2B.0
6114:  BRA    6190
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6116:  CLRF   xF2
6118:  MOVLW  37
611A:  MOVWF  xF3
611C:  MOVLW  7F
611E:  MOVWF  xF4
6120:  MOVLW  3F
6122:  MOVWF  xF5
6124:  MOVLW  01
6126:  MOVWF  xF6
6128:  CLRF   xF7
612A:  MOVLB  0
612C:  CALL   1584
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
6130:  MOVLW  05
6132:  MOVWF  FEA
6134:  MOVLW  C0
6136:  MOVWF  FE9
6138:  MOVFF  FF2,5E0
613C:  BCF    FF2.7
613E:  MOVLW  00
6140:  CALL   0D20
6144:  TBLRD*-
6146:  TBLRD*+
6148:  MOVF   FF5,W
614A:  MOVWF  FEE
614C:  IORLW  00
614E:  BNZ   6146
6150:  MOVLB  5
6152:  BTFSC  xE0.7
6154:  BSF    FF2.7
6156:  MOVLW  05
6158:  MOVWF  xE1
615A:  MOVLW  C0
615C:  MOVWF  xE0
615E:  CLRF   xE2
6160:  MOVLW  37
6162:  MOVWF  xE3
6164:  MOVLW  02
6166:  MOVWF  xE4
6168:  MOVLW  01
616A:  MOVWF  xE5
616C:  MOVLB  0
616E:  CALL   1646
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6172:  MOVLB  5
6174:  BCF    x2A.4
6176:  BCF    x2A.5
6178:  BCF    x2A.6
617A:  BCF    x2A.7
617C:  BSF    x2B.0
617E:  BCF    x2B.1
6180:  BCF    x2B.2
6182:  BCF    x2B.3
....................                   glcd_imagen(5); 
6184:  MOVLW  05
6186:  MOVWF  xE0
6188:  MOVLB  0
618A:  CALL   2088
618E:  MOVLB  5
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
6190:  MOVLW  02
6192:  MOVWF  x40
6194:  MOVWF  x3F
....................             } 
....................             else 
6196:  BRA    626C
....................             { 
....................                if(z==0) 
6198:  BTFSC  x2B.4
619A:  BRA    61EA
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
619C:  CLRF   xE0
619E:  MOVLW  5A
61A0:  MOVWF  xE1
61A2:  MOVLW  38
61A4:  MOVWF  xE2
61A6:  MOVLB  0
61A8:  CALL   26E0
61AC:  MOVLW  19
61AE:  MOVLB  5
61B0:  MOVWF  xF2
61B2:  MOVLW  12
61B4:  MOVWF  xF3
61B6:  MOVLW  3C
61B8:  MOVWF  xF4
61BA:  MOVLW  1A
61BC:  MOVWF  xF5
61BE:  CLRF   xF6
61C0:  CLRF   xF7
61C2:  MOVLB  0
61C4:  CALL   1584
61C8:  MOVLW  37
61CA:  MOVLB  5
61CC:  MOVWF  xF2
61CE:  MOVLW  12
61D0:  MOVWF  xF3
61D2:  MOVLW  44
61D4:  MOVWF  xF4
61D6:  MOVLW  35
61D8:  MOVWF  xF5
61DA:  CLRF   xF6
61DC:  MOVLW  01
61DE:  MOVWF  xF7
61E0:  MOVLB  0
61E2:  CALL   1584
61E6:  MOVLB  5
61E8:  BSF    x2B.4
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
61EA:  BTFSC  x2A.6
61EC:  BRA    6268
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
61EE:  CLRF   xF2
61F0:  MOVLW  37
61F2:  MOVWF  xF3
61F4:  MOVLW  7F
61F6:  MOVWF  xF4
61F8:  MOVLW  3F
61FA:  MOVWF  xF5
61FC:  MOVLW  01
61FE:  MOVWF  xF6
6200:  CLRF   xF7
6202:  MOVLB  0
6204:  CALL   1584
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
6208:  MOVLW  05
620A:  MOVWF  FEA
620C:  MOVLW  C0
620E:  MOVWF  FE9
6210:  MOVFF  FF2,5E0
6214:  BCF    FF2.7
6216:  MOVLW  00
6218:  CALL   0D4A
621C:  TBLRD*-
621E:  TBLRD*+
6220:  MOVF   FF5,W
6222:  MOVWF  FEE
6224:  IORLW  00
6226:  BNZ   621E
6228:  MOVLB  5
622A:  BTFSC  xE0.7
622C:  BSF    FF2.7
622E:  MOVLW  05
6230:  MOVWF  xE1
6232:  MOVLW  C0
6234:  MOVWF  xE0
6236:  CLRF   xE2
6238:  MOVLW  37
623A:  MOVWF  xE3
623C:  MOVLW  02
623E:  MOVWF  xE4
6240:  MOVLW  01
6242:  MOVWF  xE5
6244:  MOVLB  0
6246:  CALL   1646
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
624A:  MOVLB  5
624C:  BCF    x2A.4
624E:  BCF    x2A.5
6250:  BSF    x2A.6
6252:  BCF    x2A.7
6254:  BCF    x2B.0
6256:  BCF    x2B.1
6258:  BCF    x2B.2
625A:  BCF    x2B.3
....................                   glcd_imagen(5); 
625C:  MOVLW  05
625E:  MOVWF  xE0
6260:  MOVLB  0
6262:  CALL   2088
6266:  MOVLB  5
....................                } 
....................                Exhaust=1; 
6268:  MOVLW  01
626A:  MOVWF  x40
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0) 
626C:  MOVF   x1D,F
626E:  BNZ   62EA
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0 && flag_agua==1) 
6270:  BTFSC  x2B.2
6272:  BRA    62EA
6274:  MOVF   x3C,F
6276:  BNZ   62EA
6278:  BTFSS  x2A.2
627A:  BRA    62EA
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
627C:  CLRF   xF2
627E:  MOVLW  37
6280:  MOVWF  xF3
6282:  MOVLW  7F
6284:  MOVWF  xF4
6286:  MOVLW  3F
6288:  MOVWF  xF5
628A:  MOVLW  01
628C:  MOVWF  xF6
628E:  CLRF   xF7
6290:  MOVLB  0
6292:  CALL   1584
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
6296:  MOVLW  05
6298:  MOVWF  FEA
629A:  MOVLW  C0
629C:  MOVWF  FE9
629E:  MOVFF  FF2,5E0
62A2:  BCF    FF2.7
62A4:  MOVLW  00
62A6:  CALL   0D6C
62AA:  TBLRD*-
62AC:  TBLRD*+
62AE:  MOVF   FF5,W
62B0:  MOVWF  FEE
62B2:  IORLW  00
62B4:  BNZ   62AC
62B6:  MOVLB  5
62B8:  BTFSC  xE0.7
62BA:  BSF    FF2.7
62BC:  MOVLW  05
62BE:  MOVWF  xE1
62C0:  MOVLW  C0
62C2:  MOVWF  xE0
62C4:  CLRF   xE2
62C6:  MOVLW  37
62C8:  MOVWF  xE3
62CA:  MOVLW  02
62CC:  MOVWF  xE4
62CE:  MOVLW  01
62D0:  MOVWF  xE5
62D2:  MOVLB  0
62D4:  CALL   1646
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
62D8:  MOVLB  5
62DA:  BCF    x2A.4
62DC:  BCF    x2A.5
62DE:  BCF    x2A.6
62E0:  BCF    x2A.7
62E2:  BCF    x2B.0
62E4:  BCF    x2B.1
62E6:  BSF    x2B.2
62E8:  BCF    x2B.3
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          disp_Alarma=0; 
62EA:  BCF    x2B.5
....................          if(NivelTanque==1 && flag_agua==0 ) 
62EC:  DECFSZ x20,W
62EE:  BRA    62F8
62F0:  BTFSC  x2A.2
62F2:  BRA    62F8
....................          { 
....................             flag_agua=1; 
62F4:  BSF    x2A.2
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
62F6:  BRA    63EA
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && flag_agua==0) 
62F8:  MOVF   x3E,F
62FA:  BNZ   6374
62FC:  BTFSC  x2A.5
62FE:  BRA    6374
6300:  BTFSC  x2A.2
6302:  BRA    6374
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6304:  CLRF   xF2
6306:  MOVLW  37
6308:  MOVWF  xF3
630A:  MOVLW  7F
630C:  MOVWF  xF4
630E:  MOVLW  3F
6310:  MOVWF  xF5
6312:  MOVLW  01
6314:  MOVWF  xF6
6316:  CLRF   xF7
6318:  MOVLB  0
631A:  CALL   1584
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
631E:  MOVLW  05
6320:  MOVWF  FEA
6322:  MOVLW  C0
6324:  MOVWF  FE9
6326:  MOVFF  FF2,5E0
632A:  BCF    FF2.7
632C:  MOVLW  00
632E:  CALL   0D96
6332:  TBLRD*-
6334:  TBLRD*+
6336:  MOVF   FF5,W
6338:  MOVWF  FEE
633A:  IORLW  00
633C:  BNZ   6334
633E:  MOVLB  5
6340:  BTFSC  xE0.7
6342:  BSF    FF2.7
6344:  MOVLW  05
6346:  MOVWF  xE1
6348:  MOVLW  C0
634A:  MOVWF  xE0
634C:  CLRF   xE2
634E:  MOVLW  37
6350:  MOVWF  xE3
6352:  MOVLW  02
6354:  MOVWF  xE4
6356:  MOVLW  01
6358:  MOVWF  xE5
635A:  MOVLB  0
635C:  CALL   1646
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6360:  MOVLB  5
6362:  BCF    x2A.4
6364:  BSF    x2A.5
6366:  BCF    x2A.6
6368:  BCF    x2A.7
636A:  BCF    x2B.0
636C:  BCF    x2B.1
636E:  BCF    x2B.2
6370:  BCF    x2B.3
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
6372:  CLRF   x34
....................             } 
....................              
....................             if(AlarmaAgua==1) 
6374:  DECFSZ x28,W
6376:  BRA    63EA
....................             { 
....................                if(disp_AlarmaAgua==0) 
6378:  BTFSC  x2B.6
637A:  BRA    63EA
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
637C:  CLRF   xF2
637E:  MOVLW  37
6380:  MOVWF  xF3
6382:  MOVLW  7F
6384:  MOVWF  xF4
6386:  MOVLW  3F
6388:  MOVWF  xF5
638A:  MOVLW  01
638C:  MOVWF  xF6
638E:  CLRF   xF7
6390:  MOVLB  0
6392:  CALL   1584
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
6396:  MOVLW  05
6398:  MOVWF  FEA
639A:  MOVLW  C0
639C:  MOVWF  FE9
639E:  MOVFF  FF2,5E0
63A2:  BCF    FF2.7
63A4:  MOVLW  00
63A6:  CALL   0DBA
63AA:  TBLRD*-
63AC:  TBLRD*+
63AE:  MOVF   FF5,W
63B0:  MOVWF  FEE
63B2:  IORLW  00
63B4:  BNZ   63AC
63B6:  MOVLB  5
63B8:  BTFSC  xE0.7
63BA:  BSF    FF2.7
63BC:  MOVLW  05
63BE:  MOVWF  xE1
63C0:  MOVLW  C0
63C2:  MOVWF  xE0
63C4:  CLRF   xE2
63C6:  MOVLW  37
63C8:  MOVWF  xE3
63CA:  MOVLW  02
63CC:  MOVWF  xE4
63CE:  MOVLW  01
63D0:  MOVWF  xE5
63D2:  MOVLB  0
63D4:  CALL   1646
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
63D8:  MOVLB  5
63DA:  BCF    x2A.4
63DC:  BCF    x2A.6
63DE:  BCF    x2A.7
63E0:  BCF    x2B.0
63E2:  BCF    x2B.1
63E4:  BCF    x2B.2
63E6:  BCF    x2B.3
....................                   disp_AlarmaAgua=1; 
63E8:  BSF    x2B.6
....................                } 
....................             } 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
63EA:  MOVLB  0
63EC:  CALL   2024
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
63F0:  MOVLB  5
63F2:  BTFSS  x29.6
63F4:  BRA    6748
....................    {                       
....................       Lectura=0; 
63F6:  BCF    x29.6
....................       //displayTiempo(NivelTanque,40,30,2,1);  
....................       //displayTiempo(Presostato,40,40,2,1);  
....................       //displayTiempo(ADCTemperatura[2],20,30,2,1);  
....................       //displayT(Prom,20,30,2); 
....................       displayTiempo(Presostato,31,40,2,1); 
63F8:  MOVFF  521,5E1
63FC:  MOVLW  1F
63FE:  MOVWF  xE2
6400:  MOVLW  28
6402:  MOVWF  xE3
6404:  MOVLW  02
6406:  MOVWF  xE4
6408:  MOVLW  01
640A:  MOVWF  xE5
640C:  MOVLB  0
640E:  CALL   2450
....................       glcd_rect(51, 40, 62, 48, YES, OFF);glcd_text57(52, 40, kpa, 1, ON); 
6412:  MOVLW  33
6414:  MOVLB  5
6416:  MOVWF  xF2
6418:  MOVLW  28
641A:  MOVWF  xF3
641C:  MOVLW  3E
641E:  MOVWF  xF4
6420:  MOVLW  30
6422:  MOVWF  xF5
6424:  MOVLW  01
6426:  MOVWF  xF6
6428:  CLRF   xF7
642A:  MOVLB  0
642C:  CALL   1584
6430:  MOVLW  34
6432:  MOVLB  5
6434:  MOVWF  xF1
6436:  MOVLW  28
6438:  MOVWF  xF2
643A:  MOVLW  04
643C:  MOVWF  xF4
643E:  MOVLW  C9
6440:  MOVWF  xF3
6442:  MOVLW  01
6444:  MOVWF  xF5
6446:  MOVWF  xF6
6448:  MOVLB  0
644A:  CALL   1254
....................       displayT(ADC_Pt100,69,20,2); 
644E:  MOVFF  553,5E3
6452:  MOVFF  552,5E2
6456:  MOVFF  551,5E1
645A:  MOVFF  550,5E0
645E:  MOVLW  45
6460:  MOVLB  5
6462:  MOVWF  xE4
6464:  MOVLW  14
6466:  MOVWF  xE5
6468:  MOVLW  02
646A:  MOVWF  xE6
646C:  MOVLB  0
646E:  GOTO   2AB4
....................       glcd_circle(95,40,2,NO,ON); 
6472:  MOVLW  5F
6474:  MOVLB  5
6476:  MOVWF  xE0
6478:  MOVLW  28
647A:  MOVWF  xE1
647C:  MOVLW  02
647E:  MOVWF  xE2
6480:  CLRF   xE3
6482:  MOVLW  01
6484:  MOVWF  xE4
6486:  MOVLB  0
6488:  CALL   2188
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
648C:  MOVLW  05
648E:  MOVWF  FEA
6490:  MOVLW  C0
6492:  MOVWF  FE9
6494:  MOVFF  FF2,5E0
6498:  BCF    FF2.7
649A:  MOVLW  00
649C:  CALL   09D0
64A0:  TBLRD*-
64A2:  TBLRD*+
64A4:  MOVF   FF5,W
64A6:  MOVWF  FEE
64A8:  IORLW  00
64AA:  BNZ   64A2
64AC:  MOVLB  5
64AE:  BTFSC  xE0.7
64B0:  BSF    FF2.7
64B2:  MOVLW  05
64B4:  MOVWF  xE1
64B6:  MOVLW  C0
64B8:  MOVWF  xE0
64BA:  MOVLW  66
64BC:  MOVWF  xE2
64BE:  MOVLW  28
64C0:  MOVWF  xE3
64C2:  MOVLW  02
64C4:  MOVWF  xE4
64C6:  MOVWF  xE5
64C8:  MOVLB  0
64CA:  CALL   1646
....................       //displayT(Pt,1,20,3); 
....................       displayTiempo(Setpoint,5,20,2,1); 
64CE:  MOVFF  53B,5E1
64D2:  MOVLW  05
64D4:  MOVLB  5
64D6:  MOVWF  xE2
64D8:  MOVLW  14
64DA:  MOVWF  xE3
64DC:  MOVLW  02
64DE:  MOVWF  xE4
64E0:  MOVLW  01
64E2:  MOVWF  xE5
64E4:  MOVLB  0
64E6:  CALL   2450
....................          
....................       if(Visua==1)// Si se activo la visualización desde software 
64EA:  MOVLB  5
64EC:  BTFSS  x2A.1
64EE:  BRA    65FA
....................       { 
....................          displayTiempo((int8)desvio,5,30,4,1); 
64F0:  MOVFF  5BB,5E3
64F4:  MOVFF  5BA,5E2
64F8:  MOVFF  5B9,5E1
64FC:  MOVFF  5B8,5E0
6500:  MOVLB  0
6502:  CALL   2B2E
6506:  MOVFF  01,5E0
650A:  MOVFF  01,5E1
650E:  MOVLW  05
6510:  MOVLB  5
6512:  MOVWF  xE2
6514:  MOVLW  1E
6516:  MOVWF  xE3
6518:  MOVLW  04
651A:  MOVWF  xE4
651C:  MOVLW  01
651E:  MOVWF  xE5
6520:  MOVLB  0
6522:  CALL   2450
....................          displayTiempo((int8)Tpulso,5,40,4,1); 
6526:  MOVFF  59F,5E3
652A:  MOVFF  59E,5E2
652E:  MOVFF  59D,5E1
6532:  MOVFF  59C,5E0
6536:  CALL   2B2E
653A:  MOVFF  01,5E0
653E:  MOVFF  01,5E1
6542:  MOVLW  05
6544:  MOVLB  5
6546:  MOVWF  xE2
6548:  MOVLW  28
654A:  MOVWF  xE3
654C:  MOVLW  04
654E:  MOVWF  xE4
6550:  MOVLW  01
6552:  MOVWF  xE5
6554:  MOVLB  0
6556:  CALL   2450
....................          displayTiempo((int8)Ganancia,30,40,4,1); 
655A:  MOVFF  5B3,5E3
655E:  MOVFF  5B2,5E2
6562:  MOVFF  5B1,5E1
6566:  MOVFF  5B0,5E0
656A:  CALL   2B2E
656E:  MOVFF  01,5E0
6572:  MOVFF  01,5E1
6576:  MOVLW  1E
6578:  MOVLB  5
657A:  MOVWF  xE2
657C:  MOVLW  28
657E:  MOVWF  xE3
6580:  MOVLW  04
6582:  MOVWF  xE4
6584:  MOVLW  01
6586:  MOVWF  xE5
6588:  MOVLB  0
658A:  CALL   2450
....................          displayTiempo((int8)Ajuste,30,30,4,1); 
658E:  MOVFF  524,5E1
6592:  MOVLW  1E
6594:  MOVLB  5
6596:  MOVWF  xE2
6598:  MOVWF  xE3
659A:  MOVLW  04
659C:  MOVWF  xE4
659E:  MOVLW  01
65A0:  MOVWF  xE5
65A2:  MOVLB  0
65A4:  CALL   2450
....................          displayTiempo((int8)Ajusten,30,20,4,1); 
65A8:  MOVFF  525,5E1
65AC:  MOVLW  1E
65AE:  MOVLB  5
65B0:  MOVWF  xE2
65B2:  MOVLW  14
65B4:  MOVWF  xE3
65B6:  MOVLW  04
65B8:  MOVWF  xE4
65BA:  MOVLW  01
65BC:  MOVWF  xE5
65BE:  MOVLB  0
65C0:  CALL   2450
....................          displayTiempo((int8)Ganancia2,50,40,4,1); 
65C4:  MOVFF  5B7,5E3
65C8:  MOVFF  5B6,5E2
65CC:  MOVFF  5B5,5E1
65D0:  MOVFF  5B4,5E0
65D4:  CALL   2B2E
65D8:  MOVFF  01,5E0
65DC:  MOVFF  01,5E1
65E0:  MOVLW  32
65E2:  MOVLB  5
65E4:  MOVWF  xE2
65E6:  MOVLW  28
65E8:  MOVWF  xE3
65EA:  MOVLW  04
65EC:  MOVWF  xE4
65EE:  MOVLW  01
65F0:  MOVWF  xE5
65F2:  MOVLB  0
65F4:  CALL   2450
65F8:  MOVLB  5
....................       } 
....................           
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
65FA:  MOVFF  557,5E1
65FE:  MOVLW  50
6600:  MOVWF  xE2
6602:  CLRF   xE3
6604:  CLRF   xE4
6606:  MOVLW  01
6608:  MOVWF  xE5
660A:  MOVLB  0
660C:  CALL   2450
6610:  MOVFF  556,5E1
6614:  MOVLW  56
6616:  MOVLB  5
6618:  MOVWF  xE2
661A:  CLRF   xE3
661C:  CLRF   xE4
661E:  MOVLW  01
6620:  MOVWF  xE5
6622:  MOVLB  0
6624:  CALL   2450
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
6628:  MOVLW  05
662A:  MOVWF  FEA
662C:  MOVLW  C0
662E:  MOVWF  FE9
6630:  MOVFF  FF2,5E0
6634:  BCF    FF2.7
6636:  MOVLW  00
6638:  CALL   06BE
663C:  TBLRD*-
663E:  TBLRD*+
6640:  MOVF   FF5,W
6642:  MOVWF  FEE
6644:  IORLW  00
6646:  BNZ   663E
6648:  MOVLB  5
664A:  BTFSC  xE0.7
664C:  BSF    FF2.7
664E:  MOVLW  05
6650:  MOVWF  xE1
6652:  MOVLW  C0
6654:  MOVWF  xE0
6656:  MOVLW  5C
6658:  MOVWF  xE2
665A:  CLRF   xE3
665C:  MOVLW  02
665E:  MOVWF  xE4
6660:  MOVLW  01
6662:  MOVWF  xE5
6664:  MOVLB  0
6666:  CALL   1646
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
666A:  MOVFF  555,5E1
666E:  MOVLW  62
6670:  MOVLB  5
6672:  MOVWF  xE2
6674:  CLRF   xE3
6676:  CLRF   xE4
6678:  MOVLW  01
667A:  MOVWF  xE5
667C:  MOVLB  0
667E:  CALL   2450
6682:  MOVFF  554,5E1
6686:  MOVLW  68
6688:  MOVLB  5
668A:  MOVWF  xE2
668C:  CLRF   xE3
668E:  CLRF   xE4
6690:  MOVLW  01
6692:  MOVWF  xE5
6694:  MOVLB  0
6696:  CALL   2450
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
669A:  MOVFF  55F,5E1
669E:  MOVLW  50
66A0:  MOVLB  5
66A2:  MOVWF  xE2
66A4:  MOVLW  08
66A6:  MOVWF  xE3
66A8:  CLRF   xE4
66AA:  MOVLW  01
66AC:  MOVWF  xE5
66AE:  MOVLB  0
66B0:  CALL   2450
66B4:  MOVFF  55E,5E1
66B8:  MOVLW  56
66BA:  MOVLB  5
66BC:  MOVWF  xE2
66BE:  MOVLW  08
66C0:  MOVWF  xE3
66C2:  CLRF   xE4
66C4:  MOVLW  01
66C6:  MOVWF  xE5
66C8:  MOVLB  0
66CA:  CALL   2450
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
66CE:  MOVLW  05
66D0:  MOVWF  FEA
66D2:  MOVLW  C0
66D4:  MOVWF  FE9
66D6:  MOVFF  FF2,5E0
66DA:  BCF    FF2.7
66DC:  MOVLW  00
66DE:  CALL   06BE
66E2:  TBLRD*-
66E4:  TBLRD*+
66E6:  MOVF   FF5,W
66E8:  MOVWF  FEE
66EA:  IORLW  00
66EC:  BNZ   66E4
66EE:  MOVLB  5
66F0:  BTFSC  xE0.7
66F2:  BSF    FF2.7
66F4:  MOVLW  05
66F6:  MOVWF  xE1
66F8:  MOVLW  C0
66FA:  MOVWF  xE0
66FC:  MOVLW  5C
66FE:  MOVWF  xE2
6700:  MOVLW  08
6702:  MOVWF  xE3
6704:  MOVLW  02
6706:  MOVWF  xE4
6708:  MOVLW  01
670A:  MOVWF  xE5
670C:  MOVLB  0
670E:  CALL   1646
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
6712:  MOVFF  55D,5E1
6716:  MOVLW  62
6718:  MOVLB  5
671A:  MOVWF  xE2
671C:  MOVLW  08
671E:  MOVWF  xE3
6720:  CLRF   xE4
6722:  MOVLW  01
6724:  MOVWF  xE5
6726:  MOVLB  0
6728:  CALL   2450
672C:  MOVFF  55C,5E1
6730:  MOVLW  68
6732:  MOVLB  5
6734:  MOVWF  xE2
6736:  MOVLW  08
6738:  MOVWF  xE3
673A:  CLRF   xE4
673C:  MOVLW  01
673E:  MOVWF  xE5
6740:  MOVLB  0
6742:  CALL   2450
6746:  MOVLB  5
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint-1.0))// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
6748:  CLRF   xE1
674A:  MOVFF  53B,5E0
674E:  MOVLB  0
6750:  CALL   1A04
6754:  MOVFF  00,5E0
6758:  MOVFF  01,5E1
675C:  MOVFF  02,5E2
6760:  MOVFF  03,5E3
6764:  BSF    FD8.1
6766:  MOVFF  03,5E7
676A:  MOVFF  02,5E6
676E:  MOVFF  01,5E5
6772:  MOVFF  00,5E4
6776:  MOVLB  5
6778:  CLRF   xEB
677A:  CLRF   xEA
677C:  CLRF   xE9
677E:  MOVLW  7F
6780:  MOVWF  xE8
6782:  MOVLB  0
6784:  CALL   1B9A
6788:  MOVFF  03,5E3
678C:  MOVFF  02,5E2
6790:  MOVFF  01,5E1
6794:  MOVFF  00,5E0
6798:  MOVFF  553,5E7
679C:  MOVFF  552,5E6
67A0:  MOVFF  551,5E5
67A4:  MOVFF  550,5E4
67A8:  GOTO   2B6A
67AC:  BC    67B0
67AE:  BNZ   6812
....................    { 
....................       if(est==0) 
67B0:  MOVLB  5
67B2:  BTFSC  x2A.0
67B4:  BRA    6814
....................       { 
....................          tiempo_esterilizacion=1; 
67B6:  MOVLW  01
67B8:  MOVWF  x3E
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
67BA:  CLRF   xE0
67BC:  MOVLW  5A
67BE:  MOVWF  xE1
67C0:  MOVLW  38
67C2:  MOVWF  xE2
67C4:  MOVLB  0
67C6:  CALL   26E0
67CA:  MOVLW  0F
67CC:  MOVLB  5
67CE:  MOVWF  xF2
67D0:  MOVLW  12
67D2:  MOVWF  xF3
67D4:  MOVLW  1E
67D6:  MOVWF  xF4
67D8:  MOVLW  35
67DA:  MOVWF  xF5
67DC:  CLRF   xF6
67DE:  CLRF   xF7
67E0:  MOVLB  0
67E2:  CALL   1584
67E6:  MOVLW  19
67E8:  MOVLB  5
67EA:  MOVWF  xF2
67EC:  MOVLW  12
67EE:  MOVWF  xF3
67F0:  MOVLW  3C
67F2:  MOVWF  xF4
67F4:  MOVLW  1A
67F6:  MOVWF  xF5
67F8:  CLRF   xF6
67FA:  MOVLW  01
67FC:  MOVWF  xF7
67FE:  MOVLB  0
6800:  CALL   1584
6804:  MOVLB  5
6806:  BSF    x2A.0
....................          glcd_imagen(5); 
6808:  MOVLW  05
680A:  MOVWF  xE0
680C:  MOVLB  0
680E:  CALL   2088
6812:  MOVLB  5
....................       } 
....................    }   
....................     
....................    /*if(ADC_Pt100<((float)Setpoint-2.0)) 
....................    { 
....................       glcd_rect(15, 18, 30, 53, NO, ON); 
....................       if(est==1) 
....................       {glcd_rect(25, 18, 60, 26, NO, OFF);} 
....................       est=0;tiempo_esterilizacion=0; 
....................    }*/ 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
6814:  DECFSZ x40,W
6816:  BRA    6840
6818:  MOVF   x3E,W
681A:  SUBLW  02
681C:  BNZ   6840
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
681E:  CLRF   x34
....................       if(Presostato<20) 
6820:  MOVF   x21,W
6822:  SUBLW  13
6824:  BNC   682A
....................       { 
....................          EVDesfogue=3; 
6826:  MOVLW  03
6828:  MOVWF  x2D
....................       } 
....................       if(Presostato<2) 
682A:  MOVF   x21,W
682C:  SUBLW  01
682E:  BNC   683C
....................       { 
....................          tiempo_secado=1; 
6830:  MOVLW  01
6832:  MOVWF  x3F
....................          Control=0;EVDesfogue=3; 
6834:  CLRF   x34
6836:  MOVLW  03
6838:  MOVWF  x2D
....................       } 
....................       else 
683A:  BRA    6840
....................       { 
....................          EVDesfogue=1; 
683C:  MOVLW  01
683E:  MOVWF  x2D
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
6840:  MOVF   x40,W
6842:  SUBLW  02
6844:  BNZ   6874
6846:  MOVF   x3E,W
6848:  SUBLW  02
684A:  BNZ   6874
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
684C:  CLRF   x34
....................       if(Presostato<20) 
684E:  MOVF   x21,W
6850:  SUBLW  13
6852:  BNC   685A
....................       { 
....................          EVDesfogue=3; 
6854:  MOVLW  03
6856:  MOVWF  x2D
....................       } 
....................       else 
6858:  BRA    685E
....................       { 
....................          EVDesfogue=2; 
685A:  MOVLW  02
685C:  MOVWF  x2D
....................       } 
....................       if(Presostato<2) 
685E:  MOVF   x21,W
6860:  SUBLW  01
6862:  BNC   6874
....................       { 
....................          tiempo_esterilizacion=3; 
6864:  MOVLW  03
6866:  MOVWF  x3E
....................          tiempo_secado=2; 
6868:  MOVLW  02
686A:  MOVWF  x3F
....................          fin_ciclo=1; 
686C:  MOVLW  01
686E:  MOVWF  x3C
....................          EVDesfogue=3; 
6870:  MOVLW  03
6872:  MOVWF  x2D
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]==Testerilizacionp[0])&&(Testerilizacion[1]==Testerilizacionp[1])&&(Testerilizacion[2]==Testerilizacionp[2])&&(Testerilizacion[3]==Testerilizacionp[3]) && tiempo_esterilizacion==1) 
6874:  MOVF   x58,W
6876:  SUBWF  x54,W
6878:  BNZ   6894
687A:  MOVF   x59,W
687C:  SUBWF  x55,W
687E:  BNZ   6894
6880:  MOVF   x5A,W
6882:  SUBWF  x56,W
6884:  BNZ   6894
6886:  MOVF   x5B,W
6888:  SUBWF  x57,W
688A:  BNZ   6894
688C:  DECFSZ x3E,W
688E:  BRA    6894
....................    { 
....................       tiempo_esterilizacion=2; 
6890:  MOVLW  02
6892:  MOVWF  x3E
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
6894:  MOVF   x60,W
6896:  XORLW  80
6898:  MOVWF  00
689A:  MOVF   x5C,W
689C:  XORLW  80
689E:  SUBWF  00,W
68A0:  BZ    68A4
68A2:  BC    68E4
68A4:  MOVF   x61,W
68A6:  XORLW  80
68A8:  MOVWF  00
68AA:  MOVF   x5D,W
68AC:  XORLW  80
68AE:  SUBWF  00,W
68B0:  BZ    68B4
68B2:  BC    68E4
68B4:  MOVF   x62,W
68B6:  XORLW  80
68B8:  MOVWF  00
68BA:  MOVF   x5E,W
68BC:  XORLW  80
68BE:  SUBWF  00,W
68C0:  BZ    68C4
68C2:  BC    68E4
68C4:  MOVF   x63,W
68C6:  XORLW  80
68C8:  MOVWF  00
68CA:  MOVF   x5F,W
68CC:  XORLW  80
68CE:  SUBWF  00,W
68D0:  BZ    68D4
68D2:  BC    68E4
68D4:  DECFSZ x3F,W
68D6:  BRA    68E4
....................    { 
....................       tiempo_esterilizacion=3; 
68D8:  MOVLW  03
68DA:  MOVWF  x3E
....................       tiempo_secado=2; 
68DC:  MOVLW  02
68DE:  MOVWF  x3F
....................       fin_ciclo=1; 
68E0:  MOVLW  01
68E2:  MOVWF  x3C
....................    } 
....................     
....................    if(fin_ciclo==1) 
68E4:  DECFSZ x3C,W
68E6:  BRA    6980
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
68E8:  CLRF   x34
68EA:  MOVLW  03
68EC:  MOVWF  x2D
....................       if(disp_Fin==0) 
68EE:  BTFSC  x2B.3
68F0:  BRA    6960
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
68F2:  CLRF   xF2
68F4:  MOVLW  37
68F6:  MOVWF  xF3
68F8:  MOVLW  7F
68FA:  MOVWF  xF4
68FC:  MOVLW  3F
68FE:  MOVWF  xF5
6900:  MOVLW  01
6902:  MOVWF  xF6
6904:  CLRF   xF7
6906:  MOVLB  0
6908:  CALL   1584
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
690C:  MOVLW  05
690E:  MOVWF  FEA
6910:  MOVLW  C0
6912:  MOVWF  FE9
6914:  MOVFF  FF2,5E0
6918:  BCF    FF2.7
691A:  MOVLW  00
691C:  CALL   0DE0
6920:  TBLRD*-
6922:  TBLRD*+
6924:  MOVF   FF5,W
6926:  MOVWF  FEE
6928:  IORLW  00
692A:  BNZ   6922
692C:  MOVLB  5
692E:  BTFSC  xE0.7
6930:  BSF    FF2.7
6932:  MOVLW  05
6934:  MOVWF  xE1
6936:  MOVLW  C0
6938:  MOVWF  xE0
693A:  CLRF   xE2
693C:  MOVLW  37
693E:  MOVWF  xE3
6940:  MOVLW  02
6942:  MOVWF  xE4
6944:  MOVLW  01
6946:  MOVWF  xE5
6948:  MOVLB  0
694A:  CALL   1646
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
694E:  MOVLB  5
6950:  BCF    x2A.4
6952:  BCF    x2A.5
6954:  BSF    x2A.6
6956:  BCF    x2A.7
6958:  BSF    x2B.0
695A:  BCF    x2B.1
695C:  BCF    x2B.2
695E:  BSF    x2B.3
....................       }    
....................        
....................       if(RIGHT) 
6960:  BSF    F92.2
6962:  BTFSS  F80.2
6964:  BRA    6980
....................       { 
....................          Control=3; 
6966:  MOVLW  03
6968:  MOVWF  x34
....................          delay_ms(1000); 
696A:  MOVLW  04
696C:  MOVWF  xE0
696E:  MOVLW  FA
6970:  MOVWF  xE1
6972:  MOVLB  0
6974:  CALL   0F72
6978:  MOVLB  5
697A:  DECFSZ xE0,F
697C:  BRA    696E
....................          reset_cpu(); 
697E:  RESET
....................       } 
....................    } 
....................    EVAgua=10; 
6980:  MOVLW  0A
6982:  MOVWF  x2E
....................    Envio_Esclavos(); 
6984:  MOVLB  0
6986:  CALL   2024
698A:  MOVLB  5
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
698C:  MOVF   x36,W
698E:  SUBLW  64
6990:  BNZ   6A88
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
6992:  MOVFF  57A,5E1
6996:  CLRF   xE2
6998:  MOVLW  0A
699A:  MOVWF  xE3
699C:  MOVLW  02
699E:  MOVWF  xE4
69A0:  MOVLW  01
69A2:  MOVWF  xE5
69A4:  MOVLB  0
69A6:  CALL   2450
....................    displayTiempo(datoRx[1],0,20,2,1); 
69AA:  MOVFF  57B,5E1
69AE:  MOVLB  5
69B0:  CLRF   xE2
69B2:  MOVLW  14
69B4:  MOVWF  xE3
69B6:  MOVLW  02
69B8:  MOVWF  xE4
69BA:  MOVLW  01
69BC:  MOVWF  xE5
69BE:  MOVLB  0
69C0:  CALL   2450
....................    displayTiempo(datoRx[2],0,30,2,1); 
69C4:  MOVFF  57C,5E1
69C8:  MOVLB  5
69CA:  CLRF   xE2
69CC:  MOVLW  1E
69CE:  MOVWF  xE3
69D0:  MOVLW  02
69D2:  MOVWF  xE4
69D4:  MOVLW  01
69D6:  MOVWF  xE5
69D8:  MOVLB  0
69DA:  CALL   2450
....................    displayTiempo(datoRx[3],0,40,2,1); 
69DE:  MOVFF  57D,5E1
69E2:  MOVLB  5
69E4:  CLRF   xE2
69E6:  MOVLW  28
69E8:  MOVWF  xE3
69EA:  MOVLW  02
69EC:  MOVWF  xE4
69EE:  MOVLW  01
69F0:  MOVWF  xE5
69F2:  MOVLB  0
69F4:  CALL   2450
....................    displayTiempo(Opcion,0,50,2,1); 
69F8:  MOVFF  53D,5E1
69FC:  MOVLB  5
69FE:  CLRF   xE2
6A00:  MOVLW  32
6A02:  MOVWF  xE3
6A04:  MOVLW  02
6A06:  MOVWF  xE4
6A08:  MOVLW  01
6A0A:  MOVWF  xE5
6A0C:  MOVLB  0
6A0E:  CALL   2450
....................    Lectura_Esclavos(); 
6A12:  CALL   1EC8
....................    Opcion++; 
6A16:  MOVLB  5
6A18:  INCF   x3D,F
....................    displayTiempo(Puerta,50,10,2,1); 
6A1A:  MOVFF  51D,5E1
6A1E:  MOVLW  32
6A20:  MOVWF  xE2
6A22:  MOVLW  0A
6A24:  MOVWF  xE3
6A26:  MOVLW  02
6A28:  MOVWF  xE4
6A2A:  MOVLW  01
6A2C:  MOVWF  xE5
6A2E:  MOVLB  0
6A30:  CALL   2450
....................    displayTiempo(Parada,50,20,2,1); 
6A34:  MOVFF  51E,5E1
6A38:  MOVLW  32
6A3A:  MOVLB  5
6A3C:  MOVWF  xE2
6A3E:  MOVLW  14
6A40:  MOVWF  xE3
6A42:  MOVLW  02
6A44:  MOVWF  xE4
6A46:  MOVLW  01
6A48:  MOVWF  xE5
6A4A:  MOVLB  0
6A4C:  CALL   2450
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6A50:  MOVFF  553,5E3
6A54:  MOVFF  552,5E2
6A58:  MOVFF  551,5E1
6A5C:  MOVFF  550,5E0
6A60:  CALL   2B2E
6A64:  MOVFF  01,5E0
6A68:  MOVFF  01,5E1
6A6C:  MOVLW  32
6A6E:  MOVLB  5
6A70:  MOVWF  xE2
6A72:  MOVLW  1E
6A74:  MOVWF  xE3
6A76:  MOVLW  02
6A78:  MOVWF  xE4
6A7A:  MOVLW  01
6A7C:  MOVWF  xE5
6A7E:  MOVLB  0
6A80:  CALL   2450
....................     
....................  } 
6A84:  MOVLB  5
6A86:  BRA    698C
....................        
....................       while(Parada==0) 
....................       { 
6A88:  MOVF   x1E,F
6A8A:  BNZ   6B42
....................          Lectura_Esclavos(); 
6A8C:  MOVLB  0
6A8E:  CALL   1EC8
....................          delay_ms(100); 
6A92:  MOVLW  64
6A94:  MOVLB  5
6A96:  MOVWF  xE1
6A98:  MOVLB  0
6A9A:  CALL   0F72
....................          if(disp_Stop==0) 
6A9E:  MOVLB  5
6AA0:  BTFSC  x2B.1
6AA2:  BRA    6B40
....................          { 
....................             glcd_fillScreen(OFF);  
6AA4:  CLRF   xE1
6AA6:  MOVLB  0
6AA8:  CALL   0FDC
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6AAC:  MOVLW  05
6AAE:  MOVWF  FEA
6AB0:  MOVLW  C0
6AB2:  MOVWF  FE9
6AB4:  MOVFF  FF2,5E0
6AB8:  BCF    FF2.7
6ABA:  MOVLW  00
6ABC:  CALL   0E0C
6AC0:  TBLRD*-
6AC2:  TBLRD*+
6AC4:  MOVF   FF5,W
6AC6:  MOVWF  FEE
6AC8:  IORLW  00
6ACA:  BNZ   6AC2
6ACC:  MOVLB  5
6ACE:  BTFSC  xE0.7
6AD0:  BSF    FF2.7
6AD2:  MOVLW  05
6AD4:  MOVWF  xE1
6AD6:  MOVLW  C0
6AD8:  MOVWF  xE0
6ADA:  CLRF   xE2
6ADC:  MOVLW  0A
6ADE:  MOVWF  xE3
6AE0:  CLRF   xE4
6AE2:  MOVLW  02
6AE4:  MOVWF  xE5
6AE6:  MOVLB  0
6AE8:  CALL   1646
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6AEC:  MOVLW  05
6AEE:  MOVWF  FEA
6AF0:  MOVLW  C0
6AF2:  MOVWF  FE9
6AF4:  MOVFF  FF2,5E0
6AF8:  BCF    FF2.7
6AFA:  MOVLW  00
6AFC:  CALL   0E32
6B00:  TBLRD*-
6B02:  TBLRD*+
6B04:  MOVF   FF5,W
6B06:  MOVWF  FEE
6B08:  IORLW  00
6B0A:  BNZ   6B02
6B0C:  MOVLB  5
6B0E:  BTFSC  xE0.7
6B10:  BSF    FF2.7
6B12:  MOVLW  05
6B14:  MOVWF  xE1
6B16:  MOVLW  C0
6B18:  MOVWF  xE0
6B1A:  CLRF   xE2
6B1C:  MOVLW  1E
6B1E:  MOVWF  xE3
6B20:  CLRF   xE4
6B22:  MOVLW  02
6B24:  MOVWF  xE5
6B26:  MOVLB  0
6B28:  CALL   1646
6B2C:  MOVLB  5
6B2E:  BSF    x29.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6B30:  BCF    x2A.4
6B32:  BCF    x2A.5
6B34:  BCF    x2A.6
6B36:  BCF    x2A.7
6B38:  BCF    x2B.0
6B3A:  BSF    x2B.1
6B3C:  BCF    x2B.2
6B3E:  BCF    x2B.3
....................          } 
....................       }    
6B40:  BRA    6A88
....................       if(Parada==1) 
6B42:  DECFSZ x1E,W
6B44:  BRA    6BEC
....................       { 
....................          while(emergency==1) 
....................          { 
6B46:  BTFSS  x29.3
6B48:  BRA    6BEC
....................             Lectura_Esclavos(); 
6B4A:  MOVLB  0
6B4C:  CALL   1EC8
....................             if(disp_Stop==1) 
6B50:  MOVLB  5
6B52:  BTFSS  x2B.1
6B54:  BRA    6B62
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6B56:  CLRF   xE1
6B58:  MOVLB  0
6B5A:  CALL   0FDC
6B5E:  MOVLB  5
6B60:  BCF    x2B.1
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6B62:  MOVLW  05
6B64:  MOVWF  FEA
6B66:  MOVLW  C0
6B68:  MOVWF  FE9
6B6A:  MOVFF  FF2,5E0
6B6E:  BCF    FF2.7
6B70:  MOVLW  00
6B72:  MOVLB  0
6B74:  CALL   0E58
6B78:  TBLRD*-
6B7A:  TBLRD*+
6B7C:  MOVF   FF5,W
6B7E:  MOVWF  FEE
6B80:  IORLW  00
6B82:  BNZ   6B7A
6B84:  MOVLB  5
6B86:  BTFSC  xE0.7
6B88:  BSF    FF2.7
6B8A:  MOVLW  05
6B8C:  MOVWF  xE1
6B8E:  MOVLW  C0
6B90:  MOVWF  xE0
6B92:  CLRF   xE2
6B94:  MOVLW  0A
6B96:  MOVWF  xE3
6B98:  CLRF   xE4
6B9A:  MOVLW  02
6B9C:  MOVWF  xE5
6B9E:  MOVLB  0
6BA0:  CALL   1646
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6BA4:  MOVLW  05
6BA6:  MOVWF  FEA
6BA8:  MOVLW  C0
6BAA:  MOVWF  FE9
6BAC:  MOVFF  FF2,5E0
6BB0:  BCF    FF2.7
6BB2:  MOVLW  00
6BB4:  CALL   0E7E
6BB8:  TBLRD*-
6BBA:  TBLRD*+
6BBC:  MOVF   FF5,W
6BBE:  MOVWF  FEE
6BC0:  IORLW  00
6BC2:  BNZ   6BBA
6BC4:  MOVLB  5
6BC6:  BTFSC  xE0.7
6BC8:  BSF    FF2.7
6BCA:  MOVLW  05
6BCC:  MOVWF  xE1
6BCE:  MOVLW  C0
6BD0:  MOVWF  xE0
6BD2:  CLRF   xE2
6BD4:  MOVLW  1E
6BD6:  MOVWF  xE3
6BD8:  CLRF   xE4
6BDA:  MOVLW  02
6BDC:  MOVWF  xE5
6BDE:  MOVLB  0
6BE0:  CALL   1646
....................          glcd_update();} 
6BE4:  CALL   1036
6BE8:  MOVLB  5
6BEA:  BRA    6B46
....................       } 
....................    } 
6BEC:  MOVLB  0
6BEE:  GOTO   3126
.................... } 
6BF2:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
