CCS PCH C Compiler, Version 4.104, 5967               24-oct.-16 13:21

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclave Horizontal\Con Precamara\2016\Autoclave 120L\Autoclave TecniLab\Firmware V3\GLCD_Controller\GLCD_Controller.lst

               ROM used: 27588 bytes (84%)
                         Largest free fragment is 5176
               RAM used: 1283 (63%) at main() level
                         1335 (65%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2B8A
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0ECA
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0F98:  MOVLW  05
0F9A:  MOVWF  FEA
0F9C:  MOVLW  02
0F9E:  MOVWF  FE9
0FA0:  MOVF   FEF,W
0FA2:  BZ    0FC0
0FA4:  MOVLW  0F
0FA6:  MOVWF  01
0FA8:  CLRF   00
0FAA:  DECFSZ 00,F
0FAC:  BRA    0FAA
0FAE:  DECFSZ 01,F
0FB0:  BRA    0FA8
0FB2:  MOVLW  8F
0FB4:  MOVWF  00
0FB6:  DECFSZ 00,F
0FB8:  BRA    0FB6
0FBA:  NOP   
0FBC:  DECFSZ FEF,F
0FBE:  BRA    0FA4
0FC0:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
1918:  MOVLW  08
191A:  MOVWF  01
191C:  MOVLW  11
191E:  MOVWF  00
1920:  DECFSZ 00,F
1922:  BRA    1920
1924:  BCF    F8A.1
1926:  BCF    F93.1
1928:  MOVLW  11
192A:  MOVWF  00
192C:  DECFSZ 00,F
192E:  BRA    192C
1930:  MOVLB  5
1932:  RLCF   x05,F
1934:  BCF    F8A.0
1936:  BTFSC  FD8.0
1938:  BSF    F93.0
193A:  BTFSS  FD8.0
193C:  BCF    F93.0
193E:  BSF    F93.1
1940:  BTFSS  F81.1
1942:  BRA    1940
1944:  DECFSZ 01,F
1946:  BRA    194A
1948:  BRA    194E
194A:  MOVLB  0
194C:  BRA    191C
194E:  MOVLW  11
1950:  MOVWF  00
1952:  DECFSZ 00,F
1954:  BRA    1952
1956:  BCF    F8A.1
1958:  BCF    F93.1
195A:  NOP   
195C:  BSF    F93.0
195E:  MOVLW  11
1960:  MOVWF  00
1962:  DECFSZ 00,F
1964:  BRA    1962
1966:  MOVLW  11
1968:  MOVWF  00
196A:  DECFSZ 00,F
196C:  BRA    196A
196E:  BSF    F93.1
1970:  BTFSS  F81.1
1972:  BRA    1970
1974:  CLRF   01
1976:  MOVLW  11
1978:  MOVWF  00
197A:  DECFSZ 00,F
197C:  BRA    197A
197E:  BTFSC  F81.0
1980:  BSF    01.0
1982:  BCF    F8A.1
1984:  BCF    F93.1
1986:  BCF    F8A.0
1988:  BCF    F93.0
198A:  MOVLB  0
198C:  RETLW  00
198E:  MOVLW  08
1990:  MOVLB  5
1992:  MOVWF  x05
1994:  MOVFF  00,506
1998:  BSF    F93.0
199A:  MOVLW  11
199C:  MOVWF  00
199E:  DECFSZ 00,F
19A0:  BRA    199E
19A2:  BSF    F93.1
19A4:  BTFSS  F81.1
19A6:  BRA    19A4
19A8:  BTFSC  F81.0
19AA:  BSF    FD8.0
19AC:  BTFSS  F81.0
19AE:  BCF    FD8.0
19B0:  RLCF   01,F
19B2:  MOVLW  11
19B4:  MOVWF  00
19B6:  DECFSZ 00,F
19B8:  BRA    19B6
19BA:  BCF    F93.1
19BC:  BCF    F8A.1
19BE:  DECFSZ x05,F
19C0:  BRA    1998
19C2:  BSF    F93.0
19C4:  MOVLW  11
19C6:  MOVWF  00
19C8:  DECFSZ 00,F
19CA:  BRA    19C8
19CC:  BCF    F8A.0
19CE:  MOVF   x06,W
19D0:  BTFSS  FD8.2
19D2:  BCF    F93.0
19D4:  NOP   
19D6:  BSF    F93.1
19D8:  BTFSS  F81.1
19DA:  BRA    19D8
19DC:  MOVLW  11
19DE:  MOVWF  00
19E0:  DECFSZ 00,F
19E2:  BRA    19E0
19E4:  BCF    F8A.1
19E6:  BCF    F93.1
19E8:  MOVLW  11
19EA:  MOVWF  00
19EC:  DECFSZ 00,F
19EE:  BRA    19EC
19F0:  BCF    F8A.0
19F2:  BCF    F93.0
19F4:  MOVLB  0
19F6:  GOTO   1F46 (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
1114:  BCF    F93.2
1116:  BSF    F8A.2
....................    output_low(GLCD_E); 
1118:  BCF    F93.7
111A:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
111C:  BCF    F93.3
111E:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
1120:  BCF    F93.4
1122:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
1124:  BCF    F93.5
1126:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1128:  MOVLB  5
112A:  CLRF   x17
112C:  MOVLW  C0
112E:  MOVWF  x18
1130:  MOVLB  0
1132:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1134:  MOVLW  01
1136:  MOVLB  5
1138:  MOVWF  x17
113A:  MOVLW  C0
113C:  MOVWF  x18
113E:  MOVLB  0
1140:  RCALL  0FC2
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
1142:  MOVLB  5
1144:  CLRF   x17
1146:  MOVLW  40
1148:  MOVWF  x18
114A:  MOVLB  0
114C:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
114E:  MOVLW  01
1150:  MOVLB  5
1152:  MOVWF  x17
1154:  MOVLW  40
1156:  MOVWF  x18
1158:  MOVLB  0
115A:  RCALL  0FC2
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
115C:  MOVLB  5
115E:  CLRF   x17
1160:  MOVLW  B8
1162:  MOVWF  x18
1164:  MOVLB  0
1166:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
1168:  MOVLW  01
116A:  MOVLB  5
116C:  MOVWF  x17
116E:  MOVLW  B8
1170:  MOVWF  x18
1172:  MOVLB  0
1174:  RCALL  0FC2
....................  
....................    if(mode == ON) 
1176:  MOVLB  5
1178:  DECFSZ x01,W
117A:  BRA    1198
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
117C:  CLRF   x17
117E:  MOVLW  3F
1180:  MOVWF  x18
1182:  MOVLB  0
1184:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1186:  MOVLW  01
1188:  MOVLB  5
118A:  MOVWF  x17
118C:  MOVLW  3F
118E:  MOVWF  x18
1190:  MOVLB  0
1192:  RCALL  0FC2
....................    } 
....................    else 
1194:  BRA    11B0
1196:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
1198:  CLRF   x17
119A:  MOVLW  3E
119C:  MOVWF  x18
119E:  MOVLB  0
11A0:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
11A2:  MOVLW  01
11A4:  MOVLB  5
11A6:  MOVWF  x17
11A8:  MOVLW  3E
11AA:  MOVWF  x18
11AC:  MOVLB  0
11AE:  RCALL  0FC2
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
11B0:  MOVLB  5
11B2:  CLRF   x02
11B4:  MOVLB  0
11B6:  RCALL  1002
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
11B8:  RCALL  105C
....................    #endif 
.................... } 
11BA:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
105C:  MOVLB  5
105E:  CLRF   x13
1060:  MOVLW  16
1062:  MOVWF  x12
....................    p2 = displayData.right; 
1064:  MOVLW  02
1066:  MOVWF  x15
1068:  MOVLW  16
106A:  MOVWF  x14
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
106C:  CLRF   x10
106E:  MOVF   x10,W
1070:  SUBLW  07
1072:  BNC   1110
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1074:  BCF    F93.5
1076:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
1078:  CLRF   x17
107A:  MOVLW  40
107C:  MOVWF  x18
107E:  MOVLB  0
1080:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1082:  MOVLW  01
1084:  MOVLB  5
1086:  MOVWF  x17
1088:  MOVLW  40
108A:  MOVWF  x18
108C:  MOVLB  0
108E:  RCALL  0FC2
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1090:  MOVLB  5
1092:  MOVF   x10,W
1094:  IORLW  B8
1096:  MOVWF  x16
1098:  CLRF   x17
109A:  MOVWF  x18
109C:  MOVLB  0
109E:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
10A0:  MOVLB  5
10A2:  MOVF   x10,W
10A4:  IORLW  B8
10A6:  MOVWF  x16
10A8:  MOVLW  01
10AA:  MOVWF  x17
10AC:  MOVFF  516,518
10B0:  MOVLB  0
10B2:  RCALL  0FC2
....................       output_high(GLCD_DI);                     // Set for data 
10B4:  BCF    F93.5
10B6:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
10B8:  MOVLB  5
10BA:  CLRF   x11
10BC:  MOVF   x11,W
10BE:  SUBLW  3F
10C0:  BNC   110C
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
10C2:  MOVFF  513,03
10C6:  MOVF   x12,W
10C8:  INCF   x12,F
10CA:  BTFSC  FD8.2
10CC:  INCF   x13,F
10CE:  MOVWF  FE9
10D0:  MOVFF  03,FEA
10D4:  MOVFF  FEF,516
10D8:  CLRF   x17
10DA:  MOVFF  516,518
10DE:  MOVLB  0
10E0:  RCALL  0FC2
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
10E2:  MOVLB  5
10E4:  MOVFF  515,03
10E8:  MOVF   x14,W
10EA:  INCF   x14,F
10EC:  BTFSC  FD8.2
10EE:  INCF   x15,F
10F0:  MOVWF  FE9
10F2:  MOVFF  03,FEA
10F6:  MOVFF  FEF,516
10FA:  MOVLW  01
10FC:  MOVWF  x17
10FE:  MOVFF  516,518
1102:  MOVLB  0
1104:  RCALL  0FC2
....................       } 
1106:  MOVLB  5
1108:  INCF   x11,F
110A:  BRA    10BC
....................    } 
110C:  INCF   x10,F
110E:  BRA    106E
.................... } 
1110:  MOVLB  0
1112:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
11BC:  MOVLB  5
11BE:  CLRF   x34
11C0:  RRCF   x2F,W
11C2:  MOVWF  x33
11C4:  RRCF   x33,F
11C6:  RRCF   x33,F
11C8:  MOVLW  1F
11CA:  ANDWF  x33,F
....................    temp *= 64; 
11CC:  RLCF   x33,F
11CE:  RLCF   x34,F
11D0:  RLCF   x33,F
11D2:  RLCF   x34,F
11D4:  RLCF   x33,F
11D6:  RLCF   x34,F
11D8:  RLCF   x33,F
11DA:  RLCF   x34,F
11DC:  RLCF   x33,F
11DE:  RLCF   x34,F
11E0:  RLCF   x33,F
11E2:  RLCF   x34,F
11E4:  MOVLW  C0
11E6:  ANDWF  x33,F
....................    temp += x; 
11E8:  MOVF   x2E,W
11EA:  ADDWF  x33,F
11EC:  MOVLW  00
11EE:  ADDWFC x34,F
....................  
....................    if(x > 63) 
11F0:  MOVF   x2E,W
11F2:  SUBLW  3F
11F4:  BC    1210
....................    { 
....................       p = displayData.right + temp - 64; 
11F6:  MOVLW  16
11F8:  ADDWF  x33,W
11FA:  MOVWF  x35
11FC:  MOVLW  02
11FE:  ADDWFC x34,W
1200:  MOVWF  x36
1202:  MOVLW  40
1204:  SUBWF  x35,W
1206:  MOVWF  x31
1208:  MOVLW  00
120A:  SUBWFB x36,W
120C:  MOVWF  x32
....................    } 
....................    else 
120E:  BRA    121C
....................    { 
....................       p = displayData.left + temp; 
1210:  MOVLW  16
1212:  ADDWF  x33,W
1214:  MOVWF  x31
1216:  MOVLW  00
1218:  ADDWFC x34,W
121A:  MOVWF  x32
....................    } 
....................  
....................    if(color) 
121C:  MOVF   x30,F
121E:  BZ    124A
....................    { 
....................       bit_set(*p, y%8); 
1220:  MOVFF  532,03
1224:  MOVFF  531,FE9
1228:  MOVFF  532,FEA
122C:  MOVF   x2F,W
122E:  ANDLW  07
1230:  MOVWF  x35
1232:  MOVLW  01
1234:  MOVWF  00
1236:  MOVF   x35,W
1238:  MOVWF  01
123A:  BZ    1244
123C:  BCF    FD8.0
123E:  RLCF   00,F
1240:  DECFSZ 01,F
1242:  BRA    123C
1244:  MOVF   00,W
1246:  IORWF  FEF,F
....................    } 
....................    else 
1248:  BRA    1274
....................    { 
....................       bit_clear(*p, y%8); 
124A:  MOVFF  532,03
124E:  MOVFF  531,FE9
1252:  MOVFF  532,FEA
1256:  MOVF   x2F,W
1258:  ANDLW  07
125A:  MOVWF  x35
125C:  MOVLW  01
125E:  MOVWF  00
1260:  MOVF   x35,W
1262:  MOVWF  01
1264:  BZ    126E
1266:  BCF    FD8.0
1268:  RLCF   00,F
126A:  DECFSZ 01,F
126C:  BRA    1266
126E:  MOVF   00,W
1270:  XORLW  FF
1272:  ANDWF  FEF,F
....................    } 
.................... } 
1274:  MOVLB  0
1276:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
1002:  MOVLB  5
1004:  CLRF   x05
1006:  MOVLW  16
1008:  MOVWF  x04
....................    p2 = displayData.right; 
100A:  MOVLW  02
100C:  MOVWF  x07
100E:  MOVLW  16
1010:  MOVWF  x06
....................    data = 0xFF * color; 
1012:  MOVF   x02,W
1014:  MULLW  FF
1016:  MOVFF  FF3,503
....................  
....................    for(i=0; i<512; ++i) 
101A:  CLRF   x09
101C:  CLRF   x08
101E:  MOVF   x09,W
1020:  SUBLW  01
1022:  BNC   1058
....................    { 
....................       *p1++ = data; 
1024:  MOVFF  505,03
1028:  MOVF   x04,W
102A:  INCF   x04,F
102C:  BTFSC  FD8.2
102E:  INCF   x05,F
1030:  MOVWF  FE9
1032:  MOVFF  03,FEA
1036:  MOVFF  503,FEF
....................       *p2++ = data; 
103A:  MOVFF  507,03
103E:  MOVF   x06,W
1040:  INCF   x06,F
1042:  BTFSC  FD8.2
1044:  INCF   x07,F
1046:  MOVWF  FE9
1048:  MOVFF  03,FEA
104C:  MOVFF  503,FEF
....................    } 
1050:  INCF   x08,F
1052:  BTFSC  FD8.2
1054:  INCF   x09,F
1056:  BRA    101E
.................... } 
1058:  MOVLB  0
105A:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0FC2:  MOVLB  5
0FC4:  MOVF   x17,F
0FC6:  BZ    0FCE
....................       output_high(GLCD_CS2); 
0FC8:  BCF    F93.4
0FCA:  BSF    F8A.4
....................    else 
0FCC:  BRA    0FD2
....................       output_high(GLCD_CS1); 
0FCE:  BCF    F93.3
0FD0:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0FD2:  BCF    F93.6
0FD4:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0FD6:  CLRF   F95
0FD8:  MOVFF  518,F8C
....................    delay_cycles(50); 
0FDC:  MOVLW  10
0FDE:  MOVWF  00
0FE0:  DECFSZ 00,F
0FE2:  BRA    0FE0
0FE4:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0FE6:  BCF    F93.7
0FE8:  BSF    F8A.7
....................    delay_cycles(250); 
0FEA:  MOVLW  53
0FEC:  MOVWF  00
0FEE:  DECFSZ 00,F
0FF0:  BRA    0FEE
....................    output_low(GLCD_E); 
0FF2:  BCF    F93.7
0FF4:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0FF6:  BCF    F93.3
0FF8:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0FFA:  BCF    F93.4
0FFC:  BCF    F8A.4
.................... } 
0FFE:  MOVLB  0
1000:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
1430:  MOVLW  01
1432:  MOVLB  5
1434:  MOVWF  x27
1436:  MOVWF  x28
1438:  CLRF   x2D
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
143A:  MOVF   x1E,W
143C:  SUBWF  x20,W
143E:  MOVWF  x2E
1440:  MOVF   x2E,W
1442:  BTFSS  x2E.7
1444:  BRA    144C
1446:  MOVLW  00
1448:  BSF    FD8.0
144A:  SUBFWB x2E,W
144C:  CLRF   03
144E:  MOVWF  x25
1450:  MOVFF  03,526
....................    dy = abs((signed int8)(y2 - y1)); 
1454:  MOVF   x1F,W
1456:  SUBWF  x21,W
1458:  MOVWF  x2E
145A:  MOVF   x2E,W
145C:  BTFSS  x2E.7
145E:  BRA    1466
1460:  MOVLW  00
1462:  BSF    FD8.0
1464:  SUBFWB x2E,W
1466:  CLRF   03
1468:  MOVWF  x23
146A:  MOVFF  03,524
....................    #endif 
....................  
....................    if(x1 > x2) 
146E:  MOVF   x1E,W
1470:  SUBWF  x20,W
1472:  BC    1478
....................       addx = -1; 
1474:  MOVLW  FF
1476:  MOVWF  x27
....................    if(y1 > y2) 
1478:  MOVF   x1F,W
147A:  SUBWF  x21,W
147C:  BC    1482
....................       addy = -1; 
147E:  MOVLW  FF
1480:  MOVWF  x28
....................  
....................    if(dx >= dy) 
1482:  MOVF   x24,W
1484:  SUBWF  x26,W
1486:  BNC   14FE
1488:  BNZ   1490
148A:  MOVF   x23,W
148C:  SUBWF  x25,W
148E:  BNC   14FE
....................    { 
....................       dy *= 2; 
1490:  BCF    FD8.0
1492:  RLCF   x23,F
1494:  RLCF   x24,F
....................       P = dy - dx; 
1496:  MOVF   x25,W
1498:  SUBWF  x23,W
149A:  MOVWF  00
149C:  MOVF   x26,W
149E:  SUBWFB x24,W
14A0:  MOVFF  00,529
14A4:  MOVWF  x2A
....................       diff = P - dx; 
14A6:  MOVF   x25,W
14A8:  SUBWF  x29,W
14AA:  MOVWF  x2B
14AC:  MOVF   x26,W
14AE:  SUBWFB x2A,W
14B0:  MOVWF  x2C
....................  
....................       for(; i<=dx; ++i) 
14B2:  MOVF   x26,F
14B4:  BNZ   14BC
14B6:  MOVF   x2D,W
14B8:  SUBWF  x25,W
14BA:  BNC   14FC
....................       { 
....................          glcd_pixel(x1, y1, color); 
14BC:  MOVFF  51E,52E
14C0:  MOVFF  51F,52F
14C4:  MOVFF  522,530
14C8:  MOVLB  0
14CA:  RCALL  11BC
....................  
....................          if(P < 0) 
14CC:  MOVLB  5
14CE:  BTFSC  x2A.7
14D0:  BRA    14D4
14D2:  BRA    14E4
....................          { 
....................             P  += dy; 
14D4:  MOVF   x23,W
14D6:  ADDWF  x29,F
14D8:  MOVF   x24,W
14DA:  ADDWFC x2A,F
....................             x1 += addx; 
14DC:  MOVF   x27,W
14DE:  ADDWF  x1E,W
14E0:  MOVWF  x1E
....................          } 
....................          else 
14E2:  BRA    14F8
....................          { 
....................             P  += diff; 
14E4:  MOVF   x2B,W
14E6:  ADDWF  x29,F
14E8:  MOVF   x2C,W
14EA:  ADDWFC x2A,F
....................             x1 += addx; 
14EC:  MOVF   x27,W
14EE:  ADDWF  x1E,W
14F0:  MOVWF  x1E
....................             y1 += addy; 
14F2:  MOVF   x28,W
14F4:  ADDWF  x1F,W
14F6:  MOVWF  x1F
....................          } 
....................       } 
14F8:  INCF   x2D,F
14FA:  BRA    14B2
....................    } 
....................    else 
14FC:  BRA    156A
....................    { 
....................       dx *= 2; 
14FE:  BCF    FD8.0
1500:  RLCF   x25,F
1502:  RLCF   x26,F
....................       P = dx - dy; 
1504:  MOVF   x23,W
1506:  SUBWF  x25,W
1508:  MOVWF  00
150A:  MOVF   x24,W
150C:  SUBWFB x26,W
150E:  MOVFF  00,529
1512:  MOVWF  x2A
....................       diff = P - dy; 
1514:  MOVF   x23,W
1516:  SUBWF  x29,W
1518:  MOVWF  x2B
151A:  MOVF   x24,W
151C:  SUBWFB x2A,W
151E:  MOVWF  x2C
....................  
....................       for(; i<=dy; ++i) 
1520:  MOVF   x24,F
1522:  BNZ   152A
1524:  MOVF   x2D,W
1526:  SUBWF  x23,W
1528:  BNC   156A
....................       { 
....................          glcd_pixel(x1, y1, color); 
152A:  MOVFF  51E,52E
152E:  MOVFF  51F,52F
1532:  MOVFF  522,530
1536:  MOVLB  0
1538:  RCALL  11BC
....................  
....................          if(P < 0) 
153A:  MOVLB  5
153C:  BTFSC  x2A.7
153E:  BRA    1542
1540:  BRA    1552
....................          { 
....................             P  += dx; 
1542:  MOVF   x25,W
1544:  ADDWF  x29,F
1546:  MOVF   x26,W
1548:  ADDWFC x2A,F
....................             y1 += addy; 
154A:  MOVF   x28,W
154C:  ADDWF  x1F,W
154E:  MOVWF  x1F
....................          } 
....................          else 
1550:  BRA    1566
....................          { 
....................             P  += diff; 
1552:  MOVF   x2B,W
1554:  ADDWF  x29,F
1556:  MOVF   x2C,W
1558:  ADDWFC x2A,F
....................             x1 += addx; 
155A:  MOVF   x27,W
155C:  ADDWF  x1E,W
155E:  MOVWF  x1E
....................             y1 += addy; 
1560:  MOVF   x28,W
1562:  ADDWF  x1F,W
1564:  MOVWF  x1F
....................          } 
....................       } 
1566:  INCF   x2D,F
1568:  BRA    1520
....................    } 
.................... } 
156A:  MOVLB  0
156C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
156E:  MOVLB  5
1570:  MOVF   x17,F
1572:  BZ    15D0
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1574:  MOVF   x15,W
1576:  SUBWF  x13,W
1578:  BC    1584
....................       { 
....................          xmin = x1; 
157A:  MOVFF  513,51A
....................          xmax = x2; 
157E:  MOVFF  515,51B
....................       } 
....................       else 
1582:  BRA    158C
....................       { 
....................          xmin = x2; 
1584:  MOVFF  515,51A
....................          xmax = x1; 
1588:  MOVFF  513,51B
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
158C:  MOVF   x16,W
158E:  SUBWF  x14,W
1590:  BC    159C
....................       { 
....................          ymin = y1; 
1592:  MOVFF  514,51C
....................          ymax = y2; 
1596:  MOVFF  516,51D
....................       } 
....................       else 
159A:  BRA    15A4
....................       { 
....................          ymin = y2; 
159C:  MOVFF  516,51C
....................          ymax = y1; 
15A0:  MOVFF  514,51D
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
15A4:  MOVF   x1A,W
15A6:  SUBWF  x1B,W
15A8:  BNC   15CE
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
15AA:  MOVFF  51C,519
15AE:  MOVF   x19,W
15B0:  SUBWF  x1D,W
15B2:  BNC   15CA
....................          { 
....................             glcd_pixel(xmin, i, color); 
15B4:  MOVFF  51A,52E
15B8:  MOVFF  519,52F
15BC:  MOVFF  518,530
15C0:  MOVLB  0
15C2:  RCALL  11BC
....................          } 
15C4:  MOVLB  5
15C6:  INCF   x19,F
15C8:  BRA    15AE
....................       } 
15CA:  INCF   x1A,F
15CC:  BRA    15A4
....................    } 
....................    else 
15CE:  BRA    162C
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
15D0:  MOVFF  513,51E
15D4:  MOVFF  514,51F
15D8:  MOVFF  515,520
15DC:  MOVFF  514,521
15E0:  MOVFF  518,522
15E4:  MOVLB  0
15E6:  RCALL  1430
....................       glcd_line(x1, y2, x2, y2, color); 
15E8:  MOVFF  513,51E
15EC:  MOVFF  516,51F
15F0:  MOVFF  515,520
15F4:  MOVFF  516,521
15F8:  MOVFF  518,522
15FC:  RCALL  1430
....................       glcd_line(x1, y1, x1, y2, color); 
15FE:  MOVFF  513,51E
1602:  MOVFF  514,51F
1606:  MOVFF  513,520
160A:  MOVFF  516,521
160E:  MOVFF  518,522
1612:  RCALL  1430
....................       glcd_line(x2, y1, x2, y2, color); 
1614:  MOVFF  515,51E
1618:  MOVFF  514,51F
161C:  MOVFF  515,520
1620:  MOVFF  516,521
1624:  MOVFF  518,522
1628:  RCALL  1430
162A:  MOVLB  5
....................    } 
.................... } 
162C:  MOVLB  0
162E:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2176:  MOVLB  5
2178:  CLRF   x06
....................    b = radius; 
217A:  MOVFF  503,507
....................    P = 1 - radius; 
217E:  MOVLW  01
2180:  BSF    FD8.0
2182:  SUBFWB x03,W
2184:  MOVWF  x08
....................  
....................    do 
....................    { 
....................       if(fill) 
2186:  MOVF   x04,F
2188:  BZ    2254
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
218A:  MOVF   x06,W
218C:  SUBWF  x01,W
218E:  MOVWF  x09
2190:  MOVF   x07,W
2192:  ADDWF  x02,W
2194:  MOVWF  x0A
2196:  MOVF   x06,W
2198:  ADDWF  x01,W
219A:  MOVWF  x0B
219C:  MOVF   x07,W
219E:  ADDWF  x02,W
21A0:  MOVWF  x0C
21A2:  MOVFF  509,51E
21A6:  MOVFF  50A,51F
21AA:  MOVFF  50B,520
21AE:  MOVWF  x21
21B0:  MOVFF  505,522
21B4:  MOVLB  0
21B6:  CALL   1430
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
21BA:  MOVLB  5
21BC:  MOVF   x06,W
21BE:  SUBWF  x01,W
21C0:  MOVWF  x09
21C2:  MOVF   x07,W
21C4:  SUBWF  x02,W
21C6:  MOVWF  x0A
21C8:  MOVF   x06,W
21CA:  ADDWF  x01,W
21CC:  MOVWF  x0B
21CE:  MOVF   x07,W
21D0:  SUBWF  x02,W
21D2:  MOVWF  x0C
21D4:  MOVFF  509,51E
21D8:  MOVFF  50A,51F
21DC:  MOVFF  50B,520
21E0:  MOVWF  x21
21E2:  MOVFF  505,522
21E6:  MOVLB  0
21E8:  CALL   1430
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
21EC:  MOVLB  5
21EE:  MOVF   x07,W
21F0:  SUBWF  x01,W
21F2:  MOVWF  x09
21F4:  MOVF   x06,W
21F6:  ADDWF  x02,W
21F8:  MOVWF  x0A
21FA:  MOVF   x07,W
21FC:  ADDWF  x01,W
21FE:  MOVWF  x0B
2200:  MOVF   x06,W
2202:  ADDWF  x02,W
2204:  MOVWF  x0C
2206:  MOVFF  509,51E
220A:  MOVFF  50A,51F
220E:  MOVFF  50B,520
2212:  MOVWF  x21
2214:  MOVFF  505,522
2218:  MOVLB  0
221A:  CALL   1430
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
221E:  MOVLB  5
2220:  MOVF   x07,W
2222:  SUBWF  x01,W
2224:  MOVWF  x09
2226:  MOVF   x06,W
2228:  SUBWF  x02,W
222A:  MOVWF  x0A
222C:  MOVF   x07,W
222E:  ADDWF  x01,W
2230:  MOVWF  x0B
2232:  MOVF   x06,W
2234:  SUBWF  x02,W
2236:  MOVWF  x0C
2238:  MOVFF  509,51E
223C:  MOVFF  50A,51F
2240:  MOVFF  50B,520
2244:  MOVWF  x21
2246:  MOVFF  505,522
224A:  MOVLB  0
224C:  CALL   1430
....................       } 
....................       else 
2250:  BRA    2342
2252:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2254:  MOVF   x01,W
2256:  ADDWF  x06,W
2258:  MOVWF  x09
225A:  MOVF   x02,W
225C:  ADDWF  x07,W
225E:  MOVWF  x0A
2260:  MOVFF  509,52E
2264:  MOVWF  x2F
2266:  MOVFF  505,530
226A:  MOVLB  0
226C:  CALL   11BC
....................          glcd_pixel(b+x, a+y, color); 
2270:  MOVLB  5
2272:  MOVF   x01,W
2274:  ADDWF  x07,W
2276:  MOVWF  x09
2278:  MOVF   x02,W
227A:  ADDWF  x06,W
227C:  MOVWF  x0A
227E:  MOVFF  509,52E
2282:  MOVWF  x2F
2284:  MOVFF  505,530
2288:  MOVLB  0
228A:  CALL   11BC
....................          glcd_pixel(x-a, b+y, color); 
228E:  MOVLB  5
2290:  MOVF   x06,W
2292:  SUBWF  x01,W
2294:  MOVWF  x09
2296:  MOVF   x02,W
2298:  ADDWF  x07,W
229A:  MOVWF  x0A
229C:  MOVFF  509,52E
22A0:  MOVWF  x2F
22A2:  MOVFF  505,530
22A6:  MOVLB  0
22A8:  CALL   11BC
....................          glcd_pixel(x-b, a+y, color); 
22AC:  MOVLB  5
22AE:  MOVF   x07,W
22B0:  SUBWF  x01,W
22B2:  MOVWF  x09
22B4:  MOVF   x02,W
22B6:  ADDWF  x06,W
22B8:  MOVWF  x0A
22BA:  MOVFF  509,52E
22BE:  MOVWF  x2F
22C0:  MOVFF  505,530
22C4:  MOVLB  0
22C6:  CALL   11BC
....................          glcd_pixel(b+x, y-a, color); 
22CA:  MOVLB  5
22CC:  MOVF   x01,W
22CE:  ADDWF  x07,W
22D0:  MOVWF  x09
22D2:  MOVF   x06,W
22D4:  SUBWF  x02,W
22D6:  MOVWF  x0A
22D8:  MOVFF  509,52E
22DC:  MOVWF  x2F
22DE:  MOVFF  505,530
22E2:  MOVLB  0
22E4:  CALL   11BC
....................          glcd_pixel(a+x, y-b, color); 
22E8:  MOVLB  5
22EA:  MOVF   x01,W
22EC:  ADDWF  x06,W
22EE:  MOVWF  x09
22F0:  MOVF   x07,W
22F2:  SUBWF  x02,W
22F4:  MOVWF  x0A
22F6:  MOVFF  509,52E
22FA:  MOVWF  x2F
22FC:  MOVFF  505,530
2300:  MOVLB  0
2302:  CALL   11BC
....................          glcd_pixel(x-a, y-b, color); 
2306:  MOVLB  5
2308:  MOVF   x06,W
230A:  SUBWF  x01,W
230C:  MOVWF  x09
230E:  MOVF   x07,W
2310:  SUBWF  x02,W
2312:  MOVWF  x0A
2314:  MOVFF  509,52E
2318:  MOVWF  x2F
231A:  MOVFF  505,530
231E:  MOVLB  0
2320:  CALL   11BC
....................          glcd_pixel(x-b, y-a, color); 
2324:  MOVLB  5
2326:  MOVF   x07,W
2328:  SUBWF  x01,W
232A:  MOVWF  x09
232C:  MOVF   x06,W
232E:  SUBWF  x02,W
2330:  MOVWF  x0A
2332:  MOVFF  509,52E
2336:  MOVWF  x2F
2338:  MOVFF  505,530
233C:  MOVLB  0
233E:  CALL   11BC
....................       } 
....................  
....................       if(P < 0) 
2342:  MOVLB  5
2344:  BTFSC  x08.7
2346:  BRA    234A
2348:  BRA    2366
....................          P += 3 + 2 * a++; 
234A:  MOVF   x06,W
234C:  INCF   x06,F
234E:  MOVWF  x09
2350:  MOVLW  02
2352:  MOVWF  x0A
2354:  MOVFF  509,50B
2358:  MOVLB  0
235A:  RCALL  2128
235C:  MOVF   01,W
235E:  ADDLW  03
2360:  MOVLB  5
2362:  ADDWF  x08,F
....................       else 
2364:  BRA    2388
....................          P += 5 + 2 * (a++ - b--); 
2366:  MOVF   x06,W
2368:  INCF   x06,F
236A:  MOVWF  x09
236C:  MOVF   x07,W
236E:  DECF   x07,F
2370:  SUBWF  x09,W
2372:  MOVWF  x09
2374:  MOVLW  02
2376:  MOVWF  x0A
2378:  MOVFF  509,50B
237C:  MOVLB  0
237E:  RCALL  2128
2380:  MOVF   01,W
2382:  ADDLW  05
2384:  MOVLB  5
2386:  ADDWF  x08,F
....................     } while(a <= b); 
2388:  MOVF   x06,W
238A:  XORLW  80
238C:  MOVWF  00
238E:  MOVF   x07,W
2390:  XORLW  80
2392:  SUBWF  00,W
2394:  BTFSC  FD8.2
2396:  BRA    2186
2398:  BTFSS  FD8.0
239A:  BRA    2186
.................... } 
239C:  MOVLB  0
239E:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
1278:  MOVFF  515,03
127C:  MOVLB  5
127E:  MOVFF  514,FE9
1282:  MOVFF  515,FEA
1286:  MOVF   FEF,F
1288:  BTFSC  FD8.2
128A:  BRA    142C
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
128C:  MOVFF  515,03
1290:  MOVFF  514,FE9
1294:  MOVFF  515,FEA
1298:  MOVF   FEF,W
129A:  SUBLW  52
129C:  BNC   12EC
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
129E:  MOVFF  515,03
12A2:  MOVFF  514,FE9
12A6:  MOVFF  515,FEA
12AA:  MOVLW  20
12AC:  SUBWF  FEF,W
12AE:  MULLW  05
12B0:  MOVF   FF3,W
12B2:  CLRF   03
12B4:  MOVWF  x21
12B6:  MOVLW  05
12B8:  MOVWF  FEA
12BA:  MOVLW  1C
12BC:  MOVWF  FE9
12BE:  CLRF   x25
12C0:  MOVFF  521,524
12C4:  MOVFF  FF2,522
12C8:  BCF    FF2.7
12CA:  MOVLW  05
12CC:  MOVWF  01
12CE:  CLRF   FF7
12D0:  MOVF   x21,W
12D2:  MOVLB  0
12D4:  CALL   0096
12D8:  TBLRD*-
12DA:  TBLRD*+
12DC:  MOVFF  FF5,FEE
12E0:  DECFSZ 01,F
12E2:  BRA    12DA
12E4:  MOVLB  5
12E6:  BTFSC  x22.7
12E8:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
12EA:  BRA    1356
12EC:  MOVFF  515,03
12F0:  MOVFF  514,FE9
12F4:  MOVFF  515,FEA
12F8:  MOVF   FEF,W
12FA:  SUBLW  7E
12FC:  BNC   134C
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
12FE:  MOVFF  515,03
1302:  MOVFF  514,FE9
1306:  MOVFF  515,FEA
130A:  MOVLW  53
130C:  SUBWF  FEF,W
130E:  MULLW  05
1310:  MOVF   FF3,W
1312:  CLRF   03
1314:  MOVWF  x21
1316:  MOVLW  05
1318:  MOVWF  FEA
131A:  MOVLW  1C
131C:  MOVWF  FE9
131E:  CLRF   x25
1320:  MOVFF  521,524
1324:  MOVFF  FF2,522
1328:  BCF    FF2.7
132A:  MOVLW  05
132C:  MOVWF  01
132E:  CLRF   FF7
1330:  MOVF   x21,W
1332:  MOVLB  0
1334:  CALL   01B0
1338:  TBLRD*-
133A:  TBLRD*+
133C:  MOVFF  FF5,FEE
1340:  DECFSZ 01,F
1342:  BRA    133A
1344:  MOVLB  5
1346:  BTFSC  x22.7
1348:  BSF    FF2.7
....................       else 
134A:  BRA    1356
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
134C:  CLRF   x1C
134E:  CLRF   x1D
1350:  CLRF   x1E
1352:  CLRF   x1F
1354:  CLRF   x20
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1356:  MOVFF  515,03
135A:  MOVF   x14,W
135C:  MOVWF  FE9
135E:  MOVFF  03,FEA
1362:  MOVF   FEF,W
1364:  XORLW  0A
1366:  MOVLB  0
1368:  BZ    1370
136A:  XORLW  07
136C:  BZ    1380
136E:  BRA    1386
....................          case '\n': 
....................             y += 7*size + 1; 
1370:  MOVLB  5
1372:  MOVF   x16,W
1374:  MULLW  07
1376:  MOVF   FF3,W
1378:  ADDLW  01
137A:  ADDWF  x13,F
....................             continue; 
137C:  BRA    141E
137E:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1380:  MOVLB  5
1382:  CLRF   x12
....................             continue; 
1384:  BRA    141E
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1386:  MOVLB  5
1388:  MOVF   x16,W
138A:  MULLW  05
138C:  MOVF   FF3,W
138E:  ADDWF  x12,W
1390:  SUBLW  7F
1392:  BC    13A0
....................       { 
....................          x = 0;                           // Set x at far left position 
1394:  CLRF   x12
....................          y += 7*size + 1;                 // Set y at next position down 
1396:  MOVF   x16,W
1398:  MULLW  07
139A:  MOVF   FF3,W
139C:  ADDLW  01
139E:  ADDWF  x13,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
13A0:  CLRF   x18
13A2:  MOVF   x18,W
13A4:  SUBLW  04
13A6:  BNC   141E
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
13A8:  CLRF   x19
13AA:  MOVF   x19,W
13AC:  SUBLW  06
13AE:  BNC   1416
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
13B0:  CLRF   03
13B2:  MOVF   x18,W
13B4:  ADDLW  1C
13B6:  MOVWF  FE9
13B8:  MOVLW  05
13BA:  ADDWFC 03,W
13BC:  MOVWF  FEA
13BE:  MOVFF  FEF,521
13C2:  MOVFF  521,00
13C6:  MOVF   x19,W
13C8:  MOVWF  01
13CA:  BZ    13D4
13CC:  BCF    FD8.0
13CE:  RRCF   00,F
13D0:  DECFSZ 01,F
13D2:  BRA    13CC
13D4:  BTFSS  00.0
13D6:  BRA    1412
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
13D8:  CLRF   x1A
13DA:  MOVF   x16,W
13DC:  SUBWF  x1A,W
13DE:  BC    1412
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
13E0:  CLRF   x1B
13E2:  MOVF   x16,W
13E4:  SUBWF  x1B,W
13E6:  BC    140E
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
13E8:  MOVF   x1B,W
13EA:  ADDWF  x12,W
13EC:  MOVWF  x21
13EE:  MOVF   x19,W
13F0:  MULWF  x16
13F2:  MOVF   FF3,W
13F4:  ADDWF  x13,W
13F6:  ADDWF  x1A,W
13F8:  MOVWF  x22
13FA:  MOVFF  521,52E
13FE:  MOVWF  x2F
1400:  MOVFF  517,530
1404:  MOVLB  0
1406:  RCALL  11BC
....................                   } 
1408:  MOVLB  5
140A:  INCF   x1B,F
140C:  BRA    13E2
....................                } 
140E:  INCF   x1A,F
1410:  BRA    13DA
....................             } 
....................          } 
1412:  INCF   x19,F
1414:  BRA    13AA
....................       } 
1416:  INCF   x18,F
1418:  MOVF   x16,W
141A:  ADDWF  x12,F
141C:  BRA    13A2
....................    } 
141E:  INCF   x14,F
1420:  BTFSC  FD8.2
1422:  INCF   x15,F
1424:  INCF   x12,F
1426:  MOVLB  0
1428:  BRA    1278
142A:  MOVLB  5
.................... } 
142C:  MOVLB  0
142E:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
1630:  MOVLB  5
1632:  MOVFF  501,01
1636:  MOVFF  502,03
163A:  MOVFF  501,507
163E:  MOVFF  502,508
1642:  MOVLW  04
1644:  MOVWF  FEA
1646:  MOVLW  E1
1648:  MOVWF  FE9
164A:  MOVFF  502,FE2
164E:  MOVFF  501,FE1
1652:  MOVF   FE7,F
1654:  MOVFF  FE6,FEE
1658:  BNZ   1652
....................    if(sombreado==2) 
165A:  MOVF   x05,W
165C:  SUBLW  02
165E:  BNZ   1688
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1660:  MOVLW  01
1662:  ADDWF  x03,W
1664:  MOVWF  x07
1666:  MOVLW  01
1668:  ADDWF  x04,W
166A:  MOVWF  x08
166C:  MOVFF  507,512
1670:  MOVWF  x13
1672:  MOVLW  04
1674:  MOVWF  x15
1676:  MOVLW  E1
1678:  MOVWF  x14
167A:  MOVFF  506,516
167E:  MOVLW  01
1680:  MOVWF  x17
1682:  MOVLB  0
1684:  RCALL  1278
1686:  MOVLB  5
....................    if(sombreado==1) 
1688:  DECFSZ x05,W
168A:  BRA    16D6
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
168C:  MOVF   x06,W
168E:  MULLW  08
1690:  MOVF   FF3,W
1692:  ADDWF  x04,W
1694:  MOVWF  x07
1696:  CLRF   x13
1698:  MOVFF  504,514
169C:  MOVLW  7F
169E:  MOVWF  x15
16A0:  MOVFF  507,516
16A4:  MOVLW  01
16A6:  MOVWF  x17
16A8:  MOVWF  x18
16AA:  MOVLB  0
16AC:  RCALL  156E
16AE:  MOVLW  01
16B0:  MOVLB  5
16B2:  ADDWF  x03,W
16B4:  MOVWF  x07
16B6:  MOVLW  01
16B8:  ADDWF  x04,W
16BA:  MOVWF  x08
16BC:  MOVFF  507,512
16C0:  MOVWF  x13
16C2:  MOVLW  04
16C4:  MOVWF  x15
16C6:  MOVLW  E1
16C8:  MOVWF  x14
16CA:  MOVFF  506,516
16CE:  CLRF   x17
16D0:  MOVLB  0
16D2:  RCALL  1278
16D4:  MOVLB  5
....................    if(sombreado==0) 
16D6:  MOVF   x05,F
16D8:  BNZ   1724
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
16DA:  MOVF   x06,W
16DC:  MULLW  08
16DE:  MOVF   FF3,W
16E0:  ADDWF  x04,W
16E2:  MOVWF  x07
16E4:  CLRF   x13
16E6:  MOVFF  504,514
16EA:  MOVLW  7F
16EC:  MOVWF  x15
16EE:  MOVFF  507,516
16F2:  MOVLW  01
16F4:  MOVWF  x17
16F6:  CLRF   x18
16F8:  MOVLB  0
16FA:  RCALL  156E
16FC:  MOVLW  01
16FE:  MOVLB  5
1700:  ADDWF  x03,W
1702:  MOVWF  x07
1704:  MOVLW  01
1706:  ADDWF  x04,W
1708:  MOVWF  x08
170A:  MOVFF  507,512
170E:  MOVWF  x13
1710:  MOVLW  04
1712:  MOVWF  x15
1714:  MOVLW  E1
1716:  MOVWF  x14
1718:  MOVFF  506,516
171C:  MOVLW  01
171E:  MOVWF  x17
1720:  MOVLB  0
1722:  RCALL  1278
....................    glcd_update(); 
1724:  MOVLB  0
1726:  RCALL  105C
.................... } 
1728:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
2426:  MOVLB  5
2428:  MOVF   x05,W
242A:  SUBLW  02
242C:  BNZ   24A2
....................    { 
....................       sprintf(voltage, "%03u", digito); 
242E:  MOVLW  05
2430:  MOVWF  x00
2432:  MOVLW  07
2434:  MOVLB  4
2436:  MOVWF  xFF
2438:  MOVFF  502,510
243C:  MOVLW  03
243E:  MOVLB  5
2440:  MOVWF  x11
2442:  MOVLB  0
2444:  RCALL  23A0
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2446:  MOVLB  5
2448:  MOVF   x06,W
244A:  MULLW  12
244C:  MOVF   FF3,W
244E:  ADDWF  x03,W
2450:  MOVWF  x10
2452:  MOVF   x06,W
2454:  MULLW  08
2456:  MOVF   FF3,W
2458:  ADDWF  x04,W
245A:  MOVWF  x11
245C:  MOVFF  503,513
2460:  MOVFF  504,514
2464:  MOVFF  510,515
2468:  MOVWF  x16
246A:  MOVLW  01
246C:  MOVWF  x17
246E:  MOVWF  x18
2470:  MOVLB  0
2472:  CALL   156E
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2476:  MOVLW  01
2478:  MOVLB  5
247A:  ADDWF  x03,W
247C:  MOVWF  x10
247E:  MOVLW  01
2480:  ADDWF  x04,W
2482:  MOVWF  x11
2484:  MOVFF  510,512
2488:  MOVWF  x13
248A:  MOVLW  05
248C:  MOVWF  x15
248E:  MOVLW  07
2490:  MOVWF  x14
2492:  MOVFF  506,516
2496:  CLRF   x17
2498:  MOVLB  0
249A:  CALL   1278
....................    } 
....................    else 
249E:  BRA    2574
24A0:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
24A2:  MOVLW  05
24A4:  MOVWF  x00
24A6:  MOVLW  07
24A8:  MOVLB  4
24AA:  MOVWF  xFF
24AC:  MOVFF  502,510
24B0:  MOVLW  1B
24B2:  MOVLB  5
24B4:  MOVWF  x11
24B6:  MOVLB  0
24B8:  RCALL  23A0
....................     
....................       if(sombreado==1) 
24BA:  MOVLB  5
24BC:  DECFSZ x05,W
24BE:  BRA    2518
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24C0:  MOVF   x06,W
24C2:  MULLW  05
24C4:  MOVF   FF3,W
24C6:  ADDWF  x03,W
24C8:  MOVWF  x10
24CA:  MOVF   x06,W
24CC:  MULLW  08
24CE:  MOVF   FF3,W
24D0:  ADDWF  x04,W
24D2:  MOVWF  x11
24D4:  MOVFF  503,513
24D8:  MOVFF  504,514
24DC:  MOVFF  510,515
24E0:  MOVWF  x16
24E2:  MOVLW  01
24E4:  MOVWF  x17
24E6:  MOVWF  x18
24E8:  MOVLB  0
24EA:  CALL   156E
24EE:  MOVLW  01
24F0:  MOVLB  5
24F2:  ADDWF  x03,W
24F4:  MOVWF  x10
24F6:  MOVLW  01
24F8:  ADDWF  x04,W
24FA:  MOVWF  x11
24FC:  MOVFF  510,512
2500:  MOVWF  x13
2502:  MOVLW  05
2504:  MOVWF  x15
2506:  MOVLW  07
2508:  MOVWF  x14
250A:  MOVFF  506,516
250E:  CLRF   x17
2510:  MOVLB  0
2512:  CALL   1278
2516:  MOVLB  5
....................       if(sombreado==0) 
2518:  MOVF   x05,F
251A:  BNZ   2576
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
251C:  MOVF   x06,W
251E:  MULLW  05
2520:  MOVF   FF3,W
2522:  ADDWF  x03,W
2524:  MOVWF  x10
2526:  MOVF   x06,W
2528:  MULLW  08
252A:  MOVF   FF3,W
252C:  ADDWF  x04,W
252E:  MOVWF  x11
2530:  MOVFF  503,513
2534:  MOVFF  504,514
2538:  MOVFF  510,515
253C:  MOVWF  x16
253E:  MOVLW  01
2540:  MOVWF  x17
2542:  CLRF   x18
2544:  MOVLB  0
2546:  CALL   156E
254A:  MOVLW  01
254C:  MOVLB  5
254E:  ADDWF  x03,W
2550:  MOVWF  x10
2552:  MOVLW  01
2554:  ADDWF  x04,W
2556:  MOVWF  x11
2558:  MOVFF  510,512
255C:  MOVWF  x13
255E:  MOVLW  05
2560:  MOVWF  x15
2562:  MOVLW  07
2564:  MOVWF  x14
2566:  MOVFF  506,516
256A:  MOVLW  01
256C:  MOVWF  x17
256E:  MOVLB  0
2570:  CALL   1278
2574:  MOVLB  5
....................    } 
....................    glcd_update(); 
2576:  MOVLB  0
2578:  CALL   105C
.................... } 
257C:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
207A:  MOVLB  5
207C:  MOVF   x01,W
207E:  SUBLW  05
2080:  BNZ   2124
....................    for( i = 0 ; i < 64 ; i ++ ) 
2082:  CLRF   x02
2084:  MOVF   x02,W
2086:  SUBLW  3F
2088:  BNC   2124
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
208A:  CLRF   x03
208C:  MOVF   x03,W
208E:  SUBLW  0F
2090:  BNC   2120
....................       {     
....................          for(k=7;k>-1;k--) 
2092:  MOVLW  07
2094:  MOVWF  x04
2096:  MOVF   x04,W
2098:  XORLW  80
209A:  SUBLW  7F
209C:  BC    211C
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
209E:  CLRF   x06
20A0:  MOVFF  502,505
20A4:  CLRF   x08
20A6:  MOVLW  10
20A8:  MOVWF  x07
20AA:  MOVLB  0
20AC:  BRA    2056
20AE:  MOVFF  02,506
20B2:  MOVFF  01,505
20B6:  MOVLB  5
20B8:  MOVF   x03,W
20BA:  ADDWF  01,W
20BC:  MOVWF  01
20BE:  MOVLW  00
20C0:  ADDWFC 02,W
20C2:  MOVWF  03
20C4:  MOVF   01,W
20C6:  MOVFF  FF2,505
20CA:  BCF    FF2.7
20CC:  MOVFF  03,FF7
20D0:  MOVLB  0
20D2:  CALL   02A6
20D6:  MOVLB  5
20D8:  BTFSC  x05.7
20DA:  BSF    FF2.7
20DC:  MOVWF  x05
20DE:  MOVLW  07
20E0:  BSF    FD8.0
20E2:  SUBFWB x04,W
20E4:  MOVWF  x06
20E6:  MOVFF  505,00
20EA:  MOVF   x06,W
20EC:  MOVWF  01
20EE:  BZ    20F8
20F0:  BCF    FD8.0
20F2:  RRCF   00,F
20F4:  DECFSZ 01,F
20F6:  BRA    20F0
20F8:  BTFSS  00.0
20FA:  BRA    2118
....................                glcd_pixel( j*8+k,i, ON ); 
20FC:  MOVF   x03,W
20FE:  MULLW  08
2100:  MOVF   FF3,W
2102:  ADDWF  x04,W
2104:  MOVWF  x05
2106:  MOVWF  x2E
2108:  MOVFF  502,52F
210C:  MOVLW  01
210E:  MOVWF  x30
2110:  MOVLB  0
2112:  CALL   11BC
2116:  MOVLB  5
....................          }   
2118:  DECF   x04,F
211A:  BRA    2096
....................       } 
211C:  INCF   x03,F
211E:  BRA    208C
....................    } 
2120:  INCF   x02,F
2122:  BRA    2084
....................    } 
....................     
.................... } 
2124:  MOVLB  0
2126:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0ECA:  MOVLW  15
0ECC:  MOVWF  FCF
0ECE:  MOVLW  A0
0ED0:  MOVWF  FCE
....................    tiempos++; 
0ED2:  MOVLB  4
0ED4:  INCF   xAC,F
0ED6:  BTFSC  FD8.2
0ED8:  INCF   xAD,F
....................    tiempos3++; 
0EDA:  INCF   xAE,F
0EDC:  BTFSC  FD8.2
0EDE:  INCF   xAF,F
....................    tiempoctrl++; 
0EE0:  INCF   xB0,F
0EE2:  BTFSC  FD8.2
0EE4:  INCF   xB1,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0EE6:  MOVF   xAF,F
0EE8:  BNZ   0EF0
0EEA:  MOVF   xAE,W
0EEC:  SUBLW  27
0EEE:  BC    0F02
0EF0:  MOVF   xAA,W
0EF2:  SUBLW  02
0EF4:  BNZ   0F02
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0EF6:  CLRF   xAF
0EF8:  CLRF   xAE
0EFA:  BSF    x95.7
0EFC:  INCF   xB6,F
0EFE:  BTFSC  FD8.2
0F00:  INCF   xB7,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0F02:  MOVF   xAC,W
0F04:  SUBLW  C8
0F06:  BNZ   0F90
0F08:  MOVF   xAD,F
0F0A:  BNZ   0F90
....................    {tiempos=0;Lectura=1;tinicio++; 
0F0C:  CLRF   xAD
0F0E:  CLRF   xAC
0F10:  BSF    x95.6
0F12:  INCF   xB8,F
0F14:  BTFSC  FD8.2
0F16:  INCF   xB9,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0F18:  DECFSZ xA8,W
0F1A:  BRA    0F54
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0F1C:  INCF   xBE,F
....................       if(Testerilizacion[0]>9) 
0F1E:  BTFSC  xBE.7
0F20:  BRA    0F2C
0F22:  MOVF   xBE,W
0F24:  SUBLW  09
0F26:  BC    0F2C
....................          {Testerilizacion[0]=0; 
0F28:  CLRF   xBE
....................           Testerilizacion[1]++;} 
0F2A:  INCF   xBF,F
....................        if(Testerilizacion[1]>5) 
0F2C:  BTFSC  xBF.7
0F2E:  BRA    0F3A
0F30:  MOVF   xBF,W
0F32:  SUBLW  05
0F34:  BC    0F3A
....................          {Testerilizacion[1]=0; 
0F36:  CLRF   xBF
....................           Testerilizacion[2]++;} 
0F38:  INCF   xC0,F
....................          if(Testerilizacion[2]>9) 
0F3A:  BTFSC  xC0.7
0F3C:  BRA    0F48
0F3E:  MOVF   xC0,W
0F40:  SUBLW  09
0F42:  BC    0F48
....................             {Testerilizacion[2]=0; 
0F44:  CLRF   xC0
....................              Testerilizacion[3]++;} 
0F46:  INCF   xC1,F
....................             if(Testerilizacion[3]>5) 
0F48:  BTFSC  xC1.7
0F4A:  BRA    0F54
0F4C:  MOVF   xC1,W
0F4E:  SUBLW  05
0F50:  BC    0F54
....................                {Testerilizacion[3]=0;} 
0F52:  CLRF   xC1
....................       }        
....................        
....................     if(tiempo_secado==1) 
0F54:  DECFSZ xA9,W
0F56:  BRA    0F90
....................       { 
....................                       
....................       Tsecado[0]++; 
0F58:  INCF   xC6,F
....................       if(Tsecado[0]>9) 
0F5A:  BTFSC  xC6.7
0F5C:  BRA    0F68
0F5E:  MOVF   xC6,W
0F60:  SUBLW  09
0F62:  BC    0F68
....................          {Tsecado[0]=0; 
0F64:  CLRF   xC6
....................           Tsecado[1]++;} 
0F66:  INCF   xC7,F
....................        if(Tsecado[1]>5) 
0F68:  BTFSC  xC7.7
0F6A:  BRA    0F76
0F6C:  MOVF   xC7,W
0F6E:  SUBLW  05
0F70:  BC    0F76
....................          {Tsecado[1]=0; 
0F72:  CLRF   xC7
....................           Tsecado[2]++;} 
0F74:  INCF   xC8,F
....................          if(Tsecado[2]>9) 
0F76:  BTFSC  xC8.7
0F78:  BRA    0F84
0F7A:  MOVF   xC8,W
0F7C:  SUBLW  09
0F7E:  BC    0F84
....................             {Tsecado[2]=0; 
0F80:  CLRF   xC8
....................              Tsecado[3]++;} 
0F82:  INCF   xC9,F
....................             if(Tsecado[3]>5) 
0F84:  BTFSC  xC9.7
0F86:  BRA    0F90
0F88:  MOVF   xC9,W
0F8A:  SUBLW  05
0F8C:  BC    0F90
....................                {Tsecado[3]=0;} 
0F8E:  CLRF   xC9
....................       }   
....................    } 
....................    } 
....................     
0F90:  BCF    F9E.0
0F92:  MOVLB  0
0F94:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
26BE:  MOVLW  07
26C0:  MOVLB  5
26C2:  ADDWF  x03,W
26C4:  MOVWF  x04
26C6:  MOVFF  501,513
26CA:  MOVFF  503,514
26CE:  MOVFF  502,515
26D2:  MOVWF  x16
26D4:  MOVLW  01
26D6:  MOVWF  x17
26D8:  CLRF   x18
26DA:  MOVLB  0
26DC:  CALL   156E
.................... } 
26E0:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%3.1f",adc); // Converts adc to text 
*
2A52:  MOVLW  05
2A54:  MOVLB  5
2A56:  MOVWF  x00
2A58:  MOVLW  08
2A5A:  MOVLB  4
2A5C:  MOVWF  xFF
2A5E:  MOVLW  02
2A60:  MOVWF  FE9
2A62:  MOVFF  504,514
2A66:  MOVFF  503,513
2A6A:  MOVFF  502,512
2A6E:  MOVFF  501,511
2A72:  MOVLW  01
2A74:  MOVLB  5
2A76:  MOVWF  x15
2A78:  MOVLB  0
2A7A:  BRA    289E
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2A7C:  MOVLB  5
2A7E:  MOVF   x07,W
2A80:  MULLW  1B
2A82:  MOVF   FF3,W
2A84:  ADDWF  x05,W
2A86:  MOVWF  x11
2A88:  MOVF   x07,W
2A8A:  MULLW  08
2A8C:  MOVF   FF3,W
2A8E:  ADDWF  x06,W
2A90:  MOVWF  x12
2A92:  MOVFF  505,513
2A96:  MOVFF  506,514
2A9A:  MOVFF  511,515
2A9E:  MOVWF  x16
2AA0:  MOVLW  01
2AA2:  MOVWF  x17
2AA4:  CLRF   x18
2AA6:  MOVLB  0
2AA8:  CALL   156E
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2AAC:  MOVFF  505,512
2AB0:  MOVFF  506,513
2AB4:  MOVLW  05
2AB6:  MOVLB  5
2AB8:  MOVWF  x15
2ABA:  MOVLW  08
2ABC:  MOVWF  x14
2ABE:  MOVFF  507,516
2AC2:  MOVLW  01
2AC4:  MOVWF  x17
2AC6:  MOVLB  0
2AC8:  CALL   1278
.................... } 
2ACC:  GOTO   64C8 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
257E:  MOVFF  4C5,502
2582:  MOVLW  24
2584:  MOVLB  5
2586:  MOVWF  x03
2588:  CLRF   x04
258A:  CLRF   x05
258C:  MOVLW  01
258E:  MOVWF  x06
2590:  MOVLB  0
2592:  RCALL  2426
2594:  MOVFF  4C4,502
2598:  MOVLW  2A
259A:  MOVLB  5
259C:  MOVWF  x03
259E:  CLRF   x04
25A0:  CLRF   x05
25A2:  MOVLW  01
25A4:  MOVWF  x06
25A6:  MOVLB  0
25A8:  RCALL  2426
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
25AA:  MOVLW  04
25AC:  MOVWF  FEA
25AE:  MOVLW  E1
25B0:  MOVWF  FE9
25B2:  MOVFF  FF2,501
25B6:  BCF    FF2.7
25B8:  MOVLW  00
25BA:  CALL   06BE
25BE:  TBLRD*-
25C0:  TBLRD*+
25C2:  MOVF   FF5,W
25C4:  MOVWF  FEE
25C6:  IORLW  00
25C8:  BNZ   25C0
25CA:  MOVLB  5
25CC:  BTFSC  x01.7
25CE:  BSF    FF2.7
25D0:  MOVLW  04
25D2:  MOVWF  x02
25D4:  MOVLW  E1
25D6:  MOVWF  x01
25D8:  MOVLW  31
25DA:  MOVWF  x03
25DC:  CLRF   x04
25DE:  MOVLW  02
25E0:  MOVWF  x05
25E2:  MOVLW  01
25E4:  MOVWF  x06
25E6:  MOVLB  0
25E8:  CALL   1630
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
25EC:  MOVFF  4C3,502
25F0:  MOVLW  36
25F2:  MOVLB  5
25F4:  MOVWF  x03
25F6:  CLRF   x04
25F8:  CLRF   x05
25FA:  MOVLW  01
25FC:  MOVWF  x06
25FE:  MOVLB  0
2600:  RCALL  2426
2602:  MOVFF  4C2,502
2606:  MOVLW  3C
2608:  MOVLB  5
260A:  MOVWF  x03
260C:  CLRF   x04
260E:  CLRF   x05
2610:  MOVLW  01
2612:  MOVWF  x06
2614:  MOVLB  0
2616:  RCALL  2426
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
2618:  MOVFF  4CD,502
261C:  MOVLW  24
261E:  MOVLB  5
2620:  MOVWF  x03
2622:  MOVLW  08
2624:  MOVWF  x04
2626:  CLRF   x05
2628:  MOVLW  01
262A:  MOVWF  x06
262C:  MOVLB  0
262E:  RCALL  2426
2630:  MOVFF  4CC,502
2634:  MOVLW  2A
2636:  MOVLB  5
2638:  MOVWF  x03
263A:  MOVLW  08
263C:  MOVWF  x04
263E:  CLRF   x05
2640:  MOVLW  01
2642:  MOVWF  x06
2644:  MOVLB  0
2646:  RCALL  2426
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
2648:  MOVLW  04
264A:  MOVWF  FEA
264C:  MOVLW  E1
264E:  MOVWF  FE9
2650:  MOVFF  FF2,501
2654:  BCF    FF2.7
2656:  MOVLW  00
2658:  CALL   06BE
265C:  TBLRD*-
265E:  TBLRD*+
2660:  MOVF   FF5,W
2662:  MOVWF  FEE
2664:  IORLW  00
2666:  BNZ   265E
2668:  MOVLB  5
266A:  BTFSC  x01.7
266C:  BSF    FF2.7
266E:  MOVLW  04
2670:  MOVWF  x02
2672:  MOVLW  E1
2674:  MOVWF  x01
2676:  MOVLW  31
2678:  MOVWF  x03
267A:  MOVLW  08
267C:  MOVWF  x04
267E:  MOVLW  02
2680:  MOVWF  x05
2682:  MOVLW  01
2684:  MOVWF  x06
2686:  MOVLB  0
2688:  CALL   1630
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
268C:  MOVFF  4CB,502
2690:  MOVLW  36
2692:  MOVLB  5
2694:  MOVWF  x03
2696:  MOVLW  08
2698:  MOVWF  x04
269A:  CLRF   x05
269C:  MOVLW  01
269E:  MOVWF  x06
26A0:  MOVLB  0
26A2:  RCALL  2426
26A4:  MOVFF  4CA,502
26A8:  MOVLW  3C
26AA:  MOVLB  5
26AC:  MOVWF  x03
26AE:  MOVLW  08
26B0:  MOVWF  x04
26B2:  CLRF   x05
26B4:  MOVLW  01
26B6:  MOVWF  x06
26B8:  MOVLB  0
26BA:  RCALL  2426
.................... } 
26BC:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
185E:  MOVLW  05
1860:  MOVLB  5
1862:  MOVWF  x00
1864:  MOVLW  07
1866:  MOVLB  4
1868:  MOVWF  xFF
186A:  MOVFF  503,510
186E:  MOVLW  1F
1870:  MOVLB  5
1872:  MOVWF  x11
1874:  MOVLB  0
1876:  BRA    177E
....................     
....................    if(sombreado==1) 
1878:  MOVLB  5
187A:  DECFSZ x06,W
187C:  BRA    18CC
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
187E:  MOVLW  12
1880:  ADDWF  x04,W
1882:  MOVWF  x10
1884:  MOVLW  18
1886:  ADDWF  x05,W
1888:  MOVWF  x11
188A:  MOVFF  504,513
188E:  MOVFF  505,514
1892:  MOVFF  510,515
1896:  MOVWF  x16
1898:  MOVLW  01
189A:  MOVWF  x17
189C:  MOVWF  x18
189E:  MOVLB  0
18A0:  RCALL  156E
18A2:  MOVLW  02
18A4:  MOVLB  5
18A6:  ADDWF  x04,W
18A8:  MOVWF  x10
18AA:  MOVLW  01
18AC:  ADDWF  x05,W
18AE:  MOVWF  x11
18B0:  MOVFF  510,512
18B4:  MOVWF  x13
18B6:  MOVLW  05
18B8:  MOVWF  x15
18BA:  MOVLW  07
18BC:  MOVWF  x14
18BE:  MOVLW  02
18C0:  MOVWF  x16
18C2:  CLRF   x17
18C4:  MOVLB  0
18C6:  RCALL  1278
....................    else    
18C8:  BRA    1916
18CA:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
18CC:  MOVLW  12
18CE:  ADDWF  x04,W
18D0:  MOVWF  x10
18D2:  MOVLW  18
18D4:  ADDWF  x05,W
18D6:  MOVWF  x11
18D8:  MOVFF  504,513
18DC:  MOVFF  505,514
18E0:  MOVFF  510,515
18E4:  MOVWF  x16
18E6:  CLRF   x17
18E8:  CLRF   x18
18EA:  MOVLB  0
18EC:  RCALL  156E
18EE:  MOVLW  02
18F0:  MOVLB  5
18F2:  ADDWF  x04,W
18F4:  MOVWF  x10
18F6:  MOVLW  01
18F8:  ADDWF  x05,W
18FA:  MOVWF  x11
18FC:  MOVFF  510,512
1900:  MOVWF  x13
1902:  MOVLW  05
1904:  MOVWF  x15
1906:  MOVLW  07
1908:  MOVWF  x14
190A:  MOVLW  02
190C:  MOVWF  x16
190E:  MOVLW  01
1910:  MOVWF  x17
1912:  MOVLB  0
1914:  RCALL  1278
....................  
.................... } 
1916:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
1FC0:  BSF    F93.0
1FC2:  MOVLW  11
1FC4:  MOVWF  00
1FC6:  DECFSZ 00,F
1FC8:  BRA    1FC6
1FCA:  BSF    F93.1
1FCC:  MOVLW  11
1FCE:  MOVWF  00
1FD0:  DECFSZ 00,F
1FD2:  BRA    1FD0
1FD4:  BCF    F8A.0
1FD6:  BCF    F93.0
1FD8:  MOVLW  11
1FDA:  MOVWF  00
1FDC:  DECFSZ 00,F
1FDE:  BRA    1FDC
1FE0:  BCF    F8A.1
1FE2:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FE4:  MOVFF  502,505
1FE8:  RCALL  1918
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
1FEA:  MOVFF  503,505
1FEE:  RCALL  1918
....................    i2c_write(dato);        // Dato a transmitir 
1FF0:  MOVFF  504,505
1FF4:  RCALL  1918
....................    i2c_stop();             // Fin comunicación 
1FF6:  BCF    F93.0
1FF8:  NOP   
1FFA:  BSF    F93.1
1FFC:  BTFSS  F81.1
1FFE:  BRA    1FFC
2000:  MOVLW  11
2002:  MOVWF  00
2004:  DECFSZ 00,F
2006:  BRA    2004
2008:  BRA    200A
200A:  NOP   
200C:  BSF    F93.0
200E:  MOVLW  11
2010:  MOVWF  00
2012:  DECFSZ 00,F
2014:  BRA    2012
....................  } 
2016:  GOTO   204C (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1EDA:  BSF    F93.0
1EDC:  MOVLW  11
1EDE:  MOVWF  00
1EE0:  DECFSZ 00,F
1EE2:  BRA    1EE0
1EE4:  BSF    F93.1
1EE6:  MOVLW  11
1EE8:  MOVWF  00
1EEA:  DECFSZ 00,F
1EEC:  BRA    1EEA
1EEE:  BCF    F8A.0
1EF0:  BCF    F93.0
1EF2:  MOVLW  11
1EF4:  MOVWF  00
1EF6:  DECFSZ 00,F
1EF8:  BRA    1EF6
1EFA:  BCF    F8A.1
1EFC:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1EFE:  MOVFF  501,505
1F02:  MOVLB  0
1F04:  RCALL  1918
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1F06:  MOVFF  502,505
1F0A:  RCALL  1918
....................    i2c_start();            // Reinicio 
1F0C:  BSF    F93.0
1F0E:  MOVLW  11
1F10:  MOVWF  00
1F12:  DECFSZ 00,F
1F14:  BRA    1F12
1F16:  BSF    F93.1
1F18:  MOVLW  11
1F1A:  MOVWF  00
1F1C:  DECFSZ 00,F
1F1E:  BRA    1F1C
1F20:  BTFSS  F81.1
1F22:  BRA    1F20
1F24:  BCF    F8A.0
1F26:  BCF    F93.0
1F28:  MOVLW  11
1F2A:  MOVWF  00
1F2C:  DECFSZ 00,F
1F2E:  BRA    1F2C
1F30:  BCF    F8A.1
1F32:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1F34:  MOVLW  01
1F36:  MOVLB  5
1F38:  ADDWF  x01,W
1F3A:  MOVWF  x03
1F3C:  MOVWF  x05
1F3E:  MOVLB  0
1F40:  RCALL  1918
....................    dato=i2c_read(0);       // Lectura del dato 
1F42:  CLRF   00
1F44:  BRA    198E
1F46:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
1F4A:  BCF    F93.0
1F4C:  NOP   
1F4E:  BSF    F93.1
1F50:  BTFSS  F81.1
1F52:  BRA    1F50
1F54:  MOVLW  11
1F56:  MOVWF  00
1F58:  DECFSZ 00,F
1F5A:  BRA    1F58
1F5C:  BRA    1F5E
1F5E:  NOP   
1F60:  BSF    F93.0
1F62:  MOVLW  11
1F64:  MOVWF  00
1F66:  DECFSZ 00,F
1F68:  BRA    1F66
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
1F88:  MOVFF  498,456
....................    SlaveA0Tx[1]=EVDesfogue; 
1F8C:  MOVFF  499,457
....................    SlaveA0Tx[2]=EVAgua; 
1F90:  MOVFF  49A,458
....................    SlaveA0Tx[3]=EVTrampa; 
1F94:  MOVFF  49B,459
....................    SlaveA0Tx[4]=MotorPuerta; 
1F98:  MOVFF  49C,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
1F9C:  MOVFF  49D,45B
....................    SlaveA0Tx[6]=BombaVacio; 
1FA0:  MOVFF  49E,45C
....................    SlaveA0Tx[7]=BombaAgua; 
1FA4:  MOVFF  49F,45D
....................    SlaveA0Tx[8]=Control; 
1FA8:  MOVFF  4A0,45E
....................    SlaveA0Tx[9]=Setpoint; 
1FAC:  MOVFF  4A5,45F
....................    SlaveA0Tx[10]=20; 
1FB0:  MOVLW  14
1FB2:  MOVLB  4
1FB4:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
1FB6:  MOVFF  4B4,462
.................... } 
1FBA:  MOVLB  0
1FBC:  GOTO   201C (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1E0A:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1E0E:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1E12:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1E16:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1E1A:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1E1E:  MOVLB  5
1E20:  CLRF   x02
1E22:  MOVFF  41B,501
1E26:  MOVLB  0
1E28:  RCALL  19FA
1E2A:  MOVFF  03,4BD
1E2E:  MOVFF  02,4BC
1E32:  MOVFF  01,4BB
1E36:  MOVFF  00,4BA
....................    Alarma=txbuf[6]; 
1E3A:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1E3E:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1E42:  MOVFF  41E,4AB
....................    Decimal=txbuf[9]; 
1E46:  MOVFF  41F,4A1
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1E4A:  MOVLB  5
1E4C:  CLRF   x02
1E4E:  MOVFF  4A1,501
1E52:  MOVLB  0
1E54:  RCALL  19FA
1E56:  MOVFF  00,501
1E5A:  MOVFF  01,502
1E5E:  MOVFF  02,503
1E62:  MOVFF  03,504
1E66:  MOVFF  03,508
1E6A:  MOVFF  02,507
1E6E:  MOVFF  01,506
1E72:  MOVFF  00,505
1E76:  MOVLB  5
1E78:  CLRF   x0C
1E7A:  CLRF   x0B
1E7C:  MOVLW  20
1E7E:  MOVWF  x0A
1E80:  MOVLW  82
1E82:  MOVWF  x09
1E84:  MOVLB  0
1E86:  BRA    1A30
1E88:  BCF    FD8.1
1E8A:  MOVFF  4BD,504
1E8E:  MOVFF  4BC,503
1E92:  MOVFF  4BB,502
1E96:  MOVFF  4BA,501
1E9A:  MOVFF  03,508
1E9E:  MOVFF  02,507
1EA2:  MOVFF  01,506
1EA6:  MOVFF  00,505
1EAA:  BRA    1B90
1EAC:  MOVFF  03,4BD
1EB0:  MOVFF  02,4BC
1EB4:  MOVFF  01,4BB
1EB8:  MOVFF  00,4BA
.................... } 
1EBC:  GOTO   1F86 (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
201A:  BRA    1F88
....................    for(i=0;i<13;i++) 
201C:  MOVLB  4
201E:  CLRF   xA4
2020:  MOVF   xA4,W
2022:  SUBLW  0C
2024:  BNC   2052
....................    { 
....................       direccion=0xA0; 
2026:  MOVLW  A0
2028:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
202A:  CLRF   03
202C:  MOVF   xA4,W
202E:  ADDLW  56
2030:  MOVWF  FE9
2032:  MOVLW  04
2034:  ADDWFC 03,W
2036:  MOVWF  FEA
2038:  MOVFF  FEF,501
203C:  MOVFF  487,502
2040:  MOVFF  4A4,503
2044:  MOVFF  501,504
2048:  MOVLB  0
204A:  BRA    1FC0
....................    }  
204C:  MOVLB  4
204E:  INCF   xA4,F
2050:  BRA    2020
.................... } 
2052:  MOVLB  0
2054:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
1EC0:  MOVLB  4
1EC2:  CLRF   xA4
1EC4:  MOVF   xA4,W
1EC6:  SUBLW  09
1EC8:  BNC   1F82
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1ECA:  MOVLW  A0
1ECC:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1ECE:  MOVFF  4A4,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1ED2:  MOVFF  487,501
1ED6:  MOVFF  488,502
....................       txbuf[i]=(int8)dato; 
*
1F6A:  CLRF   03
1F6C:  MOVLB  4
1F6E:  MOVF   xA4,W
1F70:  ADDLW  16
1F72:  MOVWF  FE9
1F74:  MOVLW  04
1F76:  ADDWFC 03,W
1F78:  MOVWF  FEA
1F7A:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
1F7E:  INCF   xA4,F
1F80:  BRA    1EC4
....................    Lee_Vector(); 
1F82:  MOVLB  0
1F84:  BRA    1E0A
.................... } 
1F86:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2B8A:  CLRF   FF8
2B8C:  BCF    FD0.7
2B8E:  BSF    07.7
2B90:  CLRF   FEA
2B92:  CLRF   FE9
2B94:  MOVLB  4
2B96:  CLRF   x86
2B98:  CLRF   x87
2B9A:  CLRF   x88
2B9C:  CLRF   x8D
2B9E:  MOVLW  01
2BA0:  MOVWF  x8E
2BA2:  CLRF   x8F
2BA4:  CLRF   x90
2BA6:  CLRF   x91
2BA8:  CLRF   x92
2BAA:  CLRF   x93
2BAC:  CLRF   x94
2BAE:  BCF    x95.0
2BB0:  BCF    x95.1
2BB2:  BCF    x95.2
2BB4:  BCF    x95.3
2BB6:  BSF    x95.4
2BB8:  BCF    x95.5
2BBA:  BCF    x95.6
2BBC:  BCF    x95.7
2BBE:  BCF    x96.0
2BC0:  BCF    x96.1
2BC2:  BCF    x96.2
2BC4:  BCF    x96.3
2BC6:  BCF    x96.4
2BC8:  BCF    x96.5
2BCA:  BCF    x96.6
2BCC:  BCF    x96.7
2BCE:  BCF    x97.0
2BD0:  BCF    x97.1
2BD2:  BCF    x97.2
2BD4:  BCF    x97.3
2BD6:  BCF    x97.4
2BD8:  CLRF   x98
2BDA:  CLRF   x99
2BDC:  CLRF   x9A
2BDE:  CLRF   x9B
2BE0:  CLRF   x9C
2BE2:  CLRF   x9D
2BE4:  CLRF   x9E
2BE6:  CLRF   x9F
2BE8:  CLRF   xA0
2BEA:  CLRF   xA1
2BEC:  CLRF   xA2
2BEE:  MOVWF  xA3
2BF0:  CLRF   xA4
2BF2:  CLRF   xA5
2BF4:  CLRF   xA6
2BF6:  MOVWF  xA7
2BF8:  CLRF   xA8
2BFA:  CLRF   xA9
2BFC:  CLRF   xAA
2BFE:  CLRF   xAB
2C00:  CLRF   xAD
2C02:  CLRF   xAC
2C04:  CLRF   xAF
2C06:  CLRF   xAE
2C08:  CLRF   xB1
2C0A:  CLRF   xB0
2C0C:  CLRF   xB3
2C0E:  MOVLW  0F
2C10:  MOVWF  xB2
2C12:  CLRF   xB5
2C14:  CLRF   xB4
2C16:  CLRF   xB7
2C18:  CLRF   xB6
2C1A:  CLRF   xB9
2C1C:  CLRF   xB8
2C1E:  CLRF   xBD
2C20:  CLRF   xBC
2C22:  CLRF   xBB
2C24:  CLRF   xBA
2C26:  MOVF   FC1,W
2C28:  ANDLW  C0
2C2A:  IORLW  0F
2C2C:  MOVWF  FC1
2C2E:  MOVLW  07
2C30:  MOVWF  FB4
2C32:  MOVLW  6B
2C34:  MOVWF  x89
2C36:  MOVLW  50
2C38:  MOVWF  x8A
2C3A:  MOVLW  61
2C3C:  MOVWF  x8B
2C3E:  CLRF   x8C
2C40:  CLRF   xBE
2C42:  CLRF   xBF
2C44:  CLRF   xC0
2C46:  CLRF   xC1
2C48:  CLRF   xC2
2C4A:  CLRF   xC3
2C4C:  CLRF   xC4
2C4E:  CLRF   xC5
2C50:  CLRF   xC6
2C52:  CLRF   xC7
2C54:  CLRF   xC8
2C56:  CLRF   xC9
2C58:  CLRF   xCA
2C5A:  CLRF   xCB
2C5C:  CLRF   xCC
2C5E:  CLRF   xCD
2C60:  CLRF   xCE
2C62:  CLRF   xCF
2C64:  CLRF   xD0
2C66:  CLRF   xD1
2C68:  CLRF   xD2
2C6A:  CLRF   xD3
2C6C:  CLRF   xD4
2C6E:  CLRF   xD5
2C70:  CLRF   xFF
2C72:  MOVLB  5
2C74:  CLRF   x00
....................    Display_on; 
2C76:  BSF    F8D.0
2C78:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2C7A:  MOVLB  4
2C7C:  CLRF   x88
2C7E:  MOVF   x88,W
2C80:  SUBLW  0F
2C82:  BNC   2CB8
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2C84:  CLRF   03
2C86:  MOVF   x88,W
2C88:  ADDLW  56
2C8A:  MOVWF  FE9
2C8C:  MOVLW  04
2C8E:  ADDWFC 03,W
2C90:  MOVWF  FEA
2C92:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2C94:  CLRF   03
2C96:  MOVF   x88,W
2C98:  ADDLW  66
2C9A:  MOVWF  FE9
2C9C:  MOVLW  04
2C9E:  ADDWFC 03,W
2CA0:  MOVWF  FEA
2CA2:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2CA4:  CLRF   03
2CA6:  MOVF   x88,W
2CA8:  ADDLW  76
2CAA:  MOVWF  FE9
2CAC:  MOVLW  04
2CAE:  ADDWFC 03,W
2CB0:  MOVWF  FEA
2CB2:  CLRF   FEF
....................    } 
2CB4:  INCF   x88,F
2CB6:  BRA    2C7E
....................    output_d(0); 
2CB8:  CLRF   F95
2CBA:  CLRF   F8C
....................    delay_ms(1000);    
2CBC:  MOVLW  04
2CBE:  MOVLB  5
2CC0:  MOVWF  x01
2CC2:  MOVLW  FA
2CC4:  MOVWF  x02
2CC6:  MOVLB  0
2CC8:  CALL   0F98
2CCC:  MOVLB  5
2CCE:  DECFSZ x01,F
2CD0:  BRA    2CC2
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2CD2:  MOVLW  85
2CD4:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2CD6:  BSF    F9D.0
....................    enable_interrupts(global); 
2CD8:  MOVLW  C0
2CDA:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2CDC:  MOVFF  FF2,501
2CE0:  BCF    FF2.7
2CE2:  CLRF   FA9
2CE4:  BCF    FA6.6
2CE6:  BCF    FA6.7
2CE8:  BSF    FA6.0
2CEA:  MOVF   FA8,W
2CEC:  BTFSC  x01.7
2CEE:  BSF    FF2.7
2CF0:  MOVLB  4
2CF2:  MOVWF  xC2
2CF4:  MOVFF  FF2,501
2CF8:  BCF    FF2.7
2CFA:  MOVLW  01
2CFC:  MOVWF  FA9
2CFE:  BCF    FA6.6
2D00:  BCF    FA6.7
2D02:  BSF    FA6.0
2D04:  MOVF   FA8,W
2D06:  MOVLB  5
2D08:  BTFSC  x01.7
2D0A:  BSF    FF2.7
2D0C:  MOVLB  4
2D0E:  MOVWF  xC3
2D10:  MOVFF  FF2,501
2D14:  BCF    FF2.7
2D16:  MOVLW  02
2D18:  MOVWF  FA9
2D1A:  BCF    FA6.6
2D1C:  BCF    FA6.7
2D1E:  BSF    FA6.0
2D20:  MOVF   FA8,W
2D22:  MOVLB  5
2D24:  BTFSC  x01.7
2D26:  BSF    FF2.7
2D28:  MOVLB  4
2D2A:  MOVWF  xC4
2D2C:  MOVFF  FF2,501
2D30:  BCF    FF2.7
2D32:  MOVLW  03
2D34:  MOVWF  FA9
2D36:  BCF    FA6.6
2D38:  BCF    FA6.7
2D3A:  BSF    FA6.0
2D3C:  MOVF   FA8,W
2D3E:  MOVLB  5
2D40:  BTFSC  x01.7
2D42:  BSF    FF2.7
2D44:  MOVLB  4
2D46:  MOVWF  xC5
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2D48:  MOVFF  FF2,501
2D4C:  BCF    FF2.7
2D4E:  MOVLW  04
2D50:  MOVWF  FA9
2D52:  BCF    FA6.6
2D54:  BCF    FA6.7
2D56:  BSF    FA6.0
2D58:  MOVF   FA8,W
2D5A:  MOVLB  5
2D5C:  BTFSC  x01.7
2D5E:  BSF    FF2.7
2D60:  MOVLB  4
2D62:  MOVWF  xCA
2D64:  MOVFF  FF2,501
2D68:  BCF    FF2.7
2D6A:  MOVLW  05
2D6C:  MOVWF  FA9
2D6E:  BCF    FA6.6
2D70:  BCF    FA6.7
2D72:  BSF    FA6.0
2D74:  MOVF   FA8,W
2D76:  MOVLB  5
2D78:  BTFSC  x01.7
2D7A:  BSF    FF2.7
2D7C:  MOVLB  4
2D7E:  MOVWF  xCB
2D80:  MOVFF  FF2,501
2D84:  BCF    FF2.7
2D86:  MOVLW  06
2D88:  MOVWF  FA9
2D8A:  BCF    FA6.6
2D8C:  BCF    FA6.7
2D8E:  BSF    FA6.0
2D90:  MOVF   FA8,W
2D92:  MOVLB  5
2D94:  BTFSC  x01.7
2D96:  BSF    FF2.7
2D98:  MOVLB  4
2D9A:  MOVWF  xCC
2D9C:  MOVFF  FF2,501
2DA0:  BCF    FF2.7
2DA2:  MOVLW  07
2DA4:  MOVWF  FA9
2DA6:  BCF    FA6.6
2DA8:  BCF    FA6.7
2DAA:  BSF    FA6.0
2DAC:  MOVF   FA8,W
2DAE:  MOVLB  5
2DB0:  BTFSC  x01.7
2DB2:  BSF    FF2.7
2DB4:  MOVLB  4
2DB6:  MOVWF  xCD
2DB8:  MOVFF  FF2,501
2DBC:  BCF    FF2.7
2DBE:  MOVLW  08
2DC0:  MOVWF  FA9
2DC2:  BCF    FA6.6
2DC4:  BCF    FA6.7
2DC6:  BSF    FA6.0
2DC8:  MOVF   FA8,W
2DCA:  MOVLB  5
2DCC:  BTFSC  x01.7
2DCE:  BSF    FF2.7
2DD0:  MOVLB  4
2DD2:  MOVWF  xA5
....................    Nivel=read_eeprom(9); 
2DD4:  MOVFF  FF2,501
2DD8:  BCF    FF2.7
2DDA:  MOVLW  09
2DDC:  MOVWF  FA9
2DDE:  BCF    FA6.6
2DE0:  BCF    FA6.7
2DE2:  BSF    FA6.0
2DE4:  MOVF   FA8,W
2DE6:  MOVLB  5
2DE8:  BTFSC  x01.7
2DEA:  BSF    FF2.7
2DEC:  MOVLB  4
2DEE:  CLRF   xB5
2DF0:  MOVWF  xB4
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2DF2:  MOVFF  FF2,501
2DF6:  BCF    FF2.7
2DF8:  MOVLW  0A
2DFA:  MOVWF  FA9
2DFC:  BCF    FA6.6
2DFE:  BCF    FA6.7
2E00:  BSF    FA6.0
2E02:  MOVF   FA8,W
2E04:  MOVLB  5
2E06:  BTFSC  x01.7
2E08:  BSF    FF2.7
2E0A:  MOVLB  4
2E0C:  MOVWF  xD2
2E0E:  MOVFF  FF2,501
2E12:  BCF    FF2.7
2E14:  MOVLW  0B
2E16:  MOVWF  FA9
2E18:  BCF    FA6.6
2E1A:  BCF    FA6.7
2E1C:  BSF    FA6.0
2E1E:  MOVF   FA8,W
2E20:  MOVLB  5
2E22:  BTFSC  x01.7
2E24:  BSF    FF2.7
2E26:  MOVLB  4
2E28:  MOVWF  xD3
2E2A:  MOVFF  FF2,501
2E2E:  BCF    FF2.7
2E30:  MOVLW  0C
2E32:  MOVWF  FA9
2E34:  BCF    FA6.6
2E36:  BCF    FA6.7
2E38:  BSF    FA6.0
2E3A:  MOVF   FA8,W
2E3C:  MOVLB  5
2E3E:  BTFSC  x01.7
2E40:  BSF    FF2.7
2E42:  MOVLB  4
2E44:  MOVWF  xD4
2E46:  MOVFF  FF2,501
2E4A:  BCF    FF2.7
2E4C:  MOVLW  0D
2E4E:  MOVWF  FA9
2E50:  BCF    FA6.6
2E52:  BCF    FA6.7
2E54:  BSF    FA6.0
2E56:  MOVF   FA8,W
2E58:  MOVLB  5
2E5A:  BTFSC  x01.7
2E5C:  BSF    FF2.7
2E5E:  MOVLB  4
2E60:  MOVWF  xD5
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2E62:  MOVLW  01
2E64:  MOVLB  5
2E66:  MOVWF  x01
2E68:  MOVLB  0
2E6A:  CALL   1114
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2E6E:  MOVLB  5
2E70:  CLRF   x02
2E72:  MOVLB  0
2E74:  CALL   1002
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2E78:  MOVLW  04
2E7A:  MOVWF  FEA
2E7C:  MOVLW  E1
2E7E:  MOVWF  FE9
2E80:  MOVFF  FF2,501
2E84:  BCF    FF2.7
2E86:  MOVLW  00
2E88:  CALL   06DA
2E8C:  TBLRD*-
2E8E:  TBLRD*+
2E90:  MOVF   FF5,W
2E92:  MOVWF  FEE
2E94:  IORLW  00
2E96:  BNZ   2E8E
2E98:  MOVLB  5
2E9A:  BTFSC  x01.7
2E9C:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2E9E:  MOVLW  04
2EA0:  MOVWF  x02
2EA2:  MOVLW  E1
2EA4:  MOVWF  x01
2EA6:  CLRF   x03
2EA8:  CLRF   x04
2EAA:  CLRF   x05
2EAC:  MOVLW  02
2EAE:  MOVWF  x06
2EB0:  MOVLB  0
2EB2:  CALL   1630
....................    strcpy(Menus.Letra,"Autoclave Horizontal"); 
2EB6:  MOVLW  04
2EB8:  MOVWF  FEA
2EBA:  MOVLW  E1
2EBC:  MOVWF  FE9
2EBE:  MOVFF  FF2,501
2EC2:  BCF    FF2.7
2EC4:  MOVLW  00
2EC6:  CALL   0700
2ECA:  TBLRD*-
2ECC:  TBLRD*+
2ECE:  MOVF   FF5,W
2ED0:  MOVWF  FEE
2ED2:  IORLW  00
2ED4:  BNZ   2ECC
2ED6:  MOVLB  5
2ED8:  BTFSC  x01.7
2EDA:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
2EDC:  MOVLW  04
2EDE:  MOVWF  x02
2EE0:  MOVLW  E1
2EE2:  MOVWF  x01
2EE4:  CLRF   x03
2EE6:  MOVLW  14
2EE8:  MOVWF  x04
2EEA:  CLRF   x05
2EEC:  MOVLW  01
2EEE:  MOVWF  x06
2EF0:  MOVLB  0
2EF2:  CALL   1630
....................    strcpy(Menus.Letra," 120 Litros  "); 
2EF6:  MOVLW  04
2EF8:  MOVWF  FEA
2EFA:  MOVLW  E1
2EFC:  MOVWF  FE9
2EFE:  MOVFF  FF2,501
2F02:  BCF    FF2.7
2F04:  MOVLW  00
2F06:  CALL   0730
2F0A:  TBLRD*-
2F0C:  TBLRD*+
2F0E:  MOVF   FF5,W
2F10:  MOVWF  FEE
2F12:  IORLW  00
2F14:  BNZ   2F0C
2F16:  MOVLB  5
2F18:  BTFSC  x01.7
2F1A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
2F1C:  MOVLW  04
2F1E:  MOVWF  x02
2F20:  MOVLW  E1
2F22:  MOVWF  x01
2F24:  CLRF   x03
2F26:  MOVLW  23
2F28:  MOVWF  x04
2F2A:  CLRF   x05
2F2C:  MOVLW  02
2F2E:  MOVWF  x06
2F30:  MOVLB  0
2F32:  CALL   1630
....................    delay_ms(1000); 
2F36:  MOVLW  04
2F38:  MOVLB  5
2F3A:  MOVWF  x01
2F3C:  MOVLW  FA
2F3E:  MOVWF  x02
2F40:  MOVLB  0
2F42:  CALL   0F98
2F46:  MOVLB  5
2F48:  DECFSZ x01,F
2F4A:  BRA    2F3C
....................    delay_ms(1000); 
2F4C:  MOVLW  04
2F4E:  MOVWF  x01
2F50:  MOVLW  FA
2F52:  MOVWF  x02
2F54:  MOVLB  0
2F56:  CALL   0F98
2F5A:  MOVLB  5
2F5C:  DECFSZ x01,F
2F5E:  BRA    2F50
....................    delay_ms(1000); 
2F60:  MOVLW  04
2F62:  MOVWF  x01
2F64:  MOVLW  FA
2F66:  MOVWF  x02
2F68:  MOVLB  0
2F6A:  CALL   0F98
2F6E:  MOVLB  5
2F70:  DECFSZ x01,F
2F72:  BRA    2F64
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2F74:  CLRF   x02
2F76:  MOVLB  0
2F78:  CALL   1002
....................    displayContrasena(Contrasena[0],20,30,1); 
2F7C:  MOVFF  4CE,503
2F80:  MOVLW  14
2F82:  MOVLB  5
2F84:  MOVWF  x04
2F86:  MOVLW  1E
2F88:  MOVWF  x05
2F8A:  MOVLW  01
2F8C:  MOVWF  x06
2F8E:  MOVLB  0
2F90:  CALL   185E
....................    displayContrasena(Contrasena[1],40,30,0); 
2F94:  MOVFF  4CF,503
2F98:  MOVLW  28
2F9A:  MOVLB  5
2F9C:  MOVWF  x04
2F9E:  MOVLW  1E
2FA0:  MOVWF  x05
2FA2:  CLRF   x06
2FA4:  MOVLB  0
2FA6:  CALL   185E
....................    displayContrasena(Contrasena[2],60,30,0); 
2FAA:  MOVFF  4D0,503
2FAE:  MOVLW  3C
2FB0:  MOVLB  5
2FB2:  MOVWF  x04
2FB4:  MOVLW  1E
2FB6:  MOVWF  x05
2FB8:  CLRF   x06
2FBA:  MOVLB  0
2FBC:  CALL   185E
....................    displayContrasena(Contrasena[3],80,30,0); 
2FC0:  MOVFF  4D1,503
2FC4:  MOVLW  50
2FC6:  MOVLB  5
2FC8:  MOVWF  x04
2FCA:  MOVLW  1E
2FCC:  MOVWF  x05
2FCE:  CLRF   x06
2FD0:  MOVLB  0
2FD2:  CALL   185E
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
2FD6:  CALL   1EC0
....................        
....................       Envio_Esclavos(); 
2FDA:  CALL   201A
....................       glcd_update(); 
2FDE:  CALL   105C
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
2FE2:  BSF    F92.0
2FE4:  BTFSC  F80.0
2FE6:  BRA    2FFA
2FE8:  BSF    F92.1
2FEA:  BTFSC  F80.1
2FEC:  BRA    2FFA
2FEE:  BSF    F92.2
2FF0:  BTFSC  F80.2
2FF2:  BRA    2FFA
2FF4:  BSF    F92.3
2FF6:  BTFSS  F80.3
2FF8:  BRA    3002
....................       { 
....................          tinicio=0; 
2FFA:  MOVLB  4
2FFC:  CLRF   xB9
2FFE:  CLRF   xB8
3000:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
3002:  MOVLB  4
3004:  MOVF   xB9,W
3006:  SUBLW  37
3008:  BC    3026
300A:  XORLW  FF
300C:  BNZ   3014
300E:  MOVF   xB8,W
3010:  SUBLW  3F
3012:  BC    3026
....................          glcd_fillscreen(OFF); 
3014:  MOVLB  5
3016:  CLRF   x02
3018:  MOVLB  0
301A:  CALL   1002
....................          Display_off; 
301E:  BCF    F8D.0
3020:  BCF    F96.0
....................       } 
3022:  BRA    3002
3024:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
3026:  MOVF   xA2,F
3028:  BTFSS  FD8.2
302A:  BRA    35C0
....................        
....................       strcpy(Menus.Letra,"Clave"); 
302C:  MOVLW  04
302E:  MOVWF  FEA
3030:  MOVLW  E1
3032:  MOVWF  FE9
3034:  MOVFF  FF2,501
3038:  BCF    FF2.7
303A:  MOVLW  00
303C:  MOVLB  0
303E:  CALL   0758
3042:  TBLRD*-
3044:  TBLRD*+
3046:  MOVF   FF5,W
3048:  MOVWF  FEE
304A:  IORLW  00
304C:  BNZ   3044
304E:  MOVLB  5
3050:  BTFSC  x01.7
3052:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
3054:  MOVLW  04
3056:  MOVWF  x02
3058:  MOVLW  E1
305A:  MOVWF  x01
305C:  MOVLW  1E
305E:  MOVWF  x03
3060:  CLRF   x04
3062:  MOVLW  01
3064:  MOVWF  x05
3066:  MOVLW  02
3068:  MOVWF  x06
306A:  MOVLB  0
306C:  CALL   1630
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
3070:  BSF    F92.0
3072:  BTFSS  F80.0
3074:  BRA    314C
....................       { 
....................          if(Flanco == 0) 
3076:  MOVLB  4
3078:  BTFSC  x95.0
307A:  BRA    314A
....................          { 
....................             Flanco = 1;delay_ms(30); 
307C:  BSF    x95.0
307E:  MOVLW  1E
3080:  MOVLB  5
3082:  MOVWF  x02
3084:  MOVLB  0
3086:  CALL   0F98
....................             for(i=1;i<=4;i++) 
308A:  MOVLW  01
308C:  MOVLB  4
308E:  MOVWF  xA4
3090:  MOVF   xA4,W
3092:  SUBLW  04
3094:  BNC   314A
....................             { 
....................                if(unidad==i) 
3096:  MOVF   xA4,W
3098:  SUBWF  xA3,W
309A:  BNZ   3112
....................                { 
....................                   Contrasena[i-1]++; 
309C:  MOVLW  01
309E:  SUBWF  xA4,W
30A0:  CLRF   03
30A2:  ADDLW  CE
30A4:  MOVWF  FE9
30A6:  MOVLW  04
30A8:  ADDWFC 03,W
30AA:  MOVWF  FEA
30AC:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
30AE:  MOVLW  01
30B0:  SUBWF  xA4,W
30B2:  CLRF   03
30B4:  ADDLW  CE
30B6:  MOVWF  FE9
30B8:  MOVLW  04
30BA:  ADDWFC 03,W
30BC:  MOVWF  FEA
30BE:  BTFSC  FEF.7
30C0:  BRA    30DA
30C2:  MOVF   FEF,W
30C4:  SUBLW  09
30C6:  BC    30DA
....................                   { 
....................                      Contrasena[i-1]=0; 
30C8:  MOVLW  01
30CA:  SUBWF  xA4,W
30CC:  CLRF   03
30CE:  ADDLW  CE
30D0:  MOVWF  FE9
30D2:  MOVLW  04
30D4:  ADDWFC 03,W
30D6:  MOVWF  FEA
30D8:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
30DA:  MOVLW  01
30DC:  SUBWF  xA4,W
30DE:  CLRF   03
30E0:  ADDLW  CE
30E2:  MOVWF  FE9
30E4:  MOVLW  04
30E6:  ADDWFC 03,W
30E8:  MOVWF  FEA
30EA:  MOVFF  FEF,501
30EE:  MOVF   xA4,W
30F0:  MULLW  14
30F2:  MOVFF  FF3,502
30F6:  MOVLB  5
30F8:  MOVFF  501,503
30FC:  MOVFF  502,504
3100:  MOVLW  1E
3102:  MOVWF  x05
3104:  MOVLW  01
3106:  MOVWF  x06
3108:  MOVLB  0
310A:  CALL   185E
....................                } 
....................                else 
310E:  BRA    3144
3110:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
3112:  MOVLW  01
3114:  SUBWF  xA4,W
3116:  CLRF   03
3118:  ADDLW  CE
311A:  MOVWF  FE9
311C:  MOVLW  04
311E:  ADDWFC 03,W
3120:  MOVWF  FEA
3122:  MOVFF  FEF,501
3126:  MOVF   xA4,W
3128:  MULLW  14
312A:  MOVFF  FF3,502
312E:  MOVLB  5
3130:  MOVFF  501,503
3134:  MOVFF  502,504
3138:  MOVLW  1E
313A:  MOVWF  x05
313C:  CLRF   x06
313E:  MOVLB  0
3140:  CALL   185E
....................                } 
....................             } 
3144:  MOVLB  4
3146:  INCF   xA4,F
3148:  BRA    3090
....................          } 
....................       } 
....................          else 
314A:  BRA    3150
....................             {Flanco = 0;} 
314C:  MOVLB  4
314E:  BCF    x95.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3150:  BSF    F92.1
3152:  BTFSS  F80.1
3154:  BRA    3228
....................       { 
....................          if(Flanco2 == 0) 
3156:  BTFSC  x95.2
3158:  BRA    3226
....................             {Flanco2 = 1;delay_ms(30); 
315A:  BSF    x95.2
315C:  MOVLW  1E
315E:  MOVLB  5
3160:  MOVWF  x02
3162:  MOVLB  0
3164:  CALL   0F98
....................                for(i=1;i<=4;i++) 
3168:  MOVLW  01
316A:  MOVLB  4
316C:  MOVWF  xA4
316E:  MOVF   xA4,W
3170:  SUBLW  04
3172:  BNC   3226
....................                { 
....................                   if(unidad==i) 
3174:  MOVF   xA4,W
3176:  SUBWF  xA3,W
3178:  BNZ   31EE
....................                   {Contrasena[i-1]--;  
317A:  MOVLW  01
317C:  SUBWF  xA4,W
317E:  CLRF   03
3180:  ADDLW  CE
3182:  MOVWF  FE9
3184:  MOVLW  04
3186:  ADDWFC 03,W
3188:  MOVWF  FEA
318A:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
318C:  MOVLW  01
318E:  SUBWF  xA4,W
3190:  CLRF   03
3192:  ADDLW  CE
3194:  MOVWF  FE9
3196:  MOVLW  04
3198:  ADDWFC 03,W
319A:  MOVWF  FEA
319C:  BTFSC  FEF.7
319E:  BRA    31A2
31A0:  BRA    31B6
....................                         {Contrasena[i-1]=9;} 
31A2:  MOVLW  01
31A4:  SUBWF  xA4,W
31A6:  CLRF   03
31A8:  ADDLW  CE
31AA:  MOVWF  FE9
31AC:  MOVLW  04
31AE:  ADDWFC 03,W
31B0:  MOVWF  FEA
31B2:  MOVLW  09
31B4:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
31B6:  MOVLW  01
31B8:  SUBWF  xA4,W
31BA:  CLRF   03
31BC:  ADDLW  CE
31BE:  MOVWF  FE9
31C0:  MOVLW  04
31C2:  ADDWFC 03,W
31C4:  MOVWF  FEA
31C6:  MOVFF  FEF,501
31CA:  MOVF   xA4,W
31CC:  MULLW  14
31CE:  MOVFF  FF3,502
31D2:  MOVLB  5
31D4:  MOVFF  501,503
31D8:  MOVFF  502,504
31DC:  MOVLW  1E
31DE:  MOVWF  x05
31E0:  MOVLW  01
31E2:  MOVWF  x06
31E4:  MOVLB  0
31E6:  CALL   185E
....................                   else 
31EA:  BRA    3220
31EC:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
31EE:  MOVLW  01
31F0:  SUBWF  xA4,W
31F2:  CLRF   03
31F4:  ADDLW  CE
31F6:  MOVWF  FE9
31F8:  MOVLW  04
31FA:  ADDWFC 03,W
31FC:  MOVWF  FEA
31FE:  MOVFF  FEF,501
3202:  MOVF   xA4,W
3204:  MULLW  14
3206:  MOVFF  FF3,502
320A:  MOVLB  5
320C:  MOVFF  501,503
3210:  MOVFF  502,504
3214:  MOVLW  1E
3216:  MOVWF  x05
3218:  CLRF   x06
321A:  MOVLB  0
321C:  CALL   185E
....................                }       
3220:  MOVLB  4
3222:  INCF   xA4,F
3224:  BRA    316E
....................             }      
....................       } 
....................          else 
3226:  BRA    322A
....................             {Flanco2 = 0;}   
3228:  BCF    x95.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
322A:  BSF    F92.2
322C:  BTFSS  F80.2
322E:  BRA    32C8
....................       { 
....................          if(Flanco1 == 0) 
3230:  BTFSC  x95.1
3232:  BRA    32C6
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
3234:  BSF    x95.1
3236:  MOVLW  1E
3238:  MOVLB  5
323A:  MOVWF  x02
323C:  MOVLB  0
323E:  CALL   0F98
3242:  MOVLB  4
3244:  INCF   xA3,F
....................                for(i=1;i<=4;i++) 
3246:  MOVLW  01
3248:  MOVWF  xA4
324A:  MOVF   xA4,W
324C:  SUBLW  04
324E:  BNC   32C6
....................                { 
....................                   if(unidad==i) 
3250:  MOVF   xA4,W
3252:  SUBWF  xA3,W
3254:  BNZ   328E
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
3256:  MOVLW  01
3258:  SUBWF  xA4,W
325A:  CLRF   03
325C:  ADDLW  CE
325E:  MOVWF  FE9
3260:  MOVLW  04
3262:  ADDWFC 03,W
3264:  MOVWF  FEA
3266:  MOVFF  FEF,501
326A:  MOVF   xA4,W
326C:  MULLW  14
326E:  MOVFF  FF3,502
3272:  MOVLB  5
3274:  MOVFF  501,503
3278:  MOVFF  502,504
327C:  MOVLW  1E
327E:  MOVWF  x05
3280:  MOVLW  01
3282:  MOVWF  x06
3284:  MOVLB  0
3286:  CALL   185E
....................                   else 
328A:  BRA    32C0
328C:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
328E:  MOVLW  01
3290:  SUBWF  xA4,W
3292:  CLRF   03
3294:  ADDLW  CE
3296:  MOVWF  FE9
3298:  MOVLW  04
329A:  ADDWFC 03,W
329C:  MOVWF  FEA
329E:  MOVFF  FEF,501
32A2:  MOVF   xA4,W
32A4:  MULLW  14
32A6:  MOVFF  FF3,502
32AA:  MOVLB  5
32AC:  MOVFF  501,503
32B0:  MOVFF  502,504
32B4:  MOVLW  1E
32B6:  MOVWF  x05
32B8:  CLRF   x06
32BA:  MOVLB  0
32BC:  CALL   185E
....................                } 
32C0:  MOVLB  4
32C2:  INCF   xA4,F
32C4:  BRA    324A
....................             } 
....................       } 
....................          else 
32C6:  BRA    32CA
....................             {Flanco1 = 0;}   
32C8:  BCF    x95.1
....................      
....................       if(unidad>4) 
32CA:  MOVF   xA3,W
32CC:  SUBLW  04
32CE:  BTFSC  FD8.0
32D0:  BRA    35C0
....................       {glcd_fillScreen(OFF);unidad=4; 
32D2:  MOVLB  5
32D4:  CLRF   x02
32D6:  MOVLB  0
32D8:  CALL   1002
32DC:  MOVLW  04
32DE:  MOVLB  4
32E0:  MOVWF  xA3
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
32E2:  MOVF   xCE,W
32E4:  SUBLW  03
32E6:  BNZ   33CE
32E8:  MOVF   xCF,W
32EA:  SUBLW  08
32EC:  BNZ   33CE
32EE:  MOVF   xD0,W
32F0:  SUBLW  09
32F2:  BNZ   33CE
32F4:  MOVF   xD1,W
32F6:  SUBLW  02
32F8:  BNZ   33CE
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
32FA:  MOVLW  0A
32FC:  MOVWF  FA9
32FE:  CLRF   FA8
3300:  BCF    FA6.6
3302:  BCF    FA6.7
3304:  BSF    FA6.2
3306:  MOVF   FF2,W
3308:  MOVWF  00
330A:  BCF    FF2.7
330C:  MOVLB  F
330E:  MOVLW  55
3310:  MOVWF  FA7
3312:  MOVLW  AA
3314:  MOVWF  FA7
3316:  BSF    FA6.1
3318:  BTFSC  FA6.1
331A:  BRA    3318
331C:  BCF    FA6.2
331E:  MOVF   00,W
3320:  IORWF  FF2,F
3322:  MOVLW  14
3324:  MOVLB  5
3326:  MOVWF  x02
3328:  MOVLB  0
332A:  CALL   0F98
332E:  MOVLW  0B
3330:  MOVWF  FA9
3332:  CLRF   FA8
3334:  BCF    FA6.6
3336:  BCF    FA6.7
3338:  BSF    FA6.2
333A:  MOVF   FF2,W
333C:  MOVWF  00
333E:  BCF    FF2.7
3340:  MOVLB  F
3342:  MOVLW  55
3344:  MOVWF  FA7
3346:  MOVLW  AA
3348:  MOVWF  FA7
334A:  BSF    FA6.1
334C:  BTFSC  FA6.1
334E:  BRA    334C
3350:  BCF    FA6.2
3352:  MOVF   00,W
3354:  IORWF  FF2,F
3356:  MOVLW  14
3358:  MOVLB  5
335A:  MOVWF  x02
335C:  MOVLB  0
335E:  CALL   0F98
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
3362:  MOVLW  0C
3364:  MOVWF  FA9
3366:  CLRF   FA8
3368:  BCF    FA6.6
336A:  BCF    FA6.7
336C:  BSF    FA6.2
336E:  MOVF   FF2,W
3370:  MOVWF  00
3372:  BCF    FF2.7
3374:  MOVLB  F
3376:  MOVLW  55
3378:  MOVWF  FA7
337A:  MOVLW  AA
337C:  MOVWF  FA7
337E:  BSF    FA6.1
3380:  BTFSC  FA6.1
3382:  BRA    3380
3384:  BCF    FA6.2
3386:  MOVF   00,W
3388:  IORWF  FF2,F
338A:  MOVLW  14
338C:  MOVLB  5
338E:  MOVWF  x02
3390:  MOVLB  0
3392:  CALL   0F98
3396:  MOVLW  0D
3398:  MOVWF  FA9
339A:  CLRF   FA8
339C:  BCF    FA6.6
339E:  BCF    FA6.7
33A0:  BSF    FA6.2
33A2:  MOVF   FF2,W
33A4:  MOVWF  00
33A6:  BCF    FF2.7
33A8:  MOVLB  F
33AA:  MOVLW  55
33AC:  MOVWF  FA7
33AE:  MOVLW  AA
33B0:  MOVWF  FA7
33B2:  BSF    FA6.1
33B4:  BTFSC  FA6.1
33B6:  BRA    33B4
33B8:  BCF    FA6.2
33BA:  MOVF   00,W
33BC:  IORWF  FF2,F
33BE:  MOVLW  14
33C0:  MOVLB  5
33C2:  MOVWF  x02
33C4:  MOVLB  0
33C6:  CALL   0F98
....................              reset_cpu();}         
33CA:  RESET
33CC:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
33CE:  MOVF   xD2,W
33D0:  SUBWF  xCE,W
33D2:  BNZ   34A4
33D4:  MOVF   xD3,W
33D6:  SUBWF  xCF,W
33D8:  BNZ   34A4
33DA:  MOVF   xD4,W
33DC:  SUBWF  xD0,W
33DE:  BNZ   34A4
33E0:  MOVF   xD5,W
33E2:  SUBWF  xD1,W
33E4:  BNZ   34A4
....................          { 
....................             glcd_fillScreen(OFF); 
33E6:  MOVLB  5
33E8:  CLRF   x02
33EA:  MOVLB  0
33EC:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
33F0:  MOVLW  04
33F2:  MOVWF  FEA
33F4:  MOVLW  E1
33F6:  MOVWF  FE9
33F8:  MOVFF  FF2,501
33FC:  BCF    FF2.7
33FE:  MOVLW  00
3400:  CALL   0758
3404:  TBLRD*-
3406:  TBLRD*+
3408:  MOVF   FF5,W
340A:  MOVWF  FEE
340C:  IORLW  00
340E:  BNZ   3406
3410:  MOVLB  5
3412:  BTFSC  x01.7
3414:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3416:  MOVLW  04
3418:  MOVWF  x02
341A:  MOVLW  E1
341C:  MOVWF  x01
341E:  MOVLW  1E
3420:  MOVWF  x03
3422:  CLRF   x04
3424:  CLRF   x05
3426:  MOVLW  02
3428:  MOVWF  x06
342A:  MOVLB  0
342C:  CALL   1630
....................             strcpy(Menus.Letra,"Correcta"); 
3430:  MOVLW  04
3432:  MOVWF  FEA
3434:  MOVLW  E1
3436:  MOVWF  FE9
3438:  MOVFF  FF2,501
343C:  BCF    FF2.7
343E:  MOVLW  00
3440:  CALL   0778
3444:  TBLRD*-
3446:  TBLRD*+
3448:  MOVF   FF5,W
344A:  MOVWF  FEE
344C:  IORLW  00
344E:  BNZ   3446
3450:  MOVLB  5
3452:  BTFSC  x01.7
3454:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
3456:  MOVLW  04
3458:  MOVWF  x02
345A:  MOVLW  E1
345C:  MOVWF  x01
345E:  MOVLW  0F
3460:  MOVWF  x03
3462:  MOVLW  1E
3464:  MOVWF  x04
3466:  CLRF   x05
3468:  MOVLW  02
346A:  MOVWF  x06
346C:  MOVLB  0
346E:  CALL   1630
....................             Menu=1;glcd_update();delay_ms(1000); 
3472:  MOVLW  01
3474:  MOVLB  4
3476:  MOVWF  xA2
3478:  MOVLB  0
347A:  CALL   105C
347E:  MOVLW  04
3480:  MOVLB  5
3482:  MOVWF  x01
3484:  MOVLW  FA
3486:  MOVWF  x02
3488:  MOVLB  0
348A:  CALL   0F98
348E:  MOVLB  5
3490:  DECFSZ x01,F
3492:  BRA    3484
....................             glcd_fillScreen(OFF);unidad=1; 
3494:  CLRF   x02
3496:  MOVLB  0
3498:  CALL   1002
349C:  MOVLW  01
349E:  MOVLB  4
34A0:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
34A2:  BRA    35C0
....................          { 
....................             glcd_fillScreen(OFF); 
34A4:  MOVLB  5
34A6:  CLRF   x02
34A8:  MOVLB  0
34AA:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
34AE:  MOVLW  04
34B0:  MOVWF  FEA
34B2:  MOVLW  E1
34B4:  MOVWF  FE9
34B6:  MOVFF  FF2,501
34BA:  BCF    FF2.7
34BC:  MOVLW  00
34BE:  CALL   0758
34C2:  TBLRD*-
34C4:  TBLRD*+
34C6:  MOVF   FF5,W
34C8:  MOVWF  FEE
34CA:  IORLW  00
34CC:  BNZ   34C4
34CE:  MOVLB  5
34D0:  BTFSC  x01.7
34D2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
34D4:  MOVLW  04
34D6:  MOVWF  x02
34D8:  MOVLW  E1
34DA:  MOVWF  x01
34DC:  MOVLW  1E
34DE:  MOVWF  x03
34E0:  CLRF   x04
34E2:  CLRF   x05
34E4:  MOVLW  02
34E6:  MOVWF  x06
34E8:  MOVLB  0
34EA:  CALL   1630
....................             strcpy(Menus.Letra,"Incorrecta"); 
34EE:  MOVLW  04
34F0:  MOVWF  FEA
34F2:  MOVLW  E1
34F4:  MOVWF  FE9
34F6:  MOVFF  FF2,501
34FA:  BCF    FF2.7
34FC:  MOVLW  00
34FE:  CALL   079C
3502:  TBLRD*-
3504:  TBLRD*+
3506:  MOVF   FF5,W
3508:  MOVWF  FEE
350A:  IORLW  00
350C:  BNZ   3504
350E:  MOVLB  5
3510:  BTFSC  x01.7
3512:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
3514:  MOVLW  04
3516:  MOVWF  x02
3518:  MOVLW  E1
351A:  MOVWF  x01
351C:  CLRF   x03
351E:  MOVLW  1E
3520:  MOVWF  x04
3522:  CLRF   x05
3524:  MOVLW  02
3526:  MOVWF  x06
3528:  MOVLB  0
352A:  CALL   1630
....................             Menu=0;glcd_update();delay_ms(1000); 
352E:  MOVLB  4
3530:  CLRF   xA2
3532:  MOVLB  0
3534:  CALL   105C
3538:  MOVLW  04
353A:  MOVLB  5
353C:  MOVWF  x01
353E:  MOVLW  FA
3540:  MOVWF  x02
3542:  MOVLB  0
3544:  CALL   0F98
3548:  MOVLB  5
354A:  DECFSZ x01,F
354C:  BRA    353E
....................             glcd_fillScreen(OFF);unidad=1; 
354E:  CLRF   x02
3550:  MOVLB  0
3552:  CALL   1002
3556:  MOVLW  01
3558:  MOVLB  4
355A:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
355C:  CLRF   xCE
355E:  CLRF   xCF
3560:  CLRF   xD0
3562:  CLRF   xD1
....................             displayContrasena(Contrasena[0],20,30,1); 
3564:  MOVFF  4CE,503
3568:  MOVLW  14
356A:  MOVLB  5
356C:  MOVWF  x04
356E:  MOVLW  1E
3570:  MOVWF  x05
3572:  MOVLW  01
3574:  MOVWF  x06
3576:  MOVLB  0
3578:  CALL   185E
....................             displayContrasena(Contrasena[1],40,30,0); 
357C:  MOVFF  4CF,503
3580:  MOVLW  28
3582:  MOVLB  5
3584:  MOVWF  x04
3586:  MOVLW  1E
3588:  MOVWF  x05
358A:  CLRF   x06
358C:  MOVLB  0
358E:  CALL   185E
....................             displayContrasena(Contrasena[2],60,30,0); 
3592:  MOVFF  4D0,503
3596:  MOVLW  3C
3598:  MOVLB  5
359A:  MOVWF  x04
359C:  MOVLW  1E
359E:  MOVWF  x05
35A0:  CLRF   x06
35A2:  MOVLB  0
35A4:  CALL   185E
....................             displayContrasena(Contrasena[3],80,30,0); 
35A8:  MOVFF  4D1,503
35AC:  MOVLW  50
35AE:  MOVLB  5
35B0:  MOVWF  x04
35B2:  MOVLW  1E
35B4:  MOVWF  x05
35B6:  CLRF   x06
35B8:  MOVLB  0
35BA:  CALL   185E
35BE:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
35C0:  DECFSZ xA2,W
35C2:  BRA    39F8
....................        
....................       if(visual==1) 
35C4:  BTFSS  x95.4
35C6:  BRA    397E
....................       { 
....................          if(Opcion>6) 
35C8:  MOVF   xA7,W
35CA:  SUBLW  06
35CC:  BC    35D2
....................          {Opcion=1;} 
35CE:  MOVLW  01
35D0:  MOVWF  xA7
....................          if(Opcion<1) 
35D2:  MOVF   xA7,F
35D4:  BNZ   35DA
....................          {Opcion=6;} 
35D6:  MOVLW  06
35D8:  MOVWF  xA7
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
35DA:  MOVLW  04
35DC:  MOVWF  FEA
35DE:  MOVLW  E1
35E0:  MOVWF  FE9
35E2:  MOVFF  FF2,501
35E6:  BCF    FF2.7
35E8:  MOVLW  00
35EA:  MOVLB  0
35EC:  CALL   07C2
35F0:  TBLRD*-
35F2:  TBLRD*+
35F4:  MOVF   FF5,W
35F6:  MOVWF  FEE
35F8:  IORLW  00
35FA:  BNZ   35F2
35FC:  MOVLB  5
35FE:  BTFSC  x01.7
3600:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
3602:  MOVLW  04
3604:  MOVWF  x02
3606:  MOVLW  E1
3608:  MOVWF  x01
360A:  MOVLW  1E
360C:  MOVWF  x03
360E:  CLRF   x04
3610:  MOVLW  01
3612:  MOVWF  x05
3614:  MOVWF  x06
3616:  MOVLB  0
3618:  CALL   1630
....................        
....................          if(Opcion==1)    
361C:  MOVLB  4
361E:  DECFSZ xA7,W
3620:  BRA    3668
....................             {strcpy(Menus.Letra,"Caucho"); 
3622:  MOVLW  04
3624:  MOVWF  FEA
3626:  MOVLW  E1
3628:  MOVWF  FE9
362A:  MOVFF  FF2,501
362E:  BCF    FF2.7
3630:  MOVLW  00
3632:  MOVLB  0
3634:  CALL   07EC
3638:  TBLRD*-
363A:  TBLRD*+
363C:  MOVF   FF5,W
363E:  MOVWF  FEE
3640:  IORLW  00
3642:  BNZ   363A
3644:  MOVLB  5
3646:  BTFSC  x01.7
3648:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
364A:  MOVLW  04
364C:  MOVWF  x02
364E:  MOVLW  E1
3650:  MOVWF  x01
3652:  CLRF   x03
3654:  MOVLW  0A
3656:  MOVWF  x04
3658:  MOVLW  01
365A:  MOVWF  x05
365C:  MOVWF  x06
365E:  MOVLB  0
3660:  CALL   1630
....................          else 
3664:  BRA    36AA
3666:  MOVLB  4
....................             {strcpy(Menus.Letra,"Caucho"); 
3668:  MOVLW  04
366A:  MOVWF  FEA
366C:  MOVLW  E1
366E:  MOVWF  FE9
3670:  MOVFF  FF2,501
3674:  BCF    FF2.7
3676:  MOVLW  00
3678:  MOVLB  0
367A:  CALL   07EC
367E:  TBLRD*-
3680:  TBLRD*+
3682:  MOVF   FF5,W
3684:  MOVWF  FEE
3686:  IORLW  00
3688:  BNZ   3680
368A:  MOVLB  5
368C:  BTFSC  x01.7
368E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
3690:  MOVLW  04
3692:  MOVWF  x02
3694:  MOVLW  E1
3696:  MOVWF  x01
3698:  CLRF   x03
369A:  MOVLW  0A
369C:  MOVWF  x04
369E:  CLRF   x05
36A0:  MOVLW  01
36A2:  MOVWF  x06
36A4:  MOVLB  0
36A6:  CALL   1630
....................           
....................          if(Opcion==2)    
36AA:  MOVLB  4
36AC:  MOVF   xA7,W
36AE:  SUBLW  02
36B0:  BNZ   36F8
....................             {strcpy(Menus.Letra,"Liquidos"); 
36B2:  MOVLW  04
36B4:  MOVWF  FEA
36B6:  MOVLW  E1
36B8:  MOVWF  FE9
36BA:  MOVFF  FF2,501
36BE:  BCF    FF2.7
36C0:  MOVLW  00
36C2:  MOVLB  0
36C4:  CALL   080E
36C8:  TBLRD*-
36CA:  TBLRD*+
36CC:  MOVF   FF5,W
36CE:  MOVWF  FEE
36D0:  IORLW  00
36D2:  BNZ   36CA
36D4:  MOVLB  5
36D6:  BTFSC  x01.7
36D8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
36DA:  MOVLW  04
36DC:  MOVWF  x02
36DE:  MOVLW  E1
36E0:  MOVWF  x01
36E2:  CLRF   x03
36E4:  MOVLW  13
36E6:  MOVWF  x04
36E8:  MOVLW  01
36EA:  MOVWF  x05
36EC:  MOVWF  x06
36EE:  MOVLB  0
36F0:  CALL   1630
....................          else 
36F4:  BRA    373A
36F6:  MOVLB  4
....................             {strcpy(Menus.Letra,"Liquidos"); 
36F8:  MOVLW  04
36FA:  MOVWF  FEA
36FC:  MOVLW  E1
36FE:  MOVWF  FE9
3700:  MOVFF  FF2,501
3704:  BCF    FF2.7
3706:  MOVLW  00
3708:  MOVLB  0
370A:  CALL   080E
370E:  TBLRD*-
3710:  TBLRD*+
3712:  MOVF   FF5,W
3714:  MOVWF  FEE
3716:  IORLW  00
3718:  BNZ   3710
371A:  MOVLB  5
371C:  BTFSC  x01.7
371E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
3720:  MOVLW  04
3722:  MOVWF  x02
3724:  MOVLW  E1
3726:  MOVWF  x01
3728:  CLRF   x03
372A:  MOVLW  13
372C:  MOVWF  x04
372E:  CLRF   x05
3730:  MOVLW  01
3732:  MOVWF  x06
3734:  MOVLB  0
3736:  CALL   1630
....................              
....................           if(Opcion==3)    
373A:  MOVLB  4
373C:  MOVF   xA7,W
373E:  SUBLW  03
3740:  BNZ   3788
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
3742:  MOVLW  04
3744:  MOVWF  FEA
3746:  MOVLW  E1
3748:  MOVWF  FE9
374A:  MOVFF  FF2,501
374E:  BCF    FF2.7
3750:  MOVLW  00
3752:  MOVLB  0
3754:  CALL   0832
3758:  TBLRD*-
375A:  TBLRD*+
375C:  MOVF   FF5,W
375E:  MOVWF  FEE
3760:  IORLW  00
3762:  BNZ   375A
3764:  MOVLB  5
3766:  BTFSC  x01.7
3768:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
376A:  MOVLW  04
376C:  MOVWF  x02
376E:  MOVLW  E1
3770:  MOVWF  x01
3772:  CLRF   x03
3774:  MOVLW  1C
3776:  MOVWF  x04
3778:  MOVLW  01
377A:  MOVWF  x05
377C:  MOVWF  x06
377E:  MOVLB  0
3780:  CALL   1630
....................          else 
3784:  BRA    37CA
3786:  MOVLB  4
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
3788:  MOVLW  04
378A:  MOVWF  FEA
378C:  MOVLW  E1
378E:  MOVWF  FE9
3790:  MOVFF  FF2,501
3794:  BCF    FF2.7
3796:  MOVLW  00
3798:  MOVLB  0
379A:  CALL   0832
379E:  TBLRD*-
37A0:  TBLRD*+
37A2:  MOVF   FF5,W
37A4:  MOVWF  FEE
37A6:  IORLW  00
37A8:  BNZ   37A0
37AA:  MOVLB  5
37AC:  BTFSC  x01.7
37AE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
37B0:  MOVLW  04
37B2:  MOVWF  x02
37B4:  MOVLW  E1
37B6:  MOVWF  x01
37B8:  CLRF   x03
37BA:  MOVLW  1C
37BC:  MOVWF  x04
37BE:  CLRF   x05
37C0:  MOVLW  01
37C2:  MOVWF  x06
37C4:  MOVLB  0
37C6:  CALL   1630
....................              
....................          if(Opcion==4)    
37CA:  MOVLB  4
37CC:  MOVF   xA7,W
37CE:  SUBLW  04
37D0:  BNZ   3818
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
37D2:  MOVLW  04
37D4:  MOVWF  FEA
37D6:  MOVLW  E1
37D8:  MOVWF  FE9
37DA:  MOVFF  FF2,501
37DE:  BCF    FF2.7
37E0:  MOVLW  00
37E2:  MOVLB  0
37E4:  CALL   0860
37E8:  TBLRD*-
37EA:  TBLRD*+
37EC:  MOVF   FF5,W
37EE:  MOVWF  FEE
37F0:  IORLW  00
37F2:  BNZ   37EA
37F4:  MOVLB  5
37F6:  BTFSC  x01.7
37F8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
37FA:  MOVLW  04
37FC:  MOVWF  x02
37FE:  MOVLW  E1
3800:  MOVWF  x01
3802:  CLRF   x03
3804:  MOVLW  25
3806:  MOVWF  x04
3808:  MOVLW  01
380A:  MOVWF  x05
380C:  MOVWF  x06
380E:  MOVLB  0
3810:  CALL   1630
....................          else 
3814:  BRA    385A
3816:  MOVLB  4
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
3818:  MOVLW  04
381A:  MOVWF  FEA
381C:  MOVLW  E1
381E:  MOVWF  FE9
3820:  MOVFF  FF2,501
3824:  BCF    FF2.7
3826:  MOVLW  00
3828:  MOVLB  0
382A:  CALL   0860
382E:  TBLRD*-
3830:  TBLRD*+
3832:  MOVF   FF5,W
3834:  MOVWF  FEE
3836:  IORLW  00
3838:  BNZ   3830
383A:  MOVLB  5
383C:  BTFSC  x01.7
383E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
3840:  MOVLW  04
3842:  MOVWF  x02
3844:  MOVLW  E1
3846:  MOVWF  x01
3848:  CLRF   x03
384A:  MOVLW  25
384C:  MOVWF  x04
384E:  CLRF   x05
3850:  MOVLW  01
3852:  MOVWF  x06
3854:  MOVLB  0
3856:  CALL   1630
....................              
....................          if(Opcion==5)    
385A:  MOVLB  4
385C:  MOVF   xA7,W
385E:  SUBLW  05
3860:  BNZ   38A8
....................             {strcpy(Menus.Letra,"Personalizado"); 
3862:  MOVLW  04
3864:  MOVWF  FEA
3866:  MOVLW  E1
3868:  MOVWF  FE9
386A:  MOVFF  FF2,501
386E:  BCF    FF2.7
3870:  MOVLW  00
3872:  MOVLB  0
3874:  CALL   0890
3878:  TBLRD*-
387A:  TBLRD*+
387C:  MOVF   FF5,W
387E:  MOVWF  FEE
3880:  IORLW  00
3882:  BNZ   387A
3884:  MOVLB  5
3886:  BTFSC  x01.7
3888:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
388A:  MOVLW  04
388C:  MOVWF  x02
388E:  MOVLW  E1
3890:  MOVWF  x01
3892:  CLRF   x03
3894:  MOVLW  2E
3896:  MOVWF  x04
3898:  MOVLW  01
389A:  MOVWF  x05
389C:  MOVWF  x06
389E:  MOVLB  0
38A0:  CALL   1630
....................          else 
38A4:  BRA    38EA
38A6:  MOVLB  4
....................             {strcpy(Menus.Letra,"Personalizado"); 
38A8:  MOVLW  04
38AA:  MOVWF  FEA
38AC:  MOVLW  E1
38AE:  MOVWF  FE9
38B0:  MOVFF  FF2,501
38B4:  BCF    FF2.7
38B6:  MOVLW  00
38B8:  MOVLB  0
38BA:  CALL   0890
38BE:  TBLRD*-
38C0:  TBLRD*+
38C2:  MOVF   FF5,W
38C4:  MOVWF  FEE
38C6:  IORLW  00
38C8:  BNZ   38C0
38CA:  MOVLB  5
38CC:  BTFSC  x01.7
38CE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
38D0:  MOVLW  04
38D2:  MOVWF  x02
38D4:  MOVLW  E1
38D6:  MOVWF  x01
38D8:  CLRF   x03
38DA:  MOVLW  2E
38DC:  MOVWF  x04
38DE:  CLRF   x05
38E0:  MOVLW  01
38E2:  MOVWF  x06
38E4:  MOVLB  0
38E6:  CALL   1630
....................              
....................          if(Opcion==6)    
38EA:  MOVLB  4
38EC:  MOVF   xA7,W
38EE:  SUBLW  06
38F0:  BNZ   3938
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
38F2:  MOVLW  04
38F4:  MOVWF  FEA
38F6:  MOVLW  E1
38F8:  MOVWF  FE9
38FA:  MOVFF  FF2,501
38FE:  BCF    FF2.7
3900:  MOVLW  00
3902:  MOVLB  0
3904:  CALL   08B8
3908:  TBLRD*-
390A:  TBLRD*+
390C:  MOVF   FF5,W
390E:  MOVWF  FEE
3910:  IORLW  00
3912:  BNZ   390A
3914:  MOVLB  5
3916:  BTFSC  x01.7
3918:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
391A:  MOVLW  04
391C:  MOVWF  x02
391E:  MOVLW  E1
3920:  MOVWF  x01
3922:  CLRF   x03
3924:  MOVLW  37
3926:  MOVWF  x04
3928:  MOVLW  01
392A:  MOVWF  x05
392C:  MOVWF  x06
392E:  MOVLB  0
3930:  CALL   1630
....................          else 
3934:  BRA    397A
3936:  MOVLB  4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3938:  MOVLW  04
393A:  MOVWF  FEA
393C:  MOVLW  E1
393E:  MOVWF  FE9
3940:  MOVFF  FF2,501
3944:  BCF    FF2.7
3946:  MOVLW  00
3948:  MOVLB  0
394A:  CALL   08B8
394E:  TBLRD*-
3950:  TBLRD*+
3952:  MOVF   FF5,W
3954:  MOVWF  FEE
3956:  IORLW  00
3958:  BNZ   3950
395A:  MOVLB  5
395C:  BTFSC  x01.7
395E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
3960:  MOVLW  04
3962:  MOVWF  x02
3964:  MOVLW  E1
3966:  MOVWF  x01
3968:  CLRF   x03
396A:  MOVLW  37
396C:  MOVWF  x04
396E:  CLRF   x05
3970:  MOVLW  01
3972:  MOVWF  x06
3974:  MOVLB  0
3976:  CALL   1630
....................             visual=0; 
397A:  MOVLB  4
397C:  BCF    x95.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
397E:  BSF    F92.0
3980:  BTFSS  F80.0
3982:  BRA    399E
....................          {  if(Flanco == 0)  
3984:  BTFSC  x95.0
3986:  BRA    399C
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3988:  BSF    x95.0
398A:  MOVLW  1E
398C:  MOVLB  5
398E:  MOVWF  x02
3990:  MOVLB  0
3992:  CALL   0F98
3996:  MOVLB  4
3998:  DECF   xA7,F
399A:  BSF    x95.4
....................                } 
....................          } 
....................             else 
399C:  BRA    39A0
....................                {Flanco = 0;} 
399E:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
39A0:  BSF    F92.1
39A2:  BTFSS  F80.1
39A4:  BRA    39C0
....................          {  if(Flanco2 == 0)  
39A6:  BTFSC  x95.2
39A8:  BRA    39BE
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
39AA:  BSF    x95.2
39AC:  MOVLW  1E
39AE:  MOVLB  5
39B0:  MOVWF  x02
39B2:  MOVLB  0
39B4:  CALL   0F98
39B8:  MOVLB  4
39BA:  INCF   xA7,F
39BC:  BSF    x95.4
....................                }      
....................          } 
....................             else 
39BE:  BRA    39C2
....................                {Flanco2 = 0;}   
39C0:  BCF    x95.2
....................                 
....................        if(RIGHT)//Si oprime SET 
39C2:  BSF    F92.2
39C4:  BTFSS  F80.2
39C6:  BRA    39F6
....................          {  if(Flanco1 == 0)  
39C8:  BTFSC  x95.1
39CA:  BRA    39F4
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
39CC:  BSF    x95.1
39CE:  MOVLW  1E
39D0:  MOVLB  5
39D2:  MOVWF  x02
39D4:  MOVLB  0
39D6:  CALL   0F98
39DA:  MOVLW  03
39DC:  MOVLB  4
39DE:  ADDWF  xA7,W
39E0:  MOVWF  xA2
39E2:  MOVLW  01
39E4:  MOVWF  xA7
39E6:  MOVLB  5
39E8:  CLRF   x02
39EA:  MOVLB  0
39EC:  CALL   1002
39F0:  MOVLB  4
39F2:  BSF    x95.4
....................                } 
....................          } 
....................             else 
39F4:  BRA    39F8
....................                {Flanco1 = 0;}   
39F6:  BCF    x95.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
39F8:  MOVF   xA2,W
39FA:  SUBLW  04
39FC:  BTFSS  FD8.2
39FE:  BRA    3D2C
....................        
....................       if(visual==1) 
3A00:  BTFSS  x95.4
3A02:  BRA    3B58
....................       { 
....................          glcd_imagen(2); //Guante 
3A04:  MOVLW  02
3A06:  MOVLB  5
3A08:  MOVWF  x01
3A0A:  MOVLB  0
3A0C:  CALL   207A
....................          strcpy(Menus.Letra,"Caucho"); 
3A10:  MOVLW  04
3A12:  MOVWF  FEA
3A14:  MOVLW  E1
3A16:  MOVWF  FE9
3A18:  MOVFF  FF2,501
3A1C:  BCF    FF2.7
3A1E:  MOVLW  00
3A20:  CALL   07EC
3A24:  TBLRD*-
3A26:  TBLRD*+
3A28:  MOVF   FF5,W
3A2A:  MOVWF  FEE
3A2C:  IORLW  00
3A2E:  BNZ   3A26
3A30:  MOVLB  5
3A32:  BTFSC  x01.7
3A34:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3A36:  MOVLW  04
3A38:  MOVWF  x02
3A3A:  MOVLW  E1
3A3C:  MOVWF  x01
3A3E:  MOVLW  14
3A40:  MOVWF  x03
3A42:  CLRF   x04
3A44:  MOVLW  01
3A46:  MOVWF  x05
3A48:  MOVLW  02
3A4A:  MOVWF  x06
3A4C:  MOVLB  0
3A4E:  CALL   1630
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3A52:  MOVLW  04
3A54:  MOVWF  FEA
3A56:  MOVLW  E1
3A58:  MOVWF  FE9
3A5A:  MOVFF  FF2,501
3A5E:  BCF    FF2.7
3A60:  MOVLW  00
3A62:  CALL   07EC
3A66:  TBLRD*-
3A68:  TBLRD*+
3A6A:  MOVF   FF5,W
3A6C:  MOVWF  FEE
3A6E:  IORLW  00
3A70:  BNZ   3A68
3A72:  MOVLB  5
3A74:  BTFSC  x01.7
3A76:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3A78:  MOVLW  04
3A7A:  MOVWF  x02
3A7C:  MOVLW  E1
3A7E:  MOVWF  x01
3A80:  MOVLW  07
3A82:  MOVWF  x03
3A84:  MOVLW  37
3A86:  MOVWF  x04
3A88:  CLRF   x05
3A8A:  MOVLW  01
3A8C:  MOVWF  x06
3A8E:  MOVLB  0
3A90:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3A94:  MOVLW  04
3A96:  MOVWF  FEA
3A98:  MOVLW  E1
3A9A:  MOVWF  FE9
3A9C:  MOVFF  FF2,501
3AA0:  BCF    FF2.7
3AA2:  MOVLW  00
3AA4:  CALL   08E0
3AA8:  TBLRD*-
3AAA:  TBLRD*+
3AAC:  MOVF   FF5,W
3AAE:  MOVWF  FEE
3AB0:  IORLW  00
3AB2:  BNZ   3AAA
3AB4:  MOVLB  5
3AB6:  BTFSC  x01.7
3AB8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3ABA:  MOVLW  04
3ABC:  MOVWF  x02
3ABE:  MOVLW  E1
3AC0:  MOVWF  x01
3AC2:  CLRF   x03
3AC4:  MOVLW  1A
3AC6:  MOVWF  x04
3AC8:  CLRF   x05
3ACA:  MOVLW  01
3ACC:  MOVWF  x06
3ACE:  MOVLB  0
3AD0:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
3AD4:  MOVLW  04
3AD6:  MOVWF  FEA
3AD8:  MOVLW  E1
3ADA:  MOVWF  FE9
3ADC:  MOVFF  FF2,501
3AE0:  BCF    FF2.7
3AE2:  MOVLW  00
3AE4:  CALL   090C
3AE8:  TBLRD*-
3AEA:  TBLRD*+
3AEC:  MOVF   FF5,W
3AEE:  MOVWF  FEE
3AF0:  IORLW  00
3AF2:  BNZ   3AEA
3AF4:  MOVLB  5
3AF6:  BTFSC  x01.7
3AF8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3AFA:  MOVLW  04
3AFC:  MOVWF  x02
3AFE:  MOVLW  E1
3B00:  MOVWF  x01
3B02:  CLRF   x03
3B04:  MOVLW  24
3B06:  MOVWF  x04
3B08:  CLRF   x05
3B0A:  MOVLW  01
3B0C:  MOVWF  x06
3B0E:  MOVLB  0
3B10:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3B14:  MOVLW  04
3B16:  MOVWF  FEA
3B18:  MOVLW  E1
3B1A:  MOVWF  FE9
3B1C:  MOVFF  FF2,501
3B20:  BCF    FF2.7
3B22:  MOVLW  00
3B24:  CALL   093C
3B28:  TBLRD*-
3B2A:  TBLRD*+
3B2C:  MOVF   FF5,W
3B2E:  MOVWF  FEE
3B30:  IORLW  00
3B32:  BNZ   3B2A
3B34:  MOVLB  5
3B36:  BTFSC  x01.7
3B38:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3B3A:  MOVLW  04
3B3C:  MOVWF  x02
3B3E:  MOVLW  E1
3B40:  MOVWF  x01
3B42:  CLRF   x03
3B44:  MOVLW  2E
3B46:  MOVWF  x04
3B48:  CLRF   x05
3B4A:  MOVLW  01
3B4C:  MOVWF  x06
3B4E:  MOVLB  0
3B50:  CALL   1630
....................          visual=0; 
3B54:  MOVLB  4
3B56:  BCF    x95.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3B58:  BSF    F92.3
3B5A:  BTFSS  F80.3
3B5C:  BRA    3B7E
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3B5E:  MOVLW  1E
3B60:  MOVLB  5
3B62:  MOVWF  x02
3B64:  MOVLB  0
3B66:  CALL   0F98
3B6A:  MOVLW  01
3B6C:  MOVLB  4
3B6E:  MOVWF  xA2
3B70:  MOVLB  5
3B72:  CLRF   x02
3B74:  MOVLB  0
3B76:  CALL   1002
3B7A:  MOVLB  4
3B7C:  BSF    x95.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3B7E:  BSF    F92.2
3B80:  BTFSS  F80.2
3B82:  BRA    3D2C
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
3B84:  CLRF   xC2
3B86:  CLRF   xC3
3B88:  MOVLW  05
3B8A:  MOVWF  xC4
3B8C:  MOVLW  02
3B8E:  MOVWF  xC5
3B90:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3B92:  CLRF   xCA
3B94:  CLRF   xCB
3B96:  MOVLW  05
3B98:  MOVWF  xCC
3B9A:  MOVLW  01
3B9C:  MOVWF  xCD
3B9E:  CLRF   xB3
3BA0:  CLRF   xB2
3BA2:  MOVLW  79
3BA4:  MOVWF  xA5
3BA6:  MOVLW  14
3BA8:  MOVWF  xA2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3BAA:  MOVWF  xA2
3BAC:  MOVLW  0F
3BAE:  MOVLB  5
3BB0:  MOVWF  x13
3BB2:  MOVLW  12
3BB4:  MOVWF  x14
3BB6:  MOVLW  1E
3BB8:  MOVWF  x15
3BBA:  MOVLW  35
3BBC:  MOVWF  x16
3BBE:  CLRF   x17
3BC0:  MOVLW  01
3BC2:  MOVWF  x18
3BC4:  MOVLB  0
3BC6:  CALL   156E
3BCA:  MOVLB  4
3BCC:  CLRF   xA9
3BCE:  MOVLW  C0
3BD0:  IORWF  FF2,F
3BD2:  MOVLB  5
3BD4:  CLRF   x02
3BD6:  MOVLB  0
3BD8:  CALL   1002
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3BDC:  MOVLW  04
3BDE:  MOVWF  FEA
3BE0:  MOVLW  E1
3BE2:  MOVWF  FE9
3BE4:  MOVFF  FF2,501
3BE8:  BCF    FF2.7
3BEA:  MOVLW  00
3BEC:  CALL   0966
3BF0:  TBLRD*-
3BF2:  TBLRD*+
3BF4:  MOVF   FF5,W
3BF6:  MOVWF  FEE
3BF8:  IORLW  00
3BFA:  BNZ   3BF2
3BFC:  MOVLB  5
3BFE:  BTFSC  x01.7
3C00:  BSF    FF2.7
3C02:  MOVLW  04
3C04:  MOVWF  x02
3C06:  MOVLW  E1
3C08:  MOVWF  x01
3C0A:  CLRF   x03
3C0C:  MOVLW  37
3C0E:  MOVWF  x04
3C10:  MOVLW  02
3C12:  MOVWF  x05
3C14:  MOVLW  01
3C16:  MOVWF  x06
3C18:  MOVLB  0
3C1A:  CALL   1630
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3C1E:  MOVLW  0F
3C20:  MOVLB  5
3C22:  MOVWF  x13
3C24:  MOVLW  12
3C26:  MOVWF  x14
3C28:  MOVLW  1E
3C2A:  MOVWF  x15
3C2C:  MOVLW  35
3C2E:  MOVWF  x16
3C30:  CLRF   x17
3C32:  MOVLW  01
3C34:  MOVWF  x18
3C36:  MOVLB  0
3C38:  CALL   156E
....................          glcd_imagen(5); 
3C3C:  MOVLW  05
3C3E:  MOVLB  5
3C40:  MOVWF  x01
3C42:  MOVLB  0
3C44:  CALL   207A
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3C48:  MOVLW  04
3C4A:  MOVWF  FEA
3C4C:  MOVLW  E1
3C4E:  MOVWF  FE9
3C50:  MOVFF  FF2,501
3C54:  BCF    FF2.7
3C56:  MOVLW  00
3C58:  CALL   098C
3C5C:  TBLRD*-
3C5E:  TBLRD*+
3C60:  MOVF   FF5,W
3C62:  MOVWF  FEE
3C64:  IORLW  00
3C66:  BNZ   3C5E
3C68:  MOVLB  5
3C6A:  BTFSC  x01.7
3C6C:  BSF    FF2.7
3C6E:  MOVLW  04
3C70:  MOVWF  x02
3C72:  MOVLW  E1
3C74:  MOVWF  x01
3C76:  CLRF   x03
3C78:  CLRF   x04
3C7A:  MOVLW  02
3C7C:  MOVWF  x05
3C7E:  MOVLW  01
3C80:  MOVWF  x06
3C82:  MOVLB  0
3C84:  CALL   1630
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3C88:  MOVLW  04
3C8A:  MOVWF  FEA
3C8C:  MOVLW  E1
3C8E:  MOVWF  FE9
3C90:  MOVFF  FF2,501
3C94:  BCF    FF2.7
3C96:  MOVLW  00
3C98:  CALL   09AE
3C9C:  TBLRD*-
3C9E:  TBLRD*+
3CA0:  MOVF   FF5,W
3CA2:  MOVWF  FEE
3CA4:  IORLW  00
3CA6:  BNZ   3C9E
3CA8:  MOVLB  5
3CAA:  BTFSC  x01.7
3CAC:  BSF    FF2.7
3CAE:  MOVLW  04
3CB0:  MOVWF  x02
3CB2:  MOVLW  E1
3CB4:  MOVWF  x01
3CB6:  CLRF   x03
3CB8:  MOVLW  08
3CBA:  MOVWF  x04
3CBC:  MOVLW  02
3CBE:  MOVWF  x05
3CC0:  MOVLW  01
3CC2:  MOVWF  x06
3CC4:  MOVLB  0
3CC6:  CALL   1630
....................          glcd_circle(95,40,2,NO,ON); 
3CCA:  MOVLW  5F
3CCC:  MOVLB  5
3CCE:  MOVWF  x01
3CD0:  MOVLW  28
3CD2:  MOVWF  x02
3CD4:  MOVLW  02
3CD6:  MOVWF  x03
3CD8:  CLRF   x04
3CDA:  MOVLW  01
3CDC:  MOVWF  x05
3CDE:  MOVLB  0
3CE0:  CALL   2176
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3CE4:  MOVLW  04
3CE6:  MOVWF  FEA
3CE8:  MOVLW  E1
3CEA:  MOVWF  FE9
3CEC:  MOVFF  FF2,501
3CF0:  BCF    FF2.7
3CF2:  MOVLW  00
3CF4:  CALL   09D0
3CF8:  TBLRD*-
3CFA:  TBLRD*+
3CFC:  MOVF   FF5,W
3CFE:  MOVWF  FEE
3D00:  IORLW  00
3D02:  BNZ   3CFA
3D04:  MOVLB  5
3D06:  BTFSC  x01.7
3D08:  BSF    FF2.7
3D0A:  MOVLW  04
3D0C:  MOVWF  x02
3D0E:  MOVLW  E1
3D10:  MOVWF  x01
3D12:  MOVLW  66
3D14:  MOVWF  x03
3D16:  MOVLW  28
3D18:  MOVWF  x04
3D1A:  MOVLW  02
3D1C:  MOVWF  x05
3D1E:  MOVWF  x06
3D20:  MOVLB  0
3D22:  CALL   1630
....................          MuestraTiemposProgramados(); 
3D26:  CALL   257E
3D2A:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
3D2C:  MOVF   xA2,W
3D2E:  SUBLW  05
3D30:  BTFSS  FD8.2
3D32:  BRA    3EF8
....................        
....................       if(visual==1) 
3D34:  BTFSS  x95.4
3D36:  BRA    3E8E
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
3D38:  MOVLW  04
3D3A:  MOVLB  5
3D3C:  MOVWF  x01
3D3E:  MOVLB  0
3D40:  CALL   207A
....................          strcpy(Menus.Letra,"Liquidos"); 
3D44:  MOVLW  04
3D46:  MOVWF  FEA
3D48:  MOVLW  E1
3D4A:  MOVWF  FE9
3D4C:  MOVFF  FF2,501
3D50:  BCF    FF2.7
3D52:  MOVLW  00
3D54:  CALL   080E
3D58:  TBLRD*-
3D5A:  TBLRD*+
3D5C:  MOVF   FF5,W
3D5E:  MOVWF  FEE
3D60:  IORLW  00
3D62:  BNZ   3D5A
3D64:  MOVLB  5
3D66:  BTFSC  x01.7
3D68:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3D6A:  MOVLW  04
3D6C:  MOVWF  x02
3D6E:  MOVLW  E1
3D70:  MOVWF  x01
3D72:  MOVLW  14
3D74:  MOVWF  x03
3D76:  CLRF   x04
3D78:  MOVLW  01
3D7A:  MOVWF  x05
3D7C:  MOVLW  02
3D7E:  MOVWF  x06
3D80:  MOVLB  0
3D82:  CALL   1630
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
3D86:  MOVLW  04
3D88:  MOVWF  FEA
3D8A:  MOVLW  E1
3D8C:  MOVWF  FE9
3D8E:  MOVFF  FF2,501
3D92:  BCF    FF2.7
3D94:  MOVLW  00
3D96:  CALL   080E
3D9A:  TBLRD*-
3D9C:  TBLRD*+
3D9E:  MOVF   FF5,W
3DA0:  MOVWF  FEE
3DA2:  IORLW  00
3DA4:  BNZ   3D9C
3DA6:  MOVLB  5
3DA8:  BTFSC  x01.7
3DAA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3DAC:  MOVLW  04
3DAE:  MOVWF  x02
3DB0:  MOVLW  E1
3DB2:  MOVWF  x01
3DB4:  MOVLW  07
3DB6:  MOVWF  x03
3DB8:  MOVLW  37
3DBA:  MOVWF  x04
3DBC:  MOVLW  02
3DBE:  MOVWF  x05
3DC0:  MOVLW  01
3DC2:  MOVWF  x06
3DC4:  MOVLB  0
3DC6:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3DCA:  MOVLW  04
3DCC:  MOVWF  FEA
3DCE:  MOVLW  E1
3DD0:  MOVWF  FE9
3DD2:  MOVFF  FF2,501
3DD6:  BCF    FF2.7
3DD8:  MOVLW  00
3DDA:  CALL   08E0
3DDE:  TBLRD*-
3DE0:  TBLRD*+
3DE2:  MOVF   FF5,W
3DE4:  MOVWF  FEE
3DE6:  IORLW  00
3DE8:  BNZ   3DE0
3DEA:  MOVLB  5
3DEC:  BTFSC  x01.7
3DEE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3DF0:  MOVLW  04
3DF2:  MOVWF  x02
3DF4:  MOVLW  E1
3DF6:  MOVWF  x01
3DF8:  CLRF   x03
3DFA:  MOVLW  1A
3DFC:  MOVWF  x04
3DFE:  CLRF   x05
3E00:  MOVLW  01
3E02:  MOVWF  x06
3E04:  MOVLB  0
3E06:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
3E0A:  MOVLW  04
3E0C:  MOVWF  FEA
3E0E:  MOVLW  E1
3E10:  MOVWF  FE9
3E12:  MOVFF  FF2,501
3E16:  BCF    FF2.7
3E18:  MOVLW  00
3E1A:  CALL   09EC
3E1E:  TBLRD*-
3E20:  TBLRD*+
3E22:  MOVF   FF5,W
3E24:  MOVWF  FEE
3E26:  IORLW  00
3E28:  BNZ   3E20
3E2A:  MOVLB  5
3E2C:  BTFSC  x01.7
3E2E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3E30:  MOVLW  04
3E32:  MOVWF  x02
3E34:  MOVLW  E1
3E36:  MOVWF  x01
3E38:  CLRF   x03
3E3A:  MOVLW  24
3E3C:  MOVWF  x04
3E3E:  CLRF   x05
3E40:  MOVLW  01
3E42:  MOVWF  x06
3E44:  MOVLB  0
3E46:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3E4A:  MOVLW  04
3E4C:  MOVWF  FEA
3E4E:  MOVLW  E1
3E50:  MOVWF  FE9
3E52:  MOVFF  FF2,501
3E56:  BCF    FF2.7
3E58:  MOVLW  00
3E5A:  CALL   0A1C
3E5E:  TBLRD*-
3E60:  TBLRD*+
3E62:  MOVF   FF5,W
3E64:  MOVWF  FEE
3E66:  IORLW  00
3E68:  BNZ   3E60
3E6A:  MOVLB  5
3E6C:  BTFSC  x01.7
3E6E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
3E70:  MOVLW  04
3E72:  MOVWF  x02
3E74:  MOVLW  E1
3E76:  MOVWF  x01
3E78:  CLRF   x03
3E7A:  MOVLW  2E
3E7C:  MOVWF  x04
3E7E:  CLRF   x05
3E80:  MOVLW  01
3E82:  MOVWF  x06
3E84:  MOVLB  0
3E86:  CALL   1630
....................          visual=0; 
3E8A:  MOVLB  4
3E8C:  BCF    x95.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
3E8E:  BSF    F92.3
3E90:  BTFSS  F80.3
3E92:  BRA    3EB4
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3E94:  MOVLW  1E
3E96:  MOVLB  5
3E98:  MOVWF  x02
3E9A:  MOVLB  0
3E9C:  CALL   0F98
3EA0:  MOVLW  01
3EA2:  MOVLB  4
3EA4:  MOVWF  xA2
3EA6:  MOVLB  5
3EA8:  CLRF   x02
3EAA:  MOVLB  0
3EAC:  CALL   1002
3EB0:  MOVLB  4
3EB2:  BSF    x95.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
3EB4:  BSF    F92.2
3EB6:  BTFSS  F80.2
3EB8:  BRA    3EF8
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
3EBA:  CLRF   xC2
3EBC:  CLRF   xC3
3EBE:  CLRF   xC4
3EC0:  MOVLW  02
3EC2:  MOVWF  xC5
3EC4:  BSF    x95.5
3EC6:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
3EC8:  CLRF   xCA
3ECA:  CLRF   xCB
3ECC:  CLRF   xCC
3ECE:  CLRF   xCD
3ED0:  MOVLW  79
3ED2:  MOVWF  xA5
3ED4:  MOVLW  0E
3ED6:  MOVWF  xA2
3ED8:  MOVLW  04
3EDA:  MOVLB  5
3EDC:  MOVWF  x01
3EDE:  MOVLW  AF
3EE0:  MOVWF  x02
3EE2:  MOVLB  0
3EE4:  CALL   0F98
3EE8:  MOVLB  5
3EEA:  DECFSZ x01,F
3EEC:  BRA    3EDE
3EEE:  CLRF   x02
3EF0:  MOVLB  0
3EF2:  CALL   1002
3EF6:  MOVLB  4
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
3EF8:  MOVF   xA2,W
3EFA:  SUBLW  06
3EFC:  BTFSS  FD8.2
3EFE:  BRA    40C4
....................        
....................       if(visual==1) 
3F00:  BTFSS  x95.4
3F02:  BRA    4058
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
3F04:  MOVLW  03
3F06:  MOVLB  5
3F08:  MOVWF  x01
3F0A:  MOVLB  0
3F0C:  CALL   207A
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
3F10:  MOVLW  04
3F12:  MOVWF  FEA
3F14:  MOVLW  E1
3F16:  MOVWF  FE9
3F18:  MOVFF  FF2,501
3F1C:  BCF    FF2.7
3F1E:  MOVLW  00
3F20:  CALL   0A46
3F24:  TBLRD*-
3F26:  TBLRD*+
3F28:  MOVF   FF5,W
3F2A:  MOVWF  FEE
3F2C:  IORLW  00
3F2E:  BNZ   3F26
3F30:  MOVLB  5
3F32:  BTFSC  x01.7
3F34:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3F36:  MOVLW  04
3F38:  MOVWF  x02
3F3A:  MOVLW  E1
3F3C:  MOVWF  x01
3F3E:  CLRF   x03
3F40:  CLRF   x04
3F42:  MOVLW  01
3F44:  MOVWF  x05
3F46:  MOVLW  02
3F48:  MOVWF  x06
3F4A:  MOVLB  0
3F4C:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
3F50:  MOVLW  04
3F52:  MOVWF  FEA
3F54:  MOVLW  E1
3F56:  MOVWF  FE9
3F58:  MOVFF  FF2,501
3F5C:  BCF    FF2.7
3F5E:  MOVLW  00
3F60:  CALL   0832
3F64:  TBLRD*-
3F66:  TBLRD*+
3F68:  MOVF   FF5,W
3F6A:  MOVWF  FEE
3F6C:  IORLW  00
3F6E:  BNZ   3F66
3F70:  MOVLB  5
3F72:  BTFSC  x01.7
3F74:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3F76:  MOVLW  04
3F78:  MOVWF  x02
3F7A:  MOVLW  E1
3F7C:  MOVWF  x01
3F7E:  MOVLW  07
3F80:  MOVWF  x03
3F82:  MOVLW  37
3F84:  MOVWF  x04
3F86:  MOVLW  02
3F88:  MOVWF  x05
3F8A:  MOVLW  01
3F8C:  MOVWF  x06
3F8E:  MOVLB  0
3F90:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3F94:  MOVLW  04
3F96:  MOVWF  FEA
3F98:  MOVLW  E1
3F9A:  MOVWF  FE9
3F9C:  MOVFF  FF2,501
3FA0:  BCF    FF2.7
3FA2:  MOVLW  00
3FA4:  CALL   08E0
3FA8:  TBLRD*-
3FAA:  TBLRD*+
3FAC:  MOVF   FF5,W
3FAE:  MOVWF  FEE
3FB0:  IORLW  00
3FB2:  BNZ   3FAA
3FB4:  MOVLB  5
3FB6:  BTFSC  x01.7
3FB8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3FBA:  MOVLW  04
3FBC:  MOVWF  x02
3FBE:  MOVLW  E1
3FC0:  MOVWF  x01
3FC2:  CLRF   x03
3FC4:  MOVLW  1A
3FC6:  MOVWF  x04
3FC8:  CLRF   x05
3FCA:  MOVLW  01
3FCC:  MOVWF  x06
3FCE:  MOVLB  0
3FD0:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3FD4:  MOVLW  04
3FD6:  MOVWF  FEA
3FD8:  MOVLW  E1
3FDA:  MOVWF  FE9
3FDC:  MOVFF  FF2,501
3FE0:  BCF    FF2.7
3FE2:  MOVLW  00
3FE4:  CALL   0A6C
3FE8:  TBLRD*-
3FEA:  TBLRD*+
3FEC:  MOVF   FF5,W
3FEE:  MOVWF  FEE
3FF0:  IORLW  00
3FF2:  BNZ   3FEA
3FF4:  MOVLB  5
3FF6:  BTFSC  x01.7
3FF8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3FFA:  MOVLW  04
3FFC:  MOVWF  x02
3FFE:  MOVLW  E1
4000:  MOVWF  x01
4002:  CLRF   x03
4004:  MOVLW  24
4006:  MOVWF  x04
4008:  CLRF   x05
400A:  MOVLW  01
400C:  MOVWF  x06
400E:  MOVLB  0
4010:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
4014:  MOVLW  04
4016:  MOVWF  FEA
4018:  MOVLW  E1
401A:  MOVWF  FE9
401C:  MOVFF  FF2,501
4020:  BCF    FF2.7
4022:  MOVLW  00
4024:  CALL   0A1C
4028:  TBLRD*-
402A:  TBLRD*+
402C:  MOVF   FF5,W
402E:  MOVWF  FEE
4030:  IORLW  00
4032:  BNZ   402A
4034:  MOVLB  5
4036:  BTFSC  x01.7
4038:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
403A:  MOVLW  04
403C:  MOVWF  x02
403E:  MOVLW  E1
4040:  MOVWF  x01
4042:  CLRF   x03
4044:  MOVLW  2E
4046:  MOVWF  x04
4048:  CLRF   x05
404A:  MOVLW  01
404C:  MOVWF  x06
404E:  MOVLB  0
4050:  CALL   1630
....................          visual=0; 
4054:  MOVLB  4
4056:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4058:  BSF    F92.3
405A:  BTFSS  F80.3
405C:  BRA    407E
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
405E:  MOVLW  1E
4060:  MOVLB  5
4062:  MOVWF  x02
4064:  MOVLB  0
4066:  CALL   0F98
406A:  MOVLW  01
406C:  MOVLB  4
406E:  MOVWF  xA2
4070:  MOVLB  5
4072:  CLRF   x02
4074:  MOVLB  0
4076:  CALL   1002
407A:  MOVLB  4
407C:  BSF    x95.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
407E:  BSF    F92.2
4080:  BTFSS  F80.2
4082:  BRA    40C4
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
4084:  CLRF   xC2
4086:  CLRF   xC3
4088:  MOVLW  05
408A:  MOVWF  xC4
408C:  MOVLW  01
408E:  MOVWF  xC5
4090:  BSF    x95.5
4092:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
4094:  CLRF   xCA
4096:  CLRF   xCB
4098:  CLRF   xCC
409A:  CLRF   xCD
409C:  MOVLW  79
409E:  MOVWF  xA5
40A0:  MOVLW  0E
40A2:  MOVWF  xA2
40A4:  MOVLW  04
40A6:  MOVLB  5
40A8:  MOVWF  x01
40AA:  MOVLW  AF
40AC:  MOVWF  x02
40AE:  MOVLB  0
40B0:  CALL   0F98
40B4:  MOVLB  5
40B6:  DECFSZ x01,F
40B8:  BRA    40AA
40BA:  CLRF   x02
40BC:  MOVLB  0
40BE:  CALL   1002
40C2:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
40C4:  MOVF   xA2,W
40C6:  SUBLW  07
40C8:  BTFSS  FD8.2
40CA:  BRA    440A
....................        
....................       if(visual==1) 
40CC:  BTFSS  x95.4
40CE:  BRA    4222
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
40D0:  MOVLW  01
40D2:  MOVLB  5
40D4:  MOVWF  x01
40D6:  MOVLB  0
40D8:  CALL   207A
....................          strcpy(Menus.Letra,"Tex & Ins"); 
40DC:  MOVLW  04
40DE:  MOVWF  FEA
40E0:  MOVLW  E1
40E2:  MOVWF  FE9
40E4:  MOVFF  FF2,501
40E8:  BCF    FF2.7
40EA:  MOVLW  00
40EC:  CALL   0A9C
40F0:  TBLRD*-
40F2:  TBLRD*+
40F4:  MOVF   FF5,W
40F6:  MOVWF  FEE
40F8:  IORLW  00
40FA:  BNZ   40F2
40FC:  MOVLB  5
40FE:  BTFSC  x01.7
4100:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4102:  MOVLW  04
4104:  MOVWF  x02
4106:  MOVLW  E1
4108:  MOVWF  x01
410A:  CLRF   x03
410C:  CLRF   x04
410E:  MOVLW  01
4110:  MOVWF  x05
4112:  MOVLW  02
4114:  MOVWF  x06
4116:  MOVLB  0
4118:  CALL   1630
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
411C:  MOVLW  04
411E:  MOVWF  FEA
4120:  MOVLW  E1
4122:  MOVWF  FE9
4124:  MOVFF  FF2,501
4128:  BCF    FF2.7
412A:  MOVLW  00
412C:  CALL   0860
4130:  TBLRD*-
4132:  TBLRD*+
4134:  MOVF   FF5,W
4136:  MOVWF  FEE
4138:  IORLW  00
413A:  BNZ   4132
413C:  MOVLB  5
413E:  BTFSC  x01.7
4140:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4142:  MOVLW  04
4144:  MOVWF  x02
4146:  MOVLW  E1
4148:  MOVWF  x01
414A:  CLRF   x03
414C:  MOVLW  37
414E:  MOVWF  x04
4150:  MOVLW  02
4152:  MOVWF  x05
4154:  MOVLW  01
4156:  MOVWF  x06
4158:  MOVLB  0
415A:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
415E:  MOVLW  04
4160:  MOVWF  FEA
4162:  MOVLW  E1
4164:  MOVWF  FE9
4166:  MOVFF  FF2,501
416A:  BCF    FF2.7
416C:  MOVLW  00
416E:  CALL   08E0
4172:  TBLRD*-
4174:  TBLRD*+
4176:  MOVF   FF5,W
4178:  MOVWF  FEE
417A:  IORLW  00
417C:  BNZ   4174
417E:  MOVLB  5
4180:  BTFSC  x01.7
4182:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4184:  MOVLW  04
4186:  MOVWF  x02
4188:  MOVLW  E1
418A:  MOVWF  x01
418C:  CLRF   x03
418E:  MOVLW  1A
4190:  MOVWF  x04
4192:  CLRF   x05
4194:  MOVLW  01
4196:  MOVWF  x06
4198:  MOVLB  0
419A:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
419E:  MOVLW  04
41A0:  MOVWF  FEA
41A2:  MOVLW  E1
41A4:  MOVWF  FE9
41A6:  MOVFF  FF2,501
41AA:  BCF    FF2.7
41AC:  MOVLW  00
41AE:  CALL   090C
41B2:  TBLRD*-
41B4:  TBLRD*+
41B6:  MOVF   FF5,W
41B8:  MOVWF  FEE
41BA:  IORLW  00
41BC:  BNZ   41B4
41BE:  MOVLB  5
41C0:  BTFSC  x01.7
41C2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
41C4:  MOVLW  04
41C6:  MOVWF  x02
41C8:  MOVLW  E1
41CA:  MOVWF  x01
41CC:  CLRF   x03
41CE:  MOVLW  24
41D0:  MOVWF  x04
41D2:  CLRF   x05
41D4:  MOVLW  01
41D6:  MOVWF  x06
41D8:  MOVLB  0
41DA:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
41DE:  MOVLW  04
41E0:  MOVWF  FEA
41E2:  MOVLW  E1
41E4:  MOVWF  FE9
41E6:  MOVFF  FF2,501
41EA:  BCF    FF2.7
41EC:  MOVLW  00
41EE:  CALL   0AC0
41F2:  TBLRD*-
41F4:  TBLRD*+
41F6:  MOVF   FF5,W
41F8:  MOVWF  FEE
41FA:  IORLW  00
41FC:  BNZ   41F4
41FE:  MOVLB  5
4200:  BTFSC  x01.7
4202:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4204:  MOVLW  04
4206:  MOVWF  x02
4208:  MOVLW  E1
420A:  MOVWF  x01
420C:  CLRF   x03
420E:  MOVLW  2E
4210:  MOVWF  x04
4212:  CLRF   x05
4214:  MOVLW  01
4216:  MOVWF  x06
4218:  MOVLB  0
421A:  CALL   1630
....................          visual=0; 
421E:  MOVLB  4
4220:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4222:  BSF    F92.3
4224:  BTFSS  F80.3
4226:  BRA    4248
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4228:  MOVLW  1E
422A:  MOVLB  5
422C:  MOVWF  x02
422E:  MOVLB  0
4230:  CALL   0F98
4234:  MOVLW  01
4236:  MOVLB  4
4238:  MOVWF  xA2
423A:  MOVLB  5
423C:  CLRF   x02
423E:  MOVLB  0
4240:  CALL   1002
4244:  MOVLB  4
4246:  BSF    x95.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
4248:  BSF    F92.2
424A:  BTFSS  F80.2
424C:  BRA    440A
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
424E:  CLRF   xC2
4250:  CLRF   xC3
4252:  MOVLW  05
4254:  MOVWF  xC4
4256:  MOVLW  02
4258:  MOVWF  xC5
425A:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
425C:  CLRF   xCA
425E:  CLRF   xCB
4260:  CLRF   xCC
4262:  MOVLW  01
4264:  MOVWF  xCD
4266:  MOVLW  79
4268:  MOVWF  xA5
426A:  MOVLW  14
426C:  MOVWF  xA2
426E:  MOVLW  04
4270:  MOVLB  5
4272:  MOVWF  x01
4274:  MOVLW  AF
4276:  MOVWF  x02
4278:  MOVLB  0
427A:  CALL   0F98
427E:  MOVLB  5
4280:  DECFSZ x01,F
4282:  BRA    4274
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
4284:  MOVLW  14
4286:  MOVLB  4
4288:  MOVWF  xA2
428A:  MOVLW  0F
428C:  MOVLB  5
428E:  MOVWF  x13
4290:  MOVLW  12
4292:  MOVWF  x14
4294:  MOVLW  1E
4296:  MOVWF  x15
4298:  MOVLW  35
429A:  MOVWF  x16
429C:  CLRF   x17
429E:  MOVLW  01
42A0:  MOVWF  x18
42A2:  MOVLB  0
42A4:  CALL   156E
42A8:  MOVLB  4
42AA:  CLRF   xA9
42AC:  MOVLW  C0
42AE:  IORWF  FF2,F
42B0:  MOVLB  5
42B2:  CLRF   x02
42B4:  MOVLB  0
42B6:  CALL   1002
....................          strcpy(Menus.Letra,"Calentando"); 
42BA:  MOVLW  04
42BC:  MOVWF  FEA
42BE:  MOVLW  E1
42C0:  MOVWF  FE9
42C2:  MOVFF  FF2,501
42C6:  BCF    FF2.7
42C8:  MOVLW  00
42CA:  CALL   0966
42CE:  TBLRD*-
42D0:  TBLRD*+
42D2:  MOVF   FF5,W
42D4:  MOVWF  FEE
42D6:  IORLW  00
42D8:  BNZ   42D0
42DA:  MOVLB  5
42DC:  BTFSC  x01.7
42DE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
42E0:  MOVLW  04
42E2:  MOVWF  x02
42E4:  MOVLW  E1
42E6:  MOVWF  x01
42E8:  CLRF   x03
42EA:  MOVLW  37
42EC:  MOVWF  x04
42EE:  MOVLW  02
42F0:  MOVWF  x05
42F2:  MOVLW  01
42F4:  MOVWF  x06
42F6:  MOVLB  0
42F8:  CALL   1630
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
42FC:  MOVLW  0F
42FE:  MOVLB  5
4300:  MOVWF  x13
4302:  MOVLW  12
4304:  MOVWF  x14
4306:  MOVLW  1E
4308:  MOVWF  x15
430A:  MOVLW  35
430C:  MOVWF  x16
430E:  CLRF   x17
4310:  MOVLW  01
4312:  MOVWF  x18
4314:  MOVLB  0
4316:  CALL   156E
....................          glcd_imagen(5); 
431A:  MOVLW  05
431C:  MOVLB  5
431E:  MOVWF  x01
4320:  MOVLB  0
4322:  CALL   207A
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4326:  MOVLW  04
4328:  MOVWF  FEA
432A:  MOVLW  E1
432C:  MOVWF  FE9
432E:  MOVFF  FF2,501
4332:  BCF    FF2.7
4334:  MOVLW  00
4336:  CALL   098C
433A:  TBLRD*-
433C:  TBLRD*+
433E:  MOVF   FF5,W
4340:  MOVWF  FEE
4342:  IORLW  00
4344:  BNZ   433C
4346:  MOVLB  5
4348:  BTFSC  x01.7
434A:  BSF    FF2.7
434C:  MOVLW  04
434E:  MOVWF  x02
4350:  MOVLW  E1
4352:  MOVWF  x01
4354:  CLRF   x03
4356:  CLRF   x04
4358:  MOVLW  02
435A:  MOVWF  x05
435C:  MOVLW  01
435E:  MOVWF  x06
4360:  MOVLB  0
4362:  CALL   1630
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
4366:  MOVLW  04
4368:  MOVWF  FEA
436A:  MOVLW  E1
436C:  MOVWF  FE9
436E:  MOVFF  FF2,501
4372:  BCF    FF2.7
4374:  MOVLW  00
4376:  CALL   09AE
437A:  TBLRD*-
437C:  TBLRD*+
437E:  MOVF   FF5,W
4380:  MOVWF  FEE
4382:  IORLW  00
4384:  BNZ   437C
4386:  MOVLB  5
4388:  BTFSC  x01.7
438A:  BSF    FF2.7
438C:  MOVLW  04
438E:  MOVWF  x02
4390:  MOVLW  E1
4392:  MOVWF  x01
4394:  CLRF   x03
4396:  MOVLW  08
4398:  MOVWF  x04
439A:  MOVLW  02
439C:  MOVWF  x05
439E:  MOVLW  01
43A0:  MOVWF  x06
43A2:  MOVLB  0
43A4:  CALL   1630
....................          glcd_circle(95,40,2,NO,ON); 
43A8:  MOVLW  5F
43AA:  MOVLB  5
43AC:  MOVWF  x01
43AE:  MOVLW  28
43B0:  MOVWF  x02
43B2:  MOVLW  02
43B4:  MOVWF  x03
43B6:  CLRF   x04
43B8:  MOVLW  01
43BA:  MOVWF  x05
43BC:  MOVLB  0
43BE:  CALL   2176
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
43C2:  MOVLW  04
43C4:  MOVWF  FEA
43C6:  MOVLW  E1
43C8:  MOVWF  FE9
43CA:  MOVFF  FF2,501
43CE:  BCF    FF2.7
43D0:  MOVLW  00
43D2:  CALL   09D0
43D6:  TBLRD*-
43D8:  TBLRD*+
43DA:  MOVF   FF5,W
43DC:  MOVWF  FEE
43DE:  IORLW  00
43E0:  BNZ   43D8
43E2:  MOVLB  5
43E4:  BTFSC  x01.7
43E6:  BSF    FF2.7
43E8:  MOVLW  04
43EA:  MOVWF  x02
43EC:  MOVLW  E1
43EE:  MOVWF  x01
43F0:  MOVLW  66
43F2:  MOVWF  x03
43F4:  MOVLW  28
43F6:  MOVWF  x04
43F8:  MOVLW  02
43FA:  MOVWF  x05
43FC:  MOVWF  x06
43FE:  MOVLB  0
4400:  CALL   1630
....................          MuestraTiemposProgramados(); 
4404:  CALL   257E
4408:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
440A:  MOVF   xA2,W
440C:  SUBLW  08
440E:  BTFSS  FD8.2
4410:  BRA    47EE
....................          
....................          if(visual==1) 
4412:  BTFSS  x95.4
4414:  BRA    473A
....................          { 
....................             if(Opcion>5) 
4416:  MOVF   xA7,W
4418:  SUBLW  05
441A:  BC    4420
....................             {Opcion=1;} 
441C:  MOVLW  01
441E:  MOVWF  xA7
....................             if(Opcion<1) 
4420:  MOVF   xA7,F
4422:  BNZ   4428
....................             {Opcion=5;} 
4424:  MOVLW  05
4426:  MOVWF  xA7
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
4428:  MOVLW  04
442A:  MOVWF  FEA
442C:  MOVLW  E1
442E:  MOVWF  FE9
4430:  MOVFF  FF2,501
4434:  BCF    FF2.7
4436:  MOVLW  00
4438:  MOVLB  0
443A:  CALL   0AEA
443E:  TBLRD*-
4440:  TBLRD*+
4442:  MOVF   FF5,W
4444:  MOVWF  FEE
4446:  IORLW  00
4448:  BNZ   4440
444A:  MOVLB  5
444C:  BTFSC  x01.7
444E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4450:  MOVLW  04
4452:  MOVWF  x02
4454:  MOVLW  E1
4456:  MOVWF  x01
4458:  CLRF   x03
445A:  CLRF   x04
445C:  MOVLW  01
445E:  MOVWF  x05
4460:  MOVWF  x06
4462:  MOVLB  0
4464:  CALL   1630
....................        
....................             if(Opcion==1)    
4468:  MOVLB  4
446A:  DECFSZ xA7,W
446C:  BRA    44B4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
446E:  MOVLW  04
4470:  MOVWF  FEA
4472:  MOVLW  E1
4474:  MOVWF  FE9
4476:  MOVFF  FF2,501
447A:  BCF    FF2.7
447C:  MOVLW  00
447E:  MOVLB  0
4480:  CALL   0B1A
4484:  TBLRD*-
4486:  TBLRD*+
4488:  MOVF   FF5,W
448A:  MOVWF  FEE
448C:  IORLW  00
448E:  BNZ   4486
4490:  MOVLB  5
4492:  BTFSC  x01.7
4494:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
4496:  MOVLW  04
4498:  MOVWF  x02
449A:  MOVLW  E1
449C:  MOVWF  x01
449E:  CLRF   x03
44A0:  MOVLW  0A
44A2:  MOVWF  x04
44A4:  MOVLW  01
44A6:  MOVWF  x05
44A8:  MOVWF  x06
44AA:  MOVLB  0
44AC:  CALL   1630
....................             else 
44B0:  BRA    44F6
44B2:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
44B4:  MOVLW  04
44B6:  MOVWF  FEA
44B8:  MOVLW  E1
44BA:  MOVWF  FE9
44BC:  MOVFF  FF2,501
44C0:  BCF    FF2.7
44C2:  MOVLW  00
44C4:  MOVLB  0
44C6:  CALL   0B1A
44CA:  TBLRD*-
44CC:  TBLRD*+
44CE:  MOVF   FF5,W
44D0:  MOVWF  FEE
44D2:  IORLW  00
44D4:  BNZ   44CC
44D6:  MOVLB  5
44D8:  BTFSC  x01.7
44DA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
44DC:  MOVLW  04
44DE:  MOVWF  x02
44E0:  MOVLW  E1
44E2:  MOVWF  x01
44E4:  CLRF   x03
44E6:  MOVLW  0A
44E8:  MOVWF  x04
44EA:  CLRF   x05
44EC:  MOVLW  01
44EE:  MOVWF  x06
44F0:  MOVLB  0
44F2:  CALL   1630
....................              
....................             if(Opcion==2)    
44F6:  MOVLB  4
44F8:  MOVF   xA7,W
44FA:  SUBLW  02
44FC:  BNZ   4544
....................                {strcpy(Menus.Letra,"T. Secado"); 
44FE:  MOVLW  04
4500:  MOVWF  FEA
4502:  MOVLW  E1
4504:  MOVWF  FE9
4506:  MOVFF  FF2,501
450A:  BCF    FF2.7
450C:  MOVLW  00
450E:  MOVLB  0
4510:  CALL   0B46
4514:  TBLRD*-
4516:  TBLRD*+
4518:  MOVF   FF5,W
451A:  MOVWF  FEE
451C:  IORLW  00
451E:  BNZ   4516
4520:  MOVLB  5
4522:  BTFSC  x01.7
4524:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
4526:  MOVLW  04
4528:  MOVWF  x02
452A:  MOVLW  E1
452C:  MOVWF  x01
452E:  CLRF   x03
4530:  MOVLW  14
4532:  MOVWF  x04
4534:  MOVLW  01
4536:  MOVWF  x05
4538:  MOVWF  x06
453A:  MOVLB  0
453C:  CALL   1630
....................             else 
4540:  BRA    4586
4542:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
4544:  MOVLW  04
4546:  MOVWF  FEA
4548:  MOVLW  E1
454A:  MOVWF  FE9
454C:  MOVFF  FF2,501
4550:  BCF    FF2.7
4552:  MOVLW  00
4554:  MOVLB  0
4556:  CALL   0B46
455A:  TBLRD*-
455C:  TBLRD*+
455E:  MOVF   FF5,W
4560:  MOVWF  FEE
4562:  IORLW  00
4564:  BNZ   455C
4566:  MOVLB  5
4568:  BTFSC  x01.7
456A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
456C:  MOVLW  04
456E:  MOVWF  x02
4570:  MOVLW  E1
4572:  MOVWF  x01
4574:  CLRF   x03
4576:  MOVLW  14
4578:  MOVWF  x04
457A:  CLRF   x05
457C:  MOVLW  01
457E:  MOVWF  x06
4580:  MOVLB  0
4582:  CALL   1630
....................                 
....................              if(Opcion==3)    
4586:  MOVLB  4
4588:  MOVF   xA7,W
458A:  SUBLW  03
458C:  BNZ   45D4
....................                {strcpy(Menus.Letra,"Temperatura"); 
458E:  MOVLW  04
4590:  MOVWF  FEA
4592:  MOVLW  E1
4594:  MOVWF  FE9
4596:  MOVFF  FF2,501
459A:  BCF    FF2.7
459C:  MOVLW  00
459E:  MOVLB  0
45A0:  CALL   0B6A
45A4:  TBLRD*-
45A6:  TBLRD*+
45A8:  MOVF   FF5,W
45AA:  MOVWF  FEE
45AC:  IORLW  00
45AE:  BNZ   45A6
45B0:  MOVLB  5
45B2:  BTFSC  x01.7
45B4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
45B6:  MOVLW  04
45B8:  MOVWF  x02
45BA:  MOVLW  E1
45BC:  MOVWF  x01
45BE:  CLRF   x03
45C0:  MOVLW  1E
45C2:  MOVWF  x04
45C4:  MOVLW  01
45C6:  MOVWF  x05
45C8:  MOVWF  x06
45CA:  MOVLB  0
45CC:  CALL   1630
....................             else 
45D0:  BRA    4616
45D2:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
45D4:  MOVLW  04
45D6:  MOVWF  FEA
45D8:  MOVLW  E1
45DA:  MOVWF  FE9
45DC:  MOVFF  FF2,501
45E0:  BCF    FF2.7
45E2:  MOVLW  00
45E4:  MOVLB  0
45E6:  CALL   0B6A
45EA:  TBLRD*-
45EC:  TBLRD*+
45EE:  MOVF   FF5,W
45F0:  MOVWF  FEE
45F2:  IORLW  00
45F4:  BNZ   45EC
45F6:  MOVLB  5
45F8:  BTFSC  x01.7
45FA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
45FC:  MOVLW  04
45FE:  MOVWF  x02
4600:  MOVLW  E1
4602:  MOVWF  x01
4604:  CLRF   x03
4606:  MOVLW  1E
4608:  MOVWF  x04
460A:  CLRF   x05
460C:  MOVLW  01
460E:  MOVWF  x06
4610:  MOVLB  0
4612:  CALL   1630
....................                 
....................             if(Opcion==4)    
4616:  MOVLB  4
4618:  MOVF   xA7,W
461A:  SUBLW  04
461C:  BNZ   4664
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
461E:  MOVLW  04
4620:  MOVWF  FEA
4622:  MOVLW  E1
4624:  MOVWF  FE9
4626:  MOVFF  FF2,501
462A:  BCF    FF2.7
462C:  MOVLW  00
462E:  MOVLB  0
4630:  CALL   0B90
4634:  TBLRD*-
4636:  TBLRD*+
4638:  MOVF   FF5,W
463A:  MOVWF  FEE
463C:  IORLW  00
463E:  BNZ   4636
4640:  MOVLB  5
4642:  BTFSC  x01.7
4644:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
4646:  MOVLW  04
4648:  MOVWF  x02
464A:  MOVLW  E1
464C:  MOVWF  x01
464E:  CLRF   x03
4650:  MOVLW  28
4652:  MOVWF  x04
4654:  MOVLW  01
4656:  MOVWF  x05
4658:  MOVWF  x06
465A:  MOVLB  0
465C:  CALL   1630
....................             else 
4660:  BRA    46A6
4662:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4664:  MOVLW  04
4666:  MOVWF  FEA
4668:  MOVLW  E1
466A:  MOVWF  FE9
466C:  MOVFF  FF2,501
4670:  BCF    FF2.7
4672:  MOVLW  00
4674:  MOVLB  0
4676:  CALL   0B90
467A:  TBLRD*-
467C:  TBLRD*+
467E:  MOVF   FF5,W
4680:  MOVWF  FEE
4682:  IORLW  00
4684:  BNZ   467C
4686:  MOVLB  5
4688:  BTFSC  x01.7
468A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
468C:  MOVLW  04
468E:  MOVWF  x02
4690:  MOVLW  E1
4692:  MOVWF  x01
4694:  CLRF   x03
4696:  MOVLW  28
4698:  MOVWF  x04
469A:  CLRF   x05
469C:  MOVLW  01
469E:  MOVWF  x06
46A0:  MOVLB  0
46A2:  CALL   1630
....................                 
....................             if(Opcion==5)    
46A6:  MOVLB  4
46A8:  MOVF   xA7,W
46AA:  SUBLW  05
46AC:  BNZ   46F4
....................                {strcpy(Menus.Letra,"Continuar"); 
46AE:  MOVLW  04
46B0:  MOVWF  FEA
46B2:  MOVLW  E1
46B4:  MOVWF  FE9
46B6:  MOVFF  FF2,501
46BA:  BCF    FF2.7
46BC:  MOVLW  00
46BE:  MOVLB  0
46C0:  CALL   0BBC
46C4:  TBLRD*-
46C6:  TBLRD*+
46C8:  MOVF   FF5,W
46CA:  MOVWF  FEE
46CC:  IORLW  00
46CE:  BNZ   46C6
46D0:  MOVLB  5
46D2:  BTFSC  x01.7
46D4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
46D6:  MOVLW  04
46D8:  MOVWF  x02
46DA:  MOVLW  E1
46DC:  MOVWF  x01
46DE:  CLRF   x03
46E0:  MOVLW  32
46E2:  MOVWF  x04
46E4:  MOVLW  01
46E6:  MOVWF  x05
46E8:  MOVWF  x06
46EA:  MOVLB  0
46EC:  CALL   1630
....................             else 
46F0:  BRA    4736
46F2:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
46F4:  MOVLW  04
46F6:  MOVWF  FEA
46F8:  MOVLW  E1
46FA:  MOVWF  FE9
46FC:  MOVFF  FF2,501
4700:  BCF    FF2.7
4702:  MOVLW  00
4704:  MOVLB  0
4706:  CALL   0BBC
470A:  TBLRD*-
470C:  TBLRD*+
470E:  MOVF   FF5,W
4710:  MOVWF  FEE
4712:  IORLW  00
4714:  BNZ   470C
4716:  MOVLB  5
4718:  BTFSC  x01.7
471A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
471C:  MOVLW  04
471E:  MOVWF  x02
4720:  MOVLW  E1
4722:  MOVWF  x01
4724:  CLRF   x03
4726:  MOVLW  32
4728:  MOVWF  x04
472A:  CLRF   x05
472C:  MOVLW  01
472E:  MOVWF  x06
4730:  MOVLB  0
4732:  CALL   1630
....................                           
....................             visual=0; 
4736:  MOVLB  4
4738:  BCF    x95.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
473A:  BSF    F92.0
473C:  BTFSS  F80.0
473E:  BRA    475A
....................          {  if(Flanco == 0)  
4740:  BTFSC  x95.0
4742:  BRA    4758
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4744:  BSF    x95.0
4746:  MOVLW  1E
4748:  MOVLB  5
474A:  MOVWF  x02
474C:  MOVLB  0
474E:  CALL   0F98
4752:  MOVLB  4
4754:  DECF   xA7,F
4756:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4758:  BRA    475C
....................                {Flanco = 0;} 
475A:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
475C:  BSF    F92.1
475E:  BTFSS  F80.1
4760:  BRA    477C
....................          {  if(Flanco2 == 0)  
4762:  BTFSC  x95.2
4764:  BRA    477A
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4766:  BSF    x95.2
4768:  MOVLW  1E
476A:  MOVLB  5
476C:  MOVWF  x02
476E:  MOVLB  0
4770:  CALL   0F98
4774:  MOVLB  4
4776:  INCF   xA7,F
4778:  BSF    x95.4
....................                }      
....................          } 
....................             else 
477A:  BRA    477E
....................                {Flanco2 = 0;}   
477C:  BCF    x95.2
....................                 
....................          if(RIGHT)//Si oprime SET 
477E:  BSF    F92.2
4780:  BTFSS  F80.2
4782:  BRA    47BC
....................          {  if(Flanco1 == 0)  
4784:  BTFSC  x95.1
4786:  BRA    47BA
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4788:  BSF    x95.1
478A:  MOVLW  02
478C:  MOVLB  5
478E:  MOVWF  x01
4790:  MOVLW  96
4792:  MOVWF  x02
4794:  MOVLB  0
4796:  CALL   0F98
479A:  MOVLB  5
479C:  DECFSZ x01,F
479E:  BRA    4790
47A0:  MOVLW  0A
47A2:  MOVLB  4
47A4:  ADDWF  xA7,W
47A6:  MOVWF  xA2
47A8:  MOVLW  01
47AA:  MOVWF  xA7
47AC:  MOVLB  5
47AE:  CLRF   x02
47B0:  MOVLB  0
47B2:  CALL   1002
47B6:  MOVLB  4
47B8:  BSF    x95.4
....................                } 
....................          } 
....................             else 
47BA:  BRA    47BE
....................                {Flanco1 = 0;}   
47BC:  BCF    x95.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
47BE:  BSF    F92.3
47C0:  BTFSS  F80.3
47C2:  BRA    47EE
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
47C4:  MOVLW  04
47C6:  MOVLB  5
47C8:  MOVWF  x01
47CA:  MOVLW  AF
47CC:  MOVWF  x02
47CE:  MOVLB  0
47D0:  CALL   0F98
47D4:  MOVLB  5
47D6:  DECFSZ x01,F
47D8:  BRA    47CA
47DA:  MOVLW  01
47DC:  MOVLB  4
47DE:  MOVWF  xA2
47E0:  MOVLB  5
47E2:  CLRF   x02
47E4:  MOVLB  0
47E6:  CALL   1002
47EA:  MOVLB  4
47EC:  BSF    x95.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
47EE:  MOVF   xA2,W
47F0:  SUBLW  09
47F2:  BTFSS  FD8.2
47F4:  BRA    4CAA
....................          
....................       strcpy(Menus.Letra,"Clave"); 
47F6:  MOVLW  04
47F8:  MOVWF  FEA
47FA:  MOVLW  E1
47FC:  MOVWF  FE9
47FE:  MOVFF  FF2,501
4802:  BCF    FF2.7
4804:  MOVLW  00
4806:  MOVLB  0
4808:  CALL   0758
480C:  TBLRD*-
480E:  TBLRD*+
4810:  MOVF   FF5,W
4812:  MOVWF  FEE
4814:  IORLW  00
4816:  BNZ   480E
4818:  MOVLB  5
481A:  BTFSC  x01.7
481C:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
481E:  MOVLW  04
4820:  MOVWF  x02
4822:  MOVLW  E1
4824:  MOVWF  x01
4826:  MOVLW  1E
4828:  MOVWF  x03
482A:  CLRF   x04
482C:  MOVLW  01
482E:  MOVWF  x05
4830:  MOVLW  02
4832:  MOVWF  x06
4834:  MOVLB  0
4836:  CALL   1630
....................        
....................       if(unidad==1) 
483A:  MOVLB  4
483C:  DECFSZ xA3,W
483E:  BRA    489E
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4840:  MOVFF  4CE,503
4844:  MOVLW  14
4846:  MOVLB  5
4848:  MOVWF  x04
484A:  MOVLW  1E
484C:  MOVWF  x05
484E:  MOVLW  01
4850:  MOVWF  x06
4852:  MOVLB  0
4854:  CALL   185E
....................          displayContrasena(Contrasena[1],40,30,0); 
4858:  MOVFF  4CF,503
485C:  MOVLW  28
485E:  MOVLB  5
4860:  MOVWF  x04
4862:  MOVLW  1E
4864:  MOVWF  x05
4866:  CLRF   x06
4868:  MOVLB  0
486A:  CALL   185E
....................          displayContrasena(Contrasena[2],60,30,0); 
486E:  MOVFF  4D0,503
4872:  MOVLW  3C
4874:  MOVLB  5
4876:  MOVWF  x04
4878:  MOVLW  1E
487A:  MOVWF  x05
487C:  CLRF   x06
487E:  MOVLB  0
4880:  CALL   185E
....................          displayContrasena(Contrasena[3],80,30,0); 
4884:  MOVFF  4D1,503
4888:  MOVLW  50
488A:  MOVLB  5
488C:  MOVWF  x04
488E:  MOVLW  1E
4890:  MOVWF  x05
4892:  CLRF   x06
4894:  MOVLB  0
4896:  CALL   185E
....................       } 
....................       else 
489A:  BRA    49C6
489C:  MOVLB  4
....................       { 
....................          if(unidad==2) 
489E:  MOVF   xA3,W
48A0:  SUBLW  02
48A2:  BNZ   4902
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
48A4:  MOVFF  4CE,503
48A8:  MOVLW  14
48AA:  MOVLB  5
48AC:  MOVWF  x04
48AE:  MOVLW  1E
48B0:  MOVWF  x05
48B2:  CLRF   x06
48B4:  MOVLB  0
48B6:  CALL   185E
....................             displayContrasena(Contrasena[1],40,30,1); 
48BA:  MOVFF  4CF,503
48BE:  MOVLW  28
48C0:  MOVLB  5
48C2:  MOVWF  x04
48C4:  MOVLW  1E
48C6:  MOVWF  x05
48C8:  MOVLW  01
48CA:  MOVWF  x06
48CC:  MOVLB  0
48CE:  CALL   185E
....................             displayContrasena(Contrasena[2],60,30,0); 
48D2:  MOVFF  4D0,503
48D6:  MOVLW  3C
48D8:  MOVLB  5
48DA:  MOVWF  x04
48DC:  MOVLW  1E
48DE:  MOVWF  x05
48E0:  CLRF   x06
48E2:  MOVLB  0
48E4:  CALL   185E
....................             displayContrasena(Contrasena[3],80,30,0); 
48E8:  MOVFF  4D1,503
48EC:  MOVLW  50
48EE:  MOVLB  5
48F0:  MOVWF  x04
48F2:  MOVLW  1E
48F4:  MOVWF  x05
48F6:  CLRF   x06
48F8:  MOVLB  0
48FA:  CALL   185E
....................          } 
....................          else 
48FE:  BRA    49C6
4900:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4902:  MOVF   xA3,W
4904:  SUBLW  03
4906:  BNZ   4966
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4908:  MOVFF  4CE,503
490C:  MOVLW  14
490E:  MOVLB  5
4910:  MOVWF  x04
4912:  MOVLW  1E
4914:  MOVWF  x05
4916:  CLRF   x06
4918:  MOVLB  0
491A:  CALL   185E
....................                displayContrasena(Contrasena[1],40,30,0); 
491E:  MOVFF  4CF,503
4922:  MOVLW  28
4924:  MOVLB  5
4926:  MOVWF  x04
4928:  MOVLW  1E
492A:  MOVWF  x05
492C:  CLRF   x06
492E:  MOVLB  0
4930:  CALL   185E
....................                displayContrasena(Contrasena[2],60,30,1); 
4934:  MOVFF  4D0,503
4938:  MOVLW  3C
493A:  MOVLB  5
493C:  MOVWF  x04
493E:  MOVLW  1E
4940:  MOVWF  x05
4942:  MOVLW  01
4944:  MOVWF  x06
4946:  MOVLB  0
4948:  CALL   185E
....................                displayContrasena(Contrasena[3],80,30,0); 
494C:  MOVFF  4D1,503
4950:  MOVLW  50
4952:  MOVLB  5
4954:  MOVWF  x04
4956:  MOVLW  1E
4958:  MOVWF  x05
495A:  CLRF   x06
495C:  MOVLB  0
495E:  CALL   185E
....................             } 
....................             else 
4962:  BRA    49C6
4964:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4966:  MOVF   xA3,W
4968:  SUBLW  04
496A:  BNZ   49C8
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
496C:  MOVFF  4CE,503
4970:  MOVLW  14
4972:  MOVLB  5
4974:  MOVWF  x04
4976:  MOVLW  1E
4978:  MOVWF  x05
497A:  CLRF   x06
497C:  MOVLB  0
497E:  CALL   185E
....................                   displayContrasena(Contrasena[1],40,30,0); 
4982:  MOVFF  4CF,503
4986:  MOVLW  28
4988:  MOVLB  5
498A:  MOVWF  x04
498C:  MOVLW  1E
498E:  MOVWF  x05
4990:  CLRF   x06
4992:  MOVLB  0
4994:  CALL   185E
....................                   displayContrasena(Contrasena[2],60,30,0); 
4998:  MOVFF  4D0,503
499C:  MOVLW  3C
499E:  MOVLB  5
49A0:  MOVWF  x04
49A2:  MOVLW  1E
49A4:  MOVWF  x05
49A6:  CLRF   x06
49A8:  MOVLB  0
49AA:  CALL   185E
....................                   displayContrasena(Contrasena[3],80,30,1); 
49AE:  MOVFF  4D1,503
49B2:  MOVLW  50
49B4:  MOVLB  5
49B6:  MOVWF  x04
49B8:  MOVLW  1E
49BA:  MOVWF  x05
49BC:  MOVLW  01
49BE:  MOVWF  x06
49C0:  MOVLB  0
49C2:  CALL   185E
49C6:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
49C8:  BSF    F92.0
49CA:  BTFSS  F80.0
49CC:  BRA    4A36
....................       { 
....................          if(Flanco == 0) 
49CE:  BTFSC  x95.0
49D0:  BRA    4A34
....................          { 
....................             Flanco = 1;delay_ms(30); 
49D2:  BSF    x95.0
49D4:  MOVLW  1E
49D6:  MOVLB  5
49D8:  MOVWF  x02
49DA:  MOVLB  0
49DC:  CALL   0F98
....................             for(i=1;i<=4;i++) 
49E0:  MOVLW  01
49E2:  MOVLB  4
49E4:  MOVWF  xA4
49E6:  MOVF   xA4,W
49E8:  SUBLW  04
49EA:  BNC   4A34
....................             { 
....................                if(unidad==i) 
49EC:  MOVF   xA4,W
49EE:  SUBWF  xA3,W
49F0:  BNZ   4A30
....................                { 
....................                   Contrasena[i-1]++; 
49F2:  MOVLW  01
49F4:  SUBWF  xA4,W
49F6:  CLRF   03
49F8:  ADDLW  CE
49FA:  MOVWF  FE9
49FC:  MOVLW  04
49FE:  ADDWFC 03,W
4A00:  MOVWF  FEA
4A02:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4A04:  MOVLW  01
4A06:  SUBWF  xA4,W
4A08:  CLRF   03
4A0A:  ADDLW  CE
4A0C:  MOVWF  FE9
4A0E:  MOVLW  04
4A10:  ADDWFC 03,W
4A12:  MOVWF  FEA
4A14:  BTFSC  FEF.7
4A16:  BRA    4A30
4A18:  MOVF   FEF,W
4A1A:  SUBLW  09
4A1C:  BC    4A30
....................                   { 
....................                      Contrasena[i-1]=0; 
4A1E:  MOVLW  01
4A20:  SUBWF  xA4,W
4A22:  CLRF   03
4A24:  ADDLW  CE
4A26:  MOVWF  FE9
4A28:  MOVLW  04
4A2A:  ADDWFC 03,W
4A2C:  MOVWF  FEA
4A2E:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4A30:  INCF   xA4,F
4A32:  BRA    49E6
....................          } 
....................       } 
....................       else 
4A34:  BRA    4A38
....................       { 
....................          Flanco = 0; 
4A36:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4A38:  BSF    F92.1
4A3A:  BTFSS  F80.1
4A3C:  BRA    4AA4
....................       { 
....................          if(Flanco2 == 0) 
4A3E:  BTFSC  x95.2
4A40:  BRA    4AA2
....................             {Flanco2 = 1;delay_ms(30); 
4A42:  BSF    x95.2
4A44:  MOVLW  1E
4A46:  MOVLB  5
4A48:  MOVWF  x02
4A4A:  MOVLB  0
4A4C:  CALL   0F98
....................                for(i=1;i<=4;i++) 
4A50:  MOVLW  01
4A52:  MOVLB  4
4A54:  MOVWF  xA4
4A56:  MOVF   xA4,W
4A58:  SUBLW  04
4A5A:  BNC   4AA2
....................                { 
....................                   if(unidad==i) 
4A5C:  MOVF   xA4,W
4A5E:  SUBWF  xA3,W
4A60:  BNZ   4A9E
....................                   {Contrasena[i-1]--;  
4A62:  MOVLW  01
4A64:  SUBWF  xA4,W
4A66:  CLRF   03
4A68:  ADDLW  CE
4A6A:  MOVWF  FE9
4A6C:  MOVLW  04
4A6E:  ADDWFC 03,W
4A70:  MOVWF  FEA
4A72:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4A74:  MOVLW  01
4A76:  SUBWF  xA4,W
4A78:  CLRF   03
4A7A:  ADDLW  CE
4A7C:  MOVWF  FE9
4A7E:  MOVLW  04
4A80:  ADDWFC 03,W
4A82:  MOVWF  FEA
4A84:  BTFSC  FEF.7
4A86:  BRA    4A8A
4A88:  BRA    4A9E
....................                         {Contrasena[i-1]=9;} 
4A8A:  MOVLW  01
4A8C:  SUBWF  xA4,W
4A8E:  CLRF   03
4A90:  ADDLW  CE
4A92:  MOVWF  FE9
4A94:  MOVLW  04
4A96:  ADDWFC 03,W
4A98:  MOVWF  FEA
4A9A:  MOVLW  09
4A9C:  MOVWF  FEF
....................                   } 
....................                }       
4A9E:  INCF   xA4,F
4AA0:  BRA    4A56
....................             }      
....................       } 
....................       else 
4AA2:  BRA    4AA6
....................       { 
....................          Flanco2 = 0; 
4AA4:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4AA6:  BSF    F92.2
4AA8:  BTFSS  F80.2
4AAA:  BRA    4ACE
....................       { 
....................          if(Flanco1 == 0) 
4AAC:  BTFSC  x95.1
4AAE:  BRA    4ACC
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4AB0:  BSF    x95.1
4AB2:  MOVLW  02
4AB4:  MOVLB  5
4AB6:  MOVWF  x01
4AB8:  MOVLW  96
4ABA:  MOVWF  x02
4ABC:  MOVLB  0
4ABE:  CALL   0F98
4AC2:  MOVLB  5
4AC4:  DECFSZ x01,F
4AC6:  BRA    4AB8
4AC8:  MOVLB  4
4ACA:  INCF   xA3,F
....................       } 
....................       else 
4ACC:  BRA    4AD0
....................       { 
....................          Flanco1 = 0; 
4ACE:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4AD0:  BSF    F92.3
4AD2:  BTFSS  F80.3
4AD4:  BRA    4AFE
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4AD6:  MOVLW  04
4AD8:  MOVLB  5
4ADA:  MOVWF  x01
4ADC:  MOVLW  AF
4ADE:  MOVWF  x02
4AE0:  MOVLB  0
4AE2:  CALL   0F98
4AE6:  MOVLB  5
4AE8:  DECFSZ x01,F
4AEA:  BRA    4ADC
4AEC:  MOVLW  01
4AEE:  MOVLB  4
4AF0:  MOVWF  xA2
4AF2:  MOVLB  5
4AF4:  CLRF   x02
4AF6:  MOVLB  0
4AF8:  CALL   1002
4AFC:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4AFE:  MOVF   xA3,W
4B00:  SUBLW  04
4B02:  BTFSC  FD8.0
4B04:  BRA    4CAA
....................       {glcd_fillScreen(OFF); 
4B06:  MOVLB  5
4B08:  CLRF   x02
4B0A:  MOVLB  0
4B0C:  CALL   1002
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4B10:  MOVLB  4
4B12:  MOVF   xD2,W
4B14:  SUBWF  xCE,W
4B16:  BNZ   4BE8
4B18:  MOVF   xD3,W
4B1A:  SUBWF  xCF,W
4B1C:  BNZ   4BE8
4B1E:  MOVF   xD4,W
4B20:  SUBWF  xD0,W
4B22:  BNZ   4BE8
4B24:  MOVF   xD5,W
4B26:  SUBWF  xD1,W
4B28:  BNZ   4BE8
....................          { 
....................             glcd_fillScreen(OFF); 
4B2A:  MOVLB  5
4B2C:  CLRF   x02
4B2E:  MOVLB  0
4B30:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
4B34:  MOVLW  04
4B36:  MOVWF  FEA
4B38:  MOVLW  E1
4B3A:  MOVWF  FE9
4B3C:  MOVFF  FF2,501
4B40:  BCF    FF2.7
4B42:  MOVLW  00
4B44:  CALL   0758
4B48:  TBLRD*-
4B4A:  TBLRD*+
4B4C:  MOVF   FF5,W
4B4E:  MOVWF  FEE
4B50:  IORLW  00
4B52:  BNZ   4B4A
4B54:  MOVLB  5
4B56:  BTFSC  x01.7
4B58:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4B5A:  MOVLW  04
4B5C:  MOVWF  x02
4B5E:  MOVLW  E1
4B60:  MOVWF  x01
4B62:  MOVLW  1E
4B64:  MOVWF  x03
4B66:  CLRF   x04
4B68:  CLRF   x05
4B6A:  MOVLW  02
4B6C:  MOVWF  x06
4B6E:  MOVLB  0
4B70:  CALL   1630
....................             strcpy(Menus.Letra,"Correcta"); 
4B74:  MOVLW  04
4B76:  MOVWF  FEA
4B78:  MOVLW  E1
4B7A:  MOVWF  FE9
4B7C:  MOVFF  FF2,501
4B80:  BCF    FF2.7
4B82:  MOVLW  00
4B84:  CALL   0778
4B88:  TBLRD*-
4B8A:  TBLRD*+
4B8C:  MOVF   FF5,W
4B8E:  MOVWF  FEE
4B90:  IORLW  00
4B92:  BNZ   4B8A
4B94:  MOVLB  5
4B96:  BTFSC  x01.7
4B98:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4B9A:  MOVLW  04
4B9C:  MOVWF  x02
4B9E:  MOVLW  E1
4BA0:  MOVWF  x01
4BA2:  MOVLW  0F
4BA4:  MOVWF  x03
4BA6:  MOVLW  1E
4BA8:  MOVWF  x04
4BAA:  CLRF   x05
4BAC:  MOVLW  02
4BAE:  MOVWF  x06
4BB0:  MOVLB  0
4BB2:  CALL   1630
....................             Menu=91;glcd_update();delay_ms(1000); 
4BB6:  MOVLW  5B
4BB8:  MOVLB  4
4BBA:  MOVWF  xA2
4BBC:  MOVLB  0
4BBE:  CALL   105C
4BC2:  MOVLW  04
4BC4:  MOVLB  5
4BC6:  MOVWF  x01
4BC8:  MOVLW  FA
4BCA:  MOVWF  x02
4BCC:  MOVLB  0
4BCE:  CALL   0F98
4BD2:  MOVLB  5
4BD4:  DECFSZ x01,F
4BD6:  BRA    4BC8
....................             glcd_fillScreen(OFF);unidad=1; 
4BD8:  CLRF   x02
4BDA:  MOVLB  0
4BDC:  CALL   1002
4BE0:  MOVLW  01
4BE2:  MOVLB  4
4BE4:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4BE6:  BRA    4CAA
....................          { 
....................             glcd_fillScreen(OFF); 
4BE8:  MOVLB  5
4BEA:  CLRF   x02
4BEC:  MOVLB  0
4BEE:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
4BF2:  MOVLW  04
4BF4:  MOVWF  FEA
4BF6:  MOVLW  E1
4BF8:  MOVWF  FE9
4BFA:  MOVFF  FF2,501
4BFE:  BCF    FF2.7
4C00:  MOVLW  00
4C02:  CALL   0758
4C06:  TBLRD*-
4C08:  TBLRD*+
4C0A:  MOVF   FF5,W
4C0C:  MOVWF  FEE
4C0E:  IORLW  00
4C10:  BNZ   4C08
4C12:  MOVLB  5
4C14:  BTFSC  x01.7
4C16:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4C18:  MOVLW  04
4C1A:  MOVWF  x02
4C1C:  MOVLW  E1
4C1E:  MOVWF  x01
4C20:  MOVLW  1E
4C22:  MOVWF  x03
4C24:  CLRF   x04
4C26:  CLRF   x05
4C28:  MOVLW  02
4C2A:  MOVWF  x06
4C2C:  MOVLB  0
4C2E:  CALL   1630
....................             strcpy(Menus.Letra,"Incorrecta"); 
4C32:  MOVLW  04
4C34:  MOVWF  FEA
4C36:  MOVLW  E1
4C38:  MOVWF  FE9
4C3A:  MOVFF  FF2,501
4C3E:  BCF    FF2.7
4C40:  MOVLW  00
4C42:  CALL   079C
4C46:  TBLRD*-
4C48:  TBLRD*+
4C4A:  MOVF   FF5,W
4C4C:  MOVWF  FEE
4C4E:  IORLW  00
4C50:  BNZ   4C48
4C52:  MOVLB  5
4C54:  BTFSC  x01.7
4C56:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4C58:  MOVLW  04
4C5A:  MOVWF  x02
4C5C:  MOVLW  E1
4C5E:  MOVWF  x01
4C60:  CLRF   x03
4C62:  MOVLW  1E
4C64:  MOVWF  x04
4C66:  CLRF   x05
4C68:  MOVLW  02
4C6A:  MOVWF  x06
4C6C:  MOVLB  0
4C6E:  CALL   1630
....................             Menu=1;glcd_update();delay_ms(1000); 
4C72:  MOVLW  01
4C74:  MOVLB  4
4C76:  MOVWF  xA2
4C78:  MOVLB  0
4C7A:  CALL   105C
4C7E:  MOVLW  04
4C80:  MOVLB  5
4C82:  MOVWF  x01
4C84:  MOVLW  FA
4C86:  MOVWF  x02
4C88:  MOVLB  0
4C8A:  CALL   0F98
4C8E:  MOVLB  5
4C90:  DECFSZ x01,F
4C92:  BRA    4C84
....................             glcd_fillScreen(OFF);unidad=1; 
4C94:  CLRF   x02
4C96:  MOVLB  0
4C98:  CALL   1002
4C9C:  MOVLW  01
4C9E:  MOVLB  4
4CA0:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4CA2:  CLRF   xCE
4CA4:  CLRF   xCF
4CA6:  CLRF   xD0
4CA8:  CLRF   xD1
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4CAA:  MOVF   xA2,W
4CAC:  SUBLW  5B
4CAE:  BTFSS  FD8.2
4CB0:  BRA    508A
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4CB2:  MOVLW  04
4CB4:  MOVWF  FEA
4CB6:  MOVLW  E1
4CB8:  MOVWF  FE9
4CBA:  MOVFF  FF2,501
4CBE:  BCF    FF2.7
4CC0:  MOVLW  00
4CC2:  MOVLB  0
4CC4:  CALL   0BE0
4CC8:  TBLRD*-
4CCA:  TBLRD*+
4CCC:  MOVF   FF5,W
4CCE:  MOVWF  FEE
4CD0:  IORLW  00
4CD2:  BNZ   4CCA
4CD4:  MOVLB  5
4CD6:  BTFSC  x01.7
4CD8:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4CDA:  MOVLW  04
4CDC:  MOVWF  x02
4CDE:  MOVLW  E1
4CE0:  MOVWF  x01
4CE2:  CLRF   x03
4CE4:  CLRF   x04
4CE6:  MOVLW  01
4CE8:  MOVWF  x05
4CEA:  MOVLW  02
4CEC:  MOVWF  x06
4CEE:  MOVLB  0
4CF0:  CALL   1630
....................        
....................       if(unidad==1) 
4CF4:  MOVLB  4
4CF6:  DECFSZ xA3,W
4CF8:  BRA    4D58
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4CFA:  MOVFF  4D2,503
4CFE:  MOVLW  14
4D00:  MOVLB  5
4D02:  MOVWF  x04
4D04:  MOVLW  1E
4D06:  MOVWF  x05
4D08:  MOVLW  01
4D0A:  MOVWF  x06
4D0C:  MOVLB  0
4D0E:  CALL   185E
....................          displayContrasena(Password[1],40,30,0); 
4D12:  MOVFF  4D3,503
4D16:  MOVLW  28
4D18:  MOVLB  5
4D1A:  MOVWF  x04
4D1C:  MOVLW  1E
4D1E:  MOVWF  x05
4D20:  CLRF   x06
4D22:  MOVLB  0
4D24:  CALL   185E
....................          displayContrasena(Password[2],60,30,0); 
4D28:  MOVFF  4D4,503
4D2C:  MOVLW  3C
4D2E:  MOVLB  5
4D30:  MOVWF  x04
4D32:  MOVLW  1E
4D34:  MOVWF  x05
4D36:  CLRF   x06
4D38:  MOVLB  0
4D3A:  CALL   185E
....................          displayContrasena(Password[3],80,30,0); 
4D3E:  MOVFF  4D5,503
4D42:  MOVLW  50
4D44:  MOVLB  5
4D46:  MOVWF  x04
4D48:  MOVLW  1E
4D4A:  MOVWF  x05
4D4C:  CLRF   x06
4D4E:  MOVLB  0
4D50:  CALL   185E
....................       } 
....................       else 
4D54:  BRA    4E80
4D56:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4D58:  MOVF   xA3,W
4D5A:  SUBLW  02
4D5C:  BNZ   4DBC
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4D5E:  MOVFF  4D2,503
4D62:  MOVLW  14
4D64:  MOVLB  5
4D66:  MOVWF  x04
4D68:  MOVLW  1E
4D6A:  MOVWF  x05
4D6C:  CLRF   x06
4D6E:  MOVLB  0
4D70:  CALL   185E
....................             displayContrasena(Password[1],40,30,1); 
4D74:  MOVFF  4D3,503
4D78:  MOVLW  28
4D7A:  MOVLB  5
4D7C:  MOVWF  x04
4D7E:  MOVLW  1E
4D80:  MOVWF  x05
4D82:  MOVLW  01
4D84:  MOVWF  x06
4D86:  MOVLB  0
4D88:  CALL   185E
....................             displayContrasena(Password[2],60,30,0); 
4D8C:  MOVFF  4D4,503
4D90:  MOVLW  3C
4D92:  MOVLB  5
4D94:  MOVWF  x04
4D96:  MOVLW  1E
4D98:  MOVWF  x05
4D9A:  CLRF   x06
4D9C:  MOVLB  0
4D9E:  CALL   185E
....................             displayContrasena(Password[3],80,30,0); 
4DA2:  MOVFF  4D5,503
4DA6:  MOVLW  50
4DA8:  MOVLB  5
4DAA:  MOVWF  x04
4DAC:  MOVLW  1E
4DAE:  MOVWF  x05
4DB0:  CLRF   x06
4DB2:  MOVLB  0
4DB4:  CALL   185E
....................          } 
....................          else 
4DB8:  BRA    4E80
4DBA:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4DBC:  MOVF   xA3,W
4DBE:  SUBLW  03
4DC0:  BNZ   4E20
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4DC2:  MOVFF  4D2,503
4DC6:  MOVLW  14
4DC8:  MOVLB  5
4DCA:  MOVWF  x04
4DCC:  MOVLW  1E
4DCE:  MOVWF  x05
4DD0:  CLRF   x06
4DD2:  MOVLB  0
4DD4:  CALL   185E
....................                displayContrasena(Password[1],40,30,0); 
4DD8:  MOVFF  4D3,503
4DDC:  MOVLW  28
4DDE:  MOVLB  5
4DE0:  MOVWF  x04
4DE2:  MOVLW  1E
4DE4:  MOVWF  x05
4DE6:  CLRF   x06
4DE8:  MOVLB  0
4DEA:  CALL   185E
....................                displayContrasena(Password[2],60,30,1); 
4DEE:  MOVFF  4D4,503
4DF2:  MOVLW  3C
4DF4:  MOVLB  5
4DF6:  MOVWF  x04
4DF8:  MOVLW  1E
4DFA:  MOVWF  x05
4DFC:  MOVLW  01
4DFE:  MOVWF  x06
4E00:  MOVLB  0
4E02:  CALL   185E
....................                displayContrasena(Password[3],80,30,0); 
4E06:  MOVFF  4D5,503
4E0A:  MOVLW  50
4E0C:  MOVLB  5
4E0E:  MOVWF  x04
4E10:  MOVLW  1E
4E12:  MOVWF  x05
4E14:  CLRF   x06
4E16:  MOVLB  0
4E18:  CALL   185E
....................             } 
....................             else 
4E1C:  BRA    4E80
4E1E:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4E20:  MOVF   xA3,W
4E22:  SUBLW  04
4E24:  BNZ   4E82
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4E26:  MOVFF  4D2,503
4E2A:  MOVLW  14
4E2C:  MOVLB  5
4E2E:  MOVWF  x04
4E30:  MOVLW  1E
4E32:  MOVWF  x05
4E34:  CLRF   x06
4E36:  MOVLB  0
4E38:  CALL   185E
....................                   displayContrasena(Password[1],40,30,0); 
4E3C:  MOVFF  4D3,503
4E40:  MOVLW  28
4E42:  MOVLB  5
4E44:  MOVWF  x04
4E46:  MOVLW  1E
4E48:  MOVWF  x05
4E4A:  CLRF   x06
4E4C:  MOVLB  0
4E4E:  CALL   185E
....................                   displayContrasena(Password[2],60,30,0); 
4E52:  MOVFF  4D4,503
4E56:  MOVLW  3C
4E58:  MOVLB  5
4E5A:  MOVWF  x04
4E5C:  MOVLW  1E
4E5E:  MOVWF  x05
4E60:  CLRF   x06
4E62:  MOVLB  0
4E64:  CALL   185E
....................                   displayContrasena(Password[3],80,30,1); 
4E68:  MOVFF  4D5,503
4E6C:  MOVLW  50
4E6E:  MOVLB  5
4E70:  MOVWF  x04
4E72:  MOVLW  1E
4E74:  MOVWF  x05
4E76:  MOVLW  01
4E78:  MOVWF  x06
4E7A:  MOVLB  0
4E7C:  CALL   185E
4E80:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4E82:  BSF    F92.0
4E84:  BTFSS  F80.0
4E86:  BRA    4EF0
....................       { 
....................          if(Flanco == 0) 
4E88:  BTFSC  x95.0
4E8A:  BRA    4EEE
....................          { 
....................             Flanco = 1;delay_ms(30); 
4E8C:  BSF    x95.0
4E8E:  MOVLW  1E
4E90:  MOVLB  5
4E92:  MOVWF  x02
4E94:  MOVLB  0
4E96:  CALL   0F98
....................             for(i=1;i<=4;i++) 
4E9A:  MOVLW  01
4E9C:  MOVLB  4
4E9E:  MOVWF  xA4
4EA0:  MOVF   xA4,W
4EA2:  SUBLW  04
4EA4:  BNC   4EEE
....................             { 
....................                if(unidad==i) 
4EA6:  MOVF   xA4,W
4EA8:  SUBWF  xA3,W
4EAA:  BNZ   4EEA
....................                { 
....................                   Password[i-1]++; 
4EAC:  MOVLW  01
4EAE:  SUBWF  xA4,W
4EB0:  CLRF   03
4EB2:  ADDLW  D2
4EB4:  MOVWF  FE9
4EB6:  MOVLW  04
4EB8:  ADDWFC 03,W
4EBA:  MOVWF  FEA
4EBC:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4EBE:  MOVLW  01
4EC0:  SUBWF  xA4,W
4EC2:  CLRF   03
4EC4:  ADDLW  D2
4EC6:  MOVWF  FE9
4EC8:  MOVLW  04
4ECA:  ADDWFC 03,W
4ECC:  MOVWF  FEA
4ECE:  BTFSC  FEF.7
4ED0:  BRA    4EEA
4ED2:  MOVF   FEF,W
4ED4:  SUBLW  09
4ED6:  BC    4EEA
....................                   { 
....................                      Password[i-1]=0; 
4ED8:  MOVLW  01
4EDA:  SUBWF  xA4,W
4EDC:  CLRF   03
4EDE:  ADDLW  D2
4EE0:  MOVWF  FE9
4EE2:  MOVLW  04
4EE4:  ADDWFC 03,W
4EE6:  MOVWF  FEA
4EE8:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4EEA:  INCF   xA4,F
4EEC:  BRA    4EA0
....................          } 
....................       } 
....................       else 
4EEE:  BRA    4EF2
....................       { 
....................          Flanco = 0; 
4EF0:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4EF2:  BSF    F92.1
4EF4:  BTFSS  F80.1
4EF6:  BRA    4F5E
....................       { 
....................          if(Flanco2 == 0) 
4EF8:  BTFSC  x95.2
4EFA:  BRA    4F5C
....................             {Flanco2 = 1;delay_ms(30); 
4EFC:  BSF    x95.2
4EFE:  MOVLW  1E
4F00:  MOVLB  5
4F02:  MOVWF  x02
4F04:  MOVLB  0
4F06:  CALL   0F98
....................                for(i=1;i<=4;i++) 
4F0A:  MOVLW  01
4F0C:  MOVLB  4
4F0E:  MOVWF  xA4
4F10:  MOVF   xA4,W
4F12:  SUBLW  04
4F14:  BNC   4F5C
....................                { 
....................                   if(unidad==i) 
4F16:  MOVF   xA4,W
4F18:  SUBWF  xA3,W
4F1A:  BNZ   4F58
....................                   { 
....................                      Password[i-1]--; 
4F1C:  MOVLW  01
4F1E:  SUBWF  xA4,W
4F20:  CLRF   03
4F22:  ADDLW  D2
4F24:  MOVWF  FE9
4F26:  MOVLW  04
4F28:  ADDWFC 03,W
4F2A:  MOVWF  FEA
4F2C:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4F2E:  MOVLW  01
4F30:  SUBWF  xA4,W
4F32:  CLRF   03
4F34:  ADDLW  D2
4F36:  MOVWF  FE9
4F38:  MOVLW  04
4F3A:  ADDWFC 03,W
4F3C:  MOVWF  FEA
4F3E:  BTFSC  FEF.7
4F40:  BRA    4F44
4F42:  BRA    4F58
....................                      { 
....................                         Password[i-1]=9; 
4F44:  MOVLW  01
4F46:  SUBWF  xA4,W
4F48:  CLRF   03
4F4A:  ADDLW  D2
4F4C:  MOVWF  FE9
4F4E:  MOVLW  04
4F50:  ADDWFC 03,W
4F52:  MOVWF  FEA
4F54:  MOVLW  09
4F56:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
4F58:  INCF   xA4,F
4F5A:  BRA    4F10
....................             }      
....................       } 
....................       else 
4F5C:  BRA    4F60
....................       { 
....................          Flanco2 = 0; 
4F5E:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4F60:  BSF    F92.2
4F62:  BTFSS  F80.2
4F64:  BRA    4F88
....................       { 
....................          if(Flanco1 == 0) 
4F66:  BTFSC  x95.1
4F68:  BRA    4F86
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4F6A:  BSF    x95.1
4F6C:  MOVLW  02
4F6E:  MOVLB  5
4F70:  MOVWF  x01
4F72:  MOVLW  96
4F74:  MOVWF  x02
4F76:  MOVLB  0
4F78:  CALL   0F98
4F7C:  MOVLB  5
4F7E:  DECFSZ x01,F
4F80:  BRA    4F72
4F82:  MOVLB  4
4F84:  INCF   xA3,F
....................       } 
....................       else 
4F86:  BRA    4F8A
....................       { 
....................          Flanco1 = 0; 
4F88:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4F8A:  BSF    F92.3
4F8C:  BTFSS  F80.3
4F8E:  BRA    4FB8
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4F90:  MOVLW  04
4F92:  MOVLB  5
4F94:  MOVWF  x01
4F96:  MOVLW  AF
4F98:  MOVWF  x02
4F9A:  MOVLB  0
4F9C:  CALL   0F98
4FA0:  MOVLB  5
4FA2:  DECFSZ x01,F
4FA4:  BRA    4F96
4FA6:  MOVLW  01
4FA8:  MOVLB  4
4FAA:  MOVWF  xA2
4FAC:  MOVLB  5
4FAE:  CLRF   x02
4FB0:  MOVLB  0
4FB2:  CALL   1002
4FB6:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4FB8:  MOVF   xA3,W
4FBA:  SUBLW  04
4FBC:  BC    508A
....................       { 
....................          Opcion=1;unidad=1; 
4FBE:  MOVLW  01
4FC0:  MOVWF  xA7
4FC2:  MOVWF  xA3
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
4FC4:  MOVLW  0A
4FC6:  MOVWF  FA9
4FC8:  MOVFF  4D2,FA8
4FCC:  BCF    FA6.6
4FCE:  BCF    FA6.7
4FD0:  BSF    FA6.2
4FD2:  MOVF   FF2,W
4FD4:  MOVWF  00
4FD6:  BCF    FF2.7
4FD8:  MOVLB  F
4FDA:  MOVLW  55
4FDC:  MOVWF  FA7
4FDE:  MOVLW  AA
4FE0:  MOVWF  FA7
4FE2:  BSF    FA6.1
4FE4:  BTFSC  FA6.1
4FE6:  BRA    4FE4
4FE8:  BCF    FA6.2
4FEA:  MOVF   00,W
4FEC:  IORWF  FF2,F
4FEE:  MOVLW  0B
4FF0:  MOVWF  FA9
4FF2:  MOVFF  4D3,FA8
4FF6:  BCF    FA6.6
4FF8:  BCF    FA6.7
4FFA:  BSF    FA6.2
4FFC:  MOVF   FF2,W
4FFE:  MOVWF  00
5000:  BCF    FF2.7
5002:  MOVLW  55
5004:  MOVWF  FA7
5006:  MOVLW  AA
5008:  MOVWF  FA7
500A:  BSF    FA6.1
500C:  BTFSC  FA6.1
500E:  BRA    500C
5010:  BCF    FA6.2
5012:  MOVF   00,W
5014:  IORWF  FF2,F
5016:  MOVLW  0C
5018:  MOVWF  FA9
501A:  MOVFF  4D4,FA8
501E:  BCF    FA6.6
5020:  BCF    FA6.7
5022:  BSF    FA6.2
5024:  MOVF   FF2,W
5026:  MOVWF  00
5028:  BCF    FF2.7
502A:  MOVLW  55
502C:  MOVWF  FA7
502E:  MOVLW  AA
5030:  MOVWF  FA7
5032:  BSF    FA6.1
5034:  BTFSC  FA6.1
5036:  BRA    5034
5038:  BCF    FA6.2
503A:  MOVF   00,W
503C:  IORWF  FF2,F
503E:  MOVLW  0D
5040:  MOVWF  FA9
5042:  MOVFF  4D5,FA8
5046:  BCF    FA6.6
5048:  BCF    FA6.7
504A:  BSF    FA6.2
504C:  MOVF   FF2,W
504E:  MOVWF  00
5050:  BCF    FF2.7
5052:  MOVLW  55
5054:  MOVWF  FA7
5056:  MOVLW  AA
5058:  MOVWF  FA7
505A:  BSF    FA6.1
505C:  BTFSC  FA6.1
505E:  BRA    505C
5060:  BCF    FA6.2
5062:  MOVF   00,W
5064:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
5066:  MOVLW  04
5068:  MOVLB  5
506A:  MOVWF  x01
506C:  MOVLW  FA
506E:  MOVWF  x02
5070:  MOVLB  0
5072:  CALL   0F98
5076:  MOVLB  5
5078:  DECFSZ x01,F
507A:  BRA    506C
507C:  CLRF   x02
507E:  MOVLB  0
5080:  CALL   1002
5084:  MOVLW  01
5086:  MOVLB  4
5088:  MOVWF  xA2
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
508A:  MOVF   xA2,W
508C:  SUBLW  0B
508E:  BTFSS  FD8.2
5090:  BRA    5392
....................       
....................       if(visual==1) 
5092:  BTFSS  x95.4
5094:  BRA    5220
....................       { 
....................          if(unidad<1) 
5096:  MOVF   xA3,F
5098:  BNZ   509E
....................          {unidad=4;} 
509A:  MOVLW  04
509C:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
509E:  MOVLW  04
50A0:  MOVWF  FEA
50A2:  MOVLW  E1
50A4:  MOVWF  FE9
50A6:  MOVFF  FF2,501
50AA:  BCF    FF2.7
50AC:  MOVLW  00
50AE:  MOVLB  0
50B0:  CALL   0C06
50B4:  TBLRD*-
50B6:  TBLRD*+
50B8:  MOVF   FF5,W
50BA:  MOVWF  FEE
50BC:  IORLW  00
50BE:  BNZ   50B6
50C0:  MOVLB  5
50C2:  BTFSC  x01.7
50C4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
50C6:  MOVLW  04
50C8:  MOVWF  x02
50CA:  MOVLW  E1
50CC:  MOVWF  x01
50CE:  CLRF   x03
50D0:  CLRF   x04
50D2:  MOVLW  01
50D4:  MOVWF  x05
50D6:  MOVLW  02
50D8:  MOVWF  x06
50DA:  MOVLB  0
50DC:  CALL   1630
....................           
....................          if(unidad==4) 
50E0:  MOVLB  4
50E2:  MOVF   xA3,W
50E4:  SUBLW  04
50E6:  BNZ   5106
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
50E8:  MOVFF  4C5,502
50EC:  MOVLW  14
50EE:  MOVLB  5
50F0:  MOVWF  x03
50F2:  MOVLW  28
50F4:  MOVWF  x04
50F6:  MOVLW  01
50F8:  MOVWF  x05
50FA:  MOVLW  02
50FC:  MOVWF  x06
50FE:  MOVLB  0
5100:  CALL   2426
....................          else 
5104:  BRA    5120
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
5106:  MOVFF  4C5,502
510A:  MOVLW  14
510C:  MOVLB  5
510E:  MOVWF  x03
5110:  MOVLW  28
5112:  MOVWF  x04
5114:  CLRF   x05
5116:  MOVLW  02
5118:  MOVWF  x06
511A:  MOVLB  0
511C:  CALL   2426
....................           
....................          if(unidad==3) 
5120:  MOVLB  4
5122:  MOVF   xA3,W
5124:  SUBLW  03
5126:  BNZ   5144
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
5128:  MOVFF  4C4,502
512C:  MOVLW  28
512E:  MOVLB  5
5130:  MOVWF  x03
5132:  MOVWF  x04
5134:  MOVLW  01
5136:  MOVWF  x05
5138:  MOVLW  02
513A:  MOVWF  x06
513C:  MOVLB  0
513E:  CALL   2426
....................          else 
5142:  BRA    515C
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
5144:  MOVFF  4C4,502
5148:  MOVLW  28
514A:  MOVLB  5
514C:  MOVWF  x03
514E:  MOVWF  x04
5150:  CLRF   x05
5152:  MOVLW  02
5154:  MOVWF  x06
5156:  MOVLB  0
5158:  CALL   2426
....................           
....................          if(unidad==2) 
515C:  MOVLB  4
515E:  MOVF   xA3,W
5160:  SUBLW  02
5162:  BNZ   5182
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
5164:  MOVFF  4C3,502
5168:  MOVLW  46
516A:  MOVLB  5
516C:  MOVWF  x03
516E:  MOVLW  28
5170:  MOVWF  x04
5172:  MOVLW  01
5174:  MOVWF  x05
5176:  MOVLW  02
5178:  MOVWF  x06
517A:  MOVLB  0
517C:  CALL   2426
....................          else 
5180:  BRA    519C
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
5182:  MOVFF  4C3,502
5186:  MOVLW  46
5188:  MOVLB  5
518A:  MOVWF  x03
518C:  MOVLW  28
518E:  MOVWF  x04
5190:  CLRF   x05
5192:  MOVLW  02
5194:  MOVWF  x06
5196:  MOVLB  0
5198:  CALL   2426
....................           
....................          if(unidad==1) 
519C:  MOVLB  4
519E:  DECFSZ xA3,W
51A0:  BRA    51C0
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
51A2:  MOVFF  4C2,502
51A6:  MOVLW  5A
51A8:  MOVLB  5
51AA:  MOVWF  x03
51AC:  MOVLW  28
51AE:  MOVWF  x04
51B0:  MOVLW  01
51B2:  MOVWF  x05
51B4:  MOVLW  02
51B6:  MOVWF  x06
51B8:  MOVLB  0
51BA:  CALL   2426
....................          else 
51BE:  BRA    51DA
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
51C0:  MOVFF  4C2,502
51C4:  MOVLW  5A
51C6:  MOVLB  5
51C8:  MOVWF  x03
51CA:  MOVLW  28
51CC:  MOVWF  x04
51CE:  CLRF   x05
51D0:  MOVLW  02
51D2:  MOVWF  x06
51D4:  MOVLB  0
51D6:  CALL   2426
....................           
....................          strcpy(Menus.Letra,":"); 
51DA:  MOVLW  04
51DC:  MOVWF  FEA
51DE:  MOVLW  E1
51E0:  MOVWF  FE9
51E2:  MOVFF  FF2,501
51E6:  BCF    FF2.7
51E8:  MOVLW  00
51EA:  CALL   06BE
51EE:  TBLRD*-
51F0:  TBLRD*+
51F2:  MOVF   FF5,W
51F4:  MOVWF  FEE
51F6:  IORLW  00
51F8:  BNZ   51F0
51FA:  MOVLB  5
51FC:  BTFSC  x01.7
51FE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
5200:  MOVLW  04
5202:  MOVWF  x02
5204:  MOVLW  E1
5206:  MOVWF  x01
5208:  MOVLW  3C
520A:  MOVWF  x03
520C:  MOVLW  2A
520E:  MOVWF  x04
5210:  MOVLW  02
5212:  MOVWF  x05
5214:  MOVWF  x06
5216:  MOVLB  0
5218:  CALL   1630
....................           
....................          visual=0; 
521C:  MOVLB  4
521E:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5220:  BSF    F92.0
5222:  BTFSS  F80.0
5224:  BRA    5262
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
5226:  MOVLW  01
5228:  SUBWF  xA3,W
522A:  CLRF   03
522C:  ADDLW  C2
522E:  MOVWF  FE9
5230:  MOVLW  04
5232:  ADDWFC 03,W
5234:  MOVWF  FEA
5236:  BTFSC  FEF.7
5238:  BRA    5240
523A:  MOVF   FEF,W
523C:  SUBLW  08
523E:  BNC   5262
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
5240:  MOVLW  1E
5242:  MOVLB  5
5244:  MOVWF  x02
5246:  MOVLB  0
5248:  CALL   0F98
524C:  MOVLW  01
524E:  MOVLB  4
5250:  SUBWF  xA3,W
5252:  CLRF   03
5254:  ADDLW  C2
5256:  MOVWF  FE9
5258:  MOVLW  04
525A:  ADDWFC 03,W
525C:  MOVWF  FEA
525E:  INCF   FEF,F
5260:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5262:  BSF    F92.1
5264:  BTFSS  F80.1
5266:  BRA    52A4
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
5268:  MOVLW  01
526A:  SUBWF  xA3,W
526C:  CLRF   03
526E:  ADDLW  C2
5270:  MOVWF  FE9
5272:  MOVLW  04
5274:  ADDWFC 03,W
5276:  MOVWF  FEA
5278:  BTFSC  FEF.7
527A:  BRA    52A4
527C:  MOVF   FEF,W
527E:  SUBLW  00
5280:  BC    52A4
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
5282:  MOVLW  1E
5284:  MOVLB  5
5286:  MOVWF  x02
5288:  MOVLB  0
528A:  CALL   0F98
528E:  MOVLW  01
5290:  MOVLB  4
5292:  SUBWF  xA3,W
5294:  CLRF   03
5296:  ADDLW  C2
5298:  MOVWF  FE9
529A:  MOVLW  04
529C:  ADDWFC 03,W
529E:  MOVWF  FEA
52A0:  DECF   FEF,F
52A2:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
52A4:  BSF    F92.2
52A6:  BTFSS  F80.2
52A8:  BRA    52BC
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
52AA:  MOVLW  1E
52AC:  MOVLB  5
52AE:  MOVWF  x02
52B0:  MOVLB  0
52B2:  CALL   0F98
52B6:  MOVLB  4
52B8:  DECF   xA3,F
52BA:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
52BC:  BSF    F92.3
52BE:  BTFSS  F80.3
52C0:  BRA    5392
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
52C2:  MOVLW  04
52C4:  MOVLB  5
52C6:  MOVWF  x01
52C8:  MOVLW  AF
52CA:  MOVWF  x02
52CC:  MOVLB  0
52CE:  CALL   0F98
52D2:  MOVLB  5
52D4:  DECFSZ x01,F
52D6:  BRA    52C8
52D8:  MOVLW  08
52DA:  MOVLB  4
52DC:  MOVWF  xA2
52DE:  MOVLB  5
52E0:  CLRF   x02
52E2:  MOVLB  0
52E4:  CALL   1002
52E8:  MOVLW  01
52EA:  MOVLB  4
52EC:  MOVWF  xA7
52EE:  BSF    x95.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
52F0:  CLRF   FA9
52F2:  MOVFF  4C2,FA8
52F6:  BCF    FA6.6
52F8:  BCF    FA6.7
52FA:  BSF    FA6.2
52FC:  MOVF   FF2,W
52FE:  MOVWF  00
5300:  BCF    FF2.7
5302:  MOVLB  F
5304:  MOVLW  55
5306:  MOVWF  FA7
5308:  MOVLW  AA
530A:  MOVWF  FA7
530C:  BSF    FA6.1
530E:  BTFSC  FA6.1
5310:  BRA    530E
5312:  BCF    FA6.2
5314:  MOVF   00,W
5316:  IORWF  FF2,F
5318:  MOVLW  01
531A:  MOVWF  FA9
531C:  MOVFF  4C3,FA8
5320:  BCF    FA6.6
5322:  BCF    FA6.7
5324:  BSF    FA6.2
5326:  MOVF   FF2,W
5328:  MOVWF  00
532A:  BCF    FF2.7
532C:  MOVLW  55
532E:  MOVWF  FA7
5330:  MOVLW  AA
5332:  MOVWF  FA7
5334:  BSF    FA6.1
5336:  BTFSC  FA6.1
5338:  BRA    5336
533A:  BCF    FA6.2
533C:  MOVF   00,W
533E:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
5340:  MOVLW  02
5342:  MOVWF  FA9
5344:  MOVFF  4C4,FA8
5348:  BCF    FA6.6
534A:  BCF    FA6.7
534C:  BSF    FA6.2
534E:  MOVFF  FF2,00
5352:  BCF    FF2.7
5354:  MOVLW  55
5356:  MOVWF  FA7
5358:  MOVLW  AA
535A:  MOVWF  FA7
535C:  BSF    FA6.1
535E:  BTFSC  FA6.1
5360:  BRA    535E
5362:  BCF    FA6.2
5364:  MOVF   00,W
5366:  IORWF  FF2,F
5368:  MOVLW  03
536A:  MOVWF  FA9
536C:  MOVFF  4C5,FA8
5370:  BCF    FA6.6
5372:  BCF    FA6.7
5374:  BSF    FA6.2
5376:  MOVFF  FF2,00
537A:  BCF    FF2.7
537C:  MOVLW  55
537E:  MOVWF  FA7
5380:  MOVLW  AA
5382:  MOVWF  FA7
5384:  BSF    FA6.1
5386:  BTFSC  FA6.1
5388:  BRA    5386
538A:  BCF    FA6.2
538C:  MOVF   00,W
538E:  IORWF  FF2,F
5390:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
5392:  MOVF   xA2,W
5394:  SUBLW  0C
5396:  BTFSS  FD8.2
5398:  BRA    569C
....................       
....................       if(visual==1) 
539A:  BTFSS  x95.4
539C:  BRA    5528
....................       { 
....................          if(unidad<1) 
539E:  MOVF   xA3,F
53A0:  BNZ   53A6
....................          {unidad=4;} 
53A2:  MOVLW  04
53A4:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra," Secado"); 
53A6:  MOVLW  04
53A8:  MOVWF  FEA
53AA:  MOVLW  E1
53AC:  MOVWF  FE9
53AE:  MOVFF  FF2,501
53B2:  BCF    FF2.7
53B4:  MOVLW  00
53B6:  MOVLB  0
53B8:  CALL   0C2A
53BC:  TBLRD*-
53BE:  TBLRD*+
53C0:  MOVF   FF5,W
53C2:  MOVWF  FEE
53C4:  IORLW  00
53C6:  BNZ   53BE
53C8:  MOVLB  5
53CA:  BTFSC  x01.7
53CC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
53CE:  MOVLW  04
53D0:  MOVWF  x02
53D2:  MOVLW  E1
53D4:  MOVWF  x01
53D6:  CLRF   x03
53D8:  CLRF   x04
53DA:  MOVLW  01
53DC:  MOVWF  x05
53DE:  MOVLW  02
53E0:  MOVWF  x06
53E2:  MOVLB  0
53E4:  CALL   1630
....................           
....................          if(unidad==4) 
53E8:  MOVLB  4
53EA:  MOVF   xA3,W
53EC:  SUBLW  04
53EE:  BNZ   540E
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
53F0:  MOVFF  4CD,502
53F4:  MOVLW  14
53F6:  MOVLB  5
53F8:  MOVWF  x03
53FA:  MOVLW  28
53FC:  MOVWF  x04
53FE:  MOVLW  01
5400:  MOVWF  x05
5402:  MOVLW  02
5404:  MOVWF  x06
5406:  MOVLB  0
5408:  CALL   2426
....................          else 
540C:  BRA    5428
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
540E:  MOVFF  4CD,502
5412:  MOVLW  14
5414:  MOVLB  5
5416:  MOVWF  x03
5418:  MOVLW  28
541A:  MOVWF  x04
541C:  CLRF   x05
541E:  MOVLW  02
5420:  MOVWF  x06
5422:  MOVLB  0
5424:  CALL   2426
....................           
....................          if(unidad==3) 
5428:  MOVLB  4
542A:  MOVF   xA3,W
542C:  SUBLW  03
542E:  BNZ   544C
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
5430:  MOVFF  4CC,502
5434:  MOVLW  28
5436:  MOVLB  5
5438:  MOVWF  x03
543A:  MOVWF  x04
543C:  MOVLW  01
543E:  MOVWF  x05
5440:  MOVLW  02
5442:  MOVWF  x06
5444:  MOVLB  0
5446:  CALL   2426
....................          else 
544A:  BRA    5464
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
544C:  MOVFF  4CC,502
5450:  MOVLW  28
5452:  MOVLB  5
5454:  MOVWF  x03
5456:  MOVWF  x04
5458:  CLRF   x05
545A:  MOVLW  02
545C:  MOVWF  x06
545E:  MOVLB  0
5460:  CALL   2426
....................           
....................          if(unidad==2) 
5464:  MOVLB  4
5466:  MOVF   xA3,W
5468:  SUBLW  02
546A:  BNZ   548A
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
546C:  MOVFF  4CB,502
5470:  MOVLW  46
5472:  MOVLB  5
5474:  MOVWF  x03
5476:  MOVLW  28
5478:  MOVWF  x04
547A:  MOVLW  01
547C:  MOVWF  x05
547E:  MOVLW  02
5480:  MOVWF  x06
5482:  MOVLB  0
5484:  CALL   2426
....................          else 
5488:  BRA    54A4
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
548A:  MOVFF  4CB,502
548E:  MOVLW  46
5490:  MOVLB  5
5492:  MOVWF  x03
5494:  MOVLW  28
5496:  MOVWF  x04
5498:  CLRF   x05
549A:  MOVLW  02
549C:  MOVWF  x06
549E:  MOVLB  0
54A0:  CALL   2426
....................           
....................          if(unidad==1) 
54A4:  MOVLB  4
54A6:  DECFSZ xA3,W
54A8:  BRA    54C8
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
54AA:  MOVFF  4CA,502
54AE:  MOVLW  5A
54B0:  MOVLB  5
54B2:  MOVWF  x03
54B4:  MOVLW  28
54B6:  MOVWF  x04
54B8:  MOVLW  01
54BA:  MOVWF  x05
54BC:  MOVLW  02
54BE:  MOVWF  x06
54C0:  MOVLB  0
54C2:  CALL   2426
....................          else 
54C6:  BRA    54E2
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
54C8:  MOVFF  4CA,502
54CC:  MOVLW  5A
54CE:  MOVLB  5
54D0:  MOVWF  x03
54D2:  MOVLW  28
54D4:  MOVWF  x04
54D6:  CLRF   x05
54D8:  MOVLW  02
54DA:  MOVWF  x06
54DC:  MOVLB  0
54DE:  CALL   2426
....................           
....................          strcpy(Menus.Letra,":"); 
54E2:  MOVLW  04
54E4:  MOVWF  FEA
54E6:  MOVLW  E1
54E8:  MOVWF  FE9
54EA:  MOVFF  FF2,501
54EE:  BCF    FF2.7
54F0:  MOVLW  00
54F2:  CALL   06BE
54F6:  TBLRD*-
54F8:  TBLRD*+
54FA:  MOVF   FF5,W
54FC:  MOVWF  FEE
54FE:  IORLW  00
5500:  BNZ   54F8
5502:  MOVLB  5
5504:  BTFSC  x01.7
5506:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
5508:  MOVLW  04
550A:  MOVWF  x02
550C:  MOVLW  E1
550E:  MOVWF  x01
5510:  MOVLW  3C
5512:  MOVWF  x03
5514:  MOVLW  2A
5516:  MOVWF  x04
5518:  MOVLW  02
551A:  MOVWF  x05
551C:  MOVWF  x06
551E:  MOVLB  0
5520:  CALL   1630
....................           
....................          visual=0; 
5524:  MOVLB  4
5526:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5528:  BSF    F92.0
552A:  BTFSS  F80.0
552C:  BRA    556A
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
552E:  MOVLW  01
5530:  SUBWF  xA3,W
5532:  CLRF   03
5534:  ADDLW  CA
5536:  MOVWF  FE9
5538:  MOVLW  04
553A:  ADDWFC 03,W
553C:  MOVWF  FEA
553E:  BTFSC  FEF.7
5540:  BRA    5548
5542:  MOVF   FEF,W
5544:  SUBLW  08
5546:  BNC   556A
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
5548:  MOVLW  1E
554A:  MOVLB  5
554C:  MOVWF  x02
554E:  MOVLB  0
5550:  CALL   0F98
5554:  MOVLW  01
5556:  MOVLB  4
5558:  SUBWF  xA3,W
555A:  CLRF   03
555C:  ADDLW  CA
555E:  MOVWF  FE9
5560:  MOVLW  04
5562:  ADDWFC 03,W
5564:  MOVWF  FEA
5566:  INCF   FEF,F
5568:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
556A:  BSF    F92.1
556C:  BTFSS  F80.1
556E:  BRA    55AC
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
5570:  MOVLW  01
5572:  SUBWF  xA3,W
5574:  CLRF   03
5576:  ADDLW  CA
5578:  MOVWF  FE9
557A:  MOVLW  04
557C:  ADDWFC 03,W
557E:  MOVWF  FEA
5580:  BTFSC  FEF.7
5582:  BRA    55AC
5584:  MOVF   FEF,W
5586:  SUBLW  00
5588:  BC    55AC
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
558A:  MOVLW  1E
558C:  MOVLB  5
558E:  MOVWF  x02
5590:  MOVLB  0
5592:  CALL   0F98
5596:  MOVLW  01
5598:  MOVLB  4
559A:  SUBWF  xA3,W
559C:  CLRF   03
559E:  ADDLW  CA
55A0:  MOVWF  FE9
55A2:  MOVLW  04
55A4:  ADDWFC 03,W
55A6:  MOVWF  FEA
55A8:  DECF   FEF,F
55AA:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
55AC:  BSF    F92.2
55AE:  BTFSS  F80.2
55B0:  BRA    55C4
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
55B2:  MOVLW  1E
55B4:  MOVLB  5
55B6:  MOVWF  x02
55B8:  MOVLB  0
55BA:  CALL   0F98
55BE:  MOVLB  4
55C0:  DECF   xA3,F
55C2:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
55C4:  BSF    F92.3
55C6:  BTFSS  F80.3
55C8:  BRA    569C
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
55CA:  MOVLW  04
55CC:  MOVLB  5
55CE:  MOVWF  x01
55D0:  MOVLW  AF
55D2:  MOVWF  x02
55D4:  MOVLB  0
55D6:  CALL   0F98
55DA:  MOVLB  5
55DC:  DECFSZ x01,F
55DE:  BRA    55D0
55E0:  MOVLW  08
55E2:  MOVLB  4
55E4:  MOVWF  xA2
55E6:  MOVLB  5
55E8:  CLRF   x02
55EA:  MOVLB  0
55EC:  CALL   1002
55F0:  MOVLW  01
55F2:  MOVLB  4
55F4:  MOVWF  xA7
55F6:  BSF    x95.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
55F8:  MOVLW  04
55FA:  MOVWF  FA9
55FC:  MOVFF  4CA,FA8
5600:  BCF    FA6.6
5602:  BCF    FA6.7
5604:  BSF    FA6.2
5606:  MOVF   FF2,W
5608:  MOVWF  00
560A:  BCF    FF2.7
560C:  MOVLB  F
560E:  MOVLW  55
5610:  MOVWF  FA7
5612:  MOVLW  AA
5614:  MOVWF  FA7
5616:  BSF    FA6.1
5618:  BTFSC  FA6.1
561A:  BRA    5618
561C:  BCF    FA6.2
561E:  MOVF   00,W
5620:  IORWF  FF2,F
5622:  MOVLW  05
5624:  MOVWF  FA9
5626:  MOVFF  4CB,FA8
562A:  BCF    FA6.6
562C:  BCF    FA6.7
562E:  BSF    FA6.2
5630:  MOVF   FF2,W
5632:  MOVWF  00
5634:  BCF    FF2.7
5636:  MOVLW  55
5638:  MOVWF  FA7
563A:  MOVLW  AA
563C:  MOVWF  FA7
563E:  BSF    FA6.1
5640:  BTFSC  FA6.1
5642:  BRA    5640
5644:  BCF    FA6.2
5646:  MOVF   00,W
5648:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
564A:  MOVLW  06
564C:  MOVWF  FA9
564E:  MOVFF  4CC,FA8
5652:  BCF    FA6.6
5654:  BCF    FA6.7
5656:  BSF    FA6.2
5658:  MOVFF  FF2,00
565C:  BCF    FF2.7
565E:  MOVLW  55
5660:  MOVWF  FA7
5662:  MOVLW  AA
5664:  MOVWF  FA7
5666:  BSF    FA6.1
5668:  BTFSC  FA6.1
566A:  BRA    5668
566C:  BCF    FA6.2
566E:  MOVF   00,W
5670:  IORWF  FF2,F
5672:  MOVLW  07
5674:  MOVWF  FA9
5676:  MOVFF  4CD,FA8
567A:  BCF    FA6.6
567C:  BCF    FA6.7
567E:  BSF    FA6.2
5680:  MOVFF  FF2,00
5684:  BCF    FF2.7
5686:  MOVLW  55
5688:  MOVWF  FA7
568A:  MOVLW  AA
568C:  MOVWF  FA7
568E:  BSF    FA6.1
5690:  BTFSC  FA6.1
5692:  BRA    5690
5694:  BCF    FA6.2
5696:  MOVF   00,W
5698:  IORWF  FF2,F
569A:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
569C:  MOVF   xA2,W
569E:  SUBLW  0D
56A0:  BTFSS  FD8.2
56A2:  BRA    57DA
....................       
....................       if(visual==1) 
56A4:  BTFSS  x95.4
56A6:  BRA    570E
....................       { 
....................          glcd_fillScreen(OFF); 
56A8:  MOVLB  5
56AA:  CLRF   x02
56AC:  MOVLB  0
56AE:  CALL   1002
....................          strcpy(Menus.Letra,"Temperatura"); 
56B2:  MOVLW  04
56B4:  MOVWF  FEA
56B6:  MOVLW  E1
56B8:  MOVWF  FE9
56BA:  MOVFF  FF2,501
56BE:  BCF    FF2.7
56C0:  MOVLW  00
56C2:  CALL   0B6A
56C6:  TBLRD*-
56C8:  TBLRD*+
56CA:  MOVF   FF5,W
56CC:  MOVWF  FEE
56CE:  IORLW  00
56D0:  BNZ   56C8
56D2:  MOVLB  5
56D4:  BTFSC  x01.7
56D6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
56D8:  MOVLW  04
56DA:  MOVWF  x02
56DC:  MOVLW  E1
56DE:  MOVWF  x01
56E0:  CLRF   x03
56E2:  CLRF   x04
56E4:  MOVLW  01
56E6:  MOVWF  x05
56E8:  MOVLW  02
56EA:  MOVWF  x06
56EC:  MOVLB  0
56EE:  CALL   1630
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
56F2:  MOVFF  4A5,502
56F6:  MOVLW  1E
56F8:  MOVLB  5
56FA:  MOVWF  x03
56FC:  MOVWF  x04
56FE:  CLRF   x05
5700:  MOVLW  03
5702:  MOVWF  x06
5704:  MOVLB  0
5706:  CALL   2426
....................           
....................          visual=0; 
570A:  MOVLB  4
570C:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
570E:  BSF    F92.0
5710:  BTFSS  F80.0
5712:  BRA    5746
....................          {   
....................             if(Setpoint<134) 
5714:  MOVF   xA5,W
5716:  SUBLW  85
5718:  BNC   5746
....................             { 
....................                if(Setpoint<100) 
571A:  MOVF   xA5,W
571C:  SUBLW  63
571E:  BNC   5734
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
5720:  MOVLW  64
5722:  MOVWF  xA5
5724:  MOVLB  5
5726:  MOVWF  x02
5728:  MOVLB  0
572A:  CALL   0F98
572E:  MOVLB  4
5730:  BSF    x95.4
....................                } 
....................                else 
5732:  BRA    5746
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
5734:  MOVLW  1E
5736:  MOVLB  5
5738:  MOVWF  x02
573A:  MOVLB  0
573C:  CALL   0F98
5740:  MOVLB  4
5742:  INCF   xA5,F
5744:  BSF    x95.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5746:  BSF    F92.1
5748:  BTFSS  F80.1
574A:  BRA    5764
....................          {   
....................             if(Setpoint>105) 
574C:  MOVF   xA5,W
574E:  SUBLW  69
5750:  BC    5764
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
5752:  MOVLW  1E
5754:  MOVLB  5
5756:  MOVWF  x02
5758:  MOVLB  0
575A:  CALL   0F98
575E:  MOVLB  4
5760:  DECF   xA5,F
5762:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5764:  BSF    F92.2
5766:  BTFSS  F80.2
5768:  BRA    577A
....................          {   
....................             delay_ms(30);visual=1; 
576A:  MOVLW  1E
576C:  MOVLB  5
576E:  MOVWF  x02
5770:  MOVLB  0
5772:  CALL   0F98
5776:  MOVLB  4
5778:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
577A:  BSF    F92.3
577C:  BTFSS  F80.3
577E:  BRA    57DA
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5780:  MOVLW  04
5782:  MOVLB  5
5784:  MOVWF  x01
5786:  MOVLW  AF
5788:  MOVWF  x02
578A:  MOVLB  0
578C:  CALL   0F98
5790:  MOVLB  5
5792:  DECFSZ x01,F
5794:  BRA    5786
5796:  MOVLW  08
5798:  MOVLB  4
579A:  MOVWF  xA2
579C:  MOVLB  5
579E:  CLRF   x02
57A0:  MOVLB  0
57A2:  CALL   1002
57A6:  MOVLW  01
57A8:  MOVLB  4
57AA:  MOVWF  xA7
57AC:  BSF    x95.4
....................             write_eeprom(8,Setpoint); 
57AE:  MOVLW  08
57B0:  MOVWF  FA9
57B2:  MOVFF  4A5,FA8
57B6:  BCF    FA6.6
57B8:  BCF    FA6.7
57BA:  BSF    FA6.2
57BC:  MOVF   FF2,W
57BE:  MOVWF  00
57C0:  BCF    FF2.7
57C2:  MOVLB  F
57C4:  MOVLW  55
57C6:  MOVWF  FA7
57C8:  MOVLW  AA
57CA:  MOVWF  FA7
57CC:  BSF    FA6.1
57CE:  BTFSC  FA6.1
57D0:  BRA    57CE
57D2:  BCF    FA6.2
57D4:  MOVF   00,W
57D6:  IORWF  FF2,F
57D8:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
57DA:  MOVF   xA2,W
57DC:  SUBLW  0E
57DE:  BTFSS  FD8.2
57E0:  BRA    5AD0
....................       if(Nivel>6) 
57E2:  MOVF   xB5,F
57E4:  BNZ   57EC
57E6:  MOVF   xB4,W
57E8:  SUBLW  06
57EA:  BC    57F2
....................          Nivel=6; 
57EC:  CLRF   xB5
57EE:  MOVLW  06
57F0:  MOVWF  xB4
....................           
....................       if(visual==1) 
57F2:  BTFSS  x95.4
57F4:  BRA    5856
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
57F6:  MOVLW  04
57F8:  MOVWF  FEA
57FA:  MOVLW  E1
57FC:  MOVWF  FE9
57FE:  MOVFF  FF2,501
5802:  BCF    FF2.7
5804:  MOVLW  00
5806:  MOVLB  0
5808:  CALL   0C4C
580C:  TBLRD*-
580E:  TBLRD*+
5810:  MOVF   FF5,W
5812:  MOVWF  FEE
5814:  IORLW  00
5816:  BNZ   580E
5818:  MOVLB  5
581A:  BTFSC  x01.7
581C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
581E:  MOVLW  04
5820:  MOVWF  x02
5822:  MOVLW  E1
5824:  MOVWF  x01
5826:  CLRF   x03
5828:  CLRF   x04
582A:  MOVLW  01
582C:  MOVWF  x05
582E:  MOVLW  02
5830:  MOVWF  x06
5832:  MOVLB  0
5834:  CALL   1630
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
5838:  MOVFF  4B4,502
583C:  MOVLW  32
583E:  MOVLB  5
5840:  MOVWF  x03
5842:  MOVLW  28
5844:  MOVWF  x04
5846:  CLRF   x05
5848:  MOVLW  02
584A:  MOVWF  x06
584C:  MOVLB  0
584E:  CALL   2426
....................           
....................          visual=0; 
5852:  MOVLB  4
5854:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5856:  BSF    F92.0
5858:  BTFSS  F80.0
585A:  BRA    587C
....................          {   
....................             if(Nivel<6) 
585C:  MOVF   xB5,F
585E:  BNZ   587C
5860:  MOVF   xB4,W
5862:  SUBLW  05
5864:  BNC   587C
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
5866:  MOVLW  1E
5868:  MOVLB  5
586A:  MOVWF  x02
586C:  MOVLB  0
586E:  CALL   0F98
5872:  MOVLB  4
5874:  INCF   xB4,F
5876:  BTFSC  FD8.2
5878:  INCF   xB5,F
587A:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
587C:  BSF    F92.1
587E:  BTFSS  F80.1
5880:  BRA    58A4
....................          {   
....................             if(Nivel>1) 
5882:  MOVF   xB5,F
5884:  BNZ   588C
5886:  MOVF   xB4,W
5888:  SUBLW  01
588A:  BC    58A4
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
588C:  MOVLW  1E
588E:  MOVLB  5
5890:  MOVWF  x02
5892:  MOVLB  0
5894:  CALL   0F98
5898:  MOVLB  4
589A:  MOVF   xB4,W
589C:  BTFSC  FD8.2
589E:  DECF   xB5,F
58A0:  DECF   xB4,F
58A2:  BSF    x95.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
58A4:  BTFSS  x95.5
58A6:  BRA    5A60
....................          { 
....................             if(RIGHT)//Si oprime SET 
58A8:  BSF    F92.2
58AA:  BTFSS  F80.2
58AC:  BRA    5A5E
....................             {   
....................                write_eeprom(9,Nivel); 
58AE:  MOVLW  09
58B0:  MOVWF  FA9
58B2:  MOVFF  4B4,FA8
58B6:  BCF    FA6.6
58B8:  BCF    FA6.7
58BA:  BSF    FA6.2
58BC:  MOVF   FF2,W
58BE:  MOVWF  00
58C0:  BCF    FF2.7
58C2:  MOVLB  F
58C4:  MOVLW  55
58C6:  MOVWF  FA7
58C8:  MOVLW  AA
58CA:  MOVWF  FA7
58CC:  BSF    FA6.1
58CE:  BTFSC  FA6.1
58D0:  BRA    58CE
58D2:  BCF    FA6.2
58D4:  MOVF   00,W
58D6:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
58D8:  MOVLW  14
58DA:  MOVLB  4
58DC:  MOVWF  xA2
58DE:  MOVLW  0F
58E0:  MOVLB  5
58E2:  MOVWF  x13
58E4:  MOVLW  12
58E6:  MOVWF  x14
58E8:  MOVLW  1E
58EA:  MOVWF  x15
58EC:  MOVLW  35
58EE:  MOVWF  x16
58F0:  CLRF   x17
58F2:  MOVLW  01
58F4:  MOVWF  x18
58F6:  MOVLB  0
58F8:  CALL   156E
58FC:  MOVLB  4
58FE:  CLRF   xA9
5900:  MOVLW  C0
5902:  IORWF  FF2,F
5904:  MOVLB  5
5906:  CLRF   x02
5908:  MOVLB  0
590A:  CALL   1002
....................                strcpy(Menus.Letra,"Calentando"); 
590E:  MOVLW  04
5910:  MOVWF  FEA
5912:  MOVLW  E1
5914:  MOVWF  FE9
5916:  MOVFF  FF2,501
591A:  BCF    FF2.7
591C:  MOVLW  00
591E:  CALL   0966
5922:  TBLRD*-
5924:  TBLRD*+
5926:  MOVF   FF5,W
5928:  MOVWF  FEE
592A:  IORLW  00
592C:  BNZ   5924
592E:  MOVLB  5
5930:  BTFSC  x01.7
5932:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
5934:  MOVLW  04
5936:  MOVWF  x02
5938:  MOVLW  E1
593A:  MOVWF  x01
593C:  CLRF   x03
593E:  MOVLW  37
5940:  MOVWF  x04
5942:  MOVLW  02
5944:  MOVWF  x05
5946:  MOVLW  01
5948:  MOVWF  x06
594A:  MOVLB  0
594C:  CALL   1630
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
5950:  MOVLW  0F
5952:  MOVLB  5
5954:  MOVWF  x13
5956:  MOVLW  12
5958:  MOVWF  x14
595A:  MOVLW  1E
595C:  MOVWF  x15
595E:  MOVLW  35
5960:  MOVWF  x16
5962:  CLRF   x17
5964:  MOVLW  01
5966:  MOVWF  x18
5968:  MOVLB  0
596A:  CALL   156E
....................                glcd_imagen(5); 
596E:  MOVLW  05
5970:  MOVLB  5
5972:  MOVWF  x01
5974:  MOVLB  0
5976:  CALL   207A
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
597A:  MOVLW  04
597C:  MOVWF  FEA
597E:  MOVLW  E1
5980:  MOVWF  FE9
5982:  MOVFF  FF2,501
5986:  BCF    FF2.7
5988:  MOVLW  00
598A:  CALL   098C
598E:  TBLRD*-
5990:  TBLRD*+
5992:  MOVF   FF5,W
5994:  MOVWF  FEE
5996:  IORLW  00
5998:  BNZ   5990
599A:  MOVLB  5
599C:  BTFSC  x01.7
599E:  BSF    FF2.7
59A0:  MOVLW  04
59A2:  MOVWF  x02
59A4:  MOVLW  E1
59A6:  MOVWF  x01
59A8:  CLRF   x03
59AA:  CLRF   x04
59AC:  MOVLW  02
59AE:  MOVWF  x05
59B0:  MOVLW  01
59B2:  MOVWF  x06
59B4:  MOVLB  0
59B6:  CALL   1630
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
59BA:  MOVLW  04
59BC:  MOVWF  FEA
59BE:  MOVLW  E1
59C0:  MOVWF  FE9
59C2:  MOVFF  FF2,501
59C6:  BCF    FF2.7
59C8:  MOVLW  00
59CA:  CALL   09AE
59CE:  TBLRD*-
59D0:  TBLRD*+
59D2:  MOVF   FF5,W
59D4:  MOVWF  FEE
59D6:  IORLW  00
59D8:  BNZ   59D0
59DA:  MOVLB  5
59DC:  BTFSC  x01.7
59DE:  BSF    FF2.7
59E0:  MOVLW  04
59E2:  MOVWF  x02
59E4:  MOVLW  E1
59E6:  MOVWF  x01
59E8:  CLRF   x03
59EA:  MOVLW  08
59EC:  MOVWF  x04
59EE:  MOVLW  02
59F0:  MOVWF  x05
59F2:  MOVLW  01
59F4:  MOVWF  x06
59F6:  MOVLB  0
59F8:  CALL   1630
....................                glcd_circle(95,40,2,NO,ON); 
59FC:  MOVLW  5F
59FE:  MOVLB  5
5A00:  MOVWF  x01
5A02:  MOVLW  28
5A04:  MOVWF  x02
5A06:  MOVLW  02
5A08:  MOVWF  x03
5A0A:  CLRF   x04
5A0C:  MOVLW  01
5A0E:  MOVWF  x05
5A10:  MOVLB  0
5A12:  CALL   2176
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5A16:  MOVLW  04
5A18:  MOVWF  FEA
5A1A:  MOVLW  E1
5A1C:  MOVWF  FE9
5A1E:  MOVFF  FF2,501
5A22:  BCF    FF2.7
5A24:  MOVLW  00
5A26:  CALL   09D0
5A2A:  TBLRD*-
5A2C:  TBLRD*+
5A2E:  MOVF   FF5,W
5A30:  MOVWF  FEE
5A32:  IORLW  00
5A34:  BNZ   5A2C
5A36:  MOVLB  5
5A38:  BTFSC  x01.7
5A3A:  BSF    FF2.7
5A3C:  MOVLW  04
5A3E:  MOVWF  x02
5A40:  MOVLW  E1
5A42:  MOVWF  x01
5A44:  MOVLW  66
5A46:  MOVWF  x03
5A48:  MOVLW  28
5A4A:  MOVWF  x04
5A4C:  MOVLW  02
5A4E:  MOVWF  x05
5A50:  MOVWF  x06
5A52:  MOVLB  0
5A54:  CALL   1630
....................                MuestraTiemposProgramados(); 
5A58:  CALL   257E
5A5C:  MOVLB  4
....................             }       
....................          } 
....................          else 
5A5E:  BRA    5AD0
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5A60:  BSF    F92.3
5A62:  BTFSS  F80.3
5A64:  BRA    5AD0
....................             { 
....................                if(Nivel<6) 
5A66:  MOVF   xB5,F
5A68:  BNZ   5A74
5A6A:  MOVF   xB4,W
5A6C:  SUBLW  05
5A6E:  BNC   5A74
....................                { 
....................                   desfoguelento=1; 
5A70:  BSF    x95.5
....................                } 
....................                else 
5A72:  BRA    5A76
....................                { 
....................                   desfoguelento=0; 
5A74:  BCF    x95.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5A76:  MOVLW  04
5A78:  MOVLB  5
5A7A:  MOVWF  x01
5A7C:  MOVLW  AF
5A7E:  MOVWF  x02
5A80:  MOVLB  0
5A82:  CALL   0F98
5A86:  MOVLB  5
5A88:  DECFSZ x01,F
5A8A:  BRA    5A7C
5A8C:  MOVLW  08
5A8E:  MOVLB  4
5A90:  MOVWF  xA2
5A92:  MOVLB  5
5A94:  CLRF   x02
5A96:  MOVLB  0
5A98:  CALL   1002
5A9C:  MOVLW  01
5A9E:  MOVLB  4
5AA0:  MOVWF  xA7
5AA2:  BSF    x95.4
....................                write_eeprom(9,Nivel); 
5AA4:  MOVLW  09
5AA6:  MOVWF  FA9
5AA8:  MOVFF  4B4,FA8
5AAC:  BCF    FA6.6
5AAE:  BCF    FA6.7
5AB0:  BSF    FA6.2
5AB2:  MOVF   FF2,W
5AB4:  MOVWF  00
5AB6:  BCF    FF2.7
5AB8:  MOVLB  F
5ABA:  MOVLW  55
5ABC:  MOVWF  FA7
5ABE:  MOVLW  AA
5AC0:  MOVWF  FA7
5AC2:  BSF    FA6.1
5AC4:  BTFSC  FA6.1
5AC6:  BRA    5AC4
5AC8:  BCF    FA6.2
5ACA:  MOVF   00,W
5ACC:  IORWF  FF2,F
5ACE:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5AD0:  MOVF   xA2,W
5AD2:  SUBLW  0F
5AD4:  BTFSS  FD8.2
5AD6:  BRA    5E0A
....................        
....................       if(visual==1) 
5AD8:  BTFSS  x95.4
5ADA:  BRA    5C40
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5ADC:  MOVLW  04
5ADE:  MOVWF  FEA
5AE0:  MOVLW  E1
5AE2:  MOVWF  FE9
5AE4:  MOVFF  FF2,501
5AE8:  BCF    FF2.7
5AEA:  MOVLW  00
5AEC:  MOVLB  0
5AEE:  CALL   0BBC
5AF2:  TBLRD*-
5AF4:  TBLRD*+
5AF6:  MOVF   FF5,W
5AF8:  MOVWF  FEE
5AFA:  IORLW  00
5AFC:  BNZ   5AF4
5AFE:  MOVLB  5
5B00:  BTFSC  x01.7
5B02:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5B04:  MOVLW  04
5B06:  MOVWF  x02
5B08:  MOVLW  E1
5B0A:  MOVWF  x01
5B0C:  CLRF   x03
5B0E:  CLRF   x04
5B10:  MOVLW  01
5B12:  MOVWF  x05
5B14:  MOVLW  02
5B16:  MOVWF  x06
5B18:  MOVLB  0
5B1A:  CALL   1630
....................           
....................          if(Opcion==2) 
5B1E:  MOVLB  4
5B20:  MOVF   xA7,W
5B22:  SUBLW  02
5B24:  BNZ   5BB0
....................          {strcpy(Menus.Letra,"SI"); 
5B26:  MOVLW  04
5B28:  MOVWF  FEA
5B2A:  MOVLW  E1
5B2C:  MOVWF  FE9
5B2E:  MOVFF  FF2,501
5B32:  BCF    FF2.7
5B34:  MOVLW  00
5B36:  MOVLB  0
5B38:  CALL   0C70
5B3C:  TBLRD*-
5B3E:  TBLRD*+
5B40:  MOVF   FF5,W
5B42:  MOVWF  FEE
5B44:  IORLW  00
5B46:  BNZ   5B3E
5B48:  MOVLB  5
5B4A:  BTFSC  x01.7
5B4C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5B4E:  MOVLW  04
5B50:  MOVWF  x02
5B52:  MOVLW  E1
5B54:  MOVWF  x01
5B56:  MOVLW  32
5B58:  MOVWF  x03
5B5A:  MOVLW  19
5B5C:  MOVWF  x04
5B5E:  MOVLW  01
5B60:  MOVWF  x05
5B62:  MOVLW  02
5B64:  MOVWF  x06
5B66:  MOVLB  0
5B68:  CALL   1630
....................          strcpy(Menus.Letra,"NO"); 
5B6C:  MOVLW  04
5B6E:  MOVWF  FEA
5B70:  MOVLW  E1
5B72:  MOVWF  FE9
5B74:  MOVFF  FF2,501
5B78:  BCF    FF2.7
5B7A:  MOVLW  00
5B7C:  CALL   0C8E
5B80:  TBLRD*-
5B82:  TBLRD*+
5B84:  MOVF   FF5,W
5B86:  MOVWF  FEE
5B88:  IORLW  00
5B8A:  BNZ   5B82
5B8C:  MOVLB  5
5B8E:  BTFSC  x01.7
5B90:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5B92:  MOVLW  04
5B94:  MOVWF  x02
5B96:  MOVLW  E1
5B98:  MOVWF  x01
5B9A:  MOVLW  32
5B9C:  MOVWF  x03
5B9E:  MOVLW  2D
5BA0:  MOVWF  x04
5BA2:  CLRF   x05
5BA4:  MOVLW  02
5BA6:  MOVWF  x06
5BA8:  MOVLB  0
5BAA:  CALL   1630
5BAE:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
5BB0:  DECFSZ xA7,W
5BB2:  BRA    5C3E
....................          {strcpy(Menus.Letra,"SI"); 
5BB4:  MOVLW  04
5BB6:  MOVWF  FEA
5BB8:  MOVLW  E1
5BBA:  MOVWF  FE9
5BBC:  MOVFF  FF2,501
5BC0:  BCF    FF2.7
5BC2:  MOVLW  00
5BC4:  MOVLB  0
5BC6:  CALL   0C70
5BCA:  TBLRD*-
5BCC:  TBLRD*+
5BCE:  MOVF   FF5,W
5BD0:  MOVWF  FEE
5BD2:  IORLW  00
5BD4:  BNZ   5BCC
5BD6:  MOVLB  5
5BD8:  BTFSC  x01.7
5BDA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5BDC:  MOVLW  04
5BDE:  MOVWF  x02
5BE0:  MOVLW  E1
5BE2:  MOVWF  x01
5BE4:  MOVLW  32
5BE6:  MOVWF  x03
5BE8:  MOVLW  19
5BEA:  MOVWF  x04
5BEC:  CLRF   x05
5BEE:  MOVLW  02
5BF0:  MOVWF  x06
5BF2:  MOVLB  0
5BF4:  CALL   1630
....................          strcpy(Menus.Letra,"NO"); 
5BF8:  MOVLW  04
5BFA:  MOVWF  FEA
5BFC:  MOVLW  E1
5BFE:  MOVWF  FE9
5C00:  MOVFF  FF2,501
5C04:  BCF    FF2.7
5C06:  MOVLW  00
5C08:  CALL   0C8E
5C0C:  TBLRD*-
5C0E:  TBLRD*+
5C10:  MOVF   FF5,W
5C12:  MOVWF  FEE
5C14:  IORLW  00
5C16:  BNZ   5C0E
5C18:  MOVLB  5
5C1A:  BTFSC  x01.7
5C1C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5C1E:  MOVLW  04
5C20:  MOVWF  x02
5C22:  MOVLW  E1
5C24:  MOVWF  x01
5C26:  MOVLW  32
5C28:  MOVWF  x03
5C2A:  MOVLW  2D
5C2C:  MOVWF  x04
5C2E:  MOVLW  01
5C30:  MOVWF  x05
5C32:  MOVLW  02
5C34:  MOVWF  x06
5C36:  MOVLB  0
5C38:  CALL   1630
5C3C:  MOVLB  4
....................          } 
....................          visual=0; 
5C3E:  BCF    x95.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5C40:  BSF    F92.0
5C42:  BTFSS  F80.0
5C44:  BRA    5C50
....................       { 
....................          if(Opcion<2) 
5C46:  MOVF   xA7,W
5C48:  SUBLW  01
5C4A:  BNC   5C4E
....................          { 
....................             Opcion++; 
5C4C:  INCF   xA7,F
....................          } 
....................          visual=1; 
5C4E:  BSF    x95.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5C50:  BSF    F92.1
5C52:  BTFSS  F80.1
5C54:  BRA    5C60
....................       {   
....................          if(Opcion>1) 
5C56:  MOVF   xA7,W
5C58:  SUBLW  01
5C5A:  BC    5C5E
....................          { 
....................             Opcion--; 
5C5C:  DECF   xA7,F
....................          }   
....................          visual=1; 
5C5E:  BSF    x95.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5C60:  BSF    F92.2
5C62:  BTFSS  F80.2
5C64:  BRA    5DD6
....................       {   
....................          if(Opcion==2) 
5C66:  MOVF   xA7,W
5C68:  SUBLW  02
5C6A:  BTFSS  FD8.2
5C6C:  BRA    5DA8
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5C6E:  MOVLW  14
5C70:  MOVWF  xA2
5C72:  MOVLW  0F
5C74:  MOVLB  5
5C76:  MOVWF  x13
5C78:  MOVLW  12
5C7A:  MOVWF  x14
5C7C:  MOVLW  1E
5C7E:  MOVWF  x15
5C80:  MOVLW  35
5C82:  MOVWF  x16
5C84:  CLRF   x17
5C86:  MOVLW  01
5C88:  MOVWF  x18
5C8A:  MOVLB  0
5C8C:  CALL   156E
5C90:  MOVLB  4
5C92:  CLRF   xA9
5C94:  MOVLW  C0
5C96:  IORWF  FF2,F
5C98:  MOVLB  5
5C9A:  CLRF   x02
5C9C:  MOVLB  0
5C9E:  CALL   1002
....................             strcpy(Menus.Letra,"Calentando"); 
5CA2:  MOVLW  04
5CA4:  MOVWF  FEA
5CA6:  MOVLW  E1
5CA8:  MOVWF  FE9
5CAA:  MOVFF  FF2,501
5CAE:  BCF    FF2.7
5CB0:  MOVLW  00
5CB2:  CALL   0966
5CB6:  TBLRD*-
5CB8:  TBLRD*+
5CBA:  MOVF   FF5,W
5CBC:  MOVWF  FEE
5CBE:  IORLW  00
5CC0:  BNZ   5CB8
5CC2:  MOVLB  5
5CC4:  BTFSC  x01.7
5CC6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5CC8:  MOVLW  04
5CCA:  MOVWF  x02
5CCC:  MOVLW  E1
5CCE:  MOVWF  x01
5CD0:  CLRF   x03
5CD2:  MOVLW  37
5CD4:  MOVWF  x04
5CD6:  MOVLW  02
5CD8:  MOVWF  x05
5CDA:  MOVLW  01
5CDC:  MOVWF  x06
5CDE:  MOVLB  0
5CE0:  CALL   1630
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5CE4:  MOVLW  0F
5CE6:  MOVLB  5
5CE8:  MOVWF  x13
5CEA:  MOVLW  12
5CEC:  MOVWF  x14
5CEE:  MOVLW  1E
5CF0:  MOVWF  x15
5CF2:  MOVLW  35
5CF4:  MOVWF  x16
5CF6:  CLRF   x17
5CF8:  MOVLW  01
5CFA:  MOVWF  x18
5CFC:  MOVLB  0
5CFE:  CALL   156E
....................             glcd_imagen(5); 
5D02:  MOVLW  05
5D04:  MOVLB  5
5D06:  MOVWF  x01
5D08:  MOVLB  0
5D0A:  CALL   207A
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5D0E:  MOVLW  04
5D10:  MOVWF  FEA
5D12:  MOVLW  E1
5D14:  MOVWF  FE9
5D16:  MOVFF  FF2,501
5D1A:  BCF    FF2.7
5D1C:  MOVLW  00
5D1E:  CALL   098C
5D22:  TBLRD*-
5D24:  TBLRD*+
5D26:  MOVF   FF5,W
5D28:  MOVWF  FEE
5D2A:  IORLW  00
5D2C:  BNZ   5D24
5D2E:  MOVLB  5
5D30:  BTFSC  x01.7
5D32:  BSF    FF2.7
5D34:  MOVLW  04
5D36:  MOVWF  x02
5D38:  MOVLW  E1
5D3A:  MOVWF  x01
5D3C:  CLRF   x03
5D3E:  CLRF   x04
5D40:  MOVLW  02
5D42:  MOVWF  x05
5D44:  MOVLW  01
5D46:  MOVWF  x06
5D48:  MOVLB  0
5D4A:  CALL   1630
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5D4E:  MOVLW  04
5D50:  MOVWF  FEA
5D52:  MOVLW  E1
5D54:  MOVWF  FE9
5D56:  MOVFF  FF2,501
5D5A:  BCF    FF2.7
5D5C:  MOVLW  00
5D5E:  CALL   09AE
5D62:  TBLRD*-
5D64:  TBLRD*+
5D66:  MOVF   FF5,W
5D68:  MOVWF  FEE
5D6A:  IORLW  00
5D6C:  BNZ   5D64
5D6E:  MOVLB  5
5D70:  BTFSC  x01.7
5D72:  BSF    FF2.7
5D74:  MOVLW  04
5D76:  MOVWF  x02
5D78:  MOVLW  E1
5D7A:  MOVWF  x01
5D7C:  CLRF   x03
5D7E:  MOVLW  08
5D80:  MOVWF  x04
5D82:  MOVLW  02
5D84:  MOVWF  x05
5D86:  MOVLW  01
5D88:  MOVWF  x06
5D8A:  MOVLB  0
5D8C:  CALL   1630
....................             MuestraTiemposProgramados(); 
5D90:  CALL   257E
....................             if(Nivel<6) 
5D94:  MOVLB  4
5D96:  MOVF   xB5,F
5D98:  BNZ   5DA4
5D9A:  MOVF   xB4,W
5D9C:  SUBLW  05
5D9E:  BNC   5DA4
....................                { 
....................                   desfoguelento=1; 
5DA0:  BSF    x95.5
....................                } 
....................                else 
5DA2:  BRA    5DA6
....................                { 
....................                   desfoguelento=0; 
5DA4:  BCF    x95.5
....................                } 
....................          } 
....................          else 
5DA6:  BRA    5DD6
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DA8:  MOVLW  04
5DAA:  MOVLB  5
5DAC:  MOVWF  x01
5DAE:  MOVLW  AF
5DB0:  MOVWF  x02
5DB2:  MOVLB  0
5DB4:  CALL   0F98
5DB8:  MOVLB  5
5DBA:  DECFSZ x01,F
5DBC:  BRA    5DAE
5DBE:  MOVLW  08
5DC0:  MOVLB  4
5DC2:  MOVWF  xA2
5DC4:  MOVLB  5
5DC6:  CLRF   x02
5DC8:  MOVLB  0
5DCA:  CALL   1002
5DCE:  MOVLW  01
5DD0:  MOVLB  4
5DD2:  MOVWF  xA7
5DD4:  BSF    x95.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5DD6:  BSF    F92.3
5DD8:  BTFSS  F80.3
5DDA:  BRA    5E0A
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DDC:  MOVLW  04
5DDE:  MOVLB  5
5DE0:  MOVWF  x01
5DE2:  MOVLW  AF
5DE4:  MOVWF  x02
5DE6:  MOVLB  0
5DE8:  CALL   0F98
5DEC:  MOVLB  5
5DEE:  DECFSZ x01,F
5DF0:  BRA    5DE2
5DF2:  MOVLW  08
5DF4:  MOVLB  4
5DF6:  MOVWF  xA2
5DF8:  MOVLB  5
5DFA:  CLRF   x02
5DFC:  MOVLB  0
5DFE:  CALL   1002
5E02:  MOVLW  01
5E04:  MOVLB  4
5E06:  MOVWF  xA7
5E08:  BSF    x95.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
5E0A:  MOVF   xA2,W
5E0C:  SUBLW  14
5E0E:  BTFSS  FD8.2
5E10:  GOTO   6956
....................     
....................    Lectura_Esclavos(); 
5E14:  MOVLB  0
5E16:  CALL   1EC0
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
5E1A:  MOVLB  4
5E1C:  BTFSS  x96.1
5E1E:  BRA    5F66
5E20:  DECFSZ x8D,W
5E22:  BRA    5F66
5E24:  DECFSZ x8E,W
5E26:  BRA    5F66
5E28:  MOVF   xA8,W
5E2A:  SUBLW  01
5E2C:  BTFSS  FD8.0
5E2E:  BRA    5F66
5E30:  MOVF   x92,F
5E32:  BTFSS  FD8.2
5E34:  BRA    5F66
5E36:  MOVF   x93,F
5E38:  BTFSS  FD8.2
5E3A:  BRA    5F66
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
5E3C:  MOVF   xA8,F
5E3E:  BNZ   5ED8
5E40:  BTFSC  x96.2
5E42:  BRA    5ED8
....................       { 
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
5E44:  MOVLW  0F
5E46:  MOVLB  5
5E48:  MOVWF  x13
5E4A:  MOVLW  12
5E4C:  MOVWF  x14
5E4E:  MOVLW  1E
5E50:  MOVWF  x15
5E52:  MOVLW  35
5E54:  MOVWF  x16
5E56:  CLRF   x17
5E58:  MOVLW  01
5E5A:  MOVWF  x18
5E5C:  MOVLB  0
5E5E:  CALL   156E
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5E62:  MOVLB  5
5E64:  CLRF   x13
5E66:  MOVLW  37
5E68:  MOVWF  x14
5E6A:  MOVLW  7F
5E6C:  MOVWF  x15
5E6E:  MOVLW  3F
5E70:  MOVWF  x16
5E72:  MOVLW  01
5E74:  MOVWF  x17
5E76:  CLRF   x18
5E78:  MOVLB  0
5E7A:  CALL   156E
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
5E7E:  MOVLW  04
5E80:  MOVWF  FEA
5E82:  MOVLW  E1
5E84:  MOVWF  FE9
5E86:  MOVFF  FF2,501
5E8A:  BCF    FF2.7
5E8C:  MOVLW  00
5E8E:  CALL   0966
5E92:  TBLRD*-
5E94:  TBLRD*+
5E96:  MOVF   FF5,W
5E98:  MOVWF  FEE
5E9A:  IORLW  00
5E9C:  BNZ   5E94
5E9E:  MOVLB  5
5EA0:  BTFSC  x01.7
5EA2:  BSF    FF2.7
5EA4:  MOVLW  04
5EA6:  MOVWF  x02
5EA8:  MOVLW  E1
5EAA:  MOVWF  x01
5EAC:  CLRF   x03
5EAE:  MOVLW  37
5EB0:  MOVWF  x04
5EB2:  MOVLW  02
5EB4:  MOVWF  x05
5EB6:  MOVLW  01
5EB8:  MOVWF  x06
5EBA:  MOVLB  0
5EBC:  CALL   1630
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5EC0:  MOVLB  4
5EC2:  BSF    x96.2
5EC4:  BCF    x96.3
5EC6:  BCF    x96.4
5EC8:  BCF    x96.5
5ECA:  BCF    x96.6
5ECC:  BCF    x96.7
5ECE:  BCF    x97.0
5ED0:  BCF    x97.1
....................          EVDesfogue=0;Control=1; 
5ED2:  CLRF   x99
5ED4:  MOVLW  01
5ED6:  MOVWF  xA0
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
5ED8:  DECFSZ xA8,W
5EDA:  BRA    5F58
5EDC:  BTFSC  x96.5
5EDE:  BRA    5F58
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5EE0:  MOVLB  5
5EE2:  CLRF   x13
5EE4:  MOVLW  37
5EE6:  MOVWF  x14
5EE8:  MOVLW  7F
5EEA:  MOVWF  x15
5EEC:  MOVLW  3F
5EEE:  MOVWF  x16
5EF0:  MOVLW  01
5EF2:  MOVWF  x17
5EF4:  CLRF   x18
5EF6:  MOVLB  0
5EF8:  CALL   156E
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
5EFC:  MOVLW  04
5EFE:  MOVWF  FEA
5F00:  MOVLW  E1
5F02:  MOVWF  FE9
5F04:  MOVFF  FF2,501
5F08:  BCF    FF2.7
5F0A:  MOVLW  00
5F0C:  CALL   0CAC
5F10:  TBLRD*-
5F12:  TBLRD*+
5F14:  MOVF   FF5,W
5F16:  MOVWF  FEE
5F18:  IORLW  00
5F1A:  BNZ   5F12
5F1C:  MOVLB  5
5F1E:  BTFSC  x01.7
5F20:  BSF    FF2.7
5F22:  MOVLW  04
5F24:  MOVWF  x02
5F26:  MOVLW  E1
5F28:  MOVWF  x01
5F2A:  CLRF   x03
5F2C:  MOVLW  37
5F2E:  MOVWF  x04
5F30:  MOVLW  02
5F32:  MOVWF  x05
5F34:  MOVLW  01
5F36:  MOVWF  x06
5F38:  MOVLB  0
5F3A:  CALL   1630
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F3E:  MOVLB  4
5F40:  BCF    x96.2
5F42:  BCF    x96.3
5F44:  BCF    x96.4
5F46:  BSF    x96.5
5F48:  BCF    x96.6
5F4A:  BCF    x96.7
5F4C:  BCF    x97.0
5F4E:  BCF    x97.1
....................          EVDesfogue=0;EVTrampa=0;Control=1; 
5F50:  CLRF   x99
5F52:  CLRF   x9B
5F54:  MOVLW  01
5F56:  MOVWF  xA0
....................       } 
....................           
....................       Control=1; 
5F58:  MOVLW  01
5F5A:  MOVWF  xA0
....................       Envio_Esclavos(); 
5F5C:  MOVLB  0
5F5E:  CALL   201A
....................    } 
....................    else 
5F62:  BRA    6444
5F64:  MOVLB  4
....................    { 
....................       Control=0; 
5F66:  CLRF   xA0
....................       if(Alarma>0 || Alarma2>0) 
5F68:  MOVF   x92,F
5F6A:  BNZ   5F72
5F6C:  MOVF   x94,F
5F6E:  BTFSC  FD8.2
5F70:  BRA    60EE
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
5F72:  DECFSZ x92,W
5F74:  BRA    5FEC
....................          { 
....................             if(disp_Alarma==0) 
5F76:  BTFSC  x97.3
5F78:  BRA    5FEC
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5F7A:  MOVLB  5
5F7C:  CLRF   x13
5F7E:  MOVLW  37
5F80:  MOVWF  x14
5F82:  MOVLW  7F
5F84:  MOVWF  x15
5F86:  MOVLW  3F
5F88:  MOVWF  x16
5F8A:  MOVLW  01
5F8C:  MOVWF  x17
5F8E:  CLRF   x18
5F90:  MOVLB  0
5F92:  CALL   156E
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
5F96:  MOVLW  04
5F98:  MOVWF  FEA
5F9A:  MOVLW  E1
5F9C:  MOVWF  FE9
5F9E:  MOVFF  FF2,501
5FA2:  BCF    FF2.7
5FA4:  MOVLW  00
5FA6:  CALL   0CD4
5FAA:  TBLRD*-
5FAC:  TBLRD*+
5FAE:  MOVF   FF5,W
5FB0:  MOVWF  FEE
5FB2:  IORLW  00
5FB4:  BNZ   5FAC
5FB6:  MOVLB  5
5FB8:  BTFSC  x01.7
5FBA:  BSF    FF2.7
5FBC:  MOVLW  04
5FBE:  MOVWF  x02
5FC0:  MOVLW  E1
5FC2:  MOVWF  x01
5FC4:  CLRF   x03
5FC6:  MOVLW  37
5FC8:  MOVWF  x04
5FCA:  MOVLW  02
5FCC:  MOVWF  x05
5FCE:  MOVLW  01
5FD0:  MOVWF  x06
5FD2:  MOVLB  0
5FD4:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
5FD8:  MOVLB  4
5FDA:  BCF    x96.2
5FDC:  BCF    x96.3
5FDE:  BCF    x96.4
5FE0:  BCF    x96.5
5FE2:  BCF    x96.6
5FE4:  BCF    x96.7
5FE6:  BCF    x97.0
5FE8:  BCF    x97.1
....................                disp_Alarma=1; 
5FEA:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
5FEC:  MOVF   x92,W
5FEE:  SUBLW  02
5FF0:  BNZ   606C
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
5FF2:  CLRF   xA8
5FF4:  CLRF   xA9
....................             if(disp_Alarma==0) 
5FF6:  BTFSC  x97.3
5FF8:  BRA    606C
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5FFA:  MOVLB  5
5FFC:  CLRF   x13
5FFE:  MOVLW  37
6000:  MOVWF  x14
6002:  MOVLW  7F
6004:  MOVWF  x15
6006:  MOVLW  3F
6008:  MOVWF  x16
600A:  MOVLW  01
600C:  MOVWF  x17
600E:  CLRF   x18
6010:  MOVLB  0
6012:  CALL   156E
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6016:  MOVLW  04
6018:  MOVWF  FEA
601A:  MOVLW  E1
601C:  MOVWF  FE9
601E:  MOVFF  FF2,501
6022:  BCF    FF2.7
6024:  MOVLW  00
6026:  CALL   0CFA
602A:  TBLRD*-
602C:  TBLRD*+
602E:  MOVF   FF5,W
6030:  MOVWF  FEE
6032:  IORLW  00
6034:  BNZ   602C
6036:  MOVLB  5
6038:  BTFSC  x01.7
603A:  BSF    FF2.7
603C:  MOVLW  04
603E:  MOVWF  x02
6040:  MOVLW  E1
6042:  MOVWF  x01
6044:  CLRF   x03
6046:  MOVLW  37
6048:  MOVWF  x04
604A:  MOVLW  02
604C:  MOVWF  x05
604E:  MOVLW  01
6050:  MOVWF  x06
6052:  MOVLB  0
6054:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
6058:  MOVLB  4
605A:  BCF    x96.2
605C:  BCF    x96.3
605E:  BCF    x96.4
6060:  BCF    x96.5
6062:  BCF    x96.6
6064:  BCF    x96.7
6066:  BCF    x97.0
6068:  BCF    x97.1
....................                disp_Alarma=1; 
606A:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==3) // Alarma de Error de Agua: Error por Bajo Nivel de Agua Durante Funcionamiento 
606C:  MOVF   x92,W
606E:  SUBLW  03
6070:  BNZ   60EC
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
6072:  CLRF   xA8
6074:  CLRF   xA9
....................             if(disp_Alarma==0) 
6076:  BTFSC  x97.3
6078:  BRA    60EC
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
607A:  MOVLB  5
607C:  CLRF   x13
607E:  MOVLW  37
6080:  MOVWF  x14
6082:  MOVLW  7F
6084:  MOVWF  x15
6086:  MOVLW  3F
6088:  MOVWF  x16
608A:  MOVLW  01
608C:  MOVWF  x17
608E:  CLRF   x18
6090:  MOVLB  0
6092:  CALL   156E
....................                strcpy(Menus.Letra,"Error:EA02");displayMenu(Menus.Letra,0,55,2,1); 
6096:  MOVLW  04
6098:  MOVWF  FEA
609A:  MOVLW  E1
609C:  MOVWF  FE9
609E:  MOVFF  FF2,501
60A2:  BCF    FF2.7
60A4:  MOVLW  00
60A6:  CALL   0D20
60AA:  TBLRD*-
60AC:  TBLRD*+
60AE:  MOVF   FF5,W
60B0:  MOVWF  FEE
60B2:  IORLW  00
60B4:  BNZ   60AC
60B6:  MOVLB  5
60B8:  BTFSC  x01.7
60BA:  BSF    FF2.7
60BC:  MOVLW  04
60BE:  MOVWF  x02
60C0:  MOVLW  E1
60C2:  MOVWF  x01
60C4:  CLRF   x03
60C6:  MOVLW  37
60C8:  MOVWF  x04
60CA:  MOVLW  02
60CC:  MOVWF  x05
60CE:  MOVLW  01
60D0:  MOVWF  x06
60D2:  MOVLB  0
60D4:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
60D8:  MOVLB  4
60DA:  BCF    x96.2
60DC:  BCF    x96.3
60DE:  BCF    x96.4
60E0:  BCF    x96.5
60E2:  BCF    x96.6
60E4:  BCF    x96.7
60E6:  BCF    x97.0
60E8:  BCF    x97.1
....................                disp_Alarma=1; 
60EA:  BSF    x97.3
....................             } 
....................          } 
....................           
....................       } 
....................       else 
60EC:  BRA    643E
....................       {  
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
60EE:  MOVF   xA8,W
60F0:  SUBLW  02
60F2:  BTFSS  FD8.2
60F4:  BRA    62B6
60F6:  BTFSS  x96.1
60F8:  BRA    62B6
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
60FA:  BTFSS  x95.5
60FC:  BRA    61DC
....................             { 
....................                if(z==0) 
60FE:  BTFSC  x97.2
6100:  BRA    6152
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
6102:  MOVLB  5
6104:  CLRF   x01
6106:  MOVLW  5A
6108:  MOVWF  x02
610A:  MOVLW  38
610C:  MOVWF  x03
610E:  MOVLB  0
6110:  CALL   26BE
6114:  MOVLW  19
6116:  MOVLB  5
6118:  MOVWF  x13
611A:  MOVLW  12
611C:  MOVWF  x14
611E:  MOVLW  3C
6120:  MOVWF  x15
6122:  MOVLW  1A
6124:  MOVWF  x16
6126:  CLRF   x17
6128:  CLRF   x18
612A:  MOVLB  0
612C:  CALL   156E
6130:  MOVLW  37
6132:  MOVLB  5
6134:  MOVWF  x13
6136:  MOVLW  12
6138:  MOVWF  x14
613A:  MOVLW  44
613C:  MOVWF  x15
613E:  MOVLW  35
6140:  MOVWF  x16
6142:  CLRF   x17
6144:  MOVLW  01
6146:  MOVWF  x18
6148:  MOVLB  0
614A:  CALL   156E
614E:  MOVLB  4
6150:  BSF    x97.2
....................                } 
....................                if(disp_Despresurizando==0) 
6152:  BTFSC  x96.6
6154:  BRA    61D4
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6156:  MOVLB  5
6158:  CLRF   x13
615A:  MOVLW  37
615C:  MOVWF  x14
615E:  MOVLW  7F
6160:  MOVWF  x15
6162:  MOVLW  3F
6164:  MOVWF  x16
6166:  MOVLW  01
6168:  MOVWF  x17
616A:  CLRF   x18
616C:  MOVLB  0
616E:  CALL   156E
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
6172:  MOVLW  04
6174:  MOVWF  FEA
6176:  MOVLW  E1
6178:  MOVWF  FE9
617A:  MOVFF  FF2,501
617E:  BCF    FF2.7
6180:  MOVLW  00
6182:  CALL   0D46
6186:  TBLRD*-
6188:  TBLRD*+
618A:  MOVF   FF5,W
618C:  MOVWF  FEE
618E:  IORLW  00
6190:  BNZ   6188
6192:  MOVLB  5
6194:  BTFSC  x01.7
6196:  BSF    FF2.7
6198:  MOVLW  04
619A:  MOVWF  x02
619C:  MOVLW  E1
619E:  MOVWF  x01
61A0:  CLRF   x03
61A2:  MOVLW  37
61A4:  MOVWF  x04
61A6:  MOVLW  02
61A8:  MOVWF  x05
61AA:  MOVLW  01
61AC:  MOVWF  x06
61AE:  MOVLB  0
61B0:  CALL   1630
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
61B4:  MOVLB  4
61B6:  BCF    x96.2
61B8:  BCF    x96.3
61BA:  BCF    x96.4
61BC:  BCF    x96.5
61BE:  BSF    x96.6
61C0:  BCF    x96.7
61C2:  BCF    x97.0
61C4:  BCF    x97.1
....................                   glcd_imagen(5); 
61C6:  MOVLW  05
61C8:  MOVLB  5
61CA:  MOVWF  x01
61CC:  MOVLB  0
61CE:  CALL   207A
61D2:  MOVLB  4
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
61D4:  MOVLW  02
61D6:  MOVWF  xAA
61D8:  MOVWF  xA9
....................             } 
....................             else 
61DA:  BRA    62B6
....................             { 
....................                if(z==0) 
61DC:  BTFSC  x97.2
61DE:  BRA    6230
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
61E0:  MOVLB  5
61E2:  CLRF   x01
61E4:  MOVLW  5A
61E6:  MOVWF  x02
61E8:  MOVLW  38
61EA:  MOVWF  x03
61EC:  MOVLB  0
61EE:  CALL   26BE
61F2:  MOVLW  19
61F4:  MOVLB  5
61F6:  MOVWF  x13
61F8:  MOVLW  12
61FA:  MOVWF  x14
61FC:  MOVLW  3C
61FE:  MOVWF  x15
6200:  MOVLW  1A
6202:  MOVWF  x16
6204:  CLRF   x17
6206:  CLRF   x18
6208:  MOVLB  0
620A:  CALL   156E
620E:  MOVLW  37
6210:  MOVLB  5
6212:  MOVWF  x13
6214:  MOVLW  12
6216:  MOVWF  x14
6218:  MOVLW  44
621A:  MOVWF  x15
621C:  MOVLW  35
621E:  MOVWF  x16
6220:  CLRF   x17
6222:  MOVLW  01
6224:  MOVWF  x18
6226:  MOVLB  0
6228:  CALL   156E
622C:  MOVLB  4
622E:  BSF    x97.2
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
6230:  BTFSC  x96.4
6232:  BRA    62B2
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6234:  MOVLB  5
6236:  CLRF   x13
6238:  MOVLW  37
623A:  MOVWF  x14
623C:  MOVLW  7F
623E:  MOVWF  x15
6240:  MOVLW  3F
6242:  MOVWF  x16
6244:  MOVLW  01
6246:  MOVWF  x17
6248:  CLRF   x18
624A:  MOVLB  0
624C:  CALL   156E
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
6250:  MOVLW  04
6252:  MOVWF  FEA
6254:  MOVLW  E1
6256:  MOVWF  FE9
6258:  MOVFF  FF2,501
625C:  BCF    FF2.7
625E:  MOVLW  00
6260:  CALL   0D70
6264:  TBLRD*-
6266:  TBLRD*+
6268:  MOVF   FF5,W
626A:  MOVWF  FEE
626C:  IORLW  00
626E:  BNZ   6266
6270:  MOVLB  5
6272:  BTFSC  x01.7
6274:  BSF    FF2.7
6276:  MOVLW  04
6278:  MOVWF  x02
627A:  MOVLW  E1
627C:  MOVWF  x01
627E:  CLRF   x03
6280:  MOVLW  37
6282:  MOVWF  x04
6284:  MOVLW  02
6286:  MOVWF  x05
6288:  MOVLW  01
628A:  MOVWF  x06
628C:  MOVLB  0
628E:  CALL   1630
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6292:  MOVLB  4
6294:  BCF    x96.2
6296:  BCF    x96.3
6298:  BSF    x96.4
629A:  BCF    x96.5
629C:  BCF    x96.6
629E:  BCF    x96.7
62A0:  BCF    x97.0
62A2:  BCF    x97.1
....................                   glcd_imagen(5); 
62A4:  MOVLW  05
62A6:  MOVLB  5
62A8:  MOVWF  x01
62AA:  MOVLB  0
62AC:  CALL   207A
62B0:  MOVLB  4
....................                } 
....................                Exhaust=1; 
62B2:  MOVLW  01
62B4:  MOVWF  xAA
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0 && AlarmaAgua==0) 
62B6:  MOVF   x8D,F
62B8:  BNZ   633A
62BA:  MOVF   x93,F
62BC:  BNZ   633A
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0 && flag_agua==1) 
62BE:  BTFSC  x97.0
62C0:  BRA    633A
62C2:  MOVF   xA6,F
62C4:  BNZ   633A
62C6:  BTFSS  x96.1
62C8:  BRA    633A
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
62CA:  MOVLB  5
62CC:  CLRF   x13
62CE:  MOVLW  37
62D0:  MOVWF  x14
62D2:  MOVLW  7F
62D4:  MOVWF  x15
62D6:  MOVLW  3F
62D8:  MOVWF  x16
62DA:  MOVLW  01
62DC:  MOVWF  x17
62DE:  CLRF   x18
62E0:  MOVLB  0
62E2:  CALL   156E
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
62E6:  MOVLW  04
62E8:  MOVWF  FEA
62EA:  MOVLW  E1
62EC:  MOVWF  FE9
62EE:  MOVFF  FF2,501
62F2:  BCF    FF2.7
62F4:  MOVLW  00
62F6:  CALL   0D92
62FA:  TBLRD*-
62FC:  TBLRD*+
62FE:  MOVF   FF5,W
6300:  MOVWF  FEE
6302:  IORLW  00
6304:  BNZ   62FC
6306:  MOVLB  5
6308:  BTFSC  x01.7
630A:  BSF    FF2.7
630C:  MOVLW  04
630E:  MOVWF  x02
6310:  MOVLW  E1
6312:  MOVWF  x01
6314:  CLRF   x03
6316:  MOVLW  37
6318:  MOVWF  x04
631A:  MOVLW  02
631C:  MOVWF  x05
631E:  MOVLW  01
6320:  MOVWF  x06
6322:  MOVLB  0
6324:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
6328:  MOVLB  4
632A:  BCF    x96.2
632C:  BCF    x96.3
632E:  BCF    x96.4
6330:  BCF    x96.5
6332:  BCF    x96.6
6334:  BCF    x96.7
6336:  BSF    x97.0
6338:  BCF    x97.1
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          disp_Alarma=0; 
633A:  BCF    x97.3
....................          if(NivelTanque==1 && flag_agua==0 ) 
633C:  DECFSZ x90,W
633E:  BRA    6348
6340:  BTFSC  x96.1
6342:  BRA    6348
....................          { 
....................             flag_agua=1; 
6344:  BSF    x96.1
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
6346:  BRA    643E
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && flag_agua==0) 
6348:  MOVF   xA8,F
634A:  BNZ   63C6
634C:  BTFSC  x96.3
634E:  BRA    63C6
6350:  BTFSC  x96.1
6352:  BRA    63C6
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6354:  MOVLB  5
6356:  CLRF   x13
6358:  MOVLW  37
635A:  MOVWF  x14
635C:  MOVLW  7F
635E:  MOVWF  x15
6360:  MOVLW  3F
6362:  MOVWF  x16
6364:  MOVLW  01
6366:  MOVWF  x17
6368:  CLRF   x18
636A:  MOVLB  0
636C:  CALL   156E
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
6370:  MOVLW  04
6372:  MOVWF  FEA
6374:  MOVLW  E1
6376:  MOVWF  FE9
6378:  MOVFF  FF2,501
637C:  BCF    FF2.7
637E:  MOVLW  00
6380:  CALL   0DBC
6384:  TBLRD*-
6386:  TBLRD*+
6388:  MOVF   FF5,W
638A:  MOVWF  FEE
638C:  IORLW  00
638E:  BNZ   6386
6390:  MOVLB  5
6392:  BTFSC  x01.7
6394:  BSF    FF2.7
6396:  MOVLW  04
6398:  MOVWF  x02
639A:  MOVLW  E1
639C:  MOVWF  x01
639E:  CLRF   x03
63A0:  MOVLW  37
63A2:  MOVWF  x04
63A4:  MOVLW  02
63A6:  MOVWF  x05
63A8:  MOVLW  01
63AA:  MOVWF  x06
63AC:  MOVLB  0
63AE:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
63B2:  MOVLB  4
63B4:  BCF    x96.2
63B6:  BSF    x96.3
63B8:  BCF    x96.4
63BA:  BCF    x96.5
63BC:  BCF    x96.6
63BE:  BCF    x96.7
63C0:  BCF    x97.0
63C2:  BCF    x97.1
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
63C4:  CLRF   xA0
....................             } 
....................              
....................             if(AlarmaAgua==1) 
63C6:  DECFSZ x93,W
63C8:  BRA    643E
....................             { 
....................                if(disp_AlarmaAgua==0) 
63CA:  BTFSC  x97.4
63CC:  BRA    643E
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
63CE:  MOVLB  5
63D0:  CLRF   x13
63D2:  MOVLW  37
63D4:  MOVWF  x14
63D6:  MOVLW  7F
63D8:  MOVWF  x15
63DA:  MOVLW  3F
63DC:  MOVWF  x16
63DE:  MOVLW  01
63E0:  MOVWF  x17
63E2:  CLRF   x18
63E4:  MOVLB  0
63E6:  CALL   156E
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
63EA:  MOVLW  04
63EC:  MOVWF  FEA
63EE:  MOVLW  E1
63F0:  MOVWF  FE9
63F2:  MOVFF  FF2,501
63F6:  BCF    FF2.7
63F8:  MOVLW  00
63FA:  CALL   0DE0
63FE:  TBLRD*-
6400:  TBLRD*+
6402:  MOVF   FF5,W
6404:  MOVWF  FEE
6406:  IORLW  00
6408:  BNZ   6400
640A:  MOVLB  5
640C:  BTFSC  x01.7
640E:  BSF    FF2.7
6410:  MOVLW  04
6412:  MOVWF  x02
6414:  MOVLW  E1
6416:  MOVWF  x01
6418:  CLRF   x03
641A:  MOVLW  37
641C:  MOVWF  x04
641E:  MOVLW  02
6420:  MOVWF  x05
6422:  MOVLW  01
6424:  MOVWF  x06
6426:  MOVLB  0
6428:  CALL   1630
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
642C:  MOVLB  4
642E:  BCF    x96.2
6430:  BCF    x96.4
6432:  BCF    x96.5
6434:  BCF    x96.6
6436:  BCF    x96.7
6438:  BCF    x97.0
643A:  BCF    x97.1
....................                   disp_AlarmaAgua=1; 
643C:  BSF    x97.4
....................                } 
....................             } 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
643E:  MOVLB  0
6440:  CALL   201A
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
6444:  MOVLB  4
6446:  BTFSS  x95.6
6448:  BRA    6720
....................    {                       
....................       Lectura=0; 
644A:  BCF    x95.6
....................       displayTiempo(Presostato,31,40,2,1); 
644C:  MOVFF  491,502
6450:  MOVLW  1F
6452:  MOVLB  5
6454:  MOVWF  x03
6456:  MOVLW  28
6458:  MOVWF  x04
645A:  MOVLW  02
645C:  MOVWF  x05
645E:  MOVLW  01
6460:  MOVWF  x06
6462:  MOVLB  0
6464:  CALL   2426
....................       glcd_rect(51, 40, 62, 48, YES, OFF);glcd_text57(52, 40, kpa, 1, ON); 
6468:  MOVLW  33
646A:  MOVLB  5
646C:  MOVWF  x13
646E:  MOVLW  28
6470:  MOVWF  x14
6472:  MOVLW  3E
6474:  MOVWF  x15
6476:  MOVLW  30
6478:  MOVWF  x16
647A:  MOVLW  01
647C:  MOVWF  x17
647E:  CLRF   x18
6480:  MOVLB  0
6482:  CALL   156E
6486:  MOVLW  34
6488:  MOVLB  5
648A:  MOVWF  x12
648C:  MOVLW  28
648E:  MOVWF  x13
6490:  MOVLW  04
6492:  MOVWF  x15
6494:  MOVLW  89
6496:  MOVWF  x14
6498:  MOVLW  01
649A:  MOVWF  x16
649C:  MOVWF  x17
649E:  MOVLB  0
64A0:  CALL   1278
....................       displayT(ADC_Pt100,69,20,2); 
64A4:  MOVFF  4BD,504
64A8:  MOVFF  4BC,503
64AC:  MOVFF  4BB,502
64B0:  MOVFF  4BA,501
64B4:  MOVLW  45
64B6:  MOVLB  5
64B8:  MOVWF  x05
64BA:  MOVLW  14
64BC:  MOVWF  x06
64BE:  MOVLW  02
64C0:  MOVWF  x07
64C2:  MOVLB  0
64C4:  GOTO   2A52
....................       glcd_circle(95,40,2,NO,ON); 
64C8:  MOVLW  5F
64CA:  MOVLB  5
64CC:  MOVWF  x01
64CE:  MOVLW  28
64D0:  MOVWF  x02
64D2:  MOVLW  02
64D4:  MOVWF  x03
64D6:  CLRF   x04
64D8:  MOVLW  01
64DA:  MOVWF  x05
64DC:  MOVLB  0
64DE:  CALL   2176
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
64E2:  MOVLW  04
64E4:  MOVWF  FEA
64E6:  MOVLW  E1
64E8:  MOVWF  FE9
64EA:  MOVFF  FF2,501
64EE:  BCF    FF2.7
64F0:  MOVLW  00
64F2:  CALL   09D0
64F6:  TBLRD*-
64F8:  TBLRD*+
64FA:  MOVF   FF5,W
64FC:  MOVWF  FEE
64FE:  IORLW  00
6500:  BNZ   64F8
6502:  MOVLB  5
6504:  BTFSC  x01.7
6506:  BSF    FF2.7
6508:  MOVLW  04
650A:  MOVWF  x02
650C:  MOVLW  E1
650E:  MOVWF  x01
6510:  MOVLW  66
6512:  MOVWF  x03
6514:  MOVLW  28
6516:  MOVWF  x04
6518:  MOVLW  02
651A:  MOVWF  x05
651C:  MOVWF  x06
651E:  MOVLB  0
6520:  CALL   1630
....................       displayTiempo(Setpoint,5,20,2,1); 
6524:  MOVFF  4A5,502
6528:  MOVLW  05
652A:  MOVLB  5
652C:  MOVWF  x03
652E:  MOVLW  14
6530:  MOVWF  x04
6532:  MOVLW  02
6534:  MOVWF  x05
6536:  MOVLW  01
6538:  MOVWF  x06
653A:  MOVLB  0
653C:  CALL   2426
....................  
....................       glcd_imagen(5); 
6540:  MOVLW  05
6542:  MOVLB  5
6544:  MOVWF  x01
6546:  MOVLB  0
6548:  CALL   207A
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
654C:  MOVLW  04
654E:  MOVWF  FEA
6550:  MOVLW  E1
6552:  MOVWF  FE9
6554:  MOVFF  FF2,501
6558:  BCF    FF2.7
655A:  MOVLW  00
655C:  CALL   098C
6560:  TBLRD*-
6562:  TBLRD*+
6564:  MOVF   FF5,W
6566:  MOVWF  FEE
6568:  IORLW  00
656A:  BNZ   6562
656C:  MOVLB  5
656E:  BTFSC  x01.7
6570:  BSF    FF2.7
6572:  MOVLW  04
6574:  MOVWF  x02
6576:  MOVLW  E1
6578:  MOVWF  x01
657A:  CLRF   x03
657C:  CLRF   x04
657E:  MOVLW  02
6580:  MOVWF  x05
6582:  MOVLW  01
6584:  MOVWF  x06
6586:  MOVLB  0
6588:  CALL   1630
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
658C:  MOVLW  04
658E:  MOVWF  FEA
6590:  MOVLW  E1
6592:  MOVWF  FE9
6594:  MOVFF  FF2,501
6598:  BCF    FF2.7
659A:  MOVLW  00
659C:  CALL   09AE
65A0:  TBLRD*-
65A2:  TBLRD*+
65A4:  MOVF   FF5,W
65A6:  MOVWF  FEE
65A8:  IORLW  00
65AA:  BNZ   65A2
65AC:  MOVLB  5
65AE:  BTFSC  x01.7
65B0:  BSF    FF2.7
65B2:  MOVLW  04
65B4:  MOVWF  x02
65B6:  MOVLW  E1
65B8:  MOVWF  x01
65BA:  CLRF   x03
65BC:  MOVLW  08
65BE:  MOVWF  x04
65C0:  MOVLW  02
65C2:  MOVWF  x05
65C4:  MOVLW  01
65C6:  MOVWF  x06
65C8:  MOVLB  0
65CA:  CALL   1630
....................       MuestraTiemposProgramados(); 
65CE:  CALL   257E
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
65D2:  MOVFF  4C1,502
65D6:  MOVLW  50
65D8:  MOVLB  5
65DA:  MOVWF  x03
65DC:  CLRF   x04
65DE:  CLRF   x05
65E0:  MOVLW  01
65E2:  MOVWF  x06
65E4:  MOVLB  0
65E6:  CALL   2426
65EA:  MOVFF  4C0,502
65EE:  MOVLW  56
65F0:  MOVLB  5
65F2:  MOVWF  x03
65F4:  CLRF   x04
65F6:  CLRF   x05
65F8:  MOVLW  01
65FA:  MOVWF  x06
65FC:  MOVLB  0
65FE:  CALL   2426
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
6602:  MOVLW  04
6604:  MOVWF  FEA
6606:  MOVLW  E1
6608:  MOVWF  FE9
660A:  MOVFF  FF2,501
660E:  BCF    FF2.7
6610:  MOVLW  00
6612:  CALL   06BE
6616:  TBLRD*-
6618:  TBLRD*+
661A:  MOVF   FF5,W
661C:  MOVWF  FEE
661E:  IORLW  00
6620:  BNZ   6618
6622:  MOVLB  5
6624:  BTFSC  x01.7
6626:  BSF    FF2.7
6628:  MOVLW  04
662A:  MOVWF  x02
662C:  MOVLW  E1
662E:  MOVWF  x01
6630:  MOVLW  5C
6632:  MOVWF  x03
6634:  CLRF   x04
6636:  MOVLW  02
6638:  MOVWF  x05
663A:  MOVLW  01
663C:  MOVWF  x06
663E:  MOVLB  0
6640:  CALL   1630
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6644:  MOVFF  4BF,502
6648:  MOVLW  62
664A:  MOVLB  5
664C:  MOVWF  x03
664E:  CLRF   x04
6650:  CLRF   x05
6652:  MOVLW  01
6654:  MOVWF  x06
6656:  MOVLB  0
6658:  CALL   2426
665C:  MOVFF  4BE,502
6660:  MOVLW  68
6662:  MOVLB  5
6664:  MOVWF  x03
6666:  CLRF   x04
6668:  CLRF   x05
666A:  MOVLW  01
666C:  MOVWF  x06
666E:  MOVLB  0
6670:  CALL   2426
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
6674:  MOVFF  4C9,502
6678:  MOVLW  50
667A:  MOVLB  5
667C:  MOVWF  x03
667E:  MOVLW  08
6680:  MOVWF  x04
6682:  CLRF   x05
6684:  MOVLW  01
6686:  MOVWF  x06
6688:  MOVLB  0
668A:  CALL   2426
668E:  MOVFF  4C8,502
6692:  MOVLW  56
6694:  MOVLB  5
6696:  MOVWF  x03
6698:  MOVLW  08
669A:  MOVWF  x04
669C:  CLRF   x05
669E:  MOVLW  01
66A0:  MOVWF  x06
66A2:  MOVLB  0
66A4:  CALL   2426
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
66A8:  MOVLW  04
66AA:  MOVWF  FEA
66AC:  MOVLW  E1
66AE:  MOVWF  FE9
66B0:  MOVFF  FF2,501
66B4:  BCF    FF2.7
66B6:  MOVLW  00
66B8:  CALL   06BE
66BC:  TBLRD*-
66BE:  TBLRD*+
66C0:  MOVF   FF5,W
66C2:  MOVWF  FEE
66C4:  IORLW  00
66C6:  BNZ   66BE
66C8:  MOVLB  5
66CA:  BTFSC  x01.7
66CC:  BSF    FF2.7
66CE:  MOVLW  04
66D0:  MOVWF  x02
66D2:  MOVLW  E1
66D4:  MOVWF  x01
66D6:  MOVLW  5C
66D8:  MOVWF  x03
66DA:  MOVLW  08
66DC:  MOVWF  x04
66DE:  MOVLW  02
66E0:  MOVWF  x05
66E2:  MOVLW  01
66E4:  MOVWF  x06
66E6:  MOVLB  0
66E8:  CALL   1630
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
66EC:  MOVFF  4C7,502
66F0:  MOVLW  62
66F2:  MOVLB  5
66F4:  MOVWF  x03
66F6:  MOVLW  08
66F8:  MOVWF  x04
66FA:  CLRF   x05
66FC:  MOVLW  01
66FE:  MOVWF  x06
6700:  MOVLB  0
6702:  CALL   2426
6706:  MOVFF  4C6,502
670A:  MOVLW  68
670C:  MOVLB  5
670E:  MOVWF  x03
6710:  MOVLW  08
6712:  MOVWF  x04
6714:  CLRF   x05
6716:  MOVLW  01
6718:  MOVWF  x06
671A:  MOVLB  0
671C:  CALL   2426
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint))// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
6720:  MOVLB  5
6722:  CLRF   x02
6724:  MOVFF  4A5,501
6728:  MOVLB  0
672A:  CALL   19FA
672E:  MOVFF  03,504
6732:  MOVFF  02,503
6736:  MOVFF  01,502
673A:  MOVFF  00,501
673E:  MOVFF  4BD,508
6742:  MOVFF  4BC,507
6746:  MOVFF  4BB,506
674A:  MOVFF  4BA,505
674E:  GOTO   2AD0
6752:  BC    6756
6754:  BNZ   67BC
....................    { 
....................       if(est==0) 
6756:  MOVLB  4
6758:  BTFSC  x96.0
675A:  BRA    67BE
....................       { 
....................          tiempo_esterilizacion=1; 
675C:  MOVLW  01
675E:  MOVWF  xA8
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
6760:  MOVLB  5
6762:  CLRF   x01
6764:  MOVLW  5A
6766:  MOVWF  x02
6768:  MOVLW  38
676A:  MOVWF  x03
676C:  MOVLB  0
676E:  CALL   26BE
6772:  MOVLW  0F
6774:  MOVLB  5
6776:  MOVWF  x13
6778:  MOVLW  12
677A:  MOVWF  x14
677C:  MOVLW  1E
677E:  MOVWF  x15
6780:  MOVLW  35
6782:  MOVWF  x16
6784:  CLRF   x17
6786:  CLRF   x18
6788:  MOVLB  0
678A:  CALL   156E
678E:  MOVLW  19
6790:  MOVLB  5
6792:  MOVWF  x13
6794:  MOVLW  12
6796:  MOVWF  x14
6798:  MOVLW  3C
679A:  MOVWF  x15
679C:  MOVLW  1A
679E:  MOVWF  x16
67A0:  CLRF   x17
67A2:  MOVLW  01
67A4:  MOVWF  x18
67A6:  MOVLB  0
67A8:  CALL   156E
67AC:  MOVLB  4
67AE:  BSF    x96.0
....................          glcd_imagen(5); 
67B0:  MOVLW  05
67B2:  MOVLB  5
67B4:  MOVWF  x01
67B6:  MOVLB  0
67B8:  CALL   207A
67BC:  MOVLB  4
....................       } 
....................    }   
....................     
....................    /*if(ADC_Pt100<((float)Setpoint-2.0)) 
....................    { 
....................       glcd_rect(15, 18, 30, 53, NO, ON); 
....................       if(est==1) 
....................       {glcd_rect(25, 18, 60, 26, NO, OFF);} 
....................       est=0;tiempo_esterilizacion=0; 
....................    }*/ 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
67BE:  DECFSZ xAA,W
67C0:  BRA    67EA
67C2:  MOVF   xA8,W
67C4:  SUBLW  02
67C6:  BNZ   67EA
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
67C8:  CLRF   xA0
....................       if(Presostato<20) 
67CA:  MOVF   x91,W
67CC:  SUBLW  13
67CE:  BNC   67D4
....................       { 
....................          EVDesfogue=3; 
67D0:  MOVLW  03
67D2:  MOVWF  x99
....................       } 
....................       if(Presostato<7) 
67D4:  MOVF   x91,W
67D6:  SUBLW  06
67D8:  BNC   67E6
....................       { 
....................          tiempo_secado=1; 
67DA:  MOVLW  01
67DC:  MOVWF  xA9
....................          Control=0;EVDesfogue=3; 
67DE:  CLRF   xA0
67E0:  MOVLW  03
67E2:  MOVWF  x99
....................       } 
....................       else 
67E4:  BRA    67EA
....................       { 
....................          EVDesfogue=1; 
67E6:  MOVLW  01
67E8:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
67EA:  MOVF   xAA,W
67EC:  SUBLW  02
67EE:  BNZ   681E
67F0:  MOVF   xA8,W
67F2:  SUBLW  02
67F4:  BNZ   681E
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
67F6:  CLRF   xA0
....................       if(Presostato<20) 
67F8:  MOVF   x91,W
67FA:  SUBLW  13
67FC:  BNC   6804
....................       { 
....................          EVDesfogue=3; 
67FE:  MOVLW  03
6800:  MOVWF  x99
....................       } 
....................       else 
6802:  BRA    6808
....................       { 
....................          EVDesfogue=2; 
6804:  MOVLW  02
6806:  MOVWF  x99
....................       } 
....................       if(Presostato<7) 
6808:  MOVF   x91,W
680A:  SUBLW  06
680C:  BNC   681E
....................       { 
....................          tiempo_esterilizacion=3; 
680E:  MOVLW  03
6810:  MOVWF  xA8
....................          tiempo_secado=2; 
6812:  MOVLW  02
6814:  MOVWF  xA9
....................          fin_ciclo=1; 
6816:  MOVLW  01
6818:  MOVWF  xA6
....................          EVDesfogue=3; 
681A:  MOVLW  03
681C:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]==Testerilizacionp[0])&&(Testerilizacion[1]==Testerilizacionp[1])&&(Testerilizacion[2]==Testerilizacionp[2])&&(Testerilizacion[3]==Testerilizacionp[3]) && tiempo_esterilizacion==1) 
681E:  MOVF   xC2,W
6820:  SUBWF  xBE,W
6822:  BNZ   683E
6824:  MOVF   xC3,W
6826:  SUBWF  xBF,W
6828:  BNZ   683E
682A:  MOVF   xC4,W
682C:  SUBWF  xC0,W
682E:  BNZ   683E
6830:  MOVF   xC5,W
6832:  SUBWF  xC1,W
6834:  BNZ   683E
6836:  DECFSZ xA8,W
6838:  BRA    683E
....................    { 
....................       tiempo_esterilizacion=2; 
683A:  MOVLW  02
683C:  MOVWF  xA8
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
683E:  MOVF   xCA,W
6840:  XORLW  80
6842:  MOVWF  00
6844:  MOVF   xC6,W
6846:  XORLW  80
6848:  SUBWF  00,W
684A:  BZ    684E
684C:  BC    688E
684E:  MOVF   xCB,W
6850:  XORLW  80
6852:  MOVWF  00
6854:  MOVF   xC7,W
6856:  XORLW  80
6858:  SUBWF  00,W
685A:  BZ    685E
685C:  BC    688E
685E:  MOVF   xCC,W
6860:  XORLW  80
6862:  MOVWF  00
6864:  MOVF   xC8,W
6866:  XORLW  80
6868:  SUBWF  00,W
686A:  BZ    686E
686C:  BC    688E
686E:  MOVF   xCD,W
6870:  XORLW  80
6872:  MOVWF  00
6874:  MOVF   xC9,W
6876:  XORLW  80
6878:  SUBWF  00,W
687A:  BZ    687E
687C:  BC    688E
687E:  DECFSZ xA9,W
6880:  BRA    688E
....................    { 
....................       tiempo_esterilizacion=3; 
6882:  MOVLW  03
6884:  MOVWF  xA8
....................       tiempo_secado=2; 
6886:  MOVLW  02
6888:  MOVWF  xA9
....................       fin_ciclo=1; 
688A:  MOVLW  01
688C:  MOVWF  xA6
....................    } 
....................     
....................    if(fin_ciclo==1) 
688E:  DECFSZ xA6,W
6890:  BRA    690C
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
6892:  CLRF   xA0
6894:  MOVLW  03
6896:  MOVWF  x99
....................       if(disp_Fin==0) 
6898:  BTFSC  x97.1
689A:  BRA    690C
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
689C:  MOVLB  5
689E:  CLRF   x13
68A0:  MOVLW  37
68A2:  MOVWF  x14
68A4:  MOVLW  7F
68A6:  MOVWF  x15
68A8:  MOVLW  3F
68AA:  MOVWF  x16
68AC:  MOVLW  01
68AE:  MOVWF  x17
68B0:  CLRF   x18
68B2:  MOVLB  0
68B4:  CALL   156E
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
68B8:  MOVLW  04
68BA:  MOVWF  FEA
68BC:  MOVLW  E1
68BE:  MOVWF  FE9
68C0:  MOVFF  FF2,501
68C4:  BCF    FF2.7
68C6:  MOVLW  00
68C8:  CALL   0E06
68CC:  TBLRD*-
68CE:  TBLRD*+
68D0:  MOVF   FF5,W
68D2:  MOVWF  FEE
68D4:  IORLW  00
68D6:  BNZ   68CE
68D8:  MOVLB  5
68DA:  BTFSC  x01.7
68DC:  BSF    FF2.7
68DE:  MOVLW  04
68E0:  MOVWF  x02
68E2:  MOVLW  E1
68E4:  MOVWF  x01
68E6:  CLRF   x03
68E8:  MOVLW  37
68EA:  MOVWF  x04
68EC:  MOVLW  02
68EE:  MOVWF  x05
68F0:  MOVLW  01
68F2:  MOVWF  x06
68F4:  MOVLB  0
68F6:  CALL   1630
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
68FA:  MOVLB  4
68FC:  BCF    x96.2
68FE:  BCF    x96.3
6900:  BSF    x96.4
6902:  BCF    x96.5
6904:  BSF    x96.6
6906:  BCF    x96.7
6908:  BCF    x97.0
690A:  BSF    x97.1
....................       }    
....................        
....................    } 
....................    if(RIGHT) 
690C:  BSF    F92.2
690E:  BTFSS  F80.2
6910:  BRA    694A
....................    { 
....................       glcd_init(ON); 
6912:  MOVLW  01
6914:  MOVLB  5
6916:  MOVWF  x01
6918:  MOVLB  0
691A:  CALL   1114
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
691E:  MOVLB  4
6920:  BCF    x96.2
6922:  BCF    x96.3
6924:  BCF    x96.4
6926:  BCF    x96.5
6928:  BCF    x96.6
692A:  BCF    x96.7
692C:  BCF    x97.0
692E:  BCF    x97.1
....................       disp_Alarma=0; 
6930:  BCF    x97.3
....................       delay_ms(1000); 
6932:  MOVLW  04
6934:  MOVLB  5
6936:  MOVWF  x01
6938:  MOVLW  FA
693A:  MOVWF  x02
693C:  MOVLB  0
693E:  CALL   0F98
6942:  MOVLB  5
6944:  DECFSZ x01,F
6946:  BRA    6938
6948:  MOVLB  4
....................    } 
....................    EVAgua=10; 
694A:  MOVLW  0A
694C:  MOVWF  x9A
....................    Envio_Esclavos(); 
694E:  MOVLB  0
6950:  CALL   201A
6954:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6956:  MOVF   xA2,W
6958:  SUBLW  64
695A:  BTFSS  FD8.2
695C:  BRA    6A58
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
695E:  MOVFF  4D6,502
6962:  MOVLB  5
6964:  CLRF   x03
6966:  MOVLW  0A
6968:  MOVWF  x04
696A:  MOVLW  02
696C:  MOVWF  x05
696E:  MOVLW  01
6970:  MOVWF  x06
6972:  MOVLB  0
6974:  CALL   2426
....................    displayTiempo(datoRx[1],0,20,2,1); 
6978:  MOVFF  4D7,502
697C:  MOVLB  5
697E:  CLRF   x03
6980:  MOVLW  14
6982:  MOVWF  x04
6984:  MOVLW  02
6986:  MOVWF  x05
6988:  MOVLW  01
698A:  MOVWF  x06
698C:  MOVLB  0
698E:  CALL   2426
....................    displayTiempo(datoRx[2],0,30,2,1); 
6992:  MOVFF  4D8,502
6996:  MOVLB  5
6998:  CLRF   x03
699A:  MOVLW  1E
699C:  MOVWF  x04
699E:  MOVLW  02
69A0:  MOVWF  x05
69A2:  MOVLW  01
69A4:  MOVWF  x06
69A6:  MOVLB  0
69A8:  CALL   2426
....................    displayTiempo(datoRx[3],0,40,2,1); 
69AC:  MOVFF  4D9,502
69B0:  MOVLB  5
69B2:  CLRF   x03
69B4:  MOVLW  28
69B6:  MOVWF  x04
69B8:  MOVLW  02
69BA:  MOVWF  x05
69BC:  MOVLW  01
69BE:  MOVWF  x06
69C0:  MOVLB  0
69C2:  CALL   2426
....................    displayTiempo(Opcion,0,50,2,1); 
69C6:  MOVFF  4A7,502
69CA:  MOVLB  5
69CC:  CLRF   x03
69CE:  MOVLW  32
69D0:  MOVWF  x04
69D2:  MOVLW  02
69D4:  MOVWF  x05
69D6:  MOVLW  01
69D8:  MOVWF  x06
69DA:  MOVLB  0
69DC:  CALL   2426
....................    Lectura_Esclavos(); 
69E0:  CALL   1EC0
....................    Opcion++; 
69E4:  MOVLB  4
69E6:  INCF   xA7,F
....................    displayTiempo(Puerta,50,10,2,1); 
69E8:  MOVFF  48D,502
69EC:  MOVLW  32
69EE:  MOVLB  5
69F0:  MOVWF  x03
69F2:  MOVLW  0A
69F4:  MOVWF  x04
69F6:  MOVLW  02
69F8:  MOVWF  x05
69FA:  MOVLW  01
69FC:  MOVWF  x06
69FE:  MOVLB  0
6A00:  CALL   2426
....................    displayTiempo(Parada,50,20,2,1); 
6A04:  MOVFF  48E,502
6A08:  MOVLW  32
6A0A:  MOVLB  5
6A0C:  MOVWF  x03
6A0E:  MOVLW  14
6A10:  MOVWF  x04
6A12:  MOVLW  02
6A14:  MOVWF  x05
6A16:  MOVLW  01
6A18:  MOVWF  x06
6A1A:  MOVLB  0
6A1C:  CALL   2426
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6A20:  MOVFF  4BD,504
6A24:  MOVFF  4BC,503
6A28:  MOVFF  4BB,502
6A2C:  MOVFF  4BA,501
6A30:  GOTO   2B4C
6A34:  MOVFF  01,501
6A38:  MOVFF  01,502
6A3C:  MOVLW  32
6A3E:  MOVLB  5
6A40:  MOVWF  x03
6A42:  MOVLW  1E
6A44:  MOVWF  x04
6A46:  MOVLW  02
6A48:  MOVWF  x05
6A4A:  MOVLW  01
6A4C:  MOVWF  x06
6A4E:  MOVLB  0
6A50:  CALL   2426
....................     
....................  } 
6A54:  MOVLB  4
6A56:  BRA    6956
....................        
....................       while(Parada==0) 
....................       { 
6A58:  MOVF   x8E,F
6A5A:  BNZ   6B14
....................          Lectura_Esclavos(); 
6A5C:  MOVLB  0
6A5E:  CALL   1EC0
....................          delay_ms(100); 
6A62:  MOVLW  64
6A64:  MOVLB  5
6A66:  MOVWF  x02
6A68:  MOVLB  0
6A6A:  CALL   0F98
....................          if(disp_Stop==0) 
6A6E:  MOVLB  4
6A70:  BTFSC  x96.7
6A72:  BRA    6B12
....................          { 
....................             glcd_fillScreen(OFF);  
6A74:  MOVLB  5
6A76:  CLRF   x02
6A78:  MOVLB  0
6A7A:  CALL   1002
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6A7E:  MOVLW  04
6A80:  MOVWF  FEA
6A82:  MOVLW  E1
6A84:  MOVWF  FE9
6A86:  MOVFF  FF2,501
6A8A:  BCF    FF2.7
6A8C:  MOVLW  00
6A8E:  CALL   0E32
6A92:  TBLRD*-
6A94:  TBLRD*+
6A96:  MOVF   FF5,W
6A98:  MOVWF  FEE
6A9A:  IORLW  00
6A9C:  BNZ   6A94
6A9E:  MOVLB  5
6AA0:  BTFSC  x01.7
6AA2:  BSF    FF2.7
6AA4:  MOVLW  04
6AA6:  MOVWF  x02
6AA8:  MOVLW  E1
6AAA:  MOVWF  x01
6AAC:  CLRF   x03
6AAE:  MOVLW  0A
6AB0:  MOVWF  x04
6AB2:  CLRF   x05
6AB4:  MOVLW  02
6AB6:  MOVWF  x06
6AB8:  MOVLB  0
6ABA:  CALL   1630
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6ABE:  MOVLW  04
6AC0:  MOVWF  FEA
6AC2:  MOVLW  E1
6AC4:  MOVWF  FE9
6AC6:  MOVFF  FF2,501
6ACA:  BCF    FF2.7
6ACC:  MOVLW  00
6ACE:  CALL   0E58
6AD2:  TBLRD*-
6AD4:  TBLRD*+
6AD6:  MOVF   FF5,W
6AD8:  MOVWF  FEE
6ADA:  IORLW  00
6ADC:  BNZ   6AD4
6ADE:  MOVLB  5
6AE0:  BTFSC  x01.7
6AE2:  BSF    FF2.7
6AE4:  MOVLW  04
6AE6:  MOVWF  x02
6AE8:  MOVLW  E1
6AEA:  MOVWF  x01
6AEC:  CLRF   x03
6AEE:  MOVLW  1E
6AF0:  MOVWF  x04
6AF2:  CLRF   x05
6AF4:  MOVLW  02
6AF6:  MOVWF  x06
6AF8:  MOVLB  0
6AFA:  CALL   1630
6AFE:  MOVLB  4
6B00:  BSF    x95.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6B02:  BCF    x96.2
6B04:  BCF    x96.3
6B06:  BCF    x96.4
6B08:  BCF    x96.5
6B0A:  BCF    x96.6
6B0C:  BSF    x96.7
6B0E:  BCF    x97.0
6B10:  BCF    x97.1
....................          } 
....................       }    
6B12:  BRA    6A58
....................       if(Parada==1) 
6B14:  DECFSZ x8E,W
6B16:  BRA    6BC0
....................       { 
....................          while(emergency==1) 
....................          { 
6B18:  BTFSS  x95.3
6B1A:  BRA    6BC0
....................             Lectura_Esclavos(); 
6B1C:  MOVLB  0
6B1E:  CALL   1EC0
....................             if(disp_Stop==1) 
6B22:  MOVLB  4
6B24:  BTFSS  x96.7
6B26:  BRA    6B36
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6B28:  MOVLB  5
6B2A:  CLRF   x02
6B2C:  MOVLB  0
6B2E:  CALL   1002
6B32:  MOVLB  4
6B34:  BCF    x96.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6B36:  MOVLW  04
6B38:  MOVWF  FEA
6B3A:  MOVLW  E1
6B3C:  MOVWF  FE9
6B3E:  MOVFF  FF2,501
6B42:  BCF    FF2.7
6B44:  MOVLW  00
6B46:  MOVLB  0
6B48:  CALL   0E7E
6B4C:  TBLRD*-
6B4E:  TBLRD*+
6B50:  MOVF   FF5,W
6B52:  MOVWF  FEE
6B54:  IORLW  00
6B56:  BNZ   6B4E
6B58:  MOVLB  5
6B5A:  BTFSC  x01.7
6B5C:  BSF    FF2.7
6B5E:  MOVLW  04
6B60:  MOVWF  x02
6B62:  MOVLW  E1
6B64:  MOVWF  x01
6B66:  CLRF   x03
6B68:  MOVLW  0A
6B6A:  MOVWF  x04
6B6C:  CLRF   x05
6B6E:  MOVLW  02
6B70:  MOVWF  x06
6B72:  MOVLB  0
6B74:  CALL   1630
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6B78:  MOVLW  04
6B7A:  MOVWF  FEA
6B7C:  MOVLW  E1
6B7E:  MOVWF  FE9
6B80:  MOVFF  FF2,501
6B84:  BCF    FF2.7
6B86:  MOVLW  00
6B88:  CALL   0EA4
6B8C:  TBLRD*-
6B8E:  TBLRD*+
6B90:  MOVF   FF5,W
6B92:  MOVWF  FEE
6B94:  IORLW  00
6B96:  BNZ   6B8E
6B98:  MOVLB  5
6B9A:  BTFSC  x01.7
6B9C:  BSF    FF2.7
6B9E:  MOVLW  04
6BA0:  MOVWF  x02
6BA2:  MOVLW  E1
6BA4:  MOVWF  x01
6BA6:  CLRF   x03
6BA8:  MOVLW  1E
6BAA:  MOVWF  x04
6BAC:  CLRF   x05
6BAE:  MOVLW  02
6BB0:  MOVWF  x06
6BB2:  MOVLB  0
6BB4:  CALL   1630
....................          glcd_update();} 
6BB8:  CALL   105C
6BBC:  MOVLB  4
6BBE:  BRA    6B18
....................       } 
....................    } 
6BC0:  MOVLB  0
6BC2:  GOTO   2FD6
.................... } 
6BC6:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
