CCS PCH C Compiler, Version 4.104, 5967               16-mar.-17 16:41

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclave Horizontal\Con Precamara\2017\Autoclave 110L\Autoclave Avantika\Firmware V3\GLCD_Controller\GLCD_Controller.lst

               ROM used: 27748 bytes (85%)
                         Largest free fragment is 5016
               RAM used: 1289 (63%) at main() level
                         1343 (66%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2B80
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0ECA
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0F98:  MOVLW  05
0F9A:  MOVWF  FEA
0F9C:  MOVLW  06
0F9E:  MOVWF  FE9
0FA0:  MOVF   FEF,W
0FA2:  BZ    0FC0
0FA4:  MOVLW  0F
0FA6:  MOVWF  01
0FA8:  CLRF   00
0FAA:  DECFSZ 00,F
0FAC:  BRA    0FAA
0FAE:  DECFSZ 01,F
0FB0:  BRA    0FA8
0FB2:  MOVLW  8F
0FB4:  MOVWF  00
0FB6:  DECFSZ 00,F
0FB8:  BRA    0FB6
0FBA:  NOP   
0FBC:  DECFSZ FEF,F
0FBE:  BRA    0FA4
0FC0:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
190C:  MOVLW  08
190E:  MOVWF  01
1910:  MOVLW  11
1912:  MOVWF  00
1914:  DECFSZ 00,F
1916:  BRA    1914
1918:  BCF    F8A.1
191A:  BCF    F93.1
191C:  MOVLW  11
191E:  MOVWF  00
1920:  DECFSZ 00,F
1922:  BRA    1920
1924:  MOVLB  5
1926:  RLCF   x09,F
1928:  BCF    F8A.0
192A:  BTFSC  FD8.0
192C:  BSF    F93.0
192E:  BTFSS  FD8.0
1930:  BCF    F93.0
1932:  BSF    F93.1
1934:  BTFSS  F81.1
1936:  BRA    1934
1938:  DECFSZ 01,F
193A:  BRA    193E
193C:  BRA    1942
193E:  MOVLB  0
1940:  BRA    1910
1942:  MOVLW  11
1944:  MOVWF  00
1946:  DECFSZ 00,F
1948:  BRA    1946
194A:  BCF    F8A.1
194C:  BCF    F93.1
194E:  NOP   
1950:  BSF    F93.0
1952:  MOVLW  11
1954:  MOVWF  00
1956:  DECFSZ 00,F
1958:  BRA    1956
195A:  MOVLW  11
195C:  MOVWF  00
195E:  DECFSZ 00,F
1960:  BRA    195E
1962:  BSF    F93.1
1964:  BTFSS  F81.1
1966:  BRA    1964
1968:  CLRF   01
196A:  MOVLW  11
196C:  MOVWF  00
196E:  DECFSZ 00,F
1970:  BRA    196E
1972:  BTFSC  F81.0
1974:  BSF    01.0
1976:  BCF    F8A.1
1978:  BCF    F93.1
197A:  BCF    F8A.0
197C:  BCF    F93.0
197E:  MOVLB  0
1980:  RETLW  00
1982:  MOVLW  08
1984:  MOVLB  5
1986:  MOVWF  x09
1988:  MOVFF  00,50A
198C:  BSF    F93.0
198E:  MOVLW  11
1990:  MOVWF  00
1992:  DECFSZ 00,F
1994:  BRA    1992
1996:  BSF    F93.1
1998:  BTFSS  F81.1
199A:  BRA    1998
199C:  BTFSC  F81.0
199E:  BSF    FD8.0
19A0:  BTFSS  F81.0
19A2:  BCF    FD8.0
19A4:  RLCF   01,F
19A6:  MOVLW  11
19A8:  MOVWF  00
19AA:  DECFSZ 00,F
19AC:  BRA    19AA
19AE:  BCF    F93.1
19B0:  BCF    F8A.1
19B2:  DECFSZ x09,F
19B4:  BRA    198C
19B6:  BSF    F93.0
19B8:  MOVLW  11
19BA:  MOVWF  00
19BC:  DECFSZ 00,F
19BE:  BRA    19BC
19C0:  BCF    F8A.0
19C2:  MOVF   x0A,W
19C4:  BTFSS  FD8.2
19C6:  BCF    F93.0
19C8:  NOP   
19CA:  BSF    F93.1
19CC:  BTFSS  F81.1
19CE:  BRA    19CC
19D0:  MOVLW  11
19D2:  MOVWF  00
19D4:  DECFSZ 00,F
19D6:  BRA    19D4
19D8:  BCF    F8A.1
19DA:  BCF    F93.1
19DC:  MOVLW  11
19DE:  MOVWF  00
19E0:  DECFSZ 00,F
19E2:  BRA    19E0
19E4:  BCF    F8A.0
19E6:  BCF    F93.0
19E8:  MOVLB  0
19EA:  GOTO   1F4A (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
1114:  BCF    F93.2
1116:  BSF    F8A.2
....................    output_low(GLCD_E); 
1118:  BCF    F93.7
111A:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
111C:  BCF    F93.3
111E:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
1120:  BCF    F93.4
1122:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
1124:  BCF    F93.5
1126:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1128:  MOVLB  5
112A:  CLRF   x1B
112C:  MOVLW  C0
112E:  MOVWF  x1C
1130:  MOVLB  0
1132:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1134:  MOVLW  01
1136:  MOVLB  5
1138:  MOVWF  x1B
113A:  MOVLW  C0
113C:  MOVWF  x1C
113E:  MOVLB  0
1140:  RCALL  0FC2
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
1142:  MOVLB  5
1144:  CLRF   x1B
1146:  MOVLW  40
1148:  MOVWF  x1C
114A:  MOVLB  0
114C:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
114E:  MOVLW  01
1150:  MOVLB  5
1152:  MOVWF  x1B
1154:  MOVLW  40
1156:  MOVWF  x1C
1158:  MOVLB  0
115A:  RCALL  0FC2
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
115C:  MOVLB  5
115E:  CLRF   x1B
1160:  MOVLW  B8
1162:  MOVWF  x1C
1164:  MOVLB  0
1166:  RCALL  0FC2
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
1168:  MOVLW  01
116A:  MOVLB  5
116C:  MOVWF  x1B
116E:  MOVLW  B8
1170:  MOVWF  x1C
1172:  MOVLB  0
1174:  RCALL  0FC2
....................  
....................    if(mode == ON) 
1176:  MOVLB  5
1178:  DECFSZ x05,W
117A:  BRA    1198
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
117C:  CLRF   x1B
117E:  MOVLW  3F
1180:  MOVWF  x1C
1182:  MOVLB  0
1184:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1186:  MOVLW  01
1188:  MOVLB  5
118A:  MOVWF  x1B
118C:  MOVLW  3F
118E:  MOVWF  x1C
1190:  MOVLB  0
1192:  RCALL  0FC2
....................    } 
....................    else 
1194:  BRA    11B0
1196:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
1198:  CLRF   x1B
119A:  MOVLW  3E
119C:  MOVWF  x1C
119E:  MOVLB  0
11A0:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
11A2:  MOVLW  01
11A4:  MOVLB  5
11A6:  MOVWF  x1B
11A8:  MOVLW  3E
11AA:  MOVWF  x1C
11AC:  MOVLB  0
11AE:  RCALL  0FC2
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
11B0:  MOVLB  5
11B2:  CLRF   x06
11B4:  MOVLB  0
11B6:  RCALL  1002
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
11B8:  RCALL  105C
....................    #endif 
.................... } 
11BA:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
105C:  MOVLB  5
105E:  CLRF   x17
1060:  MOVLW  16
1062:  MOVWF  x16
....................    p2 = displayData.right; 
1064:  MOVLW  02
1066:  MOVWF  x19
1068:  MOVLW  16
106A:  MOVWF  x18
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
106C:  CLRF   x14
106E:  MOVF   x14,W
1070:  SUBLW  07
1072:  BNC   1110
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1074:  BCF    F93.5
1076:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
1078:  CLRF   x1B
107A:  MOVLW  40
107C:  MOVWF  x1C
107E:  MOVLB  0
1080:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1082:  MOVLW  01
1084:  MOVLB  5
1086:  MOVWF  x1B
1088:  MOVLW  40
108A:  MOVWF  x1C
108C:  MOVLB  0
108E:  RCALL  0FC2
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1090:  MOVLB  5
1092:  MOVF   x14,W
1094:  IORLW  B8
1096:  MOVWF  x1A
1098:  CLRF   x1B
109A:  MOVWF  x1C
109C:  MOVLB  0
109E:  RCALL  0FC2
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
10A0:  MOVLB  5
10A2:  MOVF   x14,W
10A4:  IORLW  B8
10A6:  MOVWF  x1A
10A8:  MOVLW  01
10AA:  MOVWF  x1B
10AC:  MOVFF  51A,51C
10B0:  MOVLB  0
10B2:  RCALL  0FC2
....................       output_high(GLCD_DI);                     // Set for data 
10B4:  BCF    F93.5
10B6:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
10B8:  MOVLB  5
10BA:  CLRF   x15
10BC:  MOVF   x15,W
10BE:  SUBLW  3F
10C0:  BNC   110C
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
10C2:  MOVFF  517,03
10C6:  MOVF   x16,W
10C8:  INCF   x16,F
10CA:  BTFSC  FD8.2
10CC:  INCF   x17,F
10CE:  MOVWF  FE9
10D0:  MOVFF  03,FEA
10D4:  MOVFF  FEF,51A
10D8:  CLRF   x1B
10DA:  MOVFF  51A,51C
10DE:  MOVLB  0
10E0:  RCALL  0FC2
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
10E2:  MOVLB  5
10E4:  MOVFF  519,03
10E8:  MOVF   x18,W
10EA:  INCF   x18,F
10EC:  BTFSC  FD8.2
10EE:  INCF   x19,F
10F0:  MOVWF  FE9
10F2:  MOVFF  03,FEA
10F6:  MOVFF  FEF,51A
10FA:  MOVLW  01
10FC:  MOVWF  x1B
10FE:  MOVFF  51A,51C
1102:  MOVLB  0
1104:  RCALL  0FC2
....................       } 
1106:  MOVLB  5
1108:  INCF   x15,F
110A:  BRA    10BC
....................    } 
110C:  INCF   x14,F
110E:  BRA    106E
.................... } 
1110:  MOVLB  0
1112:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
11BC:  MOVLB  5
11BE:  CLRF   x3C
11C0:  RRCF   x37,W
11C2:  MOVWF  x3B
11C4:  RRCF   x3B,F
11C6:  RRCF   x3B,F
11C8:  MOVLW  1F
11CA:  ANDWF  x3B,F
....................    temp *= 64; 
11CC:  RLCF   x3B,F
11CE:  RLCF   x3C,F
11D0:  RLCF   x3B,F
11D2:  RLCF   x3C,F
11D4:  RLCF   x3B,F
11D6:  RLCF   x3C,F
11D8:  RLCF   x3B,F
11DA:  RLCF   x3C,F
11DC:  RLCF   x3B,F
11DE:  RLCF   x3C,F
11E0:  RLCF   x3B,F
11E2:  RLCF   x3C,F
11E4:  MOVLW  C0
11E6:  ANDWF  x3B,F
....................    temp += x; 
11E8:  MOVF   x36,W
11EA:  ADDWF  x3B,F
11EC:  MOVLW  00
11EE:  ADDWFC x3C,F
....................  
....................    if(x > 63) 
11F0:  MOVF   x36,W
11F2:  SUBLW  3F
11F4:  BC    1210
....................    { 
....................       p = displayData.right + temp - 64; 
11F6:  MOVLW  16
11F8:  ADDWF  x3B,W
11FA:  MOVWF  x3D
11FC:  MOVLW  02
11FE:  ADDWFC x3C,W
1200:  MOVWF  x3E
1202:  MOVLW  40
1204:  SUBWF  x3D,W
1206:  MOVWF  x39
1208:  MOVLW  00
120A:  SUBWFB x3E,W
120C:  MOVWF  x3A
....................    } 
....................    else 
120E:  BRA    121C
....................    { 
....................       p = displayData.left + temp; 
1210:  MOVLW  16
1212:  ADDWF  x3B,W
1214:  MOVWF  x39
1216:  MOVLW  00
1218:  ADDWFC x3C,W
121A:  MOVWF  x3A
....................    } 
....................  
....................    if(color) 
121C:  MOVF   x38,F
121E:  BZ    124A
....................    { 
....................       bit_set(*p, y%8); 
1220:  MOVFF  53A,03
1224:  MOVFF  539,FE9
1228:  MOVFF  53A,FEA
122C:  MOVF   x37,W
122E:  ANDLW  07
1230:  MOVWF  x3D
1232:  MOVLW  01
1234:  MOVWF  00
1236:  MOVF   x3D,W
1238:  MOVWF  01
123A:  BZ    1244
123C:  BCF    FD8.0
123E:  RLCF   00,F
1240:  DECFSZ 01,F
1242:  BRA    123C
1244:  MOVF   00,W
1246:  IORWF  FEF,F
....................    } 
....................    else 
1248:  BRA    1274
....................    { 
....................       bit_clear(*p, y%8); 
124A:  MOVFF  53A,03
124E:  MOVFF  539,FE9
1252:  MOVFF  53A,FEA
1256:  MOVF   x37,W
1258:  ANDLW  07
125A:  MOVWF  x3D
125C:  MOVLW  01
125E:  MOVWF  00
1260:  MOVF   x3D,W
1262:  MOVWF  01
1264:  BZ    126E
1266:  BCF    FD8.0
1268:  RLCF   00,F
126A:  DECFSZ 01,F
126C:  BRA    1266
126E:  MOVF   00,W
1270:  XORLW  FF
1272:  ANDWF  FEF,F
....................    } 
.................... } 
1274:  MOVLB  0
1276:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
1002:  MOVLB  5
1004:  CLRF   x09
1006:  MOVLW  16
1008:  MOVWF  x08
....................    p2 = displayData.right; 
100A:  MOVLW  02
100C:  MOVWF  x0B
100E:  MOVLW  16
1010:  MOVWF  x0A
....................    data = 0xFF * color; 
1012:  MOVF   x06,W
1014:  MULLW  FF
1016:  MOVFF  FF3,507
....................  
....................    for(i=0; i<512; ++i) 
101A:  CLRF   x0D
101C:  CLRF   x0C
101E:  MOVF   x0D,W
1020:  SUBLW  01
1022:  BNC   1058
....................    { 
....................       *p1++ = data; 
1024:  MOVFF  509,03
1028:  MOVF   x08,W
102A:  INCF   x08,F
102C:  BTFSC  FD8.2
102E:  INCF   x09,F
1030:  MOVWF  FE9
1032:  MOVFF  03,FEA
1036:  MOVFF  507,FEF
....................       *p2++ = data; 
103A:  MOVFF  50B,03
103E:  MOVF   x0A,W
1040:  INCF   x0A,F
1042:  BTFSC  FD8.2
1044:  INCF   x0B,F
1046:  MOVWF  FE9
1048:  MOVFF  03,FEA
104C:  MOVFF  507,FEF
....................    } 
1050:  INCF   x0C,F
1052:  BTFSC  FD8.2
1054:  INCF   x0D,F
1056:  BRA    101E
.................... } 
1058:  MOVLB  0
105A:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0FC2:  MOVLB  5
0FC4:  MOVF   x1B,F
0FC6:  BZ    0FCE
....................       output_high(GLCD_CS2); 
0FC8:  BCF    F93.4
0FCA:  BSF    F8A.4
....................    else 
0FCC:  BRA    0FD2
....................       output_high(GLCD_CS1); 
0FCE:  BCF    F93.3
0FD0:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0FD2:  BCF    F93.6
0FD4:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0FD6:  CLRF   F95
0FD8:  MOVFF  51C,F8C
....................    delay_cycles(50); 
0FDC:  MOVLW  10
0FDE:  MOVWF  00
0FE0:  DECFSZ 00,F
0FE2:  BRA    0FE0
0FE4:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0FE6:  BCF    F93.7
0FE8:  BSF    F8A.7
....................    delay_cycles(250); 
0FEA:  MOVLW  53
0FEC:  MOVWF  00
0FEE:  DECFSZ 00,F
0FF0:  BRA    0FEE
....................    output_low(GLCD_E); 
0FF2:  BCF    F93.7
0FF4:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0FF6:  BCF    F93.3
0FF8:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0FFA:  BCF    F93.4
0FFC:  BCF    F8A.4
.................... } 
0FFE:  MOVLB  0
1000:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
1430:  MOVLW  01
1432:  MOVLB  5
1434:  MOVWF  x2F
1436:  MOVWF  x30
1438:  CLRF   x35
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
143A:  MOVF   x26,W
143C:  SUBWF  x28,W
143E:  MOVWF  x36
1440:  MOVF   x36,W
1442:  BTFSS  x36.7
1444:  BRA    144C
1446:  MOVLW  00
1448:  BSF    FD8.0
144A:  SUBFWB x36,W
144C:  CLRF   03
144E:  MOVWF  x2D
1450:  MOVFF  03,52E
....................    dy = abs((signed int8)(y2 - y1)); 
1454:  MOVF   x27,W
1456:  SUBWF  x29,W
1458:  MOVWF  x36
145A:  MOVF   x36,W
145C:  BTFSS  x36.7
145E:  BRA    1466
1460:  MOVLW  00
1462:  BSF    FD8.0
1464:  SUBFWB x36,W
1466:  CLRF   03
1468:  MOVWF  x2B
146A:  MOVFF  03,52C
....................    #endif 
....................  
....................    if(x1 > x2) 
146E:  MOVF   x26,W
1470:  SUBWF  x28,W
1472:  BC    1478
....................       addx = -1; 
1474:  MOVLW  FF
1476:  MOVWF  x2F
....................    if(y1 > y2) 
1478:  MOVF   x27,W
147A:  SUBWF  x29,W
147C:  BC    1482
....................       addy = -1; 
147E:  MOVLW  FF
1480:  MOVWF  x30
....................  
....................    if(dx >= dy) 
1482:  MOVF   x2C,W
1484:  SUBWF  x2E,W
1486:  BNC   14FE
1488:  BNZ   1490
148A:  MOVF   x2B,W
148C:  SUBWF  x2D,W
148E:  BNC   14FE
....................    { 
....................       dy *= 2; 
1490:  BCF    FD8.0
1492:  RLCF   x2B,F
1494:  RLCF   x2C,F
....................       P = dy - dx; 
1496:  MOVF   x2D,W
1498:  SUBWF  x2B,W
149A:  MOVWF  00
149C:  MOVF   x2E,W
149E:  SUBWFB x2C,W
14A0:  MOVFF  00,531
14A4:  MOVWF  x32
....................       diff = P - dx; 
14A6:  MOVF   x2D,W
14A8:  SUBWF  x31,W
14AA:  MOVWF  x33
14AC:  MOVF   x2E,W
14AE:  SUBWFB x32,W
14B0:  MOVWF  x34
....................  
....................       for(; i<=dx; ++i) 
14B2:  MOVF   x2E,F
14B4:  BNZ   14BC
14B6:  MOVF   x35,W
14B8:  SUBWF  x2D,W
14BA:  BNC   14FC
....................       { 
....................          glcd_pixel(x1, y1, color); 
14BC:  MOVFF  526,536
14C0:  MOVFF  527,537
14C4:  MOVFF  52A,538
14C8:  MOVLB  0
14CA:  RCALL  11BC
....................  
....................          if(P < 0) 
14CC:  MOVLB  5
14CE:  BTFSC  x32.7
14D0:  BRA    14D4
14D2:  BRA    14E4
....................          { 
....................             P  += dy; 
14D4:  MOVF   x2B,W
14D6:  ADDWF  x31,F
14D8:  MOVF   x2C,W
14DA:  ADDWFC x32,F
....................             x1 += addx; 
14DC:  MOVF   x2F,W
14DE:  ADDWF  x26,W
14E0:  MOVWF  x26
....................          } 
....................          else 
14E2:  BRA    14F8
....................          { 
....................             P  += diff; 
14E4:  MOVF   x33,W
14E6:  ADDWF  x31,F
14E8:  MOVF   x34,W
14EA:  ADDWFC x32,F
....................             x1 += addx; 
14EC:  MOVF   x2F,W
14EE:  ADDWF  x26,W
14F0:  MOVWF  x26
....................             y1 += addy; 
14F2:  MOVF   x30,W
14F4:  ADDWF  x27,W
14F6:  MOVWF  x27
....................          } 
....................       } 
14F8:  INCF   x35,F
14FA:  BRA    14B2
....................    } 
....................    else 
14FC:  BRA    156A
....................    { 
....................       dx *= 2; 
14FE:  BCF    FD8.0
1500:  RLCF   x2D,F
1502:  RLCF   x2E,F
....................       P = dx - dy; 
1504:  MOVF   x2B,W
1506:  SUBWF  x2D,W
1508:  MOVWF  00
150A:  MOVF   x2C,W
150C:  SUBWFB x2E,W
150E:  MOVFF  00,531
1512:  MOVWF  x32
....................       diff = P - dy; 
1514:  MOVF   x2B,W
1516:  SUBWF  x31,W
1518:  MOVWF  x33
151A:  MOVF   x2C,W
151C:  SUBWFB x32,W
151E:  MOVWF  x34
....................  
....................       for(; i<=dy; ++i) 
1520:  MOVF   x2C,F
1522:  BNZ   152A
1524:  MOVF   x35,W
1526:  SUBWF  x2B,W
1528:  BNC   156A
....................       { 
....................          glcd_pixel(x1, y1, color); 
152A:  MOVFF  526,536
152E:  MOVFF  527,537
1532:  MOVFF  52A,538
1536:  MOVLB  0
1538:  RCALL  11BC
....................  
....................          if(P < 0) 
153A:  MOVLB  5
153C:  BTFSC  x32.7
153E:  BRA    1542
1540:  BRA    1552
....................          { 
....................             P  += dx; 
1542:  MOVF   x2D,W
1544:  ADDWF  x31,F
1546:  MOVF   x2E,W
1548:  ADDWFC x32,F
....................             y1 += addy; 
154A:  MOVF   x30,W
154C:  ADDWF  x27,W
154E:  MOVWF  x27
....................          } 
....................          else 
1550:  BRA    1566
....................          { 
....................             P  += diff; 
1552:  MOVF   x33,W
1554:  ADDWF  x31,F
1556:  MOVF   x34,W
1558:  ADDWFC x32,F
....................             x1 += addx; 
155A:  MOVF   x2F,W
155C:  ADDWF  x26,W
155E:  MOVWF  x26
....................             y1 += addy; 
1560:  MOVF   x30,W
1562:  ADDWF  x27,W
1564:  MOVWF  x27
....................          } 
....................       } 
1566:  INCF   x35,F
1568:  BRA    1520
....................    } 
.................... } 
156A:  MOVLB  0
156C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
156E:  MOVLB  5
1570:  MOVF   x1F,F
1572:  BZ    15D0
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1574:  MOVF   x1D,W
1576:  SUBWF  x1B,W
1578:  BC    1584
....................       { 
....................          xmin = x1; 
157A:  MOVFF  51B,522
....................          xmax = x2; 
157E:  MOVFF  51D,523
....................       } 
....................       else 
1582:  BRA    158C
....................       { 
....................          xmin = x2; 
1584:  MOVFF  51D,522
....................          xmax = x1; 
1588:  MOVFF  51B,523
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
158C:  MOVF   x1E,W
158E:  SUBWF  x1C,W
1590:  BC    159C
....................       { 
....................          ymin = y1; 
1592:  MOVFF  51C,524
....................          ymax = y2; 
1596:  MOVFF  51E,525
....................       } 
....................       else 
159A:  BRA    15A4
....................       { 
....................          ymin = y2; 
159C:  MOVFF  51E,524
....................          ymax = y1; 
15A0:  MOVFF  51C,525
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
15A4:  MOVF   x22,W
15A6:  SUBWF  x23,W
15A8:  BNC   15CE
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
15AA:  MOVFF  524,521
15AE:  MOVF   x21,W
15B0:  SUBWF  x25,W
15B2:  BNC   15CA
....................          { 
....................             glcd_pixel(xmin, i, color); 
15B4:  MOVFF  522,536
15B8:  MOVFF  521,537
15BC:  MOVFF  520,538
15C0:  MOVLB  0
15C2:  RCALL  11BC
....................          } 
15C4:  MOVLB  5
15C6:  INCF   x21,F
15C8:  BRA    15AE
....................       } 
15CA:  INCF   x22,F
15CC:  BRA    15A4
....................    } 
....................    else 
15CE:  BRA    162C
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
15D0:  MOVFF  51B,526
15D4:  MOVFF  51C,527
15D8:  MOVFF  51D,528
15DC:  MOVFF  51C,529
15E0:  MOVFF  520,52A
15E4:  MOVLB  0
15E6:  RCALL  1430
....................       glcd_line(x1, y2, x2, y2, color); 
15E8:  MOVFF  51B,526
15EC:  MOVFF  51E,527
15F0:  MOVFF  51D,528
15F4:  MOVFF  51E,529
15F8:  MOVFF  520,52A
15FC:  RCALL  1430
....................       glcd_line(x1, y1, x1, y2, color); 
15FE:  MOVFF  51B,526
1602:  MOVFF  51C,527
1606:  MOVFF  51B,528
160A:  MOVFF  51E,529
160E:  MOVFF  520,52A
1612:  RCALL  1430
....................       glcd_line(x2, y1, x2, y2, color); 
1614:  MOVFF  51D,526
1618:  MOVFF  51C,527
161C:  MOVFF  51D,528
1620:  MOVFF  51E,529
1624:  MOVFF  520,52A
1628:  RCALL  1430
162A:  MOVLB  5
....................    } 
.................... } 
162C:  MOVLB  0
162E:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
217A:  MOVLB  5
217C:  CLRF   x0A
....................    b = radius; 
217E:  MOVFF  507,50B
....................    P = 1 - radius; 
2182:  MOVLW  01
2184:  BSF    FD8.0
2186:  SUBFWB x07,W
2188:  MOVWF  x0C
....................  
....................    do 
....................    { 
....................       if(fill) 
218A:  MOVF   x08,F
218C:  BZ    2258
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
218E:  MOVF   x0A,W
2190:  SUBWF  x05,W
2192:  MOVWF  x0D
2194:  MOVF   x0B,W
2196:  ADDWF  x06,W
2198:  MOVWF  x0E
219A:  MOVF   x0A,W
219C:  ADDWF  x05,W
219E:  MOVWF  x0F
21A0:  MOVF   x0B,W
21A2:  ADDWF  x06,W
21A4:  MOVWF  x10
21A6:  MOVFF  50D,526
21AA:  MOVFF  50E,527
21AE:  MOVFF  50F,528
21B2:  MOVWF  x29
21B4:  MOVFF  509,52A
21B8:  MOVLB  0
21BA:  CALL   1430
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
21BE:  MOVLB  5
21C0:  MOVF   x0A,W
21C2:  SUBWF  x05,W
21C4:  MOVWF  x0D
21C6:  MOVF   x0B,W
21C8:  SUBWF  x06,W
21CA:  MOVWF  x0E
21CC:  MOVF   x0A,W
21CE:  ADDWF  x05,W
21D0:  MOVWF  x0F
21D2:  MOVF   x0B,W
21D4:  SUBWF  x06,W
21D6:  MOVWF  x10
21D8:  MOVFF  50D,526
21DC:  MOVFF  50E,527
21E0:  MOVFF  50F,528
21E4:  MOVWF  x29
21E6:  MOVFF  509,52A
21EA:  MOVLB  0
21EC:  CALL   1430
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
21F0:  MOVLB  5
21F2:  MOVF   x0B,W
21F4:  SUBWF  x05,W
21F6:  MOVWF  x0D
21F8:  MOVF   x0A,W
21FA:  ADDWF  x06,W
21FC:  MOVWF  x0E
21FE:  MOVF   x0B,W
2200:  ADDWF  x05,W
2202:  MOVWF  x0F
2204:  MOVF   x0A,W
2206:  ADDWF  x06,W
2208:  MOVWF  x10
220A:  MOVFF  50D,526
220E:  MOVFF  50E,527
2212:  MOVFF  50F,528
2216:  MOVWF  x29
2218:  MOVFF  509,52A
221C:  MOVLB  0
221E:  CALL   1430
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
2222:  MOVLB  5
2224:  MOVF   x0B,W
2226:  SUBWF  x05,W
2228:  MOVWF  x0D
222A:  MOVF   x0A,W
222C:  SUBWF  x06,W
222E:  MOVWF  x0E
2230:  MOVF   x0B,W
2232:  ADDWF  x05,W
2234:  MOVWF  x0F
2236:  MOVF   x0A,W
2238:  SUBWF  x06,W
223A:  MOVWF  x10
223C:  MOVFF  50D,526
2240:  MOVFF  50E,527
2244:  MOVFF  50F,528
2248:  MOVWF  x29
224A:  MOVFF  509,52A
224E:  MOVLB  0
2250:  CALL   1430
....................       } 
....................       else 
2254:  BRA    2346
2256:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2258:  MOVF   x05,W
225A:  ADDWF  x0A,W
225C:  MOVWF  x0D
225E:  MOVF   x06,W
2260:  ADDWF  x0B,W
2262:  MOVWF  x0E
2264:  MOVFF  50D,536
2268:  MOVWF  x37
226A:  MOVFF  509,538
226E:  MOVLB  0
2270:  CALL   11BC
....................          glcd_pixel(b+x, a+y, color); 
2274:  MOVLB  5
2276:  MOVF   x05,W
2278:  ADDWF  x0B,W
227A:  MOVWF  x0D
227C:  MOVF   x06,W
227E:  ADDWF  x0A,W
2280:  MOVWF  x0E
2282:  MOVFF  50D,536
2286:  MOVWF  x37
2288:  MOVFF  509,538
228C:  MOVLB  0
228E:  CALL   11BC
....................          glcd_pixel(x-a, b+y, color); 
2292:  MOVLB  5
2294:  MOVF   x0A,W
2296:  SUBWF  x05,W
2298:  MOVWF  x0D
229A:  MOVF   x06,W
229C:  ADDWF  x0B,W
229E:  MOVWF  x0E
22A0:  MOVFF  50D,536
22A4:  MOVWF  x37
22A6:  MOVFF  509,538
22AA:  MOVLB  0
22AC:  CALL   11BC
....................          glcd_pixel(x-b, a+y, color); 
22B0:  MOVLB  5
22B2:  MOVF   x0B,W
22B4:  SUBWF  x05,W
22B6:  MOVWF  x0D
22B8:  MOVF   x06,W
22BA:  ADDWF  x0A,W
22BC:  MOVWF  x0E
22BE:  MOVFF  50D,536
22C2:  MOVWF  x37
22C4:  MOVFF  509,538
22C8:  MOVLB  0
22CA:  CALL   11BC
....................          glcd_pixel(b+x, y-a, color); 
22CE:  MOVLB  5
22D0:  MOVF   x05,W
22D2:  ADDWF  x0B,W
22D4:  MOVWF  x0D
22D6:  MOVF   x0A,W
22D8:  SUBWF  x06,W
22DA:  MOVWF  x0E
22DC:  MOVFF  50D,536
22E0:  MOVWF  x37
22E2:  MOVFF  509,538
22E6:  MOVLB  0
22E8:  CALL   11BC
....................          glcd_pixel(a+x, y-b, color); 
22EC:  MOVLB  5
22EE:  MOVF   x05,W
22F0:  ADDWF  x0A,W
22F2:  MOVWF  x0D
22F4:  MOVF   x0B,W
22F6:  SUBWF  x06,W
22F8:  MOVWF  x0E
22FA:  MOVFF  50D,536
22FE:  MOVWF  x37
2300:  MOVFF  509,538
2304:  MOVLB  0
2306:  CALL   11BC
....................          glcd_pixel(x-a, y-b, color); 
230A:  MOVLB  5
230C:  MOVF   x0A,W
230E:  SUBWF  x05,W
2310:  MOVWF  x0D
2312:  MOVF   x0B,W
2314:  SUBWF  x06,W
2316:  MOVWF  x0E
2318:  MOVFF  50D,536
231C:  MOVWF  x37
231E:  MOVFF  509,538
2322:  MOVLB  0
2324:  CALL   11BC
....................          glcd_pixel(x-b, y-a, color); 
2328:  MOVLB  5
232A:  MOVF   x0B,W
232C:  SUBWF  x05,W
232E:  MOVWF  x0D
2330:  MOVF   x0A,W
2332:  SUBWF  x06,W
2334:  MOVWF  x0E
2336:  MOVFF  50D,536
233A:  MOVWF  x37
233C:  MOVFF  509,538
2340:  MOVLB  0
2342:  CALL   11BC
....................       } 
....................  
....................       if(P < 0) 
2346:  MOVLB  5
2348:  BTFSC  x0C.7
234A:  BRA    234E
234C:  BRA    236A
....................          P += 3 + 2 * a++; 
234E:  MOVF   x0A,W
2350:  INCF   x0A,F
2352:  MOVWF  x0D
2354:  MOVLW  02
2356:  MOVWF  x0E
2358:  MOVFF  50D,50F
235C:  MOVLB  0
235E:  RCALL  212C
2360:  MOVF   01,W
2362:  ADDLW  03
2364:  MOVLB  5
2366:  ADDWF  x0C,F
....................       else 
2368:  BRA    238C
....................          P += 5 + 2 * (a++ - b--); 
236A:  MOVF   x0A,W
236C:  INCF   x0A,F
236E:  MOVWF  x0D
2370:  MOVF   x0B,W
2372:  DECF   x0B,F
2374:  SUBWF  x0D,W
2376:  MOVWF  x0D
2378:  MOVLW  02
237A:  MOVWF  x0E
237C:  MOVFF  50D,50F
2380:  MOVLB  0
2382:  RCALL  212C
2384:  MOVF   01,W
2386:  ADDLW  05
2388:  MOVLB  5
238A:  ADDWF  x0C,F
....................     } while(a <= b); 
238C:  MOVF   x0A,W
238E:  XORLW  80
2390:  MOVWF  00
2392:  MOVF   x0B,W
2394:  XORLW  80
2396:  SUBWF  00,W
2398:  BTFSC  FD8.2
239A:  BRA    218A
239C:  BTFSS  FD8.0
239E:  BRA    218A
.................... } 
23A0:  MOVLB  0
23A2:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
1278:  MOVFF  51C,03
127C:  MOVLB  5
127E:  MOVFF  51B,FE9
1282:  MOVFF  51C,FEA
1286:  MOVF   FEF,F
1288:  BTFSC  FD8.2
128A:  BRA    142C
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
128C:  MOVFF  51C,03
1290:  MOVFF  51B,FE9
1294:  MOVFF  51C,FEA
1298:  MOVF   FEF,W
129A:  SUBLW  52
129C:  BNC   12EC
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
129E:  MOVFF  51C,03
12A2:  MOVFF  51B,FE9
12A6:  MOVFF  51C,FEA
12AA:  MOVLW  20
12AC:  SUBWF  FEF,W
12AE:  MULLW  05
12B0:  MOVF   FF3,W
12B2:  CLRF   03
12B4:  MOVWF  x28
12B6:  MOVLW  05
12B8:  MOVWF  FEA
12BA:  MOVLW  23
12BC:  MOVWF  FE9
12BE:  CLRF   x2C
12C0:  MOVFF  528,52B
12C4:  MOVFF  FF2,529
12C8:  BCF    FF2.7
12CA:  MOVLW  05
12CC:  MOVWF  01
12CE:  CLRF   FF7
12D0:  MOVF   x28,W
12D2:  MOVLB  0
12D4:  CALL   0096
12D8:  TBLRD*-
12DA:  TBLRD*+
12DC:  MOVFF  FF5,FEE
12E0:  DECFSZ 01,F
12E2:  BRA    12DA
12E4:  MOVLB  5
12E6:  BTFSC  x29.7
12E8:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
12EA:  BRA    1356
12EC:  MOVFF  51C,03
12F0:  MOVFF  51B,FE9
12F4:  MOVFF  51C,FEA
12F8:  MOVF   FEF,W
12FA:  SUBLW  7E
12FC:  BNC   134C
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
12FE:  MOVFF  51C,03
1302:  MOVFF  51B,FE9
1306:  MOVFF  51C,FEA
130A:  MOVLW  53
130C:  SUBWF  FEF,W
130E:  MULLW  05
1310:  MOVF   FF3,W
1312:  CLRF   03
1314:  MOVWF  x28
1316:  MOVLW  05
1318:  MOVWF  FEA
131A:  MOVLW  23
131C:  MOVWF  FE9
131E:  CLRF   x2C
1320:  MOVFF  528,52B
1324:  MOVFF  FF2,529
1328:  BCF    FF2.7
132A:  MOVLW  05
132C:  MOVWF  01
132E:  CLRF   FF7
1330:  MOVF   x28,W
1332:  MOVLB  0
1334:  CALL   01B0
1338:  TBLRD*-
133A:  TBLRD*+
133C:  MOVFF  FF5,FEE
1340:  DECFSZ 01,F
1342:  BRA    133A
1344:  MOVLB  5
1346:  BTFSC  x29.7
1348:  BSF    FF2.7
....................       else 
134A:  BRA    1356
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
134C:  CLRF   x23
134E:  CLRF   x24
1350:  CLRF   x25
1352:  CLRF   x26
1354:  CLRF   x27
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1356:  MOVFF  51C,03
135A:  MOVF   x1B,W
135C:  MOVWF  FE9
135E:  MOVFF  03,FEA
1362:  MOVF   FEF,W
1364:  XORLW  0A
1366:  MOVLB  0
1368:  BZ    1370
136A:  XORLW  07
136C:  BZ    1380
136E:  BRA    1386
....................          case '\n': 
....................             y += 7*size + 1; 
1370:  MOVLB  5
1372:  MOVF   x1D,W
1374:  MULLW  07
1376:  MOVF   FF3,W
1378:  ADDLW  01
137A:  ADDWF  x1A,F
....................             continue; 
137C:  BRA    141E
137E:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1380:  MOVLB  5
1382:  CLRF   x19
....................             continue; 
1384:  BRA    141E
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1386:  MOVLB  5
1388:  MOVF   x1D,W
138A:  MULLW  05
138C:  MOVF   FF3,W
138E:  ADDWF  x19,W
1390:  SUBLW  7F
1392:  BC    13A0
....................       { 
....................          x = 0;                           // Set x at far left position 
1394:  CLRF   x19
....................          y += 7*size + 1;                 // Set y at next position down 
1396:  MOVF   x1D,W
1398:  MULLW  07
139A:  MOVF   FF3,W
139C:  ADDLW  01
139E:  ADDWF  x1A,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
13A0:  CLRF   x1F
13A2:  MOVF   x1F,W
13A4:  SUBLW  04
13A6:  BNC   141E
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
13A8:  CLRF   x20
13AA:  MOVF   x20,W
13AC:  SUBLW  06
13AE:  BNC   1416
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
13B0:  CLRF   03
13B2:  MOVF   x1F,W
13B4:  ADDLW  23
13B6:  MOVWF  FE9
13B8:  MOVLW  05
13BA:  ADDWFC 03,W
13BC:  MOVWF  FEA
13BE:  MOVFF  FEF,528
13C2:  MOVFF  528,00
13C6:  MOVF   x20,W
13C8:  MOVWF  01
13CA:  BZ    13D4
13CC:  BCF    FD8.0
13CE:  RRCF   00,F
13D0:  DECFSZ 01,F
13D2:  BRA    13CC
13D4:  BTFSS  00.0
13D6:  BRA    1412
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
13D8:  CLRF   x21
13DA:  MOVF   x1D,W
13DC:  SUBWF  x21,W
13DE:  BC    1412
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
13E0:  CLRF   x22
13E2:  MOVF   x1D,W
13E4:  SUBWF  x22,W
13E6:  BC    140E
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
13E8:  MOVF   x22,W
13EA:  ADDWF  x19,W
13EC:  MOVWF  x28
13EE:  MOVF   x20,W
13F0:  MULWF  x1D
13F2:  MOVF   FF3,W
13F4:  ADDWF  x1A,W
13F6:  ADDWF  x21,W
13F8:  MOVWF  x29
13FA:  MOVFF  528,536
13FE:  MOVWF  x37
1400:  MOVFF  51E,538
1404:  MOVLB  0
1406:  RCALL  11BC
....................                   } 
1408:  MOVLB  5
140A:  INCF   x22,F
140C:  BRA    13E2
....................                } 
140E:  INCF   x21,F
1410:  BRA    13DA
....................             } 
....................          } 
1412:  INCF   x20,F
1414:  BRA    13AA
....................       } 
1416:  INCF   x1F,F
1418:  MOVF   x1D,W
141A:  ADDWF  x19,F
141C:  BRA    13A2
....................    } 
141E:  INCF   x1B,F
1420:  BTFSC  FD8.2
1422:  INCF   x1C,F
1424:  INCF   x19,F
1426:  MOVLB  0
1428:  BRA    1278
142A:  MOVLB  5
.................... } 
142C:  MOVLB  0
142E:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0,PresionCamara=0,PresionPreCamara=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
1630:  MOVLB  5
1632:  MOVFF  505,01
1636:  MOVFF  506,03
163A:  MOVFF  505,50B
163E:  MOVFF  506,50C
1642:  MOVLW  04
1644:  MOVWF  FEA
1646:  MOVLW  E5
1648:  MOVWF  FE9
164A:  MOVFF  506,FE2
164E:  MOVFF  505,FE1
1652:  MOVF   FE7,F
1654:  MOVFF  FE6,FEE
1658:  BNZ   1652
....................    if(sombreado==2) 
165A:  MOVF   x09,W
165C:  SUBLW  02
165E:  BNZ   1688
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1660:  MOVLW  01
1662:  ADDWF  x07,W
1664:  MOVWF  x0B
1666:  MOVLW  01
1668:  ADDWF  x08,W
166A:  MOVWF  x0C
166C:  MOVFF  50B,519
1670:  MOVWF  x1A
1672:  MOVLW  04
1674:  MOVWF  x1C
1676:  MOVLW  E5
1678:  MOVWF  x1B
167A:  MOVFF  50A,51D
167E:  MOVLW  01
1680:  MOVWF  x1E
1682:  MOVLB  0
1684:  RCALL  1278
1686:  MOVLB  5
....................    if(sombreado==1) 
1688:  DECFSZ x09,W
168A:  BRA    16D6
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
168C:  MOVF   x0A,W
168E:  MULLW  08
1690:  MOVF   FF3,W
1692:  ADDWF  x08,W
1694:  MOVWF  x0B
1696:  CLRF   x1B
1698:  MOVFF  508,51C
169C:  MOVLW  7F
169E:  MOVWF  x1D
16A0:  MOVFF  50B,51E
16A4:  MOVLW  01
16A6:  MOVWF  x1F
16A8:  MOVWF  x20
16AA:  MOVLB  0
16AC:  RCALL  156E
16AE:  MOVLW  01
16B0:  MOVLB  5
16B2:  ADDWF  x07,W
16B4:  MOVWF  x0B
16B6:  MOVLW  01
16B8:  ADDWF  x08,W
16BA:  MOVWF  x0C
16BC:  MOVFF  50B,519
16C0:  MOVWF  x1A
16C2:  MOVLW  04
16C4:  MOVWF  x1C
16C6:  MOVLW  E5
16C8:  MOVWF  x1B
16CA:  MOVFF  50A,51D
16CE:  CLRF   x1E
16D0:  MOVLB  0
16D2:  RCALL  1278
16D4:  MOVLB  5
....................    if(sombreado==0) 
16D6:  MOVF   x09,F
16D8:  BNZ   1724
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
16DA:  MOVF   x0A,W
16DC:  MULLW  08
16DE:  MOVF   FF3,W
16E0:  ADDWF  x08,W
16E2:  MOVWF  x0B
16E4:  CLRF   x1B
16E6:  MOVFF  508,51C
16EA:  MOVLW  7F
16EC:  MOVWF  x1D
16EE:  MOVFF  50B,51E
16F2:  MOVLW  01
16F4:  MOVWF  x1F
16F6:  CLRF   x20
16F8:  MOVLB  0
16FA:  RCALL  156E
16FC:  MOVLW  01
16FE:  MOVLB  5
1700:  ADDWF  x07,W
1702:  MOVWF  x0B
1704:  MOVLW  01
1706:  ADDWF  x08,W
1708:  MOVWF  x0C
170A:  MOVFF  50B,519
170E:  MOVWF  x1A
1710:  MOVLW  04
1712:  MOVWF  x1C
1714:  MOVLW  E5
1716:  MOVWF  x1B
1718:  MOVFF  50A,51D
171C:  MOVLW  01
171E:  MOVWF  x1E
1720:  MOVLB  0
1722:  RCALL  1278
....................    glcd_update(); 
1724:  MOVLB  0
1726:  RCALL  105C
.................... } 
1728:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
242A:  MOVLB  5
242C:  MOVF   x09,W
242E:  SUBLW  02
2430:  BNZ   24A2
....................    { 
....................       sprintf(voltage, "%03u", digito); 
2432:  MOVLW  05
2434:  MOVWF  x04
2436:  MOVLW  0B
2438:  MOVWF  x03
243A:  MOVFF  506,514
243E:  MOVLW  03
2440:  MOVWF  x15
2442:  MOVLB  0
2444:  RCALL  23A4
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2446:  MOVLB  5
2448:  MOVF   x0A,W
244A:  MULLW  12
244C:  MOVF   FF3,W
244E:  ADDWF  x07,W
2450:  MOVWF  x14
2452:  MOVF   x0A,W
2454:  MULLW  08
2456:  MOVF   FF3,W
2458:  ADDWF  x08,W
245A:  MOVWF  x15
245C:  MOVFF  507,51B
2460:  MOVFF  508,51C
2464:  MOVFF  514,51D
2468:  MOVWF  x1E
246A:  MOVLW  01
246C:  MOVWF  x1F
246E:  MOVWF  x20
2470:  MOVLB  0
2472:  CALL   156E
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2476:  MOVLW  01
2478:  MOVLB  5
247A:  ADDWF  x07,W
247C:  MOVWF  x14
247E:  MOVLW  01
2480:  ADDWF  x08,W
2482:  MOVWF  x15
2484:  MOVFF  514,519
2488:  MOVWF  x1A
248A:  MOVLW  05
248C:  MOVWF  x1C
248E:  MOVLW  0B
2490:  MOVWF  x1B
2492:  MOVFF  50A,51D
2496:  CLRF   x1E
2498:  MOVLB  0
249A:  CALL   1278
....................    } 
....................    else 
249E:  BRA    2570
24A0:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
24A2:  MOVLW  05
24A4:  MOVWF  x04
24A6:  MOVLW  0B
24A8:  MOVWF  x03
24AA:  MOVFF  506,514
24AE:  MOVLW  1B
24B0:  MOVWF  x15
24B2:  MOVLB  0
24B4:  RCALL  23A4
....................     
....................       if(sombreado==1) 
24B6:  MOVLB  5
24B8:  DECFSZ x09,W
24BA:  BRA    2514
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24BC:  MOVF   x0A,W
24BE:  MULLW  05
24C0:  MOVF   FF3,W
24C2:  ADDWF  x07,W
24C4:  MOVWF  x14
24C6:  MOVF   x0A,W
24C8:  MULLW  08
24CA:  MOVF   FF3,W
24CC:  ADDWF  x08,W
24CE:  MOVWF  x15
24D0:  MOVFF  507,51B
24D4:  MOVFF  508,51C
24D8:  MOVFF  514,51D
24DC:  MOVWF  x1E
24DE:  MOVLW  01
24E0:  MOVWF  x1F
24E2:  MOVWF  x20
24E4:  MOVLB  0
24E6:  CALL   156E
24EA:  MOVLW  01
24EC:  MOVLB  5
24EE:  ADDWF  x07,W
24F0:  MOVWF  x14
24F2:  MOVLW  01
24F4:  ADDWF  x08,W
24F6:  MOVWF  x15
24F8:  MOVFF  514,519
24FC:  MOVWF  x1A
24FE:  MOVLW  05
2500:  MOVWF  x1C
2502:  MOVLW  0B
2504:  MOVWF  x1B
2506:  MOVFF  50A,51D
250A:  CLRF   x1E
250C:  MOVLB  0
250E:  CALL   1278
2512:  MOVLB  5
....................       if(sombreado==0) 
2514:  MOVF   x09,F
2516:  BNZ   2572
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2518:  MOVF   x0A,W
251A:  MULLW  05
251C:  MOVF   FF3,W
251E:  ADDWF  x07,W
2520:  MOVWF  x14
2522:  MOVF   x0A,W
2524:  MULLW  08
2526:  MOVF   FF3,W
2528:  ADDWF  x08,W
252A:  MOVWF  x15
252C:  MOVFF  507,51B
2530:  MOVFF  508,51C
2534:  MOVFF  514,51D
2538:  MOVWF  x1E
253A:  MOVLW  01
253C:  MOVWF  x1F
253E:  CLRF   x20
2540:  MOVLB  0
2542:  CALL   156E
2546:  MOVLW  01
2548:  MOVLB  5
254A:  ADDWF  x07,W
254C:  MOVWF  x14
254E:  MOVLW  01
2550:  ADDWF  x08,W
2552:  MOVWF  x15
2554:  MOVFF  514,519
2558:  MOVWF  x1A
255A:  MOVLW  05
255C:  MOVWF  x1C
255E:  MOVLW  0B
2560:  MOVWF  x1B
2562:  MOVFF  50A,51D
2566:  MOVLW  01
2568:  MOVWF  x1E
256A:  MOVLB  0
256C:  CALL   1278
2570:  MOVLB  5
....................    } 
....................    glcd_update(); 
2572:  MOVLB  0
2574:  CALL   105C
.................... } 
2578:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
207E:  MOVLB  5
2080:  MOVF   x05,W
2082:  SUBLW  05
2084:  BNZ   2128
....................    for( i = 0 ; i < 64 ; i ++ ) 
2086:  CLRF   x06
2088:  MOVF   x06,W
208A:  SUBLW  3F
208C:  BNC   2128
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
208E:  CLRF   x07
2090:  MOVF   x07,W
2092:  SUBLW  0F
2094:  BNC   2124
....................       {     
....................          for(k=7;k>-1;k--) 
2096:  MOVLW  07
2098:  MOVWF  x08
209A:  MOVF   x08,W
209C:  XORLW  80
209E:  SUBLW  7F
20A0:  BC    2120
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
20A2:  CLRF   x0A
20A4:  MOVFF  506,509
20A8:  CLRF   x0C
20AA:  MOVLW  10
20AC:  MOVWF  x0B
20AE:  MOVLB  0
20B0:  BRA    205A
20B2:  MOVFF  02,50A
20B6:  MOVFF  01,509
20BA:  MOVLB  5
20BC:  MOVF   x07,W
20BE:  ADDWF  01,W
20C0:  MOVWF  01
20C2:  MOVLW  00
20C4:  ADDWFC 02,W
20C6:  MOVWF  03
20C8:  MOVF   01,W
20CA:  MOVFF  FF2,509
20CE:  BCF    FF2.7
20D0:  MOVFF  03,FF7
20D4:  MOVLB  0
20D6:  CALL   02A6
20DA:  MOVLB  5
20DC:  BTFSC  x09.7
20DE:  BSF    FF2.7
20E0:  MOVWF  x09
20E2:  MOVLW  07
20E4:  BSF    FD8.0
20E6:  SUBFWB x08,W
20E8:  MOVWF  x0A
20EA:  MOVFF  509,00
20EE:  MOVF   x0A,W
20F0:  MOVWF  01
20F2:  BZ    20FC
20F4:  BCF    FD8.0
20F6:  RRCF   00,F
20F8:  DECFSZ 01,F
20FA:  BRA    20F4
20FC:  BTFSS  00.0
20FE:  BRA    211C
....................                glcd_pixel( j*8+k,i, ON ); 
2100:  MOVF   x07,W
2102:  MULLW  08
2104:  MOVF   FF3,W
2106:  ADDWF  x08,W
2108:  MOVWF  x09
210A:  MOVWF  x36
210C:  MOVFF  506,537
2110:  MOVLW  01
2112:  MOVWF  x38
2114:  MOVLB  0
2116:  CALL   11BC
211A:  MOVLB  5
....................          }   
211C:  DECF   x08,F
211E:  BRA    209A
....................       } 
2120:  INCF   x07,F
2122:  BRA    2090
....................    } 
2124:  INCF   x06,F
2126:  BRA    2088
....................    } 
....................     
.................... } 
2128:  MOVLB  0
212A:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0ECA:  MOVLW  15
0ECC:  MOVWF  FCF
0ECE:  MOVLW  A0
0ED0:  MOVWF  FCE
....................    tiempos++; 
0ED2:  MOVLB  4
0ED4:  INCF   xAC,F
0ED6:  BTFSC  FD8.2
0ED8:  INCF   xAD,F
....................    tiempos3++; 
0EDA:  INCF   xAE,F
0EDC:  BTFSC  FD8.2
0EDE:  INCF   xAF,F
....................    tiempoctrl++; 
0EE0:  INCF   xB0,F
0EE2:  BTFSC  FD8.2
0EE4:  INCF   xB1,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0EE6:  MOVF   xAF,F
0EE8:  BNZ   0EF0
0EEA:  MOVF   xAE,W
0EEC:  SUBLW  27
0EEE:  BC    0F02
0EF0:  MOVF   xAA,W
0EF2:  SUBLW  02
0EF4:  BNZ   0F02
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0EF6:  CLRF   xAF
0EF8:  CLRF   xAE
0EFA:  BSF    x95.7
0EFC:  INCF   xB6,F
0EFE:  BTFSC  FD8.2
0F00:  INCF   xB7,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0F02:  MOVF   xAC,W
0F04:  SUBLW  C8
0F06:  BNZ   0F90
0F08:  MOVF   xAD,F
0F0A:  BNZ   0F90
....................    {tiempos=0;Lectura=1;tinicio++; 
0F0C:  CLRF   xAD
0F0E:  CLRF   xAC
0F10:  BSF    x95.6
0F12:  INCF   xB8,F
0F14:  BTFSC  FD8.2
0F16:  INCF   xB9,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0F18:  DECFSZ xA8,W
0F1A:  BRA    0F54
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0F1C:  INCF   xC2,F
....................       if(Testerilizacion[0]>9) 
0F1E:  BTFSC  xC2.7
0F20:  BRA    0F2C
0F22:  MOVF   xC2,W
0F24:  SUBLW  09
0F26:  BC    0F2C
....................          {Testerilizacion[0]=0; 
0F28:  CLRF   xC2
....................           Testerilizacion[1]++;} 
0F2A:  INCF   xC3,F
....................        if(Testerilizacion[1]>5) 
0F2C:  BTFSC  xC3.7
0F2E:  BRA    0F3A
0F30:  MOVF   xC3,W
0F32:  SUBLW  05
0F34:  BC    0F3A
....................          {Testerilizacion[1]=0; 
0F36:  CLRF   xC3
....................           Testerilizacion[2]++;} 
0F38:  INCF   xC4,F
....................          if(Testerilizacion[2]>9) 
0F3A:  BTFSC  xC4.7
0F3C:  BRA    0F48
0F3E:  MOVF   xC4,W
0F40:  SUBLW  09
0F42:  BC    0F48
....................             {Testerilizacion[2]=0; 
0F44:  CLRF   xC4
....................              Testerilizacion[3]++;} 
0F46:  INCF   xC5,F
....................             if(Testerilizacion[3]>5) 
0F48:  BTFSC  xC5.7
0F4A:  BRA    0F54
0F4C:  MOVF   xC5,W
0F4E:  SUBLW  05
0F50:  BC    0F54
....................                {Testerilizacion[3]=0;} 
0F52:  CLRF   xC5
....................       }        
....................        
....................     if(tiempo_secado==1) 
0F54:  DECFSZ xA9,W
0F56:  BRA    0F90
....................       { 
....................                       
....................       Tsecado[0]++; 
0F58:  INCF   xCA,F
....................       if(Tsecado[0]>9) 
0F5A:  BTFSC  xCA.7
0F5C:  BRA    0F68
0F5E:  MOVF   xCA,W
0F60:  SUBLW  09
0F62:  BC    0F68
....................          {Tsecado[0]=0; 
0F64:  CLRF   xCA
....................           Tsecado[1]++;} 
0F66:  INCF   xCB,F
....................        if(Tsecado[1]>5) 
0F68:  BTFSC  xCB.7
0F6A:  BRA    0F76
0F6C:  MOVF   xCB,W
0F6E:  SUBLW  05
0F70:  BC    0F76
....................          {Tsecado[1]=0; 
0F72:  CLRF   xCB
....................           Tsecado[2]++;} 
0F74:  INCF   xCC,F
....................          if(Tsecado[2]>9) 
0F76:  BTFSC  xCC.7
0F78:  BRA    0F84
0F7A:  MOVF   xCC,W
0F7C:  SUBLW  09
0F7E:  BC    0F84
....................             {Tsecado[2]=0; 
0F80:  CLRF   xCC
....................              Tsecado[3]++;} 
0F82:  INCF   xCD,F
....................             if(Tsecado[3]>5) 
0F84:  BTFSC  xCD.7
0F86:  BRA    0F90
0F88:  MOVF   xCD,W
0F8A:  SUBLW  05
0F8C:  BC    0F90
....................                {Tsecado[3]=0;} 
0F8E:  CLRF   xCD
....................       }   
....................    } 
....................    } 
....................     
0F90:  BCF    F9E.0
0F92:  MOVLB  0
0F94:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
26BA:  MOVLW  07
26BC:  MOVLB  5
26BE:  ADDWF  x07,W
26C0:  MOVWF  x08
26C2:  MOVFF  505,51B
26C6:  MOVFF  507,51C
26CA:  MOVFF  506,51D
26CE:  MOVWF  x1E
26D0:  MOVLW  01
26D2:  MOVWF  x1F
26D4:  CLRF   x20
26D6:  MOVLB  0
26D8:  CALL   156E
.................... } 
26DC:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%3.1f",adc); // Converts adc to text 
*
2A4E:  MOVLW  05
2A50:  MOVLB  5
2A52:  MOVWF  x04
2A54:  MOVLW  10
2A56:  MOVWF  x03
2A58:  MOVLW  02
2A5A:  MOVWF  FE9
2A5C:  MOVFF  50C,51C
2A60:  MOVFF  50B,51B
2A64:  MOVFF  50A,51A
2A68:  MOVFF  509,519
2A6C:  MOVLW  01
2A6E:  MOVWF  x1D
2A70:  MOVLB  0
2A72:  BRA    289A
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2A74:  MOVLB  5
2A76:  MOVF   x0F,W
2A78:  MULLW  1B
2A7A:  MOVF   FF3,W
2A7C:  ADDWF  x0D,W
2A7E:  MOVWF  x19
2A80:  MOVF   x0F,W
2A82:  MULLW  08
2A84:  MOVF   FF3,W
2A86:  ADDWF  x0E,W
2A88:  MOVWF  x1A
2A8A:  MOVFF  50D,51B
2A8E:  MOVFF  50E,51C
2A92:  MOVFF  519,51D
2A96:  MOVWF  x1E
2A98:  MOVLW  01
2A9A:  MOVWF  x1F
2A9C:  CLRF   x20
2A9E:  MOVLB  0
2AA0:  CALL   156E
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2AA4:  MOVFF  50D,519
2AA8:  MOVFF  50E,51A
2AAC:  MOVLW  05
2AAE:  MOVLB  5
2AB0:  MOVWF  x1C
2AB2:  MOVLW  10
2AB4:  MOVWF  x1B
2AB6:  MOVFF  50F,51D
2ABA:  MOVLW  01
2ABC:  MOVWF  x1E
2ABE:  MOVLB  0
2AC0:  CALL   1278
.................... } 
2AC4:  RETLW  00
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
257A:  MOVFF  4C9,506
257E:  MOVLW  24
2580:  MOVLB  5
2582:  MOVWF  x07
2584:  CLRF   x08
2586:  CLRF   x09
2588:  MOVLW  01
258A:  MOVWF  x0A
258C:  MOVLB  0
258E:  RCALL  242A
2590:  MOVFF  4C8,506
2594:  MOVLW  2A
2596:  MOVLB  5
2598:  MOVWF  x07
259A:  CLRF   x08
259C:  CLRF   x09
259E:  MOVLW  01
25A0:  MOVWF  x0A
25A2:  MOVLB  0
25A4:  RCALL  242A
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
25A6:  MOVLW  04
25A8:  MOVWF  FEA
25AA:  MOVLW  E5
25AC:  MOVWF  FE9
25AE:  MOVFF  FF2,505
25B2:  BCF    FF2.7
25B4:  MOVLW  00
25B6:  CALL   06BE
25BA:  TBLRD*-
25BC:  TBLRD*+
25BE:  MOVF   FF5,W
25C0:  MOVWF  FEE
25C2:  IORLW  00
25C4:  BNZ   25BC
25C6:  MOVLB  5
25C8:  BTFSC  x05.7
25CA:  BSF    FF2.7
25CC:  MOVLW  04
25CE:  MOVWF  x06
25D0:  MOVLW  E5
25D2:  MOVWF  x05
25D4:  MOVLW  31
25D6:  MOVWF  x07
25D8:  CLRF   x08
25DA:  MOVLW  02
25DC:  MOVWF  x09
25DE:  MOVLW  01
25E0:  MOVWF  x0A
25E2:  MOVLB  0
25E4:  CALL   1630
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
25E8:  MOVFF  4C7,506
25EC:  MOVLW  36
25EE:  MOVLB  5
25F0:  MOVWF  x07
25F2:  CLRF   x08
25F4:  CLRF   x09
25F6:  MOVLW  01
25F8:  MOVWF  x0A
25FA:  MOVLB  0
25FC:  RCALL  242A
25FE:  MOVFF  4C6,506
2602:  MOVLW  3C
2604:  MOVLB  5
2606:  MOVWF  x07
2608:  CLRF   x08
260A:  CLRF   x09
260C:  MOVLW  01
260E:  MOVWF  x0A
2610:  MOVLB  0
2612:  RCALL  242A
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
2614:  MOVFF  4D1,506
2618:  MOVLW  24
261A:  MOVLB  5
261C:  MOVWF  x07
261E:  MOVLW  08
2620:  MOVWF  x08
2622:  CLRF   x09
2624:  MOVLW  01
2626:  MOVWF  x0A
2628:  MOVLB  0
262A:  RCALL  242A
262C:  MOVFF  4D0,506
2630:  MOVLW  2A
2632:  MOVLB  5
2634:  MOVWF  x07
2636:  MOVLW  08
2638:  MOVWF  x08
263A:  CLRF   x09
263C:  MOVLW  01
263E:  MOVWF  x0A
2640:  MOVLB  0
2642:  RCALL  242A
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
2644:  MOVLW  04
2646:  MOVWF  FEA
2648:  MOVLW  E5
264A:  MOVWF  FE9
264C:  MOVFF  FF2,505
2650:  BCF    FF2.7
2652:  MOVLW  00
2654:  CALL   06BE
2658:  TBLRD*-
265A:  TBLRD*+
265C:  MOVF   FF5,W
265E:  MOVWF  FEE
2660:  IORLW  00
2662:  BNZ   265A
2664:  MOVLB  5
2666:  BTFSC  x05.7
2668:  BSF    FF2.7
266A:  MOVLW  04
266C:  MOVWF  x06
266E:  MOVLW  E5
2670:  MOVWF  x05
2672:  MOVLW  31
2674:  MOVWF  x07
2676:  MOVLW  08
2678:  MOVWF  x08
267A:  MOVLW  02
267C:  MOVWF  x09
267E:  MOVLW  01
2680:  MOVWF  x0A
2682:  MOVLB  0
2684:  CALL   1630
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
2688:  MOVFF  4CF,506
268C:  MOVLW  36
268E:  MOVLB  5
2690:  MOVWF  x07
2692:  MOVLW  08
2694:  MOVWF  x08
2696:  CLRF   x09
2698:  MOVLW  01
269A:  MOVWF  x0A
269C:  MOVLB  0
269E:  RCALL  242A
26A0:  MOVFF  4CE,506
26A4:  MOVLW  3C
26A6:  MOVLB  5
26A8:  MOVWF  x07
26AA:  MOVLW  08
26AC:  MOVWF  x08
26AE:  CLRF   x09
26B0:  MOVLW  01
26B2:  MOVWF  x0A
26B4:  MOVLB  0
26B6:  RCALL  242A
.................... } 
26B8:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1856:  MOVLW  05
1858:  MOVLB  5
185A:  MOVWF  x04
185C:  MOVLW  0B
185E:  MOVWF  x03
1860:  MOVFF  507,514
1864:  MOVLW  1F
1866:  MOVWF  x15
1868:  MOVLB  0
186A:  BRA    1776
....................     
....................    if(sombreado==1) 
186C:  MOVLB  5
186E:  DECFSZ x0A,W
1870:  BRA    18C0
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1872:  MOVLW  12
1874:  ADDWF  x08,W
1876:  MOVWF  x14
1878:  MOVLW  18
187A:  ADDWF  x09,W
187C:  MOVWF  x15
187E:  MOVFF  508,51B
1882:  MOVFF  509,51C
1886:  MOVFF  514,51D
188A:  MOVWF  x1E
188C:  MOVLW  01
188E:  MOVWF  x1F
1890:  MOVWF  x20
1892:  MOVLB  0
1894:  RCALL  156E
1896:  MOVLW  02
1898:  MOVLB  5
189A:  ADDWF  x08,W
189C:  MOVWF  x14
189E:  MOVLW  01
18A0:  ADDWF  x09,W
18A2:  MOVWF  x15
18A4:  MOVFF  514,519
18A8:  MOVWF  x1A
18AA:  MOVLW  05
18AC:  MOVWF  x1C
18AE:  MOVLW  0B
18B0:  MOVWF  x1B
18B2:  MOVLW  02
18B4:  MOVWF  x1D
18B6:  CLRF   x1E
18B8:  MOVLB  0
18BA:  RCALL  1278
....................    else    
18BC:  BRA    190A
18BE:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
18C0:  MOVLW  12
18C2:  ADDWF  x08,W
18C4:  MOVWF  x14
18C6:  MOVLW  18
18C8:  ADDWF  x09,W
18CA:  MOVWF  x15
18CC:  MOVFF  508,51B
18D0:  MOVFF  509,51C
18D4:  MOVFF  514,51D
18D8:  MOVWF  x1E
18DA:  CLRF   x1F
18DC:  CLRF   x20
18DE:  MOVLB  0
18E0:  RCALL  156E
18E2:  MOVLW  02
18E4:  MOVLB  5
18E6:  ADDWF  x08,W
18E8:  MOVWF  x14
18EA:  MOVLW  01
18EC:  ADDWF  x09,W
18EE:  MOVWF  x15
18F0:  MOVFF  514,519
18F4:  MOVWF  x1A
18F6:  MOVLW  05
18F8:  MOVWF  x1C
18FA:  MOVLW  0B
18FC:  MOVWF  x1B
18FE:  MOVLW  02
1900:  MOVWF  x1D
1902:  MOVLW  01
1904:  MOVWF  x1E
1906:  MOVLB  0
1908:  RCALL  1278
....................  
.................... } 
190A:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
1FC4:  BSF    F93.0
1FC6:  MOVLW  11
1FC8:  MOVWF  00
1FCA:  DECFSZ 00,F
1FCC:  BRA    1FCA
1FCE:  BSF    F93.1
1FD0:  MOVLW  11
1FD2:  MOVWF  00
1FD4:  DECFSZ 00,F
1FD6:  BRA    1FD4
1FD8:  BCF    F8A.0
1FDA:  BCF    F93.0
1FDC:  MOVLW  11
1FDE:  MOVWF  00
1FE0:  DECFSZ 00,F
1FE2:  BRA    1FE0
1FE4:  BCF    F8A.1
1FE6:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FE8:  MOVFF  506,509
1FEC:  RCALL  190C
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
1FEE:  MOVFF  507,509
1FF2:  RCALL  190C
....................    i2c_write(dato);        // Dato a transmitir 
1FF4:  MOVFF  508,509
1FF8:  RCALL  190C
....................    i2c_stop();             // Fin comunicación 
1FFA:  BCF    F93.0
1FFC:  NOP   
1FFE:  BSF    F93.1
2000:  BTFSS  F81.1
2002:  BRA    2000
2004:  MOVLW  11
2006:  MOVWF  00
2008:  DECFSZ 00,F
200A:  BRA    2008
200C:  BRA    200E
200E:  NOP   
2010:  BSF    F93.0
2012:  MOVLW  11
2014:  MOVWF  00
2016:  DECFSZ 00,F
2018:  BRA    2016
....................  } 
201A:  GOTO   2050 (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1EDE:  BSF    F93.0
1EE0:  MOVLW  11
1EE2:  MOVWF  00
1EE4:  DECFSZ 00,F
1EE6:  BRA    1EE4
1EE8:  BSF    F93.1
1EEA:  MOVLW  11
1EEC:  MOVWF  00
1EEE:  DECFSZ 00,F
1EF0:  BRA    1EEE
1EF2:  BCF    F8A.0
1EF4:  BCF    F93.0
1EF6:  MOVLW  11
1EF8:  MOVWF  00
1EFA:  DECFSZ 00,F
1EFC:  BRA    1EFA
1EFE:  BCF    F8A.1
1F00:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1F02:  MOVFF  505,509
1F06:  MOVLB  0
1F08:  RCALL  190C
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1F0A:  MOVFF  506,509
1F0E:  RCALL  190C
....................    i2c_start();            // Reinicio 
1F10:  BSF    F93.0
1F12:  MOVLW  11
1F14:  MOVWF  00
1F16:  DECFSZ 00,F
1F18:  BRA    1F16
1F1A:  BSF    F93.1
1F1C:  MOVLW  11
1F1E:  MOVWF  00
1F20:  DECFSZ 00,F
1F22:  BRA    1F20
1F24:  BTFSS  F81.1
1F26:  BRA    1F24
1F28:  BCF    F8A.0
1F2A:  BCF    F93.0
1F2C:  MOVLW  11
1F2E:  MOVWF  00
1F30:  DECFSZ 00,F
1F32:  BRA    1F30
1F34:  BCF    F8A.1
1F36:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1F38:  MOVLW  01
1F3A:  MOVLB  5
1F3C:  ADDWF  x05,W
1F3E:  MOVWF  x07
1F40:  MOVWF  x09
1F42:  MOVLB  0
1F44:  RCALL  190C
....................    dato=i2c_read(0);       // Lectura del dato 
1F46:  CLRF   00
1F48:  BRA    1982
1F4A:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
1F4E:  BCF    F93.0
1F50:  NOP   
1F52:  BSF    F93.1
1F54:  BTFSS  F81.1
1F56:  BRA    1F54
1F58:  MOVLW  11
1F5A:  MOVWF  00
1F5C:  DECFSZ 00,F
1F5E:  BRA    1F5C
1F60:  BRA    1F62
1F62:  NOP   
1F64:  BSF    F93.0
1F66:  MOVLW  11
1F68:  MOVWF  00
1F6A:  DECFSZ 00,F
1F6C:  BRA    1F6A
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
1F8C:  MOVFF  498,456
....................    SlaveA0Tx[1]=EVDesfogue; 
1F90:  MOVFF  499,457
....................    SlaveA0Tx[2]=EVAgua; 
1F94:  MOVFF  49A,458
....................    SlaveA0Tx[3]=EVTrampa; 
1F98:  MOVFF  49B,459
....................    SlaveA0Tx[4]=MotorPuerta; 
1F9C:  MOVFF  49C,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
1FA0:  MOVFF  49D,45B
....................    SlaveA0Tx[6]=BombaVacio; 
1FA4:  MOVFF  49E,45C
....................    SlaveA0Tx[7]=BombaAgua; 
1FA8:  MOVFF  49F,45D
....................    SlaveA0Tx[8]=Control; 
1FAC:  MOVFF  4A0,45E
....................    SlaveA0Tx[9]=Setpoint; 
1FB0:  MOVFF  4A5,45F
....................    SlaveA0Tx[10]=20; 
1FB4:  MOVLW  14
1FB6:  MOVLB  4
1FB8:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
1FBA:  MOVFF  4B4,462
.................... } 
1FBE:  MOVLB  0
1FC0:  GOTO   2020 (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1DFE:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1E02:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1E06:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1E0A:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1E0E:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1E12:  MOVLB  5
1E14:  CLRF   x06
1E16:  MOVFF  41B,505
1E1A:  MOVLB  0
1E1C:  RCALL  19EE
1E1E:  MOVFF  03,4C1
1E22:  MOVFF  02,4C0
1E26:  MOVFF  01,4BF
1E2A:  MOVFF  00,4BE
....................    Alarma=txbuf[6]; 
1E2E:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1E32:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1E36:  MOVFF  41E,4AB
....................    Decimal=txbuf[9]; 
1E3A:  MOVFF  41F,4A1
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1E3E:  MOVLB  5
1E40:  CLRF   x06
1E42:  MOVFF  4A1,505
1E46:  MOVLB  0
1E48:  RCALL  19EE
1E4A:  MOVFF  00,505
1E4E:  MOVFF  01,506
1E52:  MOVFF  02,507
1E56:  MOVFF  03,508
1E5A:  MOVFF  03,50C
1E5E:  MOVFF  02,50B
1E62:  MOVFF  01,50A
1E66:  MOVFF  00,509
1E6A:  MOVLB  5
1E6C:  CLRF   x10
1E6E:  CLRF   x0F
1E70:  MOVLW  20
1E72:  MOVWF  x0E
1E74:  MOVLW  82
1E76:  MOVWF  x0D
1E78:  MOVLB  0
1E7A:  BRA    1A24
1E7C:  BCF    FD8.1
1E7E:  MOVFF  4C1,508
1E82:  MOVFF  4C0,507
1E86:  MOVFF  4BF,506
1E8A:  MOVFF  4BE,505
1E8E:  MOVFF  03,50C
1E92:  MOVFF  02,50B
1E96:  MOVFF  01,50A
1E9A:  MOVFF  00,509
1E9E:  BRA    1B84
1EA0:  MOVFF  03,4C1
1EA4:  MOVFF  02,4C0
1EA8:  MOVFF  01,4BF
1EAC:  MOVFF  00,4BE
....................    PresionCamara=make16(txbuf[11],txbuf[10]); 
1EB0:  MOVFF  421,4BB
1EB4:  MOVFF  420,4BA
....................    PresionPreCamara=make16(txbuf[13],txbuf[12]); 
1EB8:  MOVFF  423,4BD
1EBC:  MOVFF  422,4BC
.................... } 
1EC0:  GOTO   1F8A (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
201E:  BRA    1F8C
....................    for(i=0;i<13;i++) 
2020:  MOVLB  4
2022:  CLRF   xA4
2024:  MOVF   xA4,W
2026:  SUBLW  0C
2028:  BNC   2056
....................    { 
....................       direccion=0xA0; 
202A:  MOVLW  A0
202C:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
202E:  CLRF   03
2030:  MOVF   xA4,W
2032:  ADDLW  56
2034:  MOVWF  FE9
2036:  MOVLW  04
2038:  ADDWFC 03,W
203A:  MOVWF  FEA
203C:  MOVFF  FEF,505
2040:  MOVFF  487,506
2044:  MOVFF  4A4,507
2048:  MOVFF  505,508
204C:  MOVLB  0
204E:  BRA    1FC4
....................    }  
2050:  MOVLB  4
2052:  INCF   xA4,F
2054:  BRA    2024
.................... } 
2056:  MOVLB  0
2058:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<14;i++) 
*
1EC4:  MOVLB  4
1EC6:  CLRF   xA4
1EC8:  MOVF   xA4,W
1ECA:  SUBLW  0D
1ECC:  BNC   1F86
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1ECE:  MOVLW  A0
1ED0:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1ED2:  MOVFF  4A4,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1ED6:  MOVFF  487,505
1EDA:  MOVFF  488,506
....................       txbuf[i]=(int8)dato; 
*
1F6E:  CLRF   03
1F70:  MOVLB  4
1F72:  MOVF   xA4,W
1F74:  ADDLW  16
1F76:  MOVWF  FE9
1F78:  MOVLW  04
1F7A:  ADDWFC 03,W
1F7C:  MOVWF  FEA
1F7E:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
1F82:  INCF   xA4,F
1F84:  BRA    1EC8
....................    Lee_Vector(); 
1F86:  MOVLB  0
1F88:  BRA    1DFE
.................... } 
1F8A:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2B80:  CLRF   FF8
2B82:  BCF    FD0.7
2B84:  BSF    07.7
2B86:  CLRF   FEA
2B88:  CLRF   FE9
2B8A:  MOVLB  4
2B8C:  CLRF   x86
2B8E:  CLRF   x87
2B90:  CLRF   x88
2B92:  CLRF   x8D
2B94:  MOVLW  01
2B96:  MOVWF  x8E
2B98:  CLRF   x8F
2B9A:  CLRF   x90
2B9C:  CLRF   x91
2B9E:  CLRF   x92
2BA0:  CLRF   x93
2BA2:  CLRF   x94
2BA4:  BCF    x95.0
2BA6:  BCF    x95.1
2BA8:  BCF    x95.2
2BAA:  BCF    x95.3
2BAC:  BSF    x95.4
2BAE:  BCF    x95.5
2BB0:  BCF    x95.6
2BB2:  BCF    x95.7
2BB4:  BCF    x96.0
2BB6:  BCF    x96.1
2BB8:  BCF    x96.2
2BBA:  BCF    x96.3
2BBC:  BCF    x96.4
2BBE:  BCF    x96.5
2BC0:  BCF    x96.6
2BC2:  BCF    x96.7
2BC4:  BCF    x97.0
2BC6:  BCF    x97.1
2BC8:  BCF    x97.2
2BCA:  BCF    x97.3
2BCC:  BCF    x97.4
2BCE:  CLRF   x98
2BD0:  CLRF   x99
2BD2:  CLRF   x9A
2BD4:  CLRF   x9B
2BD6:  CLRF   x9C
2BD8:  CLRF   x9D
2BDA:  CLRF   x9E
2BDC:  CLRF   x9F
2BDE:  CLRF   xA0
2BE0:  CLRF   xA1
2BE2:  CLRF   xA2
2BE4:  MOVWF  xA3
2BE6:  CLRF   xA4
2BE8:  CLRF   xA5
2BEA:  CLRF   xA6
2BEC:  MOVWF  xA7
2BEE:  CLRF   xA8
2BF0:  CLRF   xA9
2BF2:  CLRF   xAA
2BF4:  CLRF   xAB
2BF6:  CLRF   xAD
2BF8:  CLRF   xAC
2BFA:  CLRF   xAF
2BFC:  CLRF   xAE
2BFE:  CLRF   xB1
2C00:  CLRF   xB0
2C02:  CLRF   xB3
2C04:  MOVLW  0F
2C06:  MOVWF  xB2
2C08:  CLRF   xB5
2C0A:  CLRF   xB4
2C0C:  CLRF   xB7
2C0E:  CLRF   xB6
2C10:  CLRF   xB9
2C12:  CLRF   xB8
2C14:  CLRF   xBB
2C16:  CLRF   xBA
2C18:  CLRF   xBD
2C1A:  CLRF   xBC
2C1C:  CLRF   xC1
2C1E:  CLRF   xC0
2C20:  CLRF   xBF
2C22:  CLRF   xBE
2C24:  MOVF   FC1,W
2C26:  ANDLW  C0
2C28:  IORLW  0F
2C2A:  MOVWF  FC1
2C2C:  MOVLW  07
2C2E:  MOVWF  FB4
2C30:  MOVLW  6B
2C32:  MOVWF  x89
2C34:  MOVLW  50
2C36:  MOVWF  x8A
2C38:  MOVLW  61
2C3A:  MOVWF  x8B
2C3C:  CLRF   x8C
2C3E:  CLRF   xC2
2C40:  CLRF   xC3
2C42:  CLRF   xC4
2C44:  CLRF   xC5
2C46:  CLRF   xC6
2C48:  CLRF   xC7
2C4A:  CLRF   xC8
2C4C:  CLRF   xC9
2C4E:  CLRF   xCA
2C50:  CLRF   xCB
2C52:  CLRF   xCC
2C54:  CLRF   xCD
2C56:  CLRF   xCE
2C58:  CLRF   xCF
2C5A:  CLRF   xD0
2C5C:  CLRF   xD1
2C5E:  CLRF   xD2
2C60:  CLRF   xD3
2C62:  CLRF   xD4
2C64:  CLRF   xD5
2C66:  CLRF   xD6
2C68:  CLRF   xD7
2C6A:  CLRF   xD8
2C6C:  CLRF   xD9
2C6E:  MOVLB  5
2C70:  CLRF   x03
2C72:  CLRF   x04
....................    Display_on; 
2C74:  BSF    F8D.0
2C76:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2C78:  MOVLB  4
2C7A:  CLRF   x88
2C7C:  MOVF   x88,W
2C7E:  SUBLW  0F
2C80:  BNC   2CB6
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2C82:  CLRF   03
2C84:  MOVF   x88,W
2C86:  ADDLW  56
2C88:  MOVWF  FE9
2C8A:  MOVLW  04
2C8C:  ADDWFC 03,W
2C8E:  MOVWF  FEA
2C90:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2C92:  CLRF   03
2C94:  MOVF   x88,W
2C96:  ADDLW  66
2C98:  MOVWF  FE9
2C9A:  MOVLW  04
2C9C:  ADDWFC 03,W
2C9E:  MOVWF  FEA
2CA0:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2CA2:  CLRF   03
2CA4:  MOVF   x88,W
2CA6:  ADDLW  76
2CA8:  MOVWF  FE9
2CAA:  MOVLW  04
2CAC:  ADDWFC 03,W
2CAE:  MOVWF  FEA
2CB0:  CLRF   FEF
....................    } 
2CB2:  INCF   x88,F
2CB4:  BRA    2C7C
....................    output_d(0); 
2CB6:  CLRF   F95
2CB8:  CLRF   F8C
....................    delay_ms(1000);    
2CBA:  MOVLW  04
2CBC:  MOVLB  5
2CBE:  MOVWF  x05
2CC0:  MOVLW  FA
2CC2:  MOVWF  x06
2CC4:  MOVLB  0
2CC6:  CALL   0F98
2CCA:  MOVLB  5
2CCC:  DECFSZ x05,F
2CCE:  BRA    2CC0
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2CD0:  MOVLW  85
2CD2:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2CD4:  BSF    F9D.0
....................    enable_interrupts(global); 
2CD6:  MOVLW  C0
2CD8:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2CDA:  MOVFF  FF2,505
2CDE:  BCF    FF2.7
2CE0:  CLRF   FA9
2CE2:  BCF    FA6.6
2CE4:  BCF    FA6.7
2CE6:  BSF    FA6.0
2CE8:  MOVF   FA8,W
2CEA:  BTFSC  x05.7
2CEC:  BSF    FF2.7
2CEE:  MOVLB  4
2CF0:  MOVWF  xC6
2CF2:  MOVFF  FF2,505
2CF6:  BCF    FF2.7
2CF8:  MOVLW  01
2CFA:  MOVWF  FA9
2CFC:  BCF    FA6.6
2CFE:  BCF    FA6.7
2D00:  BSF    FA6.0
2D02:  MOVF   FA8,W
2D04:  MOVLB  5
2D06:  BTFSC  x05.7
2D08:  BSF    FF2.7
2D0A:  MOVLB  4
2D0C:  MOVWF  xC7
2D0E:  MOVFF  FF2,505
2D12:  BCF    FF2.7
2D14:  MOVLW  02
2D16:  MOVWF  FA9
2D18:  BCF    FA6.6
2D1A:  BCF    FA6.7
2D1C:  BSF    FA6.0
2D1E:  MOVF   FA8,W
2D20:  MOVLB  5
2D22:  BTFSC  x05.7
2D24:  BSF    FF2.7
2D26:  MOVLB  4
2D28:  MOVWF  xC8
2D2A:  MOVFF  FF2,505
2D2E:  BCF    FF2.7
2D30:  MOVLW  03
2D32:  MOVWF  FA9
2D34:  BCF    FA6.6
2D36:  BCF    FA6.7
2D38:  BSF    FA6.0
2D3A:  MOVF   FA8,W
2D3C:  MOVLB  5
2D3E:  BTFSC  x05.7
2D40:  BSF    FF2.7
2D42:  MOVLB  4
2D44:  MOVWF  xC9
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2D46:  MOVFF  FF2,505
2D4A:  BCF    FF2.7
2D4C:  MOVLW  04
2D4E:  MOVWF  FA9
2D50:  BCF    FA6.6
2D52:  BCF    FA6.7
2D54:  BSF    FA6.0
2D56:  MOVF   FA8,W
2D58:  MOVLB  5
2D5A:  BTFSC  x05.7
2D5C:  BSF    FF2.7
2D5E:  MOVLB  4
2D60:  MOVWF  xCE
2D62:  MOVFF  FF2,505
2D66:  BCF    FF2.7
2D68:  MOVLW  05
2D6A:  MOVWF  FA9
2D6C:  BCF    FA6.6
2D6E:  BCF    FA6.7
2D70:  BSF    FA6.0
2D72:  MOVF   FA8,W
2D74:  MOVLB  5
2D76:  BTFSC  x05.7
2D78:  BSF    FF2.7
2D7A:  MOVLB  4
2D7C:  MOVWF  xCF
2D7E:  MOVFF  FF2,505
2D82:  BCF    FF2.7
2D84:  MOVLW  06
2D86:  MOVWF  FA9
2D88:  BCF    FA6.6
2D8A:  BCF    FA6.7
2D8C:  BSF    FA6.0
2D8E:  MOVF   FA8,W
2D90:  MOVLB  5
2D92:  BTFSC  x05.7
2D94:  BSF    FF2.7
2D96:  MOVLB  4
2D98:  MOVWF  xD0
2D9A:  MOVFF  FF2,505
2D9E:  BCF    FF2.7
2DA0:  MOVLW  07
2DA2:  MOVWF  FA9
2DA4:  BCF    FA6.6
2DA6:  BCF    FA6.7
2DA8:  BSF    FA6.0
2DAA:  MOVF   FA8,W
2DAC:  MOVLB  5
2DAE:  BTFSC  x05.7
2DB0:  BSF    FF2.7
2DB2:  MOVLB  4
2DB4:  MOVWF  xD1
2DB6:  MOVFF  FF2,505
2DBA:  BCF    FF2.7
2DBC:  MOVLW  08
2DBE:  MOVWF  FA9
2DC0:  BCF    FA6.6
2DC2:  BCF    FA6.7
2DC4:  BSF    FA6.0
2DC6:  MOVF   FA8,W
2DC8:  MOVLB  5
2DCA:  BTFSC  x05.7
2DCC:  BSF    FF2.7
2DCE:  MOVLB  4
2DD0:  MOVWF  xA5
....................    Nivel=read_eeprom(9); 
2DD2:  MOVFF  FF2,505
2DD6:  BCF    FF2.7
2DD8:  MOVLW  09
2DDA:  MOVWF  FA9
2DDC:  BCF    FA6.6
2DDE:  BCF    FA6.7
2DE0:  BSF    FA6.0
2DE2:  MOVF   FA8,W
2DE4:  MOVLB  5
2DE6:  BTFSC  x05.7
2DE8:  BSF    FF2.7
2DEA:  MOVLB  4
2DEC:  CLRF   xB5
2DEE:  MOVWF  xB4
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2DF0:  MOVFF  FF2,505
2DF4:  BCF    FF2.7
2DF6:  MOVLW  0A
2DF8:  MOVWF  FA9
2DFA:  BCF    FA6.6
2DFC:  BCF    FA6.7
2DFE:  BSF    FA6.0
2E00:  MOVF   FA8,W
2E02:  MOVLB  5
2E04:  BTFSC  x05.7
2E06:  BSF    FF2.7
2E08:  MOVLB  4
2E0A:  MOVWF  xD6
2E0C:  MOVFF  FF2,505
2E10:  BCF    FF2.7
2E12:  MOVLW  0B
2E14:  MOVWF  FA9
2E16:  BCF    FA6.6
2E18:  BCF    FA6.7
2E1A:  BSF    FA6.0
2E1C:  MOVF   FA8,W
2E1E:  MOVLB  5
2E20:  BTFSC  x05.7
2E22:  BSF    FF2.7
2E24:  MOVLB  4
2E26:  MOVWF  xD7
2E28:  MOVFF  FF2,505
2E2C:  BCF    FF2.7
2E2E:  MOVLW  0C
2E30:  MOVWF  FA9
2E32:  BCF    FA6.6
2E34:  BCF    FA6.7
2E36:  BSF    FA6.0
2E38:  MOVF   FA8,W
2E3A:  MOVLB  5
2E3C:  BTFSC  x05.7
2E3E:  BSF    FF2.7
2E40:  MOVLB  4
2E42:  MOVWF  xD8
2E44:  MOVFF  FF2,505
2E48:  BCF    FF2.7
2E4A:  MOVLW  0D
2E4C:  MOVWF  FA9
2E4E:  BCF    FA6.6
2E50:  BCF    FA6.7
2E52:  BSF    FA6.0
2E54:  MOVF   FA8,W
2E56:  MOVLB  5
2E58:  BTFSC  x05.7
2E5A:  BSF    FF2.7
2E5C:  MOVLB  4
2E5E:  MOVWF  xD9
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2E60:  MOVLW  01
2E62:  MOVLB  5
2E64:  MOVWF  x05
2E66:  MOVLB  0
2E68:  CALL   1114
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2E6C:  MOVLB  5
2E6E:  CLRF   x06
2E70:  MOVLB  0
2E72:  CALL   1002
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2E76:  MOVLW  04
2E78:  MOVWF  FEA
2E7A:  MOVLW  E5
2E7C:  MOVWF  FE9
2E7E:  MOVFF  FF2,505
2E82:  BCF    FF2.7
2E84:  MOVLW  00
2E86:  CALL   06DA
2E8A:  TBLRD*-
2E8C:  TBLRD*+
2E8E:  MOVF   FF5,W
2E90:  MOVWF  FEE
2E92:  IORLW  00
2E94:  BNZ   2E8C
2E96:  MOVLB  5
2E98:  BTFSC  x05.7
2E9A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2E9C:  MOVLW  04
2E9E:  MOVWF  x06
2EA0:  MOVLW  E5
2EA2:  MOVWF  x05
2EA4:  CLRF   x07
2EA6:  CLRF   x08
2EA8:  CLRF   x09
2EAA:  MOVLW  02
2EAC:  MOVWF  x0A
2EAE:  MOVLB  0
2EB0:  CALL   1630
....................    strcpy(Menus.Letra,"Autoclave Horizontal"); 
2EB4:  MOVLW  04
2EB6:  MOVWF  FEA
2EB8:  MOVLW  E5
2EBA:  MOVWF  FE9
2EBC:  MOVFF  FF2,505
2EC0:  BCF    FF2.7
2EC2:  MOVLW  00
2EC4:  CALL   0700
2EC8:  TBLRD*-
2ECA:  TBLRD*+
2ECC:  MOVF   FF5,W
2ECE:  MOVWF  FEE
2ED0:  IORLW  00
2ED2:  BNZ   2ECA
2ED4:  MOVLB  5
2ED6:  BTFSC  x05.7
2ED8:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
2EDA:  MOVLW  04
2EDC:  MOVWF  x06
2EDE:  MOVLW  E5
2EE0:  MOVWF  x05
2EE2:  CLRF   x07
2EE4:  MOVLW  14
2EE6:  MOVWF  x08
2EE8:  CLRF   x09
2EEA:  MOVLW  01
2EEC:  MOVWF  x0A
2EEE:  MOVLB  0
2EF0:  CALL   1630
....................    strcpy(Menus.Letra," 120 Litros  "); 
2EF4:  MOVLW  04
2EF6:  MOVWF  FEA
2EF8:  MOVLW  E5
2EFA:  MOVWF  FE9
2EFC:  MOVFF  FF2,505
2F00:  BCF    FF2.7
2F02:  MOVLW  00
2F04:  CALL   0730
2F08:  TBLRD*-
2F0A:  TBLRD*+
2F0C:  MOVF   FF5,W
2F0E:  MOVWF  FEE
2F10:  IORLW  00
2F12:  BNZ   2F0A
2F14:  MOVLB  5
2F16:  BTFSC  x05.7
2F18:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
2F1A:  MOVLW  04
2F1C:  MOVWF  x06
2F1E:  MOVLW  E5
2F20:  MOVWF  x05
2F22:  CLRF   x07
2F24:  MOVLW  23
2F26:  MOVWF  x08
2F28:  CLRF   x09
2F2A:  MOVLW  02
2F2C:  MOVWF  x0A
2F2E:  MOVLB  0
2F30:  CALL   1630
....................    delay_ms(1000); 
2F34:  MOVLW  04
2F36:  MOVLB  5
2F38:  MOVWF  x05
2F3A:  MOVLW  FA
2F3C:  MOVWF  x06
2F3E:  MOVLB  0
2F40:  CALL   0F98
2F44:  MOVLB  5
2F46:  DECFSZ x05,F
2F48:  BRA    2F3A
....................    delay_ms(1000); 
2F4A:  MOVLW  04
2F4C:  MOVWF  x05
2F4E:  MOVLW  FA
2F50:  MOVWF  x06
2F52:  MOVLB  0
2F54:  CALL   0F98
2F58:  MOVLB  5
2F5A:  DECFSZ x05,F
2F5C:  BRA    2F4E
....................    delay_ms(1000); 
2F5E:  MOVLW  04
2F60:  MOVWF  x05
2F62:  MOVLW  FA
2F64:  MOVWF  x06
2F66:  MOVLB  0
2F68:  CALL   0F98
2F6C:  MOVLB  5
2F6E:  DECFSZ x05,F
2F70:  BRA    2F62
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2F72:  CLRF   x06
2F74:  MOVLB  0
2F76:  CALL   1002
....................    displayContrasena(Contrasena[0],20,30,1); 
2F7A:  MOVFF  4D2,507
2F7E:  MOVLW  14
2F80:  MOVLB  5
2F82:  MOVWF  x08
2F84:  MOVLW  1E
2F86:  MOVWF  x09
2F88:  MOVLW  01
2F8A:  MOVWF  x0A
2F8C:  MOVLB  0
2F8E:  CALL   1856
....................    displayContrasena(Contrasena[1],40,30,0); 
2F92:  MOVFF  4D3,507
2F96:  MOVLW  28
2F98:  MOVLB  5
2F9A:  MOVWF  x08
2F9C:  MOVLW  1E
2F9E:  MOVWF  x09
2FA0:  CLRF   x0A
2FA2:  MOVLB  0
2FA4:  CALL   1856
....................    displayContrasena(Contrasena[2],60,30,0); 
2FA8:  MOVFF  4D4,507
2FAC:  MOVLW  3C
2FAE:  MOVLB  5
2FB0:  MOVWF  x08
2FB2:  MOVLW  1E
2FB4:  MOVWF  x09
2FB6:  CLRF   x0A
2FB8:  MOVLB  0
2FBA:  CALL   1856
....................    displayContrasena(Contrasena[3],80,30,0); 
2FBE:  MOVFF  4D5,507
2FC2:  MOVLW  50
2FC4:  MOVLB  5
2FC6:  MOVWF  x08
2FC8:  MOVLW  1E
2FCA:  MOVWF  x09
2FCC:  CLRF   x0A
2FCE:  MOVLB  0
2FD0:  CALL   1856
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
2FD4:  CALL   1EC4
....................        
....................       Envio_Esclavos(); 
2FD8:  CALL   201E
....................       glcd_update(); 
2FDC:  CALL   105C
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
2FE0:  BSF    F92.0
2FE2:  BTFSC  F80.0
2FE4:  BRA    2FF8
2FE6:  BSF    F92.1
2FE8:  BTFSC  F80.1
2FEA:  BRA    2FF8
2FEC:  BSF    F92.2
2FEE:  BTFSC  F80.2
2FF0:  BRA    2FF8
2FF2:  BSF    F92.3
2FF4:  BTFSS  F80.3
2FF6:  BRA    3000
....................       { 
....................          tinicio=0; 
2FF8:  MOVLB  4
2FFA:  CLRF   xB9
2FFC:  CLRF   xB8
2FFE:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
3000:  MOVLB  4
3002:  MOVF   xB9,W
3004:  SUBLW  37
3006:  BC    3024
3008:  XORLW  FF
300A:  BNZ   3012
300C:  MOVF   xB8,W
300E:  SUBLW  3F
3010:  BC    3024
....................          glcd_fillscreen(OFF); 
3012:  MOVLB  5
3014:  CLRF   x06
3016:  MOVLB  0
3018:  CALL   1002
....................          Display_off; 
301C:  BCF    F8D.0
301E:  BCF    F96.0
....................       } 
3020:  BRA    3000
3022:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
3024:  MOVF   xA2,F
3026:  BTFSS  FD8.2
3028:  BRA    35BE
....................        
....................       strcpy(Menus.Letra,"Clave"); 
302A:  MOVLW  04
302C:  MOVWF  FEA
302E:  MOVLW  E5
3030:  MOVWF  FE9
3032:  MOVFF  FF2,505
3036:  BCF    FF2.7
3038:  MOVLW  00
303A:  MOVLB  0
303C:  CALL   0758
3040:  TBLRD*-
3042:  TBLRD*+
3044:  MOVF   FF5,W
3046:  MOVWF  FEE
3048:  IORLW  00
304A:  BNZ   3042
304C:  MOVLB  5
304E:  BTFSC  x05.7
3050:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
3052:  MOVLW  04
3054:  MOVWF  x06
3056:  MOVLW  E5
3058:  MOVWF  x05
305A:  MOVLW  1E
305C:  MOVWF  x07
305E:  CLRF   x08
3060:  MOVLW  01
3062:  MOVWF  x09
3064:  MOVLW  02
3066:  MOVWF  x0A
3068:  MOVLB  0
306A:  CALL   1630
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
306E:  BSF    F92.0
3070:  BTFSS  F80.0
3072:  BRA    314A
....................       { 
....................          if(Flanco == 0) 
3074:  MOVLB  4
3076:  BTFSC  x95.0
3078:  BRA    3148
....................          { 
....................             Flanco = 1;delay_ms(30); 
307A:  BSF    x95.0
307C:  MOVLW  1E
307E:  MOVLB  5
3080:  MOVWF  x06
3082:  MOVLB  0
3084:  CALL   0F98
....................             for(i=1;i<=4;i++) 
3088:  MOVLW  01
308A:  MOVLB  4
308C:  MOVWF  xA4
308E:  MOVF   xA4,W
3090:  SUBLW  04
3092:  BNC   3148
....................             { 
....................                if(unidad==i) 
3094:  MOVF   xA4,W
3096:  SUBWF  xA3,W
3098:  BNZ   3110
....................                { 
....................                   Contrasena[i-1]++; 
309A:  MOVLW  01
309C:  SUBWF  xA4,W
309E:  CLRF   03
30A0:  ADDLW  D2
30A2:  MOVWF  FE9
30A4:  MOVLW  04
30A6:  ADDWFC 03,W
30A8:  MOVWF  FEA
30AA:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
30AC:  MOVLW  01
30AE:  SUBWF  xA4,W
30B0:  CLRF   03
30B2:  ADDLW  D2
30B4:  MOVWF  FE9
30B6:  MOVLW  04
30B8:  ADDWFC 03,W
30BA:  MOVWF  FEA
30BC:  BTFSC  FEF.7
30BE:  BRA    30D8
30C0:  MOVF   FEF,W
30C2:  SUBLW  09
30C4:  BC    30D8
....................                   { 
....................                      Contrasena[i-1]=0; 
30C6:  MOVLW  01
30C8:  SUBWF  xA4,W
30CA:  CLRF   03
30CC:  ADDLW  D2
30CE:  MOVWF  FE9
30D0:  MOVLW  04
30D2:  ADDWFC 03,W
30D4:  MOVWF  FEA
30D6:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
30D8:  MOVLW  01
30DA:  SUBWF  xA4,W
30DC:  CLRF   03
30DE:  ADDLW  D2
30E0:  MOVWF  FE9
30E2:  MOVLW  04
30E4:  ADDWFC 03,W
30E6:  MOVWF  FEA
30E8:  MOVFF  FEF,505
30EC:  MOVF   xA4,W
30EE:  MULLW  14
30F0:  MOVFF  FF3,506
30F4:  MOVLB  5
30F6:  MOVFF  505,507
30FA:  MOVFF  506,508
30FE:  MOVLW  1E
3100:  MOVWF  x09
3102:  MOVLW  01
3104:  MOVWF  x0A
3106:  MOVLB  0
3108:  CALL   1856
....................                } 
....................                else 
310C:  BRA    3142
310E:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
3110:  MOVLW  01
3112:  SUBWF  xA4,W
3114:  CLRF   03
3116:  ADDLW  D2
3118:  MOVWF  FE9
311A:  MOVLW  04
311C:  ADDWFC 03,W
311E:  MOVWF  FEA
3120:  MOVFF  FEF,505
3124:  MOVF   xA4,W
3126:  MULLW  14
3128:  MOVFF  FF3,506
312C:  MOVLB  5
312E:  MOVFF  505,507
3132:  MOVFF  506,508
3136:  MOVLW  1E
3138:  MOVWF  x09
313A:  CLRF   x0A
313C:  MOVLB  0
313E:  CALL   1856
....................                } 
....................             } 
3142:  MOVLB  4
3144:  INCF   xA4,F
3146:  BRA    308E
....................          } 
....................       } 
....................          else 
3148:  BRA    314E
....................             {Flanco = 0;} 
314A:  MOVLB  4
314C:  BCF    x95.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
314E:  BSF    F92.1
3150:  BTFSS  F80.1
3152:  BRA    3226
....................       { 
....................          if(Flanco2 == 0) 
3154:  BTFSC  x95.2
3156:  BRA    3224
....................             {Flanco2 = 1;delay_ms(30); 
3158:  BSF    x95.2
315A:  MOVLW  1E
315C:  MOVLB  5
315E:  MOVWF  x06
3160:  MOVLB  0
3162:  CALL   0F98
....................                for(i=1;i<=4;i++) 
3166:  MOVLW  01
3168:  MOVLB  4
316A:  MOVWF  xA4
316C:  MOVF   xA4,W
316E:  SUBLW  04
3170:  BNC   3224
....................                { 
....................                   if(unidad==i) 
3172:  MOVF   xA4,W
3174:  SUBWF  xA3,W
3176:  BNZ   31EC
....................                   {Contrasena[i-1]--;  
3178:  MOVLW  01
317A:  SUBWF  xA4,W
317C:  CLRF   03
317E:  ADDLW  D2
3180:  MOVWF  FE9
3182:  MOVLW  04
3184:  ADDWFC 03,W
3186:  MOVWF  FEA
3188:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
318A:  MOVLW  01
318C:  SUBWF  xA4,W
318E:  CLRF   03
3190:  ADDLW  D2
3192:  MOVWF  FE9
3194:  MOVLW  04
3196:  ADDWFC 03,W
3198:  MOVWF  FEA
319A:  BTFSC  FEF.7
319C:  BRA    31A0
319E:  BRA    31B4
....................                         {Contrasena[i-1]=9;} 
31A0:  MOVLW  01
31A2:  SUBWF  xA4,W
31A4:  CLRF   03
31A6:  ADDLW  D2
31A8:  MOVWF  FE9
31AA:  MOVLW  04
31AC:  ADDWFC 03,W
31AE:  MOVWF  FEA
31B0:  MOVLW  09
31B2:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
31B4:  MOVLW  01
31B6:  SUBWF  xA4,W
31B8:  CLRF   03
31BA:  ADDLW  D2
31BC:  MOVWF  FE9
31BE:  MOVLW  04
31C0:  ADDWFC 03,W
31C2:  MOVWF  FEA
31C4:  MOVFF  FEF,505
31C8:  MOVF   xA4,W
31CA:  MULLW  14
31CC:  MOVFF  FF3,506
31D0:  MOVLB  5
31D2:  MOVFF  505,507
31D6:  MOVFF  506,508
31DA:  MOVLW  1E
31DC:  MOVWF  x09
31DE:  MOVLW  01
31E0:  MOVWF  x0A
31E2:  MOVLB  0
31E4:  CALL   1856
....................                   else 
31E8:  BRA    321E
31EA:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
31EC:  MOVLW  01
31EE:  SUBWF  xA4,W
31F0:  CLRF   03
31F2:  ADDLW  D2
31F4:  MOVWF  FE9
31F6:  MOVLW  04
31F8:  ADDWFC 03,W
31FA:  MOVWF  FEA
31FC:  MOVFF  FEF,505
3200:  MOVF   xA4,W
3202:  MULLW  14
3204:  MOVFF  FF3,506
3208:  MOVLB  5
320A:  MOVFF  505,507
320E:  MOVFF  506,508
3212:  MOVLW  1E
3214:  MOVWF  x09
3216:  CLRF   x0A
3218:  MOVLB  0
321A:  CALL   1856
....................                }       
321E:  MOVLB  4
3220:  INCF   xA4,F
3222:  BRA    316C
....................             }      
....................       } 
....................          else 
3224:  BRA    3228
....................             {Flanco2 = 0;}   
3226:  BCF    x95.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3228:  BSF    F92.2
322A:  BTFSS  F80.2
322C:  BRA    32C6
....................       { 
....................          if(Flanco1 == 0) 
322E:  BTFSC  x95.1
3230:  BRA    32C4
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
3232:  BSF    x95.1
3234:  MOVLW  1E
3236:  MOVLB  5
3238:  MOVWF  x06
323A:  MOVLB  0
323C:  CALL   0F98
3240:  MOVLB  4
3242:  INCF   xA3,F
....................                for(i=1;i<=4;i++) 
3244:  MOVLW  01
3246:  MOVWF  xA4
3248:  MOVF   xA4,W
324A:  SUBLW  04
324C:  BNC   32C4
....................                { 
....................                   if(unidad==i) 
324E:  MOVF   xA4,W
3250:  SUBWF  xA3,W
3252:  BNZ   328C
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
3254:  MOVLW  01
3256:  SUBWF  xA4,W
3258:  CLRF   03
325A:  ADDLW  D2
325C:  MOVWF  FE9
325E:  MOVLW  04
3260:  ADDWFC 03,W
3262:  MOVWF  FEA
3264:  MOVFF  FEF,505
3268:  MOVF   xA4,W
326A:  MULLW  14
326C:  MOVFF  FF3,506
3270:  MOVLB  5
3272:  MOVFF  505,507
3276:  MOVFF  506,508
327A:  MOVLW  1E
327C:  MOVWF  x09
327E:  MOVLW  01
3280:  MOVWF  x0A
3282:  MOVLB  0
3284:  CALL   1856
....................                   else 
3288:  BRA    32BE
328A:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
328C:  MOVLW  01
328E:  SUBWF  xA4,W
3290:  CLRF   03
3292:  ADDLW  D2
3294:  MOVWF  FE9
3296:  MOVLW  04
3298:  ADDWFC 03,W
329A:  MOVWF  FEA
329C:  MOVFF  FEF,505
32A0:  MOVF   xA4,W
32A2:  MULLW  14
32A4:  MOVFF  FF3,506
32A8:  MOVLB  5
32AA:  MOVFF  505,507
32AE:  MOVFF  506,508
32B2:  MOVLW  1E
32B4:  MOVWF  x09
32B6:  CLRF   x0A
32B8:  MOVLB  0
32BA:  CALL   1856
....................                } 
32BE:  MOVLB  4
32C0:  INCF   xA4,F
32C2:  BRA    3248
....................             } 
....................       } 
....................          else 
32C4:  BRA    32C8
....................             {Flanco1 = 0;}   
32C6:  BCF    x95.1
....................      
....................       if(unidad>4) 
32C8:  MOVF   xA3,W
32CA:  SUBLW  04
32CC:  BTFSC  FD8.0
32CE:  BRA    35BE
....................       {glcd_fillScreen(OFF);unidad=4; 
32D0:  MOVLB  5
32D2:  CLRF   x06
32D4:  MOVLB  0
32D6:  CALL   1002
32DA:  MOVLW  04
32DC:  MOVLB  4
32DE:  MOVWF  xA3
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
32E0:  MOVF   xD2,W
32E2:  SUBLW  03
32E4:  BNZ   33CC
32E6:  MOVF   xD3,W
32E8:  SUBLW  08
32EA:  BNZ   33CC
32EC:  MOVF   xD4,W
32EE:  SUBLW  09
32F0:  BNZ   33CC
32F2:  MOVF   xD5,W
32F4:  SUBLW  02
32F6:  BNZ   33CC
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
32F8:  MOVLW  0A
32FA:  MOVWF  FA9
32FC:  CLRF   FA8
32FE:  BCF    FA6.6
3300:  BCF    FA6.7
3302:  BSF    FA6.2
3304:  MOVF   FF2,W
3306:  MOVWF  00
3308:  BCF    FF2.7
330A:  MOVLB  F
330C:  MOVLW  55
330E:  MOVWF  FA7
3310:  MOVLW  AA
3312:  MOVWF  FA7
3314:  BSF    FA6.1
3316:  BTFSC  FA6.1
3318:  BRA    3316
331A:  BCF    FA6.2
331C:  MOVF   00,W
331E:  IORWF  FF2,F
3320:  MOVLW  14
3322:  MOVLB  5
3324:  MOVWF  x06
3326:  MOVLB  0
3328:  CALL   0F98
332C:  MOVLW  0B
332E:  MOVWF  FA9
3330:  CLRF   FA8
3332:  BCF    FA6.6
3334:  BCF    FA6.7
3336:  BSF    FA6.2
3338:  MOVF   FF2,W
333A:  MOVWF  00
333C:  BCF    FF2.7
333E:  MOVLB  F
3340:  MOVLW  55
3342:  MOVWF  FA7
3344:  MOVLW  AA
3346:  MOVWF  FA7
3348:  BSF    FA6.1
334A:  BTFSC  FA6.1
334C:  BRA    334A
334E:  BCF    FA6.2
3350:  MOVF   00,W
3352:  IORWF  FF2,F
3354:  MOVLW  14
3356:  MOVLB  5
3358:  MOVWF  x06
335A:  MOVLB  0
335C:  CALL   0F98
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
3360:  MOVLW  0C
3362:  MOVWF  FA9
3364:  CLRF   FA8
3366:  BCF    FA6.6
3368:  BCF    FA6.7
336A:  BSF    FA6.2
336C:  MOVF   FF2,W
336E:  MOVWF  00
3370:  BCF    FF2.7
3372:  MOVLB  F
3374:  MOVLW  55
3376:  MOVWF  FA7
3378:  MOVLW  AA
337A:  MOVWF  FA7
337C:  BSF    FA6.1
337E:  BTFSC  FA6.1
3380:  BRA    337E
3382:  BCF    FA6.2
3384:  MOVF   00,W
3386:  IORWF  FF2,F
3388:  MOVLW  14
338A:  MOVLB  5
338C:  MOVWF  x06
338E:  MOVLB  0
3390:  CALL   0F98
3394:  MOVLW  0D
3396:  MOVWF  FA9
3398:  CLRF   FA8
339A:  BCF    FA6.6
339C:  BCF    FA6.7
339E:  BSF    FA6.2
33A0:  MOVF   FF2,W
33A2:  MOVWF  00
33A4:  BCF    FF2.7
33A6:  MOVLB  F
33A8:  MOVLW  55
33AA:  MOVWF  FA7
33AC:  MOVLW  AA
33AE:  MOVWF  FA7
33B0:  BSF    FA6.1
33B2:  BTFSC  FA6.1
33B4:  BRA    33B2
33B6:  BCF    FA6.2
33B8:  MOVF   00,W
33BA:  IORWF  FF2,F
33BC:  MOVLW  14
33BE:  MOVLB  5
33C0:  MOVWF  x06
33C2:  MOVLB  0
33C4:  CALL   0F98
....................              reset_cpu();}         
33C8:  RESET
33CA:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
33CC:  MOVF   xD6,W
33CE:  SUBWF  xD2,W
33D0:  BNZ   34A2
33D2:  MOVF   xD7,W
33D4:  SUBWF  xD3,W
33D6:  BNZ   34A2
33D8:  MOVF   xD8,W
33DA:  SUBWF  xD4,W
33DC:  BNZ   34A2
33DE:  MOVF   xD9,W
33E0:  SUBWF  xD5,W
33E2:  BNZ   34A2
....................          { 
....................             glcd_fillScreen(OFF); 
33E4:  MOVLB  5
33E6:  CLRF   x06
33E8:  MOVLB  0
33EA:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
33EE:  MOVLW  04
33F0:  MOVWF  FEA
33F2:  MOVLW  E5
33F4:  MOVWF  FE9
33F6:  MOVFF  FF2,505
33FA:  BCF    FF2.7
33FC:  MOVLW  00
33FE:  CALL   0758
3402:  TBLRD*-
3404:  TBLRD*+
3406:  MOVF   FF5,W
3408:  MOVWF  FEE
340A:  IORLW  00
340C:  BNZ   3404
340E:  MOVLB  5
3410:  BTFSC  x05.7
3412:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3414:  MOVLW  04
3416:  MOVWF  x06
3418:  MOVLW  E5
341A:  MOVWF  x05
341C:  MOVLW  1E
341E:  MOVWF  x07
3420:  CLRF   x08
3422:  CLRF   x09
3424:  MOVLW  02
3426:  MOVWF  x0A
3428:  MOVLB  0
342A:  CALL   1630
....................             strcpy(Menus.Letra,"Correcta"); 
342E:  MOVLW  04
3430:  MOVWF  FEA
3432:  MOVLW  E5
3434:  MOVWF  FE9
3436:  MOVFF  FF2,505
343A:  BCF    FF2.7
343C:  MOVLW  00
343E:  CALL   0778
3442:  TBLRD*-
3444:  TBLRD*+
3446:  MOVF   FF5,W
3448:  MOVWF  FEE
344A:  IORLW  00
344C:  BNZ   3444
344E:  MOVLB  5
3450:  BTFSC  x05.7
3452:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
3454:  MOVLW  04
3456:  MOVWF  x06
3458:  MOVLW  E5
345A:  MOVWF  x05
345C:  MOVLW  0F
345E:  MOVWF  x07
3460:  MOVLW  1E
3462:  MOVWF  x08
3464:  CLRF   x09
3466:  MOVLW  02
3468:  MOVWF  x0A
346A:  MOVLB  0
346C:  CALL   1630
....................             Menu=1;glcd_update();delay_ms(1000); 
3470:  MOVLW  01
3472:  MOVLB  4
3474:  MOVWF  xA2
3476:  MOVLB  0
3478:  CALL   105C
347C:  MOVLW  04
347E:  MOVLB  5
3480:  MOVWF  x05
3482:  MOVLW  FA
3484:  MOVWF  x06
3486:  MOVLB  0
3488:  CALL   0F98
348C:  MOVLB  5
348E:  DECFSZ x05,F
3490:  BRA    3482
....................             glcd_fillScreen(OFF);unidad=1; 
3492:  CLRF   x06
3494:  MOVLB  0
3496:  CALL   1002
349A:  MOVLW  01
349C:  MOVLB  4
349E:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
34A0:  BRA    35BE
....................          { 
....................             glcd_fillScreen(OFF); 
34A2:  MOVLB  5
34A4:  CLRF   x06
34A6:  MOVLB  0
34A8:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
34AC:  MOVLW  04
34AE:  MOVWF  FEA
34B0:  MOVLW  E5
34B2:  MOVWF  FE9
34B4:  MOVFF  FF2,505
34B8:  BCF    FF2.7
34BA:  MOVLW  00
34BC:  CALL   0758
34C0:  TBLRD*-
34C2:  TBLRD*+
34C4:  MOVF   FF5,W
34C6:  MOVWF  FEE
34C8:  IORLW  00
34CA:  BNZ   34C2
34CC:  MOVLB  5
34CE:  BTFSC  x05.7
34D0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
34D2:  MOVLW  04
34D4:  MOVWF  x06
34D6:  MOVLW  E5
34D8:  MOVWF  x05
34DA:  MOVLW  1E
34DC:  MOVWF  x07
34DE:  CLRF   x08
34E0:  CLRF   x09
34E2:  MOVLW  02
34E4:  MOVWF  x0A
34E6:  MOVLB  0
34E8:  CALL   1630
....................             strcpy(Menus.Letra,"Incorrecta"); 
34EC:  MOVLW  04
34EE:  MOVWF  FEA
34F0:  MOVLW  E5
34F2:  MOVWF  FE9
34F4:  MOVFF  FF2,505
34F8:  BCF    FF2.7
34FA:  MOVLW  00
34FC:  CALL   079C
3500:  TBLRD*-
3502:  TBLRD*+
3504:  MOVF   FF5,W
3506:  MOVWF  FEE
3508:  IORLW  00
350A:  BNZ   3502
350C:  MOVLB  5
350E:  BTFSC  x05.7
3510:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
3512:  MOVLW  04
3514:  MOVWF  x06
3516:  MOVLW  E5
3518:  MOVWF  x05
351A:  CLRF   x07
351C:  MOVLW  1E
351E:  MOVWF  x08
3520:  CLRF   x09
3522:  MOVLW  02
3524:  MOVWF  x0A
3526:  MOVLB  0
3528:  CALL   1630
....................             Menu=0;glcd_update();delay_ms(1000); 
352C:  MOVLB  4
352E:  CLRF   xA2
3530:  MOVLB  0
3532:  CALL   105C
3536:  MOVLW  04
3538:  MOVLB  5
353A:  MOVWF  x05
353C:  MOVLW  FA
353E:  MOVWF  x06
3540:  MOVLB  0
3542:  CALL   0F98
3546:  MOVLB  5
3548:  DECFSZ x05,F
354A:  BRA    353C
....................             glcd_fillScreen(OFF);unidad=1; 
354C:  CLRF   x06
354E:  MOVLB  0
3550:  CALL   1002
3554:  MOVLW  01
3556:  MOVLB  4
3558:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
355A:  CLRF   xD2
355C:  CLRF   xD3
355E:  CLRF   xD4
3560:  CLRF   xD5
....................             displayContrasena(Contrasena[0],20,30,1); 
3562:  MOVFF  4D2,507
3566:  MOVLW  14
3568:  MOVLB  5
356A:  MOVWF  x08
356C:  MOVLW  1E
356E:  MOVWF  x09
3570:  MOVLW  01
3572:  MOVWF  x0A
3574:  MOVLB  0
3576:  CALL   1856
....................             displayContrasena(Contrasena[1],40,30,0); 
357A:  MOVFF  4D3,507
357E:  MOVLW  28
3580:  MOVLB  5
3582:  MOVWF  x08
3584:  MOVLW  1E
3586:  MOVWF  x09
3588:  CLRF   x0A
358A:  MOVLB  0
358C:  CALL   1856
....................             displayContrasena(Contrasena[2],60,30,0); 
3590:  MOVFF  4D4,507
3594:  MOVLW  3C
3596:  MOVLB  5
3598:  MOVWF  x08
359A:  MOVLW  1E
359C:  MOVWF  x09
359E:  CLRF   x0A
35A0:  MOVLB  0
35A2:  CALL   1856
....................             displayContrasena(Contrasena[3],80,30,0); 
35A6:  MOVFF  4D5,507
35AA:  MOVLW  50
35AC:  MOVLB  5
35AE:  MOVWF  x08
35B0:  MOVLW  1E
35B2:  MOVWF  x09
35B4:  CLRF   x0A
35B6:  MOVLB  0
35B8:  CALL   1856
35BC:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
35BE:  DECFSZ xA2,W
35C0:  BRA    39F6
....................        
....................       if(visual==1) 
35C2:  BTFSS  x95.4
35C4:  BRA    397C
....................       { 
....................          if(Opcion>6) 
35C6:  MOVF   xA7,W
35C8:  SUBLW  06
35CA:  BC    35D0
....................          {Opcion=1;} 
35CC:  MOVLW  01
35CE:  MOVWF  xA7
....................          if(Opcion<1) 
35D0:  MOVF   xA7,F
35D2:  BNZ   35D8
....................          {Opcion=6;} 
35D4:  MOVLW  06
35D6:  MOVWF  xA7
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
35D8:  MOVLW  04
35DA:  MOVWF  FEA
35DC:  MOVLW  E5
35DE:  MOVWF  FE9
35E0:  MOVFF  FF2,505
35E4:  BCF    FF2.7
35E6:  MOVLW  00
35E8:  MOVLB  0
35EA:  CALL   07C2
35EE:  TBLRD*-
35F0:  TBLRD*+
35F2:  MOVF   FF5,W
35F4:  MOVWF  FEE
35F6:  IORLW  00
35F8:  BNZ   35F0
35FA:  MOVLB  5
35FC:  BTFSC  x05.7
35FE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
3600:  MOVLW  04
3602:  MOVWF  x06
3604:  MOVLW  E5
3606:  MOVWF  x05
3608:  MOVLW  1E
360A:  MOVWF  x07
360C:  CLRF   x08
360E:  MOVLW  01
3610:  MOVWF  x09
3612:  MOVWF  x0A
3614:  MOVLB  0
3616:  CALL   1630
....................        
....................          if(Opcion==1)    
361A:  MOVLB  4
361C:  DECFSZ xA7,W
361E:  BRA    3666
....................             {strcpy(Menus.Letra,"Caucho"); 
3620:  MOVLW  04
3622:  MOVWF  FEA
3624:  MOVLW  E5
3626:  MOVWF  FE9
3628:  MOVFF  FF2,505
362C:  BCF    FF2.7
362E:  MOVLW  00
3630:  MOVLB  0
3632:  CALL   07EC
3636:  TBLRD*-
3638:  TBLRD*+
363A:  MOVF   FF5,W
363C:  MOVWF  FEE
363E:  IORLW  00
3640:  BNZ   3638
3642:  MOVLB  5
3644:  BTFSC  x05.7
3646:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
3648:  MOVLW  04
364A:  MOVWF  x06
364C:  MOVLW  E5
364E:  MOVWF  x05
3650:  CLRF   x07
3652:  MOVLW  0A
3654:  MOVWF  x08
3656:  MOVLW  01
3658:  MOVWF  x09
365A:  MOVWF  x0A
365C:  MOVLB  0
365E:  CALL   1630
....................          else 
3662:  BRA    36A8
3664:  MOVLB  4
....................             {strcpy(Menus.Letra,"Caucho"); 
3666:  MOVLW  04
3668:  MOVWF  FEA
366A:  MOVLW  E5
366C:  MOVWF  FE9
366E:  MOVFF  FF2,505
3672:  BCF    FF2.7
3674:  MOVLW  00
3676:  MOVLB  0
3678:  CALL   07EC
367C:  TBLRD*-
367E:  TBLRD*+
3680:  MOVF   FF5,W
3682:  MOVWF  FEE
3684:  IORLW  00
3686:  BNZ   367E
3688:  MOVLB  5
368A:  BTFSC  x05.7
368C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
368E:  MOVLW  04
3690:  MOVWF  x06
3692:  MOVLW  E5
3694:  MOVWF  x05
3696:  CLRF   x07
3698:  MOVLW  0A
369A:  MOVWF  x08
369C:  CLRF   x09
369E:  MOVLW  01
36A0:  MOVWF  x0A
36A2:  MOVLB  0
36A4:  CALL   1630
....................           
....................          if(Opcion==2)    
36A8:  MOVLB  4
36AA:  MOVF   xA7,W
36AC:  SUBLW  02
36AE:  BNZ   36F6
....................             {strcpy(Menus.Letra,"Liquidos"); 
36B0:  MOVLW  04
36B2:  MOVWF  FEA
36B4:  MOVLW  E5
36B6:  MOVWF  FE9
36B8:  MOVFF  FF2,505
36BC:  BCF    FF2.7
36BE:  MOVLW  00
36C0:  MOVLB  0
36C2:  CALL   080E
36C6:  TBLRD*-
36C8:  TBLRD*+
36CA:  MOVF   FF5,W
36CC:  MOVWF  FEE
36CE:  IORLW  00
36D0:  BNZ   36C8
36D2:  MOVLB  5
36D4:  BTFSC  x05.7
36D6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
36D8:  MOVLW  04
36DA:  MOVWF  x06
36DC:  MOVLW  E5
36DE:  MOVWF  x05
36E0:  CLRF   x07
36E2:  MOVLW  13
36E4:  MOVWF  x08
36E6:  MOVLW  01
36E8:  MOVWF  x09
36EA:  MOVWF  x0A
36EC:  MOVLB  0
36EE:  CALL   1630
....................          else 
36F2:  BRA    3738
36F4:  MOVLB  4
....................             {strcpy(Menus.Letra,"Liquidos"); 
36F6:  MOVLW  04
36F8:  MOVWF  FEA
36FA:  MOVLW  E5
36FC:  MOVWF  FE9
36FE:  MOVFF  FF2,505
3702:  BCF    FF2.7
3704:  MOVLW  00
3706:  MOVLB  0
3708:  CALL   080E
370C:  TBLRD*-
370E:  TBLRD*+
3710:  MOVF   FF5,W
3712:  MOVWF  FEE
3714:  IORLW  00
3716:  BNZ   370E
3718:  MOVLB  5
371A:  BTFSC  x05.7
371C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
371E:  MOVLW  04
3720:  MOVWF  x06
3722:  MOVLW  E5
3724:  MOVWF  x05
3726:  CLRF   x07
3728:  MOVLW  13
372A:  MOVWF  x08
372C:  CLRF   x09
372E:  MOVLW  01
3730:  MOVWF  x0A
3732:  MOVLB  0
3734:  CALL   1630
....................              
....................           if(Opcion==3)    
3738:  MOVLB  4
373A:  MOVF   xA7,W
373C:  SUBLW  03
373E:  BNZ   3786
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
3740:  MOVLW  04
3742:  MOVWF  FEA
3744:  MOVLW  E5
3746:  MOVWF  FE9
3748:  MOVFF  FF2,505
374C:  BCF    FF2.7
374E:  MOVLW  00
3750:  MOVLB  0
3752:  CALL   0832
3756:  TBLRD*-
3758:  TBLRD*+
375A:  MOVF   FF5,W
375C:  MOVWF  FEE
375E:  IORLW  00
3760:  BNZ   3758
3762:  MOVLB  5
3764:  BTFSC  x05.7
3766:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
3768:  MOVLW  04
376A:  MOVWF  x06
376C:  MOVLW  E5
376E:  MOVWF  x05
3770:  CLRF   x07
3772:  MOVLW  1C
3774:  MOVWF  x08
3776:  MOVLW  01
3778:  MOVWF  x09
377A:  MOVWF  x0A
377C:  MOVLB  0
377E:  CALL   1630
....................          else 
3782:  BRA    37C8
3784:  MOVLB  4
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
3786:  MOVLW  04
3788:  MOVWF  FEA
378A:  MOVLW  E5
378C:  MOVWF  FE9
378E:  MOVFF  FF2,505
3792:  BCF    FF2.7
3794:  MOVLW  00
3796:  MOVLB  0
3798:  CALL   0832
379C:  TBLRD*-
379E:  TBLRD*+
37A0:  MOVF   FF5,W
37A2:  MOVWF  FEE
37A4:  IORLW  00
37A6:  BNZ   379E
37A8:  MOVLB  5
37AA:  BTFSC  x05.7
37AC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
37AE:  MOVLW  04
37B0:  MOVWF  x06
37B2:  MOVLW  E5
37B4:  MOVWF  x05
37B6:  CLRF   x07
37B8:  MOVLW  1C
37BA:  MOVWF  x08
37BC:  CLRF   x09
37BE:  MOVLW  01
37C0:  MOVWF  x0A
37C2:  MOVLB  0
37C4:  CALL   1630
....................              
....................          if(Opcion==4)    
37C8:  MOVLB  4
37CA:  MOVF   xA7,W
37CC:  SUBLW  04
37CE:  BNZ   3816
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
37D0:  MOVLW  04
37D2:  MOVWF  FEA
37D4:  MOVLW  E5
37D6:  MOVWF  FE9
37D8:  MOVFF  FF2,505
37DC:  BCF    FF2.7
37DE:  MOVLW  00
37E0:  MOVLB  0
37E2:  CALL   0860
37E6:  TBLRD*-
37E8:  TBLRD*+
37EA:  MOVF   FF5,W
37EC:  MOVWF  FEE
37EE:  IORLW  00
37F0:  BNZ   37E8
37F2:  MOVLB  5
37F4:  BTFSC  x05.7
37F6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
37F8:  MOVLW  04
37FA:  MOVWF  x06
37FC:  MOVLW  E5
37FE:  MOVWF  x05
3800:  CLRF   x07
3802:  MOVLW  25
3804:  MOVWF  x08
3806:  MOVLW  01
3808:  MOVWF  x09
380A:  MOVWF  x0A
380C:  MOVLB  0
380E:  CALL   1630
....................          else 
3812:  BRA    3858
3814:  MOVLB  4
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
3816:  MOVLW  04
3818:  MOVWF  FEA
381A:  MOVLW  E5
381C:  MOVWF  FE9
381E:  MOVFF  FF2,505
3822:  BCF    FF2.7
3824:  MOVLW  00
3826:  MOVLB  0
3828:  CALL   0860
382C:  TBLRD*-
382E:  TBLRD*+
3830:  MOVF   FF5,W
3832:  MOVWF  FEE
3834:  IORLW  00
3836:  BNZ   382E
3838:  MOVLB  5
383A:  BTFSC  x05.7
383C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
383E:  MOVLW  04
3840:  MOVWF  x06
3842:  MOVLW  E5
3844:  MOVWF  x05
3846:  CLRF   x07
3848:  MOVLW  25
384A:  MOVWF  x08
384C:  CLRF   x09
384E:  MOVLW  01
3850:  MOVWF  x0A
3852:  MOVLB  0
3854:  CALL   1630
....................              
....................          if(Opcion==5)    
3858:  MOVLB  4
385A:  MOVF   xA7,W
385C:  SUBLW  05
385E:  BNZ   38A6
....................             {strcpy(Menus.Letra,"Personalizado"); 
3860:  MOVLW  04
3862:  MOVWF  FEA
3864:  MOVLW  E5
3866:  MOVWF  FE9
3868:  MOVFF  FF2,505
386C:  BCF    FF2.7
386E:  MOVLW  00
3870:  MOVLB  0
3872:  CALL   0890
3876:  TBLRD*-
3878:  TBLRD*+
387A:  MOVF   FF5,W
387C:  MOVWF  FEE
387E:  IORLW  00
3880:  BNZ   3878
3882:  MOVLB  5
3884:  BTFSC  x05.7
3886:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
3888:  MOVLW  04
388A:  MOVWF  x06
388C:  MOVLW  E5
388E:  MOVWF  x05
3890:  CLRF   x07
3892:  MOVLW  2E
3894:  MOVWF  x08
3896:  MOVLW  01
3898:  MOVWF  x09
389A:  MOVWF  x0A
389C:  MOVLB  0
389E:  CALL   1630
....................          else 
38A2:  BRA    38E8
38A4:  MOVLB  4
....................             {strcpy(Menus.Letra,"Personalizado"); 
38A6:  MOVLW  04
38A8:  MOVWF  FEA
38AA:  MOVLW  E5
38AC:  MOVWF  FE9
38AE:  MOVFF  FF2,505
38B2:  BCF    FF2.7
38B4:  MOVLW  00
38B6:  MOVLB  0
38B8:  CALL   0890
38BC:  TBLRD*-
38BE:  TBLRD*+
38C0:  MOVF   FF5,W
38C2:  MOVWF  FEE
38C4:  IORLW  00
38C6:  BNZ   38BE
38C8:  MOVLB  5
38CA:  BTFSC  x05.7
38CC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
38CE:  MOVLW  04
38D0:  MOVWF  x06
38D2:  MOVLW  E5
38D4:  MOVWF  x05
38D6:  CLRF   x07
38D8:  MOVLW  2E
38DA:  MOVWF  x08
38DC:  CLRF   x09
38DE:  MOVLW  01
38E0:  MOVWF  x0A
38E2:  MOVLB  0
38E4:  CALL   1630
....................              
....................          if(Opcion==6)    
38E8:  MOVLB  4
38EA:  MOVF   xA7,W
38EC:  SUBLW  06
38EE:  BNZ   3936
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
38F0:  MOVLW  04
38F2:  MOVWF  FEA
38F4:  MOVLW  E5
38F6:  MOVWF  FE9
38F8:  MOVFF  FF2,505
38FC:  BCF    FF2.7
38FE:  MOVLW  00
3900:  MOVLB  0
3902:  CALL   08B8
3906:  TBLRD*-
3908:  TBLRD*+
390A:  MOVF   FF5,W
390C:  MOVWF  FEE
390E:  IORLW  00
3910:  BNZ   3908
3912:  MOVLB  5
3914:  BTFSC  x05.7
3916:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
3918:  MOVLW  04
391A:  MOVWF  x06
391C:  MOVLW  E5
391E:  MOVWF  x05
3920:  CLRF   x07
3922:  MOVLW  37
3924:  MOVWF  x08
3926:  MOVLW  01
3928:  MOVWF  x09
392A:  MOVWF  x0A
392C:  MOVLB  0
392E:  CALL   1630
....................          else 
3932:  BRA    3978
3934:  MOVLB  4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3936:  MOVLW  04
3938:  MOVWF  FEA
393A:  MOVLW  E5
393C:  MOVWF  FE9
393E:  MOVFF  FF2,505
3942:  BCF    FF2.7
3944:  MOVLW  00
3946:  MOVLB  0
3948:  CALL   08B8
394C:  TBLRD*-
394E:  TBLRD*+
3950:  MOVF   FF5,W
3952:  MOVWF  FEE
3954:  IORLW  00
3956:  BNZ   394E
3958:  MOVLB  5
395A:  BTFSC  x05.7
395C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
395E:  MOVLW  04
3960:  MOVWF  x06
3962:  MOVLW  E5
3964:  MOVWF  x05
3966:  CLRF   x07
3968:  MOVLW  37
396A:  MOVWF  x08
396C:  CLRF   x09
396E:  MOVLW  01
3970:  MOVWF  x0A
3972:  MOVLB  0
3974:  CALL   1630
....................             visual=0; 
3978:  MOVLB  4
397A:  BCF    x95.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
397C:  BSF    F92.0
397E:  BTFSS  F80.0
3980:  BRA    399C
....................          {  if(Flanco == 0)  
3982:  BTFSC  x95.0
3984:  BRA    399A
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3986:  BSF    x95.0
3988:  MOVLW  1E
398A:  MOVLB  5
398C:  MOVWF  x06
398E:  MOVLB  0
3990:  CALL   0F98
3994:  MOVLB  4
3996:  DECF   xA7,F
3998:  BSF    x95.4
....................                } 
....................          } 
....................             else 
399A:  BRA    399E
....................                {Flanco = 0;} 
399C:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
399E:  BSF    F92.1
39A0:  BTFSS  F80.1
39A2:  BRA    39BE
....................          {  if(Flanco2 == 0)  
39A4:  BTFSC  x95.2
39A6:  BRA    39BC
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
39A8:  BSF    x95.2
39AA:  MOVLW  1E
39AC:  MOVLB  5
39AE:  MOVWF  x06
39B0:  MOVLB  0
39B2:  CALL   0F98
39B6:  MOVLB  4
39B8:  INCF   xA7,F
39BA:  BSF    x95.4
....................                }      
....................          } 
....................             else 
39BC:  BRA    39C0
....................                {Flanco2 = 0;}   
39BE:  BCF    x95.2
....................                 
....................        if(RIGHT)//Si oprime SET 
39C0:  BSF    F92.2
39C2:  BTFSS  F80.2
39C4:  BRA    39F4
....................          {  if(Flanco1 == 0)  
39C6:  BTFSC  x95.1
39C8:  BRA    39F2
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
39CA:  BSF    x95.1
39CC:  MOVLW  1E
39CE:  MOVLB  5
39D0:  MOVWF  x06
39D2:  MOVLB  0
39D4:  CALL   0F98
39D8:  MOVLW  03
39DA:  MOVLB  4
39DC:  ADDWF  xA7,W
39DE:  MOVWF  xA2
39E0:  MOVLW  01
39E2:  MOVWF  xA7
39E4:  MOVLB  5
39E6:  CLRF   x06
39E8:  MOVLB  0
39EA:  CALL   1002
39EE:  MOVLB  4
39F0:  BSF    x95.4
....................                } 
....................          } 
....................             else 
39F2:  BRA    39F6
....................                {Flanco1 = 0;}   
39F4:  BCF    x95.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
39F6:  MOVF   xA2,W
39F8:  SUBLW  04
39FA:  BTFSS  FD8.2
39FC:  BRA    3D2A
....................        
....................       if(visual==1) 
39FE:  BTFSS  x95.4
3A00:  BRA    3B56
....................       { 
....................          glcd_imagen(2); //Guante 
3A02:  MOVLW  02
3A04:  MOVLB  5
3A06:  MOVWF  x05
3A08:  MOVLB  0
3A0A:  CALL   207E
....................          strcpy(Menus.Letra,"Caucho"); 
3A0E:  MOVLW  04
3A10:  MOVWF  FEA
3A12:  MOVLW  E5
3A14:  MOVWF  FE9
3A16:  MOVFF  FF2,505
3A1A:  BCF    FF2.7
3A1C:  MOVLW  00
3A1E:  CALL   07EC
3A22:  TBLRD*-
3A24:  TBLRD*+
3A26:  MOVF   FF5,W
3A28:  MOVWF  FEE
3A2A:  IORLW  00
3A2C:  BNZ   3A24
3A2E:  MOVLB  5
3A30:  BTFSC  x05.7
3A32:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3A34:  MOVLW  04
3A36:  MOVWF  x06
3A38:  MOVLW  E5
3A3A:  MOVWF  x05
3A3C:  MOVLW  14
3A3E:  MOVWF  x07
3A40:  CLRF   x08
3A42:  MOVLW  01
3A44:  MOVWF  x09
3A46:  MOVLW  02
3A48:  MOVWF  x0A
3A4A:  MOVLB  0
3A4C:  CALL   1630
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3A50:  MOVLW  04
3A52:  MOVWF  FEA
3A54:  MOVLW  E5
3A56:  MOVWF  FE9
3A58:  MOVFF  FF2,505
3A5C:  BCF    FF2.7
3A5E:  MOVLW  00
3A60:  CALL   07EC
3A64:  TBLRD*-
3A66:  TBLRD*+
3A68:  MOVF   FF5,W
3A6A:  MOVWF  FEE
3A6C:  IORLW  00
3A6E:  BNZ   3A66
3A70:  MOVLB  5
3A72:  BTFSC  x05.7
3A74:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3A76:  MOVLW  04
3A78:  MOVWF  x06
3A7A:  MOVLW  E5
3A7C:  MOVWF  x05
3A7E:  MOVLW  07
3A80:  MOVWF  x07
3A82:  MOVLW  37
3A84:  MOVWF  x08
3A86:  CLRF   x09
3A88:  MOVLW  01
3A8A:  MOVWF  x0A
3A8C:  MOVLB  0
3A8E:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3A92:  MOVLW  04
3A94:  MOVWF  FEA
3A96:  MOVLW  E5
3A98:  MOVWF  FE9
3A9A:  MOVFF  FF2,505
3A9E:  BCF    FF2.7
3AA0:  MOVLW  00
3AA2:  CALL   08E0
3AA6:  TBLRD*-
3AA8:  TBLRD*+
3AAA:  MOVF   FF5,W
3AAC:  MOVWF  FEE
3AAE:  IORLW  00
3AB0:  BNZ   3AA8
3AB2:  MOVLB  5
3AB4:  BTFSC  x05.7
3AB6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3AB8:  MOVLW  04
3ABA:  MOVWF  x06
3ABC:  MOVLW  E5
3ABE:  MOVWF  x05
3AC0:  CLRF   x07
3AC2:  MOVLW  1A
3AC4:  MOVWF  x08
3AC6:  CLRF   x09
3AC8:  MOVLW  01
3ACA:  MOVWF  x0A
3ACC:  MOVLB  0
3ACE:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
3AD2:  MOVLW  04
3AD4:  MOVWF  FEA
3AD6:  MOVLW  E5
3AD8:  MOVWF  FE9
3ADA:  MOVFF  FF2,505
3ADE:  BCF    FF2.7
3AE0:  MOVLW  00
3AE2:  CALL   090C
3AE6:  TBLRD*-
3AE8:  TBLRD*+
3AEA:  MOVF   FF5,W
3AEC:  MOVWF  FEE
3AEE:  IORLW  00
3AF0:  BNZ   3AE8
3AF2:  MOVLB  5
3AF4:  BTFSC  x05.7
3AF6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3AF8:  MOVLW  04
3AFA:  MOVWF  x06
3AFC:  MOVLW  E5
3AFE:  MOVWF  x05
3B00:  CLRF   x07
3B02:  MOVLW  24
3B04:  MOVWF  x08
3B06:  CLRF   x09
3B08:  MOVLW  01
3B0A:  MOVWF  x0A
3B0C:  MOVLB  0
3B0E:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3B12:  MOVLW  04
3B14:  MOVWF  FEA
3B16:  MOVLW  E5
3B18:  MOVWF  FE9
3B1A:  MOVFF  FF2,505
3B1E:  BCF    FF2.7
3B20:  MOVLW  00
3B22:  CALL   093C
3B26:  TBLRD*-
3B28:  TBLRD*+
3B2A:  MOVF   FF5,W
3B2C:  MOVWF  FEE
3B2E:  IORLW  00
3B30:  BNZ   3B28
3B32:  MOVLB  5
3B34:  BTFSC  x05.7
3B36:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3B38:  MOVLW  04
3B3A:  MOVWF  x06
3B3C:  MOVLW  E5
3B3E:  MOVWF  x05
3B40:  CLRF   x07
3B42:  MOVLW  2E
3B44:  MOVWF  x08
3B46:  CLRF   x09
3B48:  MOVLW  01
3B4A:  MOVWF  x0A
3B4C:  MOVLB  0
3B4E:  CALL   1630
....................          visual=0; 
3B52:  MOVLB  4
3B54:  BCF    x95.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3B56:  BSF    F92.3
3B58:  BTFSS  F80.3
3B5A:  BRA    3B7C
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3B5C:  MOVLW  1E
3B5E:  MOVLB  5
3B60:  MOVWF  x06
3B62:  MOVLB  0
3B64:  CALL   0F98
3B68:  MOVLW  01
3B6A:  MOVLB  4
3B6C:  MOVWF  xA2
3B6E:  MOVLB  5
3B70:  CLRF   x06
3B72:  MOVLB  0
3B74:  CALL   1002
3B78:  MOVLB  4
3B7A:  BSF    x95.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3B7C:  BSF    F92.2
3B7E:  BTFSS  F80.2
3B80:  BRA    3D2A
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
3B82:  CLRF   xC6
3B84:  CLRF   xC7
3B86:  MOVLW  05
3B88:  MOVWF  xC8
3B8A:  MOVLW  02
3B8C:  MOVWF  xC9
3B8E:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3B90:  CLRF   xCE
3B92:  CLRF   xCF
3B94:  MOVLW  05
3B96:  MOVWF  xD0
3B98:  MOVLW  01
3B9A:  MOVWF  xD1
3B9C:  CLRF   xB3
3B9E:  CLRF   xB2
3BA0:  MOVLW  79
3BA2:  MOVWF  xA5
3BA4:  MOVLW  14
3BA6:  MOVWF  xA2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3BA8:  MOVWF  xA2
3BAA:  MOVLW  0F
3BAC:  MOVLB  5
3BAE:  MOVWF  x1B
3BB0:  MOVLW  12
3BB2:  MOVWF  x1C
3BB4:  MOVLW  1E
3BB6:  MOVWF  x1D
3BB8:  MOVLW  35
3BBA:  MOVWF  x1E
3BBC:  CLRF   x1F
3BBE:  MOVLW  01
3BC0:  MOVWF  x20
3BC2:  MOVLB  0
3BC4:  CALL   156E
3BC8:  MOVLB  4
3BCA:  CLRF   xA9
3BCC:  MOVLW  C0
3BCE:  IORWF  FF2,F
3BD0:  MOVLB  5
3BD2:  CLRF   x06
3BD4:  MOVLB  0
3BD6:  CALL   1002
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3BDA:  MOVLW  04
3BDC:  MOVWF  FEA
3BDE:  MOVLW  E5
3BE0:  MOVWF  FE9
3BE2:  MOVFF  FF2,505
3BE6:  BCF    FF2.7
3BE8:  MOVLW  00
3BEA:  CALL   0966
3BEE:  TBLRD*-
3BF0:  TBLRD*+
3BF2:  MOVF   FF5,W
3BF4:  MOVWF  FEE
3BF6:  IORLW  00
3BF8:  BNZ   3BF0
3BFA:  MOVLB  5
3BFC:  BTFSC  x05.7
3BFE:  BSF    FF2.7
3C00:  MOVLW  04
3C02:  MOVWF  x06
3C04:  MOVLW  E5
3C06:  MOVWF  x05
3C08:  CLRF   x07
3C0A:  MOVLW  37
3C0C:  MOVWF  x08
3C0E:  MOVLW  02
3C10:  MOVWF  x09
3C12:  MOVLW  01
3C14:  MOVWF  x0A
3C16:  MOVLB  0
3C18:  CALL   1630
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3C1C:  MOVLW  0F
3C1E:  MOVLB  5
3C20:  MOVWF  x1B
3C22:  MOVLW  12
3C24:  MOVWF  x1C
3C26:  MOVLW  1E
3C28:  MOVWF  x1D
3C2A:  MOVLW  35
3C2C:  MOVWF  x1E
3C2E:  CLRF   x1F
3C30:  MOVLW  01
3C32:  MOVWF  x20
3C34:  MOVLB  0
3C36:  CALL   156E
....................          glcd_imagen(5); 
3C3A:  MOVLW  05
3C3C:  MOVLB  5
3C3E:  MOVWF  x05
3C40:  MOVLB  0
3C42:  CALL   207E
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3C46:  MOVLW  04
3C48:  MOVWF  FEA
3C4A:  MOVLW  E5
3C4C:  MOVWF  FE9
3C4E:  MOVFF  FF2,505
3C52:  BCF    FF2.7
3C54:  MOVLW  00
3C56:  CALL   098C
3C5A:  TBLRD*-
3C5C:  TBLRD*+
3C5E:  MOVF   FF5,W
3C60:  MOVWF  FEE
3C62:  IORLW  00
3C64:  BNZ   3C5C
3C66:  MOVLB  5
3C68:  BTFSC  x05.7
3C6A:  BSF    FF2.7
3C6C:  MOVLW  04
3C6E:  MOVWF  x06
3C70:  MOVLW  E5
3C72:  MOVWF  x05
3C74:  CLRF   x07
3C76:  CLRF   x08
3C78:  MOVLW  02
3C7A:  MOVWF  x09
3C7C:  MOVLW  01
3C7E:  MOVWF  x0A
3C80:  MOVLB  0
3C82:  CALL   1630
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3C86:  MOVLW  04
3C88:  MOVWF  FEA
3C8A:  MOVLW  E5
3C8C:  MOVWF  FE9
3C8E:  MOVFF  FF2,505
3C92:  BCF    FF2.7
3C94:  MOVLW  00
3C96:  CALL   09AE
3C9A:  TBLRD*-
3C9C:  TBLRD*+
3C9E:  MOVF   FF5,W
3CA0:  MOVWF  FEE
3CA2:  IORLW  00
3CA4:  BNZ   3C9C
3CA6:  MOVLB  5
3CA8:  BTFSC  x05.7
3CAA:  BSF    FF2.7
3CAC:  MOVLW  04
3CAE:  MOVWF  x06
3CB0:  MOVLW  E5
3CB2:  MOVWF  x05
3CB4:  CLRF   x07
3CB6:  MOVLW  08
3CB8:  MOVWF  x08
3CBA:  MOVLW  02
3CBC:  MOVWF  x09
3CBE:  MOVLW  01
3CC0:  MOVWF  x0A
3CC2:  MOVLB  0
3CC4:  CALL   1630
....................          glcd_circle(95,40,2,NO,ON); 
3CC8:  MOVLW  5F
3CCA:  MOVLB  5
3CCC:  MOVWF  x05
3CCE:  MOVLW  28
3CD0:  MOVWF  x06
3CD2:  MOVLW  02
3CD4:  MOVWF  x07
3CD6:  CLRF   x08
3CD8:  MOVLW  01
3CDA:  MOVWF  x09
3CDC:  MOVLB  0
3CDE:  CALL   217A
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3CE2:  MOVLW  04
3CE4:  MOVWF  FEA
3CE6:  MOVLW  E5
3CE8:  MOVWF  FE9
3CEA:  MOVFF  FF2,505
3CEE:  BCF    FF2.7
3CF0:  MOVLW  00
3CF2:  CALL   09D0
3CF6:  TBLRD*-
3CF8:  TBLRD*+
3CFA:  MOVF   FF5,W
3CFC:  MOVWF  FEE
3CFE:  IORLW  00
3D00:  BNZ   3CF8
3D02:  MOVLB  5
3D04:  BTFSC  x05.7
3D06:  BSF    FF2.7
3D08:  MOVLW  04
3D0A:  MOVWF  x06
3D0C:  MOVLW  E5
3D0E:  MOVWF  x05
3D10:  MOVLW  66
3D12:  MOVWF  x07
3D14:  MOVLW  28
3D16:  MOVWF  x08
3D18:  MOVLW  02
3D1A:  MOVWF  x09
3D1C:  MOVWF  x0A
3D1E:  MOVLB  0
3D20:  CALL   1630
....................          MuestraTiemposProgramados(); 
3D24:  CALL   257A
3D28:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
3D2A:  MOVF   xA2,W
3D2C:  SUBLW  05
3D2E:  BTFSS  FD8.2
3D30:  BRA    3EF6
....................        
....................       if(visual==1) 
3D32:  BTFSS  x95.4
3D34:  BRA    3E8C
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
3D36:  MOVLW  04
3D38:  MOVLB  5
3D3A:  MOVWF  x05
3D3C:  MOVLB  0
3D3E:  CALL   207E
....................          strcpy(Menus.Letra,"Liquidos"); 
3D42:  MOVLW  04
3D44:  MOVWF  FEA
3D46:  MOVLW  E5
3D48:  MOVWF  FE9
3D4A:  MOVFF  FF2,505
3D4E:  BCF    FF2.7
3D50:  MOVLW  00
3D52:  CALL   080E
3D56:  TBLRD*-
3D58:  TBLRD*+
3D5A:  MOVF   FF5,W
3D5C:  MOVWF  FEE
3D5E:  IORLW  00
3D60:  BNZ   3D58
3D62:  MOVLB  5
3D64:  BTFSC  x05.7
3D66:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3D68:  MOVLW  04
3D6A:  MOVWF  x06
3D6C:  MOVLW  E5
3D6E:  MOVWF  x05
3D70:  MOVLW  14
3D72:  MOVWF  x07
3D74:  CLRF   x08
3D76:  MOVLW  01
3D78:  MOVWF  x09
3D7A:  MOVLW  02
3D7C:  MOVWF  x0A
3D7E:  MOVLB  0
3D80:  CALL   1630
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
3D84:  MOVLW  04
3D86:  MOVWF  FEA
3D88:  MOVLW  E5
3D8A:  MOVWF  FE9
3D8C:  MOVFF  FF2,505
3D90:  BCF    FF2.7
3D92:  MOVLW  00
3D94:  CALL   080E
3D98:  TBLRD*-
3D9A:  TBLRD*+
3D9C:  MOVF   FF5,W
3D9E:  MOVWF  FEE
3DA0:  IORLW  00
3DA2:  BNZ   3D9A
3DA4:  MOVLB  5
3DA6:  BTFSC  x05.7
3DA8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3DAA:  MOVLW  04
3DAC:  MOVWF  x06
3DAE:  MOVLW  E5
3DB0:  MOVWF  x05
3DB2:  MOVLW  07
3DB4:  MOVWF  x07
3DB6:  MOVLW  37
3DB8:  MOVWF  x08
3DBA:  MOVLW  02
3DBC:  MOVWF  x09
3DBE:  MOVLW  01
3DC0:  MOVWF  x0A
3DC2:  MOVLB  0
3DC4:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3DC8:  MOVLW  04
3DCA:  MOVWF  FEA
3DCC:  MOVLW  E5
3DCE:  MOVWF  FE9
3DD0:  MOVFF  FF2,505
3DD4:  BCF    FF2.7
3DD6:  MOVLW  00
3DD8:  CALL   08E0
3DDC:  TBLRD*-
3DDE:  TBLRD*+
3DE0:  MOVF   FF5,W
3DE2:  MOVWF  FEE
3DE4:  IORLW  00
3DE6:  BNZ   3DDE
3DE8:  MOVLB  5
3DEA:  BTFSC  x05.7
3DEC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3DEE:  MOVLW  04
3DF0:  MOVWF  x06
3DF2:  MOVLW  E5
3DF4:  MOVWF  x05
3DF6:  CLRF   x07
3DF8:  MOVLW  1A
3DFA:  MOVWF  x08
3DFC:  CLRF   x09
3DFE:  MOVLW  01
3E00:  MOVWF  x0A
3E02:  MOVLB  0
3E04:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
3E08:  MOVLW  04
3E0A:  MOVWF  FEA
3E0C:  MOVLW  E5
3E0E:  MOVWF  FE9
3E10:  MOVFF  FF2,505
3E14:  BCF    FF2.7
3E16:  MOVLW  00
3E18:  CALL   09EC
3E1C:  TBLRD*-
3E1E:  TBLRD*+
3E20:  MOVF   FF5,W
3E22:  MOVWF  FEE
3E24:  IORLW  00
3E26:  BNZ   3E1E
3E28:  MOVLB  5
3E2A:  BTFSC  x05.7
3E2C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3E2E:  MOVLW  04
3E30:  MOVWF  x06
3E32:  MOVLW  E5
3E34:  MOVWF  x05
3E36:  CLRF   x07
3E38:  MOVLW  24
3E3A:  MOVWF  x08
3E3C:  CLRF   x09
3E3E:  MOVLW  01
3E40:  MOVWF  x0A
3E42:  MOVLB  0
3E44:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3E48:  MOVLW  04
3E4A:  MOVWF  FEA
3E4C:  MOVLW  E5
3E4E:  MOVWF  FE9
3E50:  MOVFF  FF2,505
3E54:  BCF    FF2.7
3E56:  MOVLW  00
3E58:  CALL   0A1C
3E5C:  TBLRD*-
3E5E:  TBLRD*+
3E60:  MOVF   FF5,W
3E62:  MOVWF  FEE
3E64:  IORLW  00
3E66:  BNZ   3E5E
3E68:  MOVLB  5
3E6A:  BTFSC  x05.7
3E6C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
3E6E:  MOVLW  04
3E70:  MOVWF  x06
3E72:  MOVLW  E5
3E74:  MOVWF  x05
3E76:  CLRF   x07
3E78:  MOVLW  2E
3E7A:  MOVWF  x08
3E7C:  CLRF   x09
3E7E:  MOVLW  01
3E80:  MOVWF  x0A
3E82:  MOVLB  0
3E84:  CALL   1630
....................          visual=0; 
3E88:  MOVLB  4
3E8A:  BCF    x95.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
3E8C:  BSF    F92.3
3E8E:  BTFSS  F80.3
3E90:  BRA    3EB2
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3E92:  MOVLW  1E
3E94:  MOVLB  5
3E96:  MOVWF  x06
3E98:  MOVLB  0
3E9A:  CALL   0F98
3E9E:  MOVLW  01
3EA0:  MOVLB  4
3EA2:  MOVWF  xA2
3EA4:  MOVLB  5
3EA6:  CLRF   x06
3EA8:  MOVLB  0
3EAA:  CALL   1002
3EAE:  MOVLB  4
3EB0:  BSF    x95.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
3EB2:  BSF    F92.2
3EB4:  BTFSS  F80.2
3EB6:  BRA    3EF6
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
3EB8:  CLRF   xC6
3EBA:  CLRF   xC7
3EBC:  CLRF   xC8
3EBE:  MOVLW  02
3EC0:  MOVWF  xC9
3EC2:  BSF    x95.5
3EC4:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
3EC6:  CLRF   xCE
3EC8:  CLRF   xCF
3ECA:  CLRF   xD0
3ECC:  CLRF   xD1
3ECE:  MOVLW  79
3ED0:  MOVWF  xA5
3ED2:  MOVLW  0E
3ED4:  MOVWF  xA2
3ED6:  MOVLW  04
3ED8:  MOVLB  5
3EDA:  MOVWF  x05
3EDC:  MOVLW  AF
3EDE:  MOVWF  x06
3EE0:  MOVLB  0
3EE2:  CALL   0F98
3EE6:  MOVLB  5
3EE8:  DECFSZ x05,F
3EEA:  BRA    3EDC
3EEC:  CLRF   x06
3EEE:  MOVLB  0
3EF0:  CALL   1002
3EF4:  MOVLB  4
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
3EF6:  MOVF   xA2,W
3EF8:  SUBLW  06
3EFA:  BTFSS  FD8.2
3EFC:  BRA    40C2
....................        
....................       if(visual==1) 
3EFE:  BTFSS  x95.4
3F00:  BRA    4056
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
3F02:  MOVLW  03
3F04:  MOVLB  5
3F06:  MOVWF  x05
3F08:  MOVLB  0
3F0A:  CALL   207E
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
3F0E:  MOVLW  04
3F10:  MOVWF  FEA
3F12:  MOVLW  E5
3F14:  MOVWF  FE9
3F16:  MOVFF  FF2,505
3F1A:  BCF    FF2.7
3F1C:  MOVLW  00
3F1E:  CALL   0A46
3F22:  TBLRD*-
3F24:  TBLRD*+
3F26:  MOVF   FF5,W
3F28:  MOVWF  FEE
3F2A:  IORLW  00
3F2C:  BNZ   3F24
3F2E:  MOVLB  5
3F30:  BTFSC  x05.7
3F32:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3F34:  MOVLW  04
3F36:  MOVWF  x06
3F38:  MOVLW  E5
3F3A:  MOVWF  x05
3F3C:  CLRF   x07
3F3E:  CLRF   x08
3F40:  MOVLW  01
3F42:  MOVWF  x09
3F44:  MOVLW  02
3F46:  MOVWF  x0A
3F48:  MOVLB  0
3F4A:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
3F4E:  MOVLW  04
3F50:  MOVWF  FEA
3F52:  MOVLW  E5
3F54:  MOVWF  FE9
3F56:  MOVFF  FF2,505
3F5A:  BCF    FF2.7
3F5C:  MOVLW  00
3F5E:  CALL   0832
3F62:  TBLRD*-
3F64:  TBLRD*+
3F66:  MOVF   FF5,W
3F68:  MOVWF  FEE
3F6A:  IORLW  00
3F6C:  BNZ   3F64
3F6E:  MOVLB  5
3F70:  BTFSC  x05.7
3F72:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3F74:  MOVLW  04
3F76:  MOVWF  x06
3F78:  MOVLW  E5
3F7A:  MOVWF  x05
3F7C:  MOVLW  07
3F7E:  MOVWF  x07
3F80:  MOVLW  37
3F82:  MOVWF  x08
3F84:  MOVLW  02
3F86:  MOVWF  x09
3F88:  MOVLW  01
3F8A:  MOVWF  x0A
3F8C:  MOVLB  0
3F8E:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3F92:  MOVLW  04
3F94:  MOVWF  FEA
3F96:  MOVLW  E5
3F98:  MOVWF  FE9
3F9A:  MOVFF  FF2,505
3F9E:  BCF    FF2.7
3FA0:  MOVLW  00
3FA2:  CALL   08E0
3FA6:  TBLRD*-
3FA8:  TBLRD*+
3FAA:  MOVF   FF5,W
3FAC:  MOVWF  FEE
3FAE:  IORLW  00
3FB0:  BNZ   3FA8
3FB2:  MOVLB  5
3FB4:  BTFSC  x05.7
3FB6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3FB8:  MOVLW  04
3FBA:  MOVWF  x06
3FBC:  MOVLW  E5
3FBE:  MOVWF  x05
3FC0:  CLRF   x07
3FC2:  MOVLW  1A
3FC4:  MOVWF  x08
3FC6:  CLRF   x09
3FC8:  MOVLW  01
3FCA:  MOVWF  x0A
3FCC:  MOVLB  0
3FCE:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3FD2:  MOVLW  04
3FD4:  MOVWF  FEA
3FD6:  MOVLW  E5
3FD8:  MOVWF  FE9
3FDA:  MOVFF  FF2,505
3FDE:  BCF    FF2.7
3FE0:  MOVLW  00
3FE2:  CALL   0A6C
3FE6:  TBLRD*-
3FE8:  TBLRD*+
3FEA:  MOVF   FF5,W
3FEC:  MOVWF  FEE
3FEE:  IORLW  00
3FF0:  BNZ   3FE8
3FF2:  MOVLB  5
3FF4:  BTFSC  x05.7
3FF6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3FF8:  MOVLW  04
3FFA:  MOVWF  x06
3FFC:  MOVLW  E5
3FFE:  MOVWF  x05
4000:  CLRF   x07
4002:  MOVLW  24
4004:  MOVWF  x08
4006:  CLRF   x09
4008:  MOVLW  01
400A:  MOVWF  x0A
400C:  MOVLB  0
400E:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
4012:  MOVLW  04
4014:  MOVWF  FEA
4016:  MOVLW  E5
4018:  MOVWF  FE9
401A:  MOVFF  FF2,505
401E:  BCF    FF2.7
4020:  MOVLW  00
4022:  CALL   0A1C
4026:  TBLRD*-
4028:  TBLRD*+
402A:  MOVF   FF5,W
402C:  MOVWF  FEE
402E:  IORLW  00
4030:  BNZ   4028
4032:  MOVLB  5
4034:  BTFSC  x05.7
4036:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4038:  MOVLW  04
403A:  MOVWF  x06
403C:  MOVLW  E5
403E:  MOVWF  x05
4040:  CLRF   x07
4042:  MOVLW  2E
4044:  MOVWF  x08
4046:  CLRF   x09
4048:  MOVLW  01
404A:  MOVWF  x0A
404C:  MOVLB  0
404E:  CALL   1630
....................          visual=0; 
4052:  MOVLB  4
4054:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4056:  BSF    F92.3
4058:  BTFSS  F80.3
405A:  BRA    407C
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
405C:  MOVLW  1E
405E:  MOVLB  5
4060:  MOVWF  x06
4062:  MOVLB  0
4064:  CALL   0F98
4068:  MOVLW  01
406A:  MOVLB  4
406C:  MOVWF  xA2
406E:  MOVLB  5
4070:  CLRF   x06
4072:  MOVLB  0
4074:  CALL   1002
4078:  MOVLB  4
407A:  BSF    x95.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
407C:  BSF    F92.2
407E:  BTFSS  F80.2
4080:  BRA    40C2
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
4082:  CLRF   xC6
4084:  CLRF   xC7
4086:  MOVLW  05
4088:  MOVWF  xC8
408A:  MOVLW  01
408C:  MOVWF  xC9
408E:  BSF    x95.5
4090:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
4092:  CLRF   xCE
4094:  CLRF   xCF
4096:  CLRF   xD0
4098:  CLRF   xD1
409A:  MOVLW  79
409C:  MOVWF  xA5
409E:  MOVLW  0E
40A0:  MOVWF  xA2
40A2:  MOVLW  04
40A4:  MOVLB  5
40A6:  MOVWF  x05
40A8:  MOVLW  AF
40AA:  MOVWF  x06
40AC:  MOVLB  0
40AE:  CALL   0F98
40B2:  MOVLB  5
40B4:  DECFSZ x05,F
40B6:  BRA    40A8
40B8:  CLRF   x06
40BA:  MOVLB  0
40BC:  CALL   1002
40C0:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
40C2:  MOVF   xA2,W
40C4:  SUBLW  07
40C6:  BTFSS  FD8.2
40C8:  BRA    4408
....................        
....................       if(visual==1) 
40CA:  BTFSS  x95.4
40CC:  BRA    4220
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
40CE:  MOVLW  01
40D0:  MOVLB  5
40D2:  MOVWF  x05
40D4:  MOVLB  0
40D6:  CALL   207E
....................          strcpy(Menus.Letra,"Tex & Ins"); 
40DA:  MOVLW  04
40DC:  MOVWF  FEA
40DE:  MOVLW  E5
40E0:  MOVWF  FE9
40E2:  MOVFF  FF2,505
40E6:  BCF    FF2.7
40E8:  MOVLW  00
40EA:  CALL   0A9C
40EE:  TBLRD*-
40F0:  TBLRD*+
40F2:  MOVF   FF5,W
40F4:  MOVWF  FEE
40F6:  IORLW  00
40F8:  BNZ   40F0
40FA:  MOVLB  5
40FC:  BTFSC  x05.7
40FE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4100:  MOVLW  04
4102:  MOVWF  x06
4104:  MOVLW  E5
4106:  MOVWF  x05
4108:  CLRF   x07
410A:  CLRF   x08
410C:  MOVLW  01
410E:  MOVWF  x09
4110:  MOVLW  02
4112:  MOVWF  x0A
4114:  MOVLB  0
4116:  CALL   1630
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
411A:  MOVLW  04
411C:  MOVWF  FEA
411E:  MOVLW  E5
4120:  MOVWF  FE9
4122:  MOVFF  FF2,505
4126:  BCF    FF2.7
4128:  MOVLW  00
412A:  CALL   0860
412E:  TBLRD*-
4130:  TBLRD*+
4132:  MOVF   FF5,W
4134:  MOVWF  FEE
4136:  IORLW  00
4138:  BNZ   4130
413A:  MOVLB  5
413C:  BTFSC  x05.7
413E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4140:  MOVLW  04
4142:  MOVWF  x06
4144:  MOVLW  E5
4146:  MOVWF  x05
4148:  CLRF   x07
414A:  MOVLW  37
414C:  MOVWF  x08
414E:  MOVLW  02
4150:  MOVWF  x09
4152:  MOVLW  01
4154:  MOVWF  x0A
4156:  MOVLB  0
4158:  CALL   1630
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
415C:  MOVLW  04
415E:  MOVWF  FEA
4160:  MOVLW  E5
4162:  MOVWF  FE9
4164:  MOVFF  FF2,505
4168:  BCF    FF2.7
416A:  MOVLW  00
416C:  CALL   08E0
4170:  TBLRD*-
4172:  TBLRD*+
4174:  MOVF   FF5,W
4176:  MOVWF  FEE
4178:  IORLW  00
417A:  BNZ   4172
417C:  MOVLB  5
417E:  BTFSC  x05.7
4180:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4182:  MOVLW  04
4184:  MOVWF  x06
4186:  MOVLW  E5
4188:  MOVWF  x05
418A:  CLRF   x07
418C:  MOVLW  1A
418E:  MOVWF  x08
4190:  CLRF   x09
4192:  MOVLW  01
4194:  MOVWF  x0A
4196:  MOVLB  0
4198:  CALL   1630
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
419C:  MOVLW  04
419E:  MOVWF  FEA
41A0:  MOVLW  E5
41A2:  MOVWF  FE9
41A4:  MOVFF  FF2,505
41A8:  BCF    FF2.7
41AA:  MOVLW  00
41AC:  CALL   090C
41B0:  TBLRD*-
41B2:  TBLRD*+
41B4:  MOVF   FF5,W
41B6:  MOVWF  FEE
41B8:  IORLW  00
41BA:  BNZ   41B2
41BC:  MOVLB  5
41BE:  BTFSC  x05.7
41C0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
41C2:  MOVLW  04
41C4:  MOVWF  x06
41C6:  MOVLW  E5
41C8:  MOVWF  x05
41CA:  CLRF   x07
41CC:  MOVLW  24
41CE:  MOVWF  x08
41D0:  CLRF   x09
41D2:  MOVLW  01
41D4:  MOVWF  x0A
41D6:  MOVLB  0
41D8:  CALL   1630
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
41DC:  MOVLW  04
41DE:  MOVWF  FEA
41E0:  MOVLW  E5
41E2:  MOVWF  FE9
41E4:  MOVFF  FF2,505
41E8:  BCF    FF2.7
41EA:  MOVLW  00
41EC:  CALL   0AC0
41F0:  TBLRD*-
41F2:  TBLRD*+
41F4:  MOVF   FF5,W
41F6:  MOVWF  FEE
41F8:  IORLW  00
41FA:  BNZ   41F2
41FC:  MOVLB  5
41FE:  BTFSC  x05.7
4200:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4202:  MOVLW  04
4204:  MOVWF  x06
4206:  MOVLW  E5
4208:  MOVWF  x05
420A:  CLRF   x07
420C:  MOVLW  2E
420E:  MOVWF  x08
4210:  CLRF   x09
4212:  MOVLW  01
4214:  MOVWF  x0A
4216:  MOVLB  0
4218:  CALL   1630
....................          visual=0; 
421C:  MOVLB  4
421E:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4220:  BSF    F92.3
4222:  BTFSS  F80.3
4224:  BRA    4246
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4226:  MOVLW  1E
4228:  MOVLB  5
422A:  MOVWF  x06
422C:  MOVLB  0
422E:  CALL   0F98
4232:  MOVLW  01
4234:  MOVLB  4
4236:  MOVWF  xA2
4238:  MOVLB  5
423A:  CLRF   x06
423C:  MOVLB  0
423E:  CALL   1002
4242:  MOVLB  4
4244:  BSF    x95.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
4246:  BSF    F92.2
4248:  BTFSS  F80.2
424A:  BRA    4408
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
424C:  CLRF   xC6
424E:  CLRF   xC7
4250:  MOVLW  05
4252:  MOVWF  xC8
4254:  MOVLW  02
4256:  MOVWF  xC9
4258:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
425A:  CLRF   xCE
425C:  CLRF   xCF
425E:  CLRF   xD0
4260:  MOVLW  01
4262:  MOVWF  xD1
4264:  MOVLW  79
4266:  MOVWF  xA5
4268:  MOVLW  14
426A:  MOVWF  xA2
426C:  MOVLW  04
426E:  MOVLB  5
4270:  MOVWF  x05
4272:  MOVLW  AF
4274:  MOVWF  x06
4276:  MOVLB  0
4278:  CALL   0F98
427C:  MOVLB  5
427E:  DECFSZ x05,F
4280:  BRA    4272
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
4282:  MOVLW  14
4284:  MOVLB  4
4286:  MOVWF  xA2
4288:  MOVLW  0F
428A:  MOVLB  5
428C:  MOVWF  x1B
428E:  MOVLW  12
4290:  MOVWF  x1C
4292:  MOVLW  1E
4294:  MOVWF  x1D
4296:  MOVLW  35
4298:  MOVWF  x1E
429A:  CLRF   x1F
429C:  MOVLW  01
429E:  MOVWF  x20
42A0:  MOVLB  0
42A2:  CALL   156E
42A6:  MOVLB  4
42A8:  CLRF   xA9
42AA:  MOVLW  C0
42AC:  IORWF  FF2,F
42AE:  MOVLB  5
42B0:  CLRF   x06
42B2:  MOVLB  0
42B4:  CALL   1002
....................          strcpy(Menus.Letra,"Calentando"); 
42B8:  MOVLW  04
42BA:  MOVWF  FEA
42BC:  MOVLW  E5
42BE:  MOVWF  FE9
42C0:  MOVFF  FF2,505
42C4:  BCF    FF2.7
42C6:  MOVLW  00
42C8:  CALL   0966
42CC:  TBLRD*-
42CE:  TBLRD*+
42D0:  MOVF   FF5,W
42D2:  MOVWF  FEE
42D4:  IORLW  00
42D6:  BNZ   42CE
42D8:  MOVLB  5
42DA:  BTFSC  x05.7
42DC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
42DE:  MOVLW  04
42E0:  MOVWF  x06
42E2:  MOVLW  E5
42E4:  MOVWF  x05
42E6:  CLRF   x07
42E8:  MOVLW  37
42EA:  MOVWF  x08
42EC:  MOVLW  02
42EE:  MOVWF  x09
42F0:  MOVLW  01
42F2:  MOVWF  x0A
42F4:  MOVLB  0
42F6:  CALL   1630
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
42FA:  MOVLW  0F
42FC:  MOVLB  5
42FE:  MOVWF  x1B
4300:  MOVLW  12
4302:  MOVWF  x1C
4304:  MOVLW  1E
4306:  MOVWF  x1D
4308:  MOVLW  35
430A:  MOVWF  x1E
430C:  CLRF   x1F
430E:  MOVLW  01
4310:  MOVWF  x20
4312:  MOVLB  0
4314:  CALL   156E
....................          glcd_imagen(5); 
4318:  MOVLW  05
431A:  MOVLB  5
431C:  MOVWF  x05
431E:  MOVLB  0
4320:  CALL   207E
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4324:  MOVLW  04
4326:  MOVWF  FEA
4328:  MOVLW  E5
432A:  MOVWF  FE9
432C:  MOVFF  FF2,505
4330:  BCF    FF2.7
4332:  MOVLW  00
4334:  CALL   098C
4338:  TBLRD*-
433A:  TBLRD*+
433C:  MOVF   FF5,W
433E:  MOVWF  FEE
4340:  IORLW  00
4342:  BNZ   433A
4344:  MOVLB  5
4346:  BTFSC  x05.7
4348:  BSF    FF2.7
434A:  MOVLW  04
434C:  MOVWF  x06
434E:  MOVLW  E5
4350:  MOVWF  x05
4352:  CLRF   x07
4354:  CLRF   x08
4356:  MOVLW  02
4358:  MOVWF  x09
435A:  MOVLW  01
435C:  MOVWF  x0A
435E:  MOVLB  0
4360:  CALL   1630
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
4364:  MOVLW  04
4366:  MOVWF  FEA
4368:  MOVLW  E5
436A:  MOVWF  FE9
436C:  MOVFF  FF2,505
4370:  BCF    FF2.7
4372:  MOVLW  00
4374:  CALL   09AE
4378:  TBLRD*-
437A:  TBLRD*+
437C:  MOVF   FF5,W
437E:  MOVWF  FEE
4380:  IORLW  00
4382:  BNZ   437A
4384:  MOVLB  5
4386:  BTFSC  x05.7
4388:  BSF    FF2.7
438A:  MOVLW  04
438C:  MOVWF  x06
438E:  MOVLW  E5
4390:  MOVWF  x05
4392:  CLRF   x07
4394:  MOVLW  08
4396:  MOVWF  x08
4398:  MOVLW  02
439A:  MOVWF  x09
439C:  MOVLW  01
439E:  MOVWF  x0A
43A0:  MOVLB  0
43A2:  CALL   1630
....................          glcd_circle(95,40,2,NO,ON); 
43A6:  MOVLW  5F
43A8:  MOVLB  5
43AA:  MOVWF  x05
43AC:  MOVLW  28
43AE:  MOVWF  x06
43B0:  MOVLW  02
43B2:  MOVWF  x07
43B4:  CLRF   x08
43B6:  MOVLW  01
43B8:  MOVWF  x09
43BA:  MOVLB  0
43BC:  CALL   217A
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
43C0:  MOVLW  04
43C2:  MOVWF  FEA
43C4:  MOVLW  E5
43C6:  MOVWF  FE9
43C8:  MOVFF  FF2,505
43CC:  BCF    FF2.7
43CE:  MOVLW  00
43D0:  CALL   09D0
43D4:  TBLRD*-
43D6:  TBLRD*+
43D8:  MOVF   FF5,W
43DA:  MOVWF  FEE
43DC:  IORLW  00
43DE:  BNZ   43D6
43E0:  MOVLB  5
43E2:  BTFSC  x05.7
43E4:  BSF    FF2.7
43E6:  MOVLW  04
43E8:  MOVWF  x06
43EA:  MOVLW  E5
43EC:  MOVWF  x05
43EE:  MOVLW  66
43F0:  MOVWF  x07
43F2:  MOVLW  28
43F4:  MOVWF  x08
43F6:  MOVLW  02
43F8:  MOVWF  x09
43FA:  MOVWF  x0A
43FC:  MOVLB  0
43FE:  CALL   1630
....................          MuestraTiemposProgramados(); 
4402:  CALL   257A
4406:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
4408:  MOVF   xA2,W
440A:  SUBLW  08
440C:  BTFSS  FD8.2
440E:  BRA    47EC
....................          
....................          if(visual==1) 
4410:  BTFSS  x95.4
4412:  BRA    4738
....................          { 
....................             if(Opcion>5) 
4414:  MOVF   xA7,W
4416:  SUBLW  05
4418:  BC    441E
....................             {Opcion=1;} 
441A:  MOVLW  01
441C:  MOVWF  xA7
....................             if(Opcion<1) 
441E:  MOVF   xA7,F
4420:  BNZ   4426
....................             {Opcion=5;} 
4422:  MOVLW  05
4424:  MOVWF  xA7
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
4426:  MOVLW  04
4428:  MOVWF  FEA
442A:  MOVLW  E5
442C:  MOVWF  FE9
442E:  MOVFF  FF2,505
4432:  BCF    FF2.7
4434:  MOVLW  00
4436:  MOVLB  0
4438:  CALL   0AEA
443C:  TBLRD*-
443E:  TBLRD*+
4440:  MOVF   FF5,W
4442:  MOVWF  FEE
4444:  IORLW  00
4446:  BNZ   443E
4448:  MOVLB  5
444A:  BTFSC  x05.7
444C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
444E:  MOVLW  04
4450:  MOVWF  x06
4452:  MOVLW  E5
4454:  MOVWF  x05
4456:  CLRF   x07
4458:  CLRF   x08
445A:  MOVLW  01
445C:  MOVWF  x09
445E:  MOVWF  x0A
4460:  MOVLB  0
4462:  CALL   1630
....................        
....................             if(Opcion==1)    
4466:  MOVLB  4
4468:  DECFSZ xA7,W
446A:  BRA    44B2
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
446C:  MOVLW  04
446E:  MOVWF  FEA
4470:  MOVLW  E5
4472:  MOVWF  FE9
4474:  MOVFF  FF2,505
4478:  BCF    FF2.7
447A:  MOVLW  00
447C:  MOVLB  0
447E:  CALL   0B1A
4482:  TBLRD*-
4484:  TBLRD*+
4486:  MOVF   FF5,W
4488:  MOVWF  FEE
448A:  IORLW  00
448C:  BNZ   4484
448E:  MOVLB  5
4490:  BTFSC  x05.7
4492:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
4494:  MOVLW  04
4496:  MOVWF  x06
4498:  MOVLW  E5
449A:  MOVWF  x05
449C:  CLRF   x07
449E:  MOVLW  0A
44A0:  MOVWF  x08
44A2:  MOVLW  01
44A4:  MOVWF  x09
44A6:  MOVWF  x0A
44A8:  MOVLB  0
44AA:  CALL   1630
....................             else 
44AE:  BRA    44F4
44B0:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
44B2:  MOVLW  04
44B4:  MOVWF  FEA
44B6:  MOVLW  E5
44B8:  MOVWF  FE9
44BA:  MOVFF  FF2,505
44BE:  BCF    FF2.7
44C0:  MOVLW  00
44C2:  MOVLB  0
44C4:  CALL   0B1A
44C8:  TBLRD*-
44CA:  TBLRD*+
44CC:  MOVF   FF5,W
44CE:  MOVWF  FEE
44D0:  IORLW  00
44D2:  BNZ   44CA
44D4:  MOVLB  5
44D6:  BTFSC  x05.7
44D8:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
44DA:  MOVLW  04
44DC:  MOVWF  x06
44DE:  MOVLW  E5
44E0:  MOVWF  x05
44E2:  CLRF   x07
44E4:  MOVLW  0A
44E6:  MOVWF  x08
44E8:  CLRF   x09
44EA:  MOVLW  01
44EC:  MOVWF  x0A
44EE:  MOVLB  0
44F0:  CALL   1630
....................              
....................             if(Opcion==2)    
44F4:  MOVLB  4
44F6:  MOVF   xA7,W
44F8:  SUBLW  02
44FA:  BNZ   4542
....................                {strcpy(Menus.Letra,"T. Secado"); 
44FC:  MOVLW  04
44FE:  MOVWF  FEA
4500:  MOVLW  E5
4502:  MOVWF  FE9
4504:  MOVFF  FF2,505
4508:  BCF    FF2.7
450A:  MOVLW  00
450C:  MOVLB  0
450E:  CALL   0B46
4512:  TBLRD*-
4514:  TBLRD*+
4516:  MOVF   FF5,W
4518:  MOVWF  FEE
451A:  IORLW  00
451C:  BNZ   4514
451E:  MOVLB  5
4520:  BTFSC  x05.7
4522:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
4524:  MOVLW  04
4526:  MOVWF  x06
4528:  MOVLW  E5
452A:  MOVWF  x05
452C:  CLRF   x07
452E:  MOVLW  14
4530:  MOVWF  x08
4532:  MOVLW  01
4534:  MOVWF  x09
4536:  MOVWF  x0A
4538:  MOVLB  0
453A:  CALL   1630
....................             else 
453E:  BRA    4584
4540:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
4542:  MOVLW  04
4544:  MOVWF  FEA
4546:  MOVLW  E5
4548:  MOVWF  FE9
454A:  MOVFF  FF2,505
454E:  BCF    FF2.7
4550:  MOVLW  00
4552:  MOVLB  0
4554:  CALL   0B46
4558:  TBLRD*-
455A:  TBLRD*+
455C:  MOVF   FF5,W
455E:  MOVWF  FEE
4560:  IORLW  00
4562:  BNZ   455A
4564:  MOVLB  5
4566:  BTFSC  x05.7
4568:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
456A:  MOVLW  04
456C:  MOVWF  x06
456E:  MOVLW  E5
4570:  MOVWF  x05
4572:  CLRF   x07
4574:  MOVLW  14
4576:  MOVWF  x08
4578:  CLRF   x09
457A:  MOVLW  01
457C:  MOVWF  x0A
457E:  MOVLB  0
4580:  CALL   1630
....................                 
....................              if(Opcion==3)    
4584:  MOVLB  4
4586:  MOVF   xA7,W
4588:  SUBLW  03
458A:  BNZ   45D2
....................                {strcpy(Menus.Letra,"Temperatura"); 
458C:  MOVLW  04
458E:  MOVWF  FEA
4590:  MOVLW  E5
4592:  MOVWF  FE9
4594:  MOVFF  FF2,505
4598:  BCF    FF2.7
459A:  MOVLW  00
459C:  MOVLB  0
459E:  CALL   0B6A
45A2:  TBLRD*-
45A4:  TBLRD*+
45A6:  MOVF   FF5,W
45A8:  MOVWF  FEE
45AA:  IORLW  00
45AC:  BNZ   45A4
45AE:  MOVLB  5
45B0:  BTFSC  x05.7
45B2:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
45B4:  MOVLW  04
45B6:  MOVWF  x06
45B8:  MOVLW  E5
45BA:  MOVWF  x05
45BC:  CLRF   x07
45BE:  MOVLW  1E
45C0:  MOVWF  x08
45C2:  MOVLW  01
45C4:  MOVWF  x09
45C6:  MOVWF  x0A
45C8:  MOVLB  0
45CA:  CALL   1630
....................             else 
45CE:  BRA    4614
45D0:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
45D2:  MOVLW  04
45D4:  MOVWF  FEA
45D6:  MOVLW  E5
45D8:  MOVWF  FE9
45DA:  MOVFF  FF2,505
45DE:  BCF    FF2.7
45E0:  MOVLW  00
45E2:  MOVLB  0
45E4:  CALL   0B6A
45E8:  TBLRD*-
45EA:  TBLRD*+
45EC:  MOVF   FF5,W
45EE:  MOVWF  FEE
45F0:  IORLW  00
45F2:  BNZ   45EA
45F4:  MOVLB  5
45F6:  BTFSC  x05.7
45F8:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
45FA:  MOVLW  04
45FC:  MOVWF  x06
45FE:  MOVLW  E5
4600:  MOVWF  x05
4602:  CLRF   x07
4604:  MOVLW  1E
4606:  MOVWF  x08
4608:  CLRF   x09
460A:  MOVLW  01
460C:  MOVWF  x0A
460E:  MOVLB  0
4610:  CALL   1630
....................                 
....................             if(Opcion==4)    
4614:  MOVLB  4
4616:  MOVF   xA7,W
4618:  SUBLW  04
461A:  BNZ   4662
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
461C:  MOVLW  04
461E:  MOVWF  FEA
4620:  MOVLW  E5
4622:  MOVWF  FE9
4624:  MOVFF  FF2,505
4628:  BCF    FF2.7
462A:  MOVLW  00
462C:  MOVLB  0
462E:  CALL   0B90
4632:  TBLRD*-
4634:  TBLRD*+
4636:  MOVF   FF5,W
4638:  MOVWF  FEE
463A:  IORLW  00
463C:  BNZ   4634
463E:  MOVLB  5
4640:  BTFSC  x05.7
4642:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
4644:  MOVLW  04
4646:  MOVWF  x06
4648:  MOVLW  E5
464A:  MOVWF  x05
464C:  CLRF   x07
464E:  MOVLW  28
4650:  MOVWF  x08
4652:  MOVLW  01
4654:  MOVWF  x09
4656:  MOVWF  x0A
4658:  MOVLB  0
465A:  CALL   1630
....................             else 
465E:  BRA    46A4
4660:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4662:  MOVLW  04
4664:  MOVWF  FEA
4666:  MOVLW  E5
4668:  MOVWF  FE9
466A:  MOVFF  FF2,505
466E:  BCF    FF2.7
4670:  MOVLW  00
4672:  MOVLB  0
4674:  CALL   0B90
4678:  TBLRD*-
467A:  TBLRD*+
467C:  MOVF   FF5,W
467E:  MOVWF  FEE
4680:  IORLW  00
4682:  BNZ   467A
4684:  MOVLB  5
4686:  BTFSC  x05.7
4688:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
468A:  MOVLW  04
468C:  MOVWF  x06
468E:  MOVLW  E5
4690:  MOVWF  x05
4692:  CLRF   x07
4694:  MOVLW  28
4696:  MOVWF  x08
4698:  CLRF   x09
469A:  MOVLW  01
469C:  MOVWF  x0A
469E:  MOVLB  0
46A0:  CALL   1630
....................                 
....................             if(Opcion==5)    
46A4:  MOVLB  4
46A6:  MOVF   xA7,W
46A8:  SUBLW  05
46AA:  BNZ   46F2
....................                {strcpy(Menus.Letra,"Continuar"); 
46AC:  MOVLW  04
46AE:  MOVWF  FEA
46B0:  MOVLW  E5
46B2:  MOVWF  FE9
46B4:  MOVFF  FF2,505
46B8:  BCF    FF2.7
46BA:  MOVLW  00
46BC:  MOVLB  0
46BE:  CALL   0BBC
46C2:  TBLRD*-
46C4:  TBLRD*+
46C6:  MOVF   FF5,W
46C8:  MOVWF  FEE
46CA:  IORLW  00
46CC:  BNZ   46C4
46CE:  MOVLB  5
46D0:  BTFSC  x05.7
46D2:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
46D4:  MOVLW  04
46D6:  MOVWF  x06
46D8:  MOVLW  E5
46DA:  MOVWF  x05
46DC:  CLRF   x07
46DE:  MOVLW  32
46E0:  MOVWF  x08
46E2:  MOVLW  01
46E4:  MOVWF  x09
46E6:  MOVWF  x0A
46E8:  MOVLB  0
46EA:  CALL   1630
....................             else 
46EE:  BRA    4734
46F0:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
46F2:  MOVLW  04
46F4:  MOVWF  FEA
46F6:  MOVLW  E5
46F8:  MOVWF  FE9
46FA:  MOVFF  FF2,505
46FE:  BCF    FF2.7
4700:  MOVLW  00
4702:  MOVLB  0
4704:  CALL   0BBC
4708:  TBLRD*-
470A:  TBLRD*+
470C:  MOVF   FF5,W
470E:  MOVWF  FEE
4710:  IORLW  00
4712:  BNZ   470A
4714:  MOVLB  5
4716:  BTFSC  x05.7
4718:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
471A:  MOVLW  04
471C:  MOVWF  x06
471E:  MOVLW  E5
4720:  MOVWF  x05
4722:  CLRF   x07
4724:  MOVLW  32
4726:  MOVWF  x08
4728:  CLRF   x09
472A:  MOVLW  01
472C:  MOVWF  x0A
472E:  MOVLB  0
4730:  CALL   1630
....................                           
....................             visual=0; 
4734:  MOVLB  4
4736:  BCF    x95.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
4738:  BSF    F92.0
473A:  BTFSS  F80.0
473C:  BRA    4758
....................          {  if(Flanco == 0)  
473E:  BTFSC  x95.0
4740:  BRA    4756
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4742:  BSF    x95.0
4744:  MOVLW  1E
4746:  MOVLB  5
4748:  MOVWF  x06
474A:  MOVLB  0
474C:  CALL   0F98
4750:  MOVLB  4
4752:  DECF   xA7,F
4754:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4756:  BRA    475A
....................                {Flanco = 0;} 
4758:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
475A:  BSF    F92.1
475C:  BTFSS  F80.1
475E:  BRA    477A
....................          {  if(Flanco2 == 0)  
4760:  BTFSC  x95.2
4762:  BRA    4778
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4764:  BSF    x95.2
4766:  MOVLW  1E
4768:  MOVLB  5
476A:  MOVWF  x06
476C:  MOVLB  0
476E:  CALL   0F98
4772:  MOVLB  4
4774:  INCF   xA7,F
4776:  BSF    x95.4
....................                }      
....................          } 
....................             else 
4778:  BRA    477C
....................                {Flanco2 = 0;}   
477A:  BCF    x95.2
....................                 
....................          if(RIGHT)//Si oprime SET 
477C:  BSF    F92.2
477E:  BTFSS  F80.2
4780:  BRA    47BA
....................          {  if(Flanco1 == 0)  
4782:  BTFSC  x95.1
4784:  BRA    47B8
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4786:  BSF    x95.1
4788:  MOVLW  02
478A:  MOVLB  5
478C:  MOVWF  x05
478E:  MOVLW  96
4790:  MOVWF  x06
4792:  MOVLB  0
4794:  CALL   0F98
4798:  MOVLB  5
479A:  DECFSZ x05,F
479C:  BRA    478E
479E:  MOVLW  0A
47A0:  MOVLB  4
47A2:  ADDWF  xA7,W
47A4:  MOVWF  xA2
47A6:  MOVLW  01
47A8:  MOVWF  xA7
47AA:  MOVLB  5
47AC:  CLRF   x06
47AE:  MOVLB  0
47B0:  CALL   1002
47B4:  MOVLB  4
47B6:  BSF    x95.4
....................                } 
....................          } 
....................             else 
47B8:  BRA    47BC
....................                {Flanco1 = 0;}   
47BA:  BCF    x95.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
47BC:  BSF    F92.3
47BE:  BTFSS  F80.3
47C0:  BRA    47EC
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
47C2:  MOVLW  04
47C4:  MOVLB  5
47C6:  MOVWF  x05
47C8:  MOVLW  AF
47CA:  MOVWF  x06
47CC:  MOVLB  0
47CE:  CALL   0F98
47D2:  MOVLB  5
47D4:  DECFSZ x05,F
47D6:  BRA    47C8
47D8:  MOVLW  01
47DA:  MOVLB  4
47DC:  MOVWF  xA2
47DE:  MOVLB  5
47E0:  CLRF   x06
47E2:  MOVLB  0
47E4:  CALL   1002
47E8:  MOVLB  4
47EA:  BSF    x95.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
47EC:  MOVF   xA2,W
47EE:  SUBLW  09
47F0:  BTFSS  FD8.2
47F2:  BRA    4CA8
....................          
....................       strcpy(Menus.Letra,"Clave"); 
47F4:  MOVLW  04
47F6:  MOVWF  FEA
47F8:  MOVLW  E5
47FA:  MOVWF  FE9
47FC:  MOVFF  FF2,505
4800:  BCF    FF2.7
4802:  MOVLW  00
4804:  MOVLB  0
4806:  CALL   0758
480A:  TBLRD*-
480C:  TBLRD*+
480E:  MOVF   FF5,W
4810:  MOVWF  FEE
4812:  IORLW  00
4814:  BNZ   480C
4816:  MOVLB  5
4818:  BTFSC  x05.7
481A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
481C:  MOVLW  04
481E:  MOVWF  x06
4820:  MOVLW  E5
4822:  MOVWF  x05
4824:  MOVLW  1E
4826:  MOVWF  x07
4828:  CLRF   x08
482A:  MOVLW  01
482C:  MOVWF  x09
482E:  MOVLW  02
4830:  MOVWF  x0A
4832:  MOVLB  0
4834:  CALL   1630
....................        
....................       if(unidad==1) 
4838:  MOVLB  4
483A:  DECFSZ xA3,W
483C:  BRA    489C
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
483E:  MOVFF  4D2,507
4842:  MOVLW  14
4844:  MOVLB  5
4846:  MOVWF  x08
4848:  MOVLW  1E
484A:  MOVWF  x09
484C:  MOVLW  01
484E:  MOVWF  x0A
4850:  MOVLB  0
4852:  CALL   1856
....................          displayContrasena(Contrasena[1],40,30,0); 
4856:  MOVFF  4D3,507
485A:  MOVLW  28
485C:  MOVLB  5
485E:  MOVWF  x08
4860:  MOVLW  1E
4862:  MOVWF  x09
4864:  CLRF   x0A
4866:  MOVLB  0
4868:  CALL   1856
....................          displayContrasena(Contrasena[2],60,30,0); 
486C:  MOVFF  4D4,507
4870:  MOVLW  3C
4872:  MOVLB  5
4874:  MOVWF  x08
4876:  MOVLW  1E
4878:  MOVWF  x09
487A:  CLRF   x0A
487C:  MOVLB  0
487E:  CALL   1856
....................          displayContrasena(Contrasena[3],80,30,0); 
4882:  MOVFF  4D5,507
4886:  MOVLW  50
4888:  MOVLB  5
488A:  MOVWF  x08
488C:  MOVLW  1E
488E:  MOVWF  x09
4890:  CLRF   x0A
4892:  MOVLB  0
4894:  CALL   1856
....................       } 
....................       else 
4898:  BRA    49C4
489A:  MOVLB  4
....................       { 
....................          if(unidad==2) 
489C:  MOVF   xA3,W
489E:  SUBLW  02
48A0:  BNZ   4900
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
48A2:  MOVFF  4D2,507
48A6:  MOVLW  14
48A8:  MOVLB  5
48AA:  MOVWF  x08
48AC:  MOVLW  1E
48AE:  MOVWF  x09
48B0:  CLRF   x0A
48B2:  MOVLB  0
48B4:  CALL   1856
....................             displayContrasena(Contrasena[1],40,30,1); 
48B8:  MOVFF  4D3,507
48BC:  MOVLW  28
48BE:  MOVLB  5
48C0:  MOVWF  x08
48C2:  MOVLW  1E
48C4:  MOVWF  x09
48C6:  MOVLW  01
48C8:  MOVWF  x0A
48CA:  MOVLB  0
48CC:  CALL   1856
....................             displayContrasena(Contrasena[2],60,30,0); 
48D0:  MOVFF  4D4,507
48D4:  MOVLW  3C
48D6:  MOVLB  5
48D8:  MOVWF  x08
48DA:  MOVLW  1E
48DC:  MOVWF  x09
48DE:  CLRF   x0A
48E0:  MOVLB  0
48E2:  CALL   1856
....................             displayContrasena(Contrasena[3],80,30,0); 
48E6:  MOVFF  4D5,507
48EA:  MOVLW  50
48EC:  MOVLB  5
48EE:  MOVWF  x08
48F0:  MOVLW  1E
48F2:  MOVWF  x09
48F4:  CLRF   x0A
48F6:  MOVLB  0
48F8:  CALL   1856
....................          } 
....................          else 
48FC:  BRA    49C4
48FE:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4900:  MOVF   xA3,W
4902:  SUBLW  03
4904:  BNZ   4964
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4906:  MOVFF  4D2,507
490A:  MOVLW  14
490C:  MOVLB  5
490E:  MOVWF  x08
4910:  MOVLW  1E
4912:  MOVWF  x09
4914:  CLRF   x0A
4916:  MOVLB  0
4918:  CALL   1856
....................                displayContrasena(Contrasena[1],40,30,0); 
491C:  MOVFF  4D3,507
4920:  MOVLW  28
4922:  MOVLB  5
4924:  MOVWF  x08
4926:  MOVLW  1E
4928:  MOVWF  x09
492A:  CLRF   x0A
492C:  MOVLB  0
492E:  CALL   1856
....................                displayContrasena(Contrasena[2],60,30,1); 
4932:  MOVFF  4D4,507
4936:  MOVLW  3C
4938:  MOVLB  5
493A:  MOVWF  x08
493C:  MOVLW  1E
493E:  MOVWF  x09
4940:  MOVLW  01
4942:  MOVWF  x0A
4944:  MOVLB  0
4946:  CALL   1856
....................                displayContrasena(Contrasena[3],80,30,0); 
494A:  MOVFF  4D5,507
494E:  MOVLW  50
4950:  MOVLB  5
4952:  MOVWF  x08
4954:  MOVLW  1E
4956:  MOVWF  x09
4958:  CLRF   x0A
495A:  MOVLB  0
495C:  CALL   1856
....................             } 
....................             else 
4960:  BRA    49C4
4962:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4964:  MOVF   xA3,W
4966:  SUBLW  04
4968:  BNZ   49C6
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
496A:  MOVFF  4D2,507
496E:  MOVLW  14
4970:  MOVLB  5
4972:  MOVWF  x08
4974:  MOVLW  1E
4976:  MOVWF  x09
4978:  CLRF   x0A
497A:  MOVLB  0
497C:  CALL   1856
....................                   displayContrasena(Contrasena[1],40,30,0); 
4980:  MOVFF  4D3,507
4984:  MOVLW  28
4986:  MOVLB  5
4988:  MOVWF  x08
498A:  MOVLW  1E
498C:  MOVWF  x09
498E:  CLRF   x0A
4990:  MOVLB  0
4992:  CALL   1856
....................                   displayContrasena(Contrasena[2],60,30,0); 
4996:  MOVFF  4D4,507
499A:  MOVLW  3C
499C:  MOVLB  5
499E:  MOVWF  x08
49A0:  MOVLW  1E
49A2:  MOVWF  x09
49A4:  CLRF   x0A
49A6:  MOVLB  0
49A8:  CALL   1856
....................                   displayContrasena(Contrasena[3],80,30,1); 
49AC:  MOVFF  4D5,507
49B0:  MOVLW  50
49B2:  MOVLB  5
49B4:  MOVWF  x08
49B6:  MOVLW  1E
49B8:  MOVWF  x09
49BA:  MOVLW  01
49BC:  MOVWF  x0A
49BE:  MOVLB  0
49C0:  CALL   1856
49C4:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
49C6:  BSF    F92.0
49C8:  BTFSS  F80.0
49CA:  BRA    4A34
....................       { 
....................          if(Flanco == 0) 
49CC:  BTFSC  x95.0
49CE:  BRA    4A32
....................          { 
....................             Flanco = 1;delay_ms(30); 
49D0:  BSF    x95.0
49D2:  MOVLW  1E
49D4:  MOVLB  5
49D6:  MOVWF  x06
49D8:  MOVLB  0
49DA:  CALL   0F98
....................             for(i=1;i<=4;i++) 
49DE:  MOVLW  01
49E0:  MOVLB  4
49E2:  MOVWF  xA4
49E4:  MOVF   xA4,W
49E6:  SUBLW  04
49E8:  BNC   4A32
....................             { 
....................                if(unidad==i) 
49EA:  MOVF   xA4,W
49EC:  SUBWF  xA3,W
49EE:  BNZ   4A2E
....................                { 
....................                   Contrasena[i-1]++; 
49F0:  MOVLW  01
49F2:  SUBWF  xA4,W
49F4:  CLRF   03
49F6:  ADDLW  D2
49F8:  MOVWF  FE9
49FA:  MOVLW  04
49FC:  ADDWFC 03,W
49FE:  MOVWF  FEA
4A00:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4A02:  MOVLW  01
4A04:  SUBWF  xA4,W
4A06:  CLRF   03
4A08:  ADDLW  D2
4A0A:  MOVWF  FE9
4A0C:  MOVLW  04
4A0E:  ADDWFC 03,W
4A10:  MOVWF  FEA
4A12:  BTFSC  FEF.7
4A14:  BRA    4A2E
4A16:  MOVF   FEF,W
4A18:  SUBLW  09
4A1A:  BC    4A2E
....................                   { 
....................                      Contrasena[i-1]=0; 
4A1C:  MOVLW  01
4A1E:  SUBWF  xA4,W
4A20:  CLRF   03
4A22:  ADDLW  D2
4A24:  MOVWF  FE9
4A26:  MOVLW  04
4A28:  ADDWFC 03,W
4A2A:  MOVWF  FEA
4A2C:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4A2E:  INCF   xA4,F
4A30:  BRA    49E4
....................          } 
....................       } 
....................       else 
4A32:  BRA    4A36
....................       { 
....................          Flanco = 0; 
4A34:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4A36:  BSF    F92.1
4A38:  BTFSS  F80.1
4A3A:  BRA    4AA2
....................       { 
....................          if(Flanco2 == 0) 
4A3C:  BTFSC  x95.2
4A3E:  BRA    4AA0
....................             {Flanco2 = 1;delay_ms(30); 
4A40:  BSF    x95.2
4A42:  MOVLW  1E
4A44:  MOVLB  5
4A46:  MOVWF  x06
4A48:  MOVLB  0
4A4A:  CALL   0F98
....................                for(i=1;i<=4;i++) 
4A4E:  MOVLW  01
4A50:  MOVLB  4
4A52:  MOVWF  xA4
4A54:  MOVF   xA4,W
4A56:  SUBLW  04
4A58:  BNC   4AA0
....................                { 
....................                   if(unidad==i) 
4A5A:  MOVF   xA4,W
4A5C:  SUBWF  xA3,W
4A5E:  BNZ   4A9C
....................                   {Contrasena[i-1]--;  
4A60:  MOVLW  01
4A62:  SUBWF  xA4,W
4A64:  CLRF   03
4A66:  ADDLW  D2
4A68:  MOVWF  FE9
4A6A:  MOVLW  04
4A6C:  ADDWFC 03,W
4A6E:  MOVWF  FEA
4A70:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4A72:  MOVLW  01
4A74:  SUBWF  xA4,W
4A76:  CLRF   03
4A78:  ADDLW  D2
4A7A:  MOVWF  FE9
4A7C:  MOVLW  04
4A7E:  ADDWFC 03,W
4A80:  MOVWF  FEA
4A82:  BTFSC  FEF.7
4A84:  BRA    4A88
4A86:  BRA    4A9C
....................                         {Contrasena[i-1]=9;} 
4A88:  MOVLW  01
4A8A:  SUBWF  xA4,W
4A8C:  CLRF   03
4A8E:  ADDLW  D2
4A90:  MOVWF  FE9
4A92:  MOVLW  04
4A94:  ADDWFC 03,W
4A96:  MOVWF  FEA
4A98:  MOVLW  09
4A9A:  MOVWF  FEF
....................                   } 
....................                }       
4A9C:  INCF   xA4,F
4A9E:  BRA    4A54
....................             }      
....................       } 
....................       else 
4AA0:  BRA    4AA4
....................       { 
....................          Flanco2 = 0; 
4AA2:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4AA4:  BSF    F92.2
4AA6:  BTFSS  F80.2
4AA8:  BRA    4ACC
....................       { 
....................          if(Flanco1 == 0) 
4AAA:  BTFSC  x95.1
4AAC:  BRA    4ACA
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4AAE:  BSF    x95.1
4AB0:  MOVLW  02
4AB2:  MOVLB  5
4AB4:  MOVWF  x05
4AB6:  MOVLW  96
4AB8:  MOVWF  x06
4ABA:  MOVLB  0
4ABC:  CALL   0F98
4AC0:  MOVLB  5
4AC2:  DECFSZ x05,F
4AC4:  BRA    4AB6
4AC6:  MOVLB  4
4AC8:  INCF   xA3,F
....................       } 
....................       else 
4ACA:  BRA    4ACE
....................       { 
....................          Flanco1 = 0; 
4ACC:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4ACE:  BSF    F92.3
4AD0:  BTFSS  F80.3
4AD2:  BRA    4AFC
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4AD4:  MOVLW  04
4AD6:  MOVLB  5
4AD8:  MOVWF  x05
4ADA:  MOVLW  AF
4ADC:  MOVWF  x06
4ADE:  MOVLB  0
4AE0:  CALL   0F98
4AE4:  MOVLB  5
4AE6:  DECFSZ x05,F
4AE8:  BRA    4ADA
4AEA:  MOVLW  01
4AEC:  MOVLB  4
4AEE:  MOVWF  xA2
4AF0:  MOVLB  5
4AF2:  CLRF   x06
4AF4:  MOVLB  0
4AF6:  CALL   1002
4AFA:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4AFC:  MOVF   xA3,W
4AFE:  SUBLW  04
4B00:  BTFSC  FD8.0
4B02:  BRA    4CA8
....................       {glcd_fillScreen(OFF); 
4B04:  MOVLB  5
4B06:  CLRF   x06
4B08:  MOVLB  0
4B0A:  CALL   1002
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4B0E:  MOVLB  4
4B10:  MOVF   xD6,W
4B12:  SUBWF  xD2,W
4B14:  BNZ   4BE6
4B16:  MOVF   xD7,W
4B18:  SUBWF  xD3,W
4B1A:  BNZ   4BE6
4B1C:  MOVF   xD8,W
4B1E:  SUBWF  xD4,W
4B20:  BNZ   4BE6
4B22:  MOVF   xD9,W
4B24:  SUBWF  xD5,W
4B26:  BNZ   4BE6
....................          { 
....................             glcd_fillScreen(OFF); 
4B28:  MOVLB  5
4B2A:  CLRF   x06
4B2C:  MOVLB  0
4B2E:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
4B32:  MOVLW  04
4B34:  MOVWF  FEA
4B36:  MOVLW  E5
4B38:  MOVWF  FE9
4B3A:  MOVFF  FF2,505
4B3E:  BCF    FF2.7
4B40:  MOVLW  00
4B42:  CALL   0758
4B46:  TBLRD*-
4B48:  TBLRD*+
4B4A:  MOVF   FF5,W
4B4C:  MOVWF  FEE
4B4E:  IORLW  00
4B50:  BNZ   4B48
4B52:  MOVLB  5
4B54:  BTFSC  x05.7
4B56:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4B58:  MOVLW  04
4B5A:  MOVWF  x06
4B5C:  MOVLW  E5
4B5E:  MOVWF  x05
4B60:  MOVLW  1E
4B62:  MOVWF  x07
4B64:  CLRF   x08
4B66:  CLRF   x09
4B68:  MOVLW  02
4B6A:  MOVWF  x0A
4B6C:  MOVLB  0
4B6E:  CALL   1630
....................             strcpy(Menus.Letra,"Correcta"); 
4B72:  MOVLW  04
4B74:  MOVWF  FEA
4B76:  MOVLW  E5
4B78:  MOVWF  FE9
4B7A:  MOVFF  FF2,505
4B7E:  BCF    FF2.7
4B80:  MOVLW  00
4B82:  CALL   0778
4B86:  TBLRD*-
4B88:  TBLRD*+
4B8A:  MOVF   FF5,W
4B8C:  MOVWF  FEE
4B8E:  IORLW  00
4B90:  BNZ   4B88
4B92:  MOVLB  5
4B94:  BTFSC  x05.7
4B96:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4B98:  MOVLW  04
4B9A:  MOVWF  x06
4B9C:  MOVLW  E5
4B9E:  MOVWF  x05
4BA0:  MOVLW  0F
4BA2:  MOVWF  x07
4BA4:  MOVLW  1E
4BA6:  MOVWF  x08
4BA8:  CLRF   x09
4BAA:  MOVLW  02
4BAC:  MOVWF  x0A
4BAE:  MOVLB  0
4BB0:  CALL   1630
....................             Menu=91;glcd_update();delay_ms(1000); 
4BB4:  MOVLW  5B
4BB6:  MOVLB  4
4BB8:  MOVWF  xA2
4BBA:  MOVLB  0
4BBC:  CALL   105C
4BC0:  MOVLW  04
4BC2:  MOVLB  5
4BC4:  MOVWF  x05
4BC6:  MOVLW  FA
4BC8:  MOVWF  x06
4BCA:  MOVLB  0
4BCC:  CALL   0F98
4BD0:  MOVLB  5
4BD2:  DECFSZ x05,F
4BD4:  BRA    4BC6
....................             glcd_fillScreen(OFF);unidad=1; 
4BD6:  CLRF   x06
4BD8:  MOVLB  0
4BDA:  CALL   1002
4BDE:  MOVLW  01
4BE0:  MOVLB  4
4BE2:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4BE4:  BRA    4CA8
....................          { 
....................             glcd_fillScreen(OFF); 
4BE6:  MOVLB  5
4BE8:  CLRF   x06
4BEA:  MOVLB  0
4BEC:  CALL   1002
....................             strcpy(Menus.Letra,"Clave"); 
4BF0:  MOVLW  04
4BF2:  MOVWF  FEA
4BF4:  MOVLW  E5
4BF6:  MOVWF  FE9
4BF8:  MOVFF  FF2,505
4BFC:  BCF    FF2.7
4BFE:  MOVLW  00
4C00:  CALL   0758
4C04:  TBLRD*-
4C06:  TBLRD*+
4C08:  MOVF   FF5,W
4C0A:  MOVWF  FEE
4C0C:  IORLW  00
4C0E:  BNZ   4C06
4C10:  MOVLB  5
4C12:  BTFSC  x05.7
4C14:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4C16:  MOVLW  04
4C18:  MOVWF  x06
4C1A:  MOVLW  E5
4C1C:  MOVWF  x05
4C1E:  MOVLW  1E
4C20:  MOVWF  x07
4C22:  CLRF   x08
4C24:  CLRF   x09
4C26:  MOVLW  02
4C28:  MOVWF  x0A
4C2A:  MOVLB  0
4C2C:  CALL   1630
....................             strcpy(Menus.Letra,"Incorrecta"); 
4C30:  MOVLW  04
4C32:  MOVWF  FEA
4C34:  MOVLW  E5
4C36:  MOVWF  FE9
4C38:  MOVFF  FF2,505
4C3C:  BCF    FF2.7
4C3E:  MOVLW  00
4C40:  CALL   079C
4C44:  TBLRD*-
4C46:  TBLRD*+
4C48:  MOVF   FF5,W
4C4A:  MOVWF  FEE
4C4C:  IORLW  00
4C4E:  BNZ   4C46
4C50:  MOVLB  5
4C52:  BTFSC  x05.7
4C54:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4C56:  MOVLW  04
4C58:  MOVWF  x06
4C5A:  MOVLW  E5
4C5C:  MOVWF  x05
4C5E:  CLRF   x07
4C60:  MOVLW  1E
4C62:  MOVWF  x08
4C64:  CLRF   x09
4C66:  MOVLW  02
4C68:  MOVWF  x0A
4C6A:  MOVLB  0
4C6C:  CALL   1630
....................             Menu=1;glcd_update();delay_ms(1000); 
4C70:  MOVLW  01
4C72:  MOVLB  4
4C74:  MOVWF  xA2
4C76:  MOVLB  0
4C78:  CALL   105C
4C7C:  MOVLW  04
4C7E:  MOVLB  5
4C80:  MOVWF  x05
4C82:  MOVLW  FA
4C84:  MOVWF  x06
4C86:  MOVLB  0
4C88:  CALL   0F98
4C8C:  MOVLB  5
4C8E:  DECFSZ x05,F
4C90:  BRA    4C82
....................             glcd_fillScreen(OFF);unidad=1; 
4C92:  CLRF   x06
4C94:  MOVLB  0
4C96:  CALL   1002
4C9A:  MOVLW  01
4C9C:  MOVLB  4
4C9E:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4CA0:  CLRF   xD2
4CA2:  CLRF   xD3
4CA4:  CLRF   xD4
4CA6:  CLRF   xD5
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4CA8:  MOVF   xA2,W
4CAA:  SUBLW  5B
4CAC:  BTFSS  FD8.2
4CAE:  BRA    5088
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4CB0:  MOVLW  04
4CB2:  MOVWF  FEA
4CB4:  MOVLW  E5
4CB6:  MOVWF  FE9
4CB8:  MOVFF  FF2,505
4CBC:  BCF    FF2.7
4CBE:  MOVLW  00
4CC0:  MOVLB  0
4CC2:  CALL   0BE0
4CC6:  TBLRD*-
4CC8:  TBLRD*+
4CCA:  MOVF   FF5,W
4CCC:  MOVWF  FEE
4CCE:  IORLW  00
4CD0:  BNZ   4CC8
4CD2:  MOVLB  5
4CD4:  BTFSC  x05.7
4CD6:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4CD8:  MOVLW  04
4CDA:  MOVWF  x06
4CDC:  MOVLW  E5
4CDE:  MOVWF  x05
4CE0:  CLRF   x07
4CE2:  CLRF   x08
4CE4:  MOVLW  01
4CE6:  MOVWF  x09
4CE8:  MOVLW  02
4CEA:  MOVWF  x0A
4CEC:  MOVLB  0
4CEE:  CALL   1630
....................        
....................       if(unidad==1) 
4CF2:  MOVLB  4
4CF4:  DECFSZ xA3,W
4CF6:  BRA    4D56
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4CF8:  MOVFF  4D6,507
4CFC:  MOVLW  14
4CFE:  MOVLB  5
4D00:  MOVWF  x08
4D02:  MOVLW  1E
4D04:  MOVWF  x09
4D06:  MOVLW  01
4D08:  MOVWF  x0A
4D0A:  MOVLB  0
4D0C:  CALL   1856
....................          displayContrasena(Password[1],40,30,0); 
4D10:  MOVFF  4D7,507
4D14:  MOVLW  28
4D16:  MOVLB  5
4D18:  MOVWF  x08
4D1A:  MOVLW  1E
4D1C:  MOVWF  x09
4D1E:  CLRF   x0A
4D20:  MOVLB  0
4D22:  CALL   1856
....................          displayContrasena(Password[2],60,30,0); 
4D26:  MOVFF  4D8,507
4D2A:  MOVLW  3C
4D2C:  MOVLB  5
4D2E:  MOVWF  x08
4D30:  MOVLW  1E
4D32:  MOVWF  x09
4D34:  CLRF   x0A
4D36:  MOVLB  0
4D38:  CALL   1856
....................          displayContrasena(Password[3],80,30,0); 
4D3C:  MOVFF  4D9,507
4D40:  MOVLW  50
4D42:  MOVLB  5
4D44:  MOVWF  x08
4D46:  MOVLW  1E
4D48:  MOVWF  x09
4D4A:  CLRF   x0A
4D4C:  MOVLB  0
4D4E:  CALL   1856
....................       } 
....................       else 
4D52:  BRA    4E7E
4D54:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4D56:  MOVF   xA3,W
4D58:  SUBLW  02
4D5A:  BNZ   4DBA
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4D5C:  MOVFF  4D6,507
4D60:  MOVLW  14
4D62:  MOVLB  5
4D64:  MOVWF  x08
4D66:  MOVLW  1E
4D68:  MOVWF  x09
4D6A:  CLRF   x0A
4D6C:  MOVLB  0
4D6E:  CALL   1856
....................             displayContrasena(Password[1],40,30,1); 
4D72:  MOVFF  4D7,507
4D76:  MOVLW  28
4D78:  MOVLB  5
4D7A:  MOVWF  x08
4D7C:  MOVLW  1E
4D7E:  MOVWF  x09
4D80:  MOVLW  01
4D82:  MOVWF  x0A
4D84:  MOVLB  0
4D86:  CALL   1856
....................             displayContrasena(Password[2],60,30,0); 
4D8A:  MOVFF  4D8,507
4D8E:  MOVLW  3C
4D90:  MOVLB  5
4D92:  MOVWF  x08
4D94:  MOVLW  1E
4D96:  MOVWF  x09
4D98:  CLRF   x0A
4D9A:  MOVLB  0
4D9C:  CALL   1856
....................             displayContrasena(Password[3],80,30,0); 
4DA0:  MOVFF  4D9,507
4DA4:  MOVLW  50
4DA6:  MOVLB  5
4DA8:  MOVWF  x08
4DAA:  MOVLW  1E
4DAC:  MOVWF  x09
4DAE:  CLRF   x0A
4DB0:  MOVLB  0
4DB2:  CALL   1856
....................          } 
....................          else 
4DB6:  BRA    4E7E
4DB8:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4DBA:  MOVF   xA3,W
4DBC:  SUBLW  03
4DBE:  BNZ   4E1E
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4DC0:  MOVFF  4D6,507
4DC4:  MOVLW  14
4DC6:  MOVLB  5
4DC8:  MOVWF  x08
4DCA:  MOVLW  1E
4DCC:  MOVWF  x09
4DCE:  CLRF   x0A
4DD0:  MOVLB  0
4DD2:  CALL   1856
....................                displayContrasena(Password[1],40,30,0); 
4DD6:  MOVFF  4D7,507
4DDA:  MOVLW  28
4DDC:  MOVLB  5
4DDE:  MOVWF  x08
4DE0:  MOVLW  1E
4DE2:  MOVWF  x09
4DE4:  CLRF   x0A
4DE6:  MOVLB  0
4DE8:  CALL   1856
....................                displayContrasena(Password[2],60,30,1); 
4DEC:  MOVFF  4D8,507
4DF0:  MOVLW  3C
4DF2:  MOVLB  5
4DF4:  MOVWF  x08
4DF6:  MOVLW  1E
4DF8:  MOVWF  x09
4DFA:  MOVLW  01
4DFC:  MOVWF  x0A
4DFE:  MOVLB  0
4E00:  CALL   1856
....................                displayContrasena(Password[3],80,30,0); 
4E04:  MOVFF  4D9,507
4E08:  MOVLW  50
4E0A:  MOVLB  5
4E0C:  MOVWF  x08
4E0E:  MOVLW  1E
4E10:  MOVWF  x09
4E12:  CLRF   x0A
4E14:  MOVLB  0
4E16:  CALL   1856
....................             } 
....................             else 
4E1A:  BRA    4E7E
4E1C:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4E1E:  MOVF   xA3,W
4E20:  SUBLW  04
4E22:  BNZ   4E80
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4E24:  MOVFF  4D6,507
4E28:  MOVLW  14
4E2A:  MOVLB  5
4E2C:  MOVWF  x08
4E2E:  MOVLW  1E
4E30:  MOVWF  x09
4E32:  CLRF   x0A
4E34:  MOVLB  0
4E36:  CALL   1856
....................                   displayContrasena(Password[1],40,30,0); 
4E3A:  MOVFF  4D7,507
4E3E:  MOVLW  28
4E40:  MOVLB  5
4E42:  MOVWF  x08
4E44:  MOVLW  1E
4E46:  MOVWF  x09
4E48:  CLRF   x0A
4E4A:  MOVLB  0
4E4C:  CALL   1856
....................                   displayContrasena(Password[2],60,30,0); 
4E50:  MOVFF  4D8,507
4E54:  MOVLW  3C
4E56:  MOVLB  5
4E58:  MOVWF  x08
4E5A:  MOVLW  1E
4E5C:  MOVWF  x09
4E5E:  CLRF   x0A
4E60:  MOVLB  0
4E62:  CALL   1856
....................                   displayContrasena(Password[3],80,30,1); 
4E66:  MOVFF  4D9,507
4E6A:  MOVLW  50
4E6C:  MOVLB  5
4E6E:  MOVWF  x08
4E70:  MOVLW  1E
4E72:  MOVWF  x09
4E74:  MOVLW  01
4E76:  MOVWF  x0A
4E78:  MOVLB  0
4E7A:  CALL   1856
4E7E:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4E80:  BSF    F92.0
4E82:  BTFSS  F80.0
4E84:  BRA    4EEE
....................       { 
....................          if(Flanco == 0) 
4E86:  BTFSC  x95.0
4E88:  BRA    4EEC
....................          { 
....................             Flanco = 1;delay_ms(30); 
4E8A:  BSF    x95.0
4E8C:  MOVLW  1E
4E8E:  MOVLB  5
4E90:  MOVWF  x06
4E92:  MOVLB  0
4E94:  CALL   0F98
....................             for(i=1;i<=4;i++) 
4E98:  MOVLW  01
4E9A:  MOVLB  4
4E9C:  MOVWF  xA4
4E9E:  MOVF   xA4,W
4EA0:  SUBLW  04
4EA2:  BNC   4EEC
....................             { 
....................                if(unidad==i) 
4EA4:  MOVF   xA4,W
4EA6:  SUBWF  xA3,W
4EA8:  BNZ   4EE8
....................                { 
....................                   Password[i-1]++; 
4EAA:  MOVLW  01
4EAC:  SUBWF  xA4,W
4EAE:  CLRF   03
4EB0:  ADDLW  D6
4EB2:  MOVWF  FE9
4EB4:  MOVLW  04
4EB6:  ADDWFC 03,W
4EB8:  MOVWF  FEA
4EBA:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4EBC:  MOVLW  01
4EBE:  SUBWF  xA4,W
4EC0:  CLRF   03
4EC2:  ADDLW  D6
4EC4:  MOVWF  FE9
4EC6:  MOVLW  04
4EC8:  ADDWFC 03,W
4ECA:  MOVWF  FEA
4ECC:  BTFSC  FEF.7
4ECE:  BRA    4EE8
4ED0:  MOVF   FEF,W
4ED2:  SUBLW  09
4ED4:  BC    4EE8
....................                   { 
....................                      Password[i-1]=0; 
4ED6:  MOVLW  01
4ED8:  SUBWF  xA4,W
4EDA:  CLRF   03
4EDC:  ADDLW  D6
4EDE:  MOVWF  FE9
4EE0:  MOVLW  04
4EE2:  ADDWFC 03,W
4EE4:  MOVWF  FEA
4EE6:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4EE8:  INCF   xA4,F
4EEA:  BRA    4E9E
....................          } 
....................       } 
....................       else 
4EEC:  BRA    4EF0
....................       { 
....................          Flanco = 0; 
4EEE:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4EF0:  BSF    F92.1
4EF2:  BTFSS  F80.1
4EF4:  BRA    4F5C
....................       { 
....................          if(Flanco2 == 0) 
4EF6:  BTFSC  x95.2
4EF8:  BRA    4F5A
....................             {Flanco2 = 1;delay_ms(30); 
4EFA:  BSF    x95.2
4EFC:  MOVLW  1E
4EFE:  MOVLB  5
4F00:  MOVWF  x06
4F02:  MOVLB  0
4F04:  CALL   0F98
....................                for(i=1;i<=4;i++) 
4F08:  MOVLW  01
4F0A:  MOVLB  4
4F0C:  MOVWF  xA4
4F0E:  MOVF   xA4,W
4F10:  SUBLW  04
4F12:  BNC   4F5A
....................                { 
....................                   if(unidad==i) 
4F14:  MOVF   xA4,W
4F16:  SUBWF  xA3,W
4F18:  BNZ   4F56
....................                   { 
....................                      Password[i-1]--; 
4F1A:  MOVLW  01
4F1C:  SUBWF  xA4,W
4F1E:  CLRF   03
4F20:  ADDLW  D6
4F22:  MOVWF  FE9
4F24:  MOVLW  04
4F26:  ADDWFC 03,W
4F28:  MOVWF  FEA
4F2A:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4F2C:  MOVLW  01
4F2E:  SUBWF  xA4,W
4F30:  CLRF   03
4F32:  ADDLW  D6
4F34:  MOVWF  FE9
4F36:  MOVLW  04
4F38:  ADDWFC 03,W
4F3A:  MOVWF  FEA
4F3C:  BTFSC  FEF.7
4F3E:  BRA    4F42
4F40:  BRA    4F56
....................                      { 
....................                         Password[i-1]=9; 
4F42:  MOVLW  01
4F44:  SUBWF  xA4,W
4F46:  CLRF   03
4F48:  ADDLW  D6
4F4A:  MOVWF  FE9
4F4C:  MOVLW  04
4F4E:  ADDWFC 03,W
4F50:  MOVWF  FEA
4F52:  MOVLW  09
4F54:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
4F56:  INCF   xA4,F
4F58:  BRA    4F0E
....................             }      
....................       } 
....................       else 
4F5A:  BRA    4F5E
....................       { 
....................          Flanco2 = 0; 
4F5C:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4F5E:  BSF    F92.2
4F60:  BTFSS  F80.2
4F62:  BRA    4F86
....................       { 
....................          if(Flanco1 == 0) 
4F64:  BTFSC  x95.1
4F66:  BRA    4F84
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4F68:  BSF    x95.1
4F6A:  MOVLW  02
4F6C:  MOVLB  5
4F6E:  MOVWF  x05
4F70:  MOVLW  96
4F72:  MOVWF  x06
4F74:  MOVLB  0
4F76:  CALL   0F98
4F7A:  MOVLB  5
4F7C:  DECFSZ x05,F
4F7E:  BRA    4F70
4F80:  MOVLB  4
4F82:  INCF   xA3,F
....................       } 
....................       else 
4F84:  BRA    4F88
....................       { 
....................          Flanco1 = 0; 
4F86:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4F88:  BSF    F92.3
4F8A:  BTFSS  F80.3
4F8C:  BRA    4FB6
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4F8E:  MOVLW  04
4F90:  MOVLB  5
4F92:  MOVWF  x05
4F94:  MOVLW  AF
4F96:  MOVWF  x06
4F98:  MOVLB  0
4F9A:  CALL   0F98
4F9E:  MOVLB  5
4FA0:  DECFSZ x05,F
4FA2:  BRA    4F94
4FA4:  MOVLW  01
4FA6:  MOVLB  4
4FA8:  MOVWF  xA2
4FAA:  MOVLB  5
4FAC:  CLRF   x06
4FAE:  MOVLB  0
4FB0:  CALL   1002
4FB4:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4FB6:  MOVF   xA3,W
4FB8:  SUBLW  04
4FBA:  BC    5088
....................       { 
....................          Opcion=1;unidad=1; 
4FBC:  MOVLW  01
4FBE:  MOVWF  xA7
4FC0:  MOVWF  xA3
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
4FC2:  MOVLW  0A
4FC4:  MOVWF  FA9
4FC6:  MOVFF  4D6,FA8
4FCA:  BCF    FA6.6
4FCC:  BCF    FA6.7
4FCE:  BSF    FA6.2
4FD0:  MOVF   FF2,W
4FD2:  MOVWF  00
4FD4:  BCF    FF2.7
4FD6:  MOVLB  F
4FD8:  MOVLW  55
4FDA:  MOVWF  FA7
4FDC:  MOVLW  AA
4FDE:  MOVWF  FA7
4FE0:  BSF    FA6.1
4FE2:  BTFSC  FA6.1
4FE4:  BRA    4FE2
4FE6:  BCF    FA6.2
4FE8:  MOVF   00,W
4FEA:  IORWF  FF2,F
4FEC:  MOVLW  0B
4FEE:  MOVWF  FA9
4FF0:  MOVFF  4D7,FA8
4FF4:  BCF    FA6.6
4FF6:  BCF    FA6.7
4FF8:  BSF    FA6.2
4FFA:  MOVF   FF2,W
4FFC:  MOVWF  00
4FFE:  BCF    FF2.7
5000:  MOVLW  55
5002:  MOVWF  FA7
5004:  MOVLW  AA
5006:  MOVWF  FA7
5008:  BSF    FA6.1
500A:  BTFSC  FA6.1
500C:  BRA    500A
500E:  BCF    FA6.2
5010:  MOVF   00,W
5012:  IORWF  FF2,F
5014:  MOVLW  0C
5016:  MOVWF  FA9
5018:  MOVFF  4D8,FA8
501C:  BCF    FA6.6
501E:  BCF    FA6.7
5020:  BSF    FA6.2
5022:  MOVF   FF2,W
5024:  MOVWF  00
5026:  BCF    FF2.7
5028:  MOVLW  55
502A:  MOVWF  FA7
502C:  MOVLW  AA
502E:  MOVWF  FA7
5030:  BSF    FA6.1
5032:  BTFSC  FA6.1
5034:  BRA    5032
5036:  BCF    FA6.2
5038:  MOVF   00,W
503A:  IORWF  FF2,F
503C:  MOVLW  0D
503E:  MOVWF  FA9
5040:  MOVFF  4D9,FA8
5044:  BCF    FA6.6
5046:  BCF    FA6.7
5048:  BSF    FA6.2
504A:  MOVF   FF2,W
504C:  MOVWF  00
504E:  BCF    FF2.7
5050:  MOVLW  55
5052:  MOVWF  FA7
5054:  MOVLW  AA
5056:  MOVWF  FA7
5058:  BSF    FA6.1
505A:  BTFSC  FA6.1
505C:  BRA    505A
505E:  BCF    FA6.2
5060:  MOVF   00,W
5062:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
5064:  MOVLW  04
5066:  MOVLB  5
5068:  MOVWF  x05
506A:  MOVLW  FA
506C:  MOVWF  x06
506E:  MOVLB  0
5070:  CALL   0F98
5074:  MOVLB  5
5076:  DECFSZ x05,F
5078:  BRA    506A
507A:  CLRF   x06
507C:  MOVLB  0
507E:  CALL   1002
5082:  MOVLW  01
5084:  MOVLB  4
5086:  MOVWF  xA2
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
5088:  MOVF   xA2,W
508A:  SUBLW  0B
508C:  BTFSS  FD8.2
508E:  BRA    5390
....................       
....................       if(visual==1) 
5090:  BTFSS  x95.4
5092:  BRA    521E
....................       { 
....................          if(unidad<1) 
5094:  MOVF   xA3,F
5096:  BNZ   509C
....................          {unidad=4;} 
5098:  MOVLW  04
509A:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
509C:  MOVLW  04
509E:  MOVWF  FEA
50A0:  MOVLW  E5
50A2:  MOVWF  FE9
50A4:  MOVFF  FF2,505
50A8:  BCF    FF2.7
50AA:  MOVLW  00
50AC:  MOVLB  0
50AE:  CALL   0C06
50B2:  TBLRD*-
50B4:  TBLRD*+
50B6:  MOVF   FF5,W
50B8:  MOVWF  FEE
50BA:  IORLW  00
50BC:  BNZ   50B4
50BE:  MOVLB  5
50C0:  BTFSC  x05.7
50C2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
50C4:  MOVLW  04
50C6:  MOVWF  x06
50C8:  MOVLW  E5
50CA:  MOVWF  x05
50CC:  CLRF   x07
50CE:  CLRF   x08
50D0:  MOVLW  01
50D2:  MOVWF  x09
50D4:  MOVLW  02
50D6:  MOVWF  x0A
50D8:  MOVLB  0
50DA:  CALL   1630
....................           
....................          if(unidad==4) 
50DE:  MOVLB  4
50E0:  MOVF   xA3,W
50E2:  SUBLW  04
50E4:  BNZ   5104
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
50E6:  MOVFF  4C9,506
50EA:  MOVLW  14
50EC:  MOVLB  5
50EE:  MOVWF  x07
50F0:  MOVLW  28
50F2:  MOVWF  x08
50F4:  MOVLW  01
50F6:  MOVWF  x09
50F8:  MOVLW  02
50FA:  MOVWF  x0A
50FC:  MOVLB  0
50FE:  CALL   242A
....................          else 
5102:  BRA    511E
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
5104:  MOVFF  4C9,506
5108:  MOVLW  14
510A:  MOVLB  5
510C:  MOVWF  x07
510E:  MOVLW  28
5110:  MOVWF  x08
5112:  CLRF   x09
5114:  MOVLW  02
5116:  MOVWF  x0A
5118:  MOVLB  0
511A:  CALL   242A
....................           
....................          if(unidad==3) 
511E:  MOVLB  4
5120:  MOVF   xA3,W
5122:  SUBLW  03
5124:  BNZ   5142
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
5126:  MOVFF  4C8,506
512A:  MOVLW  28
512C:  MOVLB  5
512E:  MOVWF  x07
5130:  MOVWF  x08
5132:  MOVLW  01
5134:  MOVWF  x09
5136:  MOVLW  02
5138:  MOVWF  x0A
513A:  MOVLB  0
513C:  CALL   242A
....................          else 
5140:  BRA    515A
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
5142:  MOVFF  4C8,506
5146:  MOVLW  28
5148:  MOVLB  5
514A:  MOVWF  x07
514C:  MOVWF  x08
514E:  CLRF   x09
5150:  MOVLW  02
5152:  MOVWF  x0A
5154:  MOVLB  0
5156:  CALL   242A
....................           
....................          if(unidad==2) 
515A:  MOVLB  4
515C:  MOVF   xA3,W
515E:  SUBLW  02
5160:  BNZ   5180
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
5162:  MOVFF  4C7,506
5166:  MOVLW  46
5168:  MOVLB  5
516A:  MOVWF  x07
516C:  MOVLW  28
516E:  MOVWF  x08
5170:  MOVLW  01
5172:  MOVWF  x09
5174:  MOVLW  02
5176:  MOVWF  x0A
5178:  MOVLB  0
517A:  CALL   242A
....................          else 
517E:  BRA    519A
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
5180:  MOVFF  4C7,506
5184:  MOVLW  46
5186:  MOVLB  5
5188:  MOVWF  x07
518A:  MOVLW  28
518C:  MOVWF  x08
518E:  CLRF   x09
5190:  MOVLW  02
5192:  MOVWF  x0A
5194:  MOVLB  0
5196:  CALL   242A
....................           
....................          if(unidad==1) 
519A:  MOVLB  4
519C:  DECFSZ xA3,W
519E:  BRA    51BE
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
51A0:  MOVFF  4C6,506
51A4:  MOVLW  5A
51A6:  MOVLB  5
51A8:  MOVWF  x07
51AA:  MOVLW  28
51AC:  MOVWF  x08
51AE:  MOVLW  01
51B0:  MOVWF  x09
51B2:  MOVLW  02
51B4:  MOVWF  x0A
51B6:  MOVLB  0
51B8:  CALL   242A
....................          else 
51BC:  BRA    51D8
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
51BE:  MOVFF  4C6,506
51C2:  MOVLW  5A
51C4:  MOVLB  5
51C6:  MOVWF  x07
51C8:  MOVLW  28
51CA:  MOVWF  x08
51CC:  CLRF   x09
51CE:  MOVLW  02
51D0:  MOVWF  x0A
51D2:  MOVLB  0
51D4:  CALL   242A
....................           
....................          strcpy(Menus.Letra,":"); 
51D8:  MOVLW  04
51DA:  MOVWF  FEA
51DC:  MOVLW  E5
51DE:  MOVWF  FE9
51E0:  MOVFF  FF2,505
51E4:  BCF    FF2.7
51E6:  MOVLW  00
51E8:  CALL   06BE
51EC:  TBLRD*-
51EE:  TBLRD*+
51F0:  MOVF   FF5,W
51F2:  MOVWF  FEE
51F4:  IORLW  00
51F6:  BNZ   51EE
51F8:  MOVLB  5
51FA:  BTFSC  x05.7
51FC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
51FE:  MOVLW  04
5200:  MOVWF  x06
5202:  MOVLW  E5
5204:  MOVWF  x05
5206:  MOVLW  3C
5208:  MOVWF  x07
520A:  MOVLW  2A
520C:  MOVWF  x08
520E:  MOVLW  02
5210:  MOVWF  x09
5212:  MOVWF  x0A
5214:  MOVLB  0
5216:  CALL   1630
....................           
....................          visual=0; 
521A:  MOVLB  4
521C:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
521E:  BSF    F92.0
5220:  BTFSS  F80.0
5222:  BRA    5260
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
5224:  MOVLW  01
5226:  SUBWF  xA3,W
5228:  CLRF   03
522A:  ADDLW  C6
522C:  MOVWF  FE9
522E:  MOVLW  04
5230:  ADDWFC 03,W
5232:  MOVWF  FEA
5234:  BTFSC  FEF.7
5236:  BRA    523E
5238:  MOVF   FEF,W
523A:  SUBLW  08
523C:  BNC   5260
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
523E:  MOVLW  1E
5240:  MOVLB  5
5242:  MOVWF  x06
5244:  MOVLB  0
5246:  CALL   0F98
524A:  MOVLW  01
524C:  MOVLB  4
524E:  SUBWF  xA3,W
5250:  CLRF   03
5252:  ADDLW  C6
5254:  MOVWF  FE9
5256:  MOVLW  04
5258:  ADDWFC 03,W
525A:  MOVWF  FEA
525C:  INCF   FEF,F
525E:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5260:  BSF    F92.1
5262:  BTFSS  F80.1
5264:  BRA    52A2
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
5266:  MOVLW  01
5268:  SUBWF  xA3,W
526A:  CLRF   03
526C:  ADDLW  C6
526E:  MOVWF  FE9
5270:  MOVLW  04
5272:  ADDWFC 03,W
5274:  MOVWF  FEA
5276:  BTFSC  FEF.7
5278:  BRA    52A2
527A:  MOVF   FEF,W
527C:  SUBLW  00
527E:  BC    52A2
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
5280:  MOVLW  1E
5282:  MOVLB  5
5284:  MOVWF  x06
5286:  MOVLB  0
5288:  CALL   0F98
528C:  MOVLW  01
528E:  MOVLB  4
5290:  SUBWF  xA3,W
5292:  CLRF   03
5294:  ADDLW  C6
5296:  MOVWF  FE9
5298:  MOVLW  04
529A:  ADDWFC 03,W
529C:  MOVWF  FEA
529E:  DECF   FEF,F
52A0:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
52A2:  BSF    F92.2
52A4:  BTFSS  F80.2
52A6:  BRA    52BA
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
52A8:  MOVLW  1E
52AA:  MOVLB  5
52AC:  MOVWF  x06
52AE:  MOVLB  0
52B0:  CALL   0F98
52B4:  MOVLB  4
52B6:  DECF   xA3,F
52B8:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
52BA:  BSF    F92.3
52BC:  BTFSS  F80.3
52BE:  BRA    5390
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
52C0:  MOVLW  04
52C2:  MOVLB  5
52C4:  MOVWF  x05
52C6:  MOVLW  AF
52C8:  MOVWF  x06
52CA:  MOVLB  0
52CC:  CALL   0F98
52D0:  MOVLB  5
52D2:  DECFSZ x05,F
52D4:  BRA    52C6
52D6:  MOVLW  08
52D8:  MOVLB  4
52DA:  MOVWF  xA2
52DC:  MOVLB  5
52DE:  CLRF   x06
52E0:  MOVLB  0
52E2:  CALL   1002
52E6:  MOVLW  01
52E8:  MOVLB  4
52EA:  MOVWF  xA7
52EC:  BSF    x95.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
52EE:  CLRF   FA9
52F0:  MOVFF  4C6,FA8
52F4:  BCF    FA6.6
52F6:  BCF    FA6.7
52F8:  BSF    FA6.2
52FA:  MOVF   FF2,W
52FC:  MOVWF  00
52FE:  BCF    FF2.7
5300:  MOVLB  F
5302:  MOVLW  55
5304:  MOVWF  FA7
5306:  MOVLW  AA
5308:  MOVWF  FA7
530A:  BSF    FA6.1
530C:  BTFSC  FA6.1
530E:  BRA    530C
5310:  BCF    FA6.2
5312:  MOVF   00,W
5314:  IORWF  FF2,F
5316:  MOVLW  01
5318:  MOVWF  FA9
531A:  MOVFF  4C7,FA8
531E:  BCF    FA6.6
5320:  BCF    FA6.7
5322:  BSF    FA6.2
5324:  MOVF   FF2,W
5326:  MOVWF  00
5328:  BCF    FF2.7
532A:  MOVLW  55
532C:  MOVWF  FA7
532E:  MOVLW  AA
5330:  MOVWF  FA7
5332:  BSF    FA6.1
5334:  BTFSC  FA6.1
5336:  BRA    5334
5338:  BCF    FA6.2
533A:  MOVF   00,W
533C:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
533E:  MOVLW  02
5340:  MOVWF  FA9
5342:  MOVFF  4C8,FA8
5346:  BCF    FA6.6
5348:  BCF    FA6.7
534A:  BSF    FA6.2
534C:  MOVFF  FF2,00
5350:  BCF    FF2.7
5352:  MOVLW  55
5354:  MOVWF  FA7
5356:  MOVLW  AA
5358:  MOVWF  FA7
535A:  BSF    FA6.1
535C:  BTFSC  FA6.1
535E:  BRA    535C
5360:  BCF    FA6.2
5362:  MOVF   00,W
5364:  IORWF  FF2,F
5366:  MOVLW  03
5368:  MOVWF  FA9
536A:  MOVFF  4C9,FA8
536E:  BCF    FA6.6
5370:  BCF    FA6.7
5372:  BSF    FA6.2
5374:  MOVFF  FF2,00
5378:  BCF    FF2.7
537A:  MOVLW  55
537C:  MOVWF  FA7
537E:  MOVLW  AA
5380:  MOVWF  FA7
5382:  BSF    FA6.1
5384:  BTFSC  FA6.1
5386:  BRA    5384
5388:  BCF    FA6.2
538A:  MOVF   00,W
538C:  IORWF  FF2,F
538E:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
5390:  MOVF   xA2,W
5392:  SUBLW  0C
5394:  BTFSS  FD8.2
5396:  BRA    569A
....................       
....................       if(visual==1) 
5398:  BTFSS  x95.4
539A:  BRA    5526
....................       { 
....................          if(unidad<1) 
539C:  MOVF   xA3,F
539E:  BNZ   53A4
....................          {unidad=4;} 
53A0:  MOVLW  04
53A2:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra," Secado"); 
53A4:  MOVLW  04
53A6:  MOVWF  FEA
53A8:  MOVLW  E5
53AA:  MOVWF  FE9
53AC:  MOVFF  FF2,505
53B0:  BCF    FF2.7
53B2:  MOVLW  00
53B4:  MOVLB  0
53B6:  CALL   0C2A
53BA:  TBLRD*-
53BC:  TBLRD*+
53BE:  MOVF   FF5,W
53C0:  MOVWF  FEE
53C2:  IORLW  00
53C4:  BNZ   53BC
53C6:  MOVLB  5
53C8:  BTFSC  x05.7
53CA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
53CC:  MOVLW  04
53CE:  MOVWF  x06
53D0:  MOVLW  E5
53D2:  MOVWF  x05
53D4:  CLRF   x07
53D6:  CLRF   x08
53D8:  MOVLW  01
53DA:  MOVWF  x09
53DC:  MOVLW  02
53DE:  MOVWF  x0A
53E0:  MOVLB  0
53E2:  CALL   1630
....................           
....................          if(unidad==4) 
53E6:  MOVLB  4
53E8:  MOVF   xA3,W
53EA:  SUBLW  04
53EC:  BNZ   540C
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
53EE:  MOVFF  4D1,506
53F2:  MOVLW  14
53F4:  MOVLB  5
53F6:  MOVWF  x07
53F8:  MOVLW  28
53FA:  MOVWF  x08
53FC:  MOVLW  01
53FE:  MOVWF  x09
5400:  MOVLW  02
5402:  MOVWF  x0A
5404:  MOVLB  0
5406:  CALL   242A
....................          else 
540A:  BRA    5426
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
540C:  MOVFF  4D1,506
5410:  MOVLW  14
5412:  MOVLB  5
5414:  MOVWF  x07
5416:  MOVLW  28
5418:  MOVWF  x08
541A:  CLRF   x09
541C:  MOVLW  02
541E:  MOVWF  x0A
5420:  MOVLB  0
5422:  CALL   242A
....................           
....................          if(unidad==3) 
5426:  MOVLB  4
5428:  MOVF   xA3,W
542A:  SUBLW  03
542C:  BNZ   544A
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
542E:  MOVFF  4D0,506
5432:  MOVLW  28
5434:  MOVLB  5
5436:  MOVWF  x07
5438:  MOVWF  x08
543A:  MOVLW  01
543C:  MOVWF  x09
543E:  MOVLW  02
5440:  MOVWF  x0A
5442:  MOVLB  0
5444:  CALL   242A
....................          else 
5448:  BRA    5462
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
544A:  MOVFF  4D0,506
544E:  MOVLW  28
5450:  MOVLB  5
5452:  MOVWF  x07
5454:  MOVWF  x08
5456:  CLRF   x09
5458:  MOVLW  02
545A:  MOVWF  x0A
545C:  MOVLB  0
545E:  CALL   242A
....................           
....................          if(unidad==2) 
5462:  MOVLB  4
5464:  MOVF   xA3,W
5466:  SUBLW  02
5468:  BNZ   5488
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
546A:  MOVFF  4CF,506
546E:  MOVLW  46
5470:  MOVLB  5
5472:  MOVWF  x07
5474:  MOVLW  28
5476:  MOVWF  x08
5478:  MOVLW  01
547A:  MOVWF  x09
547C:  MOVLW  02
547E:  MOVWF  x0A
5480:  MOVLB  0
5482:  CALL   242A
....................          else 
5486:  BRA    54A2
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
5488:  MOVFF  4CF,506
548C:  MOVLW  46
548E:  MOVLB  5
5490:  MOVWF  x07
5492:  MOVLW  28
5494:  MOVWF  x08
5496:  CLRF   x09
5498:  MOVLW  02
549A:  MOVWF  x0A
549C:  MOVLB  0
549E:  CALL   242A
....................           
....................          if(unidad==1) 
54A2:  MOVLB  4
54A4:  DECFSZ xA3,W
54A6:  BRA    54C6
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
54A8:  MOVFF  4CE,506
54AC:  MOVLW  5A
54AE:  MOVLB  5
54B0:  MOVWF  x07
54B2:  MOVLW  28
54B4:  MOVWF  x08
54B6:  MOVLW  01
54B8:  MOVWF  x09
54BA:  MOVLW  02
54BC:  MOVWF  x0A
54BE:  MOVLB  0
54C0:  CALL   242A
....................          else 
54C4:  BRA    54E0
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
54C6:  MOVFF  4CE,506
54CA:  MOVLW  5A
54CC:  MOVLB  5
54CE:  MOVWF  x07
54D0:  MOVLW  28
54D2:  MOVWF  x08
54D4:  CLRF   x09
54D6:  MOVLW  02
54D8:  MOVWF  x0A
54DA:  MOVLB  0
54DC:  CALL   242A
....................           
....................          strcpy(Menus.Letra,":"); 
54E0:  MOVLW  04
54E2:  MOVWF  FEA
54E4:  MOVLW  E5
54E6:  MOVWF  FE9
54E8:  MOVFF  FF2,505
54EC:  BCF    FF2.7
54EE:  MOVLW  00
54F0:  CALL   06BE
54F4:  TBLRD*-
54F6:  TBLRD*+
54F8:  MOVF   FF5,W
54FA:  MOVWF  FEE
54FC:  IORLW  00
54FE:  BNZ   54F6
5500:  MOVLB  5
5502:  BTFSC  x05.7
5504:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
5506:  MOVLW  04
5508:  MOVWF  x06
550A:  MOVLW  E5
550C:  MOVWF  x05
550E:  MOVLW  3C
5510:  MOVWF  x07
5512:  MOVLW  2A
5514:  MOVWF  x08
5516:  MOVLW  02
5518:  MOVWF  x09
551A:  MOVWF  x0A
551C:  MOVLB  0
551E:  CALL   1630
....................           
....................          visual=0; 
5522:  MOVLB  4
5524:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5526:  BSF    F92.0
5528:  BTFSS  F80.0
552A:  BRA    5568
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
552C:  MOVLW  01
552E:  SUBWF  xA3,W
5530:  CLRF   03
5532:  ADDLW  CE
5534:  MOVWF  FE9
5536:  MOVLW  04
5538:  ADDWFC 03,W
553A:  MOVWF  FEA
553C:  BTFSC  FEF.7
553E:  BRA    5546
5540:  MOVF   FEF,W
5542:  SUBLW  08
5544:  BNC   5568
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
5546:  MOVLW  1E
5548:  MOVLB  5
554A:  MOVWF  x06
554C:  MOVLB  0
554E:  CALL   0F98
5552:  MOVLW  01
5554:  MOVLB  4
5556:  SUBWF  xA3,W
5558:  CLRF   03
555A:  ADDLW  CE
555C:  MOVWF  FE9
555E:  MOVLW  04
5560:  ADDWFC 03,W
5562:  MOVWF  FEA
5564:  INCF   FEF,F
5566:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5568:  BSF    F92.1
556A:  BTFSS  F80.1
556C:  BRA    55AA
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
556E:  MOVLW  01
5570:  SUBWF  xA3,W
5572:  CLRF   03
5574:  ADDLW  CE
5576:  MOVWF  FE9
5578:  MOVLW  04
557A:  ADDWFC 03,W
557C:  MOVWF  FEA
557E:  BTFSC  FEF.7
5580:  BRA    55AA
5582:  MOVF   FEF,W
5584:  SUBLW  00
5586:  BC    55AA
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
5588:  MOVLW  1E
558A:  MOVLB  5
558C:  MOVWF  x06
558E:  MOVLB  0
5590:  CALL   0F98
5594:  MOVLW  01
5596:  MOVLB  4
5598:  SUBWF  xA3,W
559A:  CLRF   03
559C:  ADDLW  CE
559E:  MOVWF  FE9
55A0:  MOVLW  04
55A2:  ADDWFC 03,W
55A4:  MOVWF  FEA
55A6:  DECF   FEF,F
55A8:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
55AA:  BSF    F92.2
55AC:  BTFSS  F80.2
55AE:  BRA    55C2
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
55B0:  MOVLW  1E
55B2:  MOVLB  5
55B4:  MOVWF  x06
55B6:  MOVLB  0
55B8:  CALL   0F98
55BC:  MOVLB  4
55BE:  DECF   xA3,F
55C0:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
55C2:  BSF    F92.3
55C4:  BTFSS  F80.3
55C6:  BRA    569A
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
55C8:  MOVLW  04
55CA:  MOVLB  5
55CC:  MOVWF  x05
55CE:  MOVLW  AF
55D0:  MOVWF  x06
55D2:  MOVLB  0
55D4:  CALL   0F98
55D8:  MOVLB  5
55DA:  DECFSZ x05,F
55DC:  BRA    55CE
55DE:  MOVLW  08
55E0:  MOVLB  4
55E2:  MOVWF  xA2
55E4:  MOVLB  5
55E6:  CLRF   x06
55E8:  MOVLB  0
55EA:  CALL   1002
55EE:  MOVLW  01
55F0:  MOVLB  4
55F2:  MOVWF  xA7
55F4:  BSF    x95.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
55F6:  MOVLW  04
55F8:  MOVWF  FA9
55FA:  MOVFF  4CE,FA8
55FE:  BCF    FA6.6
5600:  BCF    FA6.7
5602:  BSF    FA6.2
5604:  MOVF   FF2,W
5606:  MOVWF  00
5608:  BCF    FF2.7
560A:  MOVLB  F
560C:  MOVLW  55
560E:  MOVWF  FA7
5610:  MOVLW  AA
5612:  MOVWF  FA7
5614:  BSF    FA6.1
5616:  BTFSC  FA6.1
5618:  BRA    5616
561A:  BCF    FA6.2
561C:  MOVF   00,W
561E:  IORWF  FF2,F
5620:  MOVLW  05
5622:  MOVWF  FA9
5624:  MOVFF  4CF,FA8
5628:  BCF    FA6.6
562A:  BCF    FA6.7
562C:  BSF    FA6.2
562E:  MOVF   FF2,W
5630:  MOVWF  00
5632:  BCF    FF2.7
5634:  MOVLW  55
5636:  MOVWF  FA7
5638:  MOVLW  AA
563A:  MOVWF  FA7
563C:  BSF    FA6.1
563E:  BTFSC  FA6.1
5640:  BRA    563E
5642:  BCF    FA6.2
5644:  MOVF   00,W
5646:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
5648:  MOVLW  06
564A:  MOVWF  FA9
564C:  MOVFF  4D0,FA8
5650:  BCF    FA6.6
5652:  BCF    FA6.7
5654:  BSF    FA6.2
5656:  MOVFF  FF2,00
565A:  BCF    FF2.7
565C:  MOVLW  55
565E:  MOVWF  FA7
5660:  MOVLW  AA
5662:  MOVWF  FA7
5664:  BSF    FA6.1
5666:  BTFSC  FA6.1
5668:  BRA    5666
566A:  BCF    FA6.2
566C:  MOVF   00,W
566E:  IORWF  FF2,F
5670:  MOVLW  07
5672:  MOVWF  FA9
5674:  MOVFF  4D1,FA8
5678:  BCF    FA6.6
567A:  BCF    FA6.7
567C:  BSF    FA6.2
567E:  MOVFF  FF2,00
5682:  BCF    FF2.7
5684:  MOVLW  55
5686:  MOVWF  FA7
5688:  MOVLW  AA
568A:  MOVWF  FA7
568C:  BSF    FA6.1
568E:  BTFSC  FA6.1
5690:  BRA    568E
5692:  BCF    FA6.2
5694:  MOVF   00,W
5696:  IORWF  FF2,F
5698:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
569A:  MOVF   xA2,W
569C:  SUBLW  0D
569E:  BTFSS  FD8.2
56A0:  BRA    57D8
....................       
....................       if(visual==1) 
56A2:  BTFSS  x95.4
56A4:  BRA    570C
....................       { 
....................          glcd_fillScreen(OFF); 
56A6:  MOVLB  5
56A8:  CLRF   x06
56AA:  MOVLB  0
56AC:  CALL   1002
....................          strcpy(Menus.Letra,"Temperatura"); 
56B0:  MOVLW  04
56B2:  MOVWF  FEA
56B4:  MOVLW  E5
56B6:  MOVWF  FE9
56B8:  MOVFF  FF2,505
56BC:  BCF    FF2.7
56BE:  MOVLW  00
56C0:  CALL   0B6A
56C4:  TBLRD*-
56C6:  TBLRD*+
56C8:  MOVF   FF5,W
56CA:  MOVWF  FEE
56CC:  IORLW  00
56CE:  BNZ   56C6
56D0:  MOVLB  5
56D2:  BTFSC  x05.7
56D4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
56D6:  MOVLW  04
56D8:  MOVWF  x06
56DA:  MOVLW  E5
56DC:  MOVWF  x05
56DE:  CLRF   x07
56E0:  CLRF   x08
56E2:  MOVLW  01
56E4:  MOVWF  x09
56E6:  MOVLW  02
56E8:  MOVWF  x0A
56EA:  MOVLB  0
56EC:  CALL   1630
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
56F0:  MOVFF  4A5,506
56F4:  MOVLW  1E
56F6:  MOVLB  5
56F8:  MOVWF  x07
56FA:  MOVWF  x08
56FC:  CLRF   x09
56FE:  MOVLW  03
5700:  MOVWF  x0A
5702:  MOVLB  0
5704:  CALL   242A
....................           
....................          visual=0; 
5708:  MOVLB  4
570A:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
570C:  BSF    F92.0
570E:  BTFSS  F80.0
5710:  BRA    5744
....................          {   
....................             if(Setpoint<134) 
5712:  MOVF   xA5,W
5714:  SUBLW  85
5716:  BNC   5744
....................             { 
....................                if(Setpoint<100) 
5718:  MOVF   xA5,W
571A:  SUBLW  63
571C:  BNC   5732
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
571E:  MOVLW  64
5720:  MOVWF  xA5
5722:  MOVLB  5
5724:  MOVWF  x06
5726:  MOVLB  0
5728:  CALL   0F98
572C:  MOVLB  4
572E:  BSF    x95.4
....................                } 
....................                else 
5730:  BRA    5744
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
5732:  MOVLW  1E
5734:  MOVLB  5
5736:  MOVWF  x06
5738:  MOVLB  0
573A:  CALL   0F98
573E:  MOVLB  4
5740:  INCF   xA5,F
5742:  BSF    x95.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5744:  BSF    F92.1
5746:  BTFSS  F80.1
5748:  BRA    5762
....................          {   
....................             if(Setpoint>105) 
574A:  MOVF   xA5,W
574C:  SUBLW  69
574E:  BC    5762
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
5750:  MOVLW  1E
5752:  MOVLB  5
5754:  MOVWF  x06
5756:  MOVLB  0
5758:  CALL   0F98
575C:  MOVLB  4
575E:  DECF   xA5,F
5760:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5762:  BSF    F92.2
5764:  BTFSS  F80.2
5766:  BRA    5778
....................          {   
....................             delay_ms(30);visual=1; 
5768:  MOVLW  1E
576A:  MOVLB  5
576C:  MOVWF  x06
576E:  MOVLB  0
5770:  CALL   0F98
5774:  MOVLB  4
5776:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5778:  BSF    F92.3
577A:  BTFSS  F80.3
577C:  BRA    57D8
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
577E:  MOVLW  04
5780:  MOVLB  5
5782:  MOVWF  x05
5784:  MOVLW  AF
5786:  MOVWF  x06
5788:  MOVLB  0
578A:  CALL   0F98
578E:  MOVLB  5
5790:  DECFSZ x05,F
5792:  BRA    5784
5794:  MOVLW  08
5796:  MOVLB  4
5798:  MOVWF  xA2
579A:  MOVLB  5
579C:  CLRF   x06
579E:  MOVLB  0
57A0:  CALL   1002
57A4:  MOVLW  01
57A6:  MOVLB  4
57A8:  MOVWF  xA7
57AA:  BSF    x95.4
....................             write_eeprom(8,Setpoint); 
57AC:  MOVLW  08
57AE:  MOVWF  FA9
57B0:  MOVFF  4A5,FA8
57B4:  BCF    FA6.6
57B6:  BCF    FA6.7
57B8:  BSF    FA6.2
57BA:  MOVF   FF2,W
57BC:  MOVWF  00
57BE:  BCF    FF2.7
57C0:  MOVLB  F
57C2:  MOVLW  55
57C4:  MOVWF  FA7
57C6:  MOVLW  AA
57C8:  MOVWF  FA7
57CA:  BSF    FA6.1
57CC:  BTFSC  FA6.1
57CE:  BRA    57CC
57D0:  BCF    FA6.2
57D2:  MOVF   00,W
57D4:  IORWF  FF2,F
57D6:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
57D8:  MOVF   xA2,W
57DA:  SUBLW  0E
57DC:  BTFSS  FD8.2
57DE:  BRA    5ACE
....................       if(Nivel>6) 
57E0:  MOVF   xB5,F
57E2:  BNZ   57EA
57E4:  MOVF   xB4,W
57E6:  SUBLW  06
57E8:  BC    57F0
....................          Nivel=6; 
57EA:  CLRF   xB5
57EC:  MOVLW  06
57EE:  MOVWF  xB4
....................           
....................       if(visual==1) 
57F0:  BTFSS  x95.4
57F2:  BRA    5854
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
57F4:  MOVLW  04
57F6:  MOVWF  FEA
57F8:  MOVLW  E5
57FA:  MOVWF  FE9
57FC:  MOVFF  FF2,505
5800:  BCF    FF2.7
5802:  MOVLW  00
5804:  MOVLB  0
5806:  CALL   0C4C
580A:  TBLRD*-
580C:  TBLRD*+
580E:  MOVF   FF5,W
5810:  MOVWF  FEE
5812:  IORLW  00
5814:  BNZ   580C
5816:  MOVLB  5
5818:  BTFSC  x05.7
581A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
581C:  MOVLW  04
581E:  MOVWF  x06
5820:  MOVLW  E5
5822:  MOVWF  x05
5824:  CLRF   x07
5826:  CLRF   x08
5828:  MOVLW  01
582A:  MOVWF  x09
582C:  MOVLW  02
582E:  MOVWF  x0A
5830:  MOVLB  0
5832:  CALL   1630
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
5836:  MOVFF  4B4,506
583A:  MOVLW  32
583C:  MOVLB  5
583E:  MOVWF  x07
5840:  MOVLW  28
5842:  MOVWF  x08
5844:  CLRF   x09
5846:  MOVLW  02
5848:  MOVWF  x0A
584A:  MOVLB  0
584C:  CALL   242A
....................           
....................          visual=0; 
5850:  MOVLB  4
5852:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5854:  BSF    F92.0
5856:  BTFSS  F80.0
5858:  BRA    587A
....................          {   
....................             if(Nivel<6) 
585A:  MOVF   xB5,F
585C:  BNZ   587A
585E:  MOVF   xB4,W
5860:  SUBLW  05
5862:  BNC   587A
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
5864:  MOVLW  1E
5866:  MOVLB  5
5868:  MOVWF  x06
586A:  MOVLB  0
586C:  CALL   0F98
5870:  MOVLB  4
5872:  INCF   xB4,F
5874:  BTFSC  FD8.2
5876:  INCF   xB5,F
5878:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
587A:  BSF    F92.1
587C:  BTFSS  F80.1
587E:  BRA    58A2
....................          {   
....................             if(Nivel>1) 
5880:  MOVF   xB5,F
5882:  BNZ   588A
5884:  MOVF   xB4,W
5886:  SUBLW  01
5888:  BC    58A2
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
588A:  MOVLW  1E
588C:  MOVLB  5
588E:  MOVWF  x06
5890:  MOVLB  0
5892:  CALL   0F98
5896:  MOVLB  4
5898:  MOVF   xB4,W
589A:  BTFSC  FD8.2
589C:  DECF   xB5,F
589E:  DECF   xB4,F
58A0:  BSF    x95.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
58A2:  BTFSS  x95.5
58A4:  BRA    5A5E
....................          { 
....................             if(RIGHT)//Si oprime SET 
58A6:  BSF    F92.2
58A8:  BTFSS  F80.2
58AA:  BRA    5A5C
....................             {   
....................                write_eeprom(9,Nivel); 
58AC:  MOVLW  09
58AE:  MOVWF  FA9
58B0:  MOVFF  4B4,FA8
58B4:  BCF    FA6.6
58B6:  BCF    FA6.7
58B8:  BSF    FA6.2
58BA:  MOVF   FF2,W
58BC:  MOVWF  00
58BE:  BCF    FF2.7
58C0:  MOVLB  F
58C2:  MOVLW  55
58C4:  MOVWF  FA7
58C6:  MOVLW  AA
58C8:  MOVWF  FA7
58CA:  BSF    FA6.1
58CC:  BTFSC  FA6.1
58CE:  BRA    58CC
58D0:  BCF    FA6.2
58D2:  MOVF   00,W
58D4:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
58D6:  MOVLW  14
58D8:  MOVLB  4
58DA:  MOVWF  xA2
58DC:  MOVLW  0F
58DE:  MOVLB  5
58E0:  MOVWF  x1B
58E2:  MOVLW  12
58E4:  MOVWF  x1C
58E6:  MOVLW  1E
58E8:  MOVWF  x1D
58EA:  MOVLW  35
58EC:  MOVWF  x1E
58EE:  CLRF   x1F
58F0:  MOVLW  01
58F2:  MOVWF  x20
58F4:  MOVLB  0
58F6:  CALL   156E
58FA:  MOVLB  4
58FC:  CLRF   xA9
58FE:  MOVLW  C0
5900:  IORWF  FF2,F
5902:  MOVLB  5
5904:  CLRF   x06
5906:  MOVLB  0
5908:  CALL   1002
....................                strcpy(Menus.Letra,"Calentando"); 
590C:  MOVLW  04
590E:  MOVWF  FEA
5910:  MOVLW  E5
5912:  MOVWF  FE9
5914:  MOVFF  FF2,505
5918:  BCF    FF2.7
591A:  MOVLW  00
591C:  CALL   0966
5920:  TBLRD*-
5922:  TBLRD*+
5924:  MOVF   FF5,W
5926:  MOVWF  FEE
5928:  IORLW  00
592A:  BNZ   5922
592C:  MOVLB  5
592E:  BTFSC  x05.7
5930:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
5932:  MOVLW  04
5934:  MOVWF  x06
5936:  MOVLW  E5
5938:  MOVWF  x05
593A:  CLRF   x07
593C:  MOVLW  37
593E:  MOVWF  x08
5940:  MOVLW  02
5942:  MOVWF  x09
5944:  MOVLW  01
5946:  MOVWF  x0A
5948:  MOVLB  0
594A:  CALL   1630
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
594E:  MOVLW  0F
5950:  MOVLB  5
5952:  MOVWF  x1B
5954:  MOVLW  12
5956:  MOVWF  x1C
5958:  MOVLW  1E
595A:  MOVWF  x1D
595C:  MOVLW  35
595E:  MOVWF  x1E
5960:  CLRF   x1F
5962:  MOVLW  01
5964:  MOVWF  x20
5966:  MOVLB  0
5968:  CALL   156E
....................                glcd_imagen(5); 
596C:  MOVLW  05
596E:  MOVLB  5
5970:  MOVWF  x05
5972:  MOVLB  0
5974:  CALL   207E
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5978:  MOVLW  04
597A:  MOVWF  FEA
597C:  MOVLW  E5
597E:  MOVWF  FE9
5980:  MOVFF  FF2,505
5984:  BCF    FF2.7
5986:  MOVLW  00
5988:  CALL   098C
598C:  TBLRD*-
598E:  TBLRD*+
5990:  MOVF   FF5,W
5992:  MOVWF  FEE
5994:  IORLW  00
5996:  BNZ   598E
5998:  MOVLB  5
599A:  BTFSC  x05.7
599C:  BSF    FF2.7
599E:  MOVLW  04
59A0:  MOVWF  x06
59A2:  MOVLW  E5
59A4:  MOVWF  x05
59A6:  CLRF   x07
59A8:  CLRF   x08
59AA:  MOVLW  02
59AC:  MOVWF  x09
59AE:  MOVLW  01
59B0:  MOVWF  x0A
59B2:  MOVLB  0
59B4:  CALL   1630
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
59B8:  MOVLW  04
59BA:  MOVWF  FEA
59BC:  MOVLW  E5
59BE:  MOVWF  FE9
59C0:  MOVFF  FF2,505
59C4:  BCF    FF2.7
59C6:  MOVLW  00
59C8:  CALL   09AE
59CC:  TBLRD*-
59CE:  TBLRD*+
59D0:  MOVF   FF5,W
59D2:  MOVWF  FEE
59D4:  IORLW  00
59D6:  BNZ   59CE
59D8:  MOVLB  5
59DA:  BTFSC  x05.7
59DC:  BSF    FF2.7
59DE:  MOVLW  04
59E0:  MOVWF  x06
59E2:  MOVLW  E5
59E4:  MOVWF  x05
59E6:  CLRF   x07
59E8:  MOVLW  08
59EA:  MOVWF  x08
59EC:  MOVLW  02
59EE:  MOVWF  x09
59F0:  MOVLW  01
59F2:  MOVWF  x0A
59F4:  MOVLB  0
59F6:  CALL   1630
....................                glcd_circle(95,40,2,NO,ON); 
59FA:  MOVLW  5F
59FC:  MOVLB  5
59FE:  MOVWF  x05
5A00:  MOVLW  28
5A02:  MOVWF  x06
5A04:  MOVLW  02
5A06:  MOVWF  x07
5A08:  CLRF   x08
5A0A:  MOVLW  01
5A0C:  MOVWF  x09
5A0E:  MOVLB  0
5A10:  CALL   217A
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5A14:  MOVLW  04
5A16:  MOVWF  FEA
5A18:  MOVLW  E5
5A1A:  MOVWF  FE9
5A1C:  MOVFF  FF2,505
5A20:  BCF    FF2.7
5A22:  MOVLW  00
5A24:  CALL   09D0
5A28:  TBLRD*-
5A2A:  TBLRD*+
5A2C:  MOVF   FF5,W
5A2E:  MOVWF  FEE
5A30:  IORLW  00
5A32:  BNZ   5A2A
5A34:  MOVLB  5
5A36:  BTFSC  x05.7
5A38:  BSF    FF2.7
5A3A:  MOVLW  04
5A3C:  MOVWF  x06
5A3E:  MOVLW  E5
5A40:  MOVWF  x05
5A42:  MOVLW  66
5A44:  MOVWF  x07
5A46:  MOVLW  28
5A48:  MOVWF  x08
5A4A:  MOVLW  02
5A4C:  MOVWF  x09
5A4E:  MOVWF  x0A
5A50:  MOVLB  0
5A52:  CALL   1630
....................                MuestraTiemposProgramados(); 
5A56:  CALL   257A
5A5A:  MOVLB  4
....................             }       
....................          } 
....................          else 
5A5C:  BRA    5ACE
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5A5E:  BSF    F92.3
5A60:  BTFSS  F80.3
5A62:  BRA    5ACE
....................             { 
....................                if(Nivel<6) 
5A64:  MOVF   xB5,F
5A66:  BNZ   5A72
5A68:  MOVF   xB4,W
5A6A:  SUBLW  05
5A6C:  BNC   5A72
....................                { 
....................                   desfoguelento=1; 
5A6E:  BSF    x95.5
....................                } 
....................                else 
5A70:  BRA    5A74
....................                { 
....................                   desfoguelento=0; 
5A72:  BCF    x95.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5A74:  MOVLW  04
5A76:  MOVLB  5
5A78:  MOVWF  x05
5A7A:  MOVLW  AF
5A7C:  MOVWF  x06
5A7E:  MOVLB  0
5A80:  CALL   0F98
5A84:  MOVLB  5
5A86:  DECFSZ x05,F
5A88:  BRA    5A7A
5A8A:  MOVLW  08
5A8C:  MOVLB  4
5A8E:  MOVWF  xA2
5A90:  MOVLB  5
5A92:  CLRF   x06
5A94:  MOVLB  0
5A96:  CALL   1002
5A9A:  MOVLW  01
5A9C:  MOVLB  4
5A9E:  MOVWF  xA7
5AA0:  BSF    x95.4
....................                write_eeprom(9,Nivel); 
5AA2:  MOVLW  09
5AA4:  MOVWF  FA9
5AA6:  MOVFF  4B4,FA8
5AAA:  BCF    FA6.6
5AAC:  BCF    FA6.7
5AAE:  BSF    FA6.2
5AB0:  MOVF   FF2,W
5AB2:  MOVWF  00
5AB4:  BCF    FF2.7
5AB6:  MOVLB  F
5AB8:  MOVLW  55
5ABA:  MOVWF  FA7
5ABC:  MOVLW  AA
5ABE:  MOVWF  FA7
5AC0:  BSF    FA6.1
5AC2:  BTFSC  FA6.1
5AC4:  BRA    5AC2
5AC6:  BCF    FA6.2
5AC8:  MOVF   00,W
5ACA:  IORWF  FF2,F
5ACC:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5ACE:  MOVF   xA2,W
5AD0:  SUBLW  0F
5AD2:  BTFSS  FD8.2
5AD4:  BRA    5E08
....................        
....................       if(visual==1) 
5AD6:  BTFSS  x95.4
5AD8:  BRA    5C3E
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5ADA:  MOVLW  04
5ADC:  MOVWF  FEA
5ADE:  MOVLW  E5
5AE0:  MOVWF  FE9
5AE2:  MOVFF  FF2,505
5AE6:  BCF    FF2.7
5AE8:  MOVLW  00
5AEA:  MOVLB  0
5AEC:  CALL   0BBC
5AF0:  TBLRD*-
5AF2:  TBLRD*+
5AF4:  MOVF   FF5,W
5AF6:  MOVWF  FEE
5AF8:  IORLW  00
5AFA:  BNZ   5AF2
5AFC:  MOVLB  5
5AFE:  BTFSC  x05.7
5B00:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5B02:  MOVLW  04
5B04:  MOVWF  x06
5B06:  MOVLW  E5
5B08:  MOVWF  x05
5B0A:  CLRF   x07
5B0C:  CLRF   x08
5B0E:  MOVLW  01
5B10:  MOVWF  x09
5B12:  MOVLW  02
5B14:  MOVWF  x0A
5B16:  MOVLB  0
5B18:  CALL   1630
....................           
....................          if(Opcion==2) 
5B1C:  MOVLB  4
5B1E:  MOVF   xA7,W
5B20:  SUBLW  02
5B22:  BNZ   5BAE
....................          {strcpy(Menus.Letra,"SI"); 
5B24:  MOVLW  04
5B26:  MOVWF  FEA
5B28:  MOVLW  E5
5B2A:  MOVWF  FE9
5B2C:  MOVFF  FF2,505
5B30:  BCF    FF2.7
5B32:  MOVLW  00
5B34:  MOVLB  0
5B36:  CALL   0C70
5B3A:  TBLRD*-
5B3C:  TBLRD*+
5B3E:  MOVF   FF5,W
5B40:  MOVWF  FEE
5B42:  IORLW  00
5B44:  BNZ   5B3C
5B46:  MOVLB  5
5B48:  BTFSC  x05.7
5B4A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5B4C:  MOVLW  04
5B4E:  MOVWF  x06
5B50:  MOVLW  E5
5B52:  MOVWF  x05
5B54:  MOVLW  32
5B56:  MOVWF  x07
5B58:  MOVLW  19
5B5A:  MOVWF  x08
5B5C:  MOVLW  01
5B5E:  MOVWF  x09
5B60:  MOVLW  02
5B62:  MOVWF  x0A
5B64:  MOVLB  0
5B66:  CALL   1630
....................          strcpy(Menus.Letra,"NO"); 
5B6A:  MOVLW  04
5B6C:  MOVWF  FEA
5B6E:  MOVLW  E5
5B70:  MOVWF  FE9
5B72:  MOVFF  FF2,505
5B76:  BCF    FF2.7
5B78:  MOVLW  00
5B7A:  CALL   0C8E
5B7E:  TBLRD*-
5B80:  TBLRD*+
5B82:  MOVF   FF5,W
5B84:  MOVWF  FEE
5B86:  IORLW  00
5B88:  BNZ   5B80
5B8A:  MOVLB  5
5B8C:  BTFSC  x05.7
5B8E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5B90:  MOVLW  04
5B92:  MOVWF  x06
5B94:  MOVLW  E5
5B96:  MOVWF  x05
5B98:  MOVLW  32
5B9A:  MOVWF  x07
5B9C:  MOVLW  2D
5B9E:  MOVWF  x08
5BA0:  CLRF   x09
5BA2:  MOVLW  02
5BA4:  MOVWF  x0A
5BA6:  MOVLB  0
5BA8:  CALL   1630
5BAC:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
5BAE:  DECFSZ xA7,W
5BB0:  BRA    5C3C
....................          {strcpy(Menus.Letra,"SI"); 
5BB2:  MOVLW  04
5BB4:  MOVWF  FEA
5BB6:  MOVLW  E5
5BB8:  MOVWF  FE9
5BBA:  MOVFF  FF2,505
5BBE:  BCF    FF2.7
5BC0:  MOVLW  00
5BC2:  MOVLB  0
5BC4:  CALL   0C70
5BC8:  TBLRD*-
5BCA:  TBLRD*+
5BCC:  MOVF   FF5,W
5BCE:  MOVWF  FEE
5BD0:  IORLW  00
5BD2:  BNZ   5BCA
5BD4:  MOVLB  5
5BD6:  BTFSC  x05.7
5BD8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5BDA:  MOVLW  04
5BDC:  MOVWF  x06
5BDE:  MOVLW  E5
5BE0:  MOVWF  x05
5BE2:  MOVLW  32
5BE4:  MOVWF  x07
5BE6:  MOVLW  19
5BE8:  MOVWF  x08
5BEA:  CLRF   x09
5BEC:  MOVLW  02
5BEE:  MOVWF  x0A
5BF0:  MOVLB  0
5BF2:  CALL   1630
....................          strcpy(Menus.Letra,"NO"); 
5BF6:  MOVLW  04
5BF8:  MOVWF  FEA
5BFA:  MOVLW  E5
5BFC:  MOVWF  FE9
5BFE:  MOVFF  FF2,505
5C02:  BCF    FF2.7
5C04:  MOVLW  00
5C06:  CALL   0C8E
5C0A:  TBLRD*-
5C0C:  TBLRD*+
5C0E:  MOVF   FF5,W
5C10:  MOVWF  FEE
5C12:  IORLW  00
5C14:  BNZ   5C0C
5C16:  MOVLB  5
5C18:  BTFSC  x05.7
5C1A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5C1C:  MOVLW  04
5C1E:  MOVWF  x06
5C20:  MOVLW  E5
5C22:  MOVWF  x05
5C24:  MOVLW  32
5C26:  MOVWF  x07
5C28:  MOVLW  2D
5C2A:  MOVWF  x08
5C2C:  MOVLW  01
5C2E:  MOVWF  x09
5C30:  MOVLW  02
5C32:  MOVWF  x0A
5C34:  MOVLB  0
5C36:  CALL   1630
5C3A:  MOVLB  4
....................          } 
....................          visual=0; 
5C3C:  BCF    x95.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5C3E:  BSF    F92.0
5C40:  BTFSS  F80.0
5C42:  BRA    5C4E
....................       { 
....................          if(Opcion<2) 
5C44:  MOVF   xA7,W
5C46:  SUBLW  01
5C48:  BNC   5C4C
....................          { 
....................             Opcion++; 
5C4A:  INCF   xA7,F
....................          } 
....................          visual=1; 
5C4C:  BSF    x95.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5C4E:  BSF    F92.1
5C50:  BTFSS  F80.1
5C52:  BRA    5C5E
....................       {   
....................          if(Opcion>1) 
5C54:  MOVF   xA7,W
5C56:  SUBLW  01
5C58:  BC    5C5C
....................          { 
....................             Opcion--; 
5C5A:  DECF   xA7,F
....................          }   
....................          visual=1; 
5C5C:  BSF    x95.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5C5E:  BSF    F92.2
5C60:  BTFSS  F80.2
5C62:  BRA    5DD4
....................       {   
....................          if(Opcion==2) 
5C64:  MOVF   xA7,W
5C66:  SUBLW  02
5C68:  BTFSS  FD8.2
5C6A:  BRA    5DA6
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5C6C:  MOVLW  14
5C6E:  MOVWF  xA2
5C70:  MOVLW  0F
5C72:  MOVLB  5
5C74:  MOVWF  x1B
5C76:  MOVLW  12
5C78:  MOVWF  x1C
5C7A:  MOVLW  1E
5C7C:  MOVWF  x1D
5C7E:  MOVLW  35
5C80:  MOVWF  x1E
5C82:  CLRF   x1F
5C84:  MOVLW  01
5C86:  MOVWF  x20
5C88:  MOVLB  0
5C8A:  CALL   156E
5C8E:  MOVLB  4
5C90:  CLRF   xA9
5C92:  MOVLW  C0
5C94:  IORWF  FF2,F
5C96:  MOVLB  5
5C98:  CLRF   x06
5C9A:  MOVLB  0
5C9C:  CALL   1002
....................             strcpy(Menus.Letra,"Calentando"); 
5CA0:  MOVLW  04
5CA2:  MOVWF  FEA
5CA4:  MOVLW  E5
5CA6:  MOVWF  FE9
5CA8:  MOVFF  FF2,505
5CAC:  BCF    FF2.7
5CAE:  MOVLW  00
5CB0:  CALL   0966
5CB4:  TBLRD*-
5CB6:  TBLRD*+
5CB8:  MOVF   FF5,W
5CBA:  MOVWF  FEE
5CBC:  IORLW  00
5CBE:  BNZ   5CB6
5CC0:  MOVLB  5
5CC2:  BTFSC  x05.7
5CC4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5CC6:  MOVLW  04
5CC8:  MOVWF  x06
5CCA:  MOVLW  E5
5CCC:  MOVWF  x05
5CCE:  CLRF   x07
5CD0:  MOVLW  37
5CD2:  MOVWF  x08
5CD4:  MOVLW  02
5CD6:  MOVWF  x09
5CD8:  MOVLW  01
5CDA:  MOVWF  x0A
5CDC:  MOVLB  0
5CDE:  CALL   1630
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5CE2:  MOVLW  0F
5CE4:  MOVLB  5
5CE6:  MOVWF  x1B
5CE8:  MOVLW  12
5CEA:  MOVWF  x1C
5CEC:  MOVLW  1E
5CEE:  MOVWF  x1D
5CF0:  MOVLW  35
5CF2:  MOVWF  x1E
5CF4:  CLRF   x1F
5CF6:  MOVLW  01
5CF8:  MOVWF  x20
5CFA:  MOVLB  0
5CFC:  CALL   156E
....................             glcd_imagen(5); 
5D00:  MOVLW  05
5D02:  MOVLB  5
5D04:  MOVWF  x05
5D06:  MOVLB  0
5D08:  CALL   207E
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5D0C:  MOVLW  04
5D0E:  MOVWF  FEA
5D10:  MOVLW  E5
5D12:  MOVWF  FE9
5D14:  MOVFF  FF2,505
5D18:  BCF    FF2.7
5D1A:  MOVLW  00
5D1C:  CALL   098C
5D20:  TBLRD*-
5D22:  TBLRD*+
5D24:  MOVF   FF5,W
5D26:  MOVWF  FEE
5D28:  IORLW  00
5D2A:  BNZ   5D22
5D2C:  MOVLB  5
5D2E:  BTFSC  x05.7
5D30:  BSF    FF2.7
5D32:  MOVLW  04
5D34:  MOVWF  x06
5D36:  MOVLW  E5
5D38:  MOVWF  x05
5D3A:  CLRF   x07
5D3C:  CLRF   x08
5D3E:  MOVLW  02
5D40:  MOVWF  x09
5D42:  MOVLW  01
5D44:  MOVWF  x0A
5D46:  MOVLB  0
5D48:  CALL   1630
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5D4C:  MOVLW  04
5D4E:  MOVWF  FEA
5D50:  MOVLW  E5
5D52:  MOVWF  FE9
5D54:  MOVFF  FF2,505
5D58:  BCF    FF2.7
5D5A:  MOVLW  00
5D5C:  CALL   09AE
5D60:  TBLRD*-
5D62:  TBLRD*+
5D64:  MOVF   FF5,W
5D66:  MOVWF  FEE
5D68:  IORLW  00
5D6A:  BNZ   5D62
5D6C:  MOVLB  5
5D6E:  BTFSC  x05.7
5D70:  BSF    FF2.7
5D72:  MOVLW  04
5D74:  MOVWF  x06
5D76:  MOVLW  E5
5D78:  MOVWF  x05
5D7A:  CLRF   x07
5D7C:  MOVLW  08
5D7E:  MOVWF  x08
5D80:  MOVLW  02
5D82:  MOVWF  x09
5D84:  MOVLW  01
5D86:  MOVWF  x0A
5D88:  MOVLB  0
5D8A:  CALL   1630
....................             MuestraTiemposProgramados(); 
5D8E:  CALL   257A
....................             if(Nivel<6) 
5D92:  MOVLB  4
5D94:  MOVF   xB5,F
5D96:  BNZ   5DA2
5D98:  MOVF   xB4,W
5D9A:  SUBLW  05
5D9C:  BNC   5DA2
....................                { 
....................                   desfoguelento=1; 
5D9E:  BSF    x95.5
....................                } 
....................                else 
5DA0:  BRA    5DA4
....................                { 
....................                   desfoguelento=0; 
5DA2:  BCF    x95.5
....................                } 
....................          } 
....................          else 
5DA4:  BRA    5DD4
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DA6:  MOVLW  04
5DA8:  MOVLB  5
5DAA:  MOVWF  x05
5DAC:  MOVLW  AF
5DAE:  MOVWF  x06
5DB0:  MOVLB  0
5DB2:  CALL   0F98
5DB6:  MOVLB  5
5DB8:  DECFSZ x05,F
5DBA:  BRA    5DAC
5DBC:  MOVLW  08
5DBE:  MOVLB  4
5DC0:  MOVWF  xA2
5DC2:  MOVLB  5
5DC4:  CLRF   x06
5DC6:  MOVLB  0
5DC8:  CALL   1002
5DCC:  MOVLW  01
5DCE:  MOVLB  4
5DD0:  MOVWF  xA7
5DD2:  BSF    x95.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5DD4:  BSF    F92.3
5DD6:  BTFSS  F80.3
5DD8:  BRA    5E08
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DDA:  MOVLW  04
5DDC:  MOVLB  5
5DDE:  MOVWF  x05
5DE0:  MOVLW  AF
5DE2:  MOVWF  x06
5DE4:  MOVLB  0
5DE6:  CALL   0F98
5DEA:  MOVLB  5
5DEC:  DECFSZ x05,F
5DEE:  BRA    5DE0
5DF0:  MOVLW  08
5DF2:  MOVLB  4
5DF4:  MOVWF  xA2
5DF6:  MOVLB  5
5DF8:  CLRF   x06
5DFA:  MOVLB  0
5DFC:  CALL   1002
5E00:  MOVLW  01
5E02:  MOVLB  4
5E04:  MOVWF  xA7
5E06:  BSF    x95.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
5E08:  MOVF   xA2,W
5E0A:  SUBLW  14
5E0C:  BTFSS  FD8.2
5E0E:  GOTO   69F6
....................     
....................    Lectura_Esclavos(); 
5E12:  MOVLB  0
5E14:  CALL   1EC4
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
5E18:  MOVLB  4
5E1A:  BTFSS  x96.1
5E1C:  BRA    5F64
5E1E:  DECFSZ x8D,W
5E20:  BRA    5F64
5E22:  DECFSZ x8E,W
5E24:  BRA    5F64
5E26:  MOVF   xA8,W
5E28:  SUBLW  01
5E2A:  BTFSS  FD8.0
5E2C:  BRA    5F64
5E2E:  MOVF   x92,F
5E30:  BTFSS  FD8.2
5E32:  BRA    5F64
5E34:  MOVF   x93,F
5E36:  BTFSS  FD8.2
5E38:  BRA    5F64
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
5E3A:  MOVF   xA8,F
5E3C:  BNZ   5ED6
5E3E:  BTFSC  x96.2
5E40:  BRA    5ED6
....................       { 
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
5E42:  MOVLW  0F
5E44:  MOVLB  5
5E46:  MOVWF  x1B
5E48:  MOVLW  12
5E4A:  MOVWF  x1C
5E4C:  MOVLW  1E
5E4E:  MOVWF  x1D
5E50:  MOVLW  35
5E52:  MOVWF  x1E
5E54:  CLRF   x1F
5E56:  MOVLW  01
5E58:  MOVWF  x20
5E5A:  MOVLB  0
5E5C:  CALL   156E
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5E60:  MOVLB  5
5E62:  CLRF   x1B
5E64:  MOVLW  37
5E66:  MOVWF  x1C
5E68:  MOVLW  7F
5E6A:  MOVWF  x1D
5E6C:  MOVLW  3F
5E6E:  MOVWF  x1E
5E70:  MOVLW  01
5E72:  MOVWF  x1F
5E74:  CLRF   x20
5E76:  MOVLB  0
5E78:  CALL   156E
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
5E7C:  MOVLW  04
5E7E:  MOVWF  FEA
5E80:  MOVLW  E5
5E82:  MOVWF  FE9
5E84:  MOVFF  FF2,505
5E88:  BCF    FF2.7
5E8A:  MOVLW  00
5E8C:  CALL   0966
5E90:  TBLRD*-
5E92:  TBLRD*+
5E94:  MOVF   FF5,W
5E96:  MOVWF  FEE
5E98:  IORLW  00
5E9A:  BNZ   5E92
5E9C:  MOVLB  5
5E9E:  BTFSC  x05.7
5EA0:  BSF    FF2.7
5EA2:  MOVLW  04
5EA4:  MOVWF  x06
5EA6:  MOVLW  E5
5EA8:  MOVWF  x05
5EAA:  CLRF   x07
5EAC:  MOVLW  37
5EAE:  MOVWF  x08
5EB0:  MOVLW  02
5EB2:  MOVWF  x09
5EB4:  MOVLW  01
5EB6:  MOVWF  x0A
5EB8:  MOVLB  0
5EBA:  CALL   1630
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5EBE:  MOVLB  4
5EC0:  BSF    x96.2
5EC2:  BCF    x96.3
5EC4:  BCF    x96.4
5EC6:  BCF    x96.5
5EC8:  BCF    x96.6
5ECA:  BCF    x96.7
5ECC:  BCF    x97.0
5ECE:  BCF    x97.1
....................          EVDesfogue=0;Control=1; 
5ED0:  CLRF   x99
5ED2:  MOVLW  01
5ED4:  MOVWF  xA0
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
5ED6:  DECFSZ xA8,W
5ED8:  BRA    5F56
5EDA:  BTFSC  x96.5
5EDC:  BRA    5F56
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5EDE:  MOVLB  5
5EE0:  CLRF   x1B
5EE2:  MOVLW  37
5EE4:  MOVWF  x1C
5EE6:  MOVLW  7F
5EE8:  MOVWF  x1D
5EEA:  MOVLW  3F
5EEC:  MOVWF  x1E
5EEE:  MOVLW  01
5EF0:  MOVWF  x1F
5EF2:  CLRF   x20
5EF4:  MOVLB  0
5EF6:  CALL   156E
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
5EFA:  MOVLW  04
5EFC:  MOVWF  FEA
5EFE:  MOVLW  E5
5F00:  MOVWF  FE9
5F02:  MOVFF  FF2,505
5F06:  BCF    FF2.7
5F08:  MOVLW  00
5F0A:  CALL   0CAC
5F0E:  TBLRD*-
5F10:  TBLRD*+
5F12:  MOVF   FF5,W
5F14:  MOVWF  FEE
5F16:  IORLW  00
5F18:  BNZ   5F10
5F1A:  MOVLB  5
5F1C:  BTFSC  x05.7
5F1E:  BSF    FF2.7
5F20:  MOVLW  04
5F22:  MOVWF  x06
5F24:  MOVLW  E5
5F26:  MOVWF  x05
5F28:  CLRF   x07
5F2A:  MOVLW  37
5F2C:  MOVWF  x08
5F2E:  MOVLW  02
5F30:  MOVWF  x09
5F32:  MOVLW  01
5F34:  MOVWF  x0A
5F36:  MOVLB  0
5F38:  CALL   1630
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F3C:  MOVLB  4
5F3E:  BCF    x96.2
5F40:  BCF    x96.3
5F42:  BCF    x96.4
5F44:  BSF    x96.5
5F46:  BCF    x96.6
5F48:  BCF    x96.7
5F4A:  BCF    x97.0
5F4C:  BCF    x97.1
....................          EVDesfogue=0;EVTrampa=0;Control=1; 
5F4E:  CLRF   x99
5F50:  CLRF   x9B
5F52:  MOVLW  01
5F54:  MOVWF  xA0
....................       } 
....................           
....................       Control=1; 
5F56:  MOVLW  01
5F58:  MOVWF  xA0
....................       Envio_Esclavos(); 
5F5A:  MOVLB  0
5F5C:  CALL   201E
....................    } 
....................    else 
5F60:  BRA    6442
5F62:  MOVLB  4
....................    { 
....................       Control=0; 
5F64:  CLRF   xA0
....................       if(Alarma>0 || Alarma2>0) 
5F66:  MOVF   x92,F
5F68:  BNZ   5F70
5F6A:  MOVF   x94,F
5F6C:  BTFSC  FD8.2
5F6E:  BRA    60EC
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
5F70:  DECFSZ x92,W
5F72:  BRA    5FEA
....................          { 
....................             if(disp_Alarma==0) 
5F74:  BTFSC  x97.3
5F76:  BRA    5FEA
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5F78:  MOVLB  5
5F7A:  CLRF   x1B
5F7C:  MOVLW  37
5F7E:  MOVWF  x1C
5F80:  MOVLW  7F
5F82:  MOVWF  x1D
5F84:  MOVLW  3F
5F86:  MOVWF  x1E
5F88:  MOVLW  01
5F8A:  MOVWF  x1F
5F8C:  CLRF   x20
5F8E:  MOVLB  0
5F90:  CALL   156E
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
5F94:  MOVLW  04
5F96:  MOVWF  FEA
5F98:  MOVLW  E5
5F9A:  MOVWF  FE9
5F9C:  MOVFF  FF2,505
5FA0:  BCF    FF2.7
5FA2:  MOVLW  00
5FA4:  CALL   0CD4
5FA8:  TBLRD*-
5FAA:  TBLRD*+
5FAC:  MOVF   FF5,W
5FAE:  MOVWF  FEE
5FB0:  IORLW  00
5FB2:  BNZ   5FAA
5FB4:  MOVLB  5
5FB6:  BTFSC  x05.7
5FB8:  BSF    FF2.7
5FBA:  MOVLW  04
5FBC:  MOVWF  x06
5FBE:  MOVLW  E5
5FC0:  MOVWF  x05
5FC2:  CLRF   x07
5FC4:  MOVLW  37
5FC6:  MOVWF  x08
5FC8:  MOVLW  02
5FCA:  MOVWF  x09
5FCC:  MOVLW  01
5FCE:  MOVWF  x0A
5FD0:  MOVLB  0
5FD2:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
5FD6:  MOVLB  4
5FD8:  BCF    x96.2
5FDA:  BCF    x96.3
5FDC:  BCF    x96.4
5FDE:  BCF    x96.5
5FE0:  BCF    x96.6
5FE2:  BCF    x96.7
5FE4:  BCF    x97.0
5FE6:  BCF    x97.1
....................                disp_Alarma=1; 
5FE8:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
5FEA:  MOVF   x92,W
5FEC:  SUBLW  02
5FEE:  BNZ   606A
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
5FF0:  CLRF   xA8
5FF2:  CLRF   xA9
....................             if(disp_Alarma==0) 
5FF4:  BTFSC  x97.3
5FF6:  BRA    606A
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5FF8:  MOVLB  5
5FFA:  CLRF   x1B
5FFC:  MOVLW  37
5FFE:  MOVWF  x1C
6000:  MOVLW  7F
6002:  MOVWF  x1D
6004:  MOVLW  3F
6006:  MOVWF  x1E
6008:  MOVLW  01
600A:  MOVWF  x1F
600C:  CLRF   x20
600E:  MOVLB  0
6010:  CALL   156E
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6014:  MOVLW  04
6016:  MOVWF  FEA
6018:  MOVLW  E5
601A:  MOVWF  FE9
601C:  MOVFF  FF2,505
6020:  BCF    FF2.7
6022:  MOVLW  00
6024:  CALL   0CFA
6028:  TBLRD*-
602A:  TBLRD*+
602C:  MOVF   FF5,W
602E:  MOVWF  FEE
6030:  IORLW  00
6032:  BNZ   602A
6034:  MOVLB  5
6036:  BTFSC  x05.7
6038:  BSF    FF2.7
603A:  MOVLW  04
603C:  MOVWF  x06
603E:  MOVLW  E5
6040:  MOVWF  x05
6042:  CLRF   x07
6044:  MOVLW  37
6046:  MOVWF  x08
6048:  MOVLW  02
604A:  MOVWF  x09
604C:  MOVLW  01
604E:  MOVWF  x0A
6050:  MOVLB  0
6052:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
6056:  MOVLB  4
6058:  BCF    x96.2
605A:  BCF    x96.3
605C:  BCF    x96.4
605E:  BCF    x96.5
6060:  BCF    x96.6
6062:  BCF    x96.7
6064:  BCF    x97.0
6066:  BCF    x97.1
....................                disp_Alarma=1; 
6068:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==3) // Alarma de Error de Agua: Error por Bajo Nivel de Agua Durante Funcionamiento 
606A:  MOVF   x92,W
606C:  SUBLW  03
606E:  BNZ   60EA
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
6070:  CLRF   xA8
6072:  CLRF   xA9
....................             if(disp_Alarma==0) 
6074:  BTFSC  x97.3
6076:  BRA    60EA
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6078:  MOVLB  5
607A:  CLRF   x1B
607C:  MOVLW  37
607E:  MOVWF  x1C
6080:  MOVLW  7F
6082:  MOVWF  x1D
6084:  MOVLW  3F
6086:  MOVWF  x1E
6088:  MOVLW  01
608A:  MOVWF  x1F
608C:  CLRF   x20
608E:  MOVLB  0
6090:  CALL   156E
....................                strcpy(Menus.Letra,"Error:EA02");displayMenu(Menus.Letra,0,55,2,1); 
6094:  MOVLW  04
6096:  MOVWF  FEA
6098:  MOVLW  E5
609A:  MOVWF  FE9
609C:  MOVFF  FF2,505
60A0:  BCF    FF2.7
60A2:  MOVLW  00
60A4:  CALL   0D20
60A8:  TBLRD*-
60AA:  TBLRD*+
60AC:  MOVF   FF5,W
60AE:  MOVWF  FEE
60B0:  IORLW  00
60B2:  BNZ   60AA
60B4:  MOVLB  5
60B6:  BTFSC  x05.7
60B8:  BSF    FF2.7
60BA:  MOVLW  04
60BC:  MOVWF  x06
60BE:  MOVLW  E5
60C0:  MOVWF  x05
60C2:  CLRF   x07
60C4:  MOVLW  37
60C6:  MOVWF  x08
60C8:  MOVLW  02
60CA:  MOVWF  x09
60CC:  MOVLW  01
60CE:  MOVWF  x0A
60D0:  MOVLB  0
60D2:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
60D6:  MOVLB  4
60D8:  BCF    x96.2
60DA:  BCF    x96.3
60DC:  BCF    x96.4
60DE:  BCF    x96.5
60E0:  BCF    x96.6
60E2:  BCF    x96.7
60E4:  BCF    x97.0
60E6:  BCF    x97.1
....................                disp_Alarma=1; 
60E8:  BSF    x97.3
....................             } 
....................          } 
....................           
....................       } 
....................       else 
60EA:  BRA    643C
....................       {  
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
60EC:  MOVF   xA8,W
60EE:  SUBLW  02
60F0:  BTFSS  FD8.2
60F2:  BRA    62B4
60F4:  BTFSS  x96.1
60F6:  BRA    62B4
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
60F8:  BTFSS  x95.5
60FA:  BRA    61DA
....................             { 
....................                if(z==0) 
60FC:  BTFSC  x97.2
60FE:  BRA    6150
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
6100:  MOVLB  5
6102:  CLRF   x05
6104:  MOVLW  5A
6106:  MOVWF  x06
6108:  MOVLW  38
610A:  MOVWF  x07
610C:  MOVLB  0
610E:  CALL   26BA
6112:  MOVLW  19
6114:  MOVLB  5
6116:  MOVWF  x1B
6118:  MOVLW  12
611A:  MOVWF  x1C
611C:  MOVLW  3C
611E:  MOVWF  x1D
6120:  MOVLW  1A
6122:  MOVWF  x1E
6124:  CLRF   x1F
6126:  CLRF   x20
6128:  MOVLB  0
612A:  CALL   156E
612E:  MOVLW  37
6130:  MOVLB  5
6132:  MOVWF  x1B
6134:  MOVLW  12
6136:  MOVWF  x1C
6138:  MOVLW  44
613A:  MOVWF  x1D
613C:  MOVLW  35
613E:  MOVWF  x1E
6140:  CLRF   x1F
6142:  MOVLW  01
6144:  MOVWF  x20
6146:  MOVLB  0
6148:  CALL   156E
614C:  MOVLB  4
614E:  BSF    x97.2
....................                } 
....................                if(disp_Despresurizando==0) 
6150:  BTFSC  x96.6
6152:  BRA    61D2
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6154:  MOVLB  5
6156:  CLRF   x1B
6158:  MOVLW  37
615A:  MOVWF  x1C
615C:  MOVLW  7F
615E:  MOVWF  x1D
6160:  MOVLW  3F
6162:  MOVWF  x1E
6164:  MOVLW  01
6166:  MOVWF  x1F
6168:  CLRF   x20
616A:  MOVLB  0
616C:  CALL   156E
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
6170:  MOVLW  04
6172:  MOVWF  FEA
6174:  MOVLW  E5
6176:  MOVWF  FE9
6178:  MOVFF  FF2,505
617C:  BCF    FF2.7
617E:  MOVLW  00
6180:  CALL   0D46
6184:  TBLRD*-
6186:  TBLRD*+
6188:  MOVF   FF5,W
618A:  MOVWF  FEE
618C:  IORLW  00
618E:  BNZ   6186
6190:  MOVLB  5
6192:  BTFSC  x05.7
6194:  BSF    FF2.7
6196:  MOVLW  04
6198:  MOVWF  x06
619A:  MOVLW  E5
619C:  MOVWF  x05
619E:  CLRF   x07
61A0:  MOVLW  37
61A2:  MOVWF  x08
61A4:  MOVLW  02
61A6:  MOVWF  x09
61A8:  MOVLW  01
61AA:  MOVWF  x0A
61AC:  MOVLB  0
61AE:  CALL   1630
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
61B2:  MOVLB  4
61B4:  BCF    x96.2
61B6:  BCF    x96.3
61B8:  BCF    x96.4
61BA:  BCF    x96.5
61BC:  BSF    x96.6
61BE:  BCF    x96.7
61C0:  BCF    x97.0
61C2:  BCF    x97.1
....................                   glcd_imagen(5); 
61C4:  MOVLW  05
61C6:  MOVLB  5
61C8:  MOVWF  x05
61CA:  MOVLB  0
61CC:  CALL   207E
61D0:  MOVLB  4
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
61D2:  MOVLW  02
61D4:  MOVWF  xAA
61D6:  MOVWF  xA9
....................             } 
....................             else 
61D8:  BRA    62B4
....................             { 
....................                if(z==0) 
61DA:  BTFSC  x97.2
61DC:  BRA    622E
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
61DE:  MOVLB  5
61E0:  CLRF   x05
61E2:  MOVLW  5A
61E4:  MOVWF  x06
61E6:  MOVLW  38
61E8:  MOVWF  x07
61EA:  MOVLB  0
61EC:  CALL   26BA
61F0:  MOVLW  19
61F2:  MOVLB  5
61F4:  MOVWF  x1B
61F6:  MOVLW  12
61F8:  MOVWF  x1C
61FA:  MOVLW  3C
61FC:  MOVWF  x1D
61FE:  MOVLW  1A
6200:  MOVWF  x1E
6202:  CLRF   x1F
6204:  CLRF   x20
6206:  MOVLB  0
6208:  CALL   156E
620C:  MOVLW  37
620E:  MOVLB  5
6210:  MOVWF  x1B
6212:  MOVLW  12
6214:  MOVWF  x1C
6216:  MOVLW  44
6218:  MOVWF  x1D
621A:  MOVLW  35
621C:  MOVWF  x1E
621E:  CLRF   x1F
6220:  MOVLW  01
6222:  MOVWF  x20
6224:  MOVLB  0
6226:  CALL   156E
622A:  MOVLB  4
622C:  BSF    x97.2
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
622E:  BTFSC  x96.4
6230:  BRA    62B0
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6232:  MOVLB  5
6234:  CLRF   x1B
6236:  MOVLW  37
6238:  MOVWF  x1C
623A:  MOVLW  7F
623C:  MOVWF  x1D
623E:  MOVLW  3F
6240:  MOVWF  x1E
6242:  MOVLW  01
6244:  MOVWF  x1F
6246:  CLRF   x20
6248:  MOVLB  0
624A:  CALL   156E
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
624E:  MOVLW  04
6250:  MOVWF  FEA
6252:  MOVLW  E5
6254:  MOVWF  FE9
6256:  MOVFF  FF2,505
625A:  BCF    FF2.7
625C:  MOVLW  00
625E:  CALL   0D70
6262:  TBLRD*-
6264:  TBLRD*+
6266:  MOVF   FF5,W
6268:  MOVWF  FEE
626A:  IORLW  00
626C:  BNZ   6264
626E:  MOVLB  5
6270:  BTFSC  x05.7
6272:  BSF    FF2.7
6274:  MOVLW  04
6276:  MOVWF  x06
6278:  MOVLW  E5
627A:  MOVWF  x05
627C:  CLRF   x07
627E:  MOVLW  37
6280:  MOVWF  x08
6282:  MOVLW  02
6284:  MOVWF  x09
6286:  MOVLW  01
6288:  MOVWF  x0A
628A:  MOVLB  0
628C:  CALL   1630
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6290:  MOVLB  4
6292:  BCF    x96.2
6294:  BCF    x96.3
6296:  BSF    x96.4
6298:  BCF    x96.5
629A:  BCF    x96.6
629C:  BCF    x96.7
629E:  BCF    x97.0
62A0:  BCF    x97.1
....................                   glcd_imagen(5); 
62A2:  MOVLW  05
62A4:  MOVLB  5
62A6:  MOVWF  x05
62A8:  MOVLB  0
62AA:  CALL   207E
62AE:  MOVLB  4
....................                } 
....................                Exhaust=1; 
62B0:  MOVLW  01
62B2:  MOVWF  xAA
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0 && AlarmaAgua==0) 
62B4:  MOVF   x8D,F
62B6:  BNZ   6338
62B8:  MOVF   x93,F
62BA:  BNZ   6338
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0 && flag_agua==1) 
62BC:  BTFSC  x97.0
62BE:  BRA    6338
62C0:  MOVF   xA6,F
62C2:  BNZ   6338
62C4:  BTFSS  x96.1
62C6:  BRA    6338
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
62C8:  MOVLB  5
62CA:  CLRF   x1B
62CC:  MOVLW  37
62CE:  MOVWF  x1C
62D0:  MOVLW  7F
62D2:  MOVWF  x1D
62D4:  MOVLW  3F
62D6:  MOVWF  x1E
62D8:  MOVLW  01
62DA:  MOVWF  x1F
62DC:  CLRF   x20
62DE:  MOVLB  0
62E0:  CALL   156E
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
62E4:  MOVLW  04
62E6:  MOVWF  FEA
62E8:  MOVLW  E5
62EA:  MOVWF  FE9
62EC:  MOVFF  FF2,505
62F0:  BCF    FF2.7
62F2:  MOVLW  00
62F4:  CALL   0D92
62F8:  TBLRD*-
62FA:  TBLRD*+
62FC:  MOVF   FF5,W
62FE:  MOVWF  FEE
6300:  IORLW  00
6302:  BNZ   62FA
6304:  MOVLB  5
6306:  BTFSC  x05.7
6308:  BSF    FF2.7
630A:  MOVLW  04
630C:  MOVWF  x06
630E:  MOVLW  E5
6310:  MOVWF  x05
6312:  CLRF   x07
6314:  MOVLW  37
6316:  MOVWF  x08
6318:  MOVLW  02
631A:  MOVWF  x09
631C:  MOVLW  01
631E:  MOVWF  x0A
6320:  MOVLB  0
6322:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
6326:  MOVLB  4
6328:  BCF    x96.2
632A:  BCF    x96.3
632C:  BCF    x96.4
632E:  BCF    x96.5
6330:  BCF    x96.6
6332:  BCF    x96.7
6334:  BSF    x97.0
6336:  BCF    x97.1
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          disp_Alarma=0; 
6338:  BCF    x97.3
....................          if(NivelTanque==1 && flag_agua==0 ) 
633A:  DECFSZ x90,W
633C:  BRA    6346
633E:  BTFSC  x96.1
6340:  BRA    6346
....................          { 
....................             flag_agua=1; 
6342:  BSF    x96.1
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
6344:  BRA    643C
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && flag_agua==0) 
6346:  MOVF   xA8,F
6348:  BNZ   63C4
634A:  BTFSC  x96.3
634C:  BRA    63C4
634E:  BTFSC  x96.1
6350:  BRA    63C4
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6352:  MOVLB  5
6354:  CLRF   x1B
6356:  MOVLW  37
6358:  MOVWF  x1C
635A:  MOVLW  7F
635C:  MOVWF  x1D
635E:  MOVLW  3F
6360:  MOVWF  x1E
6362:  MOVLW  01
6364:  MOVWF  x1F
6366:  CLRF   x20
6368:  MOVLB  0
636A:  CALL   156E
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
636E:  MOVLW  04
6370:  MOVWF  FEA
6372:  MOVLW  E5
6374:  MOVWF  FE9
6376:  MOVFF  FF2,505
637A:  BCF    FF2.7
637C:  MOVLW  00
637E:  CALL   0DBC
6382:  TBLRD*-
6384:  TBLRD*+
6386:  MOVF   FF5,W
6388:  MOVWF  FEE
638A:  IORLW  00
638C:  BNZ   6384
638E:  MOVLB  5
6390:  BTFSC  x05.7
6392:  BSF    FF2.7
6394:  MOVLW  04
6396:  MOVWF  x06
6398:  MOVLW  E5
639A:  MOVWF  x05
639C:  CLRF   x07
639E:  MOVLW  37
63A0:  MOVWF  x08
63A2:  MOVLW  02
63A4:  MOVWF  x09
63A6:  MOVLW  01
63A8:  MOVWF  x0A
63AA:  MOVLB  0
63AC:  CALL   1630
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
63B0:  MOVLB  4
63B2:  BCF    x96.2
63B4:  BSF    x96.3
63B6:  BCF    x96.4
63B8:  BCF    x96.5
63BA:  BCF    x96.6
63BC:  BCF    x96.7
63BE:  BCF    x97.0
63C0:  BCF    x97.1
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
63C2:  CLRF   xA0
....................             } 
....................              
....................             if(AlarmaAgua==1) 
63C4:  DECFSZ x93,W
63C6:  BRA    643C
....................             { 
....................                if(disp_AlarmaAgua==0) 
63C8:  BTFSC  x97.4
63CA:  BRA    643C
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
63CC:  MOVLB  5
63CE:  CLRF   x1B
63D0:  MOVLW  37
63D2:  MOVWF  x1C
63D4:  MOVLW  7F
63D6:  MOVWF  x1D
63D8:  MOVLW  3F
63DA:  MOVWF  x1E
63DC:  MOVLW  01
63DE:  MOVWF  x1F
63E0:  CLRF   x20
63E2:  MOVLB  0
63E4:  CALL   156E
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
63E8:  MOVLW  04
63EA:  MOVWF  FEA
63EC:  MOVLW  E5
63EE:  MOVWF  FE9
63F0:  MOVFF  FF2,505
63F4:  BCF    FF2.7
63F6:  MOVLW  00
63F8:  CALL   0DE0
63FC:  TBLRD*-
63FE:  TBLRD*+
6400:  MOVF   FF5,W
6402:  MOVWF  FEE
6404:  IORLW  00
6406:  BNZ   63FE
6408:  MOVLB  5
640A:  BTFSC  x05.7
640C:  BSF    FF2.7
640E:  MOVLW  04
6410:  MOVWF  x06
6412:  MOVLW  E5
6414:  MOVWF  x05
6416:  CLRF   x07
6418:  MOVLW  37
641A:  MOVWF  x08
641C:  MOVLW  02
641E:  MOVWF  x09
6420:  MOVLW  01
6422:  MOVWF  x0A
6424:  MOVLB  0
6426:  CALL   1630
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
642A:  MOVLB  4
642C:  BCF    x96.2
642E:  BCF    x96.4
6430:  BCF    x96.5
6432:  BCF    x96.6
6434:  BCF    x96.7
6436:  BCF    x97.0
6438:  BCF    x97.1
....................                   disp_AlarmaAgua=1; 
643A:  BSF    x97.4
....................                } 
....................             } 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
643C:  MOVLB  0
643E:  CALL   201E
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
6442:  MOVLB  4
6444:  BTFSS  x95.6
6446:  BRA    67C0
....................    {                       
....................       Lectura=0; 
6448:  BCF    x95.6
....................       //displayTiempo(PresionCamara,31,35,2,1); 
....................       //displayTiempo(PresionPreCamara,31,44,2,1); 
....................       displayT(PresionCamara,31,35,1); 
644A:  MOVFF  4BB,506
644E:  MOVFF  4BA,505
6452:  MOVLB  0
6454:  CALL   19EE
6458:  MOVFF  00,505
645C:  MOVFF  01,506
6460:  MOVFF  02,507
6464:  MOVFF  03,508
6468:  MOVFF  03,50C
646C:  MOVFF  02,50B
6470:  MOVFF  01,50A
6474:  MOVFF  00,509
6478:  MOVLW  1F
647A:  MOVLB  5
647C:  MOVWF  x0D
647E:  MOVLW  23
6480:  MOVWF  x0E
6482:  MOVLW  01
6484:  MOVWF  x0F
6486:  MOVLB  0
6488:  CALL   2A4E
....................       displayT(PresionPreCamara,31,44,1); 
648C:  MOVFF  4BD,506
6490:  MOVFF  4BC,505
6494:  CALL   19EE
6498:  MOVFF  00,505
649C:  MOVFF  01,506
64A0:  MOVFF  02,507
64A4:  MOVFF  03,508
64A8:  MOVFF  03,50C
64AC:  MOVFF  02,50B
64B0:  MOVFF  01,50A
64B4:  MOVFF  00,509
64B8:  MOVLW  1F
64BA:  MOVLB  5
64BC:  MOVWF  x0D
64BE:  MOVLW  2C
64C0:  MOVWF  x0E
64C2:  MOVLW  01
64C4:  MOVWF  x0F
64C6:  MOVLB  0
64C8:  CALL   2A4E
....................       glcd_rect(51, 35, 62, 48, YES, OFF);glcd_text57(52, 35, kpa, 1, ON); 
64CC:  MOVLW  33
64CE:  MOVLB  5
64D0:  MOVWF  x1B
64D2:  MOVLW  23
64D4:  MOVWF  x1C
64D6:  MOVLW  3E
64D8:  MOVWF  x1D
64DA:  MOVLW  30
64DC:  MOVWF  x1E
64DE:  MOVLW  01
64E0:  MOVWF  x1F
64E2:  CLRF   x20
64E4:  MOVLB  0
64E6:  CALL   156E
64EA:  MOVLW  34
64EC:  MOVLB  5
64EE:  MOVWF  x19
64F0:  MOVLW  23
64F2:  MOVWF  x1A
64F4:  MOVLW  04
64F6:  MOVWF  x1C
64F8:  MOVLW  89
64FA:  MOVWF  x1B
64FC:  MOVLW  01
64FE:  MOVWF  x1D
6500:  MOVWF  x1E
6502:  MOVLB  0
6504:  CALL   1278
....................       glcd_rect(51, 44, 62, 48, YES, OFF);glcd_text57(52, 44, kpa, 1, ON); 
6508:  MOVLW  33
650A:  MOVLB  5
650C:  MOVWF  x1B
650E:  MOVLW  2C
6510:  MOVWF  x1C
6512:  MOVLW  3E
6514:  MOVWF  x1D
6516:  MOVLW  30
6518:  MOVWF  x1E
651A:  MOVLW  01
651C:  MOVWF  x1F
651E:  CLRF   x20
6520:  MOVLB  0
6522:  CALL   156E
6526:  MOVLW  34
6528:  MOVLB  5
652A:  MOVWF  x19
652C:  MOVLW  2C
652E:  MOVWF  x1A
6530:  MOVLW  04
6532:  MOVWF  x1C
6534:  MOVLW  89
6536:  MOVWF  x1B
6538:  MOVLW  01
653A:  MOVWF  x1D
653C:  MOVWF  x1E
653E:  MOVLB  0
6540:  CALL   1278
....................       displayT(ADC_Pt100,69,20,2); 
6544:  MOVFF  4C1,50C
6548:  MOVFF  4C0,50B
654C:  MOVFF  4BF,50A
6550:  MOVFF  4BE,509
6554:  MOVLW  45
6556:  MOVLB  5
6558:  MOVWF  x0D
655A:  MOVLW  14
655C:  MOVWF  x0E
655E:  MOVLW  02
6560:  MOVWF  x0F
6562:  MOVLB  0
6564:  CALL   2A4E
....................       glcd_circle(95,40,2,NO,ON); 
6568:  MOVLW  5F
656A:  MOVLB  5
656C:  MOVWF  x05
656E:  MOVLW  28
6570:  MOVWF  x06
6572:  MOVLW  02
6574:  MOVWF  x07
6576:  CLRF   x08
6578:  MOVLW  01
657A:  MOVWF  x09
657C:  MOVLB  0
657E:  CALL   217A
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
6582:  MOVLW  04
6584:  MOVWF  FEA
6586:  MOVLW  E5
6588:  MOVWF  FE9
658A:  MOVFF  FF2,505
658E:  BCF    FF2.7
6590:  MOVLW  00
6592:  CALL   09D0
6596:  TBLRD*-
6598:  TBLRD*+
659A:  MOVF   FF5,W
659C:  MOVWF  FEE
659E:  IORLW  00
65A0:  BNZ   6598
65A2:  MOVLB  5
65A4:  BTFSC  x05.7
65A6:  BSF    FF2.7
65A8:  MOVLW  04
65AA:  MOVWF  x06
65AC:  MOVLW  E5
65AE:  MOVWF  x05
65B0:  MOVLW  66
65B2:  MOVWF  x07
65B4:  MOVLW  28
65B6:  MOVWF  x08
65B8:  MOVLW  02
65BA:  MOVWF  x09
65BC:  MOVWF  x0A
65BE:  MOVLB  0
65C0:  CALL   1630
....................       displayTiempo(Setpoint,5,20,2,1); 
65C4:  MOVFF  4A5,506
65C8:  MOVLW  05
65CA:  MOVLB  5
65CC:  MOVWF  x07
65CE:  MOVLW  14
65D0:  MOVWF  x08
65D2:  MOVLW  02
65D4:  MOVWF  x09
65D6:  MOVLW  01
65D8:  MOVWF  x0A
65DA:  MOVLB  0
65DC:  CALL   242A
....................  
....................       glcd_imagen(5); 
65E0:  MOVLW  05
65E2:  MOVLB  5
65E4:  MOVWF  x05
65E6:  MOVLB  0
65E8:  CALL   207E
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
65EC:  MOVLW  04
65EE:  MOVWF  FEA
65F0:  MOVLW  E5
65F2:  MOVWF  FE9
65F4:  MOVFF  FF2,505
65F8:  BCF    FF2.7
65FA:  MOVLW  00
65FC:  CALL   098C
6600:  TBLRD*-
6602:  TBLRD*+
6604:  MOVF   FF5,W
6606:  MOVWF  FEE
6608:  IORLW  00
660A:  BNZ   6602
660C:  MOVLB  5
660E:  BTFSC  x05.7
6610:  BSF    FF2.7
6612:  MOVLW  04
6614:  MOVWF  x06
6616:  MOVLW  E5
6618:  MOVWF  x05
661A:  CLRF   x07
661C:  CLRF   x08
661E:  MOVLW  02
6620:  MOVWF  x09
6622:  MOVLW  01
6624:  MOVWF  x0A
6626:  MOVLB  0
6628:  CALL   1630
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
662C:  MOVLW  04
662E:  MOVWF  FEA
6630:  MOVLW  E5
6632:  MOVWF  FE9
6634:  MOVFF  FF2,505
6638:  BCF    FF2.7
663A:  MOVLW  00
663C:  CALL   09AE
6640:  TBLRD*-
6642:  TBLRD*+
6644:  MOVF   FF5,W
6646:  MOVWF  FEE
6648:  IORLW  00
664A:  BNZ   6642
664C:  MOVLB  5
664E:  BTFSC  x05.7
6650:  BSF    FF2.7
6652:  MOVLW  04
6654:  MOVWF  x06
6656:  MOVLW  E5
6658:  MOVWF  x05
665A:  CLRF   x07
665C:  MOVLW  08
665E:  MOVWF  x08
6660:  MOVLW  02
6662:  MOVWF  x09
6664:  MOVLW  01
6666:  MOVWF  x0A
6668:  MOVLB  0
666A:  CALL   1630
....................       MuestraTiemposProgramados(); 
666E:  CALL   257A
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
6672:  MOVFF  4C5,506
6676:  MOVLW  50
6678:  MOVLB  5
667A:  MOVWF  x07
667C:  CLRF   x08
667E:  CLRF   x09
6680:  MOVLW  01
6682:  MOVWF  x0A
6684:  MOVLB  0
6686:  CALL   242A
668A:  MOVFF  4C4,506
668E:  MOVLW  56
6690:  MOVLB  5
6692:  MOVWF  x07
6694:  CLRF   x08
6696:  CLRF   x09
6698:  MOVLW  01
669A:  MOVWF  x0A
669C:  MOVLB  0
669E:  CALL   242A
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
66A2:  MOVLW  04
66A4:  MOVWF  FEA
66A6:  MOVLW  E5
66A8:  MOVWF  FE9
66AA:  MOVFF  FF2,505
66AE:  BCF    FF2.7
66B0:  MOVLW  00
66B2:  CALL   06BE
66B6:  TBLRD*-
66B8:  TBLRD*+
66BA:  MOVF   FF5,W
66BC:  MOVWF  FEE
66BE:  IORLW  00
66C0:  BNZ   66B8
66C2:  MOVLB  5
66C4:  BTFSC  x05.7
66C6:  BSF    FF2.7
66C8:  MOVLW  04
66CA:  MOVWF  x06
66CC:  MOVLW  E5
66CE:  MOVWF  x05
66D0:  MOVLW  5C
66D2:  MOVWF  x07
66D4:  CLRF   x08
66D6:  MOVLW  02
66D8:  MOVWF  x09
66DA:  MOVLW  01
66DC:  MOVWF  x0A
66DE:  MOVLB  0
66E0:  CALL   1630
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
66E4:  MOVFF  4C3,506
66E8:  MOVLW  62
66EA:  MOVLB  5
66EC:  MOVWF  x07
66EE:  CLRF   x08
66F0:  CLRF   x09
66F2:  MOVLW  01
66F4:  MOVWF  x0A
66F6:  MOVLB  0
66F8:  CALL   242A
66FC:  MOVFF  4C2,506
6700:  MOVLW  68
6702:  MOVLB  5
6704:  MOVWF  x07
6706:  CLRF   x08
6708:  CLRF   x09
670A:  MOVLW  01
670C:  MOVWF  x0A
670E:  MOVLB  0
6710:  CALL   242A
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
6714:  MOVFF  4CD,506
6718:  MOVLW  50
671A:  MOVLB  5
671C:  MOVWF  x07
671E:  MOVLW  08
6720:  MOVWF  x08
6722:  CLRF   x09
6724:  MOVLW  01
6726:  MOVWF  x0A
6728:  MOVLB  0
672A:  CALL   242A
672E:  MOVFF  4CC,506
6732:  MOVLW  56
6734:  MOVLB  5
6736:  MOVWF  x07
6738:  MOVLW  08
673A:  MOVWF  x08
673C:  CLRF   x09
673E:  MOVLW  01
6740:  MOVWF  x0A
6742:  MOVLB  0
6744:  CALL   242A
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
6748:  MOVLW  04
674A:  MOVWF  FEA
674C:  MOVLW  E5
674E:  MOVWF  FE9
6750:  MOVFF  FF2,505
6754:  BCF    FF2.7
6756:  MOVLW  00
6758:  CALL   06BE
675C:  TBLRD*-
675E:  TBLRD*+
6760:  MOVF   FF5,W
6762:  MOVWF  FEE
6764:  IORLW  00
6766:  BNZ   675E
6768:  MOVLB  5
676A:  BTFSC  x05.7
676C:  BSF    FF2.7
676E:  MOVLW  04
6770:  MOVWF  x06
6772:  MOVLW  E5
6774:  MOVWF  x05
6776:  MOVLW  5C
6778:  MOVWF  x07
677A:  MOVLW  08
677C:  MOVWF  x08
677E:  MOVLW  02
6780:  MOVWF  x09
6782:  MOVLW  01
6784:  MOVWF  x0A
6786:  MOVLB  0
6788:  CALL   1630
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
678C:  MOVFF  4CB,506
6790:  MOVLW  62
6792:  MOVLB  5
6794:  MOVWF  x07
6796:  MOVLW  08
6798:  MOVWF  x08
679A:  CLRF   x09
679C:  MOVLW  01
679E:  MOVWF  x0A
67A0:  MOVLB  0
67A2:  CALL   242A
67A6:  MOVFF  4CA,506
67AA:  MOVLW  68
67AC:  MOVLB  5
67AE:  MOVWF  x07
67B0:  MOVLW  08
67B2:  MOVWF  x08
67B4:  CLRF   x09
67B6:  MOVLW  01
67B8:  MOVWF  x0A
67BA:  MOVLB  0
67BC:  CALL   242A
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint))// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
67C0:  MOVLB  5
67C2:  CLRF   x06
67C4:  MOVFF  4A5,505
67C8:  MOVLB  0
67CA:  CALL   19EE
67CE:  MOVFF  03,508
67D2:  MOVFF  02,507
67D6:  MOVFF  01,506
67DA:  MOVFF  00,505
67DE:  MOVFF  4C1,50C
67E2:  MOVFF  4C0,50B
67E6:  MOVFF  4BF,50A
67EA:  MOVFF  4BE,509
67EE:  GOTO   2AC6
67F2:  BC    67F6
67F4:  BNZ   685C
....................    { 
....................       if(est==0) 
67F6:  MOVLB  4
67F8:  BTFSC  x96.0
67FA:  BRA    685E
....................       { 
....................          tiempo_esterilizacion=1; 
67FC:  MOVLW  01
67FE:  MOVWF  xA8
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
6800:  MOVLB  5
6802:  CLRF   x05
6804:  MOVLW  5A
6806:  MOVWF  x06
6808:  MOVLW  38
680A:  MOVWF  x07
680C:  MOVLB  0
680E:  CALL   26BA
6812:  MOVLW  0F
6814:  MOVLB  5
6816:  MOVWF  x1B
6818:  MOVLW  12
681A:  MOVWF  x1C
681C:  MOVLW  1E
681E:  MOVWF  x1D
6820:  MOVLW  35
6822:  MOVWF  x1E
6824:  CLRF   x1F
6826:  CLRF   x20
6828:  MOVLB  0
682A:  CALL   156E
682E:  MOVLW  19
6830:  MOVLB  5
6832:  MOVWF  x1B
6834:  MOVLW  12
6836:  MOVWF  x1C
6838:  MOVLW  3C
683A:  MOVWF  x1D
683C:  MOVLW  1A
683E:  MOVWF  x1E
6840:  CLRF   x1F
6842:  MOVLW  01
6844:  MOVWF  x20
6846:  MOVLB  0
6848:  CALL   156E
684C:  MOVLB  4
684E:  BSF    x96.0
....................          glcd_imagen(5); 
6850:  MOVLW  05
6852:  MOVLB  5
6854:  MOVWF  x05
6856:  MOVLB  0
6858:  CALL   207E
685C:  MOVLB  4
....................       } 
....................    }   
....................     
....................    /*if(ADC_Pt100<((float)Setpoint-2.0)) 
....................    { 
....................       glcd_rect(15, 18, 30, 53, NO, ON); 
....................       if(est==1) 
....................       {glcd_rect(25, 18, 60, 26, NO, OFF);} 
....................       est=0;tiempo_esterilizacion=0; 
....................    }*/ 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
685E:  DECFSZ xAA,W
6860:  BRA    688A
6862:  MOVF   xA8,W
6864:  SUBLW  02
6866:  BNZ   688A
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
6868:  CLRF   xA0
....................       if(Presostato<20) 
686A:  MOVF   x91,W
686C:  SUBLW  13
686E:  BNC   6874
....................       { 
....................          EVDesfogue=3; 
6870:  MOVLW  03
6872:  MOVWF  x99
....................       } 
....................       if(Presostato<7) 
6874:  MOVF   x91,W
6876:  SUBLW  06
6878:  BNC   6886
....................       { 
....................          tiempo_secado=1; 
687A:  MOVLW  01
687C:  MOVWF  xA9
....................          Control=0;EVDesfogue=3; 
687E:  CLRF   xA0
6880:  MOVLW  03
6882:  MOVWF  x99
....................       } 
....................       else 
6884:  BRA    688A
....................       { 
....................          EVDesfogue=1; 
6886:  MOVLW  01
6888:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
688A:  MOVF   xAA,W
688C:  SUBLW  02
688E:  BNZ   68BE
6890:  MOVF   xA8,W
6892:  SUBLW  02
6894:  BNZ   68BE
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
6896:  CLRF   xA0
....................       if(Presostato<20) 
6898:  MOVF   x91,W
689A:  SUBLW  13
689C:  BNC   68A4
....................       { 
....................          EVDesfogue=3; 
689E:  MOVLW  03
68A0:  MOVWF  x99
....................       } 
....................       else 
68A2:  BRA    68A8
....................       { 
....................          EVDesfogue=2; 
68A4:  MOVLW  02
68A6:  MOVWF  x99
....................       } 
....................       if(Presostato<7) 
68A8:  MOVF   x91,W
68AA:  SUBLW  06
68AC:  BNC   68BE
....................       { 
....................          tiempo_esterilizacion=3; 
68AE:  MOVLW  03
68B0:  MOVWF  xA8
....................          tiempo_secado=2; 
68B2:  MOVLW  02
68B4:  MOVWF  xA9
....................          fin_ciclo=1; 
68B6:  MOVLW  01
68B8:  MOVWF  xA6
....................          EVDesfogue=3; 
68BA:  MOVLW  03
68BC:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]==Testerilizacionp[0])&&(Testerilizacion[1]==Testerilizacionp[1])&&(Testerilizacion[2]==Testerilizacionp[2])&&(Testerilizacion[3]==Testerilizacionp[3]) && tiempo_esterilizacion==1) 
68BE:  MOVF   xC6,W
68C0:  SUBWF  xC2,W
68C2:  BNZ   68DE
68C4:  MOVF   xC7,W
68C6:  SUBWF  xC3,W
68C8:  BNZ   68DE
68CA:  MOVF   xC8,W
68CC:  SUBWF  xC4,W
68CE:  BNZ   68DE
68D0:  MOVF   xC9,W
68D2:  SUBWF  xC5,W
68D4:  BNZ   68DE
68D6:  DECFSZ xA8,W
68D8:  BRA    68DE
....................    { 
....................       tiempo_esterilizacion=2; 
68DA:  MOVLW  02
68DC:  MOVWF  xA8
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
68DE:  MOVF   xCE,W
68E0:  XORLW  80
68E2:  MOVWF  00
68E4:  MOVF   xCA,W
68E6:  XORLW  80
68E8:  SUBWF  00,W
68EA:  BZ    68EE
68EC:  BC    692E
68EE:  MOVF   xCF,W
68F0:  XORLW  80
68F2:  MOVWF  00
68F4:  MOVF   xCB,W
68F6:  XORLW  80
68F8:  SUBWF  00,W
68FA:  BZ    68FE
68FC:  BC    692E
68FE:  MOVF   xD0,W
6900:  XORLW  80
6902:  MOVWF  00
6904:  MOVF   xCC,W
6906:  XORLW  80
6908:  SUBWF  00,W
690A:  BZ    690E
690C:  BC    692E
690E:  MOVF   xD1,W
6910:  XORLW  80
6912:  MOVWF  00
6914:  MOVF   xCD,W
6916:  XORLW  80
6918:  SUBWF  00,W
691A:  BZ    691E
691C:  BC    692E
691E:  DECFSZ xA9,W
6920:  BRA    692E
....................    { 
....................       tiempo_esterilizacion=3; 
6922:  MOVLW  03
6924:  MOVWF  xA8
....................       tiempo_secado=2; 
6926:  MOVLW  02
6928:  MOVWF  xA9
....................       fin_ciclo=1; 
692A:  MOVLW  01
692C:  MOVWF  xA6
....................    } 
....................     
....................    if(fin_ciclo==1) 
692E:  DECFSZ xA6,W
6930:  BRA    69AC
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
6932:  CLRF   xA0
6934:  MOVLW  03
6936:  MOVWF  x99
....................       if(disp_Fin==0) 
6938:  BTFSC  x97.1
693A:  BRA    69AC
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
693C:  MOVLB  5
693E:  CLRF   x1B
6940:  MOVLW  37
6942:  MOVWF  x1C
6944:  MOVLW  7F
6946:  MOVWF  x1D
6948:  MOVLW  3F
694A:  MOVWF  x1E
694C:  MOVLW  01
694E:  MOVWF  x1F
6950:  CLRF   x20
6952:  MOVLB  0
6954:  CALL   156E
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
6958:  MOVLW  04
695A:  MOVWF  FEA
695C:  MOVLW  E5
695E:  MOVWF  FE9
6960:  MOVFF  FF2,505
6964:  BCF    FF2.7
6966:  MOVLW  00
6968:  CALL   0E06
696C:  TBLRD*-
696E:  TBLRD*+
6970:  MOVF   FF5,W
6972:  MOVWF  FEE
6974:  IORLW  00
6976:  BNZ   696E
6978:  MOVLB  5
697A:  BTFSC  x05.7
697C:  BSF    FF2.7
697E:  MOVLW  04
6980:  MOVWF  x06
6982:  MOVLW  E5
6984:  MOVWF  x05
6986:  CLRF   x07
6988:  MOVLW  37
698A:  MOVWF  x08
698C:  MOVLW  02
698E:  MOVWF  x09
6990:  MOVLW  01
6992:  MOVWF  x0A
6994:  MOVLB  0
6996:  CALL   1630
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
699A:  MOVLB  4
699C:  BCF    x96.2
699E:  BCF    x96.3
69A0:  BSF    x96.4
69A2:  BCF    x96.5
69A4:  BSF    x96.6
69A6:  BCF    x96.7
69A8:  BCF    x97.0
69AA:  BSF    x97.1
....................       }    
....................        
....................    } 
....................    if(RIGHT) 
69AC:  BSF    F92.2
69AE:  BTFSS  F80.2
69B0:  BRA    69EA
....................    { 
....................       glcd_init(ON); 
69B2:  MOVLW  01
69B4:  MOVLB  5
69B6:  MOVWF  x05
69B8:  MOVLB  0
69BA:  CALL   1114
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
69BE:  MOVLB  4
69C0:  BCF    x96.2
69C2:  BCF    x96.3
69C4:  BCF    x96.4
69C6:  BCF    x96.5
69C8:  BCF    x96.6
69CA:  BCF    x96.7
69CC:  BCF    x97.0
69CE:  BCF    x97.1
....................       disp_Alarma=0; 
69D0:  BCF    x97.3
....................       delay_ms(1000); 
69D2:  MOVLW  04
69D4:  MOVLB  5
69D6:  MOVWF  x05
69D8:  MOVLW  FA
69DA:  MOVWF  x06
69DC:  MOVLB  0
69DE:  CALL   0F98
69E2:  MOVLB  5
69E4:  DECFSZ x05,F
69E6:  BRA    69D8
69E8:  MOVLB  4
....................    } 
....................    EVAgua=10; 
69EA:  MOVLW  0A
69EC:  MOVWF  x9A
....................    Envio_Esclavos(); 
69EE:  MOVLB  0
69F0:  CALL   201E
69F4:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
69F6:  MOVF   xA2,W
69F8:  SUBLW  64
69FA:  BTFSS  FD8.2
69FC:  BRA    6AF8
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
69FE:  MOVFF  4DA,506
6A02:  MOVLB  5
6A04:  CLRF   x07
6A06:  MOVLW  0A
6A08:  MOVWF  x08
6A0A:  MOVLW  02
6A0C:  MOVWF  x09
6A0E:  MOVLW  01
6A10:  MOVWF  x0A
6A12:  MOVLB  0
6A14:  CALL   242A
....................    displayTiempo(datoRx[1],0,20,2,1); 
6A18:  MOVFF  4DB,506
6A1C:  MOVLB  5
6A1E:  CLRF   x07
6A20:  MOVLW  14
6A22:  MOVWF  x08
6A24:  MOVLW  02
6A26:  MOVWF  x09
6A28:  MOVLW  01
6A2A:  MOVWF  x0A
6A2C:  MOVLB  0
6A2E:  CALL   242A
....................    displayTiempo(datoRx[2],0,30,2,1); 
6A32:  MOVFF  4DC,506
6A36:  MOVLB  5
6A38:  CLRF   x07
6A3A:  MOVLW  1E
6A3C:  MOVWF  x08
6A3E:  MOVLW  02
6A40:  MOVWF  x09
6A42:  MOVLW  01
6A44:  MOVWF  x0A
6A46:  MOVLB  0
6A48:  CALL   242A
....................    displayTiempo(datoRx[3],0,40,2,1); 
6A4C:  MOVFF  4DD,506
6A50:  MOVLB  5
6A52:  CLRF   x07
6A54:  MOVLW  28
6A56:  MOVWF  x08
6A58:  MOVLW  02
6A5A:  MOVWF  x09
6A5C:  MOVLW  01
6A5E:  MOVWF  x0A
6A60:  MOVLB  0
6A62:  CALL   242A
....................    displayTiempo(Opcion,0,50,2,1); 
6A66:  MOVFF  4A7,506
6A6A:  MOVLB  5
6A6C:  CLRF   x07
6A6E:  MOVLW  32
6A70:  MOVWF  x08
6A72:  MOVLW  02
6A74:  MOVWF  x09
6A76:  MOVLW  01
6A78:  MOVWF  x0A
6A7A:  MOVLB  0
6A7C:  CALL   242A
....................    Lectura_Esclavos(); 
6A80:  CALL   1EC4
....................    Opcion++; 
6A84:  MOVLB  4
6A86:  INCF   xA7,F
....................    displayTiempo(Puerta,50,10,2,1); 
6A88:  MOVFF  48D,506
6A8C:  MOVLW  32
6A8E:  MOVLB  5
6A90:  MOVWF  x07
6A92:  MOVLW  0A
6A94:  MOVWF  x08
6A96:  MOVLW  02
6A98:  MOVWF  x09
6A9A:  MOVLW  01
6A9C:  MOVWF  x0A
6A9E:  MOVLB  0
6AA0:  CALL   242A
....................    displayTiempo(Parada,50,20,2,1); 
6AA4:  MOVFF  48E,506
6AA8:  MOVLW  32
6AAA:  MOVLB  5
6AAC:  MOVWF  x07
6AAE:  MOVLW  14
6AB0:  MOVWF  x08
6AB2:  MOVLW  02
6AB4:  MOVWF  x09
6AB6:  MOVLW  01
6AB8:  MOVWF  x0A
6ABA:  MOVLB  0
6ABC:  CALL   242A
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6AC0:  MOVFF  4C1,508
6AC4:  MOVFF  4C0,507
6AC8:  MOVFF  4BF,506
6ACC:  MOVFF  4BE,505
6AD0:  GOTO   2B42
6AD4:  MOVFF  01,505
6AD8:  MOVFF  01,506
6ADC:  MOVLW  32
6ADE:  MOVLB  5
6AE0:  MOVWF  x07
6AE2:  MOVLW  1E
6AE4:  MOVWF  x08
6AE6:  MOVLW  02
6AE8:  MOVWF  x09
6AEA:  MOVLW  01
6AEC:  MOVWF  x0A
6AEE:  MOVLB  0
6AF0:  CALL   242A
....................     
....................  } 
6AF4:  MOVLB  4
6AF6:  BRA    69F6
....................        
....................       while(Parada==0) 
....................       { 
6AF8:  MOVF   x8E,F
6AFA:  BNZ   6BB4
....................          Lectura_Esclavos(); 
6AFC:  MOVLB  0
6AFE:  CALL   1EC4
....................          delay_ms(100); 
6B02:  MOVLW  64
6B04:  MOVLB  5
6B06:  MOVWF  x06
6B08:  MOVLB  0
6B0A:  CALL   0F98
....................          if(disp_Stop==0) 
6B0E:  MOVLB  4
6B10:  BTFSC  x96.7
6B12:  BRA    6BB2
....................          { 
....................             glcd_fillScreen(OFF);  
6B14:  MOVLB  5
6B16:  CLRF   x06
6B18:  MOVLB  0
6B1A:  CALL   1002
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6B1E:  MOVLW  04
6B20:  MOVWF  FEA
6B22:  MOVLW  E5
6B24:  MOVWF  FE9
6B26:  MOVFF  FF2,505
6B2A:  BCF    FF2.7
6B2C:  MOVLW  00
6B2E:  CALL   0E32
6B32:  TBLRD*-
6B34:  TBLRD*+
6B36:  MOVF   FF5,W
6B38:  MOVWF  FEE
6B3A:  IORLW  00
6B3C:  BNZ   6B34
6B3E:  MOVLB  5
6B40:  BTFSC  x05.7
6B42:  BSF    FF2.7
6B44:  MOVLW  04
6B46:  MOVWF  x06
6B48:  MOVLW  E5
6B4A:  MOVWF  x05
6B4C:  CLRF   x07
6B4E:  MOVLW  0A
6B50:  MOVWF  x08
6B52:  CLRF   x09
6B54:  MOVLW  02
6B56:  MOVWF  x0A
6B58:  MOVLB  0
6B5A:  CALL   1630
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6B5E:  MOVLW  04
6B60:  MOVWF  FEA
6B62:  MOVLW  E5
6B64:  MOVWF  FE9
6B66:  MOVFF  FF2,505
6B6A:  BCF    FF2.7
6B6C:  MOVLW  00
6B6E:  CALL   0E58
6B72:  TBLRD*-
6B74:  TBLRD*+
6B76:  MOVF   FF5,W
6B78:  MOVWF  FEE
6B7A:  IORLW  00
6B7C:  BNZ   6B74
6B7E:  MOVLB  5
6B80:  BTFSC  x05.7
6B82:  BSF    FF2.7
6B84:  MOVLW  04
6B86:  MOVWF  x06
6B88:  MOVLW  E5
6B8A:  MOVWF  x05
6B8C:  CLRF   x07
6B8E:  MOVLW  1E
6B90:  MOVWF  x08
6B92:  CLRF   x09
6B94:  MOVLW  02
6B96:  MOVWF  x0A
6B98:  MOVLB  0
6B9A:  CALL   1630
6B9E:  MOVLB  4
6BA0:  BSF    x95.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6BA2:  BCF    x96.2
6BA4:  BCF    x96.3
6BA6:  BCF    x96.4
6BA8:  BCF    x96.5
6BAA:  BCF    x96.6
6BAC:  BSF    x96.7
6BAE:  BCF    x97.0
6BB0:  BCF    x97.1
....................          } 
....................       }    
6BB2:  BRA    6AF8
....................       if(Parada==1) 
6BB4:  DECFSZ x8E,W
6BB6:  BRA    6C60
....................       { 
....................          while(emergency==1) 
....................          { 
6BB8:  BTFSS  x95.3
6BBA:  BRA    6C60
....................             Lectura_Esclavos(); 
6BBC:  MOVLB  0
6BBE:  CALL   1EC4
....................             if(disp_Stop==1) 
6BC2:  MOVLB  4
6BC4:  BTFSS  x96.7
6BC6:  BRA    6BD6
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6BC8:  MOVLB  5
6BCA:  CLRF   x06
6BCC:  MOVLB  0
6BCE:  CALL   1002
6BD2:  MOVLB  4
6BD4:  BCF    x96.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6BD6:  MOVLW  04
6BD8:  MOVWF  FEA
6BDA:  MOVLW  E5
6BDC:  MOVWF  FE9
6BDE:  MOVFF  FF2,505
6BE2:  BCF    FF2.7
6BE4:  MOVLW  00
6BE6:  MOVLB  0
6BE8:  CALL   0E7E
6BEC:  TBLRD*-
6BEE:  TBLRD*+
6BF0:  MOVF   FF5,W
6BF2:  MOVWF  FEE
6BF4:  IORLW  00
6BF6:  BNZ   6BEE
6BF8:  MOVLB  5
6BFA:  BTFSC  x05.7
6BFC:  BSF    FF2.7
6BFE:  MOVLW  04
6C00:  MOVWF  x06
6C02:  MOVLW  E5
6C04:  MOVWF  x05
6C06:  CLRF   x07
6C08:  MOVLW  0A
6C0A:  MOVWF  x08
6C0C:  CLRF   x09
6C0E:  MOVLW  02
6C10:  MOVWF  x0A
6C12:  MOVLB  0
6C14:  CALL   1630
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6C18:  MOVLW  04
6C1A:  MOVWF  FEA
6C1C:  MOVLW  E5
6C1E:  MOVWF  FE9
6C20:  MOVFF  FF2,505
6C24:  BCF    FF2.7
6C26:  MOVLW  00
6C28:  CALL   0EA4
6C2C:  TBLRD*-
6C2E:  TBLRD*+
6C30:  MOVF   FF5,W
6C32:  MOVWF  FEE
6C34:  IORLW  00
6C36:  BNZ   6C2E
6C38:  MOVLB  5
6C3A:  BTFSC  x05.7
6C3C:  BSF    FF2.7
6C3E:  MOVLW  04
6C40:  MOVWF  x06
6C42:  MOVLW  E5
6C44:  MOVWF  x05
6C46:  CLRF   x07
6C48:  MOVLW  1E
6C4A:  MOVWF  x08
6C4C:  CLRF   x09
6C4E:  MOVLW  02
6C50:  MOVWF  x0A
6C52:  MOVLB  0
6C54:  CALL   1630
....................          glcd_update();} 
6C58:  CALL   105C
6C5C:  MOVLB  4
6C5E:  BRA    6BB8
....................       } 
....................    } 
6C60:  MOVLB  0
6C62:  GOTO   2FD4
.................... } 
6C66:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
