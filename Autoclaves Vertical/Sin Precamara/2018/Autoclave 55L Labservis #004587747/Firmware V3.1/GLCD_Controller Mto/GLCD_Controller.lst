CCS PCH C Compiler, Version 4.104, 5967               23-abr.-19 15:26

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclaves Vertical\Sin Precamara\2018\Autoclave 55L Labservis #004587747\Firmware V3.1\GLCD_Controller Mto\GLCD_Controller.lst

               ROM used: 29206 bytes (89%)
                         Largest free fragment is 3558
               RAM used: 1294 (63%) at main() level
                         1348 (66%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2CAC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0F7C
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
104A:  MOVLW  05
104C:  MOVWF  FEA
104E:  MOVLW  0B
1050:  MOVWF  FE9
1052:  MOVF   FEF,W
1054:  BZ    1072
1056:  MOVLW  0F
1058:  MOVWF  01
105A:  CLRF   00
105C:  DECFSZ 00,F
105E:  BRA    105C
1060:  DECFSZ 01,F
1062:  BRA    105A
1064:  MOVLW  8F
1066:  MOVWF  00
1068:  DECFSZ 00,F
106A:  BRA    1068
106C:  NOP   
106E:  DECFSZ FEF,F
1070:  BRA    1056
1072:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
19BE:  MOVLW  08
19C0:  MOVWF  01
19C2:  MOVLW  11
19C4:  MOVWF  00
19C6:  DECFSZ 00,F
19C8:  BRA    19C6
19CA:  BCF    F8A.1
19CC:  BCF    F93.1
19CE:  MOVLW  11
19D0:  MOVWF  00
19D2:  DECFSZ 00,F
19D4:  BRA    19D2
19D6:  MOVLB  5
19D8:  RLCF   x0E,F
19DA:  BCF    F8A.0
19DC:  BTFSC  FD8.0
19DE:  BSF    F93.0
19E0:  BTFSS  FD8.0
19E2:  BCF    F93.0
19E4:  BSF    F93.1
19E6:  BTFSS  F81.1
19E8:  BRA    19E6
19EA:  DECFSZ 01,F
19EC:  BRA    19F0
19EE:  BRA    19F4
19F0:  MOVLB  0
19F2:  BRA    19C2
19F4:  MOVLW  11
19F6:  MOVWF  00
19F8:  DECFSZ 00,F
19FA:  BRA    19F8
19FC:  BCF    F8A.1
19FE:  BCF    F93.1
1A00:  NOP   
1A02:  BSF    F93.0
1A04:  MOVLW  11
1A06:  MOVWF  00
1A08:  DECFSZ 00,F
1A0A:  BRA    1A08
1A0C:  MOVLW  11
1A0E:  MOVWF  00
1A10:  DECFSZ 00,F
1A12:  BRA    1A10
1A14:  BSF    F93.1
1A16:  BTFSS  F81.1
1A18:  BRA    1A16
1A1A:  CLRF   01
1A1C:  MOVLW  11
1A1E:  MOVWF  00
1A20:  DECFSZ 00,F
1A22:  BRA    1A20
1A24:  BTFSC  F81.0
1A26:  BSF    01.0
1A28:  BCF    F8A.1
1A2A:  BCF    F93.1
1A2C:  BCF    F8A.0
1A2E:  BCF    F93.0
1A30:  MOVLB  0
1A32:  RETLW  00
1A34:  MOVLW  08
1A36:  MOVLB  5
1A38:  MOVWF  x0E
1A3A:  MOVFF  00,50F
1A3E:  BSF    F93.0
1A40:  MOVLW  11
1A42:  MOVWF  00
1A44:  DECFSZ 00,F
1A46:  BRA    1A44
1A48:  BSF    F93.1
1A4A:  BTFSS  F81.1
1A4C:  BRA    1A4A
1A4E:  BTFSC  F81.0
1A50:  BSF    FD8.0
1A52:  BTFSS  F81.0
1A54:  BCF    FD8.0
1A56:  RLCF   01,F
1A58:  MOVLW  11
1A5A:  MOVWF  00
1A5C:  DECFSZ 00,F
1A5E:  BRA    1A5C
1A60:  BCF    F93.1
1A62:  BCF    F8A.1
1A64:  DECFSZ x0E,F
1A66:  BRA    1A3E
1A68:  BSF    F93.0
1A6A:  MOVLW  11
1A6C:  MOVWF  00
1A6E:  DECFSZ 00,F
1A70:  BRA    1A6E
1A72:  BCF    F8A.0
1A74:  MOVF   x0F,W
1A76:  BTFSS  FD8.2
1A78:  BCF    F93.0
1A7A:  NOP   
1A7C:  BSF    F93.1
1A7E:  BTFSS  F81.1
1A80:  BRA    1A7E
1A82:  MOVLW  11
1A84:  MOVWF  00
1A86:  DECFSZ 00,F
1A88:  BRA    1A86
1A8A:  BCF    F8A.1
1A8C:  BCF    F93.1
1A8E:  MOVLW  11
1A90:  MOVWF  00
1A92:  DECFSZ 00,F
1A94:  BRA    1A92
1A96:  BCF    F8A.0
1A98:  BCF    F93.0
1A9A:  MOVLB  0
1A9C:  GOTO   1FFE (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
11C6:  BCF    F93.2
11C8:  BSF    F8A.2
....................    output_low(GLCD_E); 
11CA:  BCF    F93.7
11CC:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
11CE:  BCF    F93.3
11D0:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
11D2:  BCF    F93.4
11D4:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
11D6:  BCF    F93.5
11D8:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
11DA:  MOVLB  5
11DC:  CLRF   x20
11DE:  MOVLW  C0
11E0:  MOVWF  x21
11E2:  MOVLB  0
11E4:  RCALL  1074
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
11E6:  MOVLW  01
11E8:  MOVLB  5
11EA:  MOVWF  x20
11EC:  MOVLW  C0
11EE:  MOVWF  x21
11F0:  MOVLB  0
11F2:  RCALL  1074
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
11F4:  MOVLB  5
11F6:  CLRF   x20
11F8:  MOVLW  40
11FA:  MOVWF  x21
11FC:  MOVLB  0
11FE:  RCALL  1074
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
1200:  MOVLW  01
1202:  MOVLB  5
1204:  MOVWF  x20
1206:  MOVLW  40
1208:  MOVWF  x21
120A:  MOVLB  0
120C:  RCALL  1074
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
120E:  MOVLB  5
1210:  CLRF   x20
1212:  MOVLW  B8
1214:  MOVWF  x21
1216:  MOVLB  0
1218:  RCALL  1074
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
121A:  MOVLW  01
121C:  MOVLB  5
121E:  MOVWF  x20
1220:  MOVLW  B8
1222:  MOVWF  x21
1224:  MOVLB  0
1226:  RCALL  1074
....................  
....................    if(mode == ON) 
1228:  MOVLB  5
122A:  DECFSZ x0A,W
122C:  BRA    124A
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
122E:  CLRF   x20
1230:  MOVLW  3F
1232:  MOVWF  x21
1234:  MOVLB  0
1236:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1238:  MOVLW  01
123A:  MOVLB  5
123C:  MOVWF  x20
123E:  MOVLW  3F
1240:  MOVWF  x21
1242:  MOVLB  0
1244:  RCALL  1074
....................    } 
....................    else 
1246:  BRA    1262
1248:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
124A:  CLRF   x20
124C:  MOVLW  3E
124E:  MOVWF  x21
1250:  MOVLB  0
1252:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
1254:  MOVLW  01
1256:  MOVLB  5
1258:  MOVWF  x20
125A:  MOVLW  3E
125C:  MOVWF  x21
125E:  MOVLB  0
1260:  RCALL  1074
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
1262:  MOVLB  5
1264:  CLRF   x0B
1266:  MOVLB  0
1268:  RCALL  10B4
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
126A:  RCALL  110E
....................    #endif 
.................... } 
126C:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
110E:  MOVLB  5
1110:  CLRF   x1C
1112:  MOVLW  16
1114:  MOVWF  x1B
....................    p2 = displayData.right; 
1116:  MOVLW  02
1118:  MOVWF  x1E
111A:  MOVLW  16
111C:  MOVWF  x1D
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
111E:  CLRF   x19
1120:  MOVF   x19,W
1122:  SUBLW  07
1124:  BNC   11C2
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1126:  BCF    F93.5
1128:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
112A:  CLRF   x20
112C:  MOVLW  40
112E:  MOVWF  x21
1130:  MOVLB  0
1132:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1134:  MOVLW  01
1136:  MOVLB  5
1138:  MOVWF  x20
113A:  MOVLW  40
113C:  MOVWF  x21
113E:  MOVLB  0
1140:  RCALL  1074
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1142:  MOVLB  5
1144:  MOVF   x19,W
1146:  IORLW  B8
1148:  MOVWF  x1F
114A:  CLRF   x20
114C:  MOVWF  x21
114E:  MOVLB  0
1150:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
1152:  MOVLB  5
1154:  MOVF   x19,W
1156:  IORLW  B8
1158:  MOVWF  x1F
115A:  MOVLW  01
115C:  MOVWF  x20
115E:  MOVFF  51F,521
1162:  MOVLB  0
1164:  RCALL  1074
....................       output_high(GLCD_DI);                     // Set for data 
1166:  BCF    F93.5
1168:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
116A:  MOVLB  5
116C:  CLRF   x1A
116E:  MOVF   x1A,W
1170:  SUBLW  3F
1172:  BNC   11BE
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
1174:  MOVFF  51C,03
1178:  MOVF   x1B,W
117A:  INCF   x1B,F
117C:  BTFSC  FD8.2
117E:  INCF   x1C,F
1180:  MOVWF  FE9
1182:  MOVFF  03,FEA
1186:  MOVFF  FEF,51F
118A:  CLRF   x20
118C:  MOVFF  51F,521
1190:  MOVLB  0
1192:  RCALL  1074
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
1194:  MOVLB  5
1196:  MOVFF  51E,03
119A:  MOVF   x1D,W
119C:  INCF   x1D,F
119E:  BTFSC  FD8.2
11A0:  INCF   x1E,F
11A2:  MOVWF  FE9
11A4:  MOVFF  03,FEA
11A8:  MOVFF  FEF,51F
11AC:  MOVLW  01
11AE:  MOVWF  x20
11B0:  MOVFF  51F,521
11B4:  MOVLB  0
11B6:  RCALL  1074
....................       } 
11B8:  MOVLB  5
11BA:  INCF   x1A,F
11BC:  BRA    116E
....................    } 
11BE:  INCF   x19,F
11C0:  BRA    1120
.................... } 
11C2:  MOVLB  0
11C4:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
126E:  MOVLB  5
1270:  CLRF   x41
1272:  RRCF   x3C,W
1274:  MOVWF  x40
1276:  RRCF   x40,F
1278:  RRCF   x40,F
127A:  MOVLW  1F
127C:  ANDWF  x40,F
....................    temp *= 64; 
127E:  RLCF   x40,F
1280:  RLCF   x41,F
1282:  RLCF   x40,F
1284:  RLCF   x41,F
1286:  RLCF   x40,F
1288:  RLCF   x41,F
128A:  RLCF   x40,F
128C:  RLCF   x41,F
128E:  RLCF   x40,F
1290:  RLCF   x41,F
1292:  RLCF   x40,F
1294:  RLCF   x41,F
1296:  MOVLW  C0
1298:  ANDWF  x40,F
....................    temp += x; 
129A:  MOVF   x3B,W
129C:  ADDWF  x40,F
129E:  MOVLW  00
12A0:  ADDWFC x41,F
....................  
....................    if(x > 63) 
12A2:  MOVF   x3B,W
12A4:  SUBLW  3F
12A6:  BC    12C2
....................    { 
....................       p = displayData.right + temp - 64; 
12A8:  MOVLW  16
12AA:  ADDWF  x40,W
12AC:  MOVWF  x42
12AE:  MOVLW  02
12B0:  ADDWFC x41,W
12B2:  MOVWF  x43
12B4:  MOVLW  40
12B6:  SUBWF  x42,W
12B8:  MOVWF  x3E
12BA:  MOVLW  00
12BC:  SUBWFB x43,W
12BE:  MOVWF  x3F
....................    } 
....................    else 
12C0:  BRA    12CE
....................    { 
....................       p = displayData.left + temp; 
12C2:  MOVLW  16
12C4:  ADDWF  x40,W
12C6:  MOVWF  x3E
12C8:  MOVLW  00
12CA:  ADDWFC x41,W
12CC:  MOVWF  x3F
....................    } 
....................  
....................    if(color) 
12CE:  MOVF   x3D,F
12D0:  BZ    12FC
....................    { 
....................       bit_set(*p, y%8); 
12D2:  MOVFF  53F,03
12D6:  MOVFF  53E,FE9
12DA:  MOVFF  53F,FEA
12DE:  MOVF   x3C,W
12E0:  ANDLW  07
12E2:  MOVWF  x42
12E4:  MOVLW  01
12E6:  MOVWF  00
12E8:  MOVF   x42,W
12EA:  MOVWF  01
12EC:  BZ    12F6
12EE:  BCF    FD8.0
12F0:  RLCF   00,F
12F2:  DECFSZ 01,F
12F4:  BRA    12EE
12F6:  MOVF   00,W
12F8:  IORWF  FEF,F
....................    } 
....................    else 
12FA:  BRA    1326
....................    { 
....................       bit_clear(*p, y%8); 
12FC:  MOVFF  53F,03
1300:  MOVFF  53E,FE9
1304:  MOVFF  53F,FEA
1308:  MOVF   x3C,W
130A:  ANDLW  07
130C:  MOVWF  x42
130E:  MOVLW  01
1310:  MOVWF  00
1312:  MOVF   x42,W
1314:  MOVWF  01
1316:  BZ    1320
1318:  BCF    FD8.0
131A:  RLCF   00,F
131C:  DECFSZ 01,F
131E:  BRA    1318
1320:  MOVF   00,W
1322:  XORLW  FF
1324:  ANDWF  FEF,F
....................    } 
.................... } 
1326:  MOVLB  0
1328:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
10B4:  MOVLB  5
10B6:  CLRF   x0E
10B8:  MOVLW  16
10BA:  MOVWF  x0D
....................    p2 = displayData.right; 
10BC:  MOVLW  02
10BE:  MOVWF  x10
10C0:  MOVLW  16
10C2:  MOVWF  x0F
....................    data = 0xFF * color; 
10C4:  MOVF   x0B,W
10C6:  MULLW  FF
10C8:  MOVFF  FF3,50C
....................  
....................    for(i=0; i<512; ++i) 
10CC:  CLRF   x12
10CE:  CLRF   x11
10D0:  MOVF   x12,W
10D2:  SUBLW  01
10D4:  BNC   110A
....................    { 
....................       *p1++ = data; 
10D6:  MOVFF  50E,03
10DA:  MOVF   x0D,W
10DC:  INCF   x0D,F
10DE:  BTFSC  FD8.2
10E0:  INCF   x0E,F
10E2:  MOVWF  FE9
10E4:  MOVFF  03,FEA
10E8:  MOVFF  50C,FEF
....................       *p2++ = data; 
10EC:  MOVFF  510,03
10F0:  MOVF   x0F,W
10F2:  INCF   x0F,F
10F4:  BTFSC  FD8.2
10F6:  INCF   x10,F
10F8:  MOVWF  FE9
10FA:  MOVFF  03,FEA
10FE:  MOVFF  50C,FEF
....................    } 
1102:  INCF   x11,F
1104:  BTFSC  FD8.2
1106:  INCF   x12,F
1108:  BRA    10D0
.................... } 
110A:  MOVLB  0
110C:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
1074:  MOVLB  5
1076:  MOVF   x20,F
1078:  BZ    1080
....................       output_high(GLCD_CS2); 
107A:  BCF    F93.4
107C:  BSF    F8A.4
....................    else 
107E:  BRA    1084
....................       output_high(GLCD_CS1); 
1080:  BCF    F93.3
1082:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
1084:  BCF    F93.6
1086:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
1088:  CLRF   F95
108A:  MOVFF  521,F8C
....................    delay_cycles(50); 
108E:  MOVLW  10
1090:  MOVWF  00
1092:  DECFSZ 00,F
1094:  BRA    1092
1096:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
1098:  BCF    F93.7
109A:  BSF    F8A.7
....................    delay_cycles(250); 
109C:  MOVLW  53
109E:  MOVWF  00
10A0:  DECFSZ 00,F
10A2:  BRA    10A0
....................    output_low(GLCD_E); 
10A4:  BCF    F93.7
10A6:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
10A8:  BCF    F93.3
10AA:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
10AC:  BCF    F93.4
10AE:  BCF    F8A.4
.................... } 
10B0:  MOVLB  0
10B2:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
14E2:  MOVLW  01
14E4:  MOVLB  5
14E6:  MOVWF  x34
14E8:  MOVWF  x35
14EA:  CLRF   x3A
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
14EC:  MOVF   x2B,W
14EE:  SUBWF  x2D,W
14F0:  MOVWF  x3B
14F2:  MOVF   x3B,W
14F4:  BTFSS  x3B.7
14F6:  BRA    14FE
14F8:  MOVLW  00
14FA:  BSF    FD8.0
14FC:  SUBFWB x3B,W
14FE:  CLRF   03
1500:  MOVWF  x32
1502:  MOVFF  03,533
....................    dy = abs((signed int8)(y2 - y1)); 
1506:  MOVF   x2C,W
1508:  SUBWF  x2E,W
150A:  MOVWF  x3B
150C:  MOVF   x3B,W
150E:  BTFSS  x3B.7
1510:  BRA    1518
1512:  MOVLW  00
1514:  BSF    FD8.0
1516:  SUBFWB x3B,W
1518:  CLRF   03
151A:  MOVWF  x30
151C:  MOVFF  03,531
....................    #endif 
....................  
....................    if(x1 > x2) 
1520:  MOVF   x2B,W
1522:  SUBWF  x2D,W
1524:  BC    152A
....................       addx = -1; 
1526:  MOVLW  FF
1528:  MOVWF  x34
....................    if(y1 > y2) 
152A:  MOVF   x2C,W
152C:  SUBWF  x2E,W
152E:  BC    1534
....................       addy = -1; 
1530:  MOVLW  FF
1532:  MOVWF  x35
....................  
....................    if(dx >= dy) 
1534:  MOVF   x31,W
1536:  SUBWF  x33,W
1538:  BNC   15B0
153A:  BNZ   1542
153C:  MOVF   x30,W
153E:  SUBWF  x32,W
1540:  BNC   15B0
....................    { 
....................       dy *= 2; 
1542:  BCF    FD8.0
1544:  RLCF   x30,F
1546:  RLCF   x31,F
....................       P = dy - dx; 
1548:  MOVF   x32,W
154A:  SUBWF  x30,W
154C:  MOVWF  00
154E:  MOVF   x33,W
1550:  SUBWFB x31,W
1552:  MOVFF  00,536
1556:  MOVWF  x37
....................       diff = P - dx; 
1558:  MOVF   x32,W
155A:  SUBWF  x36,W
155C:  MOVWF  x38
155E:  MOVF   x33,W
1560:  SUBWFB x37,W
1562:  MOVWF  x39
....................  
....................       for(; i<=dx; ++i) 
1564:  MOVF   x33,F
1566:  BNZ   156E
1568:  MOVF   x3A,W
156A:  SUBWF  x32,W
156C:  BNC   15AE
....................       { 
....................          glcd_pixel(x1, y1, color); 
156E:  MOVFF  52B,53B
1572:  MOVFF  52C,53C
1576:  MOVFF  52F,53D
157A:  MOVLB  0
157C:  RCALL  126E
....................  
....................          if(P < 0) 
157E:  MOVLB  5
1580:  BTFSC  x37.7
1582:  BRA    1586
1584:  BRA    1596
....................          { 
....................             P  += dy; 
1586:  MOVF   x30,W
1588:  ADDWF  x36,F
158A:  MOVF   x31,W
158C:  ADDWFC x37,F
....................             x1 += addx; 
158E:  MOVF   x34,W
1590:  ADDWF  x2B,W
1592:  MOVWF  x2B
....................          } 
....................          else 
1594:  BRA    15AA
....................          { 
....................             P  += diff; 
1596:  MOVF   x38,W
1598:  ADDWF  x36,F
159A:  MOVF   x39,W
159C:  ADDWFC x37,F
....................             x1 += addx; 
159E:  MOVF   x34,W
15A0:  ADDWF  x2B,W
15A2:  MOVWF  x2B
....................             y1 += addy; 
15A4:  MOVF   x35,W
15A6:  ADDWF  x2C,W
15A8:  MOVWF  x2C
....................          } 
....................       } 
15AA:  INCF   x3A,F
15AC:  BRA    1564
....................    } 
....................    else 
15AE:  BRA    161C
....................    { 
....................       dx *= 2; 
15B0:  BCF    FD8.0
15B2:  RLCF   x32,F
15B4:  RLCF   x33,F
....................       P = dx - dy; 
15B6:  MOVF   x30,W
15B8:  SUBWF  x32,W
15BA:  MOVWF  00
15BC:  MOVF   x31,W
15BE:  SUBWFB x33,W
15C0:  MOVFF  00,536
15C4:  MOVWF  x37
....................       diff = P - dy; 
15C6:  MOVF   x30,W
15C8:  SUBWF  x36,W
15CA:  MOVWF  x38
15CC:  MOVF   x31,W
15CE:  SUBWFB x37,W
15D0:  MOVWF  x39
....................  
....................       for(; i<=dy; ++i) 
15D2:  MOVF   x31,F
15D4:  BNZ   15DC
15D6:  MOVF   x3A,W
15D8:  SUBWF  x30,W
15DA:  BNC   161C
....................       { 
....................          glcd_pixel(x1, y1, color); 
15DC:  MOVFF  52B,53B
15E0:  MOVFF  52C,53C
15E4:  MOVFF  52F,53D
15E8:  MOVLB  0
15EA:  RCALL  126E
....................  
....................          if(P < 0) 
15EC:  MOVLB  5
15EE:  BTFSC  x37.7
15F0:  BRA    15F4
15F2:  BRA    1604
....................          { 
....................             P  += dx; 
15F4:  MOVF   x32,W
15F6:  ADDWF  x36,F
15F8:  MOVF   x33,W
15FA:  ADDWFC x37,F
....................             y1 += addy; 
15FC:  MOVF   x35,W
15FE:  ADDWF  x2C,W
1600:  MOVWF  x2C
....................          } 
....................          else 
1602:  BRA    1618
....................          { 
....................             P  += diff; 
1604:  MOVF   x38,W
1606:  ADDWF  x36,F
1608:  MOVF   x39,W
160A:  ADDWFC x37,F
....................             x1 += addx; 
160C:  MOVF   x34,W
160E:  ADDWF  x2B,W
1610:  MOVWF  x2B
....................             y1 += addy; 
1612:  MOVF   x35,W
1614:  ADDWF  x2C,W
1616:  MOVWF  x2C
....................          } 
....................       } 
1618:  INCF   x3A,F
161A:  BRA    15D2
....................    } 
.................... } 
161C:  MOVLB  0
161E:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1620:  MOVLB  5
1622:  MOVF   x24,F
1624:  BZ    1682
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1626:  MOVF   x22,W
1628:  SUBWF  x20,W
162A:  BC    1636
....................       { 
....................          xmin = x1; 
162C:  MOVFF  520,527
....................          xmax = x2; 
1630:  MOVFF  522,528
....................       } 
....................       else 
1634:  BRA    163E
....................       { 
....................          xmin = x2; 
1636:  MOVFF  522,527
....................          xmax = x1; 
163A:  MOVFF  520,528
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
163E:  MOVF   x23,W
1640:  SUBWF  x21,W
1642:  BC    164E
....................       { 
....................          ymin = y1; 
1644:  MOVFF  521,529
....................          ymax = y2; 
1648:  MOVFF  523,52A
....................       } 
....................       else 
164C:  BRA    1656
....................       { 
....................          ymin = y2; 
164E:  MOVFF  523,529
....................          ymax = y1; 
1652:  MOVFF  521,52A
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
1656:  MOVF   x27,W
1658:  SUBWF  x28,W
165A:  BNC   1680
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
165C:  MOVFF  529,526
1660:  MOVF   x26,W
1662:  SUBWF  x2A,W
1664:  BNC   167C
....................          { 
....................             glcd_pixel(xmin, i, color); 
1666:  MOVFF  527,53B
166A:  MOVFF  526,53C
166E:  MOVFF  525,53D
1672:  MOVLB  0
1674:  RCALL  126E
....................          } 
1676:  MOVLB  5
1678:  INCF   x26,F
167A:  BRA    1660
....................       } 
167C:  INCF   x27,F
167E:  BRA    1656
....................    } 
....................    else 
1680:  BRA    16DE
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
1682:  MOVFF  520,52B
1686:  MOVFF  521,52C
168A:  MOVFF  522,52D
168E:  MOVFF  521,52E
1692:  MOVFF  525,52F
1696:  MOVLB  0
1698:  RCALL  14E2
....................       glcd_line(x1, y2, x2, y2, color); 
169A:  MOVFF  520,52B
169E:  MOVFF  523,52C
16A2:  MOVFF  522,52D
16A6:  MOVFF  523,52E
16AA:  MOVFF  525,52F
16AE:  RCALL  14E2
....................       glcd_line(x1, y1, x1, y2, color); 
16B0:  MOVFF  520,52B
16B4:  MOVFF  521,52C
16B8:  MOVFF  520,52D
16BC:  MOVFF  523,52E
16C0:  MOVFF  525,52F
16C4:  RCALL  14E2
....................       glcd_line(x2, y1, x2, y2, color); 
16C6:  MOVFF  522,52B
16CA:  MOVFF  521,52C
16CE:  MOVFF  522,52D
16D2:  MOVFF  523,52E
16D6:  MOVFF  525,52F
16DA:  RCALL  14E2
16DC:  MOVLB  5
....................    } 
.................... } 
16DE:  MOVLB  0
16E0:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2232:  MOVLB  5
2234:  CLRF   x0F
....................    b = radius; 
2236:  MOVFF  50C,510
....................    P = 1 - radius; 
223A:  MOVLW  01
223C:  BSF    FD8.0
223E:  SUBFWB x0C,W
2240:  MOVWF  x11
....................  
....................    do 
....................    { 
....................       if(fill) 
2242:  MOVF   x0D,F
2244:  BZ    2310
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
2246:  MOVF   x0F,W
2248:  SUBWF  x0A,W
224A:  MOVWF  x12
224C:  MOVF   x10,W
224E:  ADDWF  x0B,W
2250:  MOVWF  x13
2252:  MOVF   x0F,W
2254:  ADDWF  x0A,W
2256:  MOVWF  x14
2258:  MOVF   x10,W
225A:  ADDWF  x0B,W
225C:  MOVWF  x15
225E:  MOVFF  512,52B
2262:  MOVFF  513,52C
2266:  MOVFF  514,52D
226A:  MOVWF  x2E
226C:  MOVFF  50E,52F
2270:  MOVLB  0
2272:  CALL   14E2
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
2276:  MOVLB  5
2278:  MOVF   x0F,W
227A:  SUBWF  x0A,W
227C:  MOVWF  x12
227E:  MOVF   x10,W
2280:  SUBWF  x0B,W
2282:  MOVWF  x13
2284:  MOVF   x0F,W
2286:  ADDWF  x0A,W
2288:  MOVWF  x14
228A:  MOVF   x10,W
228C:  SUBWF  x0B,W
228E:  MOVWF  x15
2290:  MOVFF  512,52B
2294:  MOVFF  513,52C
2298:  MOVFF  514,52D
229C:  MOVWF  x2E
229E:  MOVFF  50E,52F
22A2:  MOVLB  0
22A4:  CALL   14E2
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
22A8:  MOVLB  5
22AA:  MOVF   x10,W
22AC:  SUBWF  x0A,W
22AE:  MOVWF  x12
22B0:  MOVF   x0F,W
22B2:  ADDWF  x0B,W
22B4:  MOVWF  x13
22B6:  MOVF   x10,W
22B8:  ADDWF  x0A,W
22BA:  MOVWF  x14
22BC:  MOVF   x0F,W
22BE:  ADDWF  x0B,W
22C0:  MOVWF  x15
22C2:  MOVFF  512,52B
22C6:  MOVFF  513,52C
22CA:  MOVFF  514,52D
22CE:  MOVWF  x2E
22D0:  MOVFF  50E,52F
22D4:  MOVLB  0
22D6:  CALL   14E2
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
22DA:  MOVLB  5
22DC:  MOVF   x10,W
22DE:  SUBWF  x0A,W
22E0:  MOVWF  x12
22E2:  MOVF   x0F,W
22E4:  SUBWF  x0B,W
22E6:  MOVWF  x13
22E8:  MOVF   x10,W
22EA:  ADDWF  x0A,W
22EC:  MOVWF  x14
22EE:  MOVF   x0F,W
22F0:  SUBWF  x0B,W
22F2:  MOVWF  x15
22F4:  MOVFF  512,52B
22F8:  MOVFF  513,52C
22FC:  MOVFF  514,52D
2300:  MOVWF  x2E
2302:  MOVFF  50E,52F
2306:  MOVLB  0
2308:  CALL   14E2
....................       } 
....................       else 
230C:  BRA    23FE
230E:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2310:  MOVF   x0A,W
2312:  ADDWF  x0F,W
2314:  MOVWF  x12
2316:  MOVF   x0B,W
2318:  ADDWF  x10,W
231A:  MOVWF  x13
231C:  MOVFF  512,53B
2320:  MOVWF  x3C
2322:  MOVFF  50E,53D
2326:  MOVLB  0
2328:  CALL   126E
....................          glcd_pixel(b+x, a+y, color); 
232C:  MOVLB  5
232E:  MOVF   x0A,W
2330:  ADDWF  x10,W
2332:  MOVWF  x12
2334:  MOVF   x0B,W
2336:  ADDWF  x0F,W
2338:  MOVWF  x13
233A:  MOVFF  512,53B
233E:  MOVWF  x3C
2340:  MOVFF  50E,53D
2344:  MOVLB  0
2346:  CALL   126E
....................          glcd_pixel(x-a, b+y, color); 
234A:  MOVLB  5
234C:  MOVF   x0F,W
234E:  SUBWF  x0A,W
2350:  MOVWF  x12
2352:  MOVF   x0B,W
2354:  ADDWF  x10,W
2356:  MOVWF  x13
2358:  MOVFF  512,53B
235C:  MOVWF  x3C
235E:  MOVFF  50E,53D
2362:  MOVLB  0
2364:  CALL   126E
....................          glcd_pixel(x-b, a+y, color); 
2368:  MOVLB  5
236A:  MOVF   x10,W
236C:  SUBWF  x0A,W
236E:  MOVWF  x12
2370:  MOVF   x0B,W
2372:  ADDWF  x0F,W
2374:  MOVWF  x13
2376:  MOVFF  512,53B
237A:  MOVWF  x3C
237C:  MOVFF  50E,53D
2380:  MOVLB  0
2382:  CALL   126E
....................          glcd_pixel(b+x, y-a, color); 
2386:  MOVLB  5
2388:  MOVF   x0A,W
238A:  ADDWF  x10,W
238C:  MOVWF  x12
238E:  MOVF   x0F,W
2390:  SUBWF  x0B,W
2392:  MOVWF  x13
2394:  MOVFF  512,53B
2398:  MOVWF  x3C
239A:  MOVFF  50E,53D
239E:  MOVLB  0
23A0:  CALL   126E
....................          glcd_pixel(a+x, y-b, color); 
23A4:  MOVLB  5
23A6:  MOVF   x0A,W
23A8:  ADDWF  x0F,W
23AA:  MOVWF  x12
23AC:  MOVF   x10,W
23AE:  SUBWF  x0B,W
23B0:  MOVWF  x13
23B2:  MOVFF  512,53B
23B6:  MOVWF  x3C
23B8:  MOVFF  50E,53D
23BC:  MOVLB  0
23BE:  CALL   126E
....................          glcd_pixel(x-a, y-b, color); 
23C2:  MOVLB  5
23C4:  MOVF   x0F,W
23C6:  SUBWF  x0A,W
23C8:  MOVWF  x12
23CA:  MOVF   x10,W
23CC:  SUBWF  x0B,W
23CE:  MOVWF  x13
23D0:  MOVFF  512,53B
23D4:  MOVWF  x3C
23D6:  MOVFF  50E,53D
23DA:  MOVLB  0
23DC:  CALL   126E
....................          glcd_pixel(x-b, y-a, color); 
23E0:  MOVLB  5
23E2:  MOVF   x10,W
23E4:  SUBWF  x0A,W
23E6:  MOVWF  x12
23E8:  MOVF   x0F,W
23EA:  SUBWF  x0B,W
23EC:  MOVWF  x13
23EE:  MOVFF  512,53B
23F2:  MOVWF  x3C
23F4:  MOVFF  50E,53D
23F8:  MOVLB  0
23FA:  CALL   126E
....................       } 
....................  
....................       if(P < 0) 
23FE:  MOVLB  5
2400:  BTFSC  x11.7
2402:  BRA    2406
2404:  BRA    2422
....................          P += 3 + 2 * a++; 
2406:  MOVF   x0F,W
2408:  INCF   x0F,F
240A:  MOVWF  x12
240C:  MOVLW  02
240E:  MOVWF  x13
2410:  MOVFF  512,514
2414:  MOVLB  0
2416:  RCALL  21E4
2418:  MOVF   01,W
241A:  ADDLW  03
241C:  MOVLB  5
241E:  ADDWF  x11,F
....................       else 
2420:  BRA    2444
....................          P += 5 + 2 * (a++ - b--); 
2422:  MOVF   x0F,W
2424:  INCF   x0F,F
2426:  MOVWF  x12
2428:  MOVF   x10,W
242A:  DECF   x10,F
242C:  SUBWF  x12,W
242E:  MOVWF  x12
2430:  MOVLW  02
2432:  MOVWF  x13
2434:  MOVFF  512,514
2438:  MOVLB  0
243A:  RCALL  21E4
243C:  MOVF   01,W
243E:  ADDLW  05
2440:  MOVLB  5
2442:  ADDWF  x11,F
....................     } while(a <= b); 
2444:  MOVF   x0F,W
2446:  XORLW  80
2448:  MOVWF  00
244A:  MOVF   x10,W
244C:  XORLW  80
244E:  SUBWF  00,W
2450:  BTFSC  FD8.2
2452:  BRA    2242
2454:  BTFSS  FD8.0
2456:  BRA    2242
.................... } 
2458:  MOVLB  0
245A:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
132A:  MOVFF  521,03
132E:  MOVLB  5
1330:  MOVFF  520,FE9
1334:  MOVFF  521,FEA
1338:  MOVF   FEF,F
133A:  BTFSC  FD8.2
133C:  BRA    14DE
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
133E:  MOVFF  521,03
1342:  MOVFF  520,FE9
1346:  MOVFF  521,FEA
134A:  MOVF   FEF,W
134C:  SUBLW  52
134E:  BNC   139E
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1350:  MOVFF  521,03
1354:  MOVFF  520,FE9
1358:  MOVFF  521,FEA
135C:  MOVLW  20
135E:  SUBWF  FEF,W
1360:  MULLW  05
1362:  MOVF   FF3,W
1364:  CLRF   03
1366:  MOVWF  x2D
1368:  MOVLW  05
136A:  MOVWF  FEA
136C:  MOVLW  28
136E:  MOVWF  FE9
1370:  CLRF   x31
1372:  MOVFF  52D,530
1376:  MOVFF  FF2,52E
137A:  BCF    FF2.7
137C:  MOVLW  05
137E:  MOVWF  01
1380:  CLRF   FF7
1382:  MOVF   x2D,W
1384:  MOVLB  0
1386:  CALL   0096
138A:  TBLRD*-
138C:  TBLRD*+
138E:  MOVFF  FF5,FEE
1392:  DECFSZ 01,F
1394:  BRA    138C
1396:  MOVLB  5
1398:  BTFSC  x2E.7
139A:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
139C:  BRA    1408
139E:  MOVFF  521,03
13A2:  MOVFF  520,FE9
13A6:  MOVFF  521,FEA
13AA:  MOVF   FEF,W
13AC:  SUBLW  7E
13AE:  BNC   13FE
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
13B0:  MOVFF  521,03
13B4:  MOVFF  520,FE9
13B8:  MOVFF  521,FEA
13BC:  MOVLW  53
13BE:  SUBWF  FEF,W
13C0:  MULLW  05
13C2:  MOVF   FF3,W
13C4:  CLRF   03
13C6:  MOVWF  x2D
13C8:  MOVLW  05
13CA:  MOVWF  FEA
13CC:  MOVLW  28
13CE:  MOVWF  FE9
13D0:  CLRF   x31
13D2:  MOVFF  52D,530
13D6:  MOVFF  FF2,52E
13DA:  BCF    FF2.7
13DC:  MOVLW  05
13DE:  MOVWF  01
13E0:  CLRF   FF7
13E2:  MOVF   x2D,W
13E4:  MOVLB  0
13E6:  CALL   01B0
13EA:  TBLRD*-
13EC:  TBLRD*+
13EE:  MOVFF  FF5,FEE
13F2:  DECFSZ 01,F
13F4:  BRA    13EC
13F6:  MOVLB  5
13F8:  BTFSC  x2E.7
13FA:  BSF    FF2.7
....................       else 
13FC:  BRA    1408
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
13FE:  CLRF   x28
1400:  CLRF   x29
1402:  CLRF   x2A
1404:  CLRF   x2B
1406:  CLRF   x2C
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1408:  MOVFF  521,03
140C:  MOVF   x20,W
140E:  MOVWF  FE9
1410:  MOVFF  03,FEA
1414:  MOVF   FEF,W
1416:  XORLW  0A
1418:  MOVLB  0
141A:  BZ    1422
141C:  XORLW  07
141E:  BZ    1432
1420:  BRA    1438
....................          case '\n': 
....................             y += 7*size + 1; 
1422:  MOVLB  5
1424:  MOVF   x22,W
1426:  MULLW  07
1428:  MOVF   FF3,W
142A:  ADDLW  01
142C:  ADDWF  x1F,F
....................             continue; 
142E:  BRA    14D0
1430:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1432:  MOVLB  5
1434:  CLRF   x1E
....................             continue; 
1436:  BRA    14D0
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1438:  MOVLB  5
143A:  MOVF   x22,W
143C:  MULLW  05
143E:  MOVF   FF3,W
1440:  ADDWF  x1E,W
1442:  SUBLW  7F
1444:  BC    1452
....................       { 
....................          x = 0;                           // Set x at far left position 
1446:  CLRF   x1E
....................          y += 7*size + 1;                 // Set y at next position down 
1448:  MOVF   x22,W
144A:  MULLW  07
144C:  MOVF   FF3,W
144E:  ADDLW  01
1450:  ADDWF  x1F,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1452:  CLRF   x24
1454:  MOVF   x24,W
1456:  SUBLW  04
1458:  BNC   14D0
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
145A:  CLRF   x25
145C:  MOVF   x25,W
145E:  SUBLW  06
1460:  BNC   14C8
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1462:  CLRF   03
1464:  MOVF   x24,W
1466:  ADDLW  28
1468:  MOVWF  FE9
146A:  MOVLW  05
146C:  ADDWFC 03,W
146E:  MOVWF  FEA
1470:  MOVFF  FEF,52D
1474:  MOVFF  52D,00
1478:  MOVF   x25,W
147A:  MOVWF  01
147C:  BZ    1486
147E:  BCF    FD8.0
1480:  RRCF   00,F
1482:  DECFSZ 01,F
1484:  BRA    147E
1486:  BTFSS  00.0
1488:  BRA    14C4
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
148A:  CLRF   x26
148C:  MOVF   x22,W
148E:  SUBWF  x26,W
1490:  BC    14C4
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
1492:  CLRF   x27
1494:  MOVF   x22,W
1496:  SUBWF  x27,W
1498:  BC    14C0
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
149A:  MOVF   x27,W
149C:  ADDWF  x1E,W
149E:  MOVWF  x2D
14A0:  MOVF   x25,W
14A2:  MULWF  x22
14A4:  MOVF   FF3,W
14A6:  ADDWF  x1F,W
14A8:  ADDWF  x26,W
14AA:  MOVWF  x2E
14AC:  MOVFF  52D,53B
14B0:  MOVWF  x3C
14B2:  MOVFF  523,53D
14B6:  MOVLB  0
14B8:  RCALL  126E
....................                   } 
14BA:  MOVLB  5
14BC:  INCF   x27,F
14BE:  BRA    1494
....................                } 
14C0:  INCF   x26,F
14C2:  BRA    148C
....................             } 
....................          } 
14C4:  INCF   x25,F
14C6:  BRA    145C
....................       } 
14C8:  INCF   x24,F
14CA:  MOVF   x22,W
14CC:  ADDWF  x1E,F
14CE:  BRA    1454
....................    } 
14D0:  INCF   x20,F
14D2:  BTFSC  FD8.2
14D4:  INCF   x21,F
14D6:  INCF   x1E,F
14D8:  MOVLB  0
14DA:  BRA    132A
14DC:  MOVLB  5
.................... } 
14DE:  MOVLB  0
14E0:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0,Prevacio=10,flagprevacio=10,flagvacio=10,Calentar=10; 
.................... int8 Setpoint=0,Atmosferica=71,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0,PresionCamara=0,PresionPreCamara=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
16E2:  MOVLB  5
16E4:  MOVFF  50A,01
16E8:  MOVFF  50B,03
16EC:  MOVFF  50A,510
16F0:  MOVFF  50B,511
16F4:  MOVLW  04
16F6:  MOVWF  FEA
16F8:  MOVLW  EA
16FA:  MOVWF  FE9
16FC:  MOVFF  50B,FE2
1700:  MOVFF  50A,FE1
1704:  MOVF   FE7,F
1706:  MOVFF  FE6,FEE
170A:  BNZ   1704
....................    if(sombreado==2) 
170C:  MOVF   x0E,W
170E:  SUBLW  02
1710:  BNZ   173A
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1712:  MOVLW  01
1714:  ADDWF  x0C,W
1716:  MOVWF  x10
1718:  MOVLW  01
171A:  ADDWF  x0D,W
171C:  MOVWF  x11
171E:  MOVFF  510,51E
1722:  MOVWF  x1F
1724:  MOVLW  04
1726:  MOVWF  x21
1728:  MOVLW  EA
172A:  MOVWF  x20
172C:  MOVFF  50F,522
1730:  MOVLW  01
1732:  MOVWF  x23
1734:  MOVLB  0
1736:  RCALL  132A
1738:  MOVLB  5
....................    if(sombreado==1) 
173A:  DECFSZ x0E,W
173C:  BRA    1788
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
173E:  MOVF   x0F,W
1740:  MULLW  08
1742:  MOVF   FF3,W
1744:  ADDWF  x0D,W
1746:  MOVWF  x10
1748:  CLRF   x20
174A:  MOVFF  50D,521
174E:  MOVLW  7F
1750:  MOVWF  x22
1752:  MOVFF  510,523
1756:  MOVLW  01
1758:  MOVWF  x24
175A:  MOVWF  x25
175C:  MOVLB  0
175E:  RCALL  1620
1760:  MOVLW  01
1762:  MOVLB  5
1764:  ADDWF  x0C,W
1766:  MOVWF  x10
1768:  MOVLW  01
176A:  ADDWF  x0D,W
176C:  MOVWF  x11
176E:  MOVFF  510,51E
1772:  MOVWF  x1F
1774:  MOVLW  04
1776:  MOVWF  x21
1778:  MOVLW  EA
177A:  MOVWF  x20
177C:  MOVFF  50F,522
1780:  CLRF   x23
1782:  MOVLB  0
1784:  RCALL  132A
1786:  MOVLB  5
....................    if(sombreado==0) 
1788:  MOVF   x0E,F
178A:  BNZ   17D6
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
178C:  MOVF   x0F,W
178E:  MULLW  08
1790:  MOVF   FF3,W
1792:  ADDWF  x0D,W
1794:  MOVWF  x10
1796:  CLRF   x20
1798:  MOVFF  50D,521
179C:  MOVLW  7F
179E:  MOVWF  x22
17A0:  MOVFF  510,523
17A4:  MOVLW  01
17A6:  MOVWF  x24
17A8:  CLRF   x25
17AA:  MOVLB  0
17AC:  RCALL  1620
17AE:  MOVLW  01
17B0:  MOVLB  5
17B2:  ADDWF  x0C,W
17B4:  MOVWF  x10
17B6:  MOVLW  01
17B8:  ADDWF  x0D,W
17BA:  MOVWF  x11
17BC:  MOVFF  510,51E
17C0:  MOVWF  x1F
17C2:  MOVLW  04
17C4:  MOVWF  x21
17C6:  MOVLW  EA
17C8:  MOVWF  x20
17CA:  MOVFF  50F,522
17CE:  MOVLW  01
17D0:  MOVWF  x23
17D2:  MOVLB  0
17D4:  RCALL  132A
....................    glcd_update(); 
17D6:  MOVLB  0
17D8:  RCALL  110E
.................... } 
17DA:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
24E2:  MOVLB  5
24E4:  MOVF   x0E,W
24E6:  SUBLW  02
24E8:  BNZ   255A
....................    { 
....................       sprintf(voltage, "%03u", digito); 
24EA:  MOVLW  05
24EC:  MOVWF  x09
24EE:  MOVLW  10
24F0:  MOVWF  x08
24F2:  MOVFF  50B,519
24F6:  MOVLW  03
24F8:  MOVWF  x1A
24FA:  MOVLB  0
24FC:  RCALL  245C
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
24FE:  MOVLB  5
2500:  MOVF   x0F,W
2502:  MULLW  12
2504:  MOVF   FF3,W
2506:  ADDWF  x0C,W
2508:  MOVWF  x19
250A:  MOVF   x0F,W
250C:  MULLW  08
250E:  MOVF   FF3,W
2510:  ADDWF  x0D,W
2512:  MOVWF  x1A
2514:  MOVFF  50C,520
2518:  MOVFF  50D,521
251C:  MOVFF  519,522
2520:  MOVWF  x23
2522:  MOVLW  01
2524:  MOVWF  x24
2526:  MOVWF  x25
2528:  MOVLB  0
252A:  CALL   1620
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
252E:  MOVLW  01
2530:  MOVLB  5
2532:  ADDWF  x0C,W
2534:  MOVWF  x19
2536:  MOVLW  01
2538:  ADDWF  x0D,W
253A:  MOVWF  x1A
253C:  MOVFF  519,51E
2540:  MOVWF  x1F
2542:  MOVLW  05
2544:  MOVWF  x21
2546:  MOVLW  10
2548:  MOVWF  x20
254A:  MOVFF  50F,522
254E:  CLRF   x23
2550:  MOVLB  0
2552:  CALL   132A
....................    } 
....................    else 
2556:  BRA    2628
2558:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
255A:  MOVLW  05
255C:  MOVWF  x09
255E:  MOVLW  10
2560:  MOVWF  x08
2562:  MOVFF  50B,519
2566:  MOVLW  1B
2568:  MOVWF  x1A
256A:  MOVLB  0
256C:  RCALL  245C
....................     
....................       if(sombreado==1) 
256E:  MOVLB  5
2570:  DECFSZ x0E,W
2572:  BRA    25CC
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
2574:  MOVF   x0F,W
2576:  MULLW  05
2578:  MOVF   FF3,W
257A:  ADDWF  x0C,W
257C:  MOVWF  x19
257E:  MOVF   x0F,W
2580:  MULLW  08
2582:  MOVF   FF3,W
2584:  ADDWF  x0D,W
2586:  MOVWF  x1A
2588:  MOVFF  50C,520
258C:  MOVFF  50D,521
2590:  MOVFF  519,522
2594:  MOVWF  x23
2596:  MOVLW  01
2598:  MOVWF  x24
259A:  MOVWF  x25
259C:  MOVLB  0
259E:  CALL   1620
25A2:  MOVLW  01
25A4:  MOVLB  5
25A6:  ADDWF  x0C,W
25A8:  MOVWF  x19
25AA:  MOVLW  01
25AC:  ADDWF  x0D,W
25AE:  MOVWF  x1A
25B0:  MOVFF  519,51E
25B4:  MOVWF  x1F
25B6:  MOVLW  05
25B8:  MOVWF  x21
25BA:  MOVLW  10
25BC:  MOVWF  x20
25BE:  MOVFF  50F,522
25C2:  CLRF   x23
25C4:  MOVLB  0
25C6:  CALL   132A
25CA:  MOVLB  5
....................       if(sombreado==0) 
25CC:  MOVF   x0E,F
25CE:  BNZ   262A
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
25D0:  MOVF   x0F,W
25D2:  MULLW  05
25D4:  MOVF   FF3,W
25D6:  ADDWF  x0C,W
25D8:  MOVWF  x19
25DA:  MOVF   x0F,W
25DC:  MULLW  08
25DE:  MOVF   FF3,W
25E0:  ADDWF  x0D,W
25E2:  MOVWF  x1A
25E4:  MOVFF  50C,520
25E8:  MOVFF  50D,521
25EC:  MOVFF  519,522
25F0:  MOVWF  x23
25F2:  MOVLW  01
25F4:  MOVWF  x24
25F6:  CLRF   x25
25F8:  MOVLB  0
25FA:  CALL   1620
25FE:  MOVLW  01
2600:  MOVLB  5
2602:  ADDWF  x0C,W
2604:  MOVWF  x19
2606:  MOVLW  01
2608:  ADDWF  x0D,W
260A:  MOVWF  x1A
260C:  MOVFF  519,51E
2610:  MOVWF  x1F
2612:  MOVLW  05
2614:  MOVWF  x21
2616:  MOVLW  10
2618:  MOVWF  x20
261A:  MOVFF  50F,522
261E:  MOVLW  01
2620:  MOVWF  x23
2622:  MOVLB  0
2624:  CALL   132A
2628:  MOVLB  5
....................    } 
....................    glcd_update(); 
262A:  MOVLB  0
262C:  CALL   110E
.................... } 
2630:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2136:  MOVLB  5
2138:  MOVF   x0A,W
213A:  SUBLW  05
213C:  BNZ   21E0
....................    for( i = 0 ; i < 64 ; i ++ ) 
213E:  CLRF   x0B
2140:  MOVF   x0B,W
2142:  SUBLW  3F
2144:  BNC   21E0
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2146:  CLRF   x0C
2148:  MOVF   x0C,W
214A:  SUBLW  0F
214C:  BNC   21DC
....................       {     
....................          for(k=7;k>-1;k--) 
214E:  MOVLW  07
2150:  MOVWF  x0D
2152:  MOVF   x0D,W
2154:  XORLW  80
2156:  SUBLW  7F
2158:  BC    21D8
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
215A:  CLRF   x0F
215C:  MOVFF  50B,50E
2160:  CLRF   x11
2162:  MOVLW  10
2164:  MOVWF  x10
2166:  MOVLB  0
2168:  BRA    2112
216A:  MOVFF  02,50F
216E:  MOVFF  01,50E
2172:  MOVLB  5
2174:  MOVF   x0C,W
2176:  ADDWF  01,W
2178:  MOVWF  01
217A:  MOVLW  00
217C:  ADDWFC 02,W
217E:  MOVWF  03
2180:  MOVF   01,W
2182:  MOVFF  FF2,50E
2186:  BCF    FF2.7
2188:  MOVFF  03,FF7
218C:  MOVLB  0
218E:  CALL   02A6
2192:  MOVLB  5
2194:  BTFSC  x0E.7
2196:  BSF    FF2.7
2198:  MOVWF  x0E
219A:  MOVLW  07
219C:  BSF    FD8.0
219E:  SUBFWB x0D,W
21A0:  MOVWF  x0F
21A2:  MOVFF  50E,00
21A6:  MOVF   x0F,W
21A8:  MOVWF  01
21AA:  BZ    21B4
21AC:  BCF    FD8.0
21AE:  RRCF   00,F
21B0:  DECFSZ 01,F
21B2:  BRA    21AC
21B4:  BTFSS  00.0
21B6:  BRA    21D4
....................                glcd_pixel( j*8+k,i, ON ); 
21B8:  MOVF   x0C,W
21BA:  MULLW  08
21BC:  MOVF   FF3,W
21BE:  ADDWF  x0D,W
21C0:  MOVWF  x0E
21C2:  MOVWF  x3B
21C4:  MOVFF  50B,53C
21C8:  MOVLW  01
21CA:  MOVWF  x3D
21CC:  MOVLB  0
21CE:  CALL   126E
21D2:  MOVLB  5
....................          }   
21D4:  DECF   x0D,F
21D6:  BRA    2152
....................       } 
21D8:  INCF   x0C,F
21DA:  BRA    2148
....................    } 
21DC:  INCF   x0B,F
21DE:  BRA    2140
....................    } 
....................     
.................... } 
21E0:  MOVLB  0
21E2:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0F7C:  MOVLW  15
0F7E:  MOVWF  FCF
0F80:  MOVLW  A0
0F82:  MOVWF  FCE
....................    tiempos++; 
0F84:  MOVLB  4
0F86:  INCF   xB1,F
0F88:  BTFSC  FD8.2
0F8A:  INCF   xB2,F
....................    tiempos3++; 
0F8C:  INCF   xB3,F
0F8E:  BTFSC  FD8.2
0F90:  INCF   xB4,F
....................    tiempoctrl++; 
0F92:  INCF   xB5,F
0F94:  BTFSC  FD8.2
0F96:  INCF   xB6,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0F98:  MOVF   xB4,F
0F9A:  BNZ   0FA2
0F9C:  MOVF   xB3,W
0F9E:  SUBLW  27
0FA0:  BC    0FB4
0FA2:  MOVF   xAF,W
0FA4:  SUBLW  02
0FA6:  BNZ   0FB4
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0FA8:  CLRF   xB4
0FAA:  CLRF   xB3
0FAC:  BSF    x95.7
0FAE:  INCF   xBB,F
0FB0:  BTFSC  FD8.2
0FB2:  INCF   xBC,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0FB4:  MOVF   xB1,W
0FB6:  SUBLW  C8
0FB8:  BNZ   1042
0FBA:  MOVF   xB2,F
0FBC:  BNZ   1042
....................    {tiempos=0;Lectura=1;tinicio++; 
0FBE:  CLRF   xB2
0FC0:  CLRF   xB1
0FC2:  BSF    x95.6
0FC4:  INCF   xBD,F
0FC6:  BTFSC  FD8.2
0FC8:  INCF   xBE,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0FCA:  DECFSZ xAD,W
0FCC:  BRA    1006
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0FCE:  INCF   xC7,F
....................       if(Testerilizacion[0]>9) 
0FD0:  BTFSC  xC7.7
0FD2:  BRA    0FDE
0FD4:  MOVF   xC7,W
0FD6:  SUBLW  09
0FD8:  BC    0FDE
....................          {Testerilizacion[0]=0; 
0FDA:  CLRF   xC7
....................           Testerilizacion[1]++;} 
0FDC:  INCF   xC8,F
....................        if(Testerilizacion[1]>5) 
0FDE:  BTFSC  xC8.7
0FE0:  BRA    0FEC
0FE2:  MOVF   xC8,W
0FE4:  SUBLW  05
0FE6:  BC    0FEC
....................          {Testerilizacion[1]=0; 
0FE8:  CLRF   xC8
....................           Testerilizacion[2]++;} 
0FEA:  INCF   xC9,F
....................          if(Testerilizacion[2]>9) 
0FEC:  BTFSC  xC9.7
0FEE:  BRA    0FFA
0FF0:  MOVF   xC9,W
0FF2:  SUBLW  09
0FF4:  BC    0FFA
....................             {Testerilizacion[2]=0; 
0FF6:  CLRF   xC9
....................              Testerilizacion[3]++;} 
0FF8:  INCF   xCA,F
....................             if(Testerilizacion[3]>5) 
0FFA:  BTFSC  xCA.7
0FFC:  BRA    1006
0FFE:  MOVF   xCA,W
1000:  SUBLW  05
1002:  BC    1006
....................                {Testerilizacion[3]=0;} 
1004:  CLRF   xCA
....................       }        
....................        
....................     if(tiempo_secado==1) 
1006:  DECFSZ xAE,W
1008:  BRA    1042
....................       { 
....................                       
....................       Tsecado[0]++; 
100A:  INCF   xCF,F
....................       if(Tsecado[0]>9) 
100C:  BTFSC  xCF.7
100E:  BRA    101A
1010:  MOVF   xCF,W
1012:  SUBLW  09
1014:  BC    101A
....................          {Tsecado[0]=0; 
1016:  CLRF   xCF
....................           Tsecado[1]++;} 
1018:  INCF   xD0,F
....................        if(Tsecado[1]>5) 
101A:  BTFSC  xD0.7
101C:  BRA    1028
101E:  MOVF   xD0,W
1020:  SUBLW  05
1022:  BC    1028
....................          {Tsecado[1]=0; 
1024:  CLRF   xD0
....................           Tsecado[2]++;} 
1026:  INCF   xD1,F
....................          if(Tsecado[2]>9) 
1028:  BTFSC  xD1.7
102A:  BRA    1036
102C:  MOVF   xD1,W
102E:  SUBLW  09
1030:  BC    1036
....................             {Tsecado[2]=0; 
1032:  CLRF   xD1
....................              Tsecado[3]++;} 
1034:  INCF   xD2,F
....................             if(Tsecado[3]>5) 
1036:  BTFSC  xD2.7
1038:  BRA    1042
103A:  MOVF   xD2,W
103C:  SUBLW  05
103E:  BC    1042
....................                {Tsecado[3]=0;} 
1040:  CLRF   xD2
....................       }   
....................    } 
....................    } 
....................     
1042:  BCF    F9E.0
1044:  MOVLB  0
1046:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
2772:  MOVLW  07
2774:  MOVLB  5
2776:  ADDWF  x0C,W
2778:  MOVWF  x0D
277A:  MOVFF  50A,520
277E:  MOVFF  50C,521
2782:  MOVFF  50B,522
2786:  MOVWF  x23
2788:  MOVLW  01
278A:  MOVWF  x24
278C:  CLRF   x25
278E:  MOVLB  0
2790:  CALL   1620
.................... } 
2794:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.0f",adc); // Converts adc to text 
*
2B04:  MOVLW  05
2B06:  MOVLB  5
2B08:  MOVWF  x09
2B0A:  MOVLW  15
2B0C:  MOVWF  x08
2B0E:  MOVLW  42
2B10:  MOVWF  FE9
2B12:  MOVFF  511,521
2B16:  MOVFF  510,520
2B1A:  MOVFF  50F,51F
2B1E:  MOVFF  50E,51E
2B22:  CLRF   x22
2B24:  MOVLB  0
2B26:  RCALL  2952
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2B28:  MOVLB  5
2B2A:  MOVF   x14,W
2B2C:  MULLW  1B
2B2E:  MOVF   FF3,W
2B30:  ADDWF  x12,W
2B32:  MOVWF  x1E
2B34:  MOVF   x14,W
2B36:  MULLW  08
2B38:  MOVF   FF3,W
2B3A:  ADDWF  x13,W
2B3C:  MOVWF  x1F
2B3E:  MOVFF  512,520
2B42:  MOVFF  513,521
2B46:  MOVFF  51E,522
2B4A:  MOVWF  x23
2B4C:  MOVLW  01
2B4E:  MOVWF  x24
2B50:  CLRF   x25
2B52:  MOVLB  0
2B54:  CALL   1620
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2B58:  MOVFF  512,51E
2B5C:  MOVFF  513,51F
2B60:  MOVLW  05
2B62:  MOVLB  5
2B64:  MOVWF  x21
2B66:  MOVLW  15
2B68:  MOVWF  x20
2B6A:  MOVFF  514,522
2B6E:  MOVLW  01
2B70:  MOVWF  x23
2B72:  MOVLB  0
2B74:  CALL   132A
.................... } 
2B78:  RETLW  00
....................  
.................... void displayTT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
2B7A:  MOVLW  05
2B7C:  MOVLB  5
2B7E:  MOVWF  x09
2B80:  MOVLW  11
2B82:  MOVWF  x08
2B84:  MOVLW  42
2B86:  MOVWF  FE9
2B88:  MOVFF  50D,521
2B8C:  MOVFF  50C,520
2B90:  MOVFF  50B,51F
2B94:  MOVFF  50A,51E
2B98:  MOVLW  01
2B9A:  MOVWF  x22
2B9C:  MOVLB  0
2B9E:  RCALL  2952
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2BA0:  MOVLB  5
2BA2:  MOVF   x10,W
2BA4:  MULLW  1B
2BA6:  MOVF   FF3,W
2BA8:  ADDWF  x0E,W
2BAA:  MOVWF  x1A
2BAC:  MOVF   x10,W
2BAE:  MULLW  08
2BB0:  MOVF   FF3,W
2BB2:  ADDWF  x0F,W
2BB4:  MOVWF  x1B
2BB6:  MOVFF  50E,520
2BBA:  MOVFF  50F,521
2BBE:  MOVFF  51A,522
2BC2:  MOVWF  x23
2BC4:  MOVLW  01
2BC6:  MOVWF  x24
2BC8:  CLRF   x25
2BCA:  MOVLB  0
2BCC:  CALL   1620
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2BD0:  MOVFF  50E,51E
2BD4:  MOVFF  50F,51F
2BD8:  MOVLW  05
2BDA:  MOVLB  5
2BDC:  MOVWF  x21
2BDE:  MOVLW  11
2BE0:  MOVWF  x20
2BE2:  MOVFF  510,522
2BE6:  MOVLW  01
2BE8:  MOVWF  x23
2BEA:  MOVLB  0
2BEC:  CALL   132A
.................... } 
2BF0:  GOTO   6A44 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
2632:  MOVFF  4CE,50B
2636:  MOVLW  24
2638:  MOVLB  5
263A:  MOVWF  x0C
263C:  CLRF   x0D
263E:  CLRF   x0E
2640:  MOVLW  01
2642:  MOVWF  x0F
2644:  MOVLB  0
2646:  RCALL  24E2
2648:  MOVFF  4CD,50B
264C:  MOVLW  2A
264E:  MOVLB  5
2650:  MOVWF  x0C
2652:  CLRF   x0D
2654:  CLRF   x0E
2656:  MOVLW  01
2658:  MOVWF  x0F
265A:  MOVLB  0
265C:  RCALL  24E2
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
265E:  MOVLW  04
2660:  MOVWF  FEA
2662:  MOVLW  EA
2664:  MOVWF  FE9
2666:  MOVFF  FF2,50A
266A:  BCF    FF2.7
266C:  MOVLW  00
266E:  CALL   06BE
2672:  TBLRD*-
2674:  TBLRD*+
2676:  MOVF   FF5,W
2678:  MOVWF  FEE
267A:  IORLW  00
267C:  BNZ   2674
267E:  MOVLB  5
2680:  BTFSC  x0A.7
2682:  BSF    FF2.7
2684:  MOVLW  04
2686:  MOVWF  x0B
2688:  MOVLW  EA
268A:  MOVWF  x0A
268C:  MOVLW  31
268E:  MOVWF  x0C
2690:  CLRF   x0D
2692:  MOVLW  02
2694:  MOVWF  x0E
2696:  MOVLW  01
2698:  MOVWF  x0F
269A:  MOVLB  0
269C:  CALL   16E2
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
26A0:  MOVFF  4CC,50B
26A4:  MOVLW  36
26A6:  MOVLB  5
26A8:  MOVWF  x0C
26AA:  CLRF   x0D
26AC:  CLRF   x0E
26AE:  MOVLW  01
26B0:  MOVWF  x0F
26B2:  MOVLB  0
26B4:  RCALL  24E2
26B6:  MOVFF  4CB,50B
26BA:  MOVLW  3C
26BC:  MOVLB  5
26BE:  MOVWF  x0C
26C0:  CLRF   x0D
26C2:  CLRF   x0E
26C4:  MOVLW  01
26C6:  MOVWF  x0F
26C8:  MOVLB  0
26CA:  RCALL  24E2
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
26CC:  MOVFF  4D6,50B
26D0:  MOVLW  24
26D2:  MOVLB  5
26D4:  MOVWF  x0C
26D6:  MOVLW  08
26D8:  MOVWF  x0D
26DA:  CLRF   x0E
26DC:  MOVLW  01
26DE:  MOVWF  x0F
26E0:  MOVLB  0
26E2:  RCALL  24E2
26E4:  MOVFF  4D5,50B
26E8:  MOVLW  2A
26EA:  MOVLB  5
26EC:  MOVWF  x0C
26EE:  MOVLW  08
26F0:  MOVWF  x0D
26F2:  CLRF   x0E
26F4:  MOVLW  01
26F6:  MOVWF  x0F
26F8:  MOVLB  0
26FA:  RCALL  24E2
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
26FC:  MOVLW  04
26FE:  MOVWF  FEA
2700:  MOVLW  EA
2702:  MOVWF  FE9
2704:  MOVFF  FF2,50A
2708:  BCF    FF2.7
270A:  MOVLW  00
270C:  CALL   06BE
2710:  TBLRD*-
2712:  TBLRD*+
2714:  MOVF   FF5,W
2716:  MOVWF  FEE
2718:  IORLW  00
271A:  BNZ   2712
271C:  MOVLB  5
271E:  BTFSC  x0A.7
2720:  BSF    FF2.7
2722:  MOVLW  04
2724:  MOVWF  x0B
2726:  MOVLW  EA
2728:  MOVWF  x0A
272A:  MOVLW  31
272C:  MOVWF  x0C
272E:  MOVLW  08
2730:  MOVWF  x0D
2732:  MOVLW  02
2734:  MOVWF  x0E
2736:  MOVLW  01
2738:  MOVWF  x0F
273A:  MOVLB  0
273C:  CALL   16E2
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
2740:  MOVFF  4D4,50B
2744:  MOVLW  36
2746:  MOVLB  5
2748:  MOVWF  x0C
274A:  MOVLW  08
274C:  MOVWF  x0D
274E:  CLRF   x0E
2750:  MOVLW  01
2752:  MOVWF  x0F
2754:  MOVLB  0
2756:  RCALL  24E2
2758:  MOVFF  4D3,50B
275C:  MOVLW  3C
275E:  MOVLB  5
2760:  MOVWF  x0C
2762:  MOVLW  08
2764:  MOVWF  x0D
2766:  CLRF   x0E
2768:  MOVLW  01
276A:  MOVWF  x0F
276C:  MOVLB  0
276E:  RCALL  24E2
.................... } 
2770:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1908:  MOVLW  05
190A:  MOVLB  5
190C:  MOVWF  x09
190E:  MOVLW  10
1910:  MOVWF  x08
1912:  MOVFF  50C,519
1916:  MOVLW  1F
1918:  MOVWF  x1A
191A:  MOVLB  0
191C:  BRA    1828
....................     
....................    if(sombreado==1) 
191E:  MOVLB  5
1920:  DECFSZ x0F,W
1922:  BRA    1972
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1924:  MOVLW  12
1926:  ADDWF  x0D,W
1928:  MOVWF  x19
192A:  MOVLW  18
192C:  ADDWF  x0E,W
192E:  MOVWF  x1A
1930:  MOVFF  50D,520
1934:  MOVFF  50E,521
1938:  MOVFF  519,522
193C:  MOVWF  x23
193E:  MOVLW  01
1940:  MOVWF  x24
1942:  MOVWF  x25
1944:  MOVLB  0
1946:  RCALL  1620
1948:  MOVLW  02
194A:  MOVLB  5
194C:  ADDWF  x0D,W
194E:  MOVWF  x19
1950:  MOVLW  01
1952:  ADDWF  x0E,W
1954:  MOVWF  x1A
1956:  MOVFF  519,51E
195A:  MOVWF  x1F
195C:  MOVLW  05
195E:  MOVWF  x21
1960:  MOVLW  10
1962:  MOVWF  x20
1964:  MOVLW  02
1966:  MOVWF  x22
1968:  CLRF   x23
196A:  MOVLB  0
196C:  RCALL  132A
....................    else    
196E:  BRA    19BC
1970:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
1972:  MOVLW  12
1974:  ADDWF  x0D,W
1976:  MOVWF  x19
1978:  MOVLW  18
197A:  ADDWF  x0E,W
197C:  MOVWF  x1A
197E:  MOVFF  50D,520
1982:  MOVFF  50E,521
1986:  MOVFF  519,522
198A:  MOVWF  x23
198C:  CLRF   x24
198E:  CLRF   x25
1990:  MOVLB  0
1992:  RCALL  1620
1994:  MOVLW  02
1996:  MOVLB  5
1998:  ADDWF  x0D,W
199A:  MOVWF  x19
199C:  MOVLW  01
199E:  ADDWF  x0E,W
19A0:  MOVWF  x1A
19A2:  MOVFF  519,51E
19A6:  MOVWF  x1F
19A8:  MOVLW  05
19AA:  MOVWF  x21
19AC:  MOVLW  10
19AE:  MOVWF  x20
19B0:  MOVLW  02
19B2:  MOVWF  x22
19B4:  MOVLW  01
19B6:  MOVWF  x23
19B8:  MOVLB  0
19BA:  RCALL  132A
....................  
.................... } 
19BC:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
207C:  BSF    F93.0
207E:  MOVLW  11
2080:  MOVWF  00
2082:  DECFSZ 00,F
2084:  BRA    2082
2086:  BSF    F93.1
2088:  MOVLW  11
208A:  MOVWF  00
208C:  DECFSZ 00,F
208E:  BRA    208C
2090:  BCF    F8A.0
2092:  BCF    F93.0
2094:  MOVLW  11
2096:  MOVWF  00
2098:  DECFSZ 00,F
209A:  BRA    2098
209C:  BCF    F8A.1
209E:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
20A0:  MOVFF  50B,50E
20A4:  RCALL  19BE
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
20A6:  MOVFF  50C,50E
20AA:  RCALL  19BE
....................    i2c_write(dato);        // Dato a transmitir 
20AC:  MOVFF  50D,50E
20B0:  RCALL  19BE
....................    i2c_stop();             // Fin comunicación 
20B2:  BCF    F93.0
20B4:  NOP   
20B6:  BSF    F93.1
20B8:  BTFSS  F81.1
20BA:  BRA    20B8
20BC:  MOVLW  11
20BE:  MOVWF  00
20C0:  DECFSZ 00,F
20C2:  BRA    20C0
20C4:  BRA    20C6
20C6:  NOP   
20C8:  BSF    F93.0
20CA:  MOVLW  11
20CC:  MOVWF  00
20CE:  DECFSZ 00,F
20D0:  BRA    20CE
....................  } 
20D2:  GOTO   2108 (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1F92:  BSF    F93.0
1F94:  MOVLW  11
1F96:  MOVWF  00
1F98:  DECFSZ 00,F
1F9A:  BRA    1F98
1F9C:  BSF    F93.1
1F9E:  MOVLW  11
1FA0:  MOVWF  00
1FA2:  DECFSZ 00,F
1FA4:  BRA    1FA2
1FA6:  BCF    F8A.0
1FA8:  BCF    F93.0
1FAA:  MOVLW  11
1FAC:  MOVWF  00
1FAE:  DECFSZ 00,F
1FB0:  BRA    1FAE
1FB2:  BCF    F8A.1
1FB4:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FB6:  MOVFF  50A,50E
1FBA:  MOVLB  0
1FBC:  RCALL  19BE
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1FBE:  MOVFF  50B,50E
1FC2:  RCALL  19BE
....................    i2c_start();            // Reinicio 
1FC4:  BSF    F93.0
1FC6:  MOVLW  11
1FC8:  MOVWF  00
1FCA:  DECFSZ 00,F
1FCC:  BRA    1FCA
1FCE:  BSF    F93.1
1FD0:  MOVLW  11
1FD2:  MOVWF  00
1FD4:  DECFSZ 00,F
1FD6:  BRA    1FD4
1FD8:  BTFSS  F81.1
1FDA:  BRA    1FD8
1FDC:  BCF    F8A.0
1FDE:  BCF    F93.0
1FE0:  MOVLW  11
1FE2:  MOVWF  00
1FE4:  DECFSZ 00,F
1FE6:  BRA    1FE4
1FE8:  BCF    F8A.1
1FEA:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1FEC:  MOVLW  01
1FEE:  MOVLB  5
1FF0:  ADDWF  x0A,W
1FF2:  MOVWF  x0C
1FF4:  MOVWF  x0E
1FF6:  MOVLB  0
1FF8:  RCALL  19BE
....................    dato=i2c_read(0);       // Lectura del dato 
1FFA:  CLRF   00
1FFC:  BRA    1A34
1FFE:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
2002:  BCF    F93.0
2004:  NOP   
2006:  BSF    F93.1
2008:  BTFSS  F81.1
200A:  BRA    2008
200C:  MOVLW  11
200E:  MOVWF  00
2010:  DECFSZ 00,F
2012:  BRA    2010
2014:  BRA    2016
2016:  NOP   
2018:  BSF    F93.0
201A:  MOVLW  11
201C:  MOVWF  00
201E:  DECFSZ 00,F
2020:  BRA    201E
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
2040:  MOVFF  498,456
....................    SlaveA0Tx[1]=EVDesfogue; 
2044:  MOVFF  499,457
....................    SlaveA0Tx[2]=EVAgua; 
2048:  MOVFF  49A,458
....................    SlaveA0Tx[3]=EVTrampa; 
204C:  MOVFF  49B,459
....................    SlaveA0Tx[4]=MotorPuerta; 
2050:  MOVFF  49C,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
2054:  MOVFF  49D,45B
....................    SlaveA0Tx[6]=BombaVacio; 
2058:  MOVFF  49E,45C
....................    SlaveA0Tx[7]=BombaAgua; 
205C:  MOVFF  49F,45D
....................    SlaveA0Tx[8]=Control; 
2060:  MOVFF  4A0,45E
....................    SlaveA0Tx[9]=Setpoint; 
2064:  MOVFF  4A9,45F
....................    SlaveA0Tx[10]=20; 
2068:  MOVLW  14
206A:  MOVLB  4
206C:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
206E:  MOVFF  4B9,462
....................    SlaveA0Tx[13]=Atmosferica; 
2072:  MOVFF  4AA,463
.................... } 
2076:  MOVLB  0
2078:  GOTO   20D8 (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1EAE:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1EB2:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1EB6:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1EBA:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1EBE:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1EC2:  MOVLB  5
1EC4:  CLRF   x0B
1EC6:  MOVFF  41B,50A
1ECA:  MOVLB  0
1ECC:  RCALL  1AA0
1ECE:  MOVFF  03,4C6
1ED2:  MOVFF  02,4C5
1ED6:  MOVFF  01,4C4
1EDA:  MOVFF  00,4C3
....................    Alarma=txbuf[6]; 
1EDE:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1EE2:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1EE6:  MOVFF  41E,4B0
....................    Decimal=txbuf[9]; 
1EEA:  MOVFF  41F,4A1
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1EEE:  MOVLB  5
1EF0:  CLRF   x0B
1EF2:  MOVFF  4A1,50A
1EF6:  MOVLB  0
1EF8:  RCALL  1AA0
1EFA:  MOVFF  00,50A
1EFE:  MOVFF  01,50B
1F02:  MOVFF  02,50C
1F06:  MOVFF  03,50D
1F0A:  MOVFF  03,511
1F0E:  MOVFF  02,510
1F12:  MOVFF  01,50F
1F16:  MOVFF  00,50E
1F1A:  MOVLB  5
1F1C:  CLRF   x15
1F1E:  CLRF   x14
1F20:  MOVLW  20
1F22:  MOVWF  x13
1F24:  MOVLW  82
1F26:  MOVWF  x12
1F28:  MOVLB  0
1F2A:  BRA    1AD6
1F2C:  BCF    FD8.1
1F2E:  MOVFF  4C6,511
1F32:  MOVFF  4C5,510
1F36:  MOVFF  4C4,50F
1F3A:  MOVFF  4C3,50E
1F3E:  MOVFF  03,515
1F42:  MOVFF  02,514
1F46:  MOVFF  01,513
1F4A:  MOVFF  00,512
1F4E:  RCALL  1C36
1F50:  MOVFF  03,4C6
1F54:  MOVFF  02,4C5
1F58:  MOVFF  01,4C4
1F5C:  MOVFF  00,4C3
....................    PresionCamara=make16(txbuf[11],txbuf[10]); 
1F60:  MOVFF  421,4C0
1F64:  MOVFF  420,4BF
....................    PresionPreCamara=make16(txbuf[13],txbuf[12]); 
1F68:  MOVFF  423,4C2
1F6C:  MOVFF  422,4C1
....................    flagprevacio=txbuf[14]; 
1F70:  MOVFF  424,4A6
....................    //Atmosferica=txbuf[15]; 
.................... } 
1F74:  GOTO   203E (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
20D6:  BRA    2040
....................    for(i=0;i<14;i++) 
20D8:  MOVLB  4
20DA:  CLRF   xA4
20DC:  MOVF   xA4,W
20DE:  SUBLW  0D
20E0:  BNC   210E
....................    { 
....................       direccion=0xA0; 
20E2:  MOVLW  A0
20E4:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
20E6:  CLRF   03
20E8:  MOVF   xA4,W
20EA:  ADDLW  56
20EC:  MOVWF  FE9
20EE:  MOVLW  04
20F0:  ADDWFC 03,W
20F2:  MOVWF  FEA
20F4:  MOVFF  FEF,50A
20F8:  MOVFF  487,50B
20FC:  MOVFF  4A4,50C
2100:  MOVFF  50A,50D
2104:  MOVLB  0
2106:  BRA    207C
....................    }  
2108:  MOVLB  4
210A:  INCF   xA4,F
210C:  BRA    20DC
.................... } 
210E:  MOVLB  0
2110:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<15;i++) 
*
1F78:  MOVLB  4
1F7A:  CLRF   xA4
1F7C:  MOVF   xA4,W
1F7E:  SUBLW  0E
1F80:  BNC   203A
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1F82:  MOVLW  A0
1F84:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1F86:  MOVFF  4A4,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1F8A:  MOVFF  487,50A
1F8E:  MOVFF  488,50B
....................       txbuf[i]=(int8)dato; 
*
2022:  CLRF   03
2024:  MOVLB  4
2026:  MOVF   xA4,W
2028:  ADDLW  16
202A:  MOVWF  FE9
202C:  MOVLW  04
202E:  ADDWFC 03,W
2030:  MOVWF  FEA
2032:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
2036:  INCF   xA4,F
2038:  BRA    1F7C
....................    Lee_Vector(); 
203A:  MOVLB  0
203C:  BRA    1EAE
.................... } 
203E:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2CAC:  CLRF   FF8
2CAE:  BCF    FD0.7
2CB0:  BSF    07.7
2CB2:  CLRF   FEA
2CB4:  CLRF   FE9
2CB6:  MOVLB  4
2CB8:  CLRF   x86
2CBA:  CLRF   x87
2CBC:  CLRF   x88
2CBE:  CLRF   x8D
2CC0:  MOVLW  01
2CC2:  MOVWF  x8E
2CC4:  CLRF   x8F
2CC6:  CLRF   x90
2CC8:  CLRF   x91
2CCA:  CLRF   x92
2CCC:  CLRF   x93
2CCE:  CLRF   x94
2CD0:  BCF    x95.0
2CD2:  BCF    x95.1
2CD4:  BCF    x95.2
2CD6:  BCF    x95.3
2CD8:  BSF    x95.4
2CDA:  BCF    x95.5
2CDC:  BCF    x95.6
2CDE:  BCF    x95.7
2CE0:  BCF    x96.0
2CE2:  BCF    x96.1
2CE4:  BCF    x96.2
2CE6:  BCF    x96.3
2CE8:  BCF    x96.4
2CEA:  BCF    x96.5
2CEC:  BCF    x96.6
2CEE:  BCF    x96.7
2CF0:  BCF    x97.0
2CF2:  BCF    x97.1
2CF4:  BCF    x97.2
2CF6:  BCF    x97.3
2CF8:  BCF    x97.4
2CFA:  CLRF   x98
2CFC:  CLRF   x99
2CFE:  CLRF   x9A
2D00:  CLRF   x9B
2D02:  CLRF   x9C
2D04:  CLRF   x9D
2D06:  CLRF   x9E
2D08:  CLRF   x9F
2D0A:  CLRF   xA0
2D0C:  CLRF   xA1
2D0E:  CLRF   xA2
2D10:  MOVWF  xA3
2D12:  CLRF   xA4
2D14:  MOVLW  0A
2D16:  MOVWF  xA5
2D18:  MOVWF  xA6
2D1A:  MOVWF  xA7
2D1C:  MOVWF  xA8
2D1E:  CLRF   xA9
2D20:  MOVLW  47
2D22:  MOVWF  xAA
2D24:  CLRF   xAB
2D26:  MOVLW  01
2D28:  MOVWF  xAC
2D2A:  CLRF   xAD
2D2C:  CLRF   xAE
2D2E:  CLRF   xAF
2D30:  CLRF   xB0
2D32:  CLRF   xB2
2D34:  CLRF   xB1
2D36:  CLRF   xB4
2D38:  CLRF   xB3
2D3A:  CLRF   xB6
2D3C:  CLRF   xB5
2D3E:  CLRF   xB8
2D40:  MOVLW  0F
2D42:  MOVWF  xB7
2D44:  CLRF   xBA
2D46:  CLRF   xB9
2D48:  CLRF   xBC
2D4A:  CLRF   xBB
2D4C:  CLRF   xBE
2D4E:  CLRF   xBD
2D50:  CLRF   xC0
2D52:  CLRF   xBF
2D54:  CLRF   xC2
2D56:  CLRF   xC1
2D58:  CLRF   xC6
2D5A:  CLRF   xC5
2D5C:  CLRF   xC4
2D5E:  CLRF   xC3
2D60:  MOVF   FC1,W
2D62:  ANDLW  C0
2D64:  IORLW  0F
2D66:  MOVWF  FC1
2D68:  MOVLW  07
2D6A:  MOVWF  FB4
2D6C:  MOVLW  6B
2D6E:  MOVWF  x89
2D70:  MOVLW  50
2D72:  MOVWF  x8A
2D74:  MOVLW  61
2D76:  MOVWF  x8B
2D78:  CLRF   x8C
2D7A:  CLRF   xC7
2D7C:  CLRF   xC8
2D7E:  CLRF   xC9
2D80:  CLRF   xCA
2D82:  CLRF   xCB
2D84:  CLRF   xCC
2D86:  CLRF   xCD
2D88:  CLRF   xCE
2D8A:  CLRF   xCF
2D8C:  CLRF   xD0
2D8E:  CLRF   xD1
2D90:  CLRF   xD2
2D92:  CLRF   xD3
2D94:  CLRF   xD4
2D96:  CLRF   xD5
2D98:  CLRF   xD6
2D9A:  CLRF   xD7
2D9C:  CLRF   xD8
2D9E:  CLRF   xD9
2DA0:  CLRF   xDA
2DA2:  CLRF   xDB
2DA4:  CLRF   xDC
2DA6:  CLRF   xDD
2DA8:  CLRF   xDE
2DAA:  MOVLB  5
2DAC:  CLRF   x08
2DAE:  CLRF   x09
....................    Display_on; 
2DB0:  BSF    F8D.0
2DB2:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2DB4:  MOVLB  4
2DB6:  CLRF   x88
2DB8:  MOVF   x88,W
2DBA:  SUBLW  0F
2DBC:  BNC   2DF2
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2DBE:  CLRF   03
2DC0:  MOVF   x88,W
2DC2:  ADDLW  56
2DC4:  MOVWF  FE9
2DC6:  MOVLW  04
2DC8:  ADDWFC 03,W
2DCA:  MOVWF  FEA
2DCC:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2DCE:  CLRF   03
2DD0:  MOVF   x88,W
2DD2:  ADDLW  66
2DD4:  MOVWF  FE9
2DD6:  MOVLW  04
2DD8:  ADDWFC 03,W
2DDA:  MOVWF  FEA
2DDC:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2DDE:  CLRF   03
2DE0:  MOVF   x88,W
2DE2:  ADDLW  76
2DE4:  MOVWF  FE9
2DE6:  MOVLW  04
2DE8:  ADDWFC 03,W
2DEA:  MOVWF  FEA
2DEC:  CLRF   FEF
....................    } 
2DEE:  INCF   x88,F
2DF0:  BRA    2DB8
....................    output_d(0); 
2DF2:  CLRF   F95
2DF4:  CLRF   F8C
....................    delay_ms(1000);    
2DF6:  MOVLW  04
2DF8:  MOVLB  5
2DFA:  MOVWF  x0A
2DFC:  MOVLW  FA
2DFE:  MOVWF  x0B
2E00:  MOVLB  0
2E02:  CALL   104A
2E06:  MOVLB  5
2E08:  DECFSZ x0A,F
2E0A:  BRA    2DFC
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2E0C:  MOVLW  85
2E0E:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2E10:  BSF    F9D.0
....................    enable_interrupts(global); 
2E12:  MOVLW  C0
2E14:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0); 
2E16:  MOVFF  FF2,50A
2E1A:  BCF    FF2.7
2E1C:  CLRF   FA9
2E1E:  BCF    FA6.6
2E20:  BCF    FA6.7
2E22:  BSF    FA6.0
2E24:  MOVF   FA8,W
2E26:  BTFSC  x0A.7
2E28:  BSF    FF2.7
2E2A:  MOVLB  4
2E2C:  MOVWF  xCB
....................    delay_ms(10); 
2E2E:  MOVLW  0A
2E30:  MOVLB  5
2E32:  MOVWF  x0B
2E34:  MOVLB  0
2E36:  CALL   104A
....................    Testerilizacionp[1]=read_eeprom(1); 
2E3A:  MOVFF  FF2,50A
2E3E:  BCF    FF2.7
2E40:  MOVLW  01
2E42:  MOVWF  FA9
2E44:  BCF    FA6.6
2E46:  BCF    FA6.7
2E48:  BSF    FA6.0
2E4A:  MOVF   FA8,W
2E4C:  MOVLB  5
2E4E:  BTFSC  x0A.7
2E50:  BSF    FF2.7
2E52:  MOVLB  4
2E54:  MOVWF  xCC
....................    delay_ms(10); 
2E56:  MOVLW  0A
2E58:  MOVLB  5
2E5A:  MOVWF  x0B
2E5C:  MOVLB  0
2E5E:  CALL   104A
....................    Testerilizacionp[2]=read_eeprom(2); 
2E62:  MOVFF  FF2,50A
2E66:  BCF    FF2.7
2E68:  MOVLW  02
2E6A:  MOVWF  FA9
2E6C:  BCF    FA6.6
2E6E:  BCF    FA6.7
2E70:  BSF    FA6.0
2E72:  MOVF   FA8,W
2E74:  MOVLB  5
2E76:  BTFSC  x0A.7
2E78:  BSF    FF2.7
2E7A:  MOVLB  4
2E7C:  MOVWF  xCD
....................    delay_ms(10); 
2E7E:  MOVLW  0A
2E80:  MOVLB  5
2E82:  MOVWF  x0B
2E84:  MOVLB  0
2E86:  CALL   104A
....................    Testerilizacionp[3]=read_eeprom(3); 
2E8A:  MOVFF  FF2,50A
2E8E:  BCF    FF2.7
2E90:  MOVLW  03
2E92:  MOVWF  FA9
2E94:  BCF    FA6.6
2E96:  BCF    FA6.7
2E98:  BSF    FA6.0
2E9A:  MOVF   FA8,W
2E9C:  MOVLB  5
2E9E:  BTFSC  x0A.7
2EA0:  BSF    FF2.7
2EA2:  MOVLB  4
2EA4:  MOVWF  xCE
....................    delay_ms(10); 
2EA6:  MOVLW  0A
2EA8:  MOVLB  5
2EAA:  MOVWF  x0B
2EAC:  MOVLB  0
2EAE:  CALL   104A
....................    Tsecadop[0]=read_eeprom(4); 
2EB2:  MOVFF  FF2,50A
2EB6:  BCF    FF2.7
2EB8:  MOVLW  04
2EBA:  MOVWF  FA9
2EBC:  BCF    FA6.6
2EBE:  BCF    FA6.7
2EC0:  BSF    FA6.0
2EC2:  MOVF   FA8,W
2EC4:  MOVLB  5
2EC6:  BTFSC  x0A.7
2EC8:  BSF    FF2.7
2ECA:  MOVLB  4
2ECC:  MOVWF  xD3
....................    delay_ms(10); 
2ECE:  MOVLW  0A
2ED0:  MOVLB  5
2ED2:  MOVWF  x0B
2ED4:  MOVLB  0
2ED6:  CALL   104A
....................    Tsecadop[1]=read_eeprom(5); 
2EDA:  MOVFF  FF2,50A
2EDE:  BCF    FF2.7
2EE0:  MOVLW  05
2EE2:  MOVWF  FA9
2EE4:  BCF    FA6.6
2EE6:  BCF    FA6.7
2EE8:  BSF    FA6.0
2EEA:  MOVF   FA8,W
2EEC:  MOVLB  5
2EEE:  BTFSC  x0A.7
2EF0:  BSF    FF2.7
2EF2:  MOVLB  4
2EF4:  MOVWF  xD4
....................    delay_ms(10); 
2EF6:  MOVLW  0A
2EF8:  MOVLB  5
2EFA:  MOVWF  x0B
2EFC:  MOVLB  0
2EFE:  CALL   104A
....................    Tsecadop[2]=read_eeprom(6); 
2F02:  MOVFF  FF2,50A
2F06:  BCF    FF2.7
2F08:  MOVLW  06
2F0A:  MOVWF  FA9
2F0C:  BCF    FA6.6
2F0E:  BCF    FA6.7
2F10:  BSF    FA6.0
2F12:  MOVF   FA8,W
2F14:  MOVLB  5
2F16:  BTFSC  x0A.7
2F18:  BSF    FF2.7
2F1A:  MOVLB  4
2F1C:  MOVWF  xD5
....................    delay_ms(10); 
2F1E:  MOVLW  0A
2F20:  MOVLB  5
2F22:  MOVWF  x0B
2F24:  MOVLB  0
2F26:  CALL   104A
....................    Tsecadop[3]=read_eeprom(7); 
2F2A:  MOVFF  FF2,50A
2F2E:  BCF    FF2.7
2F30:  MOVLW  07
2F32:  MOVWF  FA9
2F34:  BCF    FA6.6
2F36:  BCF    FA6.7
2F38:  BSF    FA6.0
2F3A:  MOVF   FA8,W
2F3C:  MOVLB  5
2F3E:  BTFSC  x0A.7
2F40:  BSF    FF2.7
2F42:  MOVLB  4
2F44:  MOVWF  xD6
....................    delay_ms(10); 
2F46:  MOVLW  0A
2F48:  MOVLB  5
2F4A:  MOVWF  x0B
2F4C:  MOVLB  0
2F4E:  CALL   104A
....................    Setpoint=read_eeprom(8); 
2F52:  MOVFF  FF2,50A
2F56:  BCF    FF2.7
2F58:  MOVLW  08
2F5A:  MOVWF  FA9
2F5C:  BCF    FA6.6
2F5E:  BCF    FA6.7
2F60:  BSF    FA6.0
2F62:  MOVF   FA8,W
2F64:  MOVLB  5
2F66:  BTFSC  x0A.7
2F68:  BSF    FF2.7
2F6A:  MOVLB  4
2F6C:  MOVWF  xA9
....................    delay_ms(10); 
2F6E:  MOVLW  0A
2F70:  MOVLB  5
2F72:  MOVWF  x0B
2F74:  MOVLB  0
2F76:  CALL   104A
....................    Nivel=read_eeprom(9); 
2F7A:  MOVFF  FF2,50A
2F7E:  BCF    FF2.7
2F80:  MOVLW  09
2F82:  MOVWF  FA9
2F84:  BCF    FA6.6
2F86:  BCF    FA6.7
2F88:  BSF    FA6.0
2F8A:  MOVF   FA8,W
2F8C:  MOVLB  5
2F8E:  BTFSC  x0A.7
2F90:  BSF    FF2.7
2F92:  MOVLB  4
2F94:  CLRF   xBA
2F96:  MOVWF  xB9
....................    delay_ms(10); 
2F98:  MOVLW  0A
2F9A:  MOVLB  5
2F9C:  MOVWF  x0B
2F9E:  MOVLB  0
2FA0:  CALL   104A
....................    Password[0]=read_eeprom(10); 
2FA4:  MOVFF  FF2,50A
2FA8:  BCF    FF2.7
2FAA:  MOVLW  0A
2FAC:  MOVWF  FA9
2FAE:  BCF    FA6.6
2FB0:  BCF    FA6.7
2FB2:  BSF    FA6.0
2FB4:  MOVF   FA8,W
2FB6:  MOVLB  5
2FB8:  BTFSC  x0A.7
2FBA:  BSF    FF2.7
2FBC:  MOVLB  4
2FBE:  MOVWF  xDB
....................    delay_ms(10); 
2FC0:  MOVLW  0A
2FC2:  MOVLB  5
2FC4:  MOVWF  x0B
2FC6:  MOVLB  0
2FC8:  CALL   104A
....................    Password[1]=read_eeprom(11); 
2FCC:  MOVFF  FF2,50A
2FD0:  BCF    FF2.7
2FD2:  MOVLW  0B
2FD4:  MOVWF  FA9
2FD6:  BCF    FA6.6
2FD8:  BCF    FA6.7
2FDA:  BSF    FA6.0
2FDC:  MOVF   FA8,W
2FDE:  MOVLB  5
2FE0:  BTFSC  x0A.7
2FE2:  BSF    FF2.7
2FE4:  MOVLB  4
2FE6:  MOVWF  xDC
....................    delay_ms(10); 
2FE8:  MOVLW  0A
2FEA:  MOVLB  5
2FEC:  MOVWF  x0B
2FEE:  MOVLB  0
2FF0:  CALL   104A
....................    Password[2]=read_eeprom(12); 
2FF4:  MOVFF  FF2,50A
2FF8:  BCF    FF2.7
2FFA:  MOVLW  0C
2FFC:  MOVWF  FA9
2FFE:  BCF    FA6.6
3000:  BCF    FA6.7
3002:  BSF    FA6.0
3004:  MOVF   FA8,W
3006:  MOVLB  5
3008:  BTFSC  x0A.7
300A:  BSF    FF2.7
300C:  MOVLB  4
300E:  MOVWF  xDD
....................    delay_ms(10); 
3010:  MOVLW  0A
3012:  MOVLB  5
3014:  MOVWF  x0B
3016:  MOVLB  0
3018:  CALL   104A
....................    Password[3]=read_eeprom(13); 
301C:  MOVFF  FF2,50A
3020:  BCF    FF2.7
3022:  MOVLW  0D
3024:  MOVWF  FA9
3026:  BCF    FA6.6
3028:  BCF    FA6.7
302A:  BSF    FA6.0
302C:  MOVF   FA8,W
302E:  MOVLB  5
3030:  BTFSC  x0A.7
3032:  BSF    FF2.7
3034:  MOVLB  4
3036:  MOVWF  xDE
....................    delay_ms(10); 
3038:  MOVLW  0A
303A:  MOVLB  5
303C:  MOVWF  x0B
303E:  MOVLB  0
3040:  CALL   104A
....................    Atmosferica=read_eeprom(90); 
3044:  MOVFF  FF2,50A
3048:  BCF    FF2.7
304A:  MOVLW  5A
304C:  MOVWF  FA9
304E:  BCF    FA6.6
3050:  BCF    FA6.7
3052:  BSF    FA6.0
3054:  MOVF   FA8,W
3056:  MOVLB  5
3058:  BTFSC  x0A.7
305A:  BSF    FF2.7
305C:  MOVLB  4
305E:  MOVWF  xAA
....................    delay_ms(10); 
3060:  MOVLW  0A
3062:  MOVLB  5
3064:  MOVWF  x0B
3066:  MOVLB  0
3068:  CALL   104A
....................     
....................    if(Atmosferica>100) 
306C:  MOVLB  4
306E:  MOVF   xAA,W
3070:  SUBLW  64
3072:  BC    3078
....................       Atmosferica=95; 
3074:  MOVLW  5F
3076:  MOVWF  xAA
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
3078:  MOVLW  01
307A:  MOVLB  5
307C:  MOVWF  x0A
307E:  MOVLB  0
3080:  CALL   11C6
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
3084:  MOVLB  5
3086:  CLRF   x0B
3088:  MOVLB  0
308A:  CALL   10B4
....................    strcpy(Menus.Letra,"JP Inglobal"); 
308E:  MOVLW  04
3090:  MOVWF  FEA
3092:  MOVLW  EA
3094:  MOVWF  FE9
3096:  MOVFF  FF2,50A
309A:  BCF    FF2.7
309C:  MOVLW  00
309E:  CALL   06DA
30A2:  TBLRD*-
30A4:  TBLRD*+
30A6:  MOVF   FF5,W
30A8:  MOVWF  FEE
30AA:  IORLW  00
30AC:  BNZ   30A4
30AE:  MOVLB  5
30B0:  BTFSC  x0A.7
30B2:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
30B4:  MOVLW  04
30B6:  MOVWF  x0B
30B8:  MOVLW  EA
30BA:  MOVWF  x0A
30BC:  CLRF   x0C
30BE:  CLRF   x0D
30C0:  CLRF   x0E
30C2:  MOVLW  02
30C4:  MOVWF  x0F
30C6:  MOVLB  0
30C8:  CALL   16E2
....................    strcpy(Menus.Letra,"Autoclave Vertical"); 
30CC:  MOVLW  04
30CE:  MOVWF  FEA
30D0:  MOVLW  EA
30D2:  MOVWF  FE9
30D4:  MOVFF  FF2,50A
30D8:  BCF    FF2.7
30DA:  MOVLW  00
30DC:  CALL   0700
30E0:  TBLRD*-
30E2:  TBLRD*+
30E4:  MOVF   FF5,W
30E6:  MOVWF  FEE
30E8:  IORLW  00
30EA:  BNZ   30E2
30EC:  MOVLB  5
30EE:  BTFSC  x0A.7
30F0:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
30F2:  MOVLW  04
30F4:  MOVWF  x0B
30F6:  MOVLW  EA
30F8:  MOVWF  x0A
30FA:  CLRF   x0C
30FC:  MOVLW  14
30FE:  MOVWF  x0D
3100:  CLRF   x0E
3102:  MOVLW  01
3104:  MOVWF  x0F
3106:  MOVLB  0
3108:  CALL   16E2
....................    strcpy(Menus.Letra," 55 Litros  "); 
310C:  MOVLW  04
310E:  MOVWF  FEA
3110:  MOVLW  EA
3112:  MOVWF  FE9
3114:  MOVFF  FF2,50A
3118:  BCF    FF2.7
311A:  MOVLW  00
311C:  CALL   072E
3120:  TBLRD*-
3122:  TBLRD*+
3124:  MOVF   FF5,W
3126:  MOVWF  FEE
3128:  IORLW  00
312A:  BNZ   3122
312C:  MOVLB  5
312E:  BTFSC  x0A.7
3130:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
3132:  MOVLW  04
3134:  MOVWF  x0B
3136:  MOVLW  EA
3138:  MOVWF  x0A
313A:  CLRF   x0C
313C:  MOVLW  23
313E:  MOVWF  x0D
3140:  CLRF   x0E
3142:  MOVLW  02
3144:  MOVWF  x0F
3146:  MOVLB  0
3148:  CALL   16E2
....................    delay_ms(1000); 
314C:  MOVLW  04
314E:  MOVLB  5
3150:  MOVWF  x0A
3152:  MOVLW  FA
3154:  MOVWF  x0B
3156:  MOVLB  0
3158:  CALL   104A
315C:  MOVLB  5
315E:  DECFSZ x0A,F
3160:  BRA    3152
....................    delay_ms(1000); 
3162:  MOVLW  04
3164:  MOVWF  x0A
3166:  MOVLW  FA
3168:  MOVWF  x0B
316A:  MOVLB  0
316C:  CALL   104A
3170:  MOVLB  5
3172:  DECFSZ x0A,F
3174:  BRA    3166
....................    delay_ms(1000); 
3176:  MOVLW  04
3178:  MOVWF  x0A
317A:  MOVLW  FA
317C:  MOVWF  x0B
317E:  MOVLB  0
3180:  CALL   104A
3184:  MOVLB  5
3186:  DECFSZ x0A,F
3188:  BRA    317A
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
318A:  CLRF   x0B
318C:  MOVLB  0
318E:  CALL   10B4
....................    displayContrasena(Contrasena[0],20,30,1); 
3192:  MOVFF  4D7,50C
3196:  MOVLW  14
3198:  MOVLB  5
319A:  MOVWF  x0D
319C:  MOVLW  1E
319E:  MOVWF  x0E
31A0:  MOVLW  01
31A2:  MOVWF  x0F
31A4:  MOVLB  0
31A6:  CALL   1908
....................    displayContrasena(Contrasena[1],40,30,0); 
31AA:  MOVFF  4D8,50C
31AE:  MOVLW  28
31B0:  MOVLB  5
31B2:  MOVWF  x0D
31B4:  MOVLW  1E
31B6:  MOVWF  x0E
31B8:  CLRF   x0F
31BA:  MOVLB  0
31BC:  CALL   1908
....................    displayContrasena(Contrasena[2],60,30,0); 
31C0:  MOVFF  4D9,50C
31C4:  MOVLW  3C
31C6:  MOVLB  5
31C8:  MOVWF  x0D
31CA:  MOVLW  1E
31CC:  MOVWF  x0E
31CE:  CLRF   x0F
31D0:  MOVLB  0
31D2:  CALL   1908
....................    displayContrasena(Contrasena[3],80,30,0); 
31D6:  MOVFF  4DA,50C
31DA:  MOVLW  50
31DC:  MOVLB  5
31DE:  MOVWF  x0D
31E0:  MOVLW  1E
31E2:  MOVWF  x0E
31E4:  CLRF   x0F
31E6:  MOVLB  0
31E8:  CALL   1908
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
31EC:  CALL   1F78
....................        
....................       Envio_Esclavos(); 
31F0:  CALL   20D6
....................       glcd_update(); 
31F4:  CALL   110E
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
31F8:  BSF    F92.0
31FA:  BTFSC  F80.0
31FC:  BRA    3210
31FE:  BSF    F92.1
3200:  BTFSC  F80.1
3202:  BRA    3210
3204:  BSF    F92.2
3206:  BTFSC  F80.2
3208:  BRA    3210
320A:  BSF    F92.3
320C:  BTFSS  F80.3
320E:  BRA    3218
....................       { 
....................          tinicio=0; 
3210:  MOVLB  4
3212:  CLRF   xBE
3214:  CLRF   xBD
3216:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
3218:  MOVLB  4
321A:  MOVF   xBE,W
321C:  SUBLW  37
321E:  BC    323C
3220:  XORLW  FF
3222:  BNZ   322A
3224:  MOVF   xBD,W
3226:  SUBLW  3F
3228:  BC    323C
....................          glcd_fillscreen(OFF); 
322A:  MOVLB  5
322C:  CLRF   x0B
322E:  MOVLB  0
3230:  CALL   10B4
....................          Display_off; 
3234:  BCF    F8D.0
3236:  BCF    F96.0
....................       } 
3238:  BRA    3218
323A:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
323C:  MOVF   xA2,F
323E:  BTFSS  FD8.2
3240:  BRA    37D6
....................        
....................       strcpy(Menus.Letra,"Clave"); 
3242:  MOVLW  04
3244:  MOVWF  FEA
3246:  MOVLW  EA
3248:  MOVWF  FE9
324A:  MOVFF  FF2,50A
324E:  BCF    FF2.7
3250:  MOVLW  00
3252:  MOVLB  0
3254:  CALL   0756
3258:  TBLRD*-
325A:  TBLRD*+
325C:  MOVF   FF5,W
325E:  MOVWF  FEE
3260:  IORLW  00
3262:  BNZ   325A
3264:  MOVLB  5
3266:  BTFSC  x0A.7
3268:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
326A:  MOVLW  04
326C:  MOVWF  x0B
326E:  MOVLW  EA
3270:  MOVWF  x0A
3272:  MOVLW  1E
3274:  MOVWF  x0C
3276:  CLRF   x0D
3278:  MOVLW  01
327A:  MOVWF  x0E
327C:  MOVLW  02
327E:  MOVWF  x0F
3280:  MOVLB  0
3282:  CALL   16E2
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
3286:  BSF    F92.0
3288:  BTFSS  F80.0
328A:  BRA    3362
....................       { 
....................          if(Flanco == 0) 
328C:  MOVLB  4
328E:  BTFSC  x95.0
3290:  BRA    3360
....................          { 
....................             Flanco = 1;delay_ms(30); 
3292:  BSF    x95.0
3294:  MOVLW  1E
3296:  MOVLB  5
3298:  MOVWF  x0B
329A:  MOVLB  0
329C:  CALL   104A
....................             for(i=1;i<=4;i++) 
32A0:  MOVLW  01
32A2:  MOVLB  4
32A4:  MOVWF  xA4
32A6:  MOVF   xA4,W
32A8:  SUBLW  04
32AA:  BNC   3360
....................             { 
....................                if(unidad==i) 
32AC:  MOVF   xA4,W
32AE:  SUBWF  xA3,W
32B0:  BNZ   3328
....................                { 
....................                   Contrasena[i-1]++; 
32B2:  MOVLW  01
32B4:  SUBWF  xA4,W
32B6:  CLRF   03
32B8:  ADDLW  D7
32BA:  MOVWF  FE9
32BC:  MOVLW  04
32BE:  ADDWFC 03,W
32C0:  MOVWF  FEA
32C2:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
32C4:  MOVLW  01
32C6:  SUBWF  xA4,W
32C8:  CLRF   03
32CA:  ADDLW  D7
32CC:  MOVWF  FE9
32CE:  MOVLW  04
32D0:  ADDWFC 03,W
32D2:  MOVWF  FEA
32D4:  BTFSC  FEF.7
32D6:  BRA    32F0
32D8:  MOVF   FEF,W
32DA:  SUBLW  09
32DC:  BC    32F0
....................                   { 
....................                      Contrasena[i-1]=0; 
32DE:  MOVLW  01
32E0:  SUBWF  xA4,W
32E2:  CLRF   03
32E4:  ADDLW  D7
32E6:  MOVWF  FE9
32E8:  MOVLW  04
32EA:  ADDWFC 03,W
32EC:  MOVWF  FEA
32EE:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
32F0:  MOVLW  01
32F2:  SUBWF  xA4,W
32F4:  CLRF   03
32F6:  ADDLW  D7
32F8:  MOVWF  FE9
32FA:  MOVLW  04
32FC:  ADDWFC 03,W
32FE:  MOVWF  FEA
3300:  MOVFF  FEF,50A
3304:  MOVF   xA4,W
3306:  MULLW  14
3308:  MOVFF  FF3,50B
330C:  MOVLB  5
330E:  MOVFF  50A,50C
3312:  MOVFF  50B,50D
3316:  MOVLW  1E
3318:  MOVWF  x0E
331A:  MOVLW  01
331C:  MOVWF  x0F
331E:  MOVLB  0
3320:  CALL   1908
....................                } 
....................                else 
3324:  BRA    335A
3326:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
3328:  MOVLW  01
332A:  SUBWF  xA4,W
332C:  CLRF   03
332E:  ADDLW  D7
3330:  MOVWF  FE9
3332:  MOVLW  04
3334:  ADDWFC 03,W
3336:  MOVWF  FEA
3338:  MOVFF  FEF,50A
333C:  MOVF   xA4,W
333E:  MULLW  14
3340:  MOVFF  FF3,50B
3344:  MOVLB  5
3346:  MOVFF  50A,50C
334A:  MOVFF  50B,50D
334E:  MOVLW  1E
3350:  MOVWF  x0E
3352:  CLRF   x0F
3354:  MOVLB  0
3356:  CALL   1908
....................                } 
....................             } 
335A:  MOVLB  4
335C:  INCF   xA4,F
335E:  BRA    32A6
....................          } 
....................       } 
....................          else 
3360:  BRA    3366
....................             {Flanco = 0;} 
3362:  MOVLB  4
3364:  BCF    x95.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3366:  BSF    F92.1
3368:  BTFSS  F80.1
336A:  BRA    343E
....................       { 
....................          if(Flanco2 == 0) 
336C:  BTFSC  x95.2
336E:  BRA    343C
....................             {Flanco2 = 1;delay_ms(30); 
3370:  BSF    x95.2
3372:  MOVLW  1E
3374:  MOVLB  5
3376:  MOVWF  x0B
3378:  MOVLB  0
337A:  CALL   104A
....................                for(i=1;i<=4;i++) 
337E:  MOVLW  01
3380:  MOVLB  4
3382:  MOVWF  xA4
3384:  MOVF   xA4,W
3386:  SUBLW  04
3388:  BNC   343C
....................                { 
....................                   if(unidad==i) 
338A:  MOVF   xA4,W
338C:  SUBWF  xA3,W
338E:  BNZ   3404
....................                   {Contrasena[i-1]--;  
3390:  MOVLW  01
3392:  SUBWF  xA4,W
3394:  CLRF   03
3396:  ADDLW  D7
3398:  MOVWF  FE9
339A:  MOVLW  04
339C:  ADDWFC 03,W
339E:  MOVWF  FEA
33A0:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
33A2:  MOVLW  01
33A4:  SUBWF  xA4,W
33A6:  CLRF   03
33A8:  ADDLW  D7
33AA:  MOVWF  FE9
33AC:  MOVLW  04
33AE:  ADDWFC 03,W
33B0:  MOVWF  FEA
33B2:  BTFSC  FEF.7
33B4:  BRA    33B8
33B6:  BRA    33CC
....................                         {Contrasena[i-1]=9;} 
33B8:  MOVLW  01
33BA:  SUBWF  xA4,W
33BC:  CLRF   03
33BE:  ADDLW  D7
33C0:  MOVWF  FE9
33C2:  MOVLW  04
33C4:  ADDWFC 03,W
33C6:  MOVWF  FEA
33C8:  MOVLW  09
33CA:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
33CC:  MOVLW  01
33CE:  SUBWF  xA4,W
33D0:  CLRF   03
33D2:  ADDLW  D7
33D4:  MOVWF  FE9
33D6:  MOVLW  04
33D8:  ADDWFC 03,W
33DA:  MOVWF  FEA
33DC:  MOVFF  FEF,50A
33E0:  MOVF   xA4,W
33E2:  MULLW  14
33E4:  MOVFF  FF3,50B
33E8:  MOVLB  5
33EA:  MOVFF  50A,50C
33EE:  MOVFF  50B,50D
33F2:  MOVLW  1E
33F4:  MOVWF  x0E
33F6:  MOVLW  01
33F8:  MOVWF  x0F
33FA:  MOVLB  0
33FC:  CALL   1908
....................                   else 
3400:  BRA    3436
3402:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3404:  MOVLW  01
3406:  SUBWF  xA4,W
3408:  CLRF   03
340A:  ADDLW  D7
340C:  MOVWF  FE9
340E:  MOVLW  04
3410:  ADDWFC 03,W
3412:  MOVWF  FEA
3414:  MOVFF  FEF,50A
3418:  MOVF   xA4,W
341A:  MULLW  14
341C:  MOVFF  FF3,50B
3420:  MOVLB  5
3422:  MOVFF  50A,50C
3426:  MOVFF  50B,50D
342A:  MOVLW  1E
342C:  MOVWF  x0E
342E:  CLRF   x0F
3430:  MOVLB  0
3432:  CALL   1908
....................                }       
3436:  MOVLB  4
3438:  INCF   xA4,F
343A:  BRA    3384
....................             }      
....................       } 
....................          else 
343C:  BRA    3440
....................             {Flanco2 = 0;}   
343E:  BCF    x95.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3440:  BSF    F92.2
3442:  BTFSS  F80.2
3444:  BRA    34DE
....................       { 
....................          if(Flanco1 == 0) 
3446:  BTFSC  x95.1
3448:  BRA    34DC
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
344A:  BSF    x95.1
344C:  MOVLW  1E
344E:  MOVLB  5
3450:  MOVWF  x0B
3452:  MOVLB  0
3454:  CALL   104A
3458:  MOVLB  4
345A:  INCF   xA3,F
....................                for(i=1;i<=4;i++) 
345C:  MOVLW  01
345E:  MOVWF  xA4
3460:  MOVF   xA4,W
3462:  SUBLW  04
3464:  BNC   34DC
....................                { 
....................                   if(unidad==i) 
3466:  MOVF   xA4,W
3468:  SUBWF  xA3,W
346A:  BNZ   34A4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
346C:  MOVLW  01
346E:  SUBWF  xA4,W
3470:  CLRF   03
3472:  ADDLW  D7
3474:  MOVWF  FE9
3476:  MOVLW  04
3478:  ADDWFC 03,W
347A:  MOVWF  FEA
347C:  MOVFF  FEF,50A
3480:  MOVF   xA4,W
3482:  MULLW  14
3484:  MOVFF  FF3,50B
3488:  MOVLB  5
348A:  MOVFF  50A,50C
348E:  MOVFF  50B,50D
3492:  MOVLW  1E
3494:  MOVWF  x0E
3496:  MOVLW  01
3498:  MOVWF  x0F
349A:  MOVLB  0
349C:  CALL   1908
....................                   else 
34A0:  BRA    34D6
34A2:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
34A4:  MOVLW  01
34A6:  SUBWF  xA4,W
34A8:  CLRF   03
34AA:  ADDLW  D7
34AC:  MOVWF  FE9
34AE:  MOVLW  04
34B0:  ADDWFC 03,W
34B2:  MOVWF  FEA
34B4:  MOVFF  FEF,50A
34B8:  MOVF   xA4,W
34BA:  MULLW  14
34BC:  MOVFF  FF3,50B
34C0:  MOVLB  5
34C2:  MOVFF  50A,50C
34C6:  MOVFF  50B,50D
34CA:  MOVLW  1E
34CC:  MOVWF  x0E
34CE:  CLRF   x0F
34D0:  MOVLB  0
34D2:  CALL   1908
....................                } 
34D6:  MOVLB  4
34D8:  INCF   xA4,F
34DA:  BRA    3460
....................             } 
....................       } 
....................          else 
34DC:  BRA    34E0
....................             {Flanco1 = 0;}   
34DE:  BCF    x95.1
....................      
....................       if(unidad>4) 
34E0:  MOVF   xA3,W
34E2:  SUBLW  04
34E4:  BTFSC  FD8.0
34E6:  BRA    37D6
....................       {glcd_fillScreen(OFF);unidad=4; 
34E8:  MOVLB  5
34EA:  CLRF   x0B
34EC:  MOVLB  0
34EE:  CALL   10B4
34F2:  MOVLW  04
34F4:  MOVLB  4
34F6:  MOVWF  xA3
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
34F8:  MOVF   xD7,W
34FA:  SUBLW  03
34FC:  BNZ   35E4
34FE:  MOVF   xD8,W
3500:  SUBLW  08
3502:  BNZ   35E4
3504:  MOVF   xD9,W
3506:  SUBLW  09
3508:  BNZ   35E4
350A:  MOVF   xDA,W
350C:  SUBLW  02
350E:  BNZ   35E4
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3510:  MOVLW  0A
3512:  MOVWF  FA9
3514:  CLRF   FA8
3516:  BCF    FA6.6
3518:  BCF    FA6.7
351A:  BSF    FA6.2
351C:  MOVF   FF2,W
351E:  MOVWF  00
3520:  BCF    FF2.7
3522:  MOVLB  F
3524:  MOVLW  55
3526:  MOVWF  FA7
3528:  MOVLW  AA
352A:  MOVWF  FA7
352C:  BSF    FA6.1
352E:  BTFSC  FA6.1
3530:  BRA    352E
3532:  BCF    FA6.2
3534:  MOVF   00,W
3536:  IORWF  FF2,F
3538:  MOVLW  14
353A:  MOVLB  5
353C:  MOVWF  x0B
353E:  MOVLB  0
3540:  CALL   104A
3544:  MOVLW  0B
3546:  MOVWF  FA9
3548:  CLRF   FA8
354A:  BCF    FA6.6
354C:  BCF    FA6.7
354E:  BSF    FA6.2
3550:  MOVF   FF2,W
3552:  MOVWF  00
3554:  BCF    FF2.7
3556:  MOVLB  F
3558:  MOVLW  55
355A:  MOVWF  FA7
355C:  MOVLW  AA
355E:  MOVWF  FA7
3560:  BSF    FA6.1
3562:  BTFSC  FA6.1
3564:  BRA    3562
3566:  BCF    FA6.2
3568:  MOVF   00,W
356A:  IORWF  FF2,F
356C:  MOVLW  14
356E:  MOVLB  5
3570:  MOVWF  x0B
3572:  MOVLB  0
3574:  CALL   104A
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
3578:  MOVLW  0C
357A:  MOVWF  FA9
357C:  CLRF   FA8
357E:  BCF    FA6.6
3580:  BCF    FA6.7
3582:  BSF    FA6.2
3584:  MOVF   FF2,W
3586:  MOVWF  00
3588:  BCF    FF2.7
358A:  MOVLB  F
358C:  MOVLW  55
358E:  MOVWF  FA7
3590:  MOVLW  AA
3592:  MOVWF  FA7
3594:  BSF    FA6.1
3596:  BTFSC  FA6.1
3598:  BRA    3596
359A:  BCF    FA6.2
359C:  MOVF   00,W
359E:  IORWF  FF2,F
35A0:  MOVLW  14
35A2:  MOVLB  5
35A4:  MOVWF  x0B
35A6:  MOVLB  0
35A8:  CALL   104A
35AC:  MOVLW  0D
35AE:  MOVWF  FA9
35B0:  CLRF   FA8
35B2:  BCF    FA6.6
35B4:  BCF    FA6.7
35B6:  BSF    FA6.2
35B8:  MOVF   FF2,W
35BA:  MOVWF  00
35BC:  BCF    FF2.7
35BE:  MOVLB  F
35C0:  MOVLW  55
35C2:  MOVWF  FA7
35C4:  MOVLW  AA
35C6:  MOVWF  FA7
35C8:  BSF    FA6.1
35CA:  BTFSC  FA6.1
35CC:  BRA    35CA
35CE:  BCF    FA6.2
35D0:  MOVF   00,W
35D2:  IORWF  FF2,F
35D4:  MOVLW  14
35D6:  MOVLB  5
35D8:  MOVWF  x0B
35DA:  MOVLB  0
35DC:  CALL   104A
....................              reset_cpu();}         
35E0:  RESET
35E2:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
35E4:  MOVF   xDB,W
35E6:  SUBWF  xD7,W
35E8:  BNZ   36BA
35EA:  MOVF   xDC,W
35EC:  SUBWF  xD8,W
35EE:  BNZ   36BA
35F0:  MOVF   xDD,W
35F2:  SUBWF  xD9,W
35F4:  BNZ   36BA
35F6:  MOVF   xDE,W
35F8:  SUBWF  xDA,W
35FA:  BNZ   36BA
....................          { 
....................             glcd_fillScreen(OFF); 
35FC:  MOVLB  5
35FE:  CLRF   x0B
3600:  MOVLB  0
3602:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
3606:  MOVLW  04
3608:  MOVWF  FEA
360A:  MOVLW  EA
360C:  MOVWF  FE9
360E:  MOVFF  FF2,50A
3612:  BCF    FF2.7
3614:  MOVLW  00
3616:  CALL   0756
361A:  TBLRD*-
361C:  TBLRD*+
361E:  MOVF   FF5,W
3620:  MOVWF  FEE
3622:  IORLW  00
3624:  BNZ   361C
3626:  MOVLB  5
3628:  BTFSC  x0A.7
362A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
362C:  MOVLW  04
362E:  MOVWF  x0B
3630:  MOVLW  EA
3632:  MOVWF  x0A
3634:  MOVLW  1E
3636:  MOVWF  x0C
3638:  CLRF   x0D
363A:  CLRF   x0E
363C:  MOVLW  02
363E:  MOVWF  x0F
3640:  MOVLB  0
3642:  CALL   16E2
....................             strcpy(Menus.Letra,"Correcta"); 
3646:  MOVLW  04
3648:  MOVWF  FEA
364A:  MOVLW  EA
364C:  MOVWF  FE9
364E:  MOVFF  FF2,50A
3652:  BCF    FF2.7
3654:  MOVLW  00
3656:  CALL   0776
365A:  TBLRD*-
365C:  TBLRD*+
365E:  MOVF   FF5,W
3660:  MOVWF  FEE
3662:  IORLW  00
3664:  BNZ   365C
3666:  MOVLB  5
3668:  BTFSC  x0A.7
366A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
366C:  MOVLW  04
366E:  MOVWF  x0B
3670:  MOVLW  EA
3672:  MOVWF  x0A
3674:  MOVLW  0F
3676:  MOVWF  x0C
3678:  MOVLW  1E
367A:  MOVWF  x0D
367C:  CLRF   x0E
367E:  MOVLW  02
3680:  MOVWF  x0F
3682:  MOVLB  0
3684:  CALL   16E2
....................             Menu=1;glcd_update();delay_ms(1000); 
3688:  MOVLW  01
368A:  MOVLB  4
368C:  MOVWF  xA2
368E:  MOVLB  0
3690:  CALL   110E
3694:  MOVLW  04
3696:  MOVLB  5
3698:  MOVWF  x0A
369A:  MOVLW  FA
369C:  MOVWF  x0B
369E:  MOVLB  0
36A0:  CALL   104A
36A4:  MOVLB  5
36A6:  DECFSZ x0A,F
36A8:  BRA    369A
....................             glcd_fillScreen(OFF);unidad=1; 
36AA:  CLRF   x0B
36AC:  MOVLB  0
36AE:  CALL   10B4
36B2:  MOVLW  01
36B4:  MOVLB  4
36B6:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
36B8:  BRA    37D6
....................          { 
....................             glcd_fillScreen(OFF); 
36BA:  MOVLB  5
36BC:  CLRF   x0B
36BE:  MOVLB  0
36C0:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
36C4:  MOVLW  04
36C6:  MOVWF  FEA
36C8:  MOVLW  EA
36CA:  MOVWF  FE9
36CC:  MOVFF  FF2,50A
36D0:  BCF    FF2.7
36D2:  MOVLW  00
36D4:  CALL   0756
36D8:  TBLRD*-
36DA:  TBLRD*+
36DC:  MOVF   FF5,W
36DE:  MOVWF  FEE
36E0:  IORLW  00
36E2:  BNZ   36DA
36E4:  MOVLB  5
36E6:  BTFSC  x0A.7
36E8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
36EA:  MOVLW  04
36EC:  MOVWF  x0B
36EE:  MOVLW  EA
36F0:  MOVWF  x0A
36F2:  MOVLW  1E
36F4:  MOVWF  x0C
36F6:  CLRF   x0D
36F8:  CLRF   x0E
36FA:  MOVLW  02
36FC:  MOVWF  x0F
36FE:  MOVLB  0
3700:  CALL   16E2
....................             strcpy(Menus.Letra,"Incorrecta"); 
3704:  MOVLW  04
3706:  MOVWF  FEA
3708:  MOVLW  EA
370A:  MOVWF  FE9
370C:  MOVFF  FF2,50A
3710:  BCF    FF2.7
3712:  MOVLW  00
3714:  CALL   079A
3718:  TBLRD*-
371A:  TBLRD*+
371C:  MOVF   FF5,W
371E:  MOVWF  FEE
3720:  IORLW  00
3722:  BNZ   371A
3724:  MOVLB  5
3726:  BTFSC  x0A.7
3728:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
372A:  MOVLW  04
372C:  MOVWF  x0B
372E:  MOVLW  EA
3730:  MOVWF  x0A
3732:  CLRF   x0C
3734:  MOVLW  1E
3736:  MOVWF  x0D
3738:  CLRF   x0E
373A:  MOVLW  02
373C:  MOVWF  x0F
373E:  MOVLB  0
3740:  CALL   16E2
....................             Menu=0;glcd_update();delay_ms(1000); 
3744:  MOVLB  4
3746:  CLRF   xA2
3748:  MOVLB  0
374A:  CALL   110E
374E:  MOVLW  04
3750:  MOVLB  5
3752:  MOVWF  x0A
3754:  MOVLW  FA
3756:  MOVWF  x0B
3758:  MOVLB  0
375A:  CALL   104A
375E:  MOVLB  5
3760:  DECFSZ x0A,F
3762:  BRA    3754
....................             glcd_fillScreen(OFF);unidad=1; 
3764:  CLRF   x0B
3766:  MOVLB  0
3768:  CALL   10B4
376C:  MOVLW  01
376E:  MOVLB  4
3770:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3772:  CLRF   xD7
3774:  CLRF   xD8
3776:  CLRF   xD9
3778:  CLRF   xDA
....................             displayContrasena(Contrasena[0],20,30,1); 
377A:  MOVFF  4D7,50C
377E:  MOVLW  14
3780:  MOVLB  5
3782:  MOVWF  x0D
3784:  MOVLW  1E
3786:  MOVWF  x0E
3788:  MOVLW  01
378A:  MOVWF  x0F
378C:  MOVLB  0
378E:  CALL   1908
....................             displayContrasena(Contrasena[1],40,30,0); 
3792:  MOVFF  4D8,50C
3796:  MOVLW  28
3798:  MOVLB  5
379A:  MOVWF  x0D
379C:  MOVLW  1E
379E:  MOVWF  x0E
37A0:  CLRF   x0F
37A2:  MOVLB  0
37A4:  CALL   1908
....................             displayContrasena(Contrasena[2],60,30,0); 
37A8:  MOVFF  4D9,50C
37AC:  MOVLW  3C
37AE:  MOVLB  5
37B0:  MOVWF  x0D
37B2:  MOVLW  1E
37B4:  MOVWF  x0E
37B6:  CLRF   x0F
37B8:  MOVLB  0
37BA:  CALL   1908
....................             displayContrasena(Contrasena[3],80,30,0); 
37BE:  MOVFF  4DA,50C
37C2:  MOVLW  50
37C4:  MOVLB  5
37C6:  MOVWF  x0D
37C8:  MOVLW  1E
37CA:  MOVWF  x0E
37CC:  CLRF   x0F
37CE:  MOVLB  0
37D0:  CALL   1908
37D4:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
37D6:  DECFSZ xA2,W
37D8:  BRA    3DE8
....................        
....................       if(visual==1) 
37DA:  BTFSS  x95.4
37DC:  BRA    3D6E
....................       { 
....................          if(Opcion>7) 
37DE:  MOVF   xAC,W
37E0:  SUBLW  07
37E2:  BC    37E8
....................          {Opcion=1;} 
37E4:  MOVLW  01
37E6:  MOVWF  xAC
....................          if(Opcion<1) 
37E8:  MOVF   xAC,F
37EA:  BNZ   37F0
....................          {Opcion=7;} 
37EC:  MOVLW  07
37EE:  MOVWF  xAC
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
37F0:  MOVLW  04
37F2:  MOVWF  FEA
37F4:  MOVLW  EA
37F6:  MOVWF  FE9
37F8:  MOVFF  FF2,50A
37FC:  BCF    FF2.7
37FE:  MOVLW  00
3800:  MOVLB  0
3802:  CALL   07C0
3806:  TBLRD*-
3808:  TBLRD*+
380A:  MOVF   FF5,W
380C:  MOVWF  FEE
380E:  IORLW  00
3810:  BNZ   3808
3812:  MOVLB  5
3814:  BTFSC  x0A.7
3816:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
3818:  MOVLW  04
381A:  MOVWF  x0B
381C:  MOVLW  EA
381E:  MOVWF  x0A
3820:  MOVLW  1E
3822:  MOVWF  x0C
3824:  CLRF   x0D
3826:  MOVLW  01
3828:  MOVWF  x0E
382A:  MOVWF  x0F
382C:  MOVLB  0
382E:  CALL   16E2
....................        
....................          if(Opcion<=6) 
3832:  MOVLB  4
3834:  MOVF   xAC,W
3836:  SUBLW  06
3838:  BTFSS  FD8.0
383A:  BRA    3B9E
....................          { 
....................             if(Opcion==1) 
383C:  DECFSZ xAC,W
383E:  BRA    3886
....................                {strcpy(Menus.Letra,"Caucho"); 
3840:  MOVLW  04
3842:  MOVWF  FEA
3844:  MOVLW  EA
3846:  MOVWF  FE9
3848:  MOVFF  FF2,50A
384C:  BCF    FF2.7
384E:  MOVLW  00
3850:  MOVLB  0
3852:  CALL   07EA
3856:  TBLRD*-
3858:  TBLRD*+
385A:  MOVF   FF5,W
385C:  MOVWF  FEE
385E:  IORLW  00
3860:  BNZ   3858
3862:  MOVLB  5
3864:  BTFSC  x0A.7
3866:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
3868:  MOVLW  04
386A:  MOVWF  x0B
386C:  MOVLW  EA
386E:  MOVWF  x0A
3870:  CLRF   x0C
3872:  MOVLW  0A
3874:  MOVWF  x0D
3876:  MOVLW  01
3878:  MOVWF  x0E
387A:  MOVWF  x0F
387C:  MOVLB  0
387E:  CALL   16E2
....................             else 
3882:  BRA    38C8
3884:  MOVLB  4
....................                {strcpy(Menus.Letra,"Caucho"); 
3886:  MOVLW  04
3888:  MOVWF  FEA
388A:  MOVLW  EA
388C:  MOVWF  FE9
388E:  MOVFF  FF2,50A
3892:  BCF    FF2.7
3894:  MOVLW  00
3896:  MOVLB  0
3898:  CALL   07EA
389C:  TBLRD*-
389E:  TBLRD*+
38A0:  MOVF   FF5,W
38A2:  MOVWF  FEE
38A4:  IORLW  00
38A6:  BNZ   389E
38A8:  MOVLB  5
38AA:  BTFSC  x0A.7
38AC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
38AE:  MOVLW  04
38B0:  MOVWF  x0B
38B2:  MOVLW  EA
38B4:  MOVWF  x0A
38B6:  CLRF   x0C
38B8:  MOVLW  0A
38BA:  MOVWF  x0D
38BC:  CLRF   x0E
38BE:  MOVLW  01
38C0:  MOVWF  x0F
38C2:  MOVLB  0
38C4:  CALL   16E2
....................              
....................             if(Opcion==2)    
38C8:  MOVLB  4
38CA:  MOVF   xAC,W
38CC:  SUBLW  02
38CE:  BNZ   3916
....................                {strcpy(Menus.Letra,"Liquidos"); 
38D0:  MOVLW  04
38D2:  MOVWF  FEA
38D4:  MOVLW  EA
38D6:  MOVWF  FE9
38D8:  MOVFF  FF2,50A
38DC:  BCF    FF2.7
38DE:  MOVLW  00
38E0:  MOVLB  0
38E2:  CALL   080C
38E6:  TBLRD*-
38E8:  TBLRD*+
38EA:  MOVF   FF5,W
38EC:  MOVWF  FEE
38EE:  IORLW  00
38F0:  BNZ   38E8
38F2:  MOVLB  5
38F4:  BTFSC  x0A.7
38F6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,19,1,1);} 
38F8:  MOVLW  04
38FA:  MOVWF  x0B
38FC:  MOVLW  EA
38FE:  MOVWF  x0A
3900:  CLRF   x0C
3902:  MOVLW  13
3904:  MOVWF  x0D
3906:  MOVLW  01
3908:  MOVWF  x0E
390A:  MOVWF  x0F
390C:  MOVLB  0
390E:  CALL   16E2
....................             else 
3912:  BRA    3958
3914:  MOVLB  4
....................                {strcpy(Menus.Letra,"Liquidos"); 
3916:  MOVLW  04
3918:  MOVWF  FEA
391A:  MOVLW  EA
391C:  MOVWF  FE9
391E:  MOVFF  FF2,50A
3922:  BCF    FF2.7
3924:  MOVLW  00
3926:  MOVLB  0
3928:  CALL   080C
392C:  TBLRD*-
392E:  TBLRD*+
3930:  MOVF   FF5,W
3932:  MOVWF  FEE
3934:  IORLW  00
3936:  BNZ   392E
3938:  MOVLB  5
393A:  BTFSC  x0A.7
393C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,19,0,1);}    
393E:  MOVLW  04
3940:  MOVWF  x0B
3942:  MOVLW  EA
3944:  MOVWF  x0A
3946:  CLRF   x0C
3948:  MOVLW  13
394A:  MOVWF  x0D
394C:  CLRF   x0E
394E:  MOVLW  01
3950:  MOVWF  x0F
3952:  MOVLB  0
3954:  CALL   16E2
....................                 
....................              if(Opcion==3)    
3958:  MOVLB  4
395A:  MOVF   xAC,W
395C:  SUBLW  03
395E:  BNZ   39A6
....................                {strcpy(Menus.Letra,"Instrumental Suave"); 
3960:  MOVLW  04
3962:  MOVWF  FEA
3964:  MOVLW  EA
3966:  MOVWF  FE9
3968:  MOVFF  FF2,50A
396C:  BCF    FF2.7
396E:  MOVLW  00
3970:  MOVLB  0
3972:  CALL   0830
3976:  TBLRD*-
3978:  TBLRD*+
397A:  MOVF   FF5,W
397C:  MOVWF  FEE
397E:  IORLW  00
3980:  BNZ   3978
3982:  MOVLB  5
3984:  BTFSC  x0A.7
3986:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,28,1,1);} 
3988:  MOVLW  04
398A:  MOVWF  x0B
398C:  MOVLW  EA
398E:  MOVWF  x0A
3990:  CLRF   x0C
3992:  MOVLW  1C
3994:  MOVWF  x0D
3996:  MOVLW  01
3998:  MOVWF  x0E
399A:  MOVWF  x0F
399C:  MOVLB  0
399E:  CALL   16E2
....................             else 
39A2:  BRA    39E8
39A4:  MOVLB  4
....................                {strcpy(Menus.Letra,"Instrumental Suave"); 
39A6:  MOVLW  04
39A8:  MOVWF  FEA
39AA:  MOVLW  EA
39AC:  MOVWF  FE9
39AE:  MOVFF  FF2,50A
39B2:  BCF    FF2.7
39B4:  MOVLW  00
39B6:  MOVLB  0
39B8:  CALL   0830
39BC:  TBLRD*-
39BE:  TBLRD*+
39C0:  MOVF   FF5,W
39C2:  MOVWF  FEE
39C4:  IORLW  00
39C6:  BNZ   39BE
39C8:  MOVLB  5
39CA:  BTFSC  x0A.7
39CC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,28,0,1);} 
39CE:  MOVLW  04
39D0:  MOVWF  x0B
39D2:  MOVLW  EA
39D4:  MOVWF  x0A
39D6:  CLRF   x0C
39D8:  MOVLW  1C
39DA:  MOVWF  x0D
39DC:  CLRF   x0E
39DE:  MOVLW  01
39E0:  MOVWF  x0F
39E2:  MOVLB  0
39E4:  CALL   16E2
....................                 
....................             if(Opcion==4)    
39E8:  MOVLB  4
39EA:  MOVF   xAC,W
39EC:  SUBLW  04
39EE:  BNZ   3A36
....................                {strcpy(Menus.Letra,"Textil e Instrumental"); 
39F0:  MOVLW  04
39F2:  MOVWF  FEA
39F4:  MOVLW  EA
39F6:  MOVWF  FE9
39F8:  MOVFF  FF2,50A
39FC:  BCF    FF2.7
39FE:  MOVLW  00
3A00:  MOVLB  0
3A02:  CALL   085E
3A06:  TBLRD*-
3A08:  TBLRD*+
3A0A:  MOVF   FF5,W
3A0C:  MOVWF  FEE
3A0E:  IORLW  00
3A10:  BNZ   3A08
3A12:  MOVLB  5
3A14:  BTFSC  x0A.7
3A16:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,37,1,1);} 
3A18:  MOVLW  04
3A1A:  MOVWF  x0B
3A1C:  MOVLW  EA
3A1E:  MOVWF  x0A
3A20:  CLRF   x0C
3A22:  MOVLW  25
3A24:  MOVWF  x0D
3A26:  MOVLW  01
3A28:  MOVWF  x0E
3A2A:  MOVWF  x0F
3A2C:  MOVLB  0
3A2E:  CALL   16E2
....................             else 
3A32:  BRA    3A78
3A34:  MOVLB  4
....................                {strcpy(Menus.Letra,"Textil e Instrumental"); 
3A36:  MOVLW  04
3A38:  MOVWF  FEA
3A3A:  MOVLW  EA
3A3C:  MOVWF  FE9
3A3E:  MOVFF  FF2,50A
3A42:  BCF    FF2.7
3A44:  MOVLW  00
3A46:  MOVLB  0
3A48:  CALL   085E
3A4C:  TBLRD*-
3A4E:  TBLRD*+
3A50:  MOVF   FF5,W
3A52:  MOVWF  FEE
3A54:  IORLW  00
3A56:  BNZ   3A4E
3A58:  MOVLB  5
3A5A:  BTFSC  x0A.7
3A5C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,37,0,1);}    
3A5E:  MOVLW  04
3A60:  MOVWF  x0B
3A62:  MOVLW  EA
3A64:  MOVWF  x0A
3A66:  CLRF   x0C
3A68:  MOVLW  25
3A6A:  MOVWF  x0D
3A6C:  CLRF   x0E
3A6E:  MOVLW  01
3A70:  MOVWF  x0F
3A72:  MOVLB  0
3A74:  CALL   16E2
....................                 
....................             if(Opcion==5)    
3A78:  MOVLB  4
3A7A:  MOVF   xAC,W
3A7C:  SUBLW  05
3A7E:  BNZ   3AC6
....................                {strcpy(Menus.Letra,"Personalizado"); 
3A80:  MOVLW  04
3A82:  MOVWF  FEA
3A84:  MOVLW  EA
3A86:  MOVWF  FE9
3A88:  MOVFF  FF2,50A
3A8C:  BCF    FF2.7
3A8E:  MOVLW  00
3A90:  MOVLB  0
3A92:  CALL   088E
3A96:  TBLRD*-
3A98:  TBLRD*+
3A9A:  MOVF   FF5,W
3A9C:  MOVWF  FEE
3A9E:  IORLW  00
3AA0:  BNZ   3A98
3AA2:  MOVLB  5
3AA4:  BTFSC  x0A.7
3AA6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,46,1,1);} 
3AA8:  MOVLW  04
3AAA:  MOVWF  x0B
3AAC:  MOVLW  EA
3AAE:  MOVWF  x0A
3AB0:  CLRF   x0C
3AB2:  MOVLW  2E
3AB4:  MOVWF  x0D
3AB6:  MOVLW  01
3AB8:  MOVWF  x0E
3ABA:  MOVWF  x0F
3ABC:  MOVLB  0
3ABE:  CALL   16E2
....................             else 
3AC2:  BRA    3B08
3AC4:  MOVLB  4
....................                {strcpy(Menus.Letra,"Personalizado"); 
3AC6:  MOVLW  04
3AC8:  MOVWF  FEA
3ACA:  MOVLW  EA
3ACC:  MOVWF  FE9
3ACE:  MOVFF  FF2,50A
3AD2:  BCF    FF2.7
3AD4:  MOVLW  00
3AD6:  MOVLB  0
3AD8:  CALL   088E
3ADC:  TBLRD*-
3ADE:  TBLRD*+
3AE0:  MOVF   FF5,W
3AE2:  MOVWF  FEE
3AE4:  IORLW  00
3AE6:  BNZ   3ADE
3AE8:  MOVLB  5
3AEA:  BTFSC  x0A.7
3AEC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,46,0,1);}   
3AEE:  MOVLW  04
3AF0:  MOVWF  x0B
3AF2:  MOVLW  EA
3AF4:  MOVWF  x0A
3AF6:  CLRF   x0C
3AF8:  MOVLW  2E
3AFA:  MOVWF  x0D
3AFC:  CLRF   x0E
3AFE:  MOVLW  01
3B00:  MOVWF  x0F
3B02:  MOVLB  0
3B04:  CALL   16E2
....................                 
....................             if(Opcion==6)    
3B08:  MOVLB  4
3B0A:  MOVF   xAC,W
3B0C:  SUBLW  06
3B0E:  BNZ   3B56
....................                {strcpy(Menus.Letra,"Cambio Clave"); 
3B10:  MOVLW  04
3B12:  MOVWF  FEA
3B14:  MOVLW  EA
3B16:  MOVWF  FE9
3B18:  MOVFF  FF2,50A
3B1C:  BCF    FF2.7
3B1E:  MOVLW  00
3B20:  MOVLB  0
3B22:  CALL   08B6
3B26:  TBLRD*-
3B28:  TBLRD*+
3B2A:  MOVF   FF5,W
3B2C:  MOVWF  FEE
3B2E:  IORLW  00
3B30:  BNZ   3B28
3B32:  MOVLB  5
3B34:  BTFSC  x0A.7
3B36:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,1,1);} 
3B38:  MOVLW  04
3B3A:  MOVWF  x0B
3B3C:  MOVLW  EA
3B3E:  MOVWF  x0A
3B40:  CLRF   x0C
3B42:  MOVLW  37
3B44:  MOVWF  x0D
3B46:  MOVLW  01
3B48:  MOVWF  x0E
3B4A:  MOVWF  x0F
3B4C:  MOVLB  0
3B4E:  CALL   16E2
....................             else 
3B52:  BRA    3B98
3B54:  MOVLB  4
....................                {strcpy(Menus.Letra,"Cambio Clave"); 
3B56:  MOVLW  04
3B58:  MOVWF  FEA
3B5A:  MOVLW  EA
3B5C:  MOVWF  FE9
3B5E:  MOVFF  FF2,50A
3B62:  BCF    FF2.7
3B64:  MOVLW  00
3B66:  MOVLB  0
3B68:  CALL   08B6
3B6C:  TBLRD*-
3B6E:  TBLRD*+
3B70:  MOVF   FF5,W
3B72:  MOVWF  FEE
3B74:  IORLW  00
3B76:  BNZ   3B6E
3B78:  MOVLB  5
3B7A:  BTFSC  x0A.7
3B7C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,0,1);}      
3B7E:  MOVLW  04
3B80:  MOVWF  x0B
3B82:  MOVLW  EA
3B84:  MOVWF  x0A
3B86:  CLRF   x0C
3B88:  MOVLW  37
3B8A:  MOVWF  x0D
3B8C:  CLRF   x0E
3B8E:  MOVLW  01
3B90:  MOVWF  x0F
3B92:  MOVLB  0
3B94:  CALL   16E2
....................                visual=0; 
3B98:  MOVLB  4
3B9A:  BCF    x95.4
....................          } 
....................          else 
3B9C:  BRA    3D6E
....................          { 
....................             if(Opcion==7) 
3B9E:  MOVF   xAC,W
3BA0:  SUBLW  07
3BA2:  BNZ   3BEA
....................                {strcpy(Menus.Letra,"Presion Atm."); 
3BA4:  MOVLW  04
3BA6:  MOVWF  FEA
3BA8:  MOVLW  EA
3BAA:  MOVWF  FE9
3BAC:  MOVFF  FF2,50A
3BB0:  BCF    FF2.7
3BB2:  MOVLW  00
3BB4:  MOVLB  0
3BB6:  CALL   08DE
3BBA:  TBLRD*-
3BBC:  TBLRD*+
3BBE:  MOVF   FF5,W
3BC0:  MOVWF  FEE
3BC2:  IORLW  00
3BC4:  BNZ   3BBC
3BC6:  MOVLB  5
3BC8:  BTFSC  x0A.7
3BCA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
3BCC:  MOVLW  04
3BCE:  MOVWF  x0B
3BD0:  MOVLW  EA
3BD2:  MOVWF  x0A
3BD4:  CLRF   x0C
3BD6:  MOVLW  0A
3BD8:  MOVWF  x0D
3BDA:  MOVLW  01
3BDC:  MOVWF  x0E
3BDE:  MOVWF  x0F
3BE0:  MOVLB  0
3BE2:  CALL   16E2
....................             else 
3BE6:  BRA    3C2C
3BE8:  MOVLB  4
....................                {strcpy(Menus.Letra,"Presion Atm."); 
3BEA:  MOVLW  04
3BEC:  MOVWF  FEA
3BEE:  MOVLW  EA
3BF0:  MOVWF  FE9
3BF2:  MOVFF  FF2,50A
3BF6:  BCF    FF2.7
3BF8:  MOVLW  00
3BFA:  MOVLB  0
3BFC:  CALL   08DE
3C00:  TBLRD*-
3C02:  TBLRD*+
3C04:  MOVF   FF5,W
3C06:  MOVWF  FEE
3C08:  IORLW  00
3C0A:  BNZ   3C02
3C0C:  MOVLB  5
3C0E:  BTFSC  x0A.7
3C10:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
3C12:  MOVLW  04
3C14:  MOVWF  x0B
3C16:  MOVLW  EA
3C18:  MOVWF  x0A
3C1A:  CLRF   x0C
3C1C:  MOVLW  0A
3C1E:  MOVWF  x0D
3C20:  CLRF   x0E
3C22:  MOVLW  01
3C24:  MOVWF  x0F
3C26:  MOVLB  0
3C28:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3C2C:  MOVLW  04
3C2E:  MOVWF  FEA
3C30:  MOVLW  EA
3C32:  MOVWF  FE9
3C34:  MOVFF  FF2,50A
3C38:  BCF    FF2.7
3C3A:  MOVLW  00
3C3C:  CALL   0906
3C40:  TBLRD*-
3C42:  TBLRD*+
3C44:  MOVF   FF5,W
3C46:  MOVWF  FEE
3C48:  IORLW  00
3C4A:  BNZ   3C42
3C4C:  MOVLB  5
3C4E:  BTFSC  x0A.7
3C50:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,19,0,1); 
3C52:  MOVLW  04
3C54:  MOVWF  x0B
3C56:  MOVLW  EA
3C58:  MOVWF  x0A
3C5A:  CLRF   x0C
3C5C:  MOVLW  13
3C5E:  MOVWF  x0D
3C60:  CLRF   x0E
3C62:  MOVLW  01
3C64:  MOVWF  x0F
3C66:  MOVLB  0
3C68:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3C6C:  MOVLW  04
3C6E:  MOVWF  FEA
3C70:  MOVLW  EA
3C72:  MOVWF  FE9
3C74:  MOVFF  FF2,50A
3C78:  BCF    FF2.7
3C7A:  MOVLW  00
3C7C:  CALL   0906
3C80:  TBLRD*-
3C82:  TBLRD*+
3C84:  MOVF   FF5,W
3C86:  MOVWF  FEE
3C88:  IORLW  00
3C8A:  BNZ   3C82
3C8C:  MOVLB  5
3C8E:  BTFSC  x0A.7
3C90:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,28,0,1); 
3C92:  MOVLW  04
3C94:  MOVWF  x0B
3C96:  MOVLW  EA
3C98:  MOVWF  x0A
3C9A:  CLRF   x0C
3C9C:  MOVLW  1C
3C9E:  MOVWF  x0D
3CA0:  CLRF   x0E
3CA2:  MOVLW  01
3CA4:  MOVWF  x0F
3CA6:  MOVLB  0
3CA8:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3CAC:  MOVLW  04
3CAE:  MOVWF  FEA
3CB0:  MOVLW  EA
3CB2:  MOVWF  FE9
3CB4:  MOVFF  FF2,50A
3CB8:  BCF    FF2.7
3CBA:  MOVLW  00
3CBC:  CALL   0906
3CC0:  TBLRD*-
3CC2:  TBLRD*+
3CC4:  MOVF   FF5,W
3CC6:  MOVWF  FEE
3CC8:  IORLW  00
3CCA:  BNZ   3CC2
3CCC:  MOVLB  5
3CCE:  BTFSC  x0A.7
3CD0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,37,0,1); 
3CD2:  MOVLW  04
3CD4:  MOVWF  x0B
3CD6:  MOVLW  EA
3CD8:  MOVWF  x0A
3CDA:  CLRF   x0C
3CDC:  MOVLW  25
3CDE:  MOVWF  x0D
3CE0:  CLRF   x0E
3CE2:  MOVLW  01
3CE4:  MOVWF  x0F
3CE6:  MOVLB  0
3CE8:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3CEC:  MOVLW  04
3CEE:  MOVWF  FEA
3CF0:  MOVLW  EA
3CF2:  MOVWF  FE9
3CF4:  MOVFF  FF2,50A
3CF8:  BCF    FF2.7
3CFA:  MOVLW  00
3CFC:  CALL   0906
3D00:  TBLRD*-
3D02:  TBLRD*+
3D04:  MOVF   FF5,W
3D06:  MOVWF  FEE
3D08:  IORLW  00
3D0A:  BNZ   3D02
3D0C:  MOVLB  5
3D0E:  BTFSC  x0A.7
3D10:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,46,0,1); 
3D12:  MOVLW  04
3D14:  MOVWF  x0B
3D16:  MOVLW  EA
3D18:  MOVWF  x0A
3D1A:  CLRF   x0C
3D1C:  MOVLW  2E
3D1E:  MOVWF  x0D
3D20:  CLRF   x0E
3D22:  MOVLW  01
3D24:  MOVWF  x0F
3D26:  MOVLB  0
3D28:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3D2C:  MOVLW  04
3D2E:  MOVWF  FEA
3D30:  MOVLW  EA
3D32:  MOVWF  FE9
3D34:  MOVFF  FF2,50A
3D38:  BCF    FF2.7
3D3A:  MOVLW  00
3D3C:  CALL   0906
3D40:  TBLRD*-
3D42:  TBLRD*+
3D44:  MOVF   FF5,W
3D46:  MOVWF  FEE
3D48:  IORLW  00
3D4A:  BNZ   3D42
3D4C:  MOVLB  5
3D4E:  BTFSC  x0A.7
3D50:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,0,1); 
3D52:  MOVLW  04
3D54:  MOVWF  x0B
3D56:  MOVLW  EA
3D58:  MOVWF  x0A
3D5A:  CLRF   x0C
3D5C:  MOVLW  37
3D5E:  MOVWF  x0D
3D60:  CLRF   x0E
3D62:  MOVLW  01
3D64:  MOVWF  x0F
3D66:  MOVLB  0
3D68:  CALL   16E2
3D6C:  MOVLB  4
....................          } 
....................       } 
....................       if(UP)//Si oprime hacia arriba 
3D6E:  BSF    F92.0
3D70:  BTFSS  F80.0
3D72:  BRA    3D8E
....................          {  if(Flanco == 0)  
3D74:  BTFSC  x95.0
3D76:  BRA    3D8C
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3D78:  BSF    x95.0
3D7A:  MOVLW  1E
3D7C:  MOVLB  5
3D7E:  MOVWF  x0B
3D80:  MOVLB  0
3D82:  CALL   104A
3D86:  MOVLB  4
3D88:  DECF   xAC,F
3D8A:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3D8C:  BRA    3D90
....................                {Flanco = 0;} 
3D8E:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
3D90:  BSF    F92.1
3D92:  BTFSS  F80.1
3D94:  BRA    3DB0
....................          {  if(Flanco2 == 0)  
3D96:  BTFSC  x95.2
3D98:  BRA    3DAE
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
3D9A:  BSF    x95.2
3D9C:  MOVLW  1E
3D9E:  MOVLB  5
3DA0:  MOVWF  x0B
3DA2:  MOVLB  0
3DA4:  CALL   104A
3DA8:  MOVLB  4
3DAA:  INCF   xAC,F
3DAC:  BSF    x95.4
....................                }      
....................          } 
....................             else 
3DAE:  BRA    3DB2
....................                {Flanco2 = 0;}   
3DB0:  BCF    x95.2
....................                 
....................        if(RIGHT)//Si oprime SET 
3DB2:  BSF    F92.2
3DB4:  BTFSS  F80.2
3DB6:  BRA    3DE6
....................          {  if(Flanco1 == 0)  
3DB8:  BTFSC  x95.1
3DBA:  BRA    3DE4
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
3DBC:  BSF    x95.1
3DBE:  MOVLW  1E
3DC0:  MOVLB  5
3DC2:  MOVWF  x0B
3DC4:  MOVLB  0
3DC6:  CALL   104A
3DCA:  MOVLW  03
3DCC:  MOVLB  4
3DCE:  ADDWF  xAC,W
3DD0:  MOVWF  xA2
3DD2:  MOVLW  01
3DD4:  MOVWF  xAC
3DD6:  MOVLB  5
3DD8:  CLRF   x0B
3DDA:  MOVLB  0
3DDC:  CALL   10B4
3DE0:  MOVLB  4
3DE2:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3DE4:  BRA    3DE8
....................                {Flanco1 = 0;}   
3DE6:  BCF    x95.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
3DE8:  MOVF   xA2,W
3DEA:  SUBLW  04
3DEC:  BTFSS  FD8.2
3DEE:  BRA    411C
....................        
....................       if(visual==1) 
3DF0:  BTFSS  x95.4
3DF2:  BRA    3F48
....................       { 
....................          glcd_imagen(2); //Guante 
3DF4:  MOVLW  02
3DF6:  MOVLB  5
3DF8:  MOVWF  x0A
3DFA:  MOVLB  0
3DFC:  CALL   2136
....................          strcpy(Menus.Letra,"Caucho"); 
3E00:  MOVLW  04
3E02:  MOVWF  FEA
3E04:  MOVLW  EA
3E06:  MOVWF  FE9
3E08:  MOVFF  FF2,50A
3E0C:  BCF    FF2.7
3E0E:  MOVLW  00
3E10:  CALL   07EA
3E14:  TBLRD*-
3E16:  TBLRD*+
3E18:  MOVF   FF5,W
3E1A:  MOVWF  FEE
3E1C:  IORLW  00
3E1E:  BNZ   3E16
3E20:  MOVLB  5
3E22:  BTFSC  x0A.7
3E24:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3E26:  MOVLW  04
3E28:  MOVWF  x0B
3E2A:  MOVLW  EA
3E2C:  MOVWF  x0A
3E2E:  MOVLW  14
3E30:  MOVWF  x0C
3E32:  CLRF   x0D
3E34:  MOVLW  01
3E36:  MOVWF  x0E
3E38:  MOVLW  02
3E3A:  MOVWF  x0F
3E3C:  MOVLB  0
3E3E:  CALL   16E2
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3E42:  MOVLW  04
3E44:  MOVWF  FEA
3E46:  MOVLW  EA
3E48:  MOVWF  FE9
3E4A:  MOVFF  FF2,50A
3E4E:  BCF    FF2.7
3E50:  MOVLW  00
3E52:  CALL   07EA
3E56:  TBLRD*-
3E58:  TBLRD*+
3E5A:  MOVF   FF5,W
3E5C:  MOVWF  FEE
3E5E:  IORLW  00
3E60:  BNZ   3E58
3E62:  MOVLB  5
3E64:  BTFSC  x0A.7
3E66:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3E68:  MOVLW  04
3E6A:  MOVWF  x0B
3E6C:  MOVLW  EA
3E6E:  MOVWF  x0A
3E70:  MOVLW  07
3E72:  MOVWF  x0C
3E74:  MOVLW  37
3E76:  MOVWF  x0D
3E78:  CLRF   x0E
3E7A:  MOVLW  01
3E7C:  MOVWF  x0F
3E7E:  MOVLB  0
3E80:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3E84:  MOVLW  04
3E86:  MOVWF  FEA
3E88:  MOVLW  EA
3E8A:  MOVWF  FE9
3E8C:  MOVFF  FF2,50A
3E90:  BCF    FF2.7
3E92:  MOVLW  00
3E94:  CALL   092C
3E98:  TBLRD*-
3E9A:  TBLRD*+
3E9C:  MOVF   FF5,W
3E9E:  MOVWF  FEE
3EA0:  IORLW  00
3EA2:  BNZ   3E9A
3EA4:  MOVLB  5
3EA6:  BTFSC  x0A.7
3EA8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3EAA:  MOVLW  04
3EAC:  MOVWF  x0B
3EAE:  MOVLW  EA
3EB0:  MOVWF  x0A
3EB2:  CLRF   x0C
3EB4:  MOVLW  1A
3EB6:  MOVWF  x0D
3EB8:  CLRF   x0E
3EBA:  MOVLW  01
3EBC:  MOVWF  x0F
3EBE:  MOVLB  0
3EC0:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3EC4:  MOVLW  04
3EC6:  MOVWF  FEA
3EC8:  MOVLW  EA
3ECA:  MOVWF  FE9
3ECC:  MOVFF  FF2,50A
3ED0:  BCF    FF2.7
3ED2:  MOVLW  00
3ED4:  CALL   0958
3ED8:  TBLRD*-
3EDA:  TBLRD*+
3EDC:  MOVF   FF5,W
3EDE:  MOVWF  FEE
3EE0:  IORLW  00
3EE2:  BNZ   3EDA
3EE4:  MOVLB  5
3EE6:  BTFSC  x0A.7
3EE8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3EEA:  MOVLW  04
3EEC:  MOVWF  x0B
3EEE:  MOVLW  EA
3EF0:  MOVWF  x0A
3EF2:  CLRF   x0C
3EF4:  MOVLW  24
3EF6:  MOVWF  x0D
3EF8:  CLRF   x0E
3EFA:  MOVLW  01
3EFC:  MOVWF  x0F
3EFE:  MOVLB  0
3F00:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3F04:  MOVLW  04
3F06:  MOVWF  FEA
3F08:  MOVLW  EA
3F0A:  MOVWF  FE9
3F0C:  MOVFF  FF2,50A
3F10:  BCF    FF2.7
3F12:  MOVLW  00
3F14:  CALL   0988
3F18:  TBLRD*-
3F1A:  TBLRD*+
3F1C:  MOVF   FF5,W
3F1E:  MOVWF  FEE
3F20:  IORLW  00
3F22:  BNZ   3F1A
3F24:  MOVLB  5
3F26:  BTFSC  x0A.7
3F28:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3F2A:  MOVLW  04
3F2C:  MOVWF  x0B
3F2E:  MOVLW  EA
3F30:  MOVWF  x0A
3F32:  CLRF   x0C
3F34:  MOVLW  2E
3F36:  MOVWF  x0D
3F38:  CLRF   x0E
3F3A:  MOVLW  01
3F3C:  MOVWF  x0F
3F3E:  MOVLB  0
3F40:  CALL   16E2
....................          visual=0; 
3F44:  MOVLB  4
3F46:  BCF    x95.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3F48:  BSF    F92.3
3F4A:  BTFSS  F80.3
3F4C:  BRA    3F6E
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3F4E:  MOVLW  1E
3F50:  MOVLB  5
3F52:  MOVWF  x0B
3F54:  MOVLB  0
3F56:  CALL   104A
3F5A:  MOVLW  01
3F5C:  MOVLB  4
3F5E:  MOVWF  xA2
3F60:  MOVLB  5
3F62:  CLRF   x0B
3F64:  MOVLB  0
3F66:  CALL   10B4
3F6A:  MOVLB  4
3F6C:  BSF    x95.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3F6E:  BSF    F92.2
3F70:  BTFSS  F80.2
3F72:  BRA    411C
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;visual=1; 
3F74:  CLRF   xCB
3F76:  CLRF   xCC
3F78:  MOVLW  05
3F7A:  MOVWF  xCD
3F7C:  MOVLW  01
3F7E:  MOVWF  xCE
3F80:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3F82:  CLRF   xD3
3F84:  CLRF   xD4
3F86:  MOVLW  05
3F88:  MOVWF  xD5
3F8A:  MOVLW  01
3F8C:  MOVWF  xD6
3F8E:  CLRF   xB8
3F90:  CLRF   xB7
3F92:  MOVLW  79
3F94:  MOVWF  xA9
3F96:  MOVLW  14
3F98:  MOVWF  xA2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3F9A:  MOVWF  xA2
3F9C:  MOVLW  0F
3F9E:  MOVLB  5
3FA0:  MOVWF  x20
3FA2:  MOVLW  12
3FA4:  MOVWF  x21
3FA6:  MOVLW  1E
3FA8:  MOVWF  x22
3FAA:  MOVLW  35
3FAC:  MOVWF  x23
3FAE:  CLRF   x24
3FB0:  MOVLW  01
3FB2:  MOVWF  x25
3FB4:  MOVLB  0
3FB6:  CALL   1620
3FBA:  MOVLB  4
3FBC:  CLRF   xAE
3FBE:  MOVLW  C0
3FC0:  IORWF  FF2,F
3FC2:  MOVLB  5
3FC4:  CLRF   x0B
3FC6:  MOVLB  0
3FC8:  CALL   10B4
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3FCC:  MOVLW  04
3FCE:  MOVWF  FEA
3FD0:  MOVLW  EA
3FD2:  MOVWF  FE9
3FD4:  MOVFF  FF2,50A
3FD8:  BCF    FF2.7
3FDA:  MOVLW  00
3FDC:  CALL   09B2
3FE0:  TBLRD*-
3FE2:  TBLRD*+
3FE4:  MOVF   FF5,W
3FE6:  MOVWF  FEE
3FE8:  IORLW  00
3FEA:  BNZ   3FE2
3FEC:  MOVLB  5
3FEE:  BTFSC  x0A.7
3FF0:  BSF    FF2.7
3FF2:  MOVLW  04
3FF4:  MOVWF  x0B
3FF6:  MOVLW  EA
3FF8:  MOVWF  x0A
3FFA:  CLRF   x0C
3FFC:  MOVLW  37
3FFE:  MOVWF  x0D
4000:  MOVLW  02
4002:  MOVWF  x0E
4004:  MOVLW  01
4006:  MOVWF  x0F
4008:  MOVLB  0
400A:  CALL   16E2
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
400E:  MOVLW  0F
4010:  MOVLB  5
4012:  MOVWF  x20
4014:  MOVLW  12
4016:  MOVWF  x21
4018:  MOVLW  1E
401A:  MOVWF  x22
401C:  MOVLW  35
401E:  MOVWF  x23
4020:  CLRF   x24
4022:  MOVLW  01
4024:  MOVWF  x25
4026:  MOVLB  0
4028:  CALL   1620
....................          glcd_imagen(5); 
402C:  MOVLW  05
402E:  MOVLB  5
4030:  MOVWF  x0A
4032:  MOVLB  0
4034:  CALL   2136
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4038:  MOVLW  04
403A:  MOVWF  FEA
403C:  MOVLW  EA
403E:  MOVWF  FE9
4040:  MOVFF  FF2,50A
4044:  BCF    FF2.7
4046:  MOVLW  00
4048:  CALL   09D8
404C:  TBLRD*-
404E:  TBLRD*+
4050:  MOVF   FF5,W
4052:  MOVWF  FEE
4054:  IORLW  00
4056:  BNZ   404E
4058:  MOVLB  5
405A:  BTFSC  x0A.7
405C:  BSF    FF2.7
405E:  MOVLW  04
4060:  MOVWF  x0B
4062:  MOVLW  EA
4064:  MOVWF  x0A
4066:  CLRF   x0C
4068:  CLRF   x0D
406A:  MOVLW  02
406C:  MOVWF  x0E
406E:  MOVLW  01
4070:  MOVWF  x0F
4072:  MOVLB  0
4074:  CALL   16E2
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
4078:  MOVLW  04
407A:  MOVWF  FEA
407C:  MOVLW  EA
407E:  MOVWF  FE9
4080:  MOVFF  FF2,50A
4084:  BCF    FF2.7
4086:  MOVLW  00
4088:  CALL   09FA
408C:  TBLRD*-
408E:  TBLRD*+
4090:  MOVF   FF5,W
4092:  MOVWF  FEE
4094:  IORLW  00
4096:  BNZ   408E
4098:  MOVLB  5
409A:  BTFSC  x0A.7
409C:  BSF    FF2.7
409E:  MOVLW  04
40A0:  MOVWF  x0B
40A2:  MOVLW  EA
40A4:  MOVWF  x0A
40A6:  CLRF   x0C
40A8:  MOVLW  08
40AA:  MOVWF  x0D
40AC:  MOVLW  02
40AE:  MOVWF  x0E
40B0:  MOVLW  01
40B2:  MOVWF  x0F
40B4:  MOVLB  0
40B6:  CALL   16E2
....................          glcd_circle(95,40,2,NO,ON); 
40BA:  MOVLW  5F
40BC:  MOVLB  5
40BE:  MOVWF  x0A
40C0:  MOVLW  28
40C2:  MOVWF  x0B
40C4:  MOVLW  02
40C6:  MOVWF  x0C
40C8:  CLRF   x0D
40CA:  MOVLW  01
40CC:  MOVWF  x0E
40CE:  MOVLB  0
40D0:  CALL   2232
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
40D4:  MOVLW  04
40D6:  MOVWF  FEA
40D8:  MOVLW  EA
40DA:  MOVWF  FE9
40DC:  MOVFF  FF2,50A
40E0:  BCF    FF2.7
40E2:  MOVLW  00
40E4:  CALL   0A1C
40E8:  TBLRD*-
40EA:  TBLRD*+
40EC:  MOVF   FF5,W
40EE:  MOVWF  FEE
40F0:  IORLW  00
40F2:  BNZ   40EA
40F4:  MOVLB  5
40F6:  BTFSC  x0A.7
40F8:  BSF    FF2.7
40FA:  MOVLW  04
40FC:  MOVWF  x0B
40FE:  MOVLW  EA
4100:  MOVWF  x0A
4102:  MOVLW  66
4104:  MOVWF  x0C
4106:  MOVLW  28
4108:  MOVWF  x0D
410A:  MOVLW  02
410C:  MOVWF  x0E
410E:  MOVWF  x0F
4110:  MOVLB  0
4112:  CALL   16E2
....................          MuestraTiemposProgramados(); 
4116:  CALL   2632
411A:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
411C:  MOVF   xA2,W
411E:  SUBLW  05
4120:  BTFSS  FD8.2
4122:  BRA    42E8
....................        
....................       if(visual==1) 
4124:  BTFSS  x95.4
4126:  BRA    427E
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
4128:  MOVLW  04
412A:  MOVLB  5
412C:  MOVWF  x0A
412E:  MOVLB  0
4130:  CALL   2136
....................          strcpy(Menus.Letra,"Liquidos"); 
4134:  MOVLW  04
4136:  MOVWF  FEA
4138:  MOVLW  EA
413A:  MOVWF  FE9
413C:  MOVFF  FF2,50A
4140:  BCF    FF2.7
4142:  MOVLW  00
4144:  CALL   080C
4148:  TBLRD*-
414A:  TBLRD*+
414C:  MOVF   FF5,W
414E:  MOVWF  FEE
4150:  IORLW  00
4152:  BNZ   414A
4154:  MOVLB  5
4156:  BTFSC  x0A.7
4158:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
415A:  MOVLW  04
415C:  MOVWF  x0B
415E:  MOVLW  EA
4160:  MOVWF  x0A
4162:  MOVLW  14
4164:  MOVWF  x0C
4166:  CLRF   x0D
4168:  MOVLW  01
416A:  MOVWF  x0E
416C:  MOVLW  02
416E:  MOVWF  x0F
4170:  MOVLB  0
4172:  CALL   16E2
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
4176:  MOVLW  04
4178:  MOVWF  FEA
417A:  MOVLW  EA
417C:  MOVWF  FE9
417E:  MOVFF  FF2,50A
4182:  BCF    FF2.7
4184:  MOVLW  00
4186:  CALL   080C
418A:  TBLRD*-
418C:  TBLRD*+
418E:  MOVF   FF5,W
4190:  MOVWF  FEE
4192:  IORLW  00
4194:  BNZ   418C
4196:  MOVLB  5
4198:  BTFSC  x0A.7
419A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
419C:  MOVLW  04
419E:  MOVWF  x0B
41A0:  MOVLW  EA
41A2:  MOVWF  x0A
41A4:  MOVLW  07
41A6:  MOVWF  x0C
41A8:  MOVLW  37
41AA:  MOVWF  x0D
41AC:  MOVLW  02
41AE:  MOVWF  x0E
41B0:  MOVLW  01
41B2:  MOVWF  x0F
41B4:  MOVLB  0
41B6:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
41BA:  MOVLW  04
41BC:  MOVWF  FEA
41BE:  MOVLW  EA
41C0:  MOVWF  FE9
41C2:  MOVFF  FF2,50A
41C6:  BCF    FF2.7
41C8:  MOVLW  00
41CA:  CALL   092C
41CE:  TBLRD*-
41D0:  TBLRD*+
41D2:  MOVF   FF5,W
41D4:  MOVWF  FEE
41D6:  IORLW  00
41D8:  BNZ   41D0
41DA:  MOVLB  5
41DC:  BTFSC  x0A.7
41DE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
41E0:  MOVLW  04
41E2:  MOVWF  x0B
41E4:  MOVLW  EA
41E6:  MOVWF  x0A
41E8:  CLRF   x0C
41EA:  MOVLW  1A
41EC:  MOVWF  x0D
41EE:  CLRF   x0E
41F0:  MOVLW  01
41F2:  MOVWF  x0F
41F4:  MOVLB  0
41F6:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
41FA:  MOVLW  04
41FC:  MOVWF  FEA
41FE:  MOVLW  EA
4200:  MOVWF  FE9
4202:  MOVFF  FF2,50A
4206:  BCF    FF2.7
4208:  MOVLW  00
420A:  CALL   0A38
420E:  TBLRD*-
4210:  TBLRD*+
4212:  MOVF   FF5,W
4214:  MOVWF  FEE
4216:  IORLW  00
4218:  BNZ   4210
421A:  MOVLB  5
421C:  BTFSC  x0A.7
421E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4220:  MOVLW  04
4222:  MOVWF  x0B
4224:  MOVLW  EA
4226:  MOVWF  x0A
4228:  CLRF   x0C
422A:  MOVLW  24
422C:  MOVWF  x0D
422E:  CLRF   x0E
4230:  MOVLW  01
4232:  MOVWF  x0F
4234:  MOVLB  0
4236:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
423A:  MOVLW  04
423C:  MOVWF  FEA
423E:  MOVLW  EA
4240:  MOVWF  FE9
4242:  MOVFF  FF2,50A
4246:  BCF    FF2.7
4248:  MOVLW  00
424A:  CALL   0A68
424E:  TBLRD*-
4250:  TBLRD*+
4252:  MOVF   FF5,W
4254:  MOVWF  FEE
4256:  IORLW  00
4258:  BNZ   4250
425A:  MOVLB  5
425C:  BTFSC  x0A.7
425E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
4260:  MOVLW  04
4262:  MOVWF  x0B
4264:  MOVLW  EA
4266:  MOVWF  x0A
4268:  CLRF   x0C
426A:  MOVLW  2E
426C:  MOVWF  x0D
426E:  CLRF   x0E
4270:  MOVLW  01
4272:  MOVWF  x0F
4274:  MOVLB  0
4276:  CALL   16E2
....................          visual=0; 
427A:  MOVLB  4
427C:  BCF    x95.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
427E:  BSF    F92.3
4280:  BTFSS  F80.3
4282:  BRA    42A4
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4284:  MOVLW  1E
4286:  MOVLB  5
4288:  MOVWF  x0B
428A:  MOVLB  0
428C:  CALL   104A
4290:  MOVLW  01
4292:  MOVLB  4
4294:  MOVWF  xA2
4296:  MOVLB  5
4298:  CLRF   x0B
429A:  MOVLB  0
429C:  CALL   10B4
42A0:  MOVLB  4
42A2:  BSF    x95.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
42A4:  BSF    F92.2
42A6:  BTFSS  F80.2
42A8:  BRA    42E8
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
42AA:  CLRF   xCB
42AC:  CLRF   xCC
42AE:  CLRF   xCD
42B0:  MOVLW  02
42B2:  MOVWF  xCE
42B4:  BSF    x95.5
42B6:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
42B8:  CLRF   xD3
42BA:  CLRF   xD4
42BC:  CLRF   xD5
42BE:  CLRF   xD6
42C0:  MOVLW  79
42C2:  MOVWF  xA9
42C4:  MOVLW  0E
42C6:  MOVWF  xA2
42C8:  MOVLW  04
42CA:  MOVLB  5
42CC:  MOVWF  x0A
42CE:  MOVLW  AF
42D0:  MOVWF  x0B
42D2:  MOVLB  0
42D4:  CALL   104A
42D8:  MOVLB  5
42DA:  DECFSZ x0A,F
42DC:  BRA    42CE
42DE:  CLRF   x0B
42E0:  MOVLB  0
42E2:  CALL   10B4
42E6:  MOVLB  4
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
42E8:  MOVF   xA2,W
42EA:  SUBLW  06
42EC:  BTFSS  FD8.2
42EE:  BRA    44B4
....................        
....................       if(visual==1) 
42F0:  BTFSS  x95.4
42F2:  BRA    4448
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
42F4:  MOVLW  03
42F6:  MOVLB  5
42F8:  MOVWF  x0A
42FA:  MOVLB  0
42FC:  CALL   2136
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
4300:  MOVLW  04
4302:  MOVWF  FEA
4304:  MOVLW  EA
4306:  MOVWF  FE9
4308:  MOVFF  FF2,50A
430C:  BCF    FF2.7
430E:  MOVLW  00
4310:  CALL   0A92
4314:  TBLRD*-
4316:  TBLRD*+
4318:  MOVF   FF5,W
431A:  MOVWF  FEE
431C:  IORLW  00
431E:  BNZ   4316
4320:  MOVLB  5
4322:  BTFSC  x0A.7
4324:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4326:  MOVLW  04
4328:  MOVWF  x0B
432A:  MOVLW  EA
432C:  MOVWF  x0A
432E:  CLRF   x0C
4330:  CLRF   x0D
4332:  MOVLW  01
4334:  MOVWF  x0E
4336:  MOVLW  02
4338:  MOVWF  x0F
433A:  MOVLB  0
433C:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
4340:  MOVLW  04
4342:  MOVWF  FEA
4344:  MOVLW  EA
4346:  MOVWF  FE9
4348:  MOVFF  FF2,50A
434C:  BCF    FF2.7
434E:  MOVLW  00
4350:  CALL   0830
4354:  TBLRD*-
4356:  TBLRD*+
4358:  MOVF   FF5,W
435A:  MOVWF  FEE
435C:  IORLW  00
435E:  BNZ   4356
4360:  MOVLB  5
4362:  BTFSC  x0A.7
4364:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
4366:  MOVLW  04
4368:  MOVWF  x0B
436A:  MOVLW  EA
436C:  MOVWF  x0A
436E:  MOVLW  07
4370:  MOVWF  x0C
4372:  MOVLW  37
4374:  MOVWF  x0D
4376:  MOVLW  02
4378:  MOVWF  x0E
437A:  MOVLW  01
437C:  MOVWF  x0F
437E:  MOVLB  0
4380:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
4384:  MOVLW  04
4386:  MOVWF  FEA
4388:  MOVLW  EA
438A:  MOVWF  FE9
438C:  MOVFF  FF2,50A
4390:  BCF    FF2.7
4392:  MOVLW  00
4394:  CALL   092C
4398:  TBLRD*-
439A:  TBLRD*+
439C:  MOVF   FF5,W
439E:  MOVWF  FEE
43A0:  IORLW  00
43A2:  BNZ   439A
43A4:  MOVLB  5
43A6:  BTFSC  x0A.7
43A8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
43AA:  MOVLW  04
43AC:  MOVWF  x0B
43AE:  MOVLW  EA
43B0:  MOVWF  x0A
43B2:  CLRF   x0C
43B4:  MOVLW  1A
43B6:  MOVWF  x0D
43B8:  CLRF   x0E
43BA:  MOVLW  01
43BC:  MOVWF  x0F
43BE:  MOVLB  0
43C0:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
43C4:  MOVLW  04
43C6:  MOVWF  FEA
43C8:  MOVLW  EA
43CA:  MOVWF  FE9
43CC:  MOVFF  FF2,50A
43D0:  BCF    FF2.7
43D2:  MOVLW  00
43D4:  CALL   0958
43D8:  TBLRD*-
43DA:  TBLRD*+
43DC:  MOVF   FF5,W
43DE:  MOVWF  FEE
43E0:  IORLW  00
43E2:  BNZ   43DA
43E4:  MOVLB  5
43E6:  BTFSC  x0A.7
43E8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
43EA:  MOVLW  04
43EC:  MOVWF  x0B
43EE:  MOVLW  EA
43F0:  MOVWF  x0A
43F2:  CLRF   x0C
43F4:  MOVLW  24
43F6:  MOVWF  x0D
43F8:  CLRF   x0E
43FA:  MOVLW  01
43FC:  MOVWF  x0F
43FE:  MOVLB  0
4400:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
4404:  MOVLW  04
4406:  MOVWF  FEA
4408:  MOVLW  EA
440A:  MOVWF  FE9
440C:  MOVFF  FF2,50A
4410:  BCF    FF2.7
4412:  MOVLW  00
4414:  CALL   0A68
4418:  TBLRD*-
441A:  TBLRD*+
441C:  MOVF   FF5,W
441E:  MOVWF  FEE
4420:  IORLW  00
4422:  BNZ   441A
4424:  MOVLB  5
4426:  BTFSC  x0A.7
4428:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
442A:  MOVLW  04
442C:  MOVWF  x0B
442E:  MOVLW  EA
4430:  MOVWF  x0A
4432:  CLRF   x0C
4434:  MOVLW  2E
4436:  MOVWF  x0D
4438:  CLRF   x0E
443A:  MOVLW  01
443C:  MOVWF  x0F
443E:  MOVLB  0
4440:  CALL   16E2
....................          visual=0; 
4444:  MOVLB  4
4446:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4448:  BSF    F92.3
444A:  BTFSS  F80.3
444C:  BRA    446E
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
444E:  MOVLW  1E
4450:  MOVLB  5
4452:  MOVWF  x0B
4454:  MOVLB  0
4456:  CALL   104A
445A:  MOVLW  01
445C:  MOVLB  4
445E:  MOVWF  xA2
4460:  MOVLB  5
4462:  CLRF   x0B
4464:  MOVLB  0
4466:  CALL   10B4
446A:  MOVLB  4
446C:  BSF    x95.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
446E:  BSF    F92.2
4470:  BTFSS  F80.2
4472:  BRA    44B4
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
4474:  CLRF   xCB
4476:  CLRF   xCC
4478:  MOVLW  05
447A:  MOVWF  xCD
447C:  MOVLW  01
447E:  MOVWF  xCE
4480:  BSF    x95.5
4482:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
4484:  CLRF   xD3
4486:  CLRF   xD4
4488:  CLRF   xD5
448A:  CLRF   xD6
448C:  MOVLW  79
448E:  MOVWF  xA9
4490:  MOVLW  0E
4492:  MOVWF  xA2
4494:  MOVLW  04
4496:  MOVLB  5
4498:  MOVWF  x0A
449A:  MOVLW  AF
449C:  MOVWF  x0B
449E:  MOVLB  0
44A0:  CALL   104A
44A4:  MOVLB  5
44A6:  DECFSZ x0A,F
44A8:  BRA    449A
44AA:  CLRF   x0B
44AC:  MOVLB  0
44AE:  CALL   10B4
44B2:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
44B4:  MOVF   xA2,W
44B6:  SUBLW  07
44B8:  BTFSS  FD8.2
44BA:  BRA    47FA
....................        
....................       if(visual==1) 
44BC:  BTFSS  x95.4
44BE:  BRA    4612
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
44C0:  MOVLW  01
44C2:  MOVLB  5
44C4:  MOVWF  x0A
44C6:  MOVLB  0
44C8:  CALL   2136
....................          strcpy(Menus.Letra,"Tex & Ins"); 
44CC:  MOVLW  04
44CE:  MOVWF  FEA
44D0:  MOVLW  EA
44D2:  MOVWF  FE9
44D4:  MOVFF  FF2,50A
44D8:  BCF    FF2.7
44DA:  MOVLW  00
44DC:  CALL   0AB8
44E0:  TBLRD*-
44E2:  TBLRD*+
44E4:  MOVF   FF5,W
44E6:  MOVWF  FEE
44E8:  IORLW  00
44EA:  BNZ   44E2
44EC:  MOVLB  5
44EE:  BTFSC  x0A.7
44F0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
44F2:  MOVLW  04
44F4:  MOVWF  x0B
44F6:  MOVLW  EA
44F8:  MOVWF  x0A
44FA:  CLRF   x0C
44FC:  CLRF   x0D
44FE:  MOVLW  01
4500:  MOVWF  x0E
4502:  MOVLW  02
4504:  MOVWF  x0F
4506:  MOVLB  0
4508:  CALL   16E2
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
450C:  MOVLW  04
450E:  MOVWF  FEA
4510:  MOVLW  EA
4512:  MOVWF  FE9
4514:  MOVFF  FF2,50A
4518:  BCF    FF2.7
451A:  MOVLW  00
451C:  CALL   085E
4520:  TBLRD*-
4522:  TBLRD*+
4524:  MOVF   FF5,W
4526:  MOVWF  FEE
4528:  IORLW  00
452A:  BNZ   4522
452C:  MOVLB  5
452E:  BTFSC  x0A.7
4530:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4532:  MOVLW  04
4534:  MOVWF  x0B
4536:  MOVLW  EA
4538:  MOVWF  x0A
453A:  CLRF   x0C
453C:  MOVLW  37
453E:  MOVWF  x0D
4540:  MOVLW  02
4542:  MOVWF  x0E
4544:  MOVLW  01
4546:  MOVWF  x0F
4548:  MOVLB  0
454A:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
454E:  MOVLW  04
4550:  MOVWF  FEA
4552:  MOVLW  EA
4554:  MOVWF  FE9
4556:  MOVFF  FF2,50A
455A:  BCF    FF2.7
455C:  MOVLW  00
455E:  CALL   092C
4562:  TBLRD*-
4564:  TBLRD*+
4566:  MOVF   FF5,W
4568:  MOVWF  FEE
456A:  IORLW  00
456C:  BNZ   4564
456E:  MOVLB  5
4570:  BTFSC  x0A.7
4572:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4574:  MOVLW  04
4576:  MOVWF  x0B
4578:  MOVLW  EA
457A:  MOVWF  x0A
457C:  CLRF   x0C
457E:  MOVLW  1A
4580:  MOVWF  x0D
4582:  CLRF   x0E
4584:  MOVLW  01
4586:  MOVWF  x0F
4588:  MOVLB  0
458A:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
458E:  MOVLW  04
4590:  MOVWF  FEA
4592:  MOVLW  EA
4594:  MOVWF  FE9
4596:  MOVFF  FF2,50A
459A:  BCF    FF2.7
459C:  MOVLW  00
459E:  CALL   0ADC
45A2:  TBLRD*-
45A4:  TBLRD*+
45A6:  MOVF   FF5,W
45A8:  MOVWF  FEE
45AA:  IORLW  00
45AC:  BNZ   45A4
45AE:  MOVLB  5
45B0:  BTFSC  x0A.7
45B2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
45B4:  MOVLW  04
45B6:  MOVWF  x0B
45B8:  MOVLW  EA
45BA:  MOVWF  x0A
45BC:  CLRF   x0C
45BE:  MOVLW  24
45C0:  MOVWF  x0D
45C2:  CLRF   x0E
45C4:  MOVLW  01
45C6:  MOVWF  x0F
45C8:  MOVLB  0
45CA:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
45CE:  MOVLW  04
45D0:  MOVWF  FEA
45D2:  MOVLW  EA
45D4:  MOVWF  FE9
45D6:  MOVFF  FF2,50A
45DA:  BCF    FF2.7
45DC:  MOVLW  00
45DE:  CALL   0B0C
45E2:  TBLRD*-
45E4:  TBLRD*+
45E6:  MOVF   FF5,W
45E8:  MOVWF  FEE
45EA:  IORLW  00
45EC:  BNZ   45E4
45EE:  MOVLB  5
45F0:  BTFSC  x0A.7
45F2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
45F4:  MOVLW  04
45F6:  MOVWF  x0B
45F8:  MOVLW  EA
45FA:  MOVWF  x0A
45FC:  CLRF   x0C
45FE:  MOVLW  2E
4600:  MOVWF  x0D
4602:  CLRF   x0E
4604:  MOVLW  01
4606:  MOVWF  x0F
4608:  MOVLB  0
460A:  CALL   16E2
....................          visual=0; 
460E:  MOVLB  4
4610:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4612:  BSF    F92.3
4614:  BTFSS  F80.3
4616:  BRA    4638
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4618:  MOVLW  1E
461A:  MOVLB  5
461C:  MOVWF  x0B
461E:  MOVLB  0
4620:  CALL   104A
4624:  MOVLW  01
4626:  MOVLB  4
4628:  MOVWF  xA2
462A:  MOVLB  5
462C:  CLRF   x0B
462E:  MOVLB  0
4630:  CALL   10B4
4634:  MOVLB  4
4636:  BSF    x95.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
4638:  BSF    F92.2
463A:  BTFSS  F80.2
463C:  BRA    47FA
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
463E:  CLRF   xCB
4640:  CLRF   xCC
4642:  MOVLW  05
4644:  MOVWF  xCD
4646:  MOVLW  02
4648:  MOVWF  xCE
464A:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
464C:  CLRF   xD3
464E:  CLRF   xD4
4650:  CLRF   xD5
4652:  MOVLW  01
4654:  MOVWF  xD6
4656:  MOVLW  79
4658:  MOVWF  xA9
465A:  MOVLW  14
465C:  MOVWF  xA2
465E:  MOVLW  04
4660:  MOVLB  5
4662:  MOVWF  x0A
4664:  MOVLW  AF
4666:  MOVWF  x0B
4668:  MOVLB  0
466A:  CALL   104A
466E:  MOVLB  5
4670:  DECFSZ x0A,F
4672:  BRA    4664
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
4674:  MOVLW  14
4676:  MOVLB  4
4678:  MOVWF  xA2
467A:  MOVLW  0F
467C:  MOVLB  5
467E:  MOVWF  x20
4680:  MOVLW  12
4682:  MOVWF  x21
4684:  MOVLW  1E
4686:  MOVWF  x22
4688:  MOVLW  35
468A:  MOVWF  x23
468C:  CLRF   x24
468E:  MOVLW  01
4690:  MOVWF  x25
4692:  MOVLB  0
4694:  CALL   1620
4698:  MOVLB  4
469A:  CLRF   xAE
469C:  MOVLW  C0
469E:  IORWF  FF2,F
46A0:  MOVLB  5
46A2:  CLRF   x0B
46A4:  MOVLB  0
46A6:  CALL   10B4
....................          strcpy(Menus.Letra,"Calentando"); 
46AA:  MOVLW  04
46AC:  MOVWF  FEA
46AE:  MOVLW  EA
46B0:  MOVWF  FE9
46B2:  MOVFF  FF2,50A
46B6:  BCF    FF2.7
46B8:  MOVLW  00
46BA:  CALL   09B2
46BE:  TBLRD*-
46C0:  TBLRD*+
46C2:  MOVF   FF5,W
46C4:  MOVWF  FEE
46C6:  IORLW  00
46C8:  BNZ   46C0
46CA:  MOVLB  5
46CC:  BTFSC  x0A.7
46CE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
46D0:  MOVLW  04
46D2:  MOVWF  x0B
46D4:  MOVLW  EA
46D6:  MOVWF  x0A
46D8:  CLRF   x0C
46DA:  MOVLW  37
46DC:  MOVWF  x0D
46DE:  MOVLW  02
46E0:  MOVWF  x0E
46E2:  MOVLW  01
46E4:  MOVWF  x0F
46E6:  MOVLB  0
46E8:  CALL   16E2
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
46EC:  MOVLW  0F
46EE:  MOVLB  5
46F0:  MOVWF  x20
46F2:  MOVLW  12
46F4:  MOVWF  x21
46F6:  MOVLW  1E
46F8:  MOVWF  x22
46FA:  MOVLW  35
46FC:  MOVWF  x23
46FE:  CLRF   x24
4700:  MOVLW  01
4702:  MOVWF  x25
4704:  MOVLB  0
4706:  CALL   1620
....................          glcd_imagen(5); 
470A:  MOVLW  05
470C:  MOVLB  5
470E:  MOVWF  x0A
4710:  MOVLB  0
4712:  CALL   2136
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4716:  MOVLW  04
4718:  MOVWF  FEA
471A:  MOVLW  EA
471C:  MOVWF  FE9
471E:  MOVFF  FF2,50A
4722:  BCF    FF2.7
4724:  MOVLW  00
4726:  CALL   09D8
472A:  TBLRD*-
472C:  TBLRD*+
472E:  MOVF   FF5,W
4730:  MOVWF  FEE
4732:  IORLW  00
4734:  BNZ   472C
4736:  MOVLB  5
4738:  BTFSC  x0A.7
473A:  BSF    FF2.7
473C:  MOVLW  04
473E:  MOVWF  x0B
4740:  MOVLW  EA
4742:  MOVWF  x0A
4744:  CLRF   x0C
4746:  CLRF   x0D
4748:  MOVLW  02
474A:  MOVWF  x0E
474C:  MOVLW  01
474E:  MOVWF  x0F
4750:  MOVLB  0
4752:  CALL   16E2
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
4756:  MOVLW  04
4758:  MOVWF  FEA
475A:  MOVLW  EA
475C:  MOVWF  FE9
475E:  MOVFF  FF2,50A
4762:  BCF    FF2.7
4764:  MOVLW  00
4766:  CALL   09FA
476A:  TBLRD*-
476C:  TBLRD*+
476E:  MOVF   FF5,W
4770:  MOVWF  FEE
4772:  IORLW  00
4774:  BNZ   476C
4776:  MOVLB  5
4778:  BTFSC  x0A.7
477A:  BSF    FF2.7
477C:  MOVLW  04
477E:  MOVWF  x0B
4780:  MOVLW  EA
4782:  MOVWF  x0A
4784:  CLRF   x0C
4786:  MOVLW  08
4788:  MOVWF  x0D
478A:  MOVLW  02
478C:  MOVWF  x0E
478E:  MOVLW  01
4790:  MOVWF  x0F
4792:  MOVLB  0
4794:  CALL   16E2
....................          glcd_circle(95,40,2,NO,ON); 
4798:  MOVLW  5F
479A:  MOVLB  5
479C:  MOVWF  x0A
479E:  MOVLW  28
47A0:  MOVWF  x0B
47A2:  MOVLW  02
47A4:  MOVWF  x0C
47A6:  CLRF   x0D
47A8:  MOVLW  01
47AA:  MOVWF  x0E
47AC:  MOVLB  0
47AE:  CALL   2232
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
47B2:  MOVLW  04
47B4:  MOVWF  FEA
47B6:  MOVLW  EA
47B8:  MOVWF  FE9
47BA:  MOVFF  FF2,50A
47BE:  BCF    FF2.7
47C0:  MOVLW  00
47C2:  CALL   0A1C
47C6:  TBLRD*-
47C8:  TBLRD*+
47CA:  MOVF   FF5,W
47CC:  MOVWF  FEE
47CE:  IORLW  00
47D0:  BNZ   47C8
47D2:  MOVLB  5
47D4:  BTFSC  x0A.7
47D6:  BSF    FF2.7
47D8:  MOVLW  04
47DA:  MOVWF  x0B
47DC:  MOVLW  EA
47DE:  MOVWF  x0A
47E0:  MOVLW  66
47E2:  MOVWF  x0C
47E4:  MOVLW  28
47E6:  MOVWF  x0D
47E8:  MOVLW  02
47EA:  MOVWF  x0E
47EC:  MOVWF  x0F
47EE:  MOVLB  0
47F0:  CALL   16E2
....................          MuestraTiemposProgramados(); 
47F4:  CALL   2632
47F8:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
47FA:  MOVF   xA2,W
47FC:  SUBLW  08
47FE:  BTFSS  FD8.2
4800:  BRA    4BDE
....................          
....................          if(visual==1) 
4802:  BTFSS  x95.4
4804:  BRA    4B2A
....................          { 
....................             if(Opcion>5) 
4806:  MOVF   xAC,W
4808:  SUBLW  05
480A:  BC    4810
....................             {Opcion=1;} 
480C:  MOVLW  01
480E:  MOVWF  xAC
....................             if(Opcion<1) 
4810:  MOVF   xAC,F
4812:  BNZ   4818
....................             {Opcion=5;} 
4814:  MOVLW  05
4816:  MOVWF  xAC
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
4818:  MOVLW  04
481A:  MOVWF  FEA
481C:  MOVLW  EA
481E:  MOVWF  FE9
4820:  MOVFF  FF2,50A
4824:  BCF    FF2.7
4826:  MOVLW  00
4828:  MOVLB  0
482A:  CALL   0B36
482E:  TBLRD*-
4830:  TBLRD*+
4832:  MOVF   FF5,W
4834:  MOVWF  FEE
4836:  IORLW  00
4838:  BNZ   4830
483A:  MOVLB  5
483C:  BTFSC  x0A.7
483E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4840:  MOVLW  04
4842:  MOVWF  x0B
4844:  MOVLW  EA
4846:  MOVWF  x0A
4848:  CLRF   x0C
484A:  CLRF   x0D
484C:  MOVLW  01
484E:  MOVWF  x0E
4850:  MOVWF  x0F
4852:  MOVLB  0
4854:  CALL   16E2
....................        
....................             if(Opcion==1)    
4858:  MOVLB  4
485A:  DECFSZ xAC,W
485C:  BRA    48A4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
485E:  MOVLW  04
4860:  MOVWF  FEA
4862:  MOVLW  EA
4864:  MOVWF  FE9
4866:  MOVFF  FF2,50A
486A:  BCF    FF2.7
486C:  MOVLW  00
486E:  MOVLB  0
4870:  CALL   0B66
4874:  TBLRD*-
4876:  TBLRD*+
4878:  MOVF   FF5,W
487A:  MOVWF  FEE
487C:  IORLW  00
487E:  BNZ   4876
4880:  MOVLB  5
4882:  BTFSC  x0A.7
4884:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
4886:  MOVLW  04
4888:  MOVWF  x0B
488A:  MOVLW  EA
488C:  MOVWF  x0A
488E:  CLRF   x0C
4890:  MOVLW  0A
4892:  MOVWF  x0D
4894:  MOVLW  01
4896:  MOVWF  x0E
4898:  MOVWF  x0F
489A:  MOVLB  0
489C:  CALL   16E2
....................             else 
48A0:  BRA    48E6
48A2:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
48A4:  MOVLW  04
48A6:  MOVWF  FEA
48A8:  MOVLW  EA
48AA:  MOVWF  FE9
48AC:  MOVFF  FF2,50A
48B0:  BCF    FF2.7
48B2:  MOVLW  00
48B4:  MOVLB  0
48B6:  CALL   0B66
48BA:  TBLRD*-
48BC:  TBLRD*+
48BE:  MOVF   FF5,W
48C0:  MOVWF  FEE
48C2:  IORLW  00
48C4:  BNZ   48BC
48C6:  MOVLB  5
48C8:  BTFSC  x0A.7
48CA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
48CC:  MOVLW  04
48CE:  MOVWF  x0B
48D0:  MOVLW  EA
48D2:  MOVWF  x0A
48D4:  CLRF   x0C
48D6:  MOVLW  0A
48D8:  MOVWF  x0D
48DA:  CLRF   x0E
48DC:  MOVLW  01
48DE:  MOVWF  x0F
48E0:  MOVLB  0
48E2:  CALL   16E2
....................              
....................             if(Opcion==2)    
48E6:  MOVLB  4
48E8:  MOVF   xAC,W
48EA:  SUBLW  02
48EC:  BNZ   4934
....................                {strcpy(Menus.Letra,"T. Secado"); 
48EE:  MOVLW  04
48F0:  MOVWF  FEA
48F2:  MOVLW  EA
48F4:  MOVWF  FE9
48F6:  MOVFF  FF2,50A
48FA:  BCF    FF2.7
48FC:  MOVLW  00
48FE:  MOVLB  0
4900:  CALL   0B92
4904:  TBLRD*-
4906:  TBLRD*+
4908:  MOVF   FF5,W
490A:  MOVWF  FEE
490C:  IORLW  00
490E:  BNZ   4906
4910:  MOVLB  5
4912:  BTFSC  x0A.7
4914:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
4916:  MOVLW  04
4918:  MOVWF  x0B
491A:  MOVLW  EA
491C:  MOVWF  x0A
491E:  CLRF   x0C
4920:  MOVLW  14
4922:  MOVWF  x0D
4924:  MOVLW  01
4926:  MOVWF  x0E
4928:  MOVWF  x0F
492A:  MOVLB  0
492C:  CALL   16E2
....................             else 
4930:  BRA    4976
4932:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
4934:  MOVLW  04
4936:  MOVWF  FEA
4938:  MOVLW  EA
493A:  MOVWF  FE9
493C:  MOVFF  FF2,50A
4940:  BCF    FF2.7
4942:  MOVLW  00
4944:  MOVLB  0
4946:  CALL   0B92
494A:  TBLRD*-
494C:  TBLRD*+
494E:  MOVF   FF5,W
4950:  MOVWF  FEE
4952:  IORLW  00
4954:  BNZ   494C
4956:  MOVLB  5
4958:  BTFSC  x0A.7
495A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
495C:  MOVLW  04
495E:  MOVWF  x0B
4960:  MOVLW  EA
4962:  MOVWF  x0A
4964:  CLRF   x0C
4966:  MOVLW  14
4968:  MOVWF  x0D
496A:  CLRF   x0E
496C:  MOVLW  01
496E:  MOVWF  x0F
4970:  MOVLB  0
4972:  CALL   16E2
....................                 
....................              if(Opcion==3)    
4976:  MOVLB  4
4978:  MOVF   xAC,W
497A:  SUBLW  03
497C:  BNZ   49C4
....................                {strcpy(Menus.Letra,"Temperatura"); 
497E:  MOVLW  04
4980:  MOVWF  FEA
4982:  MOVLW  EA
4984:  MOVWF  FE9
4986:  MOVFF  FF2,50A
498A:  BCF    FF2.7
498C:  MOVLW  00
498E:  MOVLB  0
4990:  CALL   0BB6
4994:  TBLRD*-
4996:  TBLRD*+
4998:  MOVF   FF5,W
499A:  MOVWF  FEE
499C:  IORLW  00
499E:  BNZ   4996
49A0:  MOVLB  5
49A2:  BTFSC  x0A.7
49A4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
49A6:  MOVLW  04
49A8:  MOVWF  x0B
49AA:  MOVLW  EA
49AC:  MOVWF  x0A
49AE:  CLRF   x0C
49B0:  MOVLW  1E
49B2:  MOVWF  x0D
49B4:  MOVLW  01
49B6:  MOVWF  x0E
49B8:  MOVWF  x0F
49BA:  MOVLB  0
49BC:  CALL   16E2
....................             else 
49C0:  BRA    4A06
49C2:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
49C4:  MOVLW  04
49C6:  MOVWF  FEA
49C8:  MOVLW  EA
49CA:  MOVWF  FE9
49CC:  MOVFF  FF2,50A
49D0:  BCF    FF2.7
49D2:  MOVLW  00
49D4:  MOVLB  0
49D6:  CALL   0BB6
49DA:  TBLRD*-
49DC:  TBLRD*+
49DE:  MOVF   FF5,W
49E0:  MOVWF  FEE
49E2:  IORLW  00
49E4:  BNZ   49DC
49E6:  MOVLB  5
49E8:  BTFSC  x0A.7
49EA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
49EC:  MOVLW  04
49EE:  MOVWF  x0B
49F0:  MOVLW  EA
49F2:  MOVWF  x0A
49F4:  CLRF   x0C
49F6:  MOVLW  1E
49F8:  MOVWF  x0D
49FA:  CLRF   x0E
49FC:  MOVLW  01
49FE:  MOVWF  x0F
4A00:  MOVLB  0
4A02:  CALL   16E2
....................                 
....................             if(Opcion==4)    
4A06:  MOVLB  4
4A08:  MOVF   xAC,W
4A0A:  SUBLW  04
4A0C:  BNZ   4A54
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4A0E:  MOVLW  04
4A10:  MOVWF  FEA
4A12:  MOVLW  EA
4A14:  MOVWF  FE9
4A16:  MOVFF  FF2,50A
4A1A:  BCF    FF2.7
4A1C:  MOVLW  00
4A1E:  MOVLB  0
4A20:  CALL   0BDC
4A24:  TBLRD*-
4A26:  TBLRD*+
4A28:  MOVF   FF5,W
4A2A:  MOVWF  FEE
4A2C:  IORLW  00
4A2E:  BNZ   4A26
4A30:  MOVLB  5
4A32:  BTFSC  x0A.7
4A34:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
4A36:  MOVLW  04
4A38:  MOVWF  x0B
4A3A:  MOVLW  EA
4A3C:  MOVWF  x0A
4A3E:  CLRF   x0C
4A40:  MOVLW  28
4A42:  MOVWF  x0D
4A44:  MOVLW  01
4A46:  MOVWF  x0E
4A48:  MOVWF  x0F
4A4A:  MOVLB  0
4A4C:  CALL   16E2
....................             else 
4A50:  BRA    4A96
4A52:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4A54:  MOVLW  04
4A56:  MOVWF  FEA
4A58:  MOVLW  EA
4A5A:  MOVWF  FE9
4A5C:  MOVFF  FF2,50A
4A60:  BCF    FF2.7
4A62:  MOVLW  00
4A64:  MOVLB  0
4A66:  CALL   0BDC
4A6A:  TBLRD*-
4A6C:  TBLRD*+
4A6E:  MOVF   FF5,W
4A70:  MOVWF  FEE
4A72:  IORLW  00
4A74:  BNZ   4A6C
4A76:  MOVLB  5
4A78:  BTFSC  x0A.7
4A7A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
4A7C:  MOVLW  04
4A7E:  MOVWF  x0B
4A80:  MOVLW  EA
4A82:  MOVWF  x0A
4A84:  CLRF   x0C
4A86:  MOVLW  28
4A88:  MOVWF  x0D
4A8A:  CLRF   x0E
4A8C:  MOVLW  01
4A8E:  MOVWF  x0F
4A90:  MOVLB  0
4A92:  CALL   16E2
....................                 
....................             if(Opcion==5)    
4A96:  MOVLB  4
4A98:  MOVF   xAC,W
4A9A:  SUBLW  05
4A9C:  BNZ   4AE4
....................                {strcpy(Menus.Letra,"Continuar"); 
4A9E:  MOVLW  04
4AA0:  MOVWF  FEA
4AA2:  MOVLW  EA
4AA4:  MOVWF  FE9
4AA6:  MOVFF  FF2,50A
4AAA:  BCF    FF2.7
4AAC:  MOVLW  00
4AAE:  MOVLB  0
4AB0:  CALL   0C08
4AB4:  TBLRD*-
4AB6:  TBLRD*+
4AB8:  MOVF   FF5,W
4ABA:  MOVWF  FEE
4ABC:  IORLW  00
4ABE:  BNZ   4AB6
4AC0:  MOVLB  5
4AC2:  BTFSC  x0A.7
4AC4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
4AC6:  MOVLW  04
4AC8:  MOVWF  x0B
4ACA:  MOVLW  EA
4ACC:  MOVWF  x0A
4ACE:  CLRF   x0C
4AD0:  MOVLW  32
4AD2:  MOVWF  x0D
4AD4:  MOVLW  01
4AD6:  MOVWF  x0E
4AD8:  MOVWF  x0F
4ADA:  MOVLB  0
4ADC:  CALL   16E2
....................             else 
4AE0:  BRA    4B26
4AE2:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
4AE4:  MOVLW  04
4AE6:  MOVWF  FEA
4AE8:  MOVLW  EA
4AEA:  MOVWF  FE9
4AEC:  MOVFF  FF2,50A
4AF0:  BCF    FF2.7
4AF2:  MOVLW  00
4AF4:  MOVLB  0
4AF6:  CALL   0C08
4AFA:  TBLRD*-
4AFC:  TBLRD*+
4AFE:  MOVF   FF5,W
4B00:  MOVWF  FEE
4B02:  IORLW  00
4B04:  BNZ   4AFC
4B06:  MOVLB  5
4B08:  BTFSC  x0A.7
4B0A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
4B0C:  MOVLW  04
4B0E:  MOVWF  x0B
4B10:  MOVLW  EA
4B12:  MOVWF  x0A
4B14:  CLRF   x0C
4B16:  MOVLW  32
4B18:  MOVWF  x0D
4B1A:  CLRF   x0E
4B1C:  MOVLW  01
4B1E:  MOVWF  x0F
4B20:  MOVLB  0
4B22:  CALL   16E2
....................                           
....................             visual=0; 
4B26:  MOVLB  4
4B28:  BCF    x95.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
4B2A:  BSF    F92.0
4B2C:  BTFSS  F80.0
4B2E:  BRA    4B4A
....................          {  if(Flanco == 0)  
4B30:  BTFSC  x95.0
4B32:  BRA    4B48
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4B34:  BSF    x95.0
4B36:  MOVLW  1E
4B38:  MOVLB  5
4B3A:  MOVWF  x0B
4B3C:  MOVLB  0
4B3E:  CALL   104A
4B42:  MOVLB  4
4B44:  DECF   xAC,F
4B46:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4B48:  BRA    4B4C
....................                {Flanco = 0;} 
4B4A:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4B4C:  BSF    F92.1
4B4E:  BTFSS  F80.1
4B50:  BRA    4B6C
....................          {  if(Flanco2 == 0)  
4B52:  BTFSC  x95.2
4B54:  BRA    4B6A
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4B56:  BSF    x95.2
4B58:  MOVLW  1E
4B5A:  MOVLB  5
4B5C:  MOVWF  x0B
4B5E:  MOVLB  0
4B60:  CALL   104A
4B64:  MOVLB  4
4B66:  INCF   xAC,F
4B68:  BSF    x95.4
....................                }      
....................          } 
....................             else 
4B6A:  BRA    4B6E
....................                {Flanco2 = 0;}   
4B6C:  BCF    x95.2
....................                 
....................          if(RIGHT)//Si oprime SET 
4B6E:  BSF    F92.2
4B70:  BTFSS  F80.2
4B72:  BRA    4BAC
....................          {  if(Flanco1 == 0)  
4B74:  BTFSC  x95.1
4B76:  BRA    4BAA
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4B78:  BSF    x95.1
4B7A:  MOVLW  02
4B7C:  MOVLB  5
4B7E:  MOVWF  x0A
4B80:  MOVLW  96
4B82:  MOVWF  x0B
4B84:  MOVLB  0
4B86:  CALL   104A
4B8A:  MOVLB  5
4B8C:  DECFSZ x0A,F
4B8E:  BRA    4B80
4B90:  MOVLW  0A
4B92:  MOVLB  4
4B94:  ADDWF  xAC,W
4B96:  MOVWF  xA2
4B98:  MOVLW  01
4B9A:  MOVWF  xAC
4B9C:  MOVLB  5
4B9E:  CLRF   x0B
4BA0:  MOVLB  0
4BA2:  CALL   10B4
4BA6:  MOVLB  4
4BA8:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4BAA:  BRA    4BAE
....................                {Flanco1 = 0;}   
4BAC:  BCF    x95.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
4BAE:  BSF    F92.3
4BB0:  BTFSS  F80.3
4BB2:  BRA    4BDE
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
4BB4:  MOVLW  04
4BB6:  MOVLB  5
4BB8:  MOVWF  x0A
4BBA:  MOVLW  AF
4BBC:  MOVWF  x0B
4BBE:  MOVLB  0
4BC0:  CALL   104A
4BC4:  MOVLB  5
4BC6:  DECFSZ x0A,F
4BC8:  BRA    4BBA
4BCA:  MOVLW  01
4BCC:  MOVLB  4
4BCE:  MOVWF  xA2
4BD0:  MOVLB  5
4BD2:  CLRF   x0B
4BD4:  MOVLB  0
4BD6:  CALL   10B4
4BDA:  MOVLB  4
4BDC:  BSF    x95.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
4BDE:  MOVF   xA2,W
4BE0:  SUBLW  09
4BE2:  BTFSS  FD8.2
4BE4:  BRA    509A
....................          
....................       strcpy(Menus.Letra,"Clave"); 
4BE6:  MOVLW  04
4BE8:  MOVWF  FEA
4BEA:  MOVLW  EA
4BEC:  MOVWF  FE9
4BEE:  MOVFF  FF2,50A
4BF2:  BCF    FF2.7
4BF4:  MOVLW  00
4BF6:  MOVLB  0
4BF8:  CALL   0756
4BFC:  TBLRD*-
4BFE:  TBLRD*+
4C00:  MOVF   FF5,W
4C02:  MOVWF  FEE
4C04:  IORLW  00
4C06:  BNZ   4BFE
4C08:  MOVLB  5
4C0A:  BTFSC  x0A.7
4C0C:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4C0E:  MOVLW  04
4C10:  MOVWF  x0B
4C12:  MOVLW  EA
4C14:  MOVWF  x0A
4C16:  MOVLW  1E
4C18:  MOVWF  x0C
4C1A:  CLRF   x0D
4C1C:  MOVLW  01
4C1E:  MOVWF  x0E
4C20:  MOVLW  02
4C22:  MOVWF  x0F
4C24:  MOVLB  0
4C26:  CALL   16E2
....................        
....................       if(unidad==1) 
4C2A:  MOVLB  4
4C2C:  DECFSZ xA3,W
4C2E:  BRA    4C8E
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4C30:  MOVFF  4D7,50C
4C34:  MOVLW  14
4C36:  MOVLB  5
4C38:  MOVWF  x0D
4C3A:  MOVLW  1E
4C3C:  MOVWF  x0E
4C3E:  MOVLW  01
4C40:  MOVWF  x0F
4C42:  MOVLB  0
4C44:  CALL   1908
....................          displayContrasena(Contrasena[1],40,30,0); 
4C48:  MOVFF  4D8,50C
4C4C:  MOVLW  28
4C4E:  MOVLB  5
4C50:  MOVWF  x0D
4C52:  MOVLW  1E
4C54:  MOVWF  x0E
4C56:  CLRF   x0F
4C58:  MOVLB  0
4C5A:  CALL   1908
....................          displayContrasena(Contrasena[2],60,30,0); 
4C5E:  MOVFF  4D9,50C
4C62:  MOVLW  3C
4C64:  MOVLB  5
4C66:  MOVWF  x0D
4C68:  MOVLW  1E
4C6A:  MOVWF  x0E
4C6C:  CLRF   x0F
4C6E:  MOVLB  0
4C70:  CALL   1908
....................          displayContrasena(Contrasena[3],80,30,0); 
4C74:  MOVFF  4DA,50C
4C78:  MOVLW  50
4C7A:  MOVLB  5
4C7C:  MOVWF  x0D
4C7E:  MOVLW  1E
4C80:  MOVWF  x0E
4C82:  CLRF   x0F
4C84:  MOVLB  0
4C86:  CALL   1908
....................       } 
....................       else 
4C8A:  BRA    4DB6
4C8C:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4C8E:  MOVF   xA3,W
4C90:  SUBLW  02
4C92:  BNZ   4CF2
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
4C94:  MOVFF  4D7,50C
4C98:  MOVLW  14
4C9A:  MOVLB  5
4C9C:  MOVWF  x0D
4C9E:  MOVLW  1E
4CA0:  MOVWF  x0E
4CA2:  CLRF   x0F
4CA4:  MOVLB  0
4CA6:  CALL   1908
....................             displayContrasena(Contrasena[1],40,30,1); 
4CAA:  MOVFF  4D8,50C
4CAE:  MOVLW  28
4CB0:  MOVLB  5
4CB2:  MOVWF  x0D
4CB4:  MOVLW  1E
4CB6:  MOVWF  x0E
4CB8:  MOVLW  01
4CBA:  MOVWF  x0F
4CBC:  MOVLB  0
4CBE:  CALL   1908
....................             displayContrasena(Contrasena[2],60,30,0); 
4CC2:  MOVFF  4D9,50C
4CC6:  MOVLW  3C
4CC8:  MOVLB  5
4CCA:  MOVWF  x0D
4CCC:  MOVLW  1E
4CCE:  MOVWF  x0E
4CD0:  CLRF   x0F
4CD2:  MOVLB  0
4CD4:  CALL   1908
....................             displayContrasena(Contrasena[3],80,30,0); 
4CD8:  MOVFF  4DA,50C
4CDC:  MOVLW  50
4CDE:  MOVLB  5
4CE0:  MOVWF  x0D
4CE2:  MOVLW  1E
4CE4:  MOVWF  x0E
4CE6:  CLRF   x0F
4CE8:  MOVLB  0
4CEA:  CALL   1908
....................          } 
....................          else 
4CEE:  BRA    4DB6
4CF0:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4CF2:  MOVF   xA3,W
4CF4:  SUBLW  03
4CF6:  BNZ   4D56
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4CF8:  MOVFF  4D7,50C
4CFC:  MOVLW  14
4CFE:  MOVLB  5
4D00:  MOVWF  x0D
4D02:  MOVLW  1E
4D04:  MOVWF  x0E
4D06:  CLRF   x0F
4D08:  MOVLB  0
4D0A:  CALL   1908
....................                displayContrasena(Contrasena[1],40,30,0); 
4D0E:  MOVFF  4D8,50C
4D12:  MOVLW  28
4D14:  MOVLB  5
4D16:  MOVWF  x0D
4D18:  MOVLW  1E
4D1A:  MOVWF  x0E
4D1C:  CLRF   x0F
4D1E:  MOVLB  0
4D20:  CALL   1908
....................                displayContrasena(Contrasena[2],60,30,1); 
4D24:  MOVFF  4D9,50C
4D28:  MOVLW  3C
4D2A:  MOVLB  5
4D2C:  MOVWF  x0D
4D2E:  MOVLW  1E
4D30:  MOVWF  x0E
4D32:  MOVLW  01
4D34:  MOVWF  x0F
4D36:  MOVLB  0
4D38:  CALL   1908
....................                displayContrasena(Contrasena[3],80,30,0); 
4D3C:  MOVFF  4DA,50C
4D40:  MOVLW  50
4D42:  MOVLB  5
4D44:  MOVWF  x0D
4D46:  MOVLW  1E
4D48:  MOVWF  x0E
4D4A:  CLRF   x0F
4D4C:  MOVLB  0
4D4E:  CALL   1908
....................             } 
....................             else 
4D52:  BRA    4DB6
4D54:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4D56:  MOVF   xA3,W
4D58:  SUBLW  04
4D5A:  BNZ   4DB8
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4D5C:  MOVFF  4D7,50C
4D60:  MOVLW  14
4D62:  MOVLB  5
4D64:  MOVWF  x0D
4D66:  MOVLW  1E
4D68:  MOVWF  x0E
4D6A:  CLRF   x0F
4D6C:  MOVLB  0
4D6E:  CALL   1908
....................                   displayContrasena(Contrasena[1],40,30,0); 
4D72:  MOVFF  4D8,50C
4D76:  MOVLW  28
4D78:  MOVLB  5
4D7A:  MOVWF  x0D
4D7C:  MOVLW  1E
4D7E:  MOVWF  x0E
4D80:  CLRF   x0F
4D82:  MOVLB  0
4D84:  CALL   1908
....................                   displayContrasena(Contrasena[2],60,30,0); 
4D88:  MOVFF  4D9,50C
4D8C:  MOVLW  3C
4D8E:  MOVLB  5
4D90:  MOVWF  x0D
4D92:  MOVLW  1E
4D94:  MOVWF  x0E
4D96:  CLRF   x0F
4D98:  MOVLB  0
4D9A:  CALL   1908
....................                   displayContrasena(Contrasena[3],80,30,1); 
4D9E:  MOVFF  4DA,50C
4DA2:  MOVLW  50
4DA4:  MOVLB  5
4DA6:  MOVWF  x0D
4DA8:  MOVLW  1E
4DAA:  MOVWF  x0E
4DAC:  MOVLW  01
4DAE:  MOVWF  x0F
4DB0:  MOVLB  0
4DB2:  CALL   1908
4DB6:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4DB8:  BSF    F92.0
4DBA:  BTFSS  F80.0
4DBC:  BRA    4E26
....................       { 
....................          if(Flanco == 0) 
4DBE:  BTFSC  x95.0
4DC0:  BRA    4E24
....................          { 
....................             Flanco = 1;delay_ms(30); 
4DC2:  BSF    x95.0
4DC4:  MOVLW  1E
4DC6:  MOVLB  5
4DC8:  MOVWF  x0B
4DCA:  MOVLB  0
4DCC:  CALL   104A
....................             for(i=1;i<=4;i++) 
4DD0:  MOVLW  01
4DD2:  MOVLB  4
4DD4:  MOVWF  xA4
4DD6:  MOVF   xA4,W
4DD8:  SUBLW  04
4DDA:  BNC   4E24
....................             { 
....................                if(unidad==i) 
4DDC:  MOVF   xA4,W
4DDE:  SUBWF  xA3,W
4DE0:  BNZ   4E20
....................                { 
....................                   Contrasena[i-1]++; 
4DE2:  MOVLW  01
4DE4:  SUBWF  xA4,W
4DE6:  CLRF   03
4DE8:  ADDLW  D7
4DEA:  MOVWF  FE9
4DEC:  MOVLW  04
4DEE:  ADDWFC 03,W
4DF0:  MOVWF  FEA
4DF2:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4DF4:  MOVLW  01
4DF6:  SUBWF  xA4,W
4DF8:  CLRF   03
4DFA:  ADDLW  D7
4DFC:  MOVWF  FE9
4DFE:  MOVLW  04
4E00:  ADDWFC 03,W
4E02:  MOVWF  FEA
4E04:  BTFSC  FEF.7
4E06:  BRA    4E20
4E08:  MOVF   FEF,W
4E0A:  SUBLW  09
4E0C:  BC    4E20
....................                   { 
....................                      Contrasena[i-1]=0; 
4E0E:  MOVLW  01
4E10:  SUBWF  xA4,W
4E12:  CLRF   03
4E14:  ADDLW  D7
4E16:  MOVWF  FE9
4E18:  MOVLW  04
4E1A:  ADDWFC 03,W
4E1C:  MOVWF  FEA
4E1E:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4E20:  INCF   xA4,F
4E22:  BRA    4DD6
....................          } 
....................       } 
....................       else 
4E24:  BRA    4E28
....................       { 
....................          Flanco = 0; 
4E26:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4E28:  BSF    F92.1
4E2A:  BTFSS  F80.1
4E2C:  BRA    4E94
....................       { 
....................          if(Flanco2 == 0) 
4E2E:  BTFSC  x95.2
4E30:  BRA    4E92
....................             {Flanco2 = 1;delay_ms(30); 
4E32:  BSF    x95.2
4E34:  MOVLW  1E
4E36:  MOVLB  5
4E38:  MOVWF  x0B
4E3A:  MOVLB  0
4E3C:  CALL   104A
....................                for(i=1;i<=4;i++) 
4E40:  MOVLW  01
4E42:  MOVLB  4
4E44:  MOVWF  xA4
4E46:  MOVF   xA4,W
4E48:  SUBLW  04
4E4A:  BNC   4E92
....................                { 
....................                   if(unidad==i) 
4E4C:  MOVF   xA4,W
4E4E:  SUBWF  xA3,W
4E50:  BNZ   4E8E
....................                   {Contrasena[i-1]--;  
4E52:  MOVLW  01
4E54:  SUBWF  xA4,W
4E56:  CLRF   03
4E58:  ADDLW  D7
4E5A:  MOVWF  FE9
4E5C:  MOVLW  04
4E5E:  ADDWFC 03,W
4E60:  MOVWF  FEA
4E62:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4E64:  MOVLW  01
4E66:  SUBWF  xA4,W
4E68:  CLRF   03
4E6A:  ADDLW  D7
4E6C:  MOVWF  FE9
4E6E:  MOVLW  04
4E70:  ADDWFC 03,W
4E72:  MOVWF  FEA
4E74:  BTFSC  FEF.7
4E76:  BRA    4E7A
4E78:  BRA    4E8E
....................                         {Contrasena[i-1]=9;} 
4E7A:  MOVLW  01
4E7C:  SUBWF  xA4,W
4E7E:  CLRF   03
4E80:  ADDLW  D7
4E82:  MOVWF  FE9
4E84:  MOVLW  04
4E86:  ADDWFC 03,W
4E88:  MOVWF  FEA
4E8A:  MOVLW  09
4E8C:  MOVWF  FEF
....................                   } 
....................                }       
4E8E:  INCF   xA4,F
4E90:  BRA    4E46
....................             }      
....................       } 
....................       else 
4E92:  BRA    4E96
....................       { 
....................          Flanco2 = 0; 
4E94:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4E96:  BSF    F92.2
4E98:  BTFSS  F80.2
4E9A:  BRA    4EBE
....................       { 
....................          if(Flanco1 == 0) 
4E9C:  BTFSC  x95.1
4E9E:  BRA    4EBC
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4EA0:  BSF    x95.1
4EA2:  MOVLW  02
4EA4:  MOVLB  5
4EA6:  MOVWF  x0A
4EA8:  MOVLW  96
4EAA:  MOVWF  x0B
4EAC:  MOVLB  0
4EAE:  CALL   104A
4EB2:  MOVLB  5
4EB4:  DECFSZ x0A,F
4EB6:  BRA    4EA8
4EB8:  MOVLB  4
4EBA:  INCF   xA3,F
....................       } 
....................       else 
4EBC:  BRA    4EC0
....................       { 
....................          Flanco1 = 0; 
4EBE:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4EC0:  BSF    F92.3
4EC2:  BTFSS  F80.3
4EC4:  BRA    4EEE
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4EC6:  MOVLW  04
4EC8:  MOVLB  5
4ECA:  MOVWF  x0A
4ECC:  MOVLW  AF
4ECE:  MOVWF  x0B
4ED0:  MOVLB  0
4ED2:  CALL   104A
4ED6:  MOVLB  5
4ED8:  DECFSZ x0A,F
4EDA:  BRA    4ECC
4EDC:  MOVLW  01
4EDE:  MOVLB  4
4EE0:  MOVWF  xA2
4EE2:  MOVLB  5
4EE4:  CLRF   x0B
4EE6:  MOVLB  0
4EE8:  CALL   10B4
4EEC:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4EEE:  MOVF   xA3,W
4EF0:  SUBLW  04
4EF2:  BTFSC  FD8.0
4EF4:  BRA    509A
....................       {glcd_fillScreen(OFF); 
4EF6:  MOVLB  5
4EF8:  CLRF   x0B
4EFA:  MOVLB  0
4EFC:  CALL   10B4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4F00:  MOVLB  4
4F02:  MOVF   xDB,W
4F04:  SUBWF  xD7,W
4F06:  BNZ   4FD8
4F08:  MOVF   xDC,W
4F0A:  SUBWF  xD8,W
4F0C:  BNZ   4FD8
4F0E:  MOVF   xDD,W
4F10:  SUBWF  xD9,W
4F12:  BNZ   4FD8
4F14:  MOVF   xDE,W
4F16:  SUBWF  xDA,W
4F18:  BNZ   4FD8
....................          { 
....................             glcd_fillScreen(OFF); 
4F1A:  MOVLB  5
4F1C:  CLRF   x0B
4F1E:  MOVLB  0
4F20:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
4F24:  MOVLW  04
4F26:  MOVWF  FEA
4F28:  MOVLW  EA
4F2A:  MOVWF  FE9
4F2C:  MOVFF  FF2,50A
4F30:  BCF    FF2.7
4F32:  MOVLW  00
4F34:  CALL   0756
4F38:  TBLRD*-
4F3A:  TBLRD*+
4F3C:  MOVF   FF5,W
4F3E:  MOVWF  FEE
4F40:  IORLW  00
4F42:  BNZ   4F3A
4F44:  MOVLB  5
4F46:  BTFSC  x0A.7
4F48:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4F4A:  MOVLW  04
4F4C:  MOVWF  x0B
4F4E:  MOVLW  EA
4F50:  MOVWF  x0A
4F52:  MOVLW  1E
4F54:  MOVWF  x0C
4F56:  CLRF   x0D
4F58:  CLRF   x0E
4F5A:  MOVLW  02
4F5C:  MOVWF  x0F
4F5E:  MOVLB  0
4F60:  CALL   16E2
....................             strcpy(Menus.Letra,"Correcta"); 
4F64:  MOVLW  04
4F66:  MOVWF  FEA
4F68:  MOVLW  EA
4F6A:  MOVWF  FE9
4F6C:  MOVFF  FF2,50A
4F70:  BCF    FF2.7
4F72:  MOVLW  00
4F74:  CALL   0776
4F78:  TBLRD*-
4F7A:  TBLRD*+
4F7C:  MOVF   FF5,W
4F7E:  MOVWF  FEE
4F80:  IORLW  00
4F82:  BNZ   4F7A
4F84:  MOVLB  5
4F86:  BTFSC  x0A.7
4F88:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4F8A:  MOVLW  04
4F8C:  MOVWF  x0B
4F8E:  MOVLW  EA
4F90:  MOVWF  x0A
4F92:  MOVLW  0F
4F94:  MOVWF  x0C
4F96:  MOVLW  1E
4F98:  MOVWF  x0D
4F9A:  CLRF   x0E
4F9C:  MOVLW  02
4F9E:  MOVWF  x0F
4FA0:  MOVLB  0
4FA2:  CALL   16E2
....................             Menu=91;glcd_update();delay_ms(1000); 
4FA6:  MOVLW  5B
4FA8:  MOVLB  4
4FAA:  MOVWF  xA2
4FAC:  MOVLB  0
4FAE:  CALL   110E
4FB2:  MOVLW  04
4FB4:  MOVLB  5
4FB6:  MOVWF  x0A
4FB8:  MOVLW  FA
4FBA:  MOVWF  x0B
4FBC:  MOVLB  0
4FBE:  CALL   104A
4FC2:  MOVLB  5
4FC4:  DECFSZ x0A,F
4FC6:  BRA    4FB8
....................             glcd_fillScreen(OFF);unidad=1; 
4FC8:  CLRF   x0B
4FCA:  MOVLB  0
4FCC:  CALL   10B4
4FD0:  MOVLW  01
4FD2:  MOVLB  4
4FD4:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4FD6:  BRA    509A
....................          { 
....................             glcd_fillScreen(OFF); 
4FD8:  MOVLB  5
4FDA:  CLRF   x0B
4FDC:  MOVLB  0
4FDE:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
4FE2:  MOVLW  04
4FE4:  MOVWF  FEA
4FE6:  MOVLW  EA
4FE8:  MOVWF  FE9
4FEA:  MOVFF  FF2,50A
4FEE:  BCF    FF2.7
4FF0:  MOVLW  00
4FF2:  CALL   0756
4FF6:  TBLRD*-
4FF8:  TBLRD*+
4FFA:  MOVF   FF5,W
4FFC:  MOVWF  FEE
4FFE:  IORLW  00
5000:  BNZ   4FF8
5002:  MOVLB  5
5004:  BTFSC  x0A.7
5006:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
5008:  MOVLW  04
500A:  MOVWF  x0B
500C:  MOVLW  EA
500E:  MOVWF  x0A
5010:  MOVLW  1E
5012:  MOVWF  x0C
5014:  CLRF   x0D
5016:  CLRF   x0E
5018:  MOVLW  02
501A:  MOVWF  x0F
501C:  MOVLB  0
501E:  CALL   16E2
....................             strcpy(Menus.Letra,"Incorrecta"); 
5022:  MOVLW  04
5024:  MOVWF  FEA
5026:  MOVLW  EA
5028:  MOVWF  FE9
502A:  MOVFF  FF2,50A
502E:  BCF    FF2.7
5030:  MOVLW  00
5032:  CALL   079A
5036:  TBLRD*-
5038:  TBLRD*+
503A:  MOVF   FF5,W
503C:  MOVWF  FEE
503E:  IORLW  00
5040:  BNZ   5038
5042:  MOVLB  5
5044:  BTFSC  x0A.7
5046:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
5048:  MOVLW  04
504A:  MOVWF  x0B
504C:  MOVLW  EA
504E:  MOVWF  x0A
5050:  CLRF   x0C
5052:  MOVLW  1E
5054:  MOVWF  x0D
5056:  CLRF   x0E
5058:  MOVLW  02
505A:  MOVWF  x0F
505C:  MOVLB  0
505E:  CALL   16E2
....................             Menu=1;glcd_update();delay_ms(1000); 
5062:  MOVLW  01
5064:  MOVLB  4
5066:  MOVWF  xA2
5068:  MOVLB  0
506A:  CALL   110E
506E:  MOVLW  04
5070:  MOVLB  5
5072:  MOVWF  x0A
5074:  MOVLW  FA
5076:  MOVWF  x0B
5078:  MOVLB  0
507A:  CALL   104A
507E:  MOVLB  5
5080:  DECFSZ x0A,F
5082:  BRA    5074
....................             glcd_fillScreen(OFF);unidad=1; 
5084:  CLRF   x0B
5086:  MOVLB  0
5088:  CALL   10B4
508C:  MOVLW  01
508E:  MOVLB  4
5090:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
5092:  CLRF   xD7
5094:  CLRF   xD8
5096:  CLRF   xD9
5098:  CLRF   xDA
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
509A:  MOVF   xA2,W
509C:  SUBLW  5B
509E:  BTFSS  FD8.2
50A0:  BRA    547A
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
50A2:  MOVLW  04
50A4:  MOVWF  FEA
50A6:  MOVLW  EA
50A8:  MOVWF  FE9
50AA:  MOVFF  FF2,50A
50AE:  BCF    FF2.7
50B0:  MOVLW  00
50B2:  MOVLB  0
50B4:  CALL   0C2C
50B8:  TBLRD*-
50BA:  TBLRD*+
50BC:  MOVF   FF5,W
50BE:  MOVWF  FEE
50C0:  IORLW  00
50C2:  BNZ   50BA
50C4:  MOVLB  5
50C6:  BTFSC  x0A.7
50C8:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
50CA:  MOVLW  04
50CC:  MOVWF  x0B
50CE:  MOVLW  EA
50D0:  MOVWF  x0A
50D2:  CLRF   x0C
50D4:  CLRF   x0D
50D6:  MOVLW  01
50D8:  MOVWF  x0E
50DA:  MOVLW  02
50DC:  MOVWF  x0F
50DE:  MOVLB  0
50E0:  CALL   16E2
....................        
....................       if(unidad==1) 
50E4:  MOVLB  4
50E6:  DECFSZ xA3,W
50E8:  BRA    5148
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
50EA:  MOVFF  4DB,50C
50EE:  MOVLW  14
50F0:  MOVLB  5
50F2:  MOVWF  x0D
50F4:  MOVLW  1E
50F6:  MOVWF  x0E
50F8:  MOVLW  01
50FA:  MOVWF  x0F
50FC:  MOVLB  0
50FE:  CALL   1908
....................          displayContrasena(Password[1],40,30,0); 
5102:  MOVFF  4DC,50C
5106:  MOVLW  28
5108:  MOVLB  5
510A:  MOVWF  x0D
510C:  MOVLW  1E
510E:  MOVWF  x0E
5110:  CLRF   x0F
5112:  MOVLB  0
5114:  CALL   1908
....................          displayContrasena(Password[2],60,30,0); 
5118:  MOVFF  4DD,50C
511C:  MOVLW  3C
511E:  MOVLB  5
5120:  MOVWF  x0D
5122:  MOVLW  1E
5124:  MOVWF  x0E
5126:  CLRF   x0F
5128:  MOVLB  0
512A:  CALL   1908
....................          displayContrasena(Password[3],80,30,0); 
512E:  MOVFF  4DE,50C
5132:  MOVLW  50
5134:  MOVLB  5
5136:  MOVWF  x0D
5138:  MOVLW  1E
513A:  MOVWF  x0E
513C:  CLRF   x0F
513E:  MOVLB  0
5140:  CALL   1908
....................       } 
....................       else 
5144:  BRA    5270
5146:  MOVLB  4
....................       { 
....................          if(unidad==2) 
5148:  MOVF   xA3,W
514A:  SUBLW  02
514C:  BNZ   51AC
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
514E:  MOVFF  4DB,50C
5152:  MOVLW  14
5154:  MOVLB  5
5156:  MOVWF  x0D
5158:  MOVLW  1E
515A:  MOVWF  x0E
515C:  CLRF   x0F
515E:  MOVLB  0
5160:  CALL   1908
....................             displayContrasena(Password[1],40,30,1); 
5164:  MOVFF  4DC,50C
5168:  MOVLW  28
516A:  MOVLB  5
516C:  MOVWF  x0D
516E:  MOVLW  1E
5170:  MOVWF  x0E
5172:  MOVLW  01
5174:  MOVWF  x0F
5176:  MOVLB  0
5178:  CALL   1908
....................             displayContrasena(Password[2],60,30,0); 
517C:  MOVFF  4DD,50C
5180:  MOVLW  3C
5182:  MOVLB  5
5184:  MOVWF  x0D
5186:  MOVLW  1E
5188:  MOVWF  x0E
518A:  CLRF   x0F
518C:  MOVLB  0
518E:  CALL   1908
....................             displayContrasena(Password[3],80,30,0); 
5192:  MOVFF  4DE,50C
5196:  MOVLW  50
5198:  MOVLB  5
519A:  MOVWF  x0D
519C:  MOVLW  1E
519E:  MOVWF  x0E
51A0:  CLRF   x0F
51A2:  MOVLB  0
51A4:  CALL   1908
....................          } 
....................          else 
51A8:  BRA    5270
51AA:  MOVLB  4
....................          { 
....................             if(unidad==3) 
51AC:  MOVF   xA3,W
51AE:  SUBLW  03
51B0:  BNZ   5210
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
51B2:  MOVFF  4DB,50C
51B6:  MOVLW  14
51B8:  MOVLB  5
51BA:  MOVWF  x0D
51BC:  MOVLW  1E
51BE:  MOVWF  x0E
51C0:  CLRF   x0F
51C2:  MOVLB  0
51C4:  CALL   1908
....................                displayContrasena(Password[1],40,30,0); 
51C8:  MOVFF  4DC,50C
51CC:  MOVLW  28
51CE:  MOVLB  5
51D0:  MOVWF  x0D
51D2:  MOVLW  1E
51D4:  MOVWF  x0E
51D6:  CLRF   x0F
51D8:  MOVLB  0
51DA:  CALL   1908
....................                displayContrasena(Password[2],60,30,1); 
51DE:  MOVFF  4DD,50C
51E2:  MOVLW  3C
51E4:  MOVLB  5
51E6:  MOVWF  x0D
51E8:  MOVLW  1E
51EA:  MOVWF  x0E
51EC:  MOVLW  01
51EE:  MOVWF  x0F
51F0:  MOVLB  0
51F2:  CALL   1908
....................                displayContrasena(Password[3],80,30,0); 
51F6:  MOVFF  4DE,50C
51FA:  MOVLW  50
51FC:  MOVLB  5
51FE:  MOVWF  x0D
5200:  MOVLW  1E
5202:  MOVWF  x0E
5204:  CLRF   x0F
5206:  MOVLB  0
5208:  CALL   1908
....................             } 
....................             else 
520C:  BRA    5270
520E:  MOVLB  4
....................             { 
....................                if(unidad==4) 
5210:  MOVF   xA3,W
5212:  SUBLW  04
5214:  BNZ   5272
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
5216:  MOVFF  4DB,50C
521A:  MOVLW  14
521C:  MOVLB  5
521E:  MOVWF  x0D
5220:  MOVLW  1E
5222:  MOVWF  x0E
5224:  CLRF   x0F
5226:  MOVLB  0
5228:  CALL   1908
....................                   displayContrasena(Password[1],40,30,0); 
522C:  MOVFF  4DC,50C
5230:  MOVLW  28
5232:  MOVLB  5
5234:  MOVWF  x0D
5236:  MOVLW  1E
5238:  MOVWF  x0E
523A:  CLRF   x0F
523C:  MOVLB  0
523E:  CALL   1908
....................                   displayContrasena(Password[2],60,30,0); 
5242:  MOVFF  4DD,50C
5246:  MOVLW  3C
5248:  MOVLB  5
524A:  MOVWF  x0D
524C:  MOVLW  1E
524E:  MOVWF  x0E
5250:  CLRF   x0F
5252:  MOVLB  0
5254:  CALL   1908
....................                   displayContrasena(Password[3],80,30,1); 
5258:  MOVFF  4DE,50C
525C:  MOVLW  50
525E:  MOVLB  5
5260:  MOVWF  x0D
5262:  MOVLW  1E
5264:  MOVWF  x0E
5266:  MOVLW  01
5268:  MOVWF  x0F
526A:  MOVLB  0
526C:  CALL   1908
5270:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
5272:  BSF    F92.0
5274:  BTFSS  F80.0
5276:  BRA    52E0
....................       { 
....................          if(Flanco == 0) 
5278:  BTFSC  x95.0
527A:  BRA    52DE
....................          { 
....................             Flanco = 1;delay_ms(30); 
527C:  BSF    x95.0
527E:  MOVLW  1E
5280:  MOVLB  5
5282:  MOVWF  x0B
5284:  MOVLB  0
5286:  CALL   104A
....................             for(i=1;i<=4;i++) 
528A:  MOVLW  01
528C:  MOVLB  4
528E:  MOVWF  xA4
5290:  MOVF   xA4,W
5292:  SUBLW  04
5294:  BNC   52DE
....................             { 
....................                if(unidad==i) 
5296:  MOVF   xA4,W
5298:  SUBWF  xA3,W
529A:  BNZ   52DA
....................                { 
....................                   Password[i-1]++; 
529C:  MOVLW  01
529E:  SUBWF  xA4,W
52A0:  CLRF   03
52A2:  ADDLW  DB
52A4:  MOVWF  FE9
52A6:  MOVLW  04
52A8:  ADDWFC 03,W
52AA:  MOVWF  FEA
52AC:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
52AE:  MOVLW  01
52B0:  SUBWF  xA4,W
52B2:  CLRF   03
52B4:  ADDLW  DB
52B6:  MOVWF  FE9
52B8:  MOVLW  04
52BA:  ADDWFC 03,W
52BC:  MOVWF  FEA
52BE:  BTFSC  FEF.7
52C0:  BRA    52DA
52C2:  MOVF   FEF,W
52C4:  SUBLW  09
52C6:  BC    52DA
....................                   { 
....................                      Password[i-1]=0; 
52C8:  MOVLW  01
52CA:  SUBWF  xA4,W
52CC:  CLRF   03
52CE:  ADDLW  DB
52D0:  MOVWF  FE9
52D2:  MOVLW  04
52D4:  ADDWFC 03,W
52D6:  MOVWF  FEA
52D8:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
52DA:  INCF   xA4,F
52DC:  BRA    5290
....................          } 
....................       } 
....................       else 
52DE:  BRA    52E2
....................       { 
....................          Flanco = 0; 
52E0:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
52E2:  BSF    F92.1
52E4:  BTFSS  F80.1
52E6:  BRA    534E
....................       { 
....................          if(Flanco2 == 0) 
52E8:  BTFSC  x95.2
52EA:  BRA    534C
....................             {Flanco2 = 1;delay_ms(30); 
52EC:  BSF    x95.2
52EE:  MOVLW  1E
52F0:  MOVLB  5
52F2:  MOVWF  x0B
52F4:  MOVLB  0
52F6:  CALL   104A
....................                for(i=1;i<=4;i++) 
52FA:  MOVLW  01
52FC:  MOVLB  4
52FE:  MOVWF  xA4
5300:  MOVF   xA4,W
5302:  SUBLW  04
5304:  BNC   534C
....................                { 
....................                   if(unidad==i) 
5306:  MOVF   xA4,W
5308:  SUBWF  xA3,W
530A:  BNZ   5348
....................                   { 
....................                      Password[i-1]--; 
530C:  MOVLW  01
530E:  SUBWF  xA4,W
5310:  CLRF   03
5312:  ADDLW  DB
5314:  MOVWF  FE9
5316:  MOVLW  04
5318:  ADDWFC 03,W
531A:  MOVWF  FEA
531C:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
531E:  MOVLW  01
5320:  SUBWF  xA4,W
5322:  CLRF   03
5324:  ADDLW  DB
5326:  MOVWF  FE9
5328:  MOVLW  04
532A:  ADDWFC 03,W
532C:  MOVWF  FEA
532E:  BTFSC  FEF.7
5330:  BRA    5334
5332:  BRA    5348
....................                      { 
....................                         Password[i-1]=9; 
5334:  MOVLW  01
5336:  SUBWF  xA4,W
5338:  CLRF   03
533A:  ADDLW  DB
533C:  MOVWF  FE9
533E:  MOVLW  04
5340:  ADDWFC 03,W
5342:  MOVWF  FEA
5344:  MOVLW  09
5346:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
5348:  INCF   xA4,F
534A:  BRA    5300
....................             }      
....................       } 
....................       else 
534C:  BRA    5350
....................       { 
....................          Flanco2 = 0; 
534E:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
5350:  BSF    F92.2
5352:  BTFSS  F80.2
5354:  BRA    5378
....................       { 
....................          if(Flanco1 == 0) 
5356:  BTFSC  x95.1
5358:  BRA    5376
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
535A:  BSF    x95.1
535C:  MOVLW  02
535E:  MOVLB  5
5360:  MOVWF  x0A
5362:  MOVLW  96
5364:  MOVWF  x0B
5366:  MOVLB  0
5368:  CALL   104A
536C:  MOVLB  5
536E:  DECFSZ x0A,F
5370:  BRA    5362
5372:  MOVLB  4
5374:  INCF   xA3,F
....................       } 
....................       else 
5376:  BRA    537A
....................       { 
....................          Flanco1 = 0; 
5378:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
537A:  BSF    F92.3
537C:  BTFSS  F80.3
537E:  BRA    53A8
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
5380:  MOVLW  04
5382:  MOVLB  5
5384:  MOVWF  x0A
5386:  MOVLW  AF
5388:  MOVWF  x0B
538A:  MOVLB  0
538C:  CALL   104A
5390:  MOVLB  5
5392:  DECFSZ x0A,F
5394:  BRA    5386
5396:  MOVLW  01
5398:  MOVLB  4
539A:  MOVWF  xA2
539C:  MOVLB  5
539E:  CLRF   x0B
53A0:  MOVLB  0
53A2:  CALL   10B4
53A6:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
53A8:  MOVF   xA3,W
53AA:  SUBLW  04
53AC:  BC    547A
....................       { 
....................          Opcion=1;unidad=1; 
53AE:  MOVLW  01
53B0:  MOVWF  xAC
53B2:  MOVWF  xA3
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
53B4:  MOVLW  0A
53B6:  MOVWF  FA9
53B8:  MOVFF  4DB,FA8
53BC:  BCF    FA6.6
53BE:  BCF    FA6.7
53C0:  BSF    FA6.2
53C2:  MOVF   FF2,W
53C4:  MOVWF  00
53C6:  BCF    FF2.7
53C8:  MOVLB  F
53CA:  MOVLW  55
53CC:  MOVWF  FA7
53CE:  MOVLW  AA
53D0:  MOVWF  FA7
53D2:  BSF    FA6.1
53D4:  BTFSC  FA6.1
53D6:  BRA    53D4
53D8:  BCF    FA6.2
53DA:  MOVF   00,W
53DC:  IORWF  FF2,F
53DE:  MOVLW  0B
53E0:  MOVWF  FA9
53E2:  MOVFF  4DC,FA8
53E6:  BCF    FA6.6
53E8:  BCF    FA6.7
53EA:  BSF    FA6.2
53EC:  MOVF   FF2,W
53EE:  MOVWF  00
53F0:  BCF    FF2.7
53F2:  MOVLW  55
53F4:  MOVWF  FA7
53F6:  MOVLW  AA
53F8:  MOVWF  FA7
53FA:  BSF    FA6.1
53FC:  BTFSC  FA6.1
53FE:  BRA    53FC
5400:  BCF    FA6.2
5402:  MOVF   00,W
5404:  IORWF  FF2,F
5406:  MOVLW  0C
5408:  MOVWF  FA9
540A:  MOVFF  4DD,FA8
540E:  BCF    FA6.6
5410:  BCF    FA6.7
5412:  BSF    FA6.2
5414:  MOVF   FF2,W
5416:  MOVWF  00
5418:  BCF    FF2.7
541A:  MOVLW  55
541C:  MOVWF  FA7
541E:  MOVLW  AA
5420:  MOVWF  FA7
5422:  BSF    FA6.1
5424:  BTFSC  FA6.1
5426:  BRA    5424
5428:  BCF    FA6.2
542A:  MOVF   00,W
542C:  IORWF  FF2,F
542E:  MOVLW  0D
5430:  MOVWF  FA9
5432:  MOVFF  4DE,FA8
5436:  BCF    FA6.6
5438:  BCF    FA6.7
543A:  BSF    FA6.2
543C:  MOVF   FF2,W
543E:  MOVWF  00
5440:  BCF    FF2.7
5442:  MOVLW  55
5444:  MOVWF  FA7
5446:  MOVLW  AA
5448:  MOVWF  FA7
544A:  BSF    FA6.1
544C:  BTFSC  FA6.1
544E:  BRA    544C
5450:  BCF    FA6.2
5452:  MOVF   00,W
5454:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
5456:  MOVLW  04
5458:  MOVLB  5
545A:  MOVWF  x0A
545C:  MOVLW  FA
545E:  MOVWF  x0B
5460:  MOVLB  0
5462:  CALL   104A
5466:  MOVLB  5
5468:  DECFSZ x0A,F
546A:  BRA    545C
546C:  CLRF   x0B
546E:  MOVLB  0
5470:  CALL   10B4
5474:  MOVLW  01
5476:  MOVLB  4
5478:  MOVWF  xA2
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==10){ // Menu de Presion Atmosferica 
547A:  MOVF   xA2,W
547C:  SUBLW  0A
547E:  BTFSS  FD8.2
5480:  BRA    55E2
....................       
....................       if(visual==1) 
5482:  BTFSS  x95.4
5484:  BRA    5530
....................       {    
....................          glcd_fillScreen(OFF); 
5486:  MOVLB  5
5488:  CLRF   x0B
548A:  MOVLB  0
548C:  CALL   10B4
....................          strcpy(Menus.Letra,"Atmosfera"); 
5490:  MOVLW  04
5492:  MOVWF  FEA
5494:  MOVLW  EA
5496:  MOVWF  FE9
5498:  MOVFF  FF2,50A
549C:  BCF    FF2.7
549E:  MOVLW  00
54A0:  CALL   0C52
54A4:  TBLRD*-
54A6:  TBLRD*+
54A8:  MOVF   FF5,W
54AA:  MOVWF  FEE
54AC:  IORLW  00
54AE:  BNZ   54A6
54B0:  MOVLB  5
54B2:  BTFSC  x0A.7
54B4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
54B6:  MOVLW  04
54B8:  MOVWF  x0B
54BA:  MOVLW  EA
54BC:  MOVWF  x0A
54BE:  CLRF   x0C
54C0:  CLRF   x0D
54C2:  MOVLW  01
54C4:  MOVWF  x0E
54C6:  MOVLW  02
54C8:  MOVWF  x0F
54CA:  MOVLB  0
54CC:  CALL   16E2
....................          strcpy(Menus.Letra,"kpa");displayMenu(Menus.Letra,92,30,2,1); 
54D0:  MOVLW  04
54D2:  MOVWF  FEA
54D4:  MOVLW  EA
54D6:  MOVWF  FE9
54D8:  MOVFF  FF2,50A
54DC:  BCF    FF2.7
54DE:  MOVLW  00
54E0:  CALL   0C76
54E4:  TBLRD*-
54E6:  TBLRD*+
54E8:  MOVF   FF5,W
54EA:  MOVWF  FEE
54EC:  IORLW  00
54EE:  BNZ   54E6
54F0:  MOVLB  5
54F2:  BTFSC  x0A.7
54F4:  BSF    FF2.7
54F6:  MOVLW  04
54F8:  MOVWF  x0B
54FA:  MOVLW  EA
54FC:  MOVWF  x0A
54FE:  MOVLW  5C
5500:  MOVWF  x0C
5502:  MOVLW  1E
5504:  MOVWF  x0D
5506:  MOVLW  02
5508:  MOVWF  x0E
550A:  MOVLW  01
550C:  MOVWF  x0F
550E:  MOVLB  0
5510:  CALL   16E2
....................           
....................          displayTiempo(Atmosferica,30,30,0,3); 
5514:  MOVFF  4AA,50B
5518:  MOVLW  1E
551A:  MOVLB  5
551C:  MOVWF  x0C
551E:  MOVWF  x0D
5520:  CLRF   x0E
5522:  MOVLW  03
5524:  MOVWF  x0F
5526:  MOVLB  0
5528:  CALL   24E2
....................          visual=0; 
552C:  MOVLB  4
552E:  BCF    x95.4
....................       } 
....................         
....................        
....................          if(UP)//Si oprime hacia arriba 
5530:  BSF    F92.0
5532:  BTFSS  F80.0
5534:  BRA    5548
....................          {   
....................             delay_ms(30);Atmosferica++;visual=1; 
5536:  MOVLW  1E
5538:  MOVLB  5
553A:  MOVWF  x0B
553C:  MOVLB  0
553E:  CALL   104A
5542:  MOVLB  4
5544:  INCF   xAA,F
5546:  BSF    x95.4
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5548:  BSF    F92.1
554A:  BTFSS  F80.1
554C:  BRA    5560
....................          {   
....................             delay_ms(30);Atmosferica--;visual=1;      
554E:  MOVLW  1E
5550:  MOVLB  5
5552:  MOVWF  x0B
5554:  MOVLB  0
5556:  CALL   104A
555A:  MOVLB  4
555C:  DECF   xAA,F
555E:  BSF    x95.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5560:  BSF    F92.2
5562:  BTFSS  F80.2
5564:  BRA    5576
....................          {   
....................             delay_ms(30);visual=1; 
5566:  MOVLW  1E
5568:  MOVLB  5
556A:  MOVWF  x0B
556C:  MOVLB  0
556E:  CALL   104A
5572:  MOVLB  4
5574:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5576:  BSF    F92.3
5578:  BTFSS  F80.3
557A:  BRA    55E2
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
557C:  MOVLW  04
557E:  MOVLB  5
5580:  MOVWF  x0A
5582:  MOVLW  AF
5584:  MOVWF  x0B
5586:  MOVLB  0
5588:  CALL   104A
558C:  MOVLB  5
558E:  DECFSZ x0A,F
5590:  BRA    5582
5592:  MOVLW  01
5594:  MOVLB  4
5596:  MOVWF  xA2
5598:  MOVLB  5
559A:  CLRF   x0B
559C:  MOVLB  0
559E:  CALL   10B4
55A2:  MOVLW  01
55A4:  MOVLB  4
55A6:  MOVWF  xAC
55A8:  BSF    x95.4
....................             write_eeprom(90,Atmosferica); 
55AA:  MOVLW  5A
55AC:  MOVWF  FA9
55AE:  MOVFF  4AA,FA8
55B2:  BCF    FA6.6
55B4:  BCF    FA6.7
55B6:  BSF    FA6.2
55B8:  MOVF   FF2,W
55BA:  MOVWF  00
55BC:  BCF    FF2.7
55BE:  MOVLB  F
55C0:  MOVLW  55
55C2:  MOVWF  FA7
55C4:  MOVLW  AA
55C6:  MOVWF  FA7
55C8:  BSF    FA6.1
55CA:  BTFSC  FA6.1
55CC:  BRA    55CA
55CE:  BCF    FA6.2
55D0:  MOVF   00,W
55D2:  IORWF  FF2,F
....................             delay_ms(10); 
55D4:  MOVLW  0A
55D6:  MOVLB  5
55D8:  MOVWF  x0B
55DA:  MOVLB  0
55DC:  CALL   104A
55E0:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
55E2:  MOVF   xA2,W
55E4:  SUBLW  0B
55E6:  BTFSS  FD8.2
55E8:  BRA    58EA
....................       
....................       if(visual==1) 
55EA:  BTFSS  x95.4
55EC:  BRA    5778
....................       { 
....................          if(unidad<1) 
55EE:  MOVF   xA3,F
55F0:  BNZ   55F6
....................          {unidad=4;} 
55F2:  MOVLW  04
55F4:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
55F6:  MOVLW  04
55F8:  MOVWF  FEA
55FA:  MOVLW  EA
55FC:  MOVWF  FE9
55FE:  MOVFF  FF2,50A
5602:  BCF    FF2.7
5604:  MOVLW  00
5606:  MOVLB  0
5608:  CALL   0C94
560C:  TBLRD*-
560E:  TBLRD*+
5610:  MOVF   FF5,W
5612:  MOVWF  FEE
5614:  IORLW  00
5616:  BNZ   560E
5618:  MOVLB  5
561A:  BTFSC  x0A.7
561C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
561E:  MOVLW  04
5620:  MOVWF  x0B
5622:  MOVLW  EA
5624:  MOVWF  x0A
5626:  CLRF   x0C
5628:  CLRF   x0D
562A:  MOVLW  01
562C:  MOVWF  x0E
562E:  MOVLW  02
5630:  MOVWF  x0F
5632:  MOVLB  0
5634:  CALL   16E2
....................           
....................          if(unidad==4) 
5638:  MOVLB  4
563A:  MOVF   xA3,W
563C:  SUBLW  04
563E:  BNZ   565E
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
5640:  MOVFF  4CE,50B
5644:  MOVLW  14
5646:  MOVLB  5
5648:  MOVWF  x0C
564A:  MOVLW  28
564C:  MOVWF  x0D
564E:  MOVLW  01
5650:  MOVWF  x0E
5652:  MOVLW  02
5654:  MOVWF  x0F
5656:  MOVLB  0
5658:  CALL   24E2
....................          else 
565C:  BRA    5678
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
565E:  MOVFF  4CE,50B
5662:  MOVLW  14
5664:  MOVLB  5
5666:  MOVWF  x0C
5668:  MOVLW  28
566A:  MOVWF  x0D
566C:  CLRF   x0E
566E:  MOVLW  02
5670:  MOVWF  x0F
5672:  MOVLB  0
5674:  CALL   24E2
....................           
....................          if(unidad==3) 
5678:  MOVLB  4
567A:  MOVF   xA3,W
567C:  SUBLW  03
567E:  BNZ   569C
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
5680:  MOVFF  4CD,50B
5684:  MOVLW  28
5686:  MOVLB  5
5688:  MOVWF  x0C
568A:  MOVWF  x0D
568C:  MOVLW  01
568E:  MOVWF  x0E
5690:  MOVLW  02
5692:  MOVWF  x0F
5694:  MOVLB  0
5696:  CALL   24E2
....................          else 
569A:  BRA    56B4
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
569C:  MOVFF  4CD,50B
56A0:  MOVLW  28
56A2:  MOVLB  5
56A4:  MOVWF  x0C
56A6:  MOVWF  x0D
56A8:  CLRF   x0E
56AA:  MOVLW  02
56AC:  MOVWF  x0F
56AE:  MOVLB  0
56B0:  CALL   24E2
....................           
....................          if(unidad==2) 
56B4:  MOVLB  4
56B6:  MOVF   xA3,W
56B8:  SUBLW  02
56BA:  BNZ   56DA
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
56BC:  MOVFF  4CC,50B
56C0:  MOVLW  46
56C2:  MOVLB  5
56C4:  MOVWF  x0C
56C6:  MOVLW  28
56C8:  MOVWF  x0D
56CA:  MOVLW  01
56CC:  MOVWF  x0E
56CE:  MOVLW  02
56D0:  MOVWF  x0F
56D2:  MOVLB  0
56D4:  CALL   24E2
....................          else 
56D8:  BRA    56F4
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
56DA:  MOVFF  4CC,50B
56DE:  MOVLW  46
56E0:  MOVLB  5
56E2:  MOVWF  x0C
56E4:  MOVLW  28
56E6:  MOVWF  x0D
56E8:  CLRF   x0E
56EA:  MOVLW  02
56EC:  MOVWF  x0F
56EE:  MOVLB  0
56F0:  CALL   24E2
....................           
....................          if(unidad==1) 
56F4:  MOVLB  4
56F6:  DECFSZ xA3,W
56F8:  BRA    5718
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
56FA:  MOVFF  4CB,50B
56FE:  MOVLW  5A
5700:  MOVLB  5
5702:  MOVWF  x0C
5704:  MOVLW  28
5706:  MOVWF  x0D
5708:  MOVLW  01
570A:  MOVWF  x0E
570C:  MOVLW  02
570E:  MOVWF  x0F
5710:  MOVLB  0
5712:  CALL   24E2
....................          else 
5716:  BRA    5732
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
5718:  MOVFF  4CB,50B
571C:  MOVLW  5A
571E:  MOVLB  5
5720:  MOVWF  x0C
5722:  MOVLW  28
5724:  MOVWF  x0D
5726:  CLRF   x0E
5728:  MOVLW  02
572A:  MOVWF  x0F
572C:  MOVLB  0
572E:  CALL   24E2
....................           
....................          strcpy(Menus.Letra,":"); 
5732:  MOVLW  04
5734:  MOVWF  FEA
5736:  MOVLW  EA
5738:  MOVWF  FE9
573A:  MOVFF  FF2,50A
573E:  BCF    FF2.7
5740:  MOVLW  00
5742:  CALL   06BE
5746:  TBLRD*-
5748:  TBLRD*+
574A:  MOVF   FF5,W
574C:  MOVWF  FEE
574E:  IORLW  00
5750:  BNZ   5748
5752:  MOVLB  5
5754:  BTFSC  x0A.7
5756:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
5758:  MOVLW  04
575A:  MOVWF  x0B
575C:  MOVLW  EA
575E:  MOVWF  x0A
5760:  MOVLW  3C
5762:  MOVWF  x0C
5764:  MOVLW  2A
5766:  MOVWF  x0D
5768:  MOVLW  02
576A:  MOVWF  x0E
576C:  MOVWF  x0F
576E:  MOVLB  0
5770:  CALL   16E2
....................           
....................          visual=0; 
5774:  MOVLB  4
5776:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5778:  BSF    F92.0
577A:  BTFSS  F80.0
577C:  BRA    57BA
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
577E:  MOVLW  01
5780:  SUBWF  xA3,W
5782:  CLRF   03
5784:  ADDLW  CB
5786:  MOVWF  FE9
5788:  MOVLW  04
578A:  ADDWFC 03,W
578C:  MOVWF  FEA
578E:  BTFSC  FEF.7
5790:  BRA    5798
5792:  MOVF   FEF,W
5794:  SUBLW  08
5796:  BNC   57BA
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
5798:  MOVLW  1E
579A:  MOVLB  5
579C:  MOVWF  x0B
579E:  MOVLB  0
57A0:  CALL   104A
57A4:  MOVLW  01
57A6:  MOVLB  4
57A8:  SUBWF  xA3,W
57AA:  CLRF   03
57AC:  ADDLW  CB
57AE:  MOVWF  FE9
57B0:  MOVLW  04
57B2:  ADDWFC 03,W
57B4:  MOVWF  FEA
57B6:  INCF   FEF,F
57B8:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
57BA:  BSF    F92.1
57BC:  BTFSS  F80.1
57BE:  BRA    57FC
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
57C0:  MOVLW  01
57C2:  SUBWF  xA3,W
57C4:  CLRF   03
57C6:  ADDLW  CB
57C8:  MOVWF  FE9
57CA:  MOVLW  04
57CC:  ADDWFC 03,W
57CE:  MOVWF  FEA
57D0:  BTFSC  FEF.7
57D2:  BRA    57FC
57D4:  MOVF   FEF,W
57D6:  SUBLW  00
57D8:  BC    57FC
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
57DA:  MOVLW  1E
57DC:  MOVLB  5
57DE:  MOVWF  x0B
57E0:  MOVLB  0
57E2:  CALL   104A
57E6:  MOVLW  01
57E8:  MOVLB  4
57EA:  SUBWF  xA3,W
57EC:  CLRF   03
57EE:  ADDLW  CB
57F0:  MOVWF  FE9
57F2:  MOVLW  04
57F4:  ADDWFC 03,W
57F6:  MOVWF  FEA
57F8:  DECF   FEF,F
57FA:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
57FC:  BSF    F92.2
57FE:  BTFSS  F80.2
5800:  BRA    5814
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5802:  MOVLW  1E
5804:  MOVLB  5
5806:  MOVWF  x0B
5808:  MOVLB  0
580A:  CALL   104A
580E:  MOVLB  4
5810:  DECF   xA3,F
5812:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5814:  BSF    F92.3
5816:  BTFSS  F80.3
5818:  BRA    58EA
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
581A:  MOVLW  04
581C:  MOVLB  5
581E:  MOVWF  x0A
5820:  MOVLW  AF
5822:  MOVWF  x0B
5824:  MOVLB  0
5826:  CALL   104A
582A:  MOVLB  5
582C:  DECFSZ x0A,F
582E:  BRA    5820
5830:  MOVLW  08
5832:  MOVLB  4
5834:  MOVWF  xA2
5836:  MOVLB  5
5838:  CLRF   x0B
583A:  MOVLB  0
583C:  CALL   10B4
5840:  MOVLW  01
5842:  MOVLB  4
5844:  MOVWF  xAC
5846:  BSF    x95.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
5848:  CLRF   FA9
584A:  MOVFF  4CB,FA8
584E:  BCF    FA6.6
5850:  BCF    FA6.7
5852:  BSF    FA6.2
5854:  MOVF   FF2,W
5856:  MOVWF  00
5858:  BCF    FF2.7
585A:  MOVLB  F
585C:  MOVLW  55
585E:  MOVWF  FA7
5860:  MOVLW  AA
5862:  MOVWF  FA7
5864:  BSF    FA6.1
5866:  BTFSC  FA6.1
5868:  BRA    5866
586A:  BCF    FA6.2
586C:  MOVF   00,W
586E:  IORWF  FF2,F
5870:  MOVLW  01
5872:  MOVWF  FA9
5874:  MOVFF  4CC,FA8
5878:  BCF    FA6.6
587A:  BCF    FA6.7
587C:  BSF    FA6.2
587E:  MOVF   FF2,W
5880:  MOVWF  00
5882:  BCF    FF2.7
5884:  MOVLW  55
5886:  MOVWF  FA7
5888:  MOVLW  AA
588A:  MOVWF  FA7
588C:  BSF    FA6.1
588E:  BTFSC  FA6.1
5890:  BRA    588E
5892:  BCF    FA6.2
5894:  MOVF   00,W
5896:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
5898:  MOVLW  02
589A:  MOVWF  FA9
589C:  MOVFF  4CD,FA8
58A0:  BCF    FA6.6
58A2:  BCF    FA6.7
58A4:  BSF    FA6.2
58A6:  MOVFF  FF2,00
58AA:  BCF    FF2.7
58AC:  MOVLW  55
58AE:  MOVWF  FA7
58B0:  MOVLW  AA
58B2:  MOVWF  FA7
58B4:  BSF    FA6.1
58B6:  BTFSC  FA6.1
58B8:  BRA    58B6
58BA:  BCF    FA6.2
58BC:  MOVF   00,W
58BE:  IORWF  FF2,F
58C0:  MOVLW  03
58C2:  MOVWF  FA9
58C4:  MOVFF  4CE,FA8
58C8:  BCF    FA6.6
58CA:  BCF    FA6.7
58CC:  BSF    FA6.2
58CE:  MOVFF  FF2,00
58D2:  BCF    FF2.7
58D4:  MOVLW  55
58D6:  MOVWF  FA7
58D8:  MOVLW  AA
58DA:  MOVWF  FA7
58DC:  BSF    FA6.1
58DE:  BTFSC  FA6.1
58E0:  BRA    58DE
58E2:  BCF    FA6.2
58E4:  MOVF   00,W
58E6:  IORWF  FF2,F
58E8:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
58EA:  MOVF   xA2,W
58EC:  SUBLW  0C
58EE:  BTFSS  FD8.2
58F0:  BRA    5BF4
....................       
....................       if(visual==1) 
58F2:  BTFSS  x95.4
58F4:  BRA    5A80
....................       { 
....................          if(unidad<1) 
58F6:  MOVF   xA3,F
58F8:  BNZ   58FE
....................          {unidad=4;} 
58FA:  MOVLW  04
58FC:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra," Secado"); 
58FE:  MOVLW  04
5900:  MOVWF  FEA
5902:  MOVLW  EA
5904:  MOVWF  FE9
5906:  MOVFF  FF2,50A
590A:  BCF    FF2.7
590C:  MOVLW  00
590E:  MOVLB  0
5910:  CALL   0CB8
5914:  TBLRD*-
5916:  TBLRD*+
5918:  MOVF   FF5,W
591A:  MOVWF  FEE
591C:  IORLW  00
591E:  BNZ   5916
5920:  MOVLB  5
5922:  BTFSC  x0A.7
5924:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5926:  MOVLW  04
5928:  MOVWF  x0B
592A:  MOVLW  EA
592C:  MOVWF  x0A
592E:  CLRF   x0C
5930:  CLRF   x0D
5932:  MOVLW  01
5934:  MOVWF  x0E
5936:  MOVLW  02
5938:  MOVWF  x0F
593A:  MOVLB  0
593C:  CALL   16E2
....................           
....................          if(unidad==4) 
5940:  MOVLB  4
5942:  MOVF   xA3,W
5944:  SUBLW  04
5946:  BNZ   5966
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
5948:  MOVFF  4D6,50B
594C:  MOVLW  14
594E:  MOVLB  5
5950:  MOVWF  x0C
5952:  MOVLW  28
5954:  MOVWF  x0D
5956:  MOVLW  01
5958:  MOVWF  x0E
595A:  MOVLW  02
595C:  MOVWF  x0F
595E:  MOVLB  0
5960:  CALL   24E2
....................          else 
5964:  BRA    5980
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
5966:  MOVFF  4D6,50B
596A:  MOVLW  14
596C:  MOVLB  5
596E:  MOVWF  x0C
5970:  MOVLW  28
5972:  MOVWF  x0D
5974:  CLRF   x0E
5976:  MOVLW  02
5978:  MOVWF  x0F
597A:  MOVLB  0
597C:  CALL   24E2
....................           
....................          if(unidad==3) 
5980:  MOVLB  4
5982:  MOVF   xA3,W
5984:  SUBLW  03
5986:  BNZ   59A4
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
5988:  MOVFF  4D5,50B
598C:  MOVLW  28
598E:  MOVLB  5
5990:  MOVWF  x0C
5992:  MOVWF  x0D
5994:  MOVLW  01
5996:  MOVWF  x0E
5998:  MOVLW  02
599A:  MOVWF  x0F
599C:  MOVLB  0
599E:  CALL   24E2
....................          else 
59A2:  BRA    59BC
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
59A4:  MOVFF  4D5,50B
59A8:  MOVLW  28
59AA:  MOVLB  5
59AC:  MOVWF  x0C
59AE:  MOVWF  x0D
59B0:  CLRF   x0E
59B2:  MOVLW  02
59B4:  MOVWF  x0F
59B6:  MOVLB  0
59B8:  CALL   24E2
....................           
....................          if(unidad==2) 
59BC:  MOVLB  4
59BE:  MOVF   xA3,W
59C0:  SUBLW  02
59C2:  BNZ   59E2
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
59C4:  MOVFF  4D4,50B
59C8:  MOVLW  46
59CA:  MOVLB  5
59CC:  MOVWF  x0C
59CE:  MOVLW  28
59D0:  MOVWF  x0D
59D2:  MOVLW  01
59D4:  MOVWF  x0E
59D6:  MOVLW  02
59D8:  MOVWF  x0F
59DA:  MOVLB  0
59DC:  CALL   24E2
....................          else 
59E0:  BRA    59FC
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
59E2:  MOVFF  4D4,50B
59E6:  MOVLW  46
59E8:  MOVLB  5
59EA:  MOVWF  x0C
59EC:  MOVLW  28
59EE:  MOVWF  x0D
59F0:  CLRF   x0E
59F2:  MOVLW  02
59F4:  MOVWF  x0F
59F6:  MOVLB  0
59F8:  CALL   24E2
....................           
....................          if(unidad==1) 
59FC:  MOVLB  4
59FE:  DECFSZ xA3,W
5A00:  BRA    5A20
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
5A02:  MOVFF  4D3,50B
5A06:  MOVLW  5A
5A08:  MOVLB  5
5A0A:  MOVWF  x0C
5A0C:  MOVLW  28
5A0E:  MOVWF  x0D
5A10:  MOVLW  01
5A12:  MOVWF  x0E
5A14:  MOVLW  02
5A16:  MOVWF  x0F
5A18:  MOVLB  0
5A1A:  CALL   24E2
....................          else 
5A1E:  BRA    5A3A
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
5A20:  MOVFF  4D3,50B
5A24:  MOVLW  5A
5A26:  MOVLB  5
5A28:  MOVWF  x0C
5A2A:  MOVLW  28
5A2C:  MOVWF  x0D
5A2E:  CLRF   x0E
5A30:  MOVLW  02
5A32:  MOVWF  x0F
5A34:  MOVLB  0
5A36:  CALL   24E2
....................           
....................          strcpy(Menus.Letra,":"); 
5A3A:  MOVLW  04
5A3C:  MOVWF  FEA
5A3E:  MOVLW  EA
5A40:  MOVWF  FE9
5A42:  MOVFF  FF2,50A
5A46:  BCF    FF2.7
5A48:  MOVLW  00
5A4A:  CALL   06BE
5A4E:  TBLRD*-
5A50:  TBLRD*+
5A52:  MOVF   FF5,W
5A54:  MOVWF  FEE
5A56:  IORLW  00
5A58:  BNZ   5A50
5A5A:  MOVLB  5
5A5C:  BTFSC  x0A.7
5A5E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
5A60:  MOVLW  04
5A62:  MOVWF  x0B
5A64:  MOVLW  EA
5A66:  MOVWF  x0A
5A68:  MOVLW  3C
5A6A:  MOVWF  x0C
5A6C:  MOVLW  2A
5A6E:  MOVWF  x0D
5A70:  MOVLW  02
5A72:  MOVWF  x0E
5A74:  MOVWF  x0F
5A76:  MOVLB  0
5A78:  CALL   16E2
....................           
....................          visual=0; 
5A7C:  MOVLB  4
5A7E:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5A80:  BSF    F92.0
5A82:  BTFSS  F80.0
5A84:  BRA    5AC2
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
5A86:  MOVLW  01
5A88:  SUBWF  xA3,W
5A8A:  CLRF   03
5A8C:  ADDLW  D3
5A8E:  MOVWF  FE9
5A90:  MOVLW  04
5A92:  ADDWFC 03,W
5A94:  MOVWF  FEA
5A96:  BTFSC  FEF.7
5A98:  BRA    5AA0
5A9A:  MOVF   FEF,W
5A9C:  SUBLW  08
5A9E:  BNC   5AC2
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
5AA0:  MOVLW  1E
5AA2:  MOVLB  5
5AA4:  MOVWF  x0B
5AA6:  MOVLB  0
5AA8:  CALL   104A
5AAC:  MOVLW  01
5AAE:  MOVLB  4
5AB0:  SUBWF  xA3,W
5AB2:  CLRF   03
5AB4:  ADDLW  D3
5AB6:  MOVWF  FE9
5AB8:  MOVLW  04
5ABA:  ADDWFC 03,W
5ABC:  MOVWF  FEA
5ABE:  INCF   FEF,F
5AC0:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5AC2:  BSF    F92.1
5AC4:  BTFSS  F80.1
5AC6:  BRA    5B04
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
5AC8:  MOVLW  01
5ACA:  SUBWF  xA3,W
5ACC:  CLRF   03
5ACE:  ADDLW  D3
5AD0:  MOVWF  FE9
5AD2:  MOVLW  04
5AD4:  ADDWFC 03,W
5AD6:  MOVWF  FEA
5AD8:  BTFSC  FEF.7
5ADA:  BRA    5B04
5ADC:  MOVF   FEF,W
5ADE:  SUBLW  00
5AE0:  BC    5B04
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
5AE2:  MOVLW  1E
5AE4:  MOVLB  5
5AE6:  MOVWF  x0B
5AE8:  MOVLB  0
5AEA:  CALL   104A
5AEE:  MOVLW  01
5AF0:  MOVLB  4
5AF2:  SUBWF  xA3,W
5AF4:  CLRF   03
5AF6:  ADDLW  D3
5AF8:  MOVWF  FE9
5AFA:  MOVLW  04
5AFC:  ADDWFC 03,W
5AFE:  MOVWF  FEA
5B00:  DECF   FEF,F
5B02:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5B04:  BSF    F92.2
5B06:  BTFSS  F80.2
5B08:  BRA    5B1C
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5B0A:  MOVLW  1E
5B0C:  MOVLB  5
5B0E:  MOVWF  x0B
5B10:  MOVLB  0
5B12:  CALL   104A
5B16:  MOVLB  4
5B18:  DECF   xA3,F
5B1A:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5B1C:  BSF    F92.3
5B1E:  BTFSS  F80.3
5B20:  BRA    5BF4
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5B22:  MOVLW  04
5B24:  MOVLB  5
5B26:  MOVWF  x0A
5B28:  MOVLW  AF
5B2A:  MOVWF  x0B
5B2C:  MOVLB  0
5B2E:  CALL   104A
5B32:  MOVLB  5
5B34:  DECFSZ x0A,F
5B36:  BRA    5B28
5B38:  MOVLW  08
5B3A:  MOVLB  4
5B3C:  MOVWF  xA2
5B3E:  MOVLB  5
5B40:  CLRF   x0B
5B42:  MOVLB  0
5B44:  CALL   10B4
5B48:  MOVLW  01
5B4A:  MOVLB  4
5B4C:  MOVWF  xAC
5B4E:  BSF    x95.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
5B50:  MOVLW  04
5B52:  MOVWF  FA9
5B54:  MOVFF  4D3,FA8
5B58:  BCF    FA6.6
5B5A:  BCF    FA6.7
5B5C:  BSF    FA6.2
5B5E:  MOVF   FF2,W
5B60:  MOVWF  00
5B62:  BCF    FF2.7
5B64:  MOVLB  F
5B66:  MOVLW  55
5B68:  MOVWF  FA7
5B6A:  MOVLW  AA
5B6C:  MOVWF  FA7
5B6E:  BSF    FA6.1
5B70:  BTFSC  FA6.1
5B72:  BRA    5B70
5B74:  BCF    FA6.2
5B76:  MOVF   00,W
5B78:  IORWF  FF2,F
5B7A:  MOVLW  05
5B7C:  MOVWF  FA9
5B7E:  MOVFF  4D4,FA8
5B82:  BCF    FA6.6
5B84:  BCF    FA6.7
5B86:  BSF    FA6.2
5B88:  MOVF   FF2,W
5B8A:  MOVWF  00
5B8C:  BCF    FF2.7
5B8E:  MOVLW  55
5B90:  MOVWF  FA7
5B92:  MOVLW  AA
5B94:  MOVWF  FA7
5B96:  BSF    FA6.1
5B98:  BTFSC  FA6.1
5B9A:  BRA    5B98
5B9C:  BCF    FA6.2
5B9E:  MOVF   00,W
5BA0:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
5BA2:  MOVLW  06
5BA4:  MOVWF  FA9
5BA6:  MOVFF  4D5,FA8
5BAA:  BCF    FA6.6
5BAC:  BCF    FA6.7
5BAE:  BSF    FA6.2
5BB0:  MOVFF  FF2,00
5BB4:  BCF    FF2.7
5BB6:  MOVLW  55
5BB8:  MOVWF  FA7
5BBA:  MOVLW  AA
5BBC:  MOVWF  FA7
5BBE:  BSF    FA6.1
5BC0:  BTFSC  FA6.1
5BC2:  BRA    5BC0
5BC4:  BCF    FA6.2
5BC6:  MOVF   00,W
5BC8:  IORWF  FF2,F
5BCA:  MOVLW  07
5BCC:  MOVWF  FA9
5BCE:  MOVFF  4D6,FA8
5BD2:  BCF    FA6.6
5BD4:  BCF    FA6.7
5BD6:  BSF    FA6.2
5BD8:  MOVFF  FF2,00
5BDC:  BCF    FF2.7
5BDE:  MOVLW  55
5BE0:  MOVWF  FA7
5BE2:  MOVLW  AA
5BE4:  MOVWF  FA7
5BE6:  BSF    FA6.1
5BE8:  BTFSC  FA6.1
5BEA:  BRA    5BE8
5BEC:  BCF    FA6.2
5BEE:  MOVF   00,W
5BF0:  IORWF  FF2,F
5BF2:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
5BF4:  MOVF   xA2,W
5BF6:  SUBLW  0D
5BF8:  BTFSS  FD8.2
5BFA:  BRA    5D32
....................       
....................       if(visual==1) 
5BFC:  BTFSS  x95.4
5BFE:  BRA    5C66
....................       { 
....................          glcd_fillScreen(OFF); 
5C00:  MOVLB  5
5C02:  CLRF   x0B
5C04:  MOVLB  0
5C06:  CALL   10B4
....................          strcpy(Menus.Letra,"Temperatura"); 
5C0A:  MOVLW  04
5C0C:  MOVWF  FEA
5C0E:  MOVLW  EA
5C10:  MOVWF  FE9
5C12:  MOVFF  FF2,50A
5C16:  BCF    FF2.7
5C18:  MOVLW  00
5C1A:  CALL   0BB6
5C1E:  TBLRD*-
5C20:  TBLRD*+
5C22:  MOVF   FF5,W
5C24:  MOVWF  FEE
5C26:  IORLW  00
5C28:  BNZ   5C20
5C2A:  MOVLB  5
5C2C:  BTFSC  x0A.7
5C2E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5C30:  MOVLW  04
5C32:  MOVWF  x0B
5C34:  MOVLW  EA
5C36:  MOVWF  x0A
5C38:  CLRF   x0C
5C3A:  CLRF   x0D
5C3C:  MOVLW  01
5C3E:  MOVWF  x0E
5C40:  MOVLW  02
5C42:  MOVWF  x0F
5C44:  MOVLB  0
5C46:  CALL   16E2
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
5C4A:  MOVFF  4A9,50B
5C4E:  MOVLW  1E
5C50:  MOVLB  5
5C52:  MOVWF  x0C
5C54:  MOVWF  x0D
5C56:  CLRF   x0E
5C58:  MOVLW  03
5C5A:  MOVWF  x0F
5C5C:  MOVLB  0
5C5E:  CALL   24E2
....................           
....................          visual=0; 
5C62:  MOVLB  4
5C64:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
5C66:  BSF    F92.0
5C68:  BTFSS  F80.0
5C6A:  BRA    5C9E
....................          {   
....................             if(Setpoint<134) 
5C6C:  MOVF   xA9,W
5C6E:  SUBLW  85
5C70:  BNC   5C9E
....................             { 
....................                if(Setpoint<100) 
5C72:  MOVF   xA9,W
5C74:  SUBLW  63
5C76:  BNC   5C8C
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
5C78:  MOVLW  64
5C7A:  MOVWF  xA9
5C7C:  MOVLB  5
5C7E:  MOVWF  x0B
5C80:  MOVLB  0
5C82:  CALL   104A
5C86:  MOVLB  4
5C88:  BSF    x95.4
....................                } 
....................                else 
5C8A:  BRA    5C9E
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
5C8C:  MOVLW  1E
5C8E:  MOVLB  5
5C90:  MOVWF  x0B
5C92:  MOVLB  0
5C94:  CALL   104A
5C98:  MOVLB  4
5C9A:  INCF   xA9,F
5C9C:  BSF    x95.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5C9E:  BSF    F92.1
5CA0:  BTFSS  F80.1
5CA2:  BRA    5CBC
....................          {   
....................             if(Setpoint>105) 
5CA4:  MOVF   xA9,W
5CA6:  SUBLW  69
5CA8:  BC    5CBC
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
5CAA:  MOVLW  1E
5CAC:  MOVLB  5
5CAE:  MOVWF  x0B
5CB0:  MOVLB  0
5CB2:  CALL   104A
5CB6:  MOVLB  4
5CB8:  DECF   xA9,F
5CBA:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5CBC:  BSF    F92.2
5CBE:  BTFSS  F80.2
5CC0:  BRA    5CD2
....................          {   
....................             delay_ms(30);visual=1; 
5CC2:  MOVLW  1E
5CC4:  MOVLB  5
5CC6:  MOVWF  x0B
5CC8:  MOVLB  0
5CCA:  CALL   104A
5CCE:  MOVLB  4
5CD0:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5CD2:  BSF    F92.3
5CD4:  BTFSS  F80.3
5CD6:  BRA    5D32
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5CD8:  MOVLW  04
5CDA:  MOVLB  5
5CDC:  MOVWF  x0A
5CDE:  MOVLW  AF
5CE0:  MOVWF  x0B
5CE2:  MOVLB  0
5CE4:  CALL   104A
5CE8:  MOVLB  5
5CEA:  DECFSZ x0A,F
5CEC:  BRA    5CDE
5CEE:  MOVLW  08
5CF0:  MOVLB  4
5CF2:  MOVWF  xA2
5CF4:  MOVLB  5
5CF6:  CLRF   x0B
5CF8:  MOVLB  0
5CFA:  CALL   10B4
5CFE:  MOVLW  01
5D00:  MOVLB  4
5D02:  MOVWF  xAC
5D04:  BSF    x95.4
....................             write_eeprom(8,Setpoint); 
5D06:  MOVLW  08
5D08:  MOVWF  FA9
5D0A:  MOVFF  4A9,FA8
5D0E:  BCF    FA6.6
5D10:  BCF    FA6.7
5D12:  BSF    FA6.2
5D14:  MOVF   FF2,W
5D16:  MOVWF  00
5D18:  BCF    FF2.7
5D1A:  MOVLB  F
5D1C:  MOVLW  55
5D1E:  MOVWF  FA7
5D20:  MOVLW  AA
5D22:  MOVWF  FA7
5D24:  BSF    FA6.1
5D26:  BTFSC  FA6.1
5D28:  BRA    5D26
5D2A:  BCF    FA6.2
5D2C:  MOVF   00,W
5D2E:  IORWF  FF2,F
5D30:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
5D32:  MOVF   xA2,W
5D34:  SUBLW  0E
5D36:  BTFSS  FD8.2
5D38:  BRA    6028
....................       if(Nivel>6) 
5D3A:  MOVF   xBA,F
5D3C:  BNZ   5D44
5D3E:  MOVF   xB9,W
5D40:  SUBLW  06
5D42:  BC    5D4A
....................          Nivel=6; 
5D44:  CLRF   xBA
5D46:  MOVLW  06
5D48:  MOVWF  xB9
....................           
....................       if(visual==1) 
5D4A:  BTFSS  x95.4
5D4C:  BRA    5DAE
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
5D4E:  MOVLW  04
5D50:  MOVWF  FEA
5D52:  MOVLW  EA
5D54:  MOVWF  FE9
5D56:  MOVFF  FF2,50A
5D5A:  BCF    FF2.7
5D5C:  MOVLW  00
5D5E:  MOVLB  0
5D60:  CALL   0CDA
5D64:  TBLRD*-
5D66:  TBLRD*+
5D68:  MOVF   FF5,W
5D6A:  MOVWF  FEE
5D6C:  IORLW  00
5D6E:  BNZ   5D66
5D70:  MOVLB  5
5D72:  BTFSC  x0A.7
5D74:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5D76:  MOVLW  04
5D78:  MOVWF  x0B
5D7A:  MOVLW  EA
5D7C:  MOVWF  x0A
5D7E:  CLRF   x0C
5D80:  CLRF   x0D
5D82:  MOVLW  01
5D84:  MOVWF  x0E
5D86:  MOVLW  02
5D88:  MOVWF  x0F
5D8A:  MOVLB  0
5D8C:  CALL   16E2
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
5D90:  MOVFF  4B9,50B
5D94:  MOVLW  32
5D96:  MOVLB  5
5D98:  MOVWF  x0C
5D9A:  MOVLW  28
5D9C:  MOVWF  x0D
5D9E:  CLRF   x0E
5DA0:  MOVLW  02
5DA2:  MOVWF  x0F
5DA4:  MOVLB  0
5DA6:  CALL   24E2
....................           
....................          visual=0; 
5DAA:  MOVLB  4
5DAC:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5DAE:  BSF    F92.0
5DB0:  BTFSS  F80.0
5DB2:  BRA    5DD4
....................          {   
....................             if(Nivel<6) 
5DB4:  MOVF   xBA,F
5DB6:  BNZ   5DD4
5DB8:  MOVF   xB9,W
5DBA:  SUBLW  05
5DBC:  BNC   5DD4
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
5DBE:  MOVLW  1E
5DC0:  MOVLB  5
5DC2:  MOVWF  x0B
5DC4:  MOVLB  0
5DC6:  CALL   104A
5DCA:  MOVLB  4
5DCC:  INCF   xB9,F
5DCE:  BTFSC  FD8.2
5DD0:  INCF   xBA,F
5DD2:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5DD4:  BSF    F92.1
5DD6:  BTFSS  F80.1
5DD8:  BRA    5DFC
....................          {   
....................             if(Nivel>1) 
5DDA:  MOVF   xBA,F
5DDC:  BNZ   5DE4
5DDE:  MOVF   xB9,W
5DE0:  SUBLW  01
5DE2:  BC    5DFC
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
5DE4:  MOVLW  1E
5DE6:  MOVLB  5
5DE8:  MOVWF  x0B
5DEA:  MOVLB  0
5DEC:  CALL   104A
5DF0:  MOVLB  4
5DF2:  MOVF   xB9,W
5DF4:  BTFSC  FD8.2
5DF6:  DECF   xBA,F
5DF8:  DECF   xB9,F
5DFA:  BSF    x95.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
5DFC:  BTFSS  x95.5
5DFE:  BRA    5FB8
....................          { 
....................             if(RIGHT)//Si oprime SET 
5E00:  BSF    F92.2
5E02:  BTFSS  F80.2
5E04:  BRA    5FB6
....................             {   
....................                write_eeprom(9,Nivel); 
5E06:  MOVLW  09
5E08:  MOVWF  FA9
5E0A:  MOVFF  4B9,FA8
5E0E:  BCF    FA6.6
5E10:  BCF    FA6.7
5E12:  BSF    FA6.2
5E14:  MOVF   FF2,W
5E16:  MOVWF  00
5E18:  BCF    FF2.7
5E1A:  MOVLB  F
5E1C:  MOVLW  55
5E1E:  MOVWF  FA7
5E20:  MOVLW  AA
5E22:  MOVWF  FA7
5E24:  BSF    FA6.1
5E26:  BTFSC  FA6.1
5E28:  BRA    5E26
5E2A:  BCF    FA6.2
5E2C:  MOVF   00,W
5E2E:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5E30:  MOVLW  14
5E32:  MOVLB  4
5E34:  MOVWF  xA2
5E36:  MOVLW  0F
5E38:  MOVLB  5
5E3A:  MOVWF  x20
5E3C:  MOVLW  12
5E3E:  MOVWF  x21
5E40:  MOVLW  1E
5E42:  MOVWF  x22
5E44:  MOVLW  35
5E46:  MOVWF  x23
5E48:  CLRF   x24
5E4A:  MOVLW  01
5E4C:  MOVWF  x25
5E4E:  MOVLB  0
5E50:  CALL   1620
5E54:  MOVLB  4
5E56:  CLRF   xAE
5E58:  MOVLW  C0
5E5A:  IORWF  FF2,F
5E5C:  MOVLB  5
5E5E:  CLRF   x0B
5E60:  MOVLB  0
5E62:  CALL   10B4
....................                strcpy(Menus.Letra,"Calentando"); 
5E66:  MOVLW  04
5E68:  MOVWF  FEA
5E6A:  MOVLW  EA
5E6C:  MOVWF  FE9
5E6E:  MOVFF  FF2,50A
5E72:  BCF    FF2.7
5E74:  MOVLW  00
5E76:  CALL   09B2
5E7A:  TBLRD*-
5E7C:  TBLRD*+
5E7E:  MOVF   FF5,W
5E80:  MOVWF  FEE
5E82:  IORLW  00
5E84:  BNZ   5E7C
5E86:  MOVLB  5
5E88:  BTFSC  x0A.7
5E8A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
5E8C:  MOVLW  04
5E8E:  MOVWF  x0B
5E90:  MOVLW  EA
5E92:  MOVWF  x0A
5E94:  CLRF   x0C
5E96:  MOVLW  37
5E98:  MOVWF  x0D
5E9A:  MOVLW  02
5E9C:  MOVWF  x0E
5E9E:  MOVLW  01
5EA0:  MOVWF  x0F
5EA2:  MOVLB  0
5EA4:  CALL   16E2
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
5EA8:  MOVLW  0F
5EAA:  MOVLB  5
5EAC:  MOVWF  x20
5EAE:  MOVLW  12
5EB0:  MOVWF  x21
5EB2:  MOVLW  1E
5EB4:  MOVWF  x22
5EB6:  MOVLW  35
5EB8:  MOVWF  x23
5EBA:  CLRF   x24
5EBC:  MOVLW  01
5EBE:  MOVWF  x25
5EC0:  MOVLB  0
5EC2:  CALL   1620
....................                glcd_imagen(5); 
5EC6:  MOVLW  05
5EC8:  MOVLB  5
5ECA:  MOVWF  x0A
5ECC:  MOVLB  0
5ECE:  CALL   2136
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5ED2:  MOVLW  04
5ED4:  MOVWF  FEA
5ED6:  MOVLW  EA
5ED8:  MOVWF  FE9
5EDA:  MOVFF  FF2,50A
5EDE:  BCF    FF2.7
5EE0:  MOVLW  00
5EE2:  CALL   09D8
5EE6:  TBLRD*-
5EE8:  TBLRD*+
5EEA:  MOVF   FF5,W
5EEC:  MOVWF  FEE
5EEE:  IORLW  00
5EF0:  BNZ   5EE8
5EF2:  MOVLB  5
5EF4:  BTFSC  x0A.7
5EF6:  BSF    FF2.7
5EF8:  MOVLW  04
5EFA:  MOVWF  x0B
5EFC:  MOVLW  EA
5EFE:  MOVWF  x0A
5F00:  CLRF   x0C
5F02:  CLRF   x0D
5F04:  MOVLW  02
5F06:  MOVWF  x0E
5F08:  MOVLW  01
5F0A:  MOVWF  x0F
5F0C:  MOVLB  0
5F0E:  CALL   16E2
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5F12:  MOVLW  04
5F14:  MOVWF  FEA
5F16:  MOVLW  EA
5F18:  MOVWF  FE9
5F1A:  MOVFF  FF2,50A
5F1E:  BCF    FF2.7
5F20:  MOVLW  00
5F22:  CALL   09FA
5F26:  TBLRD*-
5F28:  TBLRD*+
5F2A:  MOVF   FF5,W
5F2C:  MOVWF  FEE
5F2E:  IORLW  00
5F30:  BNZ   5F28
5F32:  MOVLB  5
5F34:  BTFSC  x0A.7
5F36:  BSF    FF2.7
5F38:  MOVLW  04
5F3A:  MOVWF  x0B
5F3C:  MOVLW  EA
5F3E:  MOVWF  x0A
5F40:  CLRF   x0C
5F42:  MOVLW  08
5F44:  MOVWF  x0D
5F46:  MOVLW  02
5F48:  MOVWF  x0E
5F4A:  MOVLW  01
5F4C:  MOVWF  x0F
5F4E:  MOVLB  0
5F50:  CALL   16E2
....................                glcd_circle(95,40,2,NO,ON); 
5F54:  MOVLW  5F
5F56:  MOVLB  5
5F58:  MOVWF  x0A
5F5A:  MOVLW  28
5F5C:  MOVWF  x0B
5F5E:  MOVLW  02
5F60:  MOVWF  x0C
5F62:  CLRF   x0D
5F64:  MOVLW  01
5F66:  MOVWF  x0E
5F68:  MOVLB  0
5F6A:  CALL   2232
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5F6E:  MOVLW  04
5F70:  MOVWF  FEA
5F72:  MOVLW  EA
5F74:  MOVWF  FE9
5F76:  MOVFF  FF2,50A
5F7A:  BCF    FF2.7
5F7C:  MOVLW  00
5F7E:  CALL   0A1C
5F82:  TBLRD*-
5F84:  TBLRD*+
5F86:  MOVF   FF5,W
5F88:  MOVWF  FEE
5F8A:  IORLW  00
5F8C:  BNZ   5F84
5F8E:  MOVLB  5
5F90:  BTFSC  x0A.7
5F92:  BSF    FF2.7
5F94:  MOVLW  04
5F96:  MOVWF  x0B
5F98:  MOVLW  EA
5F9A:  MOVWF  x0A
5F9C:  MOVLW  66
5F9E:  MOVWF  x0C
5FA0:  MOVLW  28
5FA2:  MOVWF  x0D
5FA4:  MOVLW  02
5FA6:  MOVWF  x0E
5FA8:  MOVWF  x0F
5FAA:  MOVLB  0
5FAC:  CALL   16E2
....................                MuestraTiemposProgramados(); 
5FB0:  CALL   2632
5FB4:  MOVLB  4
....................             }       
....................          } 
....................          else 
5FB6:  BRA    6028
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5FB8:  BSF    F92.3
5FBA:  BTFSS  F80.3
5FBC:  BRA    6028
....................             { 
....................                if(Nivel<6) 
5FBE:  MOVF   xBA,F
5FC0:  BNZ   5FCC
5FC2:  MOVF   xB9,W
5FC4:  SUBLW  05
5FC6:  BNC   5FCC
....................                { 
....................                   desfoguelento=1; 
5FC8:  BSF    x95.5
....................                } 
....................                else 
5FCA:  BRA    5FCE
....................                { 
....................                   desfoguelento=0; 
5FCC:  BCF    x95.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5FCE:  MOVLW  04
5FD0:  MOVLB  5
5FD2:  MOVWF  x0A
5FD4:  MOVLW  AF
5FD6:  MOVWF  x0B
5FD8:  MOVLB  0
5FDA:  CALL   104A
5FDE:  MOVLB  5
5FE0:  DECFSZ x0A,F
5FE2:  BRA    5FD4
5FE4:  MOVLW  08
5FE6:  MOVLB  4
5FE8:  MOVWF  xA2
5FEA:  MOVLB  5
5FEC:  CLRF   x0B
5FEE:  MOVLB  0
5FF0:  CALL   10B4
5FF4:  MOVLW  01
5FF6:  MOVLB  4
5FF8:  MOVWF  xAC
5FFA:  BSF    x95.4
....................                write_eeprom(9,Nivel); 
5FFC:  MOVLW  09
5FFE:  MOVWF  FA9
6000:  MOVFF  4B9,FA8
6004:  BCF    FA6.6
6006:  BCF    FA6.7
6008:  BSF    FA6.2
600A:  MOVF   FF2,W
600C:  MOVWF  00
600E:  BCF    FF2.7
6010:  MOVLB  F
6012:  MOVLW  55
6014:  MOVWF  FA7
6016:  MOVLW  AA
6018:  MOVWF  FA7
601A:  BSF    FA6.1
601C:  BTFSC  FA6.1
601E:  BRA    601C
6020:  BCF    FA6.2
6022:  MOVF   00,W
6024:  IORWF  FF2,F
6026:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
6028:  MOVF   xA2,W
602A:  SUBLW  0F
602C:  BTFSS  FD8.2
602E:  BRA    6362
....................        
....................       if(visual==1) 
6030:  BTFSS  x95.4
6032:  BRA    6198
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
6034:  MOVLW  04
6036:  MOVWF  FEA
6038:  MOVLW  EA
603A:  MOVWF  FE9
603C:  MOVFF  FF2,50A
6040:  BCF    FF2.7
6042:  MOVLW  00
6044:  MOVLB  0
6046:  CALL   0C08
604A:  TBLRD*-
604C:  TBLRD*+
604E:  MOVF   FF5,W
6050:  MOVWF  FEE
6052:  IORLW  00
6054:  BNZ   604C
6056:  MOVLB  5
6058:  BTFSC  x0A.7
605A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
605C:  MOVLW  04
605E:  MOVWF  x0B
6060:  MOVLW  EA
6062:  MOVWF  x0A
6064:  CLRF   x0C
6066:  CLRF   x0D
6068:  MOVLW  01
606A:  MOVWF  x0E
606C:  MOVLW  02
606E:  MOVWF  x0F
6070:  MOVLB  0
6072:  CALL   16E2
....................           
....................          if(Opcion==2) 
6076:  MOVLB  4
6078:  MOVF   xAC,W
607A:  SUBLW  02
607C:  BNZ   6108
....................          {strcpy(Menus.Letra,"SI"); 
607E:  MOVLW  04
6080:  MOVWF  FEA
6082:  MOVLW  EA
6084:  MOVWF  FE9
6086:  MOVFF  FF2,50A
608A:  BCF    FF2.7
608C:  MOVLW  00
608E:  MOVLB  0
6090:  CALL   0CFE
6094:  TBLRD*-
6096:  TBLRD*+
6098:  MOVF   FF5,W
609A:  MOVWF  FEE
609C:  IORLW  00
609E:  BNZ   6096
60A0:  MOVLB  5
60A2:  BTFSC  x0A.7
60A4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
60A6:  MOVLW  04
60A8:  MOVWF  x0B
60AA:  MOVLW  EA
60AC:  MOVWF  x0A
60AE:  MOVLW  32
60B0:  MOVWF  x0C
60B2:  MOVLW  19
60B4:  MOVWF  x0D
60B6:  MOVLW  01
60B8:  MOVWF  x0E
60BA:  MOVLW  02
60BC:  MOVWF  x0F
60BE:  MOVLB  0
60C0:  CALL   16E2
....................          strcpy(Menus.Letra,"NO"); 
60C4:  MOVLW  04
60C6:  MOVWF  FEA
60C8:  MOVLW  EA
60CA:  MOVWF  FE9
60CC:  MOVFF  FF2,50A
60D0:  BCF    FF2.7
60D2:  MOVLW  00
60D4:  CALL   0D1C
60D8:  TBLRD*-
60DA:  TBLRD*+
60DC:  MOVF   FF5,W
60DE:  MOVWF  FEE
60E0:  IORLW  00
60E2:  BNZ   60DA
60E4:  MOVLB  5
60E6:  BTFSC  x0A.7
60E8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
60EA:  MOVLW  04
60EC:  MOVWF  x0B
60EE:  MOVLW  EA
60F0:  MOVWF  x0A
60F2:  MOVLW  32
60F4:  MOVWF  x0C
60F6:  MOVLW  2D
60F8:  MOVWF  x0D
60FA:  CLRF   x0E
60FC:  MOVLW  02
60FE:  MOVWF  x0F
6100:  MOVLB  0
6102:  CALL   16E2
6106:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
6108:  DECFSZ xAC,W
610A:  BRA    6196
....................          {strcpy(Menus.Letra,"SI"); 
610C:  MOVLW  04
610E:  MOVWF  FEA
6110:  MOVLW  EA
6112:  MOVWF  FE9
6114:  MOVFF  FF2,50A
6118:  BCF    FF2.7
611A:  MOVLW  00
611C:  MOVLB  0
611E:  CALL   0CFE
6122:  TBLRD*-
6124:  TBLRD*+
6126:  MOVF   FF5,W
6128:  MOVWF  FEE
612A:  IORLW  00
612C:  BNZ   6124
612E:  MOVLB  5
6130:  BTFSC  x0A.7
6132:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
6134:  MOVLW  04
6136:  MOVWF  x0B
6138:  MOVLW  EA
613A:  MOVWF  x0A
613C:  MOVLW  32
613E:  MOVWF  x0C
6140:  MOVLW  19
6142:  MOVWF  x0D
6144:  CLRF   x0E
6146:  MOVLW  02
6148:  MOVWF  x0F
614A:  MOVLB  0
614C:  CALL   16E2
....................          strcpy(Menus.Letra,"NO"); 
6150:  MOVLW  04
6152:  MOVWF  FEA
6154:  MOVLW  EA
6156:  MOVWF  FE9
6158:  MOVFF  FF2,50A
615C:  BCF    FF2.7
615E:  MOVLW  00
6160:  CALL   0D1C
6164:  TBLRD*-
6166:  TBLRD*+
6168:  MOVF   FF5,W
616A:  MOVWF  FEE
616C:  IORLW  00
616E:  BNZ   6166
6170:  MOVLB  5
6172:  BTFSC  x0A.7
6174:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
6176:  MOVLW  04
6178:  MOVWF  x0B
617A:  MOVLW  EA
617C:  MOVWF  x0A
617E:  MOVLW  32
6180:  MOVWF  x0C
6182:  MOVLW  2D
6184:  MOVWF  x0D
6186:  MOVLW  01
6188:  MOVWF  x0E
618A:  MOVLW  02
618C:  MOVWF  x0F
618E:  MOVLB  0
6190:  CALL   16E2
6194:  MOVLB  4
....................          } 
....................          visual=0; 
6196:  BCF    x95.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
6198:  BSF    F92.0
619A:  BTFSS  F80.0
619C:  BRA    61A8
....................       { 
....................          if(Opcion<2) 
619E:  MOVF   xAC,W
61A0:  SUBLW  01
61A2:  BNC   61A6
....................          { 
....................             Opcion++; 
61A4:  INCF   xAC,F
....................          } 
....................          visual=1; 
61A6:  BSF    x95.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
61A8:  BSF    F92.1
61AA:  BTFSS  F80.1
61AC:  BRA    61B8
....................       {   
....................          if(Opcion>1) 
61AE:  MOVF   xAC,W
61B0:  SUBLW  01
61B2:  BC    61B6
....................          { 
....................             Opcion--; 
61B4:  DECF   xAC,F
....................          }   
....................          visual=1; 
61B6:  BSF    x95.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
61B8:  BSF    F92.2
61BA:  BTFSS  F80.2
61BC:  BRA    632E
....................       {   
....................          if(Opcion==2) 
61BE:  MOVF   xAC,W
61C0:  SUBLW  02
61C2:  BTFSS  FD8.2
61C4:  BRA    6300
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
61C6:  MOVLW  14
61C8:  MOVWF  xA2
61CA:  MOVLW  0F
61CC:  MOVLB  5
61CE:  MOVWF  x20
61D0:  MOVLW  12
61D2:  MOVWF  x21
61D4:  MOVLW  1E
61D6:  MOVWF  x22
61D8:  MOVLW  35
61DA:  MOVWF  x23
61DC:  CLRF   x24
61DE:  MOVLW  01
61E0:  MOVWF  x25
61E2:  MOVLB  0
61E4:  CALL   1620
61E8:  MOVLB  4
61EA:  CLRF   xAE
61EC:  MOVLW  C0
61EE:  IORWF  FF2,F
61F0:  MOVLB  5
61F2:  CLRF   x0B
61F4:  MOVLB  0
61F6:  CALL   10B4
....................             strcpy(Menus.Letra,"Calentando"); 
61FA:  MOVLW  04
61FC:  MOVWF  FEA
61FE:  MOVLW  EA
6200:  MOVWF  FE9
6202:  MOVFF  FF2,50A
6206:  BCF    FF2.7
6208:  MOVLW  00
620A:  CALL   09B2
620E:  TBLRD*-
6210:  TBLRD*+
6212:  MOVF   FF5,W
6214:  MOVWF  FEE
6216:  IORLW  00
6218:  BNZ   6210
621A:  MOVLB  5
621C:  BTFSC  x0A.7
621E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
6220:  MOVLW  04
6222:  MOVWF  x0B
6224:  MOVLW  EA
6226:  MOVWF  x0A
6228:  CLRF   x0C
622A:  MOVLW  37
622C:  MOVWF  x0D
622E:  MOVLW  02
6230:  MOVWF  x0E
6232:  MOVLW  01
6234:  MOVWF  x0F
6236:  MOVLB  0
6238:  CALL   16E2
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
623C:  MOVLW  0F
623E:  MOVLB  5
6240:  MOVWF  x20
6242:  MOVLW  12
6244:  MOVWF  x21
6246:  MOVLW  1E
6248:  MOVWF  x22
624A:  MOVLW  35
624C:  MOVWF  x23
624E:  CLRF   x24
6250:  MOVLW  01
6252:  MOVWF  x25
6254:  MOVLB  0
6256:  CALL   1620
....................             glcd_imagen(5); 
625A:  MOVLW  05
625C:  MOVLB  5
625E:  MOVWF  x0A
6260:  MOVLB  0
6262:  CALL   2136
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
6266:  MOVLW  04
6268:  MOVWF  FEA
626A:  MOVLW  EA
626C:  MOVWF  FE9
626E:  MOVFF  FF2,50A
6272:  BCF    FF2.7
6274:  MOVLW  00
6276:  CALL   09D8
627A:  TBLRD*-
627C:  TBLRD*+
627E:  MOVF   FF5,W
6280:  MOVWF  FEE
6282:  IORLW  00
6284:  BNZ   627C
6286:  MOVLB  5
6288:  BTFSC  x0A.7
628A:  BSF    FF2.7
628C:  MOVLW  04
628E:  MOVWF  x0B
6290:  MOVLW  EA
6292:  MOVWF  x0A
6294:  CLRF   x0C
6296:  CLRF   x0D
6298:  MOVLW  02
629A:  MOVWF  x0E
629C:  MOVLW  01
629E:  MOVWF  x0F
62A0:  MOVLB  0
62A2:  CALL   16E2
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
62A6:  MOVLW  04
62A8:  MOVWF  FEA
62AA:  MOVLW  EA
62AC:  MOVWF  FE9
62AE:  MOVFF  FF2,50A
62B2:  BCF    FF2.7
62B4:  MOVLW  00
62B6:  CALL   09FA
62BA:  TBLRD*-
62BC:  TBLRD*+
62BE:  MOVF   FF5,W
62C0:  MOVWF  FEE
62C2:  IORLW  00
62C4:  BNZ   62BC
62C6:  MOVLB  5
62C8:  BTFSC  x0A.7
62CA:  BSF    FF2.7
62CC:  MOVLW  04
62CE:  MOVWF  x0B
62D0:  MOVLW  EA
62D2:  MOVWF  x0A
62D4:  CLRF   x0C
62D6:  MOVLW  08
62D8:  MOVWF  x0D
62DA:  MOVLW  02
62DC:  MOVWF  x0E
62DE:  MOVLW  01
62E0:  MOVWF  x0F
62E2:  MOVLB  0
62E4:  CALL   16E2
....................             MuestraTiemposProgramados(); 
62E8:  CALL   2632
....................             if(Nivel<6) 
62EC:  MOVLB  4
62EE:  MOVF   xBA,F
62F0:  BNZ   62FC
62F2:  MOVF   xB9,W
62F4:  SUBLW  05
62F6:  BNC   62FC
....................                { 
....................                   desfoguelento=1; 
62F8:  BSF    x95.5
....................                } 
....................                else 
62FA:  BRA    62FE
....................                { 
....................                   desfoguelento=0; 
62FC:  BCF    x95.5
....................                } 
....................          } 
....................          else 
62FE:  BRA    632E
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6300:  MOVLW  04
6302:  MOVLB  5
6304:  MOVWF  x0A
6306:  MOVLW  AF
6308:  MOVWF  x0B
630A:  MOVLB  0
630C:  CALL   104A
6310:  MOVLB  5
6312:  DECFSZ x0A,F
6314:  BRA    6306
6316:  MOVLW  08
6318:  MOVLB  4
631A:  MOVWF  xA2
631C:  MOVLB  5
631E:  CLRF   x0B
6320:  MOVLB  0
6322:  CALL   10B4
6326:  MOVLW  01
6328:  MOVLB  4
632A:  MOVWF  xAC
632C:  BSF    x95.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
632E:  BSF    F92.3
6330:  BTFSS  F80.3
6332:  BRA    6362
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6334:  MOVLW  04
6336:  MOVLB  5
6338:  MOVWF  x0A
633A:  MOVLW  AF
633C:  MOVWF  x0B
633E:  MOVLB  0
6340:  CALL   104A
6344:  MOVLB  5
6346:  DECFSZ x0A,F
6348:  BRA    633A
634A:  MOVLW  08
634C:  MOVLB  4
634E:  MOVWF  xA2
6350:  MOVLB  5
6352:  CLRF   x0B
6354:  MOVLB  0
6356:  CALL   10B4
635A:  MOVLW  01
635C:  MOVLB  4
635E:  MOVWF  xAC
6360:  BSF    x95.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
6362:  MOVF   xA2,W
6364:  SUBLW  14
6366:  BTFSS  FD8.2
6368:  GOTO   6FA8
....................     
....................    Lectura_Esclavos(); 
636C:  MOVLB  0
636E:  CALL   1F78
....................     
....................    Envio_Esclavos(); 
6372:  CALL   20D6
....................    // Nuevo Flujo de Programa con logica 2018 para ajustar ciclos de Pre-Vacio y de Vacio al final del ciclo// 
....................     
....................    if(Alarma>0 || Alarma2>0 || AlarmaAgua>0) 
6376:  MOVLB  4
6378:  MOVF   x92,F
637A:  BNZ   6386
637C:  MOVF   x94,F
637E:  BNZ   6386
6380:  MOVF   x93,F
6382:  BTFSC  FD8.2
6384:  BRA    6524
....................    { 
....................       if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
6386:  DECFSZ x92,W
6388:  BRA    63EA
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
638A:  MOVLB  5
638C:  CLRF   x20
638E:  MOVLW  37
6390:  MOVWF  x21
6392:  MOVLW  7F
6394:  MOVWF  x22
6396:  MOVLW  3F
6398:  MOVWF  x23
639A:  MOVLW  01
639C:  MOVWF  x24
639E:  CLRF   x25
63A0:  MOVLB  0
63A2:  CALL   1620
....................          strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
63A6:  MOVLW  04
63A8:  MOVWF  FEA
63AA:  MOVLW  EA
63AC:  MOVWF  FE9
63AE:  MOVFF  FF2,50A
63B2:  BCF    FF2.7
63B4:  MOVLW  00
63B6:  CALL   0D3A
63BA:  TBLRD*-
63BC:  TBLRD*+
63BE:  MOVF   FF5,W
63C0:  MOVWF  FEE
63C2:  IORLW  00
63C4:  BNZ   63BC
63C6:  MOVLB  5
63C8:  BTFSC  x0A.7
63CA:  BSF    FF2.7
63CC:  MOVLW  04
63CE:  MOVWF  x0B
63D0:  MOVLW  EA
63D2:  MOVWF  x0A
63D4:  CLRF   x0C
63D6:  MOVLW  37
63D8:  MOVWF  x0D
63DA:  MOVLW  02
63DC:  MOVWF  x0E
63DE:  MOVLW  01
63E0:  MOVWF  x0F
63E2:  MOVLB  0
63E4:  CALL   16E2
63E8:  MOVLB  4
....................       } 
....................        
....................       if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
63EA:  MOVF   x92,W
63EC:  SUBLW  02
63EE:  BNZ   6454
....................       { 
....................          tiempo_esterilizacion=0;tiempo_secado=0; 
63F0:  CLRF   xAD
63F2:  CLRF   xAE
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
63F4:  MOVLB  5
63F6:  CLRF   x20
63F8:  MOVLW  37
63FA:  MOVWF  x21
63FC:  MOVLW  7F
63FE:  MOVWF  x22
6400:  MOVLW  3F
6402:  MOVWF  x23
6404:  MOVLW  01
6406:  MOVWF  x24
6408:  CLRF   x25
640A:  MOVLB  0
640C:  CALL   1620
....................          strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6410:  MOVLW  04
6412:  MOVWF  FEA
6414:  MOVLW  EA
6416:  MOVWF  FE9
6418:  MOVFF  FF2,50A
641C:  BCF    FF2.7
641E:  MOVLW  00
6420:  CALL   0D60
6424:  TBLRD*-
6426:  TBLRD*+
6428:  MOVF   FF5,W
642A:  MOVWF  FEE
642C:  IORLW  00
642E:  BNZ   6426
6430:  MOVLB  5
6432:  BTFSC  x0A.7
6434:  BSF    FF2.7
6436:  MOVLW  04
6438:  MOVWF  x0B
643A:  MOVLW  EA
643C:  MOVWF  x0A
643E:  CLRF   x0C
6440:  MOVLW  37
6442:  MOVWF  x0D
6444:  MOVLW  02
6446:  MOVWF  x0E
6448:  MOVLW  01
644A:  MOVWF  x0F
644C:  MOVLB  0
644E:  CALL   16E2
6452:  MOVLB  4
....................       } 
....................           
....................       if(Alarma==3) // Alarma de Error de Agua: Error por Bajo Nivel de Agua Durante Funcionamiento 
6454:  MOVF   x92,W
6456:  SUBLW  03
6458:  BNZ   64BE
....................       { 
....................          tiempo_esterilizacion=0;tiempo_secado=0; 
645A:  CLRF   xAD
645C:  CLRF   xAE
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
645E:  MOVLB  5
6460:  CLRF   x20
6462:  MOVLW  37
6464:  MOVWF  x21
6466:  MOVLW  7F
6468:  MOVWF  x22
646A:  MOVLW  3F
646C:  MOVWF  x23
646E:  MOVLW  01
6470:  MOVWF  x24
6472:  CLRF   x25
6474:  MOVLB  0
6476:  CALL   1620
....................          strcpy(Menus.Letra,"Error:EA02");displayMenu(Menus.Letra,0,55,2,1);           
647A:  MOVLW  04
647C:  MOVWF  FEA
647E:  MOVLW  EA
6480:  MOVWF  FE9
6482:  MOVFF  FF2,50A
6486:  BCF    FF2.7
6488:  MOVLW  00
648A:  CALL   0D86
648E:  TBLRD*-
6490:  TBLRD*+
6492:  MOVF   FF5,W
6494:  MOVWF  FEE
6496:  IORLW  00
6498:  BNZ   6490
649A:  MOVLB  5
649C:  BTFSC  x0A.7
649E:  BSF    FF2.7
64A0:  MOVLW  04
64A2:  MOVWF  x0B
64A4:  MOVLW  EA
64A6:  MOVWF  x0A
64A8:  CLRF   x0C
64AA:  MOVLW  37
64AC:  MOVWF  x0D
64AE:  MOVLW  02
64B0:  MOVWF  x0E
64B2:  MOVLW  01
64B4:  MOVWF  x0F
64B6:  MOVLB  0
64B8:  CALL   16E2
64BC:  MOVLB  4
....................       } 
....................        
....................       if(AlarmaAgua==1) 
64BE:  DECFSZ x93,W
64C0:  BRA    6522
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
64C2:  MOVLB  5
64C4:  CLRF   x20
64C6:  MOVLW  37
64C8:  MOVWF  x21
64CA:  MOVLW  7F
64CC:  MOVWF  x22
64CE:  MOVLW  3F
64D0:  MOVWF  x23
64D2:  MOVLW  01
64D4:  MOVWF  x24
64D6:  CLRF   x25
64D8:  MOVLB  0
64DA:  CALL   1620
....................          strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
64DE:  MOVLW  04
64E0:  MOVWF  FEA
64E2:  MOVLW  EA
64E4:  MOVWF  FE9
64E6:  MOVFF  FF2,50A
64EA:  BCF    FF2.7
64EC:  MOVLW  00
64EE:  CALL   0DAC
64F2:  TBLRD*-
64F4:  TBLRD*+
64F6:  MOVF   FF5,W
64F8:  MOVWF  FEE
64FA:  IORLW  00
64FC:  BNZ   64F4
64FE:  MOVLB  5
6500:  BTFSC  x0A.7
6502:  BSF    FF2.7
6504:  MOVLW  04
6506:  MOVWF  x0B
6508:  MOVLW  EA
650A:  MOVWF  x0A
650C:  CLRF   x0C
650E:  MOVLW  37
6510:  MOVWF  x0D
6512:  MOVLW  02
6514:  MOVWF  x0E
6516:  MOVLW  01
6518:  MOVWF  x0F
651A:  MOVLB  0
651C:  CALL   16E2
6520:  MOVLB  4
....................       } 
....................           
....................    } 
....................    else 
6522:  BRA    691C
....................    { 
....................       if(Puerta==0) 
6524:  MOVF   x8D,F
6526:  BNZ   658A
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6528:  MOVLB  5
652A:  CLRF   x20
652C:  MOVLW  37
652E:  MOVWF  x21
6530:  MOVLW  7F
6532:  MOVWF  x22
6534:  MOVLW  3F
6536:  MOVWF  x23
6538:  MOVLW  01
653A:  MOVWF  x24
653C:  CLRF   x25
653E:  MOVLB  0
6540:  CALL   1620
....................          strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
6544:  MOVLW  04
6546:  MOVWF  FEA
6548:  MOVLW  EA
654A:  MOVWF  FE9
654C:  MOVFF  FF2,50A
6550:  BCF    FF2.7
6552:  MOVLW  00
6554:  CALL   0DD2
6558:  TBLRD*-
655A:  TBLRD*+
655C:  MOVF   FF5,W
655E:  MOVWF  FEE
6560:  IORLW  00
6562:  BNZ   655A
6564:  MOVLB  5
6566:  BTFSC  x0A.7
6568:  BSF    FF2.7
656A:  MOVLW  04
656C:  MOVWF  x0B
656E:  MOVLW  EA
6570:  MOVWF  x0A
6572:  CLRF   x0C
6574:  MOVLW  37
6576:  MOVWF  x0D
6578:  MOVLW  02
657A:  MOVWF  x0E
657C:  MOVLW  01
657E:  MOVWF  x0F
6580:  MOVLB  0
6582:  CALL   16E2
....................       } 
....................       else 
6586:  BRA    691E
6588:  MOVLB  4
....................       { 
....................          if(NivelTanque==0) 
658A:  MOVF   x90,F
658C:  BNZ   65F2
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
658E:  MOVLB  5
6590:  CLRF   x20
6592:  MOVLW  37
6594:  MOVWF  x21
6596:  MOVLW  7F
6598:  MOVWF  x22
659A:  MOVLW  3F
659C:  MOVWF  x23
659E:  MOVLW  01
65A0:  MOVWF  x24
65A2:  CLRF   x25
65A4:  MOVLB  0
65A6:  CALL   1620
....................             strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
65AA:  MOVLW  04
65AC:  MOVWF  FEA
65AE:  MOVLW  EA
65B0:  MOVWF  FE9
65B2:  MOVFF  FF2,50A
65B6:  BCF    FF2.7
65B8:  MOVLW  00
65BA:  CALL   0DFC
65BE:  TBLRD*-
65C0:  TBLRD*+
65C2:  MOVF   FF5,W
65C4:  MOVWF  FEE
65C6:  IORLW  00
65C8:  BNZ   65C0
65CA:  MOVLB  5
65CC:  BTFSC  x0A.7
65CE:  BSF    FF2.7
65D0:  MOVLW  04
65D2:  MOVWF  x0B
65D4:  MOVLW  EA
65D6:  MOVWF  x0A
65D8:  CLRF   x0C
65DA:  MOVLW  37
65DC:  MOVWF  x0D
65DE:  MOVLW  02
65E0:  MOVWF  x0E
65E2:  MOVLW  01
65E4:  MOVWF  x0F
65E6:  MOVLB  0
65E8:  CALL   16E2
....................             Control=0; 
65EC:  MOVLB  4
65EE:  CLRF   xA0
....................          } 
....................          else 
65F0:  BRA    6600
....................          { 
....................             if(Calentar==10 && tiempo_esterilizacion==0) 
65F2:  MOVF   xA8,W
65F4:  SUBLW  0A
65F6:  BNZ   6600
65F8:  MOVF   xAD,F
65FA:  BNZ   6600
....................             { 
....................                Prevacio=5; 
65FC:  MOVLW  05
65FE:  MOVWF  xA5
....................             } 
....................          } 
....................           
....................          if(Prevacio==5) 
6600:  MOVF   xA5,W
6602:  SUBLW  05
6604:  BNZ   667C
....................          { 
....................             Control=0; 
6606:  CLRF   xA0
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
6608:  MOVLB  5
660A:  CLRF   x20
660C:  MOVLW  37
660E:  MOVWF  x21
6610:  MOVLW  7F
6612:  MOVWF  x22
6614:  MOVLW  3F
6616:  MOVWF  x23
6618:  MOVLW  01
661A:  MOVWF  x24
661C:  CLRF   x25
661E:  MOVLB  0
6620:  CALL   1620
....................             strcpy(Menus.Letra,"Pre-Vacio");displayMenu(Menus.Letra,0,55,2,1); 
6624:  MOVLW  04
6626:  MOVWF  FEA
6628:  MOVLW  EA
662A:  MOVWF  FE9
662C:  MOVFF  FF2,50A
6630:  BCF    FF2.7
6632:  MOVLW  00
6634:  CALL   0E20
6638:  TBLRD*-
663A:  TBLRD*+
663C:  MOVF   FF5,W
663E:  MOVWF  FEE
6640:  IORLW  00
6642:  BNZ   663A
6644:  MOVLB  5
6646:  BTFSC  x0A.7
6648:  BSF    FF2.7
664A:  MOVLW  04
664C:  MOVWF  x0B
664E:  MOVLW  EA
6650:  MOVWF  x0A
6652:  CLRF   x0C
6654:  MOVLW  37
6656:  MOVWF  x0D
6658:  MOVLW  02
665A:  MOVWF  x0E
665C:  MOVLW  01
665E:  MOVWF  x0F
6660:  MOVLB  0
6662:  CALL   16E2
....................             BombaVacio=5; 
6666:  MOVLW  05
6668:  MOVLB  4
666A:  MOVWF  x9E
....................             if(flagprevacio==5) 
666C:  MOVF   xA6,W
666E:  SUBLW  05
6670:  BNZ   667C
....................             { 
....................                Prevacio=10;BombaVacio=10;Calentar=5; 
6672:  MOVLW  0A
6674:  MOVWF  xA5
6676:  MOVWF  x9E
6678:  MOVLW  05
667A:  MOVWF  xA8
....................             } 
....................          } 
....................           
....................          if(Calentar==5) 
667C:  MOVF   xA8,W
667E:  SUBLW  05
6680:  BTFSS  FD8.2
6682:  BRA    677C
....................          { 
....................             Control=1; 
6684:  MOVLW  01
6686:  MOVWF  xA0
....................             if(tiempo_esterilizacion==0) 
6688:  MOVF   xAD,F
668A:  BNZ   6710
....................             { 
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
668C:  MOVLW  0F
668E:  MOVLB  5
6690:  MOVWF  x20
6692:  MOVLW  12
6694:  MOVWF  x21
6696:  MOVLW  1E
6698:  MOVWF  x22
669A:  MOVLW  35
669C:  MOVWF  x23
669E:  CLRF   x24
66A0:  MOVLW  01
66A2:  MOVWF  x25
66A4:  MOVLB  0
66A6:  CALL   1620
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
66AA:  MOVLB  5
66AC:  CLRF   x20
66AE:  MOVLW  37
66B0:  MOVWF  x21
66B2:  MOVLW  7F
66B4:  MOVWF  x22
66B6:  MOVLW  3F
66B8:  MOVWF  x23
66BA:  MOVLW  01
66BC:  MOVWF  x24
66BE:  CLRF   x25
66C0:  MOVLB  0
66C2:  CALL   1620
....................                strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
66C6:  MOVLW  04
66C8:  MOVWF  FEA
66CA:  MOVLW  EA
66CC:  MOVWF  FE9
66CE:  MOVFF  FF2,50A
66D2:  BCF    FF2.7
66D4:  MOVLW  00
66D6:  CALL   09B2
66DA:  TBLRD*-
66DC:  TBLRD*+
66DE:  MOVF   FF5,W
66E0:  MOVWF  FEE
66E2:  IORLW  00
66E4:  BNZ   66DC
66E6:  MOVLB  5
66E8:  BTFSC  x0A.7
66EA:  BSF    FF2.7
66EC:  MOVLW  04
66EE:  MOVWF  x0B
66F0:  MOVLW  EA
66F2:  MOVWF  x0A
66F4:  CLRF   x0C
66F6:  MOVLW  37
66F8:  MOVWF  x0D
66FA:  MOVLW  02
66FC:  MOVWF  x0E
66FE:  MOVLW  01
6700:  MOVWF  x0F
6702:  MOVLB  0
6704:  CALL   16E2
....................                EVDesfogue=0;Control=1; 
6708:  MOVLB  4
670A:  CLRF   x99
670C:  MOVLW  01
670E:  MOVWF  xA0
....................             } 
....................                 
....................             if(tiempo_esterilizacion==1) 
6710:  DECFSZ xAD,W
6712:  BRA    677C
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6714:  MOVLB  5
6716:  CLRF   x20
6718:  MOVLW  37
671A:  MOVWF  x21
671C:  MOVLW  7F
671E:  MOVWF  x22
6720:  MOVLW  3F
6722:  MOVWF  x23
6724:  MOVLW  01
6726:  MOVWF  x24
6728:  CLRF   x25
672A:  MOVLB  0
672C:  CALL   1620
....................                strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
6730:  MOVLW  04
6732:  MOVWF  FEA
6734:  MOVLW  EA
6736:  MOVWF  FE9
6738:  MOVFF  FF2,50A
673C:  BCF    FF2.7
673E:  MOVLW  00
6740:  CALL   0E44
6744:  TBLRD*-
6746:  TBLRD*+
6748:  MOVF   FF5,W
674A:  MOVWF  FEE
674C:  IORLW  00
674E:  BNZ   6746
6750:  MOVLB  5
6752:  BTFSC  x0A.7
6754:  BSF    FF2.7
6756:  MOVLW  04
6758:  MOVWF  x0B
675A:  MOVLW  EA
675C:  MOVWF  x0A
675E:  CLRF   x0C
6760:  MOVLW  37
6762:  MOVWF  x0D
6764:  MOVLW  02
6766:  MOVWF  x0E
6768:  MOVLW  01
676A:  MOVWF  x0F
676C:  MOVLB  0
676E:  CALL   16E2
....................                EVDesfogue=0;EVTrampa=0;Control=1; 
6772:  MOVLB  4
6774:  CLRF   x99
6776:  CLRF   x9B
6778:  MOVLW  01
677A:  MOVWF  xA0
....................             } 
....................          } 
....................           
....................          if(tiempo_esterilizacion==2 && Calentar==20) 
677C:  MOVF   xAD,W
677E:  SUBLW  02
6780:  BTFSS  FD8.2
6782:  BRA    691C
6784:  MOVF   xA8,W
6786:  SUBLW  14
6788:  BTFSS  FD8.2
678A:  BRA    691C
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
678C:  BTFSS  x95.5
678E:  BRA    6858
....................             { 
....................                if(z==0) 
6790:  BTFSC  x97.2
6792:  BRA    67E4
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
6794:  MOVLB  5
6796:  CLRF   x0A
6798:  MOVLW  5A
679A:  MOVWF  x0B
679C:  MOVLW  38
679E:  MOVWF  x0C
67A0:  MOVLB  0
67A2:  CALL   2772
67A6:  MOVLW  19
67A8:  MOVLB  5
67AA:  MOVWF  x20
67AC:  MOVLW  12
67AE:  MOVWF  x21
67B0:  MOVLW  3C
67B2:  MOVWF  x22
67B4:  MOVLW  1A
67B6:  MOVWF  x23
67B8:  CLRF   x24
67BA:  CLRF   x25
67BC:  MOVLB  0
67BE:  CALL   1620
67C2:  MOVLW  37
67C4:  MOVLB  5
67C6:  MOVWF  x20
67C8:  MOVLW  12
67CA:  MOVWF  x21
67CC:  MOVLW  44
67CE:  MOVWF  x22
67D0:  MOVLW  35
67D2:  MOVWF  x23
67D4:  CLRF   x24
67D6:  MOVLW  01
67D8:  MOVWF  x25
67DA:  MOVLB  0
67DC:  CALL   1620
67E0:  MOVLB  4
67E2:  BSF    x97.2
....................                } 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
67E4:  MOVLB  5
67E6:  CLRF   x20
67E8:  MOVLW  37
67EA:  MOVWF  x21
67EC:  MOVLW  7F
67EE:  MOVWF  x22
67F0:  MOVLW  3F
67F2:  MOVWF  x23
67F4:  MOVLW  01
67F6:  MOVWF  x24
67F8:  CLRF   x25
67FA:  MOVLB  0
67FC:  CALL   1620
....................                strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
6800:  MOVLW  04
6802:  MOVWF  FEA
6804:  MOVLW  EA
6806:  MOVWF  FE9
6808:  MOVFF  FF2,50A
680C:  BCF    FF2.7
680E:  MOVLW  00
6810:  CALL   0E6C
6814:  TBLRD*-
6816:  TBLRD*+
6818:  MOVF   FF5,W
681A:  MOVWF  FEE
681C:  IORLW  00
681E:  BNZ   6816
6820:  MOVLB  5
6822:  BTFSC  x0A.7
6824:  BSF    FF2.7
6826:  MOVLW  04
6828:  MOVWF  x0B
682A:  MOVLW  EA
682C:  MOVWF  x0A
682E:  CLRF   x0C
6830:  MOVLW  37
6832:  MOVWF  x0D
6834:  MOVLW  02
6836:  MOVWF  x0E
6838:  MOVLW  01
683A:  MOVWF  x0F
683C:  MOVLB  0
683E:  CALL   16E2
....................                glcd_imagen(5);        
6842:  MOVLW  05
6844:  MOVLB  5
6846:  MOVWF  x0A
6848:  MOVLB  0
684A:  CALL   2136
....................                Exhaust=2;tiempo_secado=2; 
684E:  MOVLW  02
6850:  MOVLB  4
6852:  MOVWF  xAF
6854:  MOVWF  xAE
....................             } 
....................             else 
6856:  BRA    691C
....................             { 
....................                if(z==0) 
6858:  BTFSC  x97.2
685A:  BRA    68AC
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
685C:  MOVLB  5
685E:  CLRF   x0A
6860:  MOVLW  5A
6862:  MOVWF  x0B
6864:  MOVLW  38
6866:  MOVWF  x0C
6868:  MOVLB  0
686A:  CALL   2772
686E:  MOVLW  19
6870:  MOVLB  5
6872:  MOVWF  x20
6874:  MOVLW  12
6876:  MOVWF  x21
6878:  MOVLW  3C
687A:  MOVWF  x22
687C:  MOVLW  1A
687E:  MOVWF  x23
6880:  CLRF   x24
6882:  CLRF   x25
6884:  MOVLB  0
6886:  CALL   1620
688A:  MOVLW  37
688C:  MOVLB  5
688E:  MOVWF  x20
6890:  MOVLW  12
6892:  MOVWF  x21
6894:  MOVLW  44
6896:  MOVWF  x22
6898:  MOVLW  35
689A:  MOVWF  x23
689C:  CLRF   x24
689E:  MOVLW  01
68A0:  MOVWF  x25
68A2:  MOVLB  0
68A4:  CALL   1620
68A8:  MOVLB  4
68AA:  BSF    x97.2
....................                   //tiempo_secado=1; 
....................                } 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
68AC:  MOVLB  5
68AE:  CLRF   x20
68B0:  MOVLW  37
68B2:  MOVWF  x21
68B4:  MOVLW  7F
68B6:  MOVWF  x22
68B8:  MOVLW  3F
68BA:  MOVWF  x23
68BC:  MOVLW  01
68BE:  MOVWF  x24
68C0:  CLRF   x25
68C2:  MOVLB  0
68C4:  CALL   1620
....................                strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
68C8:  MOVLW  04
68CA:  MOVWF  FEA
68CC:  MOVLW  EA
68CE:  MOVWF  FE9
68D0:  MOVFF  FF2,50A
68D4:  BCF    FF2.7
68D6:  MOVLW  00
68D8:  CALL   0E96
68DC:  TBLRD*-
68DE:  TBLRD*+
68E0:  MOVF   FF5,W
68E2:  MOVWF  FEE
68E4:  IORLW  00
68E6:  BNZ   68DE
68E8:  MOVLB  5
68EA:  BTFSC  x0A.7
68EC:  BSF    FF2.7
68EE:  MOVLW  04
68F0:  MOVWF  x0B
68F2:  MOVLW  EA
68F4:  MOVWF  x0A
68F6:  CLRF   x0C
68F8:  MOVLW  37
68FA:  MOVWF  x0D
68FC:  MOVLW  02
68FE:  MOVWF  x0E
6900:  MOVLW  01
6902:  MOVWF  x0F
6904:  MOVLB  0
6906:  CALL   16E2
....................                glcd_imagen(5);    
690A:  MOVLW  05
690C:  MOVLB  5
690E:  MOVWF  x0A
6910:  MOVLB  0
6912:  CALL   2136
....................                Exhaust=1; 
6916:  MOVLW  01
6918:  MOVLB  4
691A:  MOVWF  xAF
691C:  MOVLB  0
....................             } 
....................                // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................       } 
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
691E:  MOVLB  4
6920:  BTFSS  x95.6
6922:  BRA    6C9C
....................    {                       
....................       Lectura=0; 
6924:  BCF    x95.6
....................       //displayTiempo(PresionCamara,31,35,2,1); 
....................       //displayTiempo(PresionPreCamara,31,44,2,1); 
....................       displayT(PresionCamara,31,35,1); 
6926:  MOVFF  4C0,50B
692A:  MOVFF  4BF,50A
692E:  MOVLB  0
6930:  CALL   1AA0
6934:  MOVFF  00,50A
6938:  MOVFF  01,50B
693C:  MOVFF  02,50C
6940:  MOVFF  03,50D
6944:  MOVFF  03,511
6948:  MOVFF  02,510
694C:  MOVFF  01,50F
6950:  MOVFF  00,50E
6954:  MOVLW  1F
6956:  MOVLB  5
6958:  MOVWF  x12
695A:  MOVLW  23
695C:  MOVWF  x13
695E:  MOVLW  01
6960:  MOVWF  x14
6962:  MOVLB  0
6964:  CALL   2B04
....................       displayT(PresionPreCamara,31,44,1); 
6968:  MOVFF  4C2,50B
696C:  MOVFF  4C1,50A
6970:  CALL   1AA0
6974:  MOVFF  00,50A
6978:  MOVFF  01,50B
697C:  MOVFF  02,50C
6980:  MOVFF  03,50D
6984:  MOVFF  03,511
6988:  MOVFF  02,510
698C:  MOVFF  01,50F
6990:  MOVFF  00,50E
6994:  MOVLW  1F
6996:  MOVLB  5
6998:  MOVWF  x12
699A:  MOVLW  2C
699C:  MOVWF  x13
699E:  MOVLW  01
69A0:  MOVWF  x14
69A2:  MOVLB  0
69A4:  CALL   2B04
....................       glcd_rect(51, 35, 62, 48, YES, OFF);glcd_text57(52, 35, kpa, 1, ON); 
69A8:  MOVLW  33
69AA:  MOVLB  5
69AC:  MOVWF  x20
69AE:  MOVLW  23
69B0:  MOVWF  x21
69B2:  MOVLW  3E
69B4:  MOVWF  x22
69B6:  MOVLW  30
69B8:  MOVWF  x23
69BA:  MOVLW  01
69BC:  MOVWF  x24
69BE:  CLRF   x25
69C0:  MOVLB  0
69C2:  CALL   1620
69C6:  MOVLW  34
69C8:  MOVLB  5
69CA:  MOVWF  x1E
69CC:  MOVLW  23
69CE:  MOVWF  x1F
69D0:  MOVLW  04
69D2:  MOVWF  x21
69D4:  MOVLW  89
69D6:  MOVWF  x20
69D8:  MOVLW  01
69DA:  MOVWF  x22
69DC:  MOVWF  x23
69DE:  MOVLB  0
69E0:  CALL   132A
....................       glcd_rect(51, 44, 62, 48, YES, OFF);glcd_text57(52, 44, kpa, 1, ON); 
69E4:  MOVLW  33
69E6:  MOVLB  5
69E8:  MOVWF  x20
69EA:  MOVLW  2C
69EC:  MOVWF  x21
69EE:  MOVLW  3E
69F0:  MOVWF  x22
69F2:  MOVLW  30
69F4:  MOVWF  x23
69F6:  MOVLW  01
69F8:  MOVWF  x24
69FA:  CLRF   x25
69FC:  MOVLB  0
69FE:  CALL   1620
6A02:  MOVLW  34
6A04:  MOVLB  5
6A06:  MOVWF  x1E
6A08:  MOVLW  2C
6A0A:  MOVWF  x1F
6A0C:  MOVLW  04
6A0E:  MOVWF  x21
6A10:  MOVLW  89
6A12:  MOVWF  x20
6A14:  MOVLW  01
6A16:  MOVWF  x22
6A18:  MOVWF  x23
6A1A:  MOVLB  0
6A1C:  CALL   132A
....................       displayTT(ADC_Pt100,69,20,2); 
6A20:  MOVFF  4C6,50D
6A24:  MOVFF  4C5,50C
6A28:  MOVFF  4C4,50B
6A2C:  MOVFF  4C3,50A
6A30:  MOVLW  45
6A32:  MOVLB  5
6A34:  MOVWF  x0E
6A36:  MOVLW  14
6A38:  MOVWF  x0F
6A3A:  MOVLW  02
6A3C:  MOVWF  x10
6A3E:  MOVLB  0
6A40:  GOTO   2B7A
....................       glcd_circle(95,40,2,NO,ON); 
6A44:  MOVLW  5F
6A46:  MOVLB  5
6A48:  MOVWF  x0A
6A4A:  MOVLW  28
6A4C:  MOVWF  x0B
6A4E:  MOVLW  02
6A50:  MOVWF  x0C
6A52:  CLRF   x0D
6A54:  MOVLW  01
6A56:  MOVWF  x0E
6A58:  MOVLB  0
6A5A:  CALL   2232
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
6A5E:  MOVLW  04
6A60:  MOVWF  FEA
6A62:  MOVLW  EA
6A64:  MOVWF  FE9
6A66:  MOVFF  FF2,50A
6A6A:  BCF    FF2.7
6A6C:  MOVLW  00
6A6E:  CALL   0A1C
6A72:  TBLRD*-
6A74:  TBLRD*+
6A76:  MOVF   FF5,W
6A78:  MOVWF  FEE
6A7A:  IORLW  00
6A7C:  BNZ   6A74
6A7E:  MOVLB  5
6A80:  BTFSC  x0A.7
6A82:  BSF    FF2.7
6A84:  MOVLW  04
6A86:  MOVWF  x0B
6A88:  MOVLW  EA
6A8A:  MOVWF  x0A
6A8C:  MOVLW  66
6A8E:  MOVWF  x0C
6A90:  MOVLW  28
6A92:  MOVWF  x0D
6A94:  MOVLW  02
6A96:  MOVWF  x0E
6A98:  MOVWF  x0F
6A9A:  MOVLB  0
6A9C:  CALL   16E2
....................       displayTiempo(Setpoint,5,20,2,1); 
6AA0:  MOVFF  4A9,50B
6AA4:  MOVLW  05
6AA6:  MOVLB  5
6AA8:  MOVWF  x0C
6AAA:  MOVLW  14
6AAC:  MOVWF  x0D
6AAE:  MOVLW  02
6AB0:  MOVWF  x0E
6AB2:  MOVLW  01
6AB4:  MOVWF  x0F
6AB6:  MOVLB  0
6AB8:  CALL   24E2
....................  
....................       glcd_imagen(5); 
6ABC:  MOVLW  05
6ABE:  MOVLB  5
6AC0:  MOVWF  x0A
6AC2:  MOVLB  0
6AC4:  CALL   2136
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
6AC8:  MOVLW  04
6ACA:  MOVWF  FEA
6ACC:  MOVLW  EA
6ACE:  MOVWF  FE9
6AD0:  MOVFF  FF2,50A
6AD4:  BCF    FF2.7
6AD6:  MOVLW  00
6AD8:  CALL   09D8
6ADC:  TBLRD*-
6ADE:  TBLRD*+
6AE0:  MOVF   FF5,W
6AE2:  MOVWF  FEE
6AE4:  IORLW  00
6AE6:  BNZ   6ADE
6AE8:  MOVLB  5
6AEA:  BTFSC  x0A.7
6AEC:  BSF    FF2.7
6AEE:  MOVLW  04
6AF0:  MOVWF  x0B
6AF2:  MOVLW  EA
6AF4:  MOVWF  x0A
6AF6:  CLRF   x0C
6AF8:  CLRF   x0D
6AFA:  MOVLW  02
6AFC:  MOVWF  x0E
6AFE:  MOVLW  01
6B00:  MOVWF  x0F
6B02:  MOVLB  0
6B04:  CALL   16E2
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
6B08:  MOVLW  04
6B0A:  MOVWF  FEA
6B0C:  MOVLW  EA
6B0E:  MOVWF  FE9
6B10:  MOVFF  FF2,50A
6B14:  BCF    FF2.7
6B16:  MOVLW  00
6B18:  CALL   09FA
6B1C:  TBLRD*-
6B1E:  TBLRD*+
6B20:  MOVF   FF5,W
6B22:  MOVWF  FEE
6B24:  IORLW  00
6B26:  BNZ   6B1E
6B28:  MOVLB  5
6B2A:  BTFSC  x0A.7
6B2C:  BSF    FF2.7
6B2E:  MOVLW  04
6B30:  MOVWF  x0B
6B32:  MOVLW  EA
6B34:  MOVWF  x0A
6B36:  CLRF   x0C
6B38:  MOVLW  08
6B3A:  MOVWF  x0D
6B3C:  MOVLW  02
6B3E:  MOVWF  x0E
6B40:  MOVLW  01
6B42:  MOVWF  x0F
6B44:  MOVLB  0
6B46:  CALL   16E2
....................       MuestraTiemposProgramados(); 
6B4A:  CALL   2632
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
6B4E:  MOVFF  4CA,50B
6B52:  MOVLW  50
6B54:  MOVLB  5
6B56:  MOVWF  x0C
6B58:  CLRF   x0D
6B5A:  CLRF   x0E
6B5C:  MOVLW  01
6B5E:  MOVWF  x0F
6B60:  MOVLB  0
6B62:  CALL   24E2
6B66:  MOVFF  4C9,50B
6B6A:  MOVLW  56
6B6C:  MOVLB  5
6B6E:  MOVWF  x0C
6B70:  CLRF   x0D
6B72:  CLRF   x0E
6B74:  MOVLW  01
6B76:  MOVWF  x0F
6B78:  MOVLB  0
6B7A:  CALL   24E2
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
6B7E:  MOVLW  04
6B80:  MOVWF  FEA
6B82:  MOVLW  EA
6B84:  MOVWF  FE9
6B86:  MOVFF  FF2,50A
6B8A:  BCF    FF2.7
6B8C:  MOVLW  00
6B8E:  CALL   06BE
6B92:  TBLRD*-
6B94:  TBLRD*+
6B96:  MOVF   FF5,W
6B98:  MOVWF  FEE
6B9A:  IORLW  00
6B9C:  BNZ   6B94
6B9E:  MOVLB  5
6BA0:  BTFSC  x0A.7
6BA2:  BSF    FF2.7
6BA4:  MOVLW  04
6BA6:  MOVWF  x0B
6BA8:  MOVLW  EA
6BAA:  MOVWF  x0A
6BAC:  MOVLW  5C
6BAE:  MOVWF  x0C
6BB0:  CLRF   x0D
6BB2:  MOVLW  02
6BB4:  MOVWF  x0E
6BB6:  MOVLW  01
6BB8:  MOVWF  x0F
6BBA:  MOVLB  0
6BBC:  CALL   16E2
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6BC0:  MOVFF  4C8,50B
6BC4:  MOVLW  62
6BC6:  MOVLB  5
6BC8:  MOVWF  x0C
6BCA:  CLRF   x0D
6BCC:  CLRF   x0E
6BCE:  MOVLW  01
6BD0:  MOVWF  x0F
6BD2:  MOVLB  0
6BD4:  CALL   24E2
6BD8:  MOVFF  4C7,50B
6BDC:  MOVLW  68
6BDE:  MOVLB  5
6BE0:  MOVWF  x0C
6BE2:  CLRF   x0D
6BE4:  CLRF   x0E
6BE6:  MOVLW  01
6BE8:  MOVWF  x0F
6BEA:  MOVLB  0
6BEC:  CALL   24E2
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
6BF0:  MOVFF  4D2,50B
6BF4:  MOVLW  50
6BF6:  MOVLB  5
6BF8:  MOVWF  x0C
6BFA:  MOVLW  08
6BFC:  MOVWF  x0D
6BFE:  CLRF   x0E
6C00:  MOVLW  01
6C02:  MOVWF  x0F
6C04:  MOVLB  0
6C06:  CALL   24E2
6C0A:  MOVFF  4D1,50B
6C0E:  MOVLW  56
6C10:  MOVLB  5
6C12:  MOVWF  x0C
6C14:  MOVLW  08
6C16:  MOVWF  x0D
6C18:  CLRF   x0E
6C1A:  MOVLW  01
6C1C:  MOVWF  x0F
6C1E:  MOVLB  0
6C20:  CALL   24E2
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
6C24:  MOVLW  04
6C26:  MOVWF  FEA
6C28:  MOVLW  EA
6C2A:  MOVWF  FE9
6C2C:  MOVFF  FF2,50A
6C30:  BCF    FF2.7
6C32:  MOVLW  00
6C34:  CALL   06BE
6C38:  TBLRD*-
6C3A:  TBLRD*+
6C3C:  MOVF   FF5,W
6C3E:  MOVWF  FEE
6C40:  IORLW  00
6C42:  BNZ   6C3A
6C44:  MOVLB  5
6C46:  BTFSC  x0A.7
6C48:  BSF    FF2.7
6C4A:  MOVLW  04
6C4C:  MOVWF  x0B
6C4E:  MOVLW  EA
6C50:  MOVWF  x0A
6C52:  MOVLW  5C
6C54:  MOVWF  x0C
6C56:  MOVLW  08
6C58:  MOVWF  x0D
6C5A:  MOVLW  02
6C5C:  MOVWF  x0E
6C5E:  MOVLW  01
6C60:  MOVWF  x0F
6C62:  MOVLB  0
6C64:  CALL   16E2
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
6C68:  MOVFF  4D0,50B
6C6C:  MOVLW  62
6C6E:  MOVLB  5
6C70:  MOVWF  x0C
6C72:  MOVLW  08
6C74:  MOVWF  x0D
6C76:  CLRF   x0E
6C78:  MOVLW  01
6C7A:  MOVWF  x0F
6C7C:  MOVLB  0
6C7E:  CALL   24E2
6C82:  MOVFF  4CF,50B
6C86:  MOVLW  68
6C88:  MOVLB  5
6C8A:  MOVWF  x0C
6C8C:  MOVLW  08
6C8E:  MOVWF  x0D
6C90:  CLRF   x0E
6C92:  MOVLW  01
6C94:  MOVWF  x0F
6C96:  MOVLB  0
6C98:  CALL   24E2
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint)-0.3)// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
6C9C:  MOVLB  5
6C9E:  CLRF   x0B
6CA0:  MOVFF  4A9,50A
6CA4:  MOVLB  0
6CA6:  CALL   1AA0
6CAA:  MOVFF  00,50A
6CAE:  MOVFF  01,50B
6CB2:  MOVFF  02,50C
6CB6:  MOVFF  03,50D
6CBA:  BSF    FD8.1
6CBC:  MOVFF  03,511
6CC0:  MOVFF  02,510
6CC4:  MOVFF  01,50F
6CC8:  MOVFF  00,50E
6CCC:  MOVLW  9A
6CCE:  MOVLB  5
6CD0:  MOVWF  x15
6CD2:  MOVLW  99
6CD4:  MOVWF  x14
6CD6:  MOVLW  19
6CD8:  MOVWF  x13
6CDA:  MOVLW  7D
6CDC:  MOVWF  x12
6CDE:  MOVLB  0
6CE0:  CALL   1C36
6CE4:  MOVFF  03,50D
6CE8:  MOVFF  02,50C
6CEC:  MOVFF  01,50B
6CF0:  MOVFF  00,50A
6CF4:  MOVFF  4C6,511
6CF8:  MOVFF  4C5,510
6CFC:  MOVFF  4C4,50F
6D00:  MOVFF  4C3,50E
6D04:  CALL   2BF4
6D08:  BC    6D0C
6D0A:  BNZ   6D72
....................    { 
....................       if(est==0) 
6D0C:  MOVLB  4
6D0E:  BTFSC  x96.0
6D10:  BRA    6D74
....................       { 
....................          tiempo_esterilizacion=1; 
6D12:  MOVLW  01
6D14:  MOVWF  xAD
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
6D16:  MOVLB  5
6D18:  CLRF   x0A
6D1A:  MOVLW  5A
6D1C:  MOVWF  x0B
6D1E:  MOVLW  38
6D20:  MOVWF  x0C
6D22:  MOVLB  0
6D24:  CALL   2772
6D28:  MOVLW  0F
6D2A:  MOVLB  5
6D2C:  MOVWF  x20
6D2E:  MOVLW  12
6D30:  MOVWF  x21
6D32:  MOVLW  1E
6D34:  MOVWF  x22
6D36:  MOVLW  35
6D38:  MOVWF  x23
6D3A:  CLRF   x24
6D3C:  CLRF   x25
6D3E:  MOVLB  0
6D40:  CALL   1620
6D44:  MOVLW  19
6D46:  MOVLB  5
6D48:  MOVWF  x20
6D4A:  MOVLW  12
6D4C:  MOVWF  x21
6D4E:  MOVLW  3C
6D50:  MOVWF  x22
6D52:  MOVLW  1A
6D54:  MOVWF  x23
6D56:  CLRF   x24
6D58:  MOVLW  01
6D5A:  MOVWF  x25
6D5C:  MOVLB  0
6D5E:  CALL   1620
6D62:  MOVLB  4
6D64:  BSF    x96.0
....................          glcd_imagen(5); 
6D66:  MOVLW  05
6D68:  MOVLB  5
6D6A:  MOVWF  x0A
6D6C:  MOVLB  0
6D6E:  CALL   2136
6D72:  MOVLB  4
....................       } 
....................    }   
....................     
....................    if((ADC_Pt100<((float)Setpoint-2.0)) && tiempo_esterilizacion==1) 
6D74:  MOVLB  5
6D76:  CLRF   x0B
6D78:  MOVFF  4A9,50A
6D7C:  MOVLB  0
6D7E:  CALL   1AA0
6D82:  MOVFF  00,50A
6D86:  MOVFF  01,50B
6D8A:  MOVFF  02,50C
6D8E:  MOVFF  03,50D
6D92:  BSF    FD8.1
6D94:  MOVFF  03,511
6D98:  MOVFF  02,510
6D9C:  MOVFF  01,50F
6DA0:  MOVFF  00,50E
6DA4:  MOVLB  5
6DA6:  CLRF   x15
6DA8:  CLRF   x14
6DAA:  CLRF   x13
6DAC:  MOVLW  80
6DAE:  MOVWF  x12
6DB0:  MOVLB  0
6DB2:  CALL   1C36
6DB6:  MOVFF  4C6,50D
6DBA:  MOVFF  4C5,50C
6DBE:  MOVFF  4C4,50B
6DC2:  MOVFF  4C3,50A
6DC6:  MOVFF  03,511
6DCA:  MOVFF  02,510
6DCE:  MOVFF  01,50F
6DD2:  MOVFF  00,50E
6DD6:  CALL   2BF4
6DDA:  BNC   6DEC
6DDC:  MOVLB  4
6DDE:  DECFSZ xAD,W
6DE0:  BRA    6DE4
6DE2:  BRA    6DE8
6DE4:  MOVLB  0
6DE6:  BRA    6DEC
....................    { 
....................       est=0;tiempo_esterilizacion=0; 
6DE8:  BCF    x96.0
6DEA:  CLRF   xAD
....................    } 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
6DEC:  MOVLB  4
6DEE:  DECFSZ xAF,W
6DF0:  BRA    6E16
6DF2:  MOVF   xAD,W
6DF4:  SUBLW  02
6DF6:  BNZ   6E16
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
6DF8:  CLRF   xA0
....................       if(PresionCamara<(Atmosferica+10)) 
6DFA:  MOVLW  0A
6DFC:  ADDWF  xAA,W
6DFE:  MOVF   xC0,F
6E00:  BNZ   6E12
6E02:  SUBWF  xBF,W
6E04:  BC    6E12
....................       { 
....................          tiempo_secado=1; 
6E06:  MOVLW  01
6E08:  MOVWF  xAE
....................          Control=0;EVDesfogue=3; 
6E0A:  CLRF   xA0
6E0C:  MOVLW  03
6E0E:  MOVWF  x99
....................       } 
....................       else 
6E10:  BRA    6E16
....................       { 
....................          EVDesfogue=1; 
6E12:  MOVLW  01
6E14:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
6E16:  MOVF   xAF,W
6E18:  SUBLW  02
6E1A:  BNZ   6E54
6E1C:  MOVF   xAD,W
6E1E:  SUBLW  02
6E20:  BNZ   6E54
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
6E22:  CLRF   xA0
....................       if(PresionCamara<(Atmosferica+20)) 
6E24:  MOVLW  14
6E26:  ADDWF  xAA,W
6E28:  MOVF   xC0,F
6E2A:  BNZ   6E36
6E2C:  SUBWF  xBF,W
6E2E:  BC    6E36
....................       { 
....................          EVDesfogue=1; 
6E30:  MOVLW  01
6E32:  MOVWF  x99
....................       } 
....................       else 
6E34:  BRA    6E3A
....................       { 
....................          EVDesfogue=2; 
6E36:  MOVLW  02
6E38:  MOVWF  x99
....................       } 
....................       if(PresionCamara<(Atmosferica+6)) 
6E3A:  MOVLW  06
6E3C:  ADDWF  xAA,W
6E3E:  MOVF   xC0,F
6E40:  BNZ   6E54
6E42:  SUBWF  xBF,W
6E44:  BC    6E54
....................       { 
....................          tiempo_esterilizacion=3; 
6E46:  MOVLW  03
6E48:  MOVWF  xAD
....................          tiempo_secado=2; 
6E4A:  MOVLW  02
6E4C:  MOVWF  xAE
....................          fin_ciclo=1; 
6E4E:  MOVLW  01
6E50:  MOVWF  xAB
....................          EVDesfogue=1; 
6E52:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1) 
6E54:  MOVF   xCB,W
6E56:  XORLW  80
6E58:  MOVWF  00
6E5A:  MOVF   xC7,W
6E5C:  XORLW  80
6E5E:  SUBWF  00,W
6E60:  BZ    6E64
6E62:  BC    6EA0
6E64:  MOVF   xCC,W
6E66:  XORLW  80
6E68:  MOVWF  00
6E6A:  MOVF   xC8,W
6E6C:  XORLW  80
6E6E:  SUBWF  00,W
6E70:  BZ    6E74
6E72:  BC    6EA0
6E74:  MOVF   xCD,W
6E76:  XORLW  80
6E78:  MOVWF  00
6E7A:  MOVF   xC9,W
6E7C:  XORLW  80
6E7E:  SUBWF  00,W
6E80:  BZ    6E84
6E82:  BC    6EA0
6E84:  MOVF   xCE,W
6E86:  XORLW  80
6E88:  MOVWF  00
6E8A:  MOVF   xCA,W
6E8C:  XORLW  80
6E8E:  SUBWF  00,W
6E90:  BZ    6E94
6E92:  BC    6EA0
6E94:  DECFSZ xAD,W
6E96:  BRA    6EA0
....................    { 
....................       tiempo_esterilizacion=2;Calentar=20; 
6E98:  MOVLW  02
6E9A:  MOVWF  xAD
6E9C:  MOVLW  14
6E9E:  MOVWF  xA8
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
6EA0:  MOVF   xD3,W
6EA2:  XORLW  80
6EA4:  MOVWF  00
6EA6:  MOVF   xCF,W
6EA8:  XORLW  80
6EAA:  SUBWF  00,W
6EAC:  BZ    6EB0
6EAE:  BC    6EF4
6EB0:  MOVF   xD4,W
6EB2:  XORLW  80
6EB4:  MOVWF  00
6EB6:  MOVF   xD0,W
6EB8:  XORLW  80
6EBA:  SUBWF  00,W
6EBC:  BZ    6EC0
6EBE:  BC    6EF4
6EC0:  MOVF   xD5,W
6EC2:  XORLW  80
6EC4:  MOVWF  00
6EC6:  MOVF   xD1,W
6EC8:  XORLW  80
6ECA:  SUBWF  00,W
6ECC:  BZ    6ED0
6ECE:  BC    6EF4
6ED0:  MOVF   xD6,W
6ED2:  XORLW  80
6ED4:  MOVWF  00
6ED6:  MOVF   xD2,W
6ED8:  XORLW  80
6EDA:  SUBWF  00,W
6EDC:  BZ    6EE0
6EDE:  BC    6EF4
6EE0:  DECFSZ xAE,W
6EE2:  BRA    6EF4
....................    { 
....................       tiempo_esterilizacion=3; 
6EE4:  MOVLW  03
6EE6:  MOVWF  xAD
....................       tiempo_secado=2; 
6EE8:  MOVLW  02
6EEA:  MOVWF  xAE
....................       fin_ciclo=1; 
6EEC:  MOVLW  01
6EEE:  MOVWF  xAB
....................       Calentar=10; 
6EF0:  MOVLW  0A
6EF2:  MOVWF  xA8
....................    } 
....................     
....................    if(fin_ciclo==1) 
6EF4:  DECFSZ xAB,W
6EF6:  BRA    6F5E
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=4; 
6EF8:  CLRF   xA0
6EFA:  MOVLW  04
6EFC:  MOVWF  x99
....................       glcd_rect(0, 55, 127, 63, YES, OFF); 
6EFE:  MOVLB  5
6F00:  CLRF   x20
6F02:  MOVLW  37
6F04:  MOVWF  x21
6F06:  MOVLW  7F
6F08:  MOVWF  x22
6F0A:  MOVLW  3F
6F0C:  MOVWF  x23
6F0E:  MOVLW  01
6F10:  MOVWF  x24
6F12:  CLRF   x25
6F14:  MOVLB  0
6F16:  CALL   1620
....................       strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1);  
6F1A:  MOVLW  04
6F1C:  MOVWF  FEA
6F1E:  MOVLW  EA
6F20:  MOVWF  FE9
6F22:  MOVFF  FF2,50A
6F26:  BCF    FF2.7
6F28:  MOVLW  00
6F2A:  CALL   0EB8
6F2E:  TBLRD*-
6F30:  TBLRD*+
6F32:  MOVF   FF5,W
6F34:  MOVWF  FEE
6F36:  IORLW  00
6F38:  BNZ   6F30
6F3A:  MOVLB  5
6F3C:  BTFSC  x0A.7
6F3E:  BSF    FF2.7
6F40:  MOVLW  04
6F42:  MOVWF  x0B
6F44:  MOVLW  EA
6F46:  MOVWF  x0A
6F48:  CLRF   x0C
6F4A:  MOVLW  37
6F4C:  MOVWF  x0D
6F4E:  MOVLW  02
6F50:  MOVWF  x0E
6F52:  MOVLW  01
6F54:  MOVWF  x0F
6F56:  MOVLB  0
6F58:  CALL   16E2
6F5C:  MOVLB  4
....................    } 
....................     
....................    if(RIGHT) 
6F5E:  BSF    F92.2
6F60:  BTFSS  F80.2
6F62:  BRA    6F9C
....................    { 
....................       glcd_init(ON); 
6F64:  MOVLW  01
6F66:  MOVLB  5
6F68:  MOVWF  x0A
6F6A:  MOVLB  0
6F6C:  CALL   11C6
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6F70:  MOVLB  4
6F72:  BCF    x96.2
6F74:  BCF    x96.3
6F76:  BCF    x96.4
6F78:  BCF    x96.5
6F7A:  BCF    x96.6
6F7C:  BCF    x96.7
6F7E:  BCF    x97.0
6F80:  BCF    x97.1
....................       disp_Alarma=0; 
6F82:  BCF    x97.3
....................       delay_ms(1000); 
6F84:  MOVLW  04
6F86:  MOVLB  5
6F88:  MOVWF  x0A
6F8A:  MOVLW  FA
6F8C:  MOVWF  x0B
6F8E:  MOVLB  0
6F90:  CALL   104A
6F94:  MOVLB  5
6F96:  DECFSZ x0A,F
6F98:  BRA    6F8A
6F9A:  MOVLB  4
....................    } 
....................    EVAgua=10; 
6F9C:  MOVLW  0A
6F9E:  MOVWF  x9A
....................    Envio_Esclavos(); 
6FA0:  MOVLB  0
6FA2:  CALL   20D6
6FA6:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6FA8:  MOVF   xA2,W
6FAA:  SUBLW  64
6FAC:  BTFSS  FD8.2
6FAE:  BRA    70AA
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
6FB0:  MOVFF  4DF,50B
6FB4:  MOVLB  5
6FB6:  CLRF   x0C
6FB8:  MOVLW  0A
6FBA:  MOVWF  x0D
6FBC:  MOVLW  02
6FBE:  MOVWF  x0E
6FC0:  MOVLW  01
6FC2:  MOVWF  x0F
6FC4:  MOVLB  0
6FC6:  CALL   24E2
....................    displayTiempo(datoRx[1],0,20,2,1); 
6FCA:  MOVFF  4E0,50B
6FCE:  MOVLB  5
6FD0:  CLRF   x0C
6FD2:  MOVLW  14
6FD4:  MOVWF  x0D
6FD6:  MOVLW  02
6FD8:  MOVWF  x0E
6FDA:  MOVLW  01
6FDC:  MOVWF  x0F
6FDE:  MOVLB  0
6FE0:  CALL   24E2
....................    displayTiempo(datoRx[2],0,30,2,1); 
6FE4:  MOVFF  4E1,50B
6FE8:  MOVLB  5
6FEA:  CLRF   x0C
6FEC:  MOVLW  1E
6FEE:  MOVWF  x0D
6FF0:  MOVLW  02
6FF2:  MOVWF  x0E
6FF4:  MOVLW  01
6FF6:  MOVWF  x0F
6FF8:  MOVLB  0
6FFA:  CALL   24E2
....................    displayTiempo(datoRx[3],0,40,2,1); 
6FFE:  MOVFF  4E2,50B
7002:  MOVLB  5
7004:  CLRF   x0C
7006:  MOVLW  28
7008:  MOVWF  x0D
700A:  MOVLW  02
700C:  MOVWF  x0E
700E:  MOVLW  01
7010:  MOVWF  x0F
7012:  MOVLB  0
7014:  CALL   24E2
....................    displayTiempo(Opcion,0,50,2,1); 
7018:  MOVFF  4AC,50B
701C:  MOVLB  5
701E:  CLRF   x0C
7020:  MOVLW  32
7022:  MOVWF  x0D
7024:  MOVLW  02
7026:  MOVWF  x0E
7028:  MOVLW  01
702A:  MOVWF  x0F
702C:  MOVLB  0
702E:  CALL   24E2
....................    Lectura_Esclavos(); 
7032:  CALL   1F78
....................    Opcion++; 
7036:  MOVLB  4
7038:  INCF   xAC,F
....................    displayTiempo(Puerta,50,10,2,1); 
703A:  MOVFF  48D,50B
703E:  MOVLW  32
7040:  MOVLB  5
7042:  MOVWF  x0C
7044:  MOVLW  0A
7046:  MOVWF  x0D
7048:  MOVLW  02
704A:  MOVWF  x0E
704C:  MOVLW  01
704E:  MOVWF  x0F
7050:  MOVLB  0
7052:  CALL   24E2
....................    displayTiempo(Parada,50,20,2,1); 
7056:  MOVFF  48E,50B
705A:  MOVLW  32
705C:  MOVLB  5
705E:  MOVWF  x0C
7060:  MOVLW  14
7062:  MOVWF  x0D
7064:  MOVLW  02
7066:  MOVWF  x0E
7068:  MOVLW  01
706A:  MOVWF  x0F
706C:  MOVLB  0
706E:  CALL   24E2
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
7072:  MOVFF  4C6,50D
7076:  MOVFF  4C5,50C
707A:  MOVFF  4C4,50B
707E:  MOVFF  4C3,50A
7082:  GOTO   2C6E
7086:  MOVFF  01,50A
708A:  MOVFF  01,50B
708E:  MOVLW  32
7090:  MOVLB  5
7092:  MOVWF  x0C
7094:  MOVLW  1E
7096:  MOVWF  x0D
7098:  MOVLW  02
709A:  MOVWF  x0E
709C:  MOVLW  01
709E:  MOVWF  x0F
70A0:  MOVLB  0
70A2:  CALL   24E2
....................     
....................  } 
70A6:  MOVLB  4
70A8:  BRA    6FA8
....................        
....................       while(Parada==0) 
....................       { 
70AA:  MOVF   x8E,F
70AC:  BNZ   7166
....................          Lectura_Esclavos(); 
70AE:  MOVLB  0
70B0:  CALL   1F78
....................          delay_ms(100); 
70B4:  MOVLW  64
70B6:  MOVLB  5
70B8:  MOVWF  x0B
70BA:  MOVLB  0
70BC:  CALL   104A
....................          if(disp_Stop==0) 
70C0:  MOVLB  4
70C2:  BTFSC  x96.7
70C4:  BRA    7164
....................          { 
....................             glcd_fillScreen(OFF);  
70C6:  MOVLB  5
70C8:  CLRF   x0B
70CA:  MOVLB  0
70CC:  CALL   10B4
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
70D0:  MOVLW  04
70D2:  MOVWF  FEA
70D4:  MOVLW  EA
70D6:  MOVWF  FE9
70D8:  MOVFF  FF2,50A
70DC:  BCF    FF2.7
70DE:  MOVLW  00
70E0:  CALL   0EE4
70E4:  TBLRD*-
70E6:  TBLRD*+
70E8:  MOVF   FF5,W
70EA:  MOVWF  FEE
70EC:  IORLW  00
70EE:  BNZ   70E6
70F0:  MOVLB  5
70F2:  BTFSC  x0A.7
70F4:  BSF    FF2.7
70F6:  MOVLW  04
70F8:  MOVWF  x0B
70FA:  MOVLW  EA
70FC:  MOVWF  x0A
70FE:  CLRF   x0C
7100:  MOVLW  0A
7102:  MOVWF  x0D
7104:  CLRF   x0E
7106:  MOVLW  02
7108:  MOVWF  x0F
710A:  MOVLB  0
710C:  CALL   16E2
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
7110:  MOVLW  04
7112:  MOVWF  FEA
7114:  MOVLW  EA
7116:  MOVWF  FE9
7118:  MOVFF  FF2,50A
711C:  BCF    FF2.7
711E:  MOVLW  00
7120:  CALL   0F0A
7124:  TBLRD*-
7126:  TBLRD*+
7128:  MOVF   FF5,W
712A:  MOVWF  FEE
712C:  IORLW  00
712E:  BNZ   7126
7130:  MOVLB  5
7132:  BTFSC  x0A.7
7134:  BSF    FF2.7
7136:  MOVLW  04
7138:  MOVWF  x0B
713A:  MOVLW  EA
713C:  MOVWF  x0A
713E:  CLRF   x0C
7140:  MOVLW  1E
7142:  MOVWF  x0D
7144:  CLRF   x0E
7146:  MOVLW  02
7148:  MOVWF  x0F
714A:  MOVLB  0
714C:  CALL   16E2
7150:  MOVLB  4
7152:  BSF    x95.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
7154:  BCF    x96.2
7156:  BCF    x96.3
7158:  BCF    x96.4
715A:  BCF    x96.5
715C:  BCF    x96.6
715E:  BSF    x96.7
7160:  BCF    x97.0
7162:  BCF    x97.1
....................          } 
....................       }    
7164:  BRA    70AA
....................       if(Parada==1) 
7166:  DECFSZ x8E,W
7168:  BRA    7212
....................       { 
....................          while(emergency==1) 
....................          { 
716A:  BTFSS  x95.3
716C:  BRA    7212
....................             Lectura_Esclavos(); 
716E:  MOVLB  0
7170:  CALL   1F78
....................             if(disp_Stop==1) 
7174:  MOVLB  4
7176:  BTFSS  x96.7
7178:  BRA    7188
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
717A:  MOVLB  5
717C:  CLRF   x0B
717E:  MOVLB  0
7180:  CALL   10B4
7184:  MOVLB  4
7186:  BCF    x96.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
7188:  MOVLW  04
718A:  MOVWF  FEA
718C:  MOVLW  EA
718E:  MOVWF  FE9
7190:  MOVFF  FF2,50A
7194:  BCF    FF2.7
7196:  MOVLW  00
7198:  MOVLB  0
719A:  CALL   0F30
719E:  TBLRD*-
71A0:  TBLRD*+
71A2:  MOVF   FF5,W
71A4:  MOVWF  FEE
71A6:  IORLW  00
71A8:  BNZ   71A0
71AA:  MOVLB  5
71AC:  BTFSC  x0A.7
71AE:  BSF    FF2.7
71B0:  MOVLW  04
71B2:  MOVWF  x0B
71B4:  MOVLW  EA
71B6:  MOVWF  x0A
71B8:  CLRF   x0C
71BA:  MOVLW  0A
71BC:  MOVWF  x0D
71BE:  CLRF   x0E
71C0:  MOVLW  02
71C2:  MOVWF  x0F
71C4:  MOVLB  0
71C6:  CALL   16E2
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
71CA:  MOVLW  04
71CC:  MOVWF  FEA
71CE:  MOVLW  EA
71D0:  MOVWF  FE9
71D2:  MOVFF  FF2,50A
71D6:  BCF    FF2.7
71D8:  MOVLW  00
71DA:  CALL   0F56
71DE:  TBLRD*-
71E0:  TBLRD*+
71E2:  MOVF   FF5,W
71E4:  MOVWF  FEE
71E6:  IORLW  00
71E8:  BNZ   71E0
71EA:  MOVLB  5
71EC:  BTFSC  x0A.7
71EE:  BSF    FF2.7
71F0:  MOVLW  04
71F2:  MOVWF  x0B
71F4:  MOVLW  EA
71F6:  MOVWF  x0A
71F8:  CLRF   x0C
71FA:  MOVLW  1E
71FC:  MOVWF  x0D
71FE:  CLRF   x0E
7200:  MOVLW  02
7202:  MOVWF  x0F
7204:  MOVLB  0
7206:  CALL   16E2
....................          glcd_update();} 
720A:  CALL   110E
720E:  MOVLB  4
7210:  BRA    716A
....................       } 
....................    } 
7212:  MOVLB  0
7214:  GOTO   31EC
.................... } 
7218:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
