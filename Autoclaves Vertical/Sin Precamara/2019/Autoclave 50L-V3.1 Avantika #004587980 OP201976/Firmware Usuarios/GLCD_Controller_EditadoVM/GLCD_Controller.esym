F N "EstadoAgua2" 0 85 ""
D G "__PCH__" 0 88 ""5.059""
D G "__DEVICE__" 0 88 "4685"
D G "__DATE__" 0 88 ""10-jun.-19""
D G "__TIME__" 0 88 ""15:43:05""
D G "_UNICODE" 0 88 ""?""
D G "__EVAL" 0 88 ""?"" "Falta crear menu de ajuste de variables y de norma CFR21"
d G "PIN_A0" 1 25 "31744"
d G "PIN_A1" 1 26 "31745"
d G "PIN_A2" 1 27 "31746"
d G "PIN_A3" 1 28 "31747"
d G "PIN_A4" 1 29 "31748"
d G "PIN_A5" 1 30 "31749"
d G "PIN_A6" 1 31 "31750"
d G "PIN_A7" 1 32 "31751"
d G "PIN_B0" 1 34 "31752"
d G "PIN_B1" 1 35 "31753"
d G "PIN_B2" 1 36 "31754"
d G "PIN_B3" 1 37 "31755"
d G "PIN_B4" 1 38 "31756"
d G "PIN_B5" 1 39 "31757"
d G "PIN_B6" 1 40 "31758"
d G "PIN_B7" 1 41 "31759"
d G "PIN_C0" 1 43 "31760"
d G "PIN_C1" 1 44 "31761"
d G "PIN_C2" 1 45 "31762"
d G "PIN_C3" 1 46 "31763"
d G "PIN_C4" 1 47 "31764"
d G "PIN_C5" 1 48 "31765"
d G "PIN_C6" 1 49 "31766"
d G "PIN_C7" 1 50 "31767"
d G "PIN_D0" 1 52 "31768"
d G "PIN_D1" 1 53 "31769"
d G "PIN_D2" 1 54 "31770"
d G "PIN_D3" 1 55 "31771"
d G "PIN_D4" 1 56 "31772"
d G "PIN_D5" 1 57 "31773"
d G "PIN_D6" 1 58 "31774"
d G "PIN_D7" 1 59 "31775"
d G "PIN_E0" 1 61 "31776"
d G "PIN_E1" 1 62 "31777"
d G "PIN_E2" 1 63 "31778"
d G "PIN_E3" 1 64 "31779"
d G "FALSE" 1 67 "0"
d G "TRUE" 1 68 "1"
d G "BYTE" 1 70 "int8"
d G "BOOLEAN" 1 71 "int1"
d G "getc" 1 73 "getch"
d G "fgetc" 1 74 "getch"
d G "getchar" 1 75 "getch"
d G "putc" 1 76 "putchar"
d G "fputc" 1 77 "putchar"
d G "fgets" 1 78 "gets"
d G "fputs" 1 79 "puts"
d G "WDT_TIMEOUT" 1 85 "7"
d G "MCLR_FROM_SLEEP" 1 86 "11"
d G "MCLR_FROM_RUN" 1 87 "15"
d G "NORMAL_POWER_UP" 1 88 "12"
d G "BROWNOUT_RESTART" 1 89 "14"
d G "WDT_FROM_SLEEP" 1 90 "3"
d G "RESET_INSTRUCTION" 1 91 "0"
d G "T0_INTERNAL" 1 97 "0"
d G "T0_EXT_L_TO_H" 1 98 "32"
d G "T0_EXT_H_TO_L" 1 99 "48"
d G "T0_DIV_1" 1 101 "8"
d G "T0_DIV_2" 1 102 "0"
d G "T0_DIV_4" 1 103 "1"
d G "T0_DIV_8" 1 104 "2"
d G "T0_DIV_16" 1 105 "3"
d G "T0_DIV_32" 1 106 "4"
d G "T0_DIV_64" 1 107 "5"
d G "T0_DIV_128" 1 108 "6"
d G "T0_DIV_256" 1 109 "7"
d G "T0_OFF" 1 111 "0x80"
d G "T0_8_BIT" 1 113 "0x40"
d G "RTCC_INTERNAL" 1 115 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 116 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 117 "48"
d G "RTCC_DIV_1" 1 118 "8"
d G "RTCC_DIV_2" 1 119 "0"
d G "RTCC_DIV_4" 1 120 "1"
d G "RTCC_DIV_8" 1 121 "2"
d G "RTCC_DIV_16" 1 122 "3"
d G "RTCC_DIV_32" 1 123 "4"
d G "RTCC_DIV_64" 1 124 "5"
d G "RTCC_DIV_128" 1 125 "6"
d G "RTCC_DIV_256" 1 126 "7"
d G "RTCC_OFF" 1 127 "0x80"
d G "RTCC_8_BIT" 1 128 "0x40"
d G "WDT_ON" 1 139 "0x100"
d G "WDT_OFF" 1 140 "0"
d G "T1_DISABLED" 1 146 "0"
d G "T1_INTERNAL" 1 147 "0x85"
d G "T1_EXTERNAL" 1 148 "0x87"
d G "T1_EXTERNAL_SYNC" 1 149 "0x83"
d G "T1_CLK_OUT" 1 151 "8"
d G "T1_DIV_BY_1" 1 153 "0"
d G "T1_DIV_BY_2" 1 154 "0x10"
d G "T1_DIV_BY_4" 1 155 "0x20"
d G "T1_DIV_BY_8" 1 156 "0x30"
d G "T2_DISABLED" 1 161 "0"
d G "T2_DIV_BY_1" 1 162 "4"
d G "T2_DIV_BY_4" 1 163 "5"
d G "T2_DIV_BY_16" 1 164 "6"
d G "T3_DISABLED" 1 170 "0"
d G "T3_INTERNAL" 1 171 "0x85"
d G "T3_EXTERNAL" 1 172 "0x87"
d G "T3_EXTERNAL_SYNC" 1 173 "0x83"
d G "T3_DIV_BY_1" 1 175 "0"
d G "T3_DIV_BY_2" 1 176 "0x10"
d G "T3_DIV_BY_4" 1 177 "0x20"
d G "T3_DIV_BY_8" 1 178 "0x30"
d G "T3_CCP1_TO_2" 1 181 "0x48"
d G "T3_CCP2" 1 182 "0x8"
d G "CCP_OFF" 1 188 "0"
d G "CCP_CAPTURE_FE" 1 189 "4"
d G "CCP_CAPTURE_RE" 1 190 "5"
d G "CCP_CAPTURE_DIV_4" 1 191 "6"
d G "CCP_CAPTURE_DIV_16" 1 192 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 193 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 194 "9"
d G "CCP_COMPARE_INT" 1 195 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 196 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 197 "0xB"
d G "CCP_PWM" 1 198 "0xC"
d G "CCP_PWM_PLUS_1" 1 199 "0x1c"
d G "CCP_PWM_PLUS_2" 1 200 "0x2c"
d G "CCP_PWM_PLUS_3" 1 201 "0x3c"
d G "CCP_PWM_H_H" 1 207 "0x0c"
d G "CCP_PWM_H_L" 1 208 "0x0d"
d G "CCP_PWM_L_H" 1 209 "0x0e"
d G "CCP_PWM_L_L" 1 210 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 1 212 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 1 213 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 1 214 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 1 216 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 1 217 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 1 218 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 1 219 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 220 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 221 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 1 222 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 1 224 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 1 225 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 1 226 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 1 228 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 1 229 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 1 230 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 1 232 "0x80000000"
d G "PSP_ENABLED" 1 242 "0x10"
d G "PSP_DISABLED" 1 243 "0"
d G "SPI_MASTER" 1 250 "0x20"
d G "SPI_SLAVE" 1 251 "0x24"
d G "SPI_L_TO_H" 1 252 "0"
d G "SPI_H_TO_L" 1 253 "0x10"
d G "SPI_CLK_DIV_4" 1 254 "0"
d G "SPI_CLK_DIV_16" 1 255 "1"
d G "SPI_CLK_DIV_64" 1 256 "2"
d G "SPI_CLK_T2" 1 257 "3"
d G "SPI_SS_DISABLED" 1 258 "1"
d G "SPI_SAMPLE_AT_END" 1 260 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 261 "0x4000"
d G "UART_ADDRESS" 1 267 "2"
d G "UART_DATA" 1 268 "4"
d G "UART_AUTODETECT" 1 269 "8"
d G "UART_AUTODETECT_NOWAIT" 1 270 "9"
d G "UART_WAKEUP_ON_RDA" 1 271 "10"
d G "UART_SEND_BREAK" 1 272 "13"
d G "D1_D0_D3_D0" 1 276 "0x0Bff04"
d G "D1_D0_D3_D2_OUT_ON_E1_E2" 1 277 "0x0FF903"
d G "D1_D0_D3_D0_OUT_ON_E1_E2" 1 278 "0x0BF905"
d G "NC_NC_NC_NC" 1 279 "0x00ff07"
d G "D1_D0_D3_D2" 1 280 "0x0Fff02"
d G "D1_D0_NC_NC_OUT_ON_E1" 1 281 "0x03FD01"
d G "D1_VR_D3_VR" 1 282 "0x0Aff06"
d G "D0_VR_D2_VR" 1 283 "0x05ff0e"
d G "CP1_INVERT" 1 284 "0x0000010"
d G "CP2_INVERT" 1 285 "0x0000020"
d G "VREF_LOW" 1 293 "0xa0"
d G "VREF_HIGH" 1 294 "0x80"
d G "VREF_F5" 1 296 "0x40"
d G "VREF_COMP" 1 297 "0x10"
d G "LVD_LVDIN" 1 302 "0x1F"
d G "LVD_45" 1 303 "0x1E"
d G "LVD_42" 1 304 "0x1D"
d G "LVD_40" 1 305 "0x1C"
d G "LVD_38" 1 306 "0x1B"
d G "LVD_36" 1 307 "0x1A"
d G "LVD_35" 1 308 "0x19"
d G "LVD_33" 1 309 "0x18"
d G "LVD_30" 1 310 "0x17"
d G "LVD_28" 1 311 "0x16"
d G "LVD_27" 1 312 "0x15"
d G "LVD_25" 1 313 "0x14"
d G "LVD_24" 1 314 "0x13"
d G "LVD_23" 1 315 "0x12"
d G "LVD_22" 1 316 "0x11"
d G "LVD_21" 1 317 "0x10"
d G "LVD_TRIGGER_BELOW" 1 319 "0"
d G "LVD_TRIGGER_ABOVE" 1 320 "0x80"
d G "OSC_31KHZ" 1 326 "0"
d G "OSC_125KHZ" 1 327 "0x10"
d G "OSC_250KHZ" 1 328 "0x20"
d G "OSC_500KHZ" 1 329 "0x30"
d G "OSC_1MHZ" 1 330 "0x40"
d G "OSC_2MHZ" 1 331 "0x50"
d G "OSC_4MHZ" 1 332 "0x60"
d G "OSC_8MHZ" 1 333 "0x70"
d G "OSC_16MHZ" 1 334 "0x4060"
d G "OSC_32MHZ" 1 335 "0x4070"
d G "OSC_TIMER1" 1 337 "1"
d G "OSC_INTRC" 1 338 "2"
d G "OSC_NORMAL" 1 339 "0"
d G "OSC_IDLE_MODE" 1 341 "0x80"
d G "OSC_31250" 1 342 "0x8000"
d G "OSC_PLL_ON" 1 343 "0x4000"
d G "OSC_PLL_OFF" 1 344 "0"
d G "OSC_STATE_STABLE" 1 348 "4"
d G "OSC_STATE_EXT_RUNNING" 1 349 "8"
d G "ADC_OFF" 1 356 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 357 "0x100"
d G "ADC_CLOCK_DIV_4" 1 358 "0x04"
d G "ADC_CLOCK_DIV_8" 1 359 "0x01"
d G "ADC_CLOCK_DIV_16" 1 360 "0x05"
d G "ADC_CLOCK_DIV_32" 1 361 "0x02"
d G "ADC_CLOCK_DIV_64" 1 362 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 363 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 1 365 "0x00"
d G "ADC_TAD_MUL_2" 1 366 "0x08"
d G "ADC_TAD_MUL_4" 1 367 "0x10"
d G "ADC_TAD_MUL_6" 1 368 "0x18"
d G "ADC_TAD_MUL_8" 1 369 "0x20"
d G "ADC_TAD_MUL_12" 1 370 "0x28"
d G "ADC_TAD_MUL_16" 1 371 "0x30"
d G "ADC_TAD_MUL_20" 1 372 "0x38"
d G "NO_ANALOGS" 1 375 "0x0F" "None"
d G "ALL_ANALOG" 1 376 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B1 B4 B0"
d G "AN0_TO_AN9" 1 377 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B1 B4"
d G "AN0_TO_AN8" 1 378 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B1"
d G "AN0_TO_AN7" 1 379 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 1 380 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 1 381 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 1 382 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 383 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 384 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 385 "0x0D" "A0 A1"
d G "AN0" 1 386 "0x0E" "A0"
d G "AN0_TO_AN12_ANALOG" 1 387 "0x02" "!old only provided for compatibility"
d G "AN0_TO_AN11_ANALOG" 1 388 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 389 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 390 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 391 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 392 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 393 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 394 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 395 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 396 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 399 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 400 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 401 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 402 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 406 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 407 "1"
d G "ADC_READ_ONLY" 1 408 "6"
d G "L_TO_H" 1 420 "0x40"
d G "H_TO_L" 1 421 "0"
d G "GLOBAL" 1 423 "0xF2C0"
d G "INT_RTCC" 1 424 "0x00F220"
d G "INT_TIMER0" 1 425 "0x00F220"
d G "INT_TIMER1" 1 426 "0x009D01"
d G "INT_TIMER2" 1 427 "0x009D02"
d G "INT_TIMER3" 1 428 "0x00A002"
d G "INT_EXT_L2H" 1 429 "0x5000F210"
d G "INT_EXT_H2L" 1 430 "0x6000F210"
d G "INT_EXT" 1 431 "0x00F210"
d G "INT_EXT1_L2H" 1 432 "0x5001F008"
d G "INT_EXT1_H2L" 1 433 "0x6001F008"
d G "INT_EXT1" 1 434 "0x00F008"
d G "INT_EXT2_L2H" 1 435 "0x5002F010"
d G "INT_EXT2_H2L" 1 436 "0x6002F010"
d G "INT_EXT2" 1 437 "0x00F010"
d G "INT_RB" 1 438 "0x00FFF208"
d G "INT_PSP" 1 439 "0x009D80"
d G "INT_AD" 1 440 "0x009D40"
d G "INT_RDA" 1 441 "0x009D20"
d G "INT_TBE" 1 442 "0x009D10"
d G "INT_SSP" 1 443 "0x009D08"
d G "INT_CCP1" 1 444 "0x009D04"
d G "INT_CCP2" 1 445 "0x00A001"
d G "INT_BUSCOL" 1 446 "0x00A008"
d G "INT_LOWVOLT" 1 447 "0x00A004"
d G "INT_CANIRX" 1 448 "0x00A380"
d G "INT_CANWAKE" 1 449 "0x00A340"
d G "INT_CANERR" 1 450 "0x00A320"
d G "INT_COMP" 1 451 "0x00A040"
d G "INT_EEPROM" 1 452 "0x00A010"
d G "INT_CANTX2" 1 453 "0x00A310"
d G "INT_CANTX1" 1 454 "0x00A308"
d G "INT_CANTX0" 1 455 "0x00A304"
d G "INT_CANRX1" 1 456 "0x00A302"
d G "INT_CANRX0" 1 457 "0x00A301"
d G "INT_OSCF" 1 458 "0x00A080"
D G "_STDIO" 2 12 ""
D G "_STRING" 3 12 ""
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 18 "unsigned int16"
D G "size_t" 4 21 "unsigned int8"
D G "wchar_t" 4 22 "char"
D G "NULL" 4 23 "0"
D G "offsetof" 4 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 3 19 10 "FUNCTION"
F N "memmove" 3 34 ""
V L "s1" 3 34 "*int8" `75 
V L "s2" 3 34 "*int8" `76 
V L "n" 3 34 "int8" `77 
F G "memmove" 3 35 "*int8(*int8 s1,*int8 s2,int8 n)" `74 
V L "sc1" 3 36 "*int8" `78 
V L "sc2" 3 37 "*int8" `79 
D G "strcopy" 3 54 "strcpy"
C L "strncpy" 3 19 4 "FUNCTION"
F N "strncpy" 3 61 ""
V L "s1" 3 61 "*int8" `81 
V L "s2" 3 61 "*int8" `82 
V L "n" 3 61 "int8" `83 
F G "strncpy" 3 62 "*int8(*int8 s1,*int8 s2,int8 n)" `80 
V L "s" 3 63 "*int8" `84 
C L "strcat" 3 19 3 "FUNCTION"
F N "strcat" 3 78 ""
V L "s1" 3 78 "*int8" `86 
V L "s2" 3 78 "*int8" `87 
F G "strcat" 3 79 "*int8(*int8 s1,*int8 s2)" `85 
V L "s" 3 80 "*int8" `88 
C L "strncat" 3 19 2 "FUNCTION"
F N "strncat" 3 96 ""
V L "s1" 3 96 "*int8" `90 
V L "s2" 3 96 "*int8" `91 
V L "n" 3 96 "int8" `92 
F G "strncat" 3 97 "*int8(*int8 s1,*int8 s2,int8 n)" `89 
V L "s" 3 98 "*int8" `93 
C L "memcmp" 3 19 3 "FUNCTION"
F N "memcmp" 3 120 ""
V L "s1" 3 120 "*int8" `95 
V L "s2" 3 120 "*int8" `96 
V L "n" 3 120 "int8" `97 
F G "memcmp" 3 121 "sint8(*int8 s1,*int8 s2,int8 n)" `94 
V L "su1" 3 122 "*int8" `98 
V L "su2" 3 122 "*int8" `99 
C L "strcmp" 3 19 2 "FUNCTION"
F N "strcmp" 3 134 ""
V L "s1" 3 134 "*int8" `101 
V L "s2" 3 134 "*int8" `102 
F G "strcmp" 3 135 "sint8(*int8 s1,*int8 s2)" `100 
C L "strcoll" 3 19 2 "FUNCTION"
F N "strcoll" 3 144 ""
V L "s1" 3 144 "*int8" `104 
V L "s2" 3 144 "*int8" `105 
F G "strcoll" 3 145 "sint8(*int8 s1,*int8 s2)" `103 
C L "strncmp" 3 19 4 "FUNCTION"
F N "strncmp" 3 157 ""
V L "s1" 3 157 "*int8" `107 
V L "s2" 3 157 "*int8" `108 
V L "n" 3 157 "int8" `109 
F G "strncmp" 3 158 "sint8(*int8 s1,*int8 s2,int8 n)" `106 
C L "strxfrm" 3 19 3 "FUNCTION"
F N "strxfrm" 3 169 ""
V L "s1" 3 169 "*int8" `111 
V L "s2" 3 169 "*int8" `112 
V L "n" 3 169 "int8" `113 
F G "strxfrm" 3 170 "int8(*int8 s1,*int8 s2,int8 n)" `110 
V L "s" 3 171 "*int8" `114 
V L "n1" 3 172 "int8" `115 
C L "memchr" 3 19 3 "FUNCTION"
F N "memchr" 3 191 ""
V L "s" 3 191 "*int8" `117 
V L "c" 3 191 "int8" `118 
V L "n" 3 191 "int8" `119 
F G "memchr" 3 192 "*int8(*int8 s,int8 c,int8 n)" `116 
V L "uc" 3 193 "int8" `120 
V L "su" 3 194 "*int8" `121 
C L "strchr" 3 19 2 "FUNCTION"
F N "strchr" 3 205 ""
V L "s" 3 205 "*int8" `123 
V L "c" 3 205 "int8" `124 
F G "strchr" 3 206 "*int8(*int8 s,int8 c)" `122 
C L "strcspn" 3 19 4 "FUNCTION"
F N "strcspn" 3 217 ""
V L "s1" 3 217 "*int8" `126 
V L "s2" 3 217 "*int8" `127 
F G "strcspn" 3 218 "int8(*int8 s1,*int8 s2)" `125 
V L "sc1" 3 219 "*int8" `128 
V L "sc2" 3 219 "*int8" `129 
C L "strpbrk" 3 19 4 "FUNCTION"
F N "strpbrk" 3 232 ""
V L "s1" 3 232 "*int8" `131 
V L "s2" 3 232 "*int8" `132 
F G "strpbrk" 3 233 "*int8(*int8 s1,*int8 s2)" `130 
V L "sc1" 3 234 "*int8" `133 
V L "sc2" 3 234 "*int8" `134 
C L "strrchr" 3 19 2 "FUNCTION"
F N "strrchr" 3 247 ""
V L "s" 3 247 "*int8" `136 
V L "c" 3 247 "int8" `137 
F G "strrchr" 3 248 "*int8(*int8 s,int8 c)" `135 
V L "p" 3 249 "*int8" `138 
C L "strspn" 3 19 2 "FUNCTION"
F N "strspn" 3 262 ""
V L "s1" 3 262 "*int8" `140 
V L "s2" 3 262 "*int8" `141 
F G "strspn" 3 263 "int8(*int8 s1,*int8 s2)" `139 
V L "sc1" 3 264 "*int8" `142 
V L "sc2" 3 264 "*int8" `143 
C L "strstr" 3 19 6 "FUNCTION"
F N "strstr" 3 281 ""
V L "s1" 3 281 "*int8" `145 
V L "s2" 3 281 "*int8" `146 
F G "strstr" 3 282 "*int8(*int8 s1,*int8 s2)" `144 
V L "s" 3 283 "*int8" `147 
V L "t" 3 283 "*int8" `148 
C L "strtok" 3 19 13 "FUNCTION"
F N "strtok" 3 320 ""
V L "s1" 3 320 "*int8" `150 
V L "s2" 3 320 "*int8" `151 
F G "strtok" 3 321 "*int8(*int8 s1,*int8 s2)" `149 
V L "beg" 3 322 "*int8" `152 
V L "end" 3 322 "*int8" `153 
V L "save" 3 323 "*int8" `154 
C L "strlen" 3 19 6 "FUNCTION"
F N "strlen" 3 369 ""
V L "s" 3 369 "*int8" `156 
F G "strlen" 3 370 "int8(*int8 s)" `155 
V L "sc" 3 371 "*int8" `157 
C L "stricmp" 3 19 2 "FUNCTION"
F N "stricmp" 3 380 ""
V L "s1" 3 380 "*int8" `159 
V L "s2" 3 380 "*int8" `160 
F G "stricmp" 3 381 "sint8(*int8 s1,*int8 s2)" `158 
C L "strlwr" 3 19 3 "FUNCTION"
F N "strlwr" 3 394 ""
V L "s" 3 394 "*int8" `164 
F G "strlwr" 3 395 "*int8(*int8 s)" `163 
V L "p" 3 396 "*int8" `165 
D G "_STDLIB" 6 12 ""
D G "RAND_MAX" 6 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 6 25 "1"
T G "div_t" 6 33 "{sint8 quot,sint8 rem}" `169 
T G "ldiv_t" 6 38 "{sint16 quot,sint16 rem}" `173  "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 4 3 6 "FUNCTION"
C L "atoi" 6 43 2 "FUNCTION"
C L "atoi" 6 46 1 "*"
C L "atoi" 6 46 1 "*"
F N "atoi" 6 50 ""
V L "s" 6 50 "*int8" `175 
f G "atoi" 6 50 "sint8(*int8 s)" `174  "Syntax: signed int32  atoi32(char * s)"
F N "atoi32" 6 58 ""
V L "s" 6 58 "*int8" `177 
f G "atoi32" 6 58 "sint32(*int8 s)" `176  "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 6 46 2 "FUNCTION"
F N "itoa" 6 79 ""
V L "num" 6 79 "sint32" `179 
V L "base" 6 79 "int8" `180 
V L "s" 6 79 "*int8" `181 
f G "itoa" 6 79 "*int8(sint32 num,int8 base,*int8 s)" `178  "Standard template: signed int16  atol(char * s)"
C L "itoa" 6 81 1 "*"
C L "itoa" 6 81 1 "*"
F N "atol" 6 85 ""
V L "s" 6 85 "*int8" `183 
f G "atol" 6 85 "sint16(*int8 s)" `182  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 6 87 1 "*"
C L "atol" 6 87 1 "*"
C L "atol" 6 87 1 "*"
C L "atol" 6 87 1 "*"
F N "strtol" 6 93 ""
V L "s" 6 93 "*int8" `185 
V L "endptr" 6 93 "*int8" `186 
V L "base" 6 93 "sint8" `187 
f G "strtol" 6 93 "sint16(*int8 s,*int8 endptr,sint8 base)" `184  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 6 95 1 "*"
C L "strtol" 6 95 1 "*"
C L "strtol" 6 95 1 "*"
C L "strtol" 6 95 1 "*"
F N "strtoul" 6 101 ""
V L "s" 6 101 "*int8" `189 
V L "endptr" 6 101 "*int8" `190 
V L "base" 6 101 "sint8" `191 
f G "strtoul" 6 101 "int16(*int8 s,*int8 endptr,sint8 base)" `188  "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 6 95 2 "FUNCTION"
C L "strtoul" 6 103 1 "*"
C L "strtoul" 6 103 1 "*"
C L "strtoul" 6 103 1 "*"
F N "strtof" 6 110 ""
V L "s" 6 110 "*int8" `193 
V L "endptr" 6 110 "*int8" `194 
f G "strtof" 6 110 "float(*int8 s,*int8 endptr)" `192  "provided for compatibility"
D G "strtof48" 6 116 "(s,e) strtof(s, e)"
D G "strtod" 6 117 "(s,e) strtof(s, e)"
C L "strtof" 6 103 1 "FUNCTION"
C L "strtof" 6 120 1 "*"
D G "atof" 6 124 "(s)   strtof(s, 0)"
C L "strtof" 6 120 1 "FUNCTION"
C L "strtof" 6 143 1 "*"
C L "strtof" 6 143 1 "*"
C L "strtof" 6 143 1 "*"
F N "atoe" 6 149 ""
V L "s" 6 149 "*int8" `196 
f G "atoe" 6 149 "float(*int8 s)" `195  "Pseudo-random sequence generation functions"
C L "atoe" 6 143 1 "FUNCTION"
C L "atoe" 6 160 1 "*"
C L "atoe" 6 160 1 "*"
C L "atoe" 6 160 1 "*"
C L "atoe" 6 160 1 "*"
C L "atoe" 6 160 1 "*"
F N "rand" 6 169 ""
f G "rand" 6 169 "int16()" `197  "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
F N "srand" 6 191 ""
V L "seed" 6 191 "int32" `199 
f G "srand" 6 191 "void(int32 seed)" `198  "Memory management functions"
C L "srand" 6 171 3 "FUNCTION"
F N "system" 6 205 ""
V L "string" 6 205 "*int8" `201 
f G "system" 6 205 "sint8(*int8 string)" `200  "Searching and sorting utilities"
C L "system" 6 171 1 "FUNCTION"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 4 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
D G "labs" 6 249 "abs"
F N "div" 6 251 ""
V L "numer" 6 251 "sint8" `203 
V L "denom" 6 251 "sint8" `204 
f G "div" 6 251 "div_t(sint8 numer,sint8 denom)" `202 
F N "ldiv" 6 252 ""
V L "numer" 6 252 "sint16" `206 
V L "denom" 6 252 "sint16" `207 
f G "ldiv" 6 252 "ldiv_t(sint16 numer,sint16 denom)" `205  "Multibyte character functions"
C L "ldiv" 6 229 4 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
C L "ldiv" 3 2 7 "FUNCTION"
F N "div" 6 274 ""
V L "numer" 6 274 "sint8" `203 
V L "denom" 6 274 "sint8" `210 
F G "div" 6 275 "div_t(sint8 numer,sint8 denom)" `202 
V L "val" 6 276 "div_t" `208 
F N "ldiv" 6 282 ""
V L "numer" 6 282 "sint16" `206 
V L "denom" 6 282 "sint16" `217 
F G "ldiv" 6 283 "ldiv_t(sint16 numer,sint16 denom)" `205 
V L "val" 6 284 "ldiv_t" `215 
F N "atoe" 6 361 ""
V L "s" 6 361 "*int8" `223 
F G "atoe" 6 362 "float(*int8 s)" `195 
V L "pow10" 6 363 "float" `222 
V L "result" 6 364 "float" `223 
V L "sign" 6 365 "int8" `224 
V L "expsign" 6 366 "int8" `225 
V L "c" 6 367 "int8" `226 
V L "ptr" 6 368 "int8" `227 
V L "i" 6 369 "int8" `228 
V L "exp" 6 370 "float" `229 
V L "expcnt" 6 371 "int8" `230 
C L "atoe" 6 397 1 "FUNCTION"
F N "atoi" 6 429 ""
V L "s" 6 429 "*int8" `243 
F G "atoi" 6 430 "sint8(*int8 s)" `174 
V L "result" 6 431 "sint8" `242 
V L "sign" 6 432 "int8" `243 
V L "base" 6 432 "int8" `244 
V L "index" 6 432 "int8" `245 
V L "c" 6 433 "int8" `246 
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
F N "atol" 6 498 ""
V L "s" 6 498 "*int8" `248 
F G "atol" 6 499 "sint16(*int8 s)" `182 
V L "result" 6 500 "sint16" `247 
V L "sign" 6 501 "int8" `248 
V L "base" 6 501 "int8" `249 
V L "index" 6 501 "int8" `250 
V L "c" 6 502 "int8" `251 
C L "atol" 6 397 1 "FUNCTION"
C L "atol" 6 397 1 "FUNCTION"
C L "atol" 6 397 1 "FUNCTION"
C L "atol" 6 397 1 "FUNCTION"
C L "mult_with10" 6 397 1 "FUNCTION"
F N "mult_with10" 6 565 ""
V L "num" 6 565 "int32" `253 
F G "mult_with10" 6 566 "sint32(int32 num)" `252 
F N "atoi32" 6 571 ""
V L "s" 6 571 "*int8" `255 
F G "atoi32" 6 572 "sint32(*int8 s)" `176 
V L "result" 6 573 "sint32" `254 
V L "sign" 6 574 "int8" `255 
V L "base" 6 574 "int8" `256 
V L "index" 6 574 "int8" `257 
V L "c" 6 575 "int8" `258 
C L "atoi32" 6 397 1 "FUNCTION"
C L "atoi32" 6 397 1 "FUNCTION"
C L "atoi32" 6 397 1 "FUNCTION"
C L "atoi32" 6 397 1 "FUNCTION"
C L "atoi32" 6 397 1 "FUNCTION"
F N "itoa" 6 770 ""
V L "num" 6 770 "sint32" `179 
V L "base" 6 770 "int8" `180 
V L "s" 6 770 "*int8" `262 
F G "itoa" 6 771 "*int8(sint32 num,int8 base,*int8 s)" `178 
V L "temp" 6 772 "int32" `259 
V L "i" 6 773 "int8" `260 
V L "sign" 6 773 "int8" `261 
V L "cnt" 6 773 "int8" `262 
V L "c" 6 774 "int8" `263 
C L "itoa" 6 397 1 "FUNCTION"
C L "itoa" 6 397 1 "FUNCTION"
C L "itoa" 6 397 1 "FUNCTION"
C L "itoa" 6 397 1 "FUNCTION"
C L "itoa" 6 397 1 "FUNCTION"
F N "strtof" 6 807 ""
V L "s" 6 807 "*int8" `193 
V L "endptr" 6 807 "*int8" `272 
F G "strtof" 6 808 "float(*int8 s,*int8 endptr)" `192 
V L "pow10" 6 809 "float" `270 
V L "result" 6 810 "float" `271 
V L "skip" 6 811 "int1" `272 
V L "sign" 6 811 "int1" `273 
V L "point" 6 811 "int1" `274 
V L "c" 6 812 "int8" `275 
V L "ptr" 6 813 "int8" `276 
F N "strtoul" 6 1025 ""
V L "s" 6 1025 "*int8" `189 
V L "endptr" 6 1025 "*int8" `190 
V L "base" 6 1025 "sint8" `281 
F G "strtoul" 6 1026 "int16(*int8 s,*int8 endptr,sint8 base)" `188 
V L "sc" 6 1027 "*int8" `278 
V L "s1" 6 1027 "*int8" `279 
V L "sd" 6 1027 "*int8" `280 
V L "x" 6 1028 "int16" `281 
V L "sign" 6 1029 "int8" `282 
V L "digits" 6 1030 "int8[1]" `283 
C L "strtoul" 6 397 1 "FUNCTION"
C L "strtoul" 6 397 1 "FUNCTION"
C L "strtoul" 6 397 1 "FUNCTION"
F N "strtol" 6 1087 ""
V L "s" 6 1087 "*int8" `185 
V L "endptr" 6 1087 "*int8" `186 
V L "base" 6 1087 "sint8" `288 
F G "strtol" 6 1088 "sint16(*int8 s,*int8 endptr,sint8 base)" `184 
V L "sc" 6 1089 "*int8" `285 
V L "s1" 6 1089 "*int8" `286 
V L "sd" 6 1089 "*int8" `287 
V L "x" 6 1090 "sint16" `288 
V L "sign" 6 1091 "int8" `289 
V L "digits" 6 1092 "int8[1]" `290 
C L "strtol" 6 397 1 "FUNCTION"
C L "strtol" 6 397 1 "FUNCTION"
C L "strtol" 6 397 1 "FUNCTION"
F N "system" 6 1150 ""
V L "string" 6 1150 "*int8" `293 
F G "system" 6 1151 "sint8(*int8 string)" `200 
F N "mblen" 6 1155 ""
V L "s" 6 1155 "*int8" `293 
V L "n" 6 1155 "int8" `294 
F G "mblen" 6 1156 "int8(*int8 s,int8 n)" `292 
F N "mbtowc" 6 1160 ""
V L "pwc" 6 1160 "*int8" `296 
V L "s" 6 1160 "*int8" `297 
V L "n" 6 1160 "int8" `298 
F G "mbtowc" 6 1161 "int8(*int8 pwc,*int8 s,int8 n)" `295 
F N "wctomb" 6 1166 ""
V L "s" 6 1166 "*int8" `300 
V L "wchar" 6 1166 "int8" `301 
F G "wctomb" 6 1167 "int8(*int8 s,int8 wchar)" `299 
F N "mbstowcs" 6 1172 ""
V L "pwcs" 6 1172 "*int8" `303 
V L "s" 6 1172 "*int8" `304 
V L "n" 6 1172 "int8" `305 
F G "mbstowcs" 6 1173 "int8(*int8 pwcs,*int8 s,int8 n)" `302 
F N "wcstombs" 6 1178 ""
V L "s" 6 1178 "*int8" `307 
V L "pwcs" 6 1178 "*int8" `308 
V L "n" 6 1178 "int8" `309 
F G "wcstombs" 6 1179 "int8(*int8 s,*int8 pwcs,int8 n)" `306 
V G "_Randseed" 6 1188 "int32" `310 
F N "rand" 6 1190 ""
F G "rand" 6 1191 "int16()" `197 
F N "srand" 6 1196 ""
V L "seed" 6 1196 "int32" `315 
F G "srand" 6 1197 "void(int32 seed)" `198 
F N "*_Cmpfun" 6 1206 ""
V L "p1" 6 1206 "*int8" `315 
V L "p2" 6 1206 "*int8" `316 
T G "*_Cmpfun" 6 1206 "sint8(*int8 p1,*int8 p2)" `314 
F N "qsort" 6 1213 ""
V L "qdata" 6 1213 "*int8" `319 
V L "qitems" 6 1213 "int8" `320 
V L "qsize" 6 1213 "int8" `321 
V L "cmp" 6 1213 "_Cmpfun" `322 
F G "qsort" 6 1213 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)" `318 
V L "m" 6 1214 "int8" `323 
V L "j" 6 1214 "int8" `324 
V L "i" 6 1214 "int8" `325 
V L "l" 6 1214 "int8" `326 
V L "done" 6 1215 "int1" `327 
V L "t" 6 1216 "int8[16]" `328 
F N "bsearch" 6 1241 ""
V L "key" 6 1241 "*int8" `331 
V L "base" 6 1241 "*int8" `332 
V L "num" 6 1241 "int8" `333 
V L "width" 6 1241 "int8" `334 
V L "cmp" 6 1241 "_Cmpfun" `335 
F G "bsearch" 6 1242 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)" `330 
V L "p" 6 1243 "*int8" `336 
V L "q" 6 1243 "*int8" `337 
V L "n" 6 1244 "int8" `338 
V L "pivot" 6 1245 "int8" `339 
V L "val" 6 1246 "sint8" `340 
C L "bsearch" 6 397 1 "FUNCTION"
D G "RTC_SCLK" 7 33 "PIN_E1"
D G "RTC_IO" 7 34 "PIN_E2"
D G "RTC_RST" 7 35 "PIN_C0"
C L "write_ds1302_byte" 7 2 1 "FUNCTION"
F N "write_ds1302_byte" 7 39 ""
V L "cmd" 7 39 "int8" `342 
F G "write_ds1302_byte" 7 39 "void(int8 cmd)" `341 
V L "i" 7 40 "int8" `343 
F N "write_ds1302" 7 49 ""
V L "cmd" 7 49 "int8" `345 
V L "data" 7 49 "int8" `346 
F G "write_ds1302" 7 49 "void(int8 cmd,int8 data)" `344 
F N "read_ds1302" 7 57 ""
V L "cmd" 7 57 "int8" `348 
F G "read_ds1302" 7 57 "int8(int8 cmd)" `347 
V L "i" 7 58 "int8" `349 
V L "data" 7 58 "int8" `350 
F N "rtc_init" 7 78 ""
F G "rtc_init" 7 78 "void()" `351 
V L "x" 7 79 "int8" `352 
F N "get_bcd" 7 90 ""
V L "data" 7 90 "int8" `354 
F G "get_bcd" 7 91 "int8(int8 data)" `353 
V L "nibh" 7 92 "int8" `355 
V L "nibl" 7 93 "int8" `356 
F N "rm_bcd" 7 101 ""
V L "data" 7 101 "int8" `361 
F G "rm_bcd" 7 102 "int8(int8 data)" `360 
V L "i" 7 103 "int8" `362 
F N "rtc_set_datetime" 7 112 ""
V L "day" 7 112 "int8" `364 
V L "mth" 7 112 "int8" `365 
V L "year" 7 112 "int8" `366 
V L "dow" 7 112 "int8" `367 
V L "hr" 7 112 "int8" `368 
V L "min" 7 112 "int8" `369 
F G "rtc_set_datetime" 7 112 "void(int8 day,int8 mth,int8 year,int8 dow,int8 hr,int8 min)" `363 
F N "rtc_get_date" 7 123 ""
V L "day" 7 123 "int8" `371 
V L "mth" 7 123 "int8" `372 
V L "year" 7 123 "int8" `373 
V L "dow" 7 123 "int8" `374 
F G "rtc_get_date" 7 123 "void(int8 day,int8 mth,int8 year,int8 dow)" `370 
F N "rtc_get_time" 7 130 ""
V L "hr" 7 130 "int8" `376 
V L "min" 7 130 "int8" `377 
V L "sec" 7 130 "int8" `378 
F G "rtc_get_time" 7 130 "void(int8 hr,int8 min,int8 sec)" `375 
F N "rtc_write_nvr" 7 136 ""
V L "address" 7 136 "int8" `380 
V L "data" 7 136 "int8" `381 
F G "rtc_write_nvr" 7 136 "void(int8 address,int8 data)" `379 
F N "rtc_read_nvr" 7 140 ""
V L "address" 7 140 "int8" `383 
F G "rtc_read_nvr" 7 140 "int8(int8 address)" `382 
D G "EEPROM_SDA" 8 25 "PIN_C4"
D G "EEPROM_SCL" 8 26 "PIN_C3"
D G "EEPROM_ADDRESS" 8 32 "long int"
D G "EEPROM_SIZE" 8 33 "65535"
F N "init_ext_eeprom" 8 35 ""
F G "init_ext_eeprom" 8 36 "void()" `388 
F N "write_ext_eeprom" 8 42 ""
V L "address" 8 42 "int16" `390 
V L "data" 8 42 "int8" `391 
F G "write_ext_eeprom" 8 43 "void(int16 address,int8 data)" `389 
V L "status" 8 44 "int1" `392 
F N "read_ext_eeprom" 8 61 ""
V L "address" 8 61 "int16" `394 
F G "read_ext_eeprom" 8 61 "int8(int16 address)" `393 
V L "data" 8 62 "int8" `395 
D G "UP" 0 16 "!input(PIN_B6)"
D G "DOWN" 0 17 "!input(PIN_B5)"
D G "RIGHT" 0 18 "!input(PIN_B4)"
D G "LEFT" 0 19 "!input(PIN_B3)"
D G "DOOR" 0 21 "!input(PIN_B1)"
D G "STOP" 0 22 "!input(PIN_B2)"
D G "TERM" 0 23 "!input(PIN_B3)"
D G "PRES" 0 24 "!input(PIN_A4)"
D G "LOW" 0 26 "input(PIN_B0)"
D G "Buzzer_on" 0 28 "output_bit(PIN_C5,1)"
D G "Buzzer_off" 0 29 "output_bit(PIN_C5,0)"
D G "Suministro_on" 0 31 "output_bit(PIN_D0,1)"
D G "Suministro_off" 0 32 "output_bit(PIN_D0,0)"
D G "Paso_on" 0 34 "output_bit(PIN_D1,1)"
D G "Paso_off" 0 35 "output_bit(PIN_D1,0)"
D G "Vacio_on" 0 37 "output_bit(PIN_D2,1)"
D G "Vacio_off" 0 38 "output_bit(PIN_D2,0)"
D G "Desfogue_on" 0 40 "output_bit(PIN_D3,1)"
D G "Desfogue_off" 0 41 "output_bit(PIN_D3,0)"
D G "Aire_on" 0 43 "output_bit(PIN_D4,1)"
D G "Aire_off" 0 44 "output_bit(PIN_D4,0)"
D G "BombaVacio_on" 0 46 "output_bit(PIN_D5,1)"
D G "BombaVacio_off" 0 47 "output_bit(PIN_D5,0)"
D G "Agua_on" 0 49 "output_bit(PIN_D6,1)"
D G "Agua_off" 0 50 "output_bit(PIN_D6,0)"
D G "Agua2_on" 0 52 "output_bit(PIN_D7,1)"
D G "Agua2_off" 0 53 "output_bit(PIN_D7,0)"
D G "OFF" 0 55 "0"
D G "ON" 0 56 "1"
D G "RX_BUFFER_SIZE" 0 57 "10"
V G "Rx_Buffer" 0 58 "int8[11]" `396 
V G "Rx_Buffer2" 0 59 "int8[11]" `397 
V G "RX_Wr_Index" 0 60 "int8" `398 
V G "SlaveA0Tx" 0 64 "int8[32]" `399 
V G "dato" 0 65 "int8" `400 
V G "direccion" 0 66 "int8" `401 
V G "posicion" 0 67 "int8" `402 
V G "Regular" 0 75 "int8[12]" `403 
V G "Bisiesto" 0 76 "int8[12]" `404 
V G "AlarmaTiempoProlongado" 0 79 "int1" `405 
V G "AlarmaSobreTemperatura" 0 79 "int1" `406 
V G "AlarmaTermostato" 0 79 "int1" `407 
V G "AlarmaPuerta" 0 79 "int1" `408 
V G "AlarmaEmergencia" 0 79 "int1" `409 
V G "AlarmaVacio" 0 79 "int1" `410 
V G "AlarmaBomba" 0 80 "int1" `411 
V G "guardaCiclo" 0 80 "int1" `412 
V G "Cilindro" 0 80 "int1" `413 
V G "TiempoVacio" 0 81 "int16" `414 
V G "IniciaLlenado" 0 84 "int1" `415 
V G "IniciaCiclo" 0 84 "int1" `416 
V G "Esterilizando" 0 84 "int1" `417 
V G "Secando" 0 84 "int1" `418 
V G "SensadoNivel" 0 84 "int1" `419 
V G "Desfogando" 0 84 "int1" `420 
V G "DesfogueSuave" 0 84 "int1" `421 
V G "CalderinLleno" 0 84 "int1" `422 
V G "EstadoDesfogue" 0 85 "int1" `423 
V G "EstadoSuministro" 0 85 "int1" `424 
V G "EstadoAire" 0 85 "int1" `425 
V G "PruebaEstados" 0 85 "int1" `426 
V G "disp_Guarda" 0 85 "int1" `427 
V G "Ciclo" 0 85 "int1" `428 
V G "EstadoAgua2" 0 85 "int1" `429 
V G "Op" 0 86 "int1" `430 
V G "Op2" 0 86 "int1" `431 
V G "Minutos" 0 86 "int1" `432 
V G "Segundos" 0 86 "int1" `433 
V G "GuardaEEPROM" 0 86 "int1" `434 
V G "EstadoPaso" 0 86 "int1" `435 
V G "EstadoVacio" 0 86 "int1" `436 
V G "EstadoBuzzer" 0 86 "int1" `437 
V G "flagAlarma" 0 86 "int1" `438 
V G "flagBuzzer" 0 87 "int1" `439 
V G "flagSilencio" 0 87 "int1" `440 
V G "Finalizo" 0 87 "int1" `441 
V G "AlarmaPresion" 0 87 "int1" `442 
V G "EstadoACierre" 0 87 "int1" `443 
V G "EstadoBomba" 0 87 "int1" `444 
V G "Libre" 0 87 "int1" `445 
V G "ingreso" 0 87 "int1" `446 
V G "Fugas" 0 87 "int1" `447 
V G "PreCalentamiento" 0 88 "int1" `448 
V G "IniciaVacio" 0 88 "int1" `449 
V G "IniciaVacio2" 0 88 "int1" `450 
V G "Vacio" 0 88 "int1" `451 
V G "flag_vac" 0 88 "int1" `452 
V G "flag_vacio" 0 88 "int1" `453 
V G "flag_pulso" 0 88 "int1" `454 
V G "EstadoAireBomba" 0 88 "int1" `455 
V G "TiempoCiclo" 0 91 "int16" `456 
V G "TiempoSensadoNivel" 0 91 "int16" `457 
V G "Tp" 0 91 "int16" `458 
V G "Tc" 0 91 "int16" `459 
V G "tguarda" 0 91 "int16" `460 
V G "Testerilizacion" 0 92 "sint8[4]" `461 
V G "Testerilizacionp" 0 93 "sint8[4]" `462 
V G "Tsecado" 0 94 "sint8[4]" `463 
V G "Tsecadop" 0 95 "sint8[4]" `464 
V G "PromPresion" 0 98 "float[20]" `465 
V G "PromPresionp" 0 99 "float[20]" `466 
V G "Temporal" 0 100 "float" `467 
V G "R7" 0 102 "float" `468 
V G "R8" 0 102 "float" `469 
V G "R9" 0 102 "float" `470 
V G "R10" 0 102 "float" `471 
V G "AN" 0 102 "float" `472 
V G "BN" 0 102 "float" `473 
V G "X" 0 103 "float[2]" `474 
V G "promediopresion" 0 104 "float" `475 
V G "promediopresionp" 0 104 "float" `476 
V G "h" 0 105 "int8" `477 
V G "l" 0 105 "int8" `478 
V G "MediaMovil" 0 105 "int8" `479 
V G "PantallaPrincipal" 0 105 "int8" `480 
V G "TipoClave" 0 105 "int8" `481 
V G "Modulo" 0 105 "int8" `482 
V G "V0" 0 106 "float" `483 
V G "Pt" 0 106 "float" `484 
V G "Tciclo" 0 106 "float" `485 
V G "Tpulso" 0 106 "float" `486 
V G "error" 0 106 "float" `487 
V G "Prom" 0 106 "float" `488 
V G "Temperature" 0 106 "float" `489 
V G "tmp" 0 106 "float" `490 
V G "Ganancia" 0 106 "float" `491 
V G "Ganancia2" 0 106 "float" `492 
V G "desvio" 0 106 "float" `493 
V G "V1" 0 107 "float" `494 
V G "Presion" 0 107 "float" `495 
V G "V2" 0 107 "float" `496 
V G "Presionp" 0 107 "float" `497 
V G "Temperatura" 0 108 "float" `498 
V G "Temperatura2" 0 108 "float" `499 
V G "a" 0 109 "float" `500 
V G "b" 0 109 "float" `501 
V G "c" 0 109 "float" `502 
V G "desfoguelento" 0 112 "int1" `503 
V G "Lectura" 0 112 "int1" `504 
V G "Grafica" 0 112 "int1" `505 
V G "disp_Stop" 0 113 "int1" `506 
V G "flagTC" 0 113 "int1" `507 
V G "flagImprime" 0 113 "int1" `508 
V G "Control" 0 114 "int8" `509 
V G "tiemporecta" 0 114 "int8" `510 
V G "Controlando" 0 114 "int8" `511 
V G "timpresion" 0 114 "int8" `512 
V G "CalculoImpresion" 0 114 "int8" `513 
V G "Inicio" 0 114 "int8" `514 
V G "Dato_Exitoso" 0 114 "int8" `515 
V G "Dato2" 0 114 "int8" `516 
V G "Menu" 0 115 "int8" `517 
V G "MenuAnt" 0 115 "int8" `518 
V G "MenuAntt" 0 115 "int8" `519 
V G "i" 0 115 "int8" `520 
V G "CiclosL" 0 115 "int8" `521 
V G "CiclosH" 0 115 "int8" `522 
V G "CicloSeleccionado" 0 115 "int8" `523 
V G "Tapertura" 0 115 "int8" `524 
V G "CantidadPulsos" 0 116 "int16" `525 
V G "Setpoint" 0 117 "int8" `526 
V G "Opcion" 0 117 "int8" `527 
V G "Opcion2" 0 117 "int8" `528 
V G "tiempo_esterilizacion" 0 117 "int8" `529 
V G "tiempo_secado" 0 117 "int8" `530 
V G "tiempoImpresion" 0 117 "int8" `531 
V G "tiempos" 0 118 "int16" `532 
V G "tiempos2" 0 118 "int16" `533 
V G "tiempos3" 0 118 "int16" `534 
V G "tiempoctrl" 0 118 "int16" `535 
V G "Nivel" 0 118 "int16" `536 
V G "tinicio" 0 118 "int16" `537 
V G "PresionCamara" 0 118 "int16" `538 
V G "PresionPreCamara" 0 118 "int16" `539 
V G "Ciclos" 0 118 "int16" `540 
V G "tbomba" 0 118 "int16" `541 
V G "tvacio" 0 118 "int16" `542 
V G "Password" 0 119 "sint8[4]" `543 
V G "r" 0 120 "int8" `544 
V G "t" 0 120 "int8" `545 
V G "r22" 0 120 "int8" `546 
V G "t2" 0 120 "int8" `547 
V G "TiempoControl" 0 120 "int8" `548 
V G "NivelDes" 0 120 "int8" `549 
V G "y" 0 121 "int8" `550 
V G "ConteoBuzzer" 0 121 "int8" `551 
V G "posicionDato" 0 121 "int8" `552 
V G "codigoAlarma" 0 121 "int8" `553 
V G "codigoAnt" 0 121 "int8" `554 
V G "codigoUsuario2" 0 121 "int8" `555 
V G "tbuzzer" 0 122 "int16" `556 
V G "tsilencio" 0 122 "int16" `557 
V G "Year" 0 123 "int8" `558 
V G "Mes" 0 123 "int8" `559 
V G "Dia" 0 123 "int8" `560 
V G "Hora" 0 123 "int8" `561 
V G "Minuto" 0 123 "int8" `562 
V G "Segundo" 0 123 "int8" `563 
V G "dow" 0 123 "int8" `564 
V G "cicloVisualizado" 0 123 "int8" `565 
V G "cicloVisto" 0 123 "int8" `566 
V G "NivelVacio" 0 123 "int8" `567 
V G "Atmosferica" 0 123 "int8" `568 
V G "PulsoPositivo" 0 123 "int8" `569 
V G "PulsosVacio" 0 123 "int8" `570 
V G "YearTx" 0 124 "int8" `571 
V G "MesTx" 0 124 "int8" `572 
V G "DiaTx" 0 124 "int8" `573 
V G "HoraTx" 0 124 "int8" `574 
V G "MinutoTx" 0 124 "int8" `575 
V G "SegundoTx" 0 124 "int8" `576 
V G "dowTx" 0 124 "int8" `577 
V G "SetTime" 0 124 "int8" `578 
V G "Imprime" 0 124 "int8" `579 
V G "CicloLibre" 0 124 "int8" `580 
V G "Pulsos" 0 124 "int8" `581 
V G "j" 0 124 "int8" `582 
V G "codigoUsuario" 0 124 "int8" `583 
V G "codigoUsuarioant" 0 124 "int8" `584 
V G "G1" 0 125 "sint8" `585 
V G "G2" 0 125 "sint8" `586 
V G "sg1" 0 125 "sint8" `587 
V G "sg2" 0 125 "sint8" `588 
V G "Texto" 0 126 "[12][20]" `590 
V G "usuario" 0 128 "int8[20]" `593 
V G "TCiclos" 0 129 "float[7]" `594 
V G "PcCiclos" 0 130 "int16[7]" `595 
V G "PpcCiclos" 0 131 "int16[7]" `596 
V G "horaCiclos" 0 132 "int8[7]" `597 
V G "minutoCiclos" 0 133 "int8[7]" `598 
V G "ACiclos" 0 134 "int8[7]" `599 
V G "diaCiclos" 0 135 "int8" `600 
V G "mesCiclos" 0 135 "int8" `601 
V G "yearCiclos" 0 135 "int8" `602 
V G "usuarioCiclos" 0 135 "int8" `603 
V G "cicloCiclos" 0 135 "int8" `604 
V G "estados" 0 136 "int1[30]" `605 
T G "Claves" 0 140 "{int8[4] Password}" `608 
T G "Personalizado" 0 151 "{int8 Temperatura,int8 Minutoest,int8 Segundoest,int8 Minutosec,int8 Segundosec,int8 PulsosVacio,int8 NivelVacio,int8 NivelDesfogue}" `618 
T G "SensorPT100" 0 167 "{float BN,float AN,float V0,float Pt,float RPT100,int8 l,int8 h,float Prom,float Temperature,int8 Ajuste,int8 Ajusten,float[80] promedio,float Gain}" `633 
V G "Sensor" 0 169 "SensorPT100[2]" `634 
V G "CiclosPersonalizados" 0 170 "Personalizado[20]" `635 
V G "Clave" 0 171 "Claves[10]" `636 
F N "BorraBuffer" 9 2 ""
F G "BorraBuffer" 9 2 "void()" `637 
F N "SendDataDisplay" 9 26 ""
F G "SendDataDisplay" 9 26 "void()" `638 
F N "esBisiesto" 9 36 ""
V L "year" 9 36 "int8" `640 
F G "esBisiesto" 9 36 "int8(int8 year)" `639 
F N "LimitaDia" 9 40 ""
F G "LimitaDia" 9 40 "void()" `641 
C L "LimitaDia" 9 56 1 "FUNCTION"
C L "LimitaDia" 9 56 1 "FUNCTION"
C L "LimitaDia" 9 56 1 "FUNCTION"
C L "LimitaDia" 9 56 1 "FUNCTION"
C L "sensores" 9 56 1 "FUNCTION"
F N "sensores" 9 84 ""
V L "x" 9 84 "int8" `643 
F G "sensores" 9 84 "float(int8 x)" `642 
V L "y" 9 85 "float" `644 
F N "LeerPT100" 9 88 ""
V L "canal" 9 88 "int8" `646 
V L "media" 9 88 "int8" `647 
F G "LeerPT100" 9 89 "float(int8 canal,int8 media)" `645 
C L "LeerPT100" 9 56 1 "FUNCTION"
C L "LeerPT100" 9 56 1 "FUNCTION"
C L "LeerPT100" 9 56 1 "FUNCTION"
C L "LeerPT100" 9 56 1 "FUNCTION"
C L "LeerPT100" 9 56 1 "FUNCTION"
F N "Leer_Sensor_Presion_Camara" 9 114 ""
V L "media" 9 114 "int8" `652 
F G "Leer_Sensor_Presion_Camara" 9 114 "float(int8 media)" `651 
C L "Leer_Sensor_Presion_Camara" 9 56 1 "FUNCTION"
F N "Leer_Sensor_Presion_PreCamara" 9 136 ""
V L "media" 9 136 "int8" `657 
F G "Leer_Sensor_Presion_PreCamara" 9 136 "float(int8 media)" `656 
C L "Leer_Sensor_Presion_PreCamara" 9 56 1 "FUNCTION"
C L "Leer_Sensor_Presion_PreCamara" 9 56 1 "FUNCTION"
C L "Leer_Sensor_Presion_PreCamara" 9 158 14 "*"
F N "Controla" 9 182 ""
F G "Controla" 9 182 "void()" `658  "-------------------------------Control de Calentamiento------------------------------------------------------------//"
C L "Controla" 9 158 1 "FUNCTION"
C L "Controla" 9 158 1 "FUNCTION"
C L "Controla" 9 158 1 "FUNCTION"
C L "Controla" 9 158 1 "FUNCTION"
C L "Controla" 9 158 1 "FUNCTION"
C L "Controla" 9 158 2 "FUNCTION"
C L "Controla" 9 158 1 "FUNCTION"
F N "Envio_I2C" 9 226 ""
V L "direccion" 9 226 "int8" `662 
V L "posicion" 9 226 "int8" `663 
V L "dato" 9 226 "int8" `664 
F G "Envio_I2C" 9 226 "void(int8 direccion,int8 posicion,int8 dato)" `661 
C L "Envio_I2C" 9 158 1 "FUNCTION"
C L "Envio_I2C" 9 158 1 "FUNCTION"
C L "Envio_I2C" 9 158 1 "FUNCTION"
C L "Envio_I2C" 9 158 1 "FUNCTION"
C L "Envio_I2C" 9 158 1 "FUNCTION"
F N "Lectura_I2C" 9 235 ""
V L "direccion" 9 235 "int8" `666 
V L "posicion" 9 235 "int8" `667 
V L "dato" 9 235 "int8" `668 
F G "Lectura_I2C" 9 235 "void(int8 direccion,int8 posicion,int8 dato)" `665 
C L "Lectura_I2C" 9 158 1 "FUNCTION"
C L "Lectura_I2C" 9 158 1 "FUNCTION"
C L "Lectura_I2C" 9 158 1 "FUNCTION"
C L "Lectura_I2C" 9 158 1 "FUNCTION"
C L "Lectura_I2C" 9 158 1 "FUNCTION"
C L "Lectura_I2C" 9 158 1 "FUNCTION"
C L "Lectura_I2C" 9 158 1 "FUNCTION"
F N "Carga_Vector" 9 246 ""
F G "Carga_Vector" 9 246 "void()" `669 
C L "Carga_Vector" 9 158 1 "FUNCTION"
F N "Lee_Vector" 9 271 ""
F G "Lee_Vector" 9 271 "void()" `670  "Dia=txbuf[0];"
C L "Lee_Vector" 9 158 6 "FUNCTION"
F N "Envio_Esclavos" 9 281 ""
F G "Envio_Esclavos" 9 281 "void()" `671  "Carga_Vector();"
C L "Envio_Esclavos" 9 158 3 "FUNCTION"
F N "Lectura_Esclavos" 9 289 ""
F G "Lectura_Esclavos" 9 289 "void()" `672  "for(i=0;i<7;i++)"
C L "Lectura_Esclavos" 9 158 5 "FUNCTION"
F N "extraeDecimal" 9 300 ""
V L "data" 9 300 "float" `674 
F G "extraeDecimal" 9 300 "int8(float data)" `673 
V L "entero" 9 301 "float" `675 
V L "tmp" 9 302 "float" `676 
F N "inttofloat" 9 309 ""
V L "decimal" 9 309 "int8" `678 
F G "inttofloat" 9 309 "float(int8 decimal)" `677 
V L "tmp" 9 310 "float" `679 
F N "LeeEEPROM" 9 315 ""
F G "LeeEEPROM" 9 315 "void()" `680  "Lectura EEPROM//--------------------------"
C L "LeeEEPROM" 9 158 1 "FUNCTION"
C L "LeeEEPROM" 9 158 1 "FUNCTION"
C L "LeeEEPROM" 9 158 1 "FUNCTION"
F N "LimitaValores" 9 438 ""
F G "LimitaValores" 9 438 "void()" `688 
F N "LeeDisplay" 9 513 ""
F G "LeeDisplay" 9 513 "void()" `689 
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
C L "LeeDisplay" 9 158 1 "FUNCTION"
F N "ConfiguraCiclo" 9 612 ""
V L "este0" 9 612 "int8" `691 
V L "este1" 9 612 "int8" `692 
V L "este2" 9 612 "int8" `693 
V L "este3" 9 612 "int8" `694 
V L "secado0" 9 612 "int8" `695 
V L "secado1" 9 612 "int8" `696 
V L "secado2" 9 612 "int8" `697 
V L "secado3" 9 612 "int8" `698 
V L "liquidos" 9 612 "int8" `699 
V L "ciclo" 9 612 "int8" `700 
V L "temperatura" 9 612 "int8" `701 
F G "ConfiguraCiclo" 9 612 "void(int8 este0,int8 este1,int8 este2,int8 este3,int8 secado0,int8 secado1,int8 secado2,int8 secado3,int8 liquidos,int8 ciclo,int8 temperatura)" `690 
F N "ActivaAlarma" 9 627 ""
V L "Tipo" 9 627 "int8" `703 
F G "ActivaAlarma" 9 627 "void(int8 Tipo)" `702 
C L "ActivaAlarma" 9 158 1 "FUNCTION"
F N "ApagaSalidas" 9 670 ""
F G "ApagaSalidas" 9 670 "void()" `704 
F N "ControlaPresion" 9 682 ""
F G "ControlaPresion" 9 682 "void()" `705 
F N "GuardaDatoEstatico" 9 691 ""
F G "GuardaDatoEstatico" 9 691 "void()" `706 
V L "posCiclo" 9 692 "int16" `707 
V L "cicloMemoria" 9 692 "int16" `708 
F N "GuardaDatoCiclo" 9 713 ""
F G "GuardaDatoCiclo" 9 713 "void()" `709 
V L "posCiclo" 9 714 "int16" `710 
V L "cicloMemoria" 9 714 "int16" `711 
F N "incrementaCiclos" 9 742 ""
F G "incrementaCiclos" 9 742 "void()" `712 
F N "exportarData" 9 755 ""
F G "exportarData" 9 755 "void()" `713 
V L "posicion" 9 756 "int16" `714 
V L "tmp" 9 757 "int8" `715 
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 2 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 2 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
C L "exportarData" 9 158 1 "FUNCTION"
F N "codificaAlarma" 9 825 ""
F G "codificaAlarma" 9 825 "void()" `716 
F N "sistemaBloqueo" 9 877 ""
V L "activa" 9 877 "int8" `739 
F G "sistemaBloqueo" 9 877 "void(int8 activa)" `738 
F N "serial_rx_isr" 0 176 ""
F G "serial_rx_isr" 0 176 "void()" `740 
C L "serial_rx_isr" 0 178 1 "FUNCTION"
F N "temp1s" 0 205 ""
F G "temp1s" 0 205 "void()" `741 
C L "temp1s" 0 178 1 "FUNCTION"
C L "temp1s" 0 178 1 "FUNCTION"
F N "main" 0 286 ""
F G "main" 0 287 "void()" `742 
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 4 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 3 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 2 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
C L "main" 0 178 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "set_analog_pins" 1 2
F B "get_capture" 0 1
F B "set_compare_time" 1 2
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "pll_locked" 0 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 2
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 2
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "i2c_init" 1 2
F B "i2c_poll" 0 1
F B "i2c_speed" 1 2
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
