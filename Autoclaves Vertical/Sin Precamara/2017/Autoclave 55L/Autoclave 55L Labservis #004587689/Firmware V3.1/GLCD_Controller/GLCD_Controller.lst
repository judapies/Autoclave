CCS PCH C Compiler, Version 4.104, 5967               19-sept.-18 17:06

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclaves Vertical\Sin Precamara\2017\Autoclave 55L\Autoclave 55L Labservis #004587689\Firmware V3.1\GLCD_Controller\GLCD_Controller.lst

               ROM used: 29254 bytes (89%)
                         Largest free fragment is 3510
               RAM used: 1294 (63%) at main() level
                         1348 (66%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2CAC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0F7C
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
104A:  MOVLW  05
104C:  MOVWF  FEA
104E:  MOVLW  0B
1050:  MOVWF  FE9
1052:  MOVF   FEF,W
1054:  BZ    1072
1056:  MOVLW  0F
1058:  MOVWF  01
105A:  CLRF   00
105C:  DECFSZ 00,F
105E:  BRA    105C
1060:  DECFSZ 01,F
1062:  BRA    105A
1064:  MOVLW  8F
1066:  MOVWF  00
1068:  DECFSZ 00,F
106A:  BRA    1068
106C:  NOP   
106E:  DECFSZ FEF,F
1070:  BRA    1056
1072:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
19BE:  MOVLW  08
19C0:  MOVWF  01
19C2:  MOVLW  11
19C4:  MOVWF  00
19C6:  DECFSZ 00,F
19C8:  BRA    19C6
19CA:  BCF    F8A.1
19CC:  BCF    F93.1
19CE:  MOVLW  11
19D0:  MOVWF  00
19D2:  DECFSZ 00,F
19D4:  BRA    19D2
19D6:  MOVLB  5
19D8:  RLCF   x0E,F
19DA:  BCF    F8A.0
19DC:  BTFSC  FD8.0
19DE:  BSF    F93.0
19E0:  BTFSS  FD8.0
19E2:  BCF    F93.0
19E4:  BSF    F93.1
19E6:  BTFSS  F81.1
19E8:  BRA    19E6
19EA:  DECFSZ 01,F
19EC:  BRA    19F0
19EE:  BRA    19F4
19F0:  MOVLB  0
19F2:  BRA    19C2
19F4:  MOVLW  11
19F6:  MOVWF  00
19F8:  DECFSZ 00,F
19FA:  BRA    19F8
19FC:  BCF    F8A.1
19FE:  BCF    F93.1
1A00:  NOP   
1A02:  BSF    F93.0
1A04:  MOVLW  11
1A06:  MOVWF  00
1A08:  DECFSZ 00,F
1A0A:  BRA    1A08
1A0C:  MOVLW  11
1A0E:  MOVWF  00
1A10:  DECFSZ 00,F
1A12:  BRA    1A10
1A14:  BSF    F93.1
1A16:  BTFSS  F81.1
1A18:  BRA    1A16
1A1A:  CLRF   01
1A1C:  MOVLW  11
1A1E:  MOVWF  00
1A20:  DECFSZ 00,F
1A22:  BRA    1A20
1A24:  BTFSC  F81.0
1A26:  BSF    01.0
1A28:  BCF    F8A.1
1A2A:  BCF    F93.1
1A2C:  BCF    F8A.0
1A2E:  BCF    F93.0
1A30:  MOVLB  0
1A32:  RETLW  00
1A34:  MOVLW  08
1A36:  MOVLB  5
1A38:  MOVWF  x0E
1A3A:  MOVFF  00,50F
1A3E:  BSF    F93.0
1A40:  MOVLW  11
1A42:  MOVWF  00
1A44:  DECFSZ 00,F
1A46:  BRA    1A44
1A48:  BSF    F93.1
1A4A:  BTFSS  F81.1
1A4C:  BRA    1A4A
1A4E:  BTFSC  F81.0
1A50:  BSF    FD8.0
1A52:  BTFSS  F81.0
1A54:  BCF    FD8.0
1A56:  RLCF   01,F
1A58:  MOVLW  11
1A5A:  MOVWF  00
1A5C:  DECFSZ 00,F
1A5E:  BRA    1A5C
1A60:  BCF    F93.1
1A62:  BCF    F8A.1
1A64:  DECFSZ x0E,F
1A66:  BRA    1A3E
1A68:  BSF    F93.0
1A6A:  MOVLW  11
1A6C:  MOVWF  00
1A6E:  DECFSZ 00,F
1A70:  BRA    1A6E
1A72:  BCF    F8A.0
1A74:  MOVF   x0F,W
1A76:  BTFSS  FD8.2
1A78:  BCF    F93.0
1A7A:  NOP   
1A7C:  BSF    F93.1
1A7E:  BTFSS  F81.1
1A80:  BRA    1A7E
1A82:  MOVLW  11
1A84:  MOVWF  00
1A86:  DECFSZ 00,F
1A88:  BRA    1A86
1A8A:  BCF    F8A.1
1A8C:  BCF    F93.1
1A8E:  MOVLW  11
1A90:  MOVWF  00
1A92:  DECFSZ 00,F
1A94:  BRA    1A92
1A96:  BCF    F8A.0
1A98:  BCF    F93.0
1A9A:  MOVLB  0
1A9C:  GOTO   1FFE (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
11C6:  BCF    F93.2
11C8:  BSF    F8A.2
....................    output_low(GLCD_E); 
11CA:  BCF    F93.7
11CC:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
11CE:  BCF    F93.3
11D0:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
11D2:  BCF    F93.4
11D4:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
11D6:  BCF    F93.5
11D8:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
11DA:  MOVLB  5
11DC:  CLRF   x20
11DE:  MOVLW  C0
11E0:  MOVWF  x21
11E2:  MOVLB  0
11E4:  RCALL  1074
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
11E6:  MOVLW  01
11E8:  MOVLB  5
11EA:  MOVWF  x20
11EC:  MOVLW  C0
11EE:  MOVWF  x21
11F0:  MOVLB  0
11F2:  RCALL  1074
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
11F4:  MOVLB  5
11F6:  CLRF   x20
11F8:  MOVLW  40
11FA:  MOVWF  x21
11FC:  MOVLB  0
11FE:  RCALL  1074
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
1200:  MOVLW  01
1202:  MOVLB  5
1204:  MOVWF  x20
1206:  MOVLW  40
1208:  MOVWF  x21
120A:  MOVLB  0
120C:  RCALL  1074
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
120E:  MOVLB  5
1210:  CLRF   x20
1212:  MOVLW  B8
1214:  MOVWF  x21
1216:  MOVLB  0
1218:  RCALL  1074
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
121A:  MOVLW  01
121C:  MOVLB  5
121E:  MOVWF  x20
1220:  MOVLW  B8
1222:  MOVWF  x21
1224:  MOVLB  0
1226:  RCALL  1074
....................  
....................    if(mode == ON) 
1228:  MOVLB  5
122A:  DECFSZ x0A,W
122C:  BRA    124A
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
122E:  CLRF   x20
1230:  MOVLW  3F
1232:  MOVWF  x21
1234:  MOVLB  0
1236:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1238:  MOVLW  01
123A:  MOVLB  5
123C:  MOVWF  x20
123E:  MOVLW  3F
1240:  MOVWF  x21
1242:  MOVLB  0
1244:  RCALL  1074
....................    } 
....................    else 
1246:  BRA    1262
1248:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
124A:  CLRF   x20
124C:  MOVLW  3E
124E:  MOVWF  x21
1250:  MOVLB  0
1252:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
1254:  MOVLW  01
1256:  MOVLB  5
1258:  MOVWF  x20
125A:  MOVLW  3E
125C:  MOVWF  x21
125E:  MOVLB  0
1260:  RCALL  1074
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
1262:  MOVLB  5
1264:  CLRF   x0B
1266:  MOVLB  0
1268:  RCALL  10B4
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
126A:  RCALL  110E
....................    #endif 
.................... } 
126C:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
110E:  MOVLB  5
1110:  CLRF   x1C
1112:  MOVLW  16
1114:  MOVWF  x1B
....................    p2 = displayData.right; 
1116:  MOVLW  02
1118:  MOVWF  x1E
111A:  MOVLW  16
111C:  MOVWF  x1D
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
111E:  CLRF   x19
1120:  MOVF   x19,W
1122:  SUBLW  07
1124:  BNC   11C2
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1126:  BCF    F93.5
1128:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
112A:  CLRF   x20
112C:  MOVLW  40
112E:  MOVWF  x21
1130:  MOVLB  0
1132:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1134:  MOVLW  01
1136:  MOVLB  5
1138:  MOVWF  x20
113A:  MOVLW  40
113C:  MOVWF  x21
113E:  MOVLB  0
1140:  RCALL  1074
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1142:  MOVLB  5
1144:  MOVF   x19,W
1146:  IORLW  B8
1148:  MOVWF  x1F
114A:  CLRF   x20
114C:  MOVWF  x21
114E:  MOVLB  0
1150:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
1152:  MOVLB  5
1154:  MOVF   x19,W
1156:  IORLW  B8
1158:  MOVWF  x1F
115A:  MOVLW  01
115C:  MOVWF  x20
115E:  MOVFF  51F,521
1162:  MOVLB  0
1164:  RCALL  1074
....................       output_high(GLCD_DI);                     // Set for data 
1166:  BCF    F93.5
1168:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
116A:  MOVLB  5
116C:  CLRF   x1A
116E:  MOVF   x1A,W
1170:  SUBLW  3F
1172:  BNC   11BE
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
1174:  MOVFF  51C,03
1178:  MOVF   x1B,W
117A:  INCF   x1B,F
117C:  BTFSC  FD8.2
117E:  INCF   x1C,F
1180:  MOVWF  FE9
1182:  MOVFF  03,FEA
1186:  MOVFF  FEF,51F
118A:  CLRF   x20
118C:  MOVFF  51F,521
1190:  MOVLB  0
1192:  RCALL  1074
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
1194:  MOVLB  5
1196:  MOVFF  51E,03
119A:  MOVF   x1D,W
119C:  INCF   x1D,F
119E:  BTFSC  FD8.2
11A0:  INCF   x1E,F
11A2:  MOVWF  FE9
11A4:  MOVFF  03,FEA
11A8:  MOVFF  FEF,51F
11AC:  MOVLW  01
11AE:  MOVWF  x20
11B0:  MOVFF  51F,521
11B4:  MOVLB  0
11B6:  RCALL  1074
....................       } 
11B8:  MOVLB  5
11BA:  INCF   x1A,F
11BC:  BRA    116E
....................    } 
11BE:  INCF   x19,F
11C0:  BRA    1120
.................... } 
11C2:  MOVLB  0
11C4:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
126E:  MOVLB  5
1270:  CLRF   x41
1272:  RRCF   x3C,W
1274:  MOVWF  x40
1276:  RRCF   x40,F
1278:  RRCF   x40,F
127A:  MOVLW  1F
127C:  ANDWF  x40,F
....................    temp *= 64; 
127E:  RLCF   x40,F
1280:  RLCF   x41,F
1282:  RLCF   x40,F
1284:  RLCF   x41,F
1286:  RLCF   x40,F
1288:  RLCF   x41,F
128A:  RLCF   x40,F
128C:  RLCF   x41,F
128E:  RLCF   x40,F
1290:  RLCF   x41,F
1292:  RLCF   x40,F
1294:  RLCF   x41,F
1296:  MOVLW  C0
1298:  ANDWF  x40,F
....................    temp += x; 
129A:  MOVF   x3B,W
129C:  ADDWF  x40,F
129E:  MOVLW  00
12A0:  ADDWFC x41,F
....................  
....................    if(x > 63) 
12A2:  MOVF   x3B,W
12A4:  SUBLW  3F
12A6:  BC    12C2
....................    { 
....................       p = displayData.right + temp - 64; 
12A8:  MOVLW  16
12AA:  ADDWF  x40,W
12AC:  MOVWF  x42
12AE:  MOVLW  02
12B0:  ADDWFC x41,W
12B2:  MOVWF  x43
12B4:  MOVLW  40
12B6:  SUBWF  x42,W
12B8:  MOVWF  x3E
12BA:  MOVLW  00
12BC:  SUBWFB x43,W
12BE:  MOVWF  x3F
....................    } 
....................    else 
12C0:  BRA    12CE
....................    { 
....................       p = displayData.left + temp; 
12C2:  MOVLW  16
12C4:  ADDWF  x40,W
12C6:  MOVWF  x3E
12C8:  MOVLW  00
12CA:  ADDWFC x41,W
12CC:  MOVWF  x3F
....................    } 
....................  
....................    if(color) 
12CE:  MOVF   x3D,F
12D0:  BZ    12FC
....................    { 
....................       bit_set(*p, y%8); 
12D2:  MOVFF  53F,03
12D6:  MOVFF  53E,FE9
12DA:  MOVFF  53F,FEA
12DE:  MOVF   x3C,W
12E0:  ANDLW  07
12E2:  MOVWF  x42
12E4:  MOVLW  01
12E6:  MOVWF  00
12E8:  MOVF   x42,W
12EA:  MOVWF  01
12EC:  BZ    12F6
12EE:  BCF    FD8.0
12F0:  RLCF   00,F
12F2:  DECFSZ 01,F
12F4:  BRA    12EE
12F6:  MOVF   00,W
12F8:  IORWF  FEF,F
....................    } 
....................    else 
12FA:  BRA    1326
....................    { 
....................       bit_clear(*p, y%8); 
12FC:  MOVFF  53F,03
1300:  MOVFF  53E,FE9
1304:  MOVFF  53F,FEA
1308:  MOVF   x3C,W
130A:  ANDLW  07
130C:  MOVWF  x42
130E:  MOVLW  01
1310:  MOVWF  00
1312:  MOVF   x42,W
1314:  MOVWF  01
1316:  BZ    1320
1318:  BCF    FD8.0
131A:  RLCF   00,F
131C:  DECFSZ 01,F
131E:  BRA    1318
1320:  MOVF   00,W
1322:  XORLW  FF
1324:  ANDWF  FEF,F
....................    } 
.................... } 
1326:  MOVLB  0
1328:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
10B4:  MOVLB  5
10B6:  CLRF   x0E
10B8:  MOVLW  16
10BA:  MOVWF  x0D
....................    p2 = displayData.right; 
10BC:  MOVLW  02
10BE:  MOVWF  x10
10C0:  MOVLW  16
10C2:  MOVWF  x0F
....................    data = 0xFF * color; 
10C4:  MOVF   x0B,W
10C6:  MULLW  FF
10C8:  MOVFF  FF3,50C
....................  
....................    for(i=0; i<512; ++i) 
10CC:  CLRF   x12
10CE:  CLRF   x11
10D0:  MOVF   x12,W
10D2:  SUBLW  01
10D4:  BNC   110A
....................    { 
....................       *p1++ = data; 
10D6:  MOVFF  50E,03
10DA:  MOVF   x0D,W
10DC:  INCF   x0D,F
10DE:  BTFSC  FD8.2
10E0:  INCF   x0E,F
10E2:  MOVWF  FE9
10E4:  MOVFF  03,FEA
10E8:  MOVFF  50C,FEF
....................       *p2++ = data; 
10EC:  MOVFF  510,03
10F0:  MOVF   x0F,W
10F2:  INCF   x0F,F
10F4:  BTFSC  FD8.2
10F6:  INCF   x10,F
10F8:  MOVWF  FE9
10FA:  MOVFF  03,FEA
10FE:  MOVFF  50C,FEF
....................    } 
1102:  INCF   x11,F
1104:  BTFSC  FD8.2
1106:  INCF   x12,F
1108:  BRA    10D0
.................... } 
110A:  MOVLB  0
110C:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
1074:  MOVLB  5
1076:  MOVF   x20,F
1078:  BZ    1080
....................       output_high(GLCD_CS2); 
107A:  BCF    F93.4
107C:  BSF    F8A.4
....................    else 
107E:  BRA    1084
....................       output_high(GLCD_CS1); 
1080:  BCF    F93.3
1082:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
1084:  BCF    F93.6
1086:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
1088:  CLRF   F95
108A:  MOVFF  521,F8C
....................    delay_cycles(50); 
108E:  MOVLW  10
1090:  MOVWF  00
1092:  DECFSZ 00,F
1094:  BRA    1092
1096:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
1098:  BCF    F93.7
109A:  BSF    F8A.7
....................    delay_cycles(250); 
109C:  MOVLW  53
109E:  MOVWF  00
10A0:  DECFSZ 00,F
10A2:  BRA    10A0
....................    output_low(GLCD_E); 
10A4:  BCF    F93.7
10A6:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
10A8:  BCF    F93.3
10AA:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
10AC:  BCF    F93.4
10AE:  BCF    F8A.4
.................... } 
10B0:  MOVLB  0
10B2:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
14E2:  MOVLW  01
14E4:  MOVLB  5
14E6:  MOVWF  x34
14E8:  MOVWF  x35
14EA:  CLRF   x3A
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
14EC:  MOVF   x2B,W
14EE:  SUBWF  x2D,W
14F0:  MOVWF  x3B
14F2:  MOVF   x3B,W
14F4:  BTFSS  x3B.7
14F6:  BRA    14FE
14F8:  MOVLW  00
14FA:  BSF    FD8.0
14FC:  SUBFWB x3B,W
14FE:  CLRF   03
1500:  MOVWF  x32
1502:  MOVFF  03,533
....................    dy = abs((signed int8)(y2 - y1)); 
1506:  MOVF   x2C,W
1508:  SUBWF  x2E,W
150A:  MOVWF  x3B
150C:  MOVF   x3B,W
150E:  BTFSS  x3B.7
1510:  BRA    1518
1512:  MOVLW  00
1514:  BSF    FD8.0
1516:  SUBFWB x3B,W
1518:  CLRF   03
151A:  MOVWF  x30
151C:  MOVFF  03,531
....................    #endif 
....................  
....................    if(x1 > x2) 
1520:  MOVF   x2B,W
1522:  SUBWF  x2D,W
1524:  BC    152A
....................       addx = -1; 
1526:  MOVLW  FF
1528:  MOVWF  x34
....................    if(y1 > y2) 
152A:  MOVF   x2C,W
152C:  SUBWF  x2E,W
152E:  BC    1534
....................       addy = -1; 
1530:  MOVLW  FF
1532:  MOVWF  x35
....................  
....................    if(dx >= dy) 
1534:  MOVF   x31,W
1536:  SUBWF  x33,W
1538:  BNC   15B0
153A:  BNZ   1542
153C:  MOVF   x30,W
153E:  SUBWF  x32,W
1540:  BNC   15B0
....................    { 
....................       dy *= 2; 
1542:  BCF    FD8.0
1544:  RLCF   x30,F
1546:  RLCF   x31,F
....................       P = dy - dx; 
1548:  MOVF   x32,W
154A:  SUBWF  x30,W
154C:  MOVWF  00
154E:  MOVF   x33,W
1550:  SUBWFB x31,W
1552:  MOVFF  00,536
1556:  MOVWF  x37
....................       diff = P - dx; 
1558:  MOVF   x32,W
155A:  SUBWF  x36,W
155C:  MOVWF  x38
155E:  MOVF   x33,W
1560:  SUBWFB x37,W
1562:  MOVWF  x39
....................  
....................       for(; i<=dx; ++i) 
1564:  MOVF   x33,F
1566:  BNZ   156E
1568:  MOVF   x3A,W
156A:  SUBWF  x32,W
156C:  BNC   15AE
....................       { 
....................          glcd_pixel(x1, y1, color); 
156E:  MOVFF  52B,53B
1572:  MOVFF  52C,53C
1576:  MOVFF  52F,53D
157A:  MOVLB  0
157C:  RCALL  126E
....................  
....................          if(P < 0) 
157E:  MOVLB  5
1580:  BTFSC  x37.7
1582:  BRA    1586
1584:  BRA    1596
....................          { 
....................             P  += dy; 
1586:  MOVF   x30,W
1588:  ADDWF  x36,F
158A:  MOVF   x31,W
158C:  ADDWFC x37,F
....................             x1 += addx; 
158E:  MOVF   x34,W
1590:  ADDWF  x2B,W
1592:  MOVWF  x2B
....................          } 
....................          else 
1594:  BRA    15AA
....................          { 
....................             P  += diff; 
1596:  MOVF   x38,W
1598:  ADDWF  x36,F
159A:  MOVF   x39,W
159C:  ADDWFC x37,F
....................             x1 += addx; 
159E:  MOVF   x34,W
15A0:  ADDWF  x2B,W
15A2:  MOVWF  x2B
....................             y1 += addy; 
15A4:  MOVF   x35,W
15A6:  ADDWF  x2C,W
15A8:  MOVWF  x2C
....................          } 
....................       } 
15AA:  INCF   x3A,F
15AC:  BRA    1564
....................    } 
....................    else 
15AE:  BRA    161C
....................    { 
....................       dx *= 2; 
15B0:  BCF    FD8.0
15B2:  RLCF   x32,F
15B4:  RLCF   x33,F
....................       P = dx - dy; 
15B6:  MOVF   x30,W
15B8:  SUBWF  x32,W
15BA:  MOVWF  00
15BC:  MOVF   x31,W
15BE:  SUBWFB x33,W
15C0:  MOVFF  00,536
15C4:  MOVWF  x37
....................       diff = P - dy; 
15C6:  MOVF   x30,W
15C8:  SUBWF  x36,W
15CA:  MOVWF  x38
15CC:  MOVF   x31,W
15CE:  SUBWFB x37,W
15D0:  MOVWF  x39
....................  
....................       for(; i<=dy; ++i) 
15D2:  MOVF   x31,F
15D4:  BNZ   15DC
15D6:  MOVF   x3A,W
15D8:  SUBWF  x30,W
15DA:  BNC   161C
....................       { 
....................          glcd_pixel(x1, y1, color); 
15DC:  MOVFF  52B,53B
15E0:  MOVFF  52C,53C
15E4:  MOVFF  52F,53D
15E8:  MOVLB  0
15EA:  RCALL  126E
....................  
....................          if(P < 0) 
15EC:  MOVLB  5
15EE:  BTFSC  x37.7
15F0:  BRA    15F4
15F2:  BRA    1604
....................          { 
....................             P  += dx; 
15F4:  MOVF   x32,W
15F6:  ADDWF  x36,F
15F8:  MOVF   x33,W
15FA:  ADDWFC x37,F
....................             y1 += addy; 
15FC:  MOVF   x35,W
15FE:  ADDWF  x2C,W
1600:  MOVWF  x2C
....................          } 
....................          else 
1602:  BRA    1618
....................          { 
....................             P  += diff; 
1604:  MOVF   x38,W
1606:  ADDWF  x36,F
1608:  MOVF   x39,W
160A:  ADDWFC x37,F
....................             x1 += addx; 
160C:  MOVF   x34,W
160E:  ADDWF  x2B,W
1610:  MOVWF  x2B
....................             y1 += addy; 
1612:  MOVF   x35,W
1614:  ADDWF  x2C,W
1616:  MOVWF  x2C
....................          } 
....................       } 
1618:  INCF   x3A,F
161A:  BRA    15D2
....................    } 
.................... } 
161C:  MOVLB  0
161E:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1620:  MOVLB  5
1622:  MOVF   x24,F
1624:  BZ    1682
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1626:  MOVF   x22,W
1628:  SUBWF  x20,W
162A:  BC    1636
....................       { 
....................          xmin = x1; 
162C:  MOVFF  520,527
....................          xmax = x2; 
1630:  MOVFF  522,528
....................       } 
....................       else 
1634:  BRA    163E
....................       { 
....................          xmin = x2; 
1636:  MOVFF  522,527
....................          xmax = x1; 
163A:  MOVFF  520,528
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
163E:  MOVF   x23,W
1640:  SUBWF  x21,W
1642:  BC    164E
....................       { 
....................          ymin = y1; 
1644:  MOVFF  521,529
....................          ymax = y2; 
1648:  MOVFF  523,52A
....................       } 
....................       else 
164C:  BRA    1656
....................       { 
....................          ymin = y2; 
164E:  MOVFF  523,529
....................          ymax = y1; 
1652:  MOVFF  521,52A
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
1656:  MOVF   x27,W
1658:  SUBWF  x28,W
165A:  BNC   1680
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
165C:  MOVFF  529,526
1660:  MOVF   x26,W
1662:  SUBWF  x2A,W
1664:  BNC   167C
....................          { 
....................             glcd_pixel(xmin, i, color); 
1666:  MOVFF  527,53B
166A:  MOVFF  526,53C
166E:  MOVFF  525,53D
1672:  MOVLB  0
1674:  RCALL  126E
....................          } 
1676:  MOVLB  5
1678:  INCF   x26,F
167A:  BRA    1660
....................       } 
167C:  INCF   x27,F
167E:  BRA    1656
....................    } 
....................    else 
1680:  BRA    16DE
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
1682:  MOVFF  520,52B
1686:  MOVFF  521,52C
168A:  MOVFF  522,52D
168E:  MOVFF  521,52E
1692:  MOVFF  525,52F
1696:  MOVLB  0
1698:  RCALL  14E2
....................       glcd_line(x1, y2, x2, y2, color); 
169A:  MOVFF  520,52B
169E:  MOVFF  523,52C
16A2:  MOVFF  522,52D
16A6:  MOVFF  523,52E
16AA:  MOVFF  525,52F
16AE:  RCALL  14E2
....................       glcd_line(x1, y1, x1, y2, color); 
16B0:  MOVFF  520,52B
16B4:  MOVFF  521,52C
16B8:  MOVFF  520,52D
16BC:  MOVFF  523,52E
16C0:  MOVFF  525,52F
16C4:  RCALL  14E2
....................       glcd_line(x2, y1, x2, y2, color); 
16C6:  MOVFF  522,52B
16CA:  MOVFF  521,52C
16CE:  MOVFF  522,52D
16D2:  MOVFF  523,52E
16D6:  MOVFF  525,52F
16DA:  RCALL  14E2
16DC:  MOVLB  5
....................    } 
.................... } 
16DE:  MOVLB  0
16E0:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2232:  MOVLB  5
2234:  CLRF   x0F
....................    b = radius; 
2236:  MOVFF  50C,510
....................    P = 1 - radius; 
223A:  MOVLW  01
223C:  BSF    FD8.0
223E:  SUBFWB x0C,W
2240:  MOVWF  x11
....................  
....................    do 
....................    { 
....................       if(fill) 
2242:  MOVF   x0D,F
2244:  BZ    2310
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
2246:  MOVF   x0F,W
2248:  SUBWF  x0A,W
224A:  MOVWF  x12
224C:  MOVF   x10,W
224E:  ADDWF  x0B,W
2250:  MOVWF  x13
2252:  MOVF   x0F,W
2254:  ADDWF  x0A,W
2256:  MOVWF  x14
2258:  MOVF   x10,W
225A:  ADDWF  x0B,W
225C:  MOVWF  x15
225E:  MOVFF  512,52B
2262:  MOVFF  513,52C
2266:  MOVFF  514,52D
226A:  MOVWF  x2E
226C:  MOVFF  50E,52F
2270:  MOVLB  0
2272:  CALL   14E2
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
2276:  MOVLB  5
2278:  MOVF   x0F,W
227A:  SUBWF  x0A,W
227C:  MOVWF  x12
227E:  MOVF   x10,W
2280:  SUBWF  x0B,W
2282:  MOVWF  x13
2284:  MOVF   x0F,W
2286:  ADDWF  x0A,W
2288:  MOVWF  x14
228A:  MOVF   x10,W
228C:  SUBWF  x0B,W
228E:  MOVWF  x15
2290:  MOVFF  512,52B
2294:  MOVFF  513,52C
2298:  MOVFF  514,52D
229C:  MOVWF  x2E
229E:  MOVFF  50E,52F
22A2:  MOVLB  0
22A4:  CALL   14E2
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
22A8:  MOVLB  5
22AA:  MOVF   x10,W
22AC:  SUBWF  x0A,W
22AE:  MOVWF  x12
22B0:  MOVF   x0F,W
22B2:  ADDWF  x0B,W
22B4:  MOVWF  x13
22B6:  MOVF   x10,W
22B8:  ADDWF  x0A,W
22BA:  MOVWF  x14
22BC:  MOVF   x0F,W
22BE:  ADDWF  x0B,W
22C0:  MOVWF  x15
22C2:  MOVFF  512,52B
22C6:  MOVFF  513,52C
22CA:  MOVFF  514,52D
22CE:  MOVWF  x2E
22D0:  MOVFF  50E,52F
22D4:  MOVLB  0
22D6:  CALL   14E2
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
22DA:  MOVLB  5
22DC:  MOVF   x10,W
22DE:  SUBWF  x0A,W
22E0:  MOVWF  x12
22E2:  MOVF   x0F,W
22E4:  SUBWF  x0B,W
22E6:  MOVWF  x13
22E8:  MOVF   x10,W
22EA:  ADDWF  x0A,W
22EC:  MOVWF  x14
22EE:  MOVF   x0F,W
22F0:  SUBWF  x0B,W
22F2:  MOVWF  x15
22F4:  MOVFF  512,52B
22F8:  MOVFF  513,52C
22FC:  MOVFF  514,52D
2300:  MOVWF  x2E
2302:  MOVFF  50E,52F
2306:  MOVLB  0
2308:  CALL   14E2
....................       } 
....................       else 
230C:  BRA    23FE
230E:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2310:  MOVF   x0A,W
2312:  ADDWF  x0F,W
2314:  MOVWF  x12
2316:  MOVF   x0B,W
2318:  ADDWF  x10,W
231A:  MOVWF  x13
231C:  MOVFF  512,53B
2320:  MOVWF  x3C
2322:  MOVFF  50E,53D
2326:  MOVLB  0
2328:  CALL   126E
....................          glcd_pixel(b+x, a+y, color); 
232C:  MOVLB  5
232E:  MOVF   x0A,W
2330:  ADDWF  x10,W
2332:  MOVWF  x12
2334:  MOVF   x0B,W
2336:  ADDWF  x0F,W
2338:  MOVWF  x13
233A:  MOVFF  512,53B
233E:  MOVWF  x3C
2340:  MOVFF  50E,53D
2344:  MOVLB  0
2346:  CALL   126E
....................          glcd_pixel(x-a, b+y, color); 
234A:  MOVLB  5
234C:  MOVF   x0F,W
234E:  SUBWF  x0A,W
2350:  MOVWF  x12
2352:  MOVF   x0B,W
2354:  ADDWF  x10,W
2356:  MOVWF  x13
2358:  MOVFF  512,53B
235C:  MOVWF  x3C
235E:  MOVFF  50E,53D
2362:  MOVLB  0
2364:  CALL   126E
....................          glcd_pixel(x-b, a+y, color); 
2368:  MOVLB  5
236A:  MOVF   x10,W
236C:  SUBWF  x0A,W
236E:  MOVWF  x12
2370:  MOVF   x0B,W
2372:  ADDWF  x0F,W
2374:  MOVWF  x13
2376:  MOVFF  512,53B
237A:  MOVWF  x3C
237C:  MOVFF  50E,53D
2380:  MOVLB  0
2382:  CALL   126E
....................          glcd_pixel(b+x, y-a, color); 
2386:  MOVLB  5
2388:  MOVF   x0A,W
238A:  ADDWF  x10,W
238C:  MOVWF  x12
238E:  MOVF   x0F,W
2390:  SUBWF  x0B,W
2392:  MOVWF  x13
2394:  MOVFF  512,53B
2398:  MOVWF  x3C
239A:  MOVFF  50E,53D
239E:  MOVLB  0
23A0:  CALL   126E
....................          glcd_pixel(a+x, y-b, color); 
23A4:  MOVLB  5
23A6:  MOVF   x0A,W
23A8:  ADDWF  x0F,W
23AA:  MOVWF  x12
23AC:  MOVF   x10,W
23AE:  SUBWF  x0B,W
23B0:  MOVWF  x13
23B2:  MOVFF  512,53B
23B6:  MOVWF  x3C
23B8:  MOVFF  50E,53D
23BC:  MOVLB  0
23BE:  CALL   126E
....................          glcd_pixel(x-a, y-b, color); 
23C2:  MOVLB  5
23C4:  MOVF   x0F,W
23C6:  SUBWF  x0A,W
23C8:  MOVWF  x12
23CA:  MOVF   x10,W
23CC:  SUBWF  x0B,W
23CE:  MOVWF  x13
23D0:  MOVFF  512,53B
23D4:  MOVWF  x3C
23D6:  MOVFF  50E,53D
23DA:  MOVLB  0
23DC:  CALL   126E
....................          glcd_pixel(x-b, y-a, color); 
23E0:  MOVLB  5
23E2:  MOVF   x10,W
23E4:  SUBWF  x0A,W
23E6:  MOVWF  x12
23E8:  MOVF   x0F,W
23EA:  SUBWF  x0B,W
23EC:  MOVWF  x13
23EE:  MOVFF  512,53B
23F2:  MOVWF  x3C
23F4:  MOVFF  50E,53D
23F8:  MOVLB  0
23FA:  CALL   126E
....................       } 
....................  
....................       if(P < 0) 
23FE:  MOVLB  5
2400:  BTFSC  x11.7
2402:  BRA    2406
2404:  BRA    2422
....................          P += 3 + 2 * a++; 
2406:  MOVF   x0F,W
2408:  INCF   x0F,F
240A:  MOVWF  x12
240C:  MOVLW  02
240E:  MOVWF  x13
2410:  MOVFF  512,514
2414:  MOVLB  0
2416:  RCALL  21E4
2418:  MOVF   01,W
241A:  ADDLW  03
241C:  MOVLB  5
241E:  ADDWF  x11,F
....................       else 
2420:  BRA    2444
....................          P += 5 + 2 * (a++ - b--); 
2422:  MOVF   x0F,W
2424:  INCF   x0F,F
2426:  MOVWF  x12
2428:  MOVF   x10,W
242A:  DECF   x10,F
242C:  SUBWF  x12,W
242E:  MOVWF  x12
2430:  MOVLW  02
2432:  MOVWF  x13
2434:  MOVFF  512,514
2438:  MOVLB  0
243A:  RCALL  21E4
243C:  MOVF   01,W
243E:  ADDLW  05
2440:  MOVLB  5
2442:  ADDWF  x11,F
....................     } while(a <= b); 
2444:  MOVF   x0F,W
2446:  XORLW  80
2448:  MOVWF  00
244A:  MOVF   x10,W
244C:  XORLW  80
244E:  SUBWF  00,W
2450:  BTFSC  FD8.2
2452:  BRA    2242
2454:  BTFSS  FD8.0
2456:  BRA    2242
.................... } 
2458:  MOVLB  0
245A:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
132A:  MOVFF  521,03
132E:  MOVLB  5
1330:  MOVFF  520,FE9
1334:  MOVFF  521,FEA
1338:  MOVF   FEF,F
133A:  BTFSC  FD8.2
133C:  BRA    14DE
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
133E:  MOVFF  521,03
1342:  MOVFF  520,FE9
1346:  MOVFF  521,FEA
134A:  MOVF   FEF,W
134C:  SUBLW  52
134E:  BNC   139E
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1350:  MOVFF  521,03
1354:  MOVFF  520,FE9
1358:  MOVFF  521,FEA
135C:  MOVLW  20
135E:  SUBWF  FEF,W
1360:  MULLW  05
1362:  MOVF   FF3,W
1364:  CLRF   03
1366:  MOVWF  x2D
1368:  MOVLW  05
136A:  MOVWF  FEA
136C:  MOVLW  28
136E:  MOVWF  FE9
1370:  CLRF   x31
1372:  MOVFF  52D,530
1376:  MOVFF  FF2,52E
137A:  BCF    FF2.7
137C:  MOVLW  05
137E:  MOVWF  01
1380:  CLRF   FF7
1382:  MOVF   x2D,W
1384:  MOVLB  0
1386:  CALL   0096
138A:  TBLRD*-
138C:  TBLRD*+
138E:  MOVFF  FF5,FEE
1392:  DECFSZ 01,F
1394:  BRA    138C
1396:  MOVLB  5
1398:  BTFSC  x2E.7
139A:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
139C:  BRA    1408
139E:  MOVFF  521,03
13A2:  MOVFF  520,FE9
13A6:  MOVFF  521,FEA
13AA:  MOVF   FEF,W
13AC:  SUBLW  7E
13AE:  BNC   13FE
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
13B0:  MOVFF  521,03
13B4:  MOVFF  520,FE9
13B8:  MOVFF  521,FEA
13BC:  MOVLW  53
13BE:  SUBWF  FEF,W
13C0:  MULLW  05
13C2:  MOVF   FF3,W
13C4:  CLRF   03
13C6:  MOVWF  x2D
13C8:  MOVLW  05
13CA:  MOVWF  FEA
13CC:  MOVLW  28
13CE:  MOVWF  FE9
13D0:  CLRF   x31
13D2:  MOVFF  52D,530
13D6:  MOVFF  FF2,52E
13DA:  BCF    FF2.7
13DC:  MOVLW  05
13DE:  MOVWF  01
13E0:  CLRF   FF7
13E2:  MOVF   x2D,W
13E4:  MOVLB  0
13E6:  CALL   01B0
13EA:  TBLRD*-
13EC:  TBLRD*+
13EE:  MOVFF  FF5,FEE
13F2:  DECFSZ 01,F
13F4:  BRA    13EC
13F6:  MOVLB  5
13F8:  BTFSC  x2E.7
13FA:  BSF    FF2.7
....................       else 
13FC:  BRA    1408
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
13FE:  CLRF   x28
1400:  CLRF   x29
1402:  CLRF   x2A
1404:  CLRF   x2B
1406:  CLRF   x2C
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1408:  MOVFF  521,03
140C:  MOVF   x20,W
140E:  MOVWF  FE9
1410:  MOVFF  03,FEA
1414:  MOVF   FEF,W
1416:  XORLW  0A
1418:  MOVLB  0
141A:  BZ    1422
141C:  XORLW  07
141E:  BZ    1432
1420:  BRA    1438
....................          case '\n': 
....................             y += 7*size + 1; 
1422:  MOVLB  5
1424:  MOVF   x22,W
1426:  MULLW  07
1428:  MOVF   FF3,W
142A:  ADDLW  01
142C:  ADDWF  x1F,F
....................             continue; 
142E:  BRA    14D0
1430:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1432:  MOVLB  5
1434:  CLRF   x1E
....................             continue; 
1436:  BRA    14D0
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1438:  MOVLB  5
143A:  MOVF   x22,W
143C:  MULLW  05
143E:  MOVF   FF3,W
1440:  ADDWF  x1E,W
1442:  SUBLW  7F
1444:  BC    1452
....................       { 
....................          x = 0;                           // Set x at far left position 
1446:  CLRF   x1E
....................          y += 7*size + 1;                 // Set y at next position down 
1448:  MOVF   x22,W
144A:  MULLW  07
144C:  MOVF   FF3,W
144E:  ADDLW  01
1450:  ADDWF  x1F,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1452:  CLRF   x24
1454:  MOVF   x24,W
1456:  SUBLW  04
1458:  BNC   14D0
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
145A:  CLRF   x25
145C:  MOVF   x25,W
145E:  SUBLW  06
1460:  BNC   14C8
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1462:  CLRF   03
1464:  MOVF   x24,W
1466:  ADDLW  28
1468:  MOVWF  FE9
146A:  MOVLW  05
146C:  ADDWFC 03,W
146E:  MOVWF  FEA
1470:  MOVFF  FEF,52D
1474:  MOVFF  52D,00
1478:  MOVF   x25,W
147A:  MOVWF  01
147C:  BZ    1486
147E:  BCF    FD8.0
1480:  RRCF   00,F
1482:  DECFSZ 01,F
1484:  BRA    147E
1486:  BTFSS  00.0
1488:  BRA    14C4
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
148A:  CLRF   x26
148C:  MOVF   x22,W
148E:  SUBWF  x26,W
1490:  BC    14C4
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
1492:  CLRF   x27
1494:  MOVF   x22,W
1496:  SUBWF  x27,W
1498:  BC    14C0
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
149A:  MOVF   x27,W
149C:  ADDWF  x1E,W
149E:  MOVWF  x2D
14A0:  MOVF   x25,W
14A2:  MULWF  x22
14A4:  MOVF   FF3,W
14A6:  ADDWF  x1F,W
14A8:  ADDWF  x26,W
14AA:  MOVWF  x2E
14AC:  MOVFF  52D,53B
14B0:  MOVWF  x3C
14B2:  MOVFF  523,53D
14B6:  MOVLB  0
14B8:  RCALL  126E
....................                   } 
14BA:  MOVLB  5
14BC:  INCF   x27,F
14BE:  BRA    1494
....................                } 
14C0:  INCF   x26,F
14C2:  BRA    148C
....................             } 
....................          } 
14C4:  INCF   x25,F
14C6:  BRA    145C
....................       } 
14C8:  INCF   x24,F
14CA:  MOVF   x22,W
14CC:  ADDWF  x1E,F
14CE:  BRA    1454
....................    } 
14D0:  INCF   x20,F
14D2:  BTFSC  FD8.2
14D4:  INCF   x21,F
14D6:  INCF   x1E,F
14D8:  MOVLB  0
14DA:  BRA    132A
14DC:  MOVLB  5
.................... } 
14DE:  MOVLB  0
14E0:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0,Prevacio=10,flagprevacio=10,flagvacio=10,Calentar=10; 
.................... int8 Setpoint=0,Atmosferica=96,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0,PresionCamara=0,PresionPreCamara=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
16E2:  MOVLB  5
16E4:  MOVFF  50A,01
16E8:  MOVFF  50B,03
16EC:  MOVFF  50A,510
16F0:  MOVFF  50B,511
16F4:  MOVLW  04
16F6:  MOVWF  FEA
16F8:  MOVLW  EA
16FA:  MOVWF  FE9
16FC:  MOVFF  50B,FE2
1700:  MOVFF  50A,FE1
1704:  MOVF   FE7,F
1706:  MOVFF  FE6,FEE
170A:  BNZ   1704
....................    if(sombreado==2) 
170C:  MOVF   x0E,W
170E:  SUBLW  02
1710:  BNZ   173A
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1712:  MOVLW  01
1714:  ADDWF  x0C,W
1716:  MOVWF  x10
1718:  MOVLW  01
171A:  ADDWF  x0D,W
171C:  MOVWF  x11
171E:  MOVFF  510,51E
1722:  MOVWF  x1F
1724:  MOVLW  04
1726:  MOVWF  x21
1728:  MOVLW  EA
172A:  MOVWF  x20
172C:  MOVFF  50F,522
1730:  MOVLW  01
1732:  MOVWF  x23
1734:  MOVLB  0
1736:  RCALL  132A
1738:  MOVLB  5
....................    if(sombreado==1) 
173A:  DECFSZ x0E,W
173C:  BRA    1788
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
173E:  MOVF   x0F,W
1740:  MULLW  08
1742:  MOVF   FF3,W
1744:  ADDWF  x0D,W
1746:  MOVWF  x10
1748:  CLRF   x20
174A:  MOVFF  50D,521
174E:  MOVLW  7F
1750:  MOVWF  x22
1752:  MOVFF  510,523
1756:  MOVLW  01
1758:  MOVWF  x24
175A:  MOVWF  x25
175C:  MOVLB  0
175E:  RCALL  1620
1760:  MOVLW  01
1762:  MOVLB  5
1764:  ADDWF  x0C,W
1766:  MOVWF  x10
1768:  MOVLW  01
176A:  ADDWF  x0D,W
176C:  MOVWF  x11
176E:  MOVFF  510,51E
1772:  MOVWF  x1F
1774:  MOVLW  04
1776:  MOVWF  x21
1778:  MOVLW  EA
177A:  MOVWF  x20
177C:  MOVFF  50F,522
1780:  CLRF   x23
1782:  MOVLB  0
1784:  RCALL  132A
1786:  MOVLB  5
....................    if(sombreado==0) 
1788:  MOVF   x0E,F
178A:  BNZ   17D6
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
178C:  MOVF   x0F,W
178E:  MULLW  08
1790:  MOVF   FF3,W
1792:  ADDWF  x0D,W
1794:  MOVWF  x10
1796:  CLRF   x20
1798:  MOVFF  50D,521
179C:  MOVLW  7F
179E:  MOVWF  x22
17A0:  MOVFF  510,523
17A4:  MOVLW  01
17A6:  MOVWF  x24
17A8:  CLRF   x25
17AA:  MOVLB  0
17AC:  RCALL  1620
17AE:  MOVLW  01
17B0:  MOVLB  5
17B2:  ADDWF  x0C,W
17B4:  MOVWF  x10
17B6:  MOVLW  01
17B8:  ADDWF  x0D,W
17BA:  MOVWF  x11
17BC:  MOVFF  510,51E
17C0:  MOVWF  x1F
17C2:  MOVLW  04
17C4:  MOVWF  x21
17C6:  MOVLW  EA
17C8:  MOVWF  x20
17CA:  MOVFF  50F,522
17CE:  MOVLW  01
17D0:  MOVWF  x23
17D2:  MOVLB  0
17D4:  RCALL  132A
....................    glcd_update(); 
17D6:  MOVLB  0
17D8:  RCALL  110E
.................... } 
17DA:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
24E2:  MOVLB  5
24E4:  MOVF   x0E,W
24E6:  SUBLW  02
24E8:  BNZ   255A
....................    { 
....................       sprintf(voltage, "%03u", digito); 
24EA:  MOVLW  05
24EC:  MOVWF  x09
24EE:  MOVLW  10
24F0:  MOVWF  x08
24F2:  MOVFF  50B,519
24F6:  MOVLW  03
24F8:  MOVWF  x1A
24FA:  MOVLB  0
24FC:  RCALL  245C
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
24FE:  MOVLB  5
2500:  MOVF   x0F,W
2502:  MULLW  12
2504:  MOVF   FF3,W
2506:  ADDWF  x0C,W
2508:  MOVWF  x19
250A:  MOVF   x0F,W
250C:  MULLW  08
250E:  MOVF   FF3,W
2510:  ADDWF  x0D,W
2512:  MOVWF  x1A
2514:  MOVFF  50C,520
2518:  MOVFF  50D,521
251C:  MOVFF  519,522
2520:  MOVWF  x23
2522:  MOVLW  01
2524:  MOVWF  x24
2526:  MOVWF  x25
2528:  MOVLB  0
252A:  CALL   1620
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
252E:  MOVLW  01
2530:  MOVLB  5
2532:  ADDWF  x0C,W
2534:  MOVWF  x19
2536:  MOVLW  01
2538:  ADDWF  x0D,W
253A:  MOVWF  x1A
253C:  MOVFF  519,51E
2540:  MOVWF  x1F
2542:  MOVLW  05
2544:  MOVWF  x21
2546:  MOVLW  10
2548:  MOVWF  x20
254A:  MOVFF  50F,522
254E:  CLRF   x23
2550:  MOVLB  0
2552:  CALL   132A
....................    } 
....................    else 
2556:  BRA    2628
2558:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
255A:  MOVLW  05
255C:  MOVWF  x09
255E:  MOVLW  10
2560:  MOVWF  x08
2562:  MOVFF  50B,519
2566:  MOVLW  1B
2568:  MOVWF  x1A
256A:  MOVLB  0
256C:  RCALL  245C
....................     
....................       if(sombreado==1) 
256E:  MOVLB  5
2570:  DECFSZ x0E,W
2572:  BRA    25CC
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
2574:  MOVF   x0F,W
2576:  MULLW  05
2578:  MOVF   FF3,W
257A:  ADDWF  x0C,W
257C:  MOVWF  x19
257E:  MOVF   x0F,W
2580:  MULLW  08
2582:  MOVF   FF3,W
2584:  ADDWF  x0D,W
2586:  MOVWF  x1A
2588:  MOVFF  50C,520
258C:  MOVFF  50D,521
2590:  MOVFF  519,522
2594:  MOVWF  x23
2596:  MOVLW  01
2598:  MOVWF  x24
259A:  MOVWF  x25
259C:  MOVLB  0
259E:  CALL   1620
25A2:  MOVLW  01
25A4:  MOVLB  5
25A6:  ADDWF  x0C,W
25A8:  MOVWF  x19
25AA:  MOVLW  01
25AC:  ADDWF  x0D,W
25AE:  MOVWF  x1A
25B0:  MOVFF  519,51E
25B4:  MOVWF  x1F
25B6:  MOVLW  05
25B8:  MOVWF  x21
25BA:  MOVLW  10
25BC:  MOVWF  x20
25BE:  MOVFF  50F,522
25C2:  CLRF   x23
25C4:  MOVLB  0
25C6:  CALL   132A
25CA:  MOVLB  5
....................       if(sombreado==0) 
25CC:  MOVF   x0E,F
25CE:  BNZ   262A
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
25D0:  MOVF   x0F,W
25D2:  MULLW  05
25D4:  MOVF   FF3,W
25D6:  ADDWF  x0C,W
25D8:  MOVWF  x19
25DA:  MOVF   x0F,W
25DC:  MULLW  08
25DE:  MOVF   FF3,W
25E0:  ADDWF  x0D,W
25E2:  MOVWF  x1A
25E4:  MOVFF  50C,520
25E8:  MOVFF  50D,521
25EC:  MOVFF  519,522
25F0:  MOVWF  x23
25F2:  MOVLW  01
25F4:  MOVWF  x24
25F6:  CLRF   x25
25F8:  MOVLB  0
25FA:  CALL   1620
25FE:  MOVLW  01
2600:  MOVLB  5
2602:  ADDWF  x0C,W
2604:  MOVWF  x19
2606:  MOVLW  01
2608:  ADDWF  x0D,W
260A:  MOVWF  x1A
260C:  MOVFF  519,51E
2610:  MOVWF  x1F
2612:  MOVLW  05
2614:  MOVWF  x21
2616:  MOVLW  10
2618:  MOVWF  x20
261A:  MOVFF  50F,522
261E:  MOVLW  01
2620:  MOVWF  x23
2622:  MOVLB  0
2624:  CALL   132A
2628:  MOVLB  5
....................    } 
....................    glcd_update(); 
262A:  MOVLB  0
262C:  CALL   110E
.................... } 
2630:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2136:  MOVLB  5
2138:  MOVF   x0A,W
213A:  SUBLW  05
213C:  BNZ   21E0
....................    for( i = 0 ; i < 64 ; i ++ ) 
213E:  CLRF   x0B
2140:  MOVF   x0B,W
2142:  SUBLW  3F
2144:  BNC   21E0
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2146:  CLRF   x0C
2148:  MOVF   x0C,W
214A:  SUBLW  0F
214C:  BNC   21DC
....................       {     
....................          for(k=7;k>-1;k--) 
214E:  MOVLW  07
2150:  MOVWF  x0D
2152:  MOVF   x0D,W
2154:  XORLW  80
2156:  SUBLW  7F
2158:  BC    21D8
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
215A:  CLRF   x0F
215C:  MOVFF  50B,50E
2160:  CLRF   x11
2162:  MOVLW  10
2164:  MOVWF  x10
2166:  MOVLB  0
2168:  BRA    2112
216A:  MOVFF  02,50F
216E:  MOVFF  01,50E
2172:  MOVLB  5
2174:  MOVF   x0C,W
2176:  ADDWF  01,W
2178:  MOVWF  01
217A:  MOVLW  00
217C:  ADDWFC 02,W
217E:  MOVWF  03
2180:  MOVF   01,W
2182:  MOVFF  FF2,50E
2186:  BCF    FF2.7
2188:  MOVFF  03,FF7
218C:  MOVLB  0
218E:  CALL   02A6
2192:  MOVLB  5
2194:  BTFSC  x0E.7
2196:  BSF    FF2.7
2198:  MOVWF  x0E
219A:  MOVLW  07
219C:  BSF    FD8.0
219E:  SUBFWB x0D,W
21A0:  MOVWF  x0F
21A2:  MOVFF  50E,00
21A6:  MOVF   x0F,W
21A8:  MOVWF  01
21AA:  BZ    21B4
21AC:  BCF    FD8.0
21AE:  RRCF   00,F
21B0:  DECFSZ 01,F
21B2:  BRA    21AC
21B4:  BTFSS  00.0
21B6:  BRA    21D4
....................                glcd_pixel( j*8+k,i, ON ); 
21B8:  MOVF   x0C,W
21BA:  MULLW  08
21BC:  MOVF   FF3,W
21BE:  ADDWF  x0D,W
21C0:  MOVWF  x0E
21C2:  MOVWF  x3B
21C4:  MOVFF  50B,53C
21C8:  MOVLW  01
21CA:  MOVWF  x3D
21CC:  MOVLB  0
21CE:  CALL   126E
21D2:  MOVLB  5
....................          }   
21D4:  DECF   x0D,F
21D6:  BRA    2152
....................       } 
21D8:  INCF   x0C,F
21DA:  BRA    2148
....................    } 
21DC:  INCF   x0B,F
21DE:  BRA    2140
....................    } 
....................     
.................... } 
21E0:  MOVLB  0
21E2:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0F7C:  MOVLW  15
0F7E:  MOVWF  FCF
0F80:  MOVLW  A0
0F82:  MOVWF  FCE
....................    tiempos++; 
0F84:  MOVLB  4
0F86:  INCF   xB1,F
0F88:  BTFSC  FD8.2
0F8A:  INCF   xB2,F
....................    tiempos3++; 
0F8C:  INCF   xB3,F
0F8E:  BTFSC  FD8.2
0F90:  INCF   xB4,F
....................    tiempoctrl++; 
0F92:  INCF   xB5,F
0F94:  BTFSC  FD8.2
0F96:  INCF   xB6,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0F98:  MOVF   xB4,F
0F9A:  BNZ   0FA2
0F9C:  MOVF   xB3,W
0F9E:  SUBLW  27
0FA0:  BC    0FB4
0FA2:  MOVF   xAF,W
0FA4:  SUBLW  02
0FA6:  BNZ   0FB4
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0FA8:  CLRF   xB4
0FAA:  CLRF   xB3
0FAC:  BSF    x95.7
0FAE:  INCF   xBB,F
0FB0:  BTFSC  FD8.2
0FB2:  INCF   xBC,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0FB4:  MOVF   xB1,W
0FB6:  SUBLW  C8
0FB8:  BNZ   1042
0FBA:  MOVF   xB2,F
0FBC:  BNZ   1042
....................    {tiempos=0;Lectura=1;tinicio++; 
0FBE:  CLRF   xB2
0FC0:  CLRF   xB1
0FC2:  BSF    x95.6
0FC4:  INCF   xBD,F
0FC6:  BTFSC  FD8.2
0FC8:  INCF   xBE,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0FCA:  DECFSZ xAD,W
0FCC:  BRA    1006
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0FCE:  INCF   xC7,F
....................       if(Testerilizacion[0]>9) 
0FD0:  BTFSC  xC7.7
0FD2:  BRA    0FDE
0FD4:  MOVF   xC7,W
0FD6:  SUBLW  09
0FD8:  BC    0FDE
....................          {Testerilizacion[0]=0; 
0FDA:  CLRF   xC7
....................           Testerilizacion[1]++;} 
0FDC:  INCF   xC8,F
....................        if(Testerilizacion[1]>5) 
0FDE:  BTFSC  xC8.7
0FE0:  BRA    0FEC
0FE2:  MOVF   xC8,W
0FE4:  SUBLW  05
0FE6:  BC    0FEC
....................          {Testerilizacion[1]=0; 
0FE8:  CLRF   xC8
....................           Testerilizacion[2]++;} 
0FEA:  INCF   xC9,F
....................          if(Testerilizacion[2]>9) 
0FEC:  BTFSC  xC9.7
0FEE:  BRA    0FFA
0FF0:  MOVF   xC9,W
0FF2:  SUBLW  09
0FF4:  BC    0FFA
....................             {Testerilizacion[2]=0; 
0FF6:  CLRF   xC9
....................              Testerilizacion[3]++;} 
0FF8:  INCF   xCA,F
....................             if(Testerilizacion[3]>5) 
0FFA:  BTFSC  xCA.7
0FFC:  BRA    1006
0FFE:  MOVF   xCA,W
1000:  SUBLW  05
1002:  BC    1006
....................                {Testerilizacion[3]=0;} 
1004:  CLRF   xCA
....................       }        
....................        
....................     if(tiempo_secado==1) 
1006:  DECFSZ xAE,W
1008:  BRA    1042
....................       { 
....................                       
....................       Tsecado[0]++; 
100A:  INCF   xCF,F
....................       if(Tsecado[0]>9) 
100C:  BTFSC  xCF.7
100E:  BRA    101A
1010:  MOVF   xCF,W
1012:  SUBLW  09
1014:  BC    101A
....................          {Tsecado[0]=0; 
1016:  CLRF   xCF
....................           Tsecado[1]++;} 
1018:  INCF   xD0,F
....................        if(Tsecado[1]>5) 
101A:  BTFSC  xD0.7
101C:  BRA    1028
101E:  MOVF   xD0,W
1020:  SUBLW  05
1022:  BC    1028
....................          {Tsecado[1]=0; 
1024:  CLRF   xD0
....................           Tsecado[2]++;} 
1026:  INCF   xD1,F
....................          if(Tsecado[2]>9) 
1028:  BTFSC  xD1.7
102A:  BRA    1036
102C:  MOVF   xD1,W
102E:  SUBLW  09
1030:  BC    1036
....................             {Tsecado[2]=0; 
1032:  CLRF   xD1
....................              Tsecado[3]++;} 
1034:  INCF   xD2,F
....................             if(Tsecado[3]>5) 
1036:  BTFSC  xD2.7
1038:  BRA    1042
103A:  MOVF   xD2,W
103C:  SUBLW  05
103E:  BC    1042
....................                {Tsecado[3]=0;} 
1040:  CLRF   xD2
....................       }   
....................    } 
....................    } 
....................     
1042:  BCF    F9E.0
1044:  MOVLB  0
1046:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
2B56:  MOVLW  07
2B58:  MOVLB  5
2B5A:  ADDWF  x0C,W
2B5C:  MOVWF  x0D
2B5E:  MOVFF  50A,520
2B62:  MOVFF  50C,521
2B66:  MOVFF  50B,522
2B6A:  MOVWF  x23
2B6C:  MOVLW  01
2B6E:  MOVWF  x24
2B70:  CLRF   x25
2B72:  MOVLB  0
2B74:  CALL   1620
.................... } 
2B78:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.0f",adc); // Converts adc to text 
*
2AE0:  MOVLW  05
2AE2:  MOVLB  5
2AE4:  MOVWF  x09
2AE6:  MOVLW  15
2AE8:  MOVWF  x08
2AEA:  MOVLW  42
2AEC:  MOVWF  FE9
2AEE:  MOVFF  511,521
2AF2:  MOVFF  510,520
2AF6:  MOVFF  50F,51F
2AFA:  MOVFF  50E,51E
2AFE:  CLRF   x22
2B00:  MOVLB  0
2B02:  RCALL  292E
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2B04:  MOVLB  5
2B06:  MOVF   x14,W
2B08:  MULLW  1B
2B0A:  MOVF   FF3,W
2B0C:  ADDWF  x12,W
2B0E:  MOVWF  x1E
2B10:  MOVF   x14,W
2B12:  MULLW  08
2B14:  MOVF   FF3,W
2B16:  ADDWF  x13,W
2B18:  MOVWF  x1F
2B1A:  MOVFF  512,520
2B1E:  MOVFF  513,521
2B22:  MOVFF  51E,522
2B26:  MOVWF  x23
2B28:  MOVLW  01
2B2A:  MOVWF  x24
2B2C:  CLRF   x25
2B2E:  MOVLB  0
2B30:  CALL   1620
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2B34:  MOVFF  512,51E
2B38:  MOVFF  513,51F
2B3C:  MOVLW  05
2B3E:  MOVLB  5
2B40:  MOVWF  x21
2B42:  MOVLW  15
2B44:  MOVWF  x20
2B46:  MOVFF  514,522
2B4A:  MOVLW  01
2B4C:  MOVWF  x23
2B4E:  MOVLB  0
2B50:  CALL   132A
.................... } 
2B54:  RETLW  00
....................  
.................... void displayTT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
2B7A:  MOVLW  05
2B7C:  MOVLB  5
2B7E:  MOVWF  x09
2B80:  MOVLW  11
2B82:  MOVWF  x08
2B84:  MOVLW  42
2B86:  MOVWF  FE9
2B88:  MOVFF  50D,521
2B8C:  MOVFF  50C,520
2B90:  MOVFF  50B,51F
2B94:  MOVFF  50A,51E
2B98:  MOVLW  01
2B9A:  MOVWF  x22
2B9C:  MOVLB  0
2B9E:  RCALL  292E
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2BA0:  MOVLB  5
2BA2:  MOVF   x10,W
2BA4:  MULLW  1B
2BA6:  MOVF   FF3,W
2BA8:  ADDWF  x0E,W
2BAA:  MOVWF  x1A
2BAC:  MOVF   x10,W
2BAE:  MULLW  08
2BB0:  MOVF   FF3,W
2BB2:  ADDWF  x0F,W
2BB4:  MOVWF  x1B
2BB6:  MOVFF  50E,520
2BBA:  MOVFF  50F,521
2BBE:  MOVFF  51A,522
2BC2:  MOVWF  x23
2BC4:  MOVLW  01
2BC6:  MOVWF  x24
2BC8:  CLRF   x25
2BCA:  MOVLB  0
2BCC:  CALL   1620
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2BD0:  MOVFF  50E,51E
2BD4:  MOVFF  50F,51F
2BD8:  MOVLW  05
2BDA:  MOVLB  5
2BDC:  MOVWF  x21
2BDE:  MOVLW  11
2BE0:  MOVWF  x20
2BE2:  MOVFF  510,522
2BE6:  MOVLW  01
2BE8:  MOVWF  x23
2BEA:  MOVLB  0
2BEC:  CALL   132A
.................... } 
2BF0:  GOTO   6A74 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
2632:  MOVFF  4CE,50B
2636:  MOVLW  24
2638:  MOVLB  5
263A:  MOVWF  x0C
263C:  CLRF   x0D
263E:  CLRF   x0E
2640:  MOVLW  01
2642:  MOVWF  x0F
2644:  MOVLB  0
2646:  RCALL  24E2
2648:  MOVFF  4CD,50B
264C:  MOVLW  2A
264E:  MOVLB  5
2650:  MOVWF  x0C
2652:  CLRF   x0D
2654:  CLRF   x0E
2656:  MOVLW  01
2658:  MOVWF  x0F
265A:  MOVLB  0
265C:  RCALL  24E2
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
265E:  MOVLW  04
2660:  MOVWF  FEA
2662:  MOVLW  EA
2664:  MOVWF  FE9
2666:  MOVFF  FF2,50A
266A:  BCF    FF2.7
266C:  MOVLW  00
266E:  CALL   06BE
2672:  TBLRD*-
2674:  TBLRD*+
2676:  MOVF   FF5,W
2678:  MOVWF  FEE
267A:  IORLW  00
267C:  BNZ   2674
267E:  MOVLB  5
2680:  BTFSC  x0A.7
2682:  BSF    FF2.7
2684:  MOVLW  04
2686:  MOVWF  x0B
2688:  MOVLW  EA
268A:  MOVWF  x0A
268C:  MOVLW  31
268E:  MOVWF  x0C
2690:  CLRF   x0D
2692:  MOVLW  02
2694:  MOVWF  x0E
2696:  MOVLW  01
2698:  MOVWF  x0F
269A:  MOVLB  0
269C:  CALL   16E2
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
26A0:  MOVFF  4CC,50B
26A4:  MOVLW  36
26A6:  MOVLB  5
26A8:  MOVWF  x0C
26AA:  CLRF   x0D
26AC:  CLRF   x0E
26AE:  MOVLW  01
26B0:  MOVWF  x0F
26B2:  MOVLB  0
26B4:  RCALL  24E2
26B6:  MOVFF  4CB,50B
26BA:  MOVLW  3C
26BC:  MOVLB  5
26BE:  MOVWF  x0C
26C0:  CLRF   x0D
26C2:  CLRF   x0E
26C4:  MOVLW  01
26C6:  MOVWF  x0F
26C8:  MOVLB  0
26CA:  RCALL  24E2
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
26CC:  MOVFF  4D6,50B
26D0:  MOVLW  24
26D2:  MOVLB  5
26D4:  MOVWF  x0C
26D6:  MOVLW  08
26D8:  MOVWF  x0D
26DA:  CLRF   x0E
26DC:  MOVLW  01
26DE:  MOVWF  x0F
26E0:  MOVLB  0
26E2:  RCALL  24E2
26E4:  MOVFF  4D5,50B
26E8:  MOVLW  2A
26EA:  MOVLB  5
26EC:  MOVWF  x0C
26EE:  MOVLW  08
26F0:  MOVWF  x0D
26F2:  CLRF   x0E
26F4:  MOVLW  01
26F6:  MOVWF  x0F
26F8:  MOVLB  0
26FA:  RCALL  24E2
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
26FC:  MOVLW  04
26FE:  MOVWF  FEA
2700:  MOVLW  EA
2702:  MOVWF  FE9
2704:  MOVFF  FF2,50A
2708:  BCF    FF2.7
270A:  MOVLW  00
270C:  CALL   06BE
2710:  TBLRD*-
2712:  TBLRD*+
2714:  MOVF   FF5,W
2716:  MOVWF  FEE
2718:  IORLW  00
271A:  BNZ   2712
271C:  MOVLB  5
271E:  BTFSC  x0A.7
2720:  BSF    FF2.7
2722:  MOVLW  04
2724:  MOVWF  x0B
2726:  MOVLW  EA
2728:  MOVWF  x0A
272A:  MOVLW  31
272C:  MOVWF  x0C
272E:  MOVLW  08
2730:  MOVWF  x0D
2732:  MOVLW  02
2734:  MOVWF  x0E
2736:  MOVLW  01
2738:  MOVWF  x0F
273A:  MOVLB  0
273C:  CALL   16E2
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
2740:  MOVFF  4D4,50B
2744:  MOVLW  36
2746:  MOVLB  5
2748:  MOVWF  x0C
274A:  MOVLW  08
274C:  MOVWF  x0D
274E:  CLRF   x0E
2750:  MOVLW  01
2752:  MOVWF  x0F
2754:  MOVLB  0
2756:  RCALL  24E2
2758:  MOVFF  4D3,50B
275C:  MOVLW  3C
275E:  MOVLB  5
2760:  MOVWF  x0C
2762:  MOVLW  08
2764:  MOVWF  x0D
2766:  CLRF   x0E
2768:  MOVLW  01
276A:  MOVWF  x0F
276C:  MOVLB  0
276E:  RCALL  24E2
.................... } 
2770:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1908:  MOVLW  05
190A:  MOVLB  5
190C:  MOVWF  x09
190E:  MOVLW  10
1910:  MOVWF  x08
1912:  MOVFF  50C,519
1916:  MOVLW  1F
1918:  MOVWF  x1A
191A:  MOVLB  0
191C:  BRA    1828
....................     
....................    if(sombreado==1) 
191E:  MOVLB  5
1920:  DECFSZ x0F,W
1922:  BRA    1972
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1924:  MOVLW  12
1926:  ADDWF  x0D,W
1928:  MOVWF  x19
192A:  MOVLW  18
192C:  ADDWF  x0E,W
192E:  MOVWF  x1A
1930:  MOVFF  50D,520
1934:  MOVFF  50E,521
1938:  MOVFF  519,522
193C:  MOVWF  x23
193E:  MOVLW  01
1940:  MOVWF  x24
1942:  MOVWF  x25
1944:  MOVLB  0
1946:  RCALL  1620
1948:  MOVLW  02
194A:  MOVLB  5
194C:  ADDWF  x0D,W
194E:  MOVWF  x19
1950:  MOVLW  01
1952:  ADDWF  x0E,W
1954:  MOVWF  x1A
1956:  MOVFF  519,51E
195A:  MOVWF  x1F
195C:  MOVLW  05
195E:  MOVWF  x21
1960:  MOVLW  10
1962:  MOVWF  x20
1964:  MOVLW  02
1966:  MOVWF  x22
1968:  CLRF   x23
196A:  MOVLB  0
196C:  RCALL  132A
....................    else    
196E:  BRA    19BC
1970:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
1972:  MOVLW  12
1974:  ADDWF  x0D,W
1976:  MOVWF  x19
1978:  MOVLW  18
197A:  ADDWF  x0E,W
197C:  MOVWF  x1A
197E:  MOVFF  50D,520
1982:  MOVFF  50E,521
1986:  MOVFF  519,522
198A:  MOVWF  x23
198C:  CLRF   x24
198E:  CLRF   x25
1990:  MOVLB  0
1992:  RCALL  1620
1994:  MOVLW  02
1996:  MOVLB  5
1998:  ADDWF  x0D,W
199A:  MOVWF  x19
199C:  MOVLW  01
199E:  ADDWF  x0E,W
19A0:  MOVWF  x1A
19A2:  MOVFF  519,51E
19A6:  MOVWF  x1F
19A8:  MOVLW  05
19AA:  MOVWF  x21
19AC:  MOVLW  10
19AE:  MOVWF  x20
19B0:  MOVLW  02
19B2:  MOVWF  x22
19B4:  MOVLW  01
19B6:  MOVWF  x23
19B8:  MOVLB  0
19BA:  RCALL  132A
....................  
.................... } 
19BC:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
207C:  BSF    F93.0
207E:  MOVLW  11
2080:  MOVWF  00
2082:  DECFSZ 00,F
2084:  BRA    2082
2086:  BSF    F93.1
2088:  MOVLW  11
208A:  MOVWF  00
208C:  DECFSZ 00,F
208E:  BRA    208C
2090:  BCF    F8A.0
2092:  BCF    F93.0
2094:  MOVLW  11
2096:  MOVWF  00
2098:  DECFSZ 00,F
209A:  BRA    2098
209C:  BCF    F8A.1
209E:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
20A0:  MOVFF  50B,50E
20A4:  RCALL  19BE
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
20A6:  MOVFF  50C,50E
20AA:  RCALL  19BE
....................    i2c_write(dato);        // Dato a transmitir 
20AC:  MOVFF  50D,50E
20B0:  RCALL  19BE
....................    i2c_stop();             // Fin comunicación 
20B2:  BCF    F93.0
20B4:  NOP   
20B6:  BSF    F93.1
20B8:  BTFSS  F81.1
20BA:  BRA    20B8
20BC:  MOVLW  11
20BE:  MOVWF  00
20C0:  DECFSZ 00,F
20C2:  BRA    20C0
20C4:  BRA    20C6
20C6:  NOP   
20C8:  BSF    F93.0
20CA:  MOVLW  11
20CC:  MOVWF  00
20CE:  DECFSZ 00,F
20D0:  BRA    20CE
....................  } 
20D2:  GOTO   2108 (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1F92:  BSF    F93.0
1F94:  MOVLW  11
1F96:  MOVWF  00
1F98:  DECFSZ 00,F
1F9A:  BRA    1F98
1F9C:  BSF    F93.1
1F9E:  MOVLW  11
1FA0:  MOVWF  00
1FA2:  DECFSZ 00,F
1FA4:  BRA    1FA2
1FA6:  BCF    F8A.0
1FA8:  BCF    F93.0
1FAA:  MOVLW  11
1FAC:  MOVWF  00
1FAE:  DECFSZ 00,F
1FB0:  BRA    1FAE
1FB2:  BCF    F8A.1
1FB4:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FB6:  MOVFF  50A,50E
1FBA:  MOVLB  0
1FBC:  RCALL  19BE
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1FBE:  MOVFF  50B,50E
1FC2:  RCALL  19BE
....................    i2c_start();            // Reinicio 
1FC4:  BSF    F93.0
1FC6:  MOVLW  11
1FC8:  MOVWF  00
1FCA:  DECFSZ 00,F
1FCC:  BRA    1FCA
1FCE:  BSF    F93.1
1FD0:  MOVLW  11
1FD2:  MOVWF  00
1FD4:  DECFSZ 00,F
1FD6:  BRA    1FD4
1FD8:  BTFSS  F81.1
1FDA:  BRA    1FD8
1FDC:  BCF    F8A.0
1FDE:  BCF    F93.0
1FE0:  MOVLW  11
1FE2:  MOVWF  00
1FE4:  DECFSZ 00,F
1FE6:  BRA    1FE4
1FE8:  BCF    F8A.1
1FEA:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1FEC:  MOVLW  01
1FEE:  MOVLB  5
1FF0:  ADDWF  x0A,W
1FF2:  MOVWF  x0C
1FF4:  MOVWF  x0E
1FF6:  MOVLB  0
1FF8:  RCALL  19BE
....................    dato=i2c_read(0);       // Lectura del dato 
1FFA:  CLRF   00
1FFC:  BRA    1A34
1FFE:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
2002:  BCF    F93.0
2004:  NOP   
2006:  BSF    F93.1
2008:  BTFSS  F81.1
200A:  BRA    2008
200C:  MOVLW  11
200E:  MOVWF  00
2010:  DECFSZ 00,F
2012:  BRA    2010
2014:  BRA    2016
2016:  NOP   
2018:  BSF    F93.0
201A:  MOVLW  11
201C:  MOVWF  00
201E:  DECFSZ 00,F
2020:  BRA    201E
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
2040:  MOVFF  498,456
....................    SlaveA0Tx[1]=EVDesfogue; 
2044:  MOVFF  499,457
....................    SlaveA0Tx[2]=EVAgua; 
2048:  MOVFF  49A,458
....................    SlaveA0Tx[3]=EVTrampa; 
204C:  MOVFF  49B,459
....................    SlaveA0Tx[4]=MotorPuerta; 
2050:  MOVFF  49C,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
2054:  MOVFF  49D,45B
....................    SlaveA0Tx[6]=BombaVacio; 
2058:  MOVFF  49E,45C
....................    SlaveA0Tx[7]=BombaAgua; 
205C:  MOVFF  49F,45D
....................    SlaveA0Tx[8]=Control; 
2060:  MOVFF  4A0,45E
....................    SlaveA0Tx[9]=Setpoint; 
2064:  MOVFF  4A9,45F
....................    SlaveA0Tx[10]=20; 
2068:  MOVLW  14
206A:  MOVLB  4
206C:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
206E:  MOVFF  4B9,462
....................    SlaveA0Tx[13]=Atmosferica; 
2072:  MOVFF  4AA,463
.................... } 
2076:  MOVLB  0
2078:  GOTO   20D8 (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1EAE:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1EB2:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1EB6:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1EBA:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1EBE:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1EC2:  MOVLB  5
1EC4:  CLRF   x0B
1EC6:  MOVFF  41B,50A
1ECA:  MOVLB  0
1ECC:  RCALL  1AA0
1ECE:  MOVFF  03,4C6
1ED2:  MOVFF  02,4C5
1ED6:  MOVFF  01,4C4
1EDA:  MOVFF  00,4C3
....................    Alarma=txbuf[6]; 
1EDE:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1EE2:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1EE6:  MOVFF  41E,4B0
....................    Decimal=txbuf[9]; 
1EEA:  MOVFF  41F,4A1
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1EEE:  MOVLB  5
1EF0:  CLRF   x0B
1EF2:  MOVFF  4A1,50A
1EF6:  MOVLB  0
1EF8:  RCALL  1AA0
1EFA:  MOVFF  00,50A
1EFE:  MOVFF  01,50B
1F02:  MOVFF  02,50C
1F06:  MOVFF  03,50D
1F0A:  MOVFF  03,511
1F0E:  MOVFF  02,510
1F12:  MOVFF  01,50F
1F16:  MOVFF  00,50E
1F1A:  MOVLB  5
1F1C:  CLRF   x15
1F1E:  CLRF   x14
1F20:  MOVLW  20
1F22:  MOVWF  x13
1F24:  MOVLW  82
1F26:  MOVWF  x12
1F28:  MOVLB  0
1F2A:  BRA    1AD6
1F2C:  BCF    FD8.1
1F2E:  MOVFF  4C6,511
1F32:  MOVFF  4C5,510
1F36:  MOVFF  4C4,50F
1F3A:  MOVFF  4C3,50E
1F3E:  MOVFF  03,515
1F42:  MOVFF  02,514
1F46:  MOVFF  01,513
1F4A:  MOVFF  00,512
1F4E:  RCALL  1C36
1F50:  MOVFF  03,4C6
1F54:  MOVFF  02,4C5
1F58:  MOVFF  01,4C4
1F5C:  MOVFF  00,4C3
....................    PresionCamara=make16(txbuf[11],txbuf[10]); 
1F60:  MOVFF  421,4C0
1F64:  MOVFF  420,4BF
....................    PresionPreCamara=make16(txbuf[13],txbuf[12]); 
1F68:  MOVFF  423,4C2
1F6C:  MOVFF  422,4C1
....................    flagprevacio=txbuf[14]; 
1F70:  MOVFF  424,4A6
....................    //Atmosferica=txbuf[15]; 
.................... } 
1F74:  GOTO   203E (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
20D6:  BRA    2040
....................    for(i=0;i<14;i++) 
20D8:  MOVLB  4
20DA:  CLRF   xA4
20DC:  MOVF   xA4,W
20DE:  SUBLW  0D
20E0:  BNC   210E
....................    { 
....................       direccion=0xA0; 
20E2:  MOVLW  A0
20E4:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
20E6:  CLRF   03
20E8:  MOVF   xA4,W
20EA:  ADDLW  56
20EC:  MOVWF  FE9
20EE:  MOVLW  04
20F0:  ADDWFC 03,W
20F2:  MOVWF  FEA
20F4:  MOVFF  FEF,50A
20F8:  MOVFF  487,50B
20FC:  MOVFF  4A4,50C
2100:  MOVFF  50A,50D
2104:  MOVLB  0
2106:  BRA    207C
....................    }  
2108:  MOVLB  4
210A:  INCF   xA4,F
210C:  BRA    20DC
.................... } 
210E:  MOVLB  0
2110:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<15;i++) 
*
1F78:  MOVLB  4
1F7A:  CLRF   xA4
1F7C:  MOVF   xA4,W
1F7E:  SUBLW  0E
1F80:  BNC   203A
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1F82:  MOVLW  A0
1F84:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1F86:  MOVFF  4A4,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1F8A:  MOVFF  487,50A
1F8E:  MOVFF  488,50B
....................       txbuf[i]=(int8)dato; 
*
2022:  CLRF   03
2024:  MOVLB  4
2026:  MOVF   xA4,W
2028:  ADDLW  16
202A:  MOVWF  FE9
202C:  MOVLW  04
202E:  ADDWFC 03,W
2030:  MOVWF  FEA
2032:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
2036:  INCF   xA4,F
2038:  BRA    1F7C
....................    Lee_Vector(); 
203A:  MOVLB  0
203C:  BRA    1EAE
.................... } 
203E:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2CAC:  CLRF   FF8
2CAE:  BCF    FD0.7
2CB0:  BSF    07.7
2CB2:  CLRF   FEA
2CB4:  CLRF   FE9
2CB6:  MOVLB  4
2CB8:  CLRF   x86
2CBA:  CLRF   x87
2CBC:  CLRF   x88
2CBE:  CLRF   x8D
2CC0:  MOVLW  01
2CC2:  MOVWF  x8E
2CC4:  CLRF   x8F
2CC6:  CLRF   x90
2CC8:  CLRF   x91
2CCA:  CLRF   x92
2CCC:  CLRF   x93
2CCE:  CLRF   x94
2CD0:  BCF    x95.0
2CD2:  BCF    x95.1
2CD4:  BCF    x95.2
2CD6:  BCF    x95.3
2CD8:  BSF    x95.4
2CDA:  BCF    x95.5
2CDC:  BCF    x95.6
2CDE:  BCF    x95.7
2CE0:  BCF    x96.0
2CE2:  BCF    x96.1
2CE4:  BCF    x96.2
2CE6:  BCF    x96.3
2CE8:  BCF    x96.4
2CEA:  BCF    x96.5
2CEC:  BCF    x96.6
2CEE:  BCF    x96.7
2CF0:  BCF    x97.0
2CF2:  BCF    x97.1
2CF4:  BCF    x97.2
2CF6:  BCF    x97.3
2CF8:  BCF    x97.4
2CFA:  CLRF   x98
2CFC:  CLRF   x99
2CFE:  CLRF   x9A
2D00:  CLRF   x9B
2D02:  CLRF   x9C
2D04:  CLRF   x9D
2D06:  CLRF   x9E
2D08:  CLRF   x9F
2D0A:  CLRF   xA0
2D0C:  CLRF   xA1
2D0E:  CLRF   xA2
2D10:  MOVWF  xA3
2D12:  CLRF   xA4
2D14:  MOVLW  0A
2D16:  MOVWF  xA5
2D18:  MOVWF  xA6
2D1A:  MOVWF  xA7
2D1C:  MOVWF  xA8
2D1E:  CLRF   xA9
2D20:  MOVLW  60
2D22:  MOVWF  xAA
2D24:  CLRF   xAB
2D26:  MOVLW  01
2D28:  MOVWF  xAC
2D2A:  CLRF   xAD
2D2C:  CLRF   xAE
2D2E:  CLRF   xAF
2D30:  CLRF   xB0
2D32:  CLRF   xB2
2D34:  CLRF   xB1
2D36:  CLRF   xB4
2D38:  CLRF   xB3
2D3A:  CLRF   xB6
2D3C:  CLRF   xB5
2D3E:  CLRF   xB8
2D40:  MOVLW  0F
2D42:  MOVWF  xB7
2D44:  CLRF   xBA
2D46:  CLRF   xB9
2D48:  CLRF   xBC
2D4A:  CLRF   xBB
2D4C:  CLRF   xBE
2D4E:  CLRF   xBD
2D50:  CLRF   xC0
2D52:  CLRF   xBF
2D54:  CLRF   xC2
2D56:  CLRF   xC1
2D58:  CLRF   xC6
2D5A:  CLRF   xC5
2D5C:  CLRF   xC4
2D5E:  CLRF   xC3
2D60:  MOVF   FC1,W
2D62:  ANDLW  C0
2D64:  IORLW  0F
2D66:  MOVWF  FC1
2D68:  MOVLW  07
2D6A:  MOVWF  FB4
2D6C:  MOVLW  6B
2D6E:  MOVWF  x89
2D70:  MOVLW  50
2D72:  MOVWF  x8A
2D74:  MOVLW  61
2D76:  MOVWF  x8B
2D78:  CLRF   x8C
2D7A:  CLRF   xC7
2D7C:  CLRF   xC8
2D7E:  CLRF   xC9
2D80:  CLRF   xCA
2D82:  CLRF   xCB
2D84:  CLRF   xCC
2D86:  CLRF   xCD
2D88:  CLRF   xCE
2D8A:  CLRF   xCF
2D8C:  CLRF   xD0
2D8E:  CLRF   xD1
2D90:  CLRF   xD2
2D92:  CLRF   xD3
2D94:  CLRF   xD4
2D96:  CLRF   xD5
2D98:  CLRF   xD6
2D9A:  CLRF   xD7
2D9C:  CLRF   xD8
2D9E:  CLRF   xD9
2DA0:  CLRF   xDA
2DA2:  CLRF   xDB
2DA4:  CLRF   xDC
2DA6:  CLRF   xDD
2DA8:  CLRF   xDE
2DAA:  MOVLB  5
2DAC:  CLRF   x08
2DAE:  CLRF   x09
....................    Display_on; 
2DB0:  BSF    F8D.0
2DB2:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2DB4:  MOVLB  4
2DB6:  CLRF   x88
2DB8:  MOVF   x88,W
2DBA:  SUBLW  0F
2DBC:  BNC   2DF2
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2DBE:  CLRF   03
2DC0:  MOVF   x88,W
2DC2:  ADDLW  56
2DC4:  MOVWF  FE9
2DC6:  MOVLW  04
2DC8:  ADDWFC 03,W
2DCA:  MOVWF  FEA
2DCC:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2DCE:  CLRF   03
2DD0:  MOVF   x88,W
2DD2:  ADDLW  66
2DD4:  MOVWF  FE9
2DD6:  MOVLW  04
2DD8:  ADDWFC 03,W
2DDA:  MOVWF  FEA
2DDC:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2DDE:  CLRF   03
2DE0:  MOVF   x88,W
2DE2:  ADDLW  76
2DE4:  MOVWF  FE9
2DE6:  MOVLW  04
2DE8:  ADDWFC 03,W
2DEA:  MOVWF  FEA
2DEC:  CLRF   FEF
....................    } 
2DEE:  INCF   x88,F
2DF0:  BRA    2DB8
....................    output_d(0); 
2DF2:  CLRF   F95
2DF4:  CLRF   F8C
....................    delay_ms(1000);    
2DF6:  MOVLW  04
2DF8:  MOVLB  5
2DFA:  MOVWF  x0A
2DFC:  MOVLW  FA
2DFE:  MOVWF  x0B
2E00:  MOVLB  0
2E02:  CALL   104A
2E06:  MOVLB  5
2E08:  DECFSZ x0A,F
2E0A:  BRA    2DFC
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2E0C:  MOVLW  85
2E0E:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2E10:  BSF    F9D.0
....................    enable_interrupts(global); 
2E12:  MOVLW  C0
2E14:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0); 
2E16:  MOVFF  FF2,50A
2E1A:  BCF    FF2.7
2E1C:  CLRF   FA9
2E1E:  BCF    FA6.6
2E20:  BCF    FA6.7
2E22:  BSF    FA6.0
2E24:  MOVF   FA8,W
2E26:  BTFSC  x0A.7
2E28:  BSF    FF2.7
2E2A:  MOVLB  4
2E2C:  MOVWF  xCB
....................    delay_ms(10); 
2E2E:  MOVLW  0A
2E30:  MOVLB  5
2E32:  MOVWF  x0B
2E34:  MOVLB  0
2E36:  CALL   104A
....................    Testerilizacionp[1]=read_eeprom(1); 
2E3A:  MOVFF  FF2,50A
2E3E:  BCF    FF2.7
2E40:  MOVLW  01
2E42:  MOVWF  FA9
2E44:  BCF    FA6.6
2E46:  BCF    FA6.7
2E48:  BSF    FA6.0
2E4A:  MOVF   FA8,W
2E4C:  MOVLB  5
2E4E:  BTFSC  x0A.7
2E50:  BSF    FF2.7
2E52:  MOVLB  4
2E54:  MOVWF  xCC
....................    delay_ms(10); 
2E56:  MOVLW  0A
2E58:  MOVLB  5
2E5A:  MOVWF  x0B
2E5C:  MOVLB  0
2E5E:  CALL   104A
....................    Testerilizacionp[2]=read_eeprom(2); 
2E62:  MOVFF  FF2,50A
2E66:  BCF    FF2.7
2E68:  MOVLW  02
2E6A:  MOVWF  FA9
2E6C:  BCF    FA6.6
2E6E:  BCF    FA6.7
2E70:  BSF    FA6.0
2E72:  MOVF   FA8,W
2E74:  MOVLB  5
2E76:  BTFSC  x0A.7
2E78:  BSF    FF2.7
2E7A:  MOVLB  4
2E7C:  MOVWF  xCD
....................    delay_ms(10); 
2E7E:  MOVLW  0A
2E80:  MOVLB  5
2E82:  MOVWF  x0B
2E84:  MOVLB  0
2E86:  CALL   104A
....................    Testerilizacionp[3]=read_eeprom(3); 
2E8A:  MOVFF  FF2,50A
2E8E:  BCF    FF2.7
2E90:  MOVLW  03
2E92:  MOVWF  FA9
2E94:  BCF    FA6.6
2E96:  BCF    FA6.7
2E98:  BSF    FA6.0
2E9A:  MOVF   FA8,W
2E9C:  MOVLB  5
2E9E:  BTFSC  x0A.7
2EA0:  BSF    FF2.7
2EA2:  MOVLB  4
2EA4:  MOVWF  xCE
....................    delay_ms(10); 
2EA6:  MOVLW  0A
2EA8:  MOVLB  5
2EAA:  MOVWF  x0B
2EAC:  MOVLB  0
2EAE:  CALL   104A
....................    Tsecadop[0]=read_eeprom(4); 
2EB2:  MOVFF  FF2,50A
2EB6:  BCF    FF2.7
2EB8:  MOVLW  04
2EBA:  MOVWF  FA9
2EBC:  BCF    FA6.6
2EBE:  BCF    FA6.7
2EC0:  BSF    FA6.0
2EC2:  MOVF   FA8,W
2EC4:  MOVLB  5
2EC6:  BTFSC  x0A.7
2EC8:  BSF    FF2.7
2ECA:  MOVLB  4
2ECC:  MOVWF  xD3
....................    delay_ms(10); 
2ECE:  MOVLW  0A
2ED0:  MOVLB  5
2ED2:  MOVWF  x0B
2ED4:  MOVLB  0
2ED6:  CALL   104A
....................    Tsecadop[1]=read_eeprom(5); 
2EDA:  MOVFF  FF2,50A
2EDE:  BCF    FF2.7
2EE0:  MOVLW  05
2EE2:  MOVWF  FA9
2EE4:  BCF    FA6.6
2EE6:  BCF    FA6.7
2EE8:  BSF    FA6.0
2EEA:  MOVF   FA8,W
2EEC:  MOVLB  5
2EEE:  BTFSC  x0A.7
2EF0:  BSF    FF2.7
2EF2:  MOVLB  4
2EF4:  MOVWF  xD4
....................    delay_ms(10); 
2EF6:  MOVLW  0A
2EF8:  MOVLB  5
2EFA:  MOVWF  x0B
2EFC:  MOVLB  0
2EFE:  CALL   104A
....................    Tsecadop[2]=read_eeprom(6); 
2F02:  MOVFF  FF2,50A
2F06:  BCF    FF2.7
2F08:  MOVLW  06
2F0A:  MOVWF  FA9
2F0C:  BCF    FA6.6
2F0E:  BCF    FA6.7
2F10:  BSF    FA6.0
2F12:  MOVF   FA8,W
2F14:  MOVLB  5
2F16:  BTFSC  x0A.7
2F18:  BSF    FF2.7
2F1A:  MOVLB  4
2F1C:  MOVWF  xD5
....................    delay_ms(10); 
2F1E:  MOVLW  0A
2F20:  MOVLB  5
2F22:  MOVWF  x0B
2F24:  MOVLB  0
2F26:  CALL   104A
....................    Tsecadop[3]=read_eeprom(7); 
2F2A:  MOVFF  FF2,50A
2F2E:  BCF    FF2.7
2F30:  MOVLW  07
2F32:  MOVWF  FA9
2F34:  BCF    FA6.6
2F36:  BCF    FA6.7
2F38:  BSF    FA6.0
2F3A:  MOVF   FA8,W
2F3C:  MOVLB  5
2F3E:  BTFSC  x0A.7
2F40:  BSF    FF2.7
2F42:  MOVLB  4
2F44:  MOVWF  xD6
....................    delay_ms(10); 
2F46:  MOVLW  0A
2F48:  MOVLB  5
2F4A:  MOVWF  x0B
2F4C:  MOVLB  0
2F4E:  CALL   104A
....................    Setpoint=read_eeprom(8); 
2F52:  MOVFF  FF2,50A
2F56:  BCF    FF2.7
2F58:  MOVLW  08
2F5A:  MOVWF  FA9
2F5C:  BCF    FA6.6
2F5E:  BCF    FA6.7
2F60:  BSF    FA6.0
2F62:  MOVF   FA8,W
2F64:  MOVLB  5
2F66:  BTFSC  x0A.7
2F68:  BSF    FF2.7
2F6A:  MOVLB  4
2F6C:  MOVWF  xA9
....................    delay_ms(10); 
2F6E:  MOVLW  0A
2F70:  MOVLB  5
2F72:  MOVWF  x0B
2F74:  MOVLB  0
2F76:  CALL   104A
....................    Nivel=read_eeprom(9); 
2F7A:  MOVFF  FF2,50A
2F7E:  BCF    FF2.7
2F80:  MOVLW  09
2F82:  MOVWF  FA9
2F84:  BCF    FA6.6
2F86:  BCF    FA6.7
2F88:  BSF    FA6.0
2F8A:  MOVF   FA8,W
2F8C:  MOVLB  5
2F8E:  BTFSC  x0A.7
2F90:  BSF    FF2.7
2F92:  MOVLB  4
2F94:  CLRF   xBA
2F96:  MOVWF  xB9
....................    delay_ms(10); 
2F98:  MOVLW  0A
2F9A:  MOVLB  5
2F9C:  MOVWF  x0B
2F9E:  MOVLB  0
2FA0:  CALL   104A
....................    Password[0]=read_eeprom(10); 
2FA4:  MOVFF  FF2,50A
2FA8:  BCF    FF2.7
2FAA:  MOVLW  0A
2FAC:  MOVWF  FA9
2FAE:  BCF    FA6.6
2FB0:  BCF    FA6.7
2FB2:  BSF    FA6.0
2FB4:  MOVF   FA8,W
2FB6:  MOVLB  5
2FB8:  BTFSC  x0A.7
2FBA:  BSF    FF2.7
2FBC:  MOVLB  4
2FBE:  MOVWF  xDB
....................    delay_ms(10); 
2FC0:  MOVLW  0A
2FC2:  MOVLB  5
2FC4:  MOVWF  x0B
2FC6:  MOVLB  0
2FC8:  CALL   104A
....................    Password[1]=read_eeprom(11); 
2FCC:  MOVFF  FF2,50A
2FD0:  BCF    FF2.7
2FD2:  MOVLW  0B
2FD4:  MOVWF  FA9
2FD6:  BCF    FA6.6
2FD8:  BCF    FA6.7
2FDA:  BSF    FA6.0
2FDC:  MOVF   FA8,W
2FDE:  MOVLB  5
2FE0:  BTFSC  x0A.7
2FE2:  BSF    FF2.7
2FE4:  MOVLB  4
2FE6:  MOVWF  xDC
....................    delay_ms(10); 
2FE8:  MOVLW  0A
2FEA:  MOVLB  5
2FEC:  MOVWF  x0B
2FEE:  MOVLB  0
2FF0:  CALL   104A
....................    Password[2]=read_eeprom(12); 
2FF4:  MOVFF  FF2,50A
2FF8:  BCF    FF2.7
2FFA:  MOVLW  0C
2FFC:  MOVWF  FA9
2FFE:  BCF    FA6.6
3000:  BCF    FA6.7
3002:  BSF    FA6.0
3004:  MOVF   FA8,W
3006:  MOVLB  5
3008:  BTFSC  x0A.7
300A:  BSF    FF2.7
300C:  MOVLB  4
300E:  MOVWF  xDD
....................    delay_ms(10); 
3010:  MOVLW  0A
3012:  MOVLB  5
3014:  MOVWF  x0B
3016:  MOVLB  0
3018:  CALL   104A
....................    Password[3]=read_eeprom(13); 
301C:  MOVFF  FF2,50A
3020:  BCF    FF2.7
3022:  MOVLW  0D
3024:  MOVWF  FA9
3026:  BCF    FA6.6
3028:  BCF    FA6.7
302A:  BSF    FA6.0
302C:  MOVF   FA8,W
302E:  MOVLB  5
3030:  BTFSC  x0A.7
3032:  BSF    FF2.7
3034:  MOVLB  4
3036:  MOVWF  xDE
....................    delay_ms(10); 
3038:  MOVLW  0A
303A:  MOVLB  5
303C:  MOVWF  x0B
303E:  MOVLB  0
3040:  CALL   104A
....................    Atmosferica=read_eeprom(90); 
3044:  MOVFF  FF2,50A
3048:  BCF    FF2.7
304A:  MOVLW  5A
304C:  MOVWF  FA9
304E:  BCF    FA6.6
3050:  BCF    FA6.7
3052:  BSF    FA6.0
3054:  MOVF   FA8,W
3056:  MOVLB  5
3058:  BTFSC  x0A.7
305A:  BSF    FF2.7
305C:  MOVLB  4
305E:  MOVWF  xAA
....................    delay_ms(10); 
3060:  MOVLW  0A
3062:  MOVLB  5
3064:  MOVWF  x0B
3066:  MOVLB  0
3068:  CALL   104A
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
306C:  MOVLW  01
306E:  MOVLB  5
3070:  MOVWF  x0A
3072:  MOVLB  0
3074:  CALL   11C6
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
3078:  MOVLB  5
307A:  CLRF   x0B
307C:  MOVLB  0
307E:  CALL   10B4
....................    strcpy(Menus.Letra,"JP Inglobal"); 
3082:  MOVLW  04
3084:  MOVWF  FEA
3086:  MOVLW  EA
3088:  MOVWF  FE9
308A:  MOVFF  FF2,50A
308E:  BCF    FF2.7
3090:  MOVLW  00
3092:  CALL   06DA
3096:  TBLRD*-
3098:  TBLRD*+
309A:  MOVF   FF5,W
309C:  MOVWF  FEE
309E:  IORLW  00
30A0:  BNZ   3098
30A2:  MOVLB  5
30A4:  BTFSC  x0A.7
30A6:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
30A8:  MOVLW  04
30AA:  MOVWF  x0B
30AC:  MOVLW  EA
30AE:  MOVWF  x0A
30B0:  CLRF   x0C
30B2:  CLRF   x0D
30B4:  CLRF   x0E
30B6:  MOVLW  02
30B8:  MOVWF  x0F
30BA:  MOVLB  0
30BC:  CALL   16E2
....................    strcpy(Menus.Letra,"Autoclave Vertical"); 
30C0:  MOVLW  04
30C2:  MOVWF  FEA
30C4:  MOVLW  EA
30C6:  MOVWF  FE9
30C8:  MOVFF  FF2,50A
30CC:  BCF    FF2.7
30CE:  MOVLW  00
30D0:  CALL   0700
30D4:  TBLRD*-
30D6:  TBLRD*+
30D8:  MOVF   FF5,W
30DA:  MOVWF  FEE
30DC:  IORLW  00
30DE:  BNZ   30D6
30E0:  MOVLB  5
30E2:  BTFSC  x0A.7
30E4:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
30E6:  MOVLW  04
30E8:  MOVWF  x0B
30EA:  MOVLW  EA
30EC:  MOVWF  x0A
30EE:  CLRF   x0C
30F0:  MOVLW  14
30F2:  MOVWF  x0D
30F4:  CLRF   x0E
30F6:  MOVLW  01
30F8:  MOVWF  x0F
30FA:  MOVLB  0
30FC:  CALL   16E2
....................    strcpy(Menus.Letra," 55 Litros  "); 
3100:  MOVLW  04
3102:  MOVWF  FEA
3104:  MOVLW  EA
3106:  MOVWF  FE9
3108:  MOVFF  FF2,50A
310C:  BCF    FF2.7
310E:  MOVLW  00
3110:  CALL   072E
3114:  TBLRD*-
3116:  TBLRD*+
3118:  MOVF   FF5,W
311A:  MOVWF  FEE
311C:  IORLW  00
311E:  BNZ   3116
3120:  MOVLB  5
3122:  BTFSC  x0A.7
3124:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
3126:  MOVLW  04
3128:  MOVWF  x0B
312A:  MOVLW  EA
312C:  MOVWF  x0A
312E:  CLRF   x0C
3130:  MOVLW  23
3132:  MOVWF  x0D
3134:  CLRF   x0E
3136:  MOVLW  02
3138:  MOVWF  x0F
313A:  MOVLB  0
313C:  CALL   16E2
....................    delay_ms(1000); 
3140:  MOVLW  04
3142:  MOVLB  5
3144:  MOVWF  x0A
3146:  MOVLW  FA
3148:  MOVWF  x0B
314A:  MOVLB  0
314C:  CALL   104A
3150:  MOVLB  5
3152:  DECFSZ x0A,F
3154:  BRA    3146
....................    delay_ms(1000); 
3156:  MOVLW  04
3158:  MOVWF  x0A
315A:  MOVLW  FA
315C:  MOVWF  x0B
315E:  MOVLB  0
3160:  CALL   104A
3164:  MOVLB  5
3166:  DECFSZ x0A,F
3168:  BRA    315A
....................    delay_ms(1000); 
316A:  MOVLW  04
316C:  MOVWF  x0A
316E:  MOVLW  FA
3170:  MOVWF  x0B
3172:  MOVLB  0
3174:  CALL   104A
3178:  MOVLB  5
317A:  DECFSZ x0A,F
317C:  BRA    316E
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
317E:  CLRF   x0B
3180:  MOVLB  0
3182:  CALL   10B4
....................    displayContrasena(Contrasena[0],20,30,1); 
3186:  MOVFF  4D7,50C
318A:  MOVLW  14
318C:  MOVLB  5
318E:  MOVWF  x0D
3190:  MOVLW  1E
3192:  MOVWF  x0E
3194:  MOVLW  01
3196:  MOVWF  x0F
3198:  MOVLB  0
319A:  CALL   1908
....................    displayContrasena(Contrasena[1],40,30,0); 
319E:  MOVFF  4D8,50C
31A2:  MOVLW  28
31A4:  MOVLB  5
31A6:  MOVWF  x0D
31A8:  MOVLW  1E
31AA:  MOVWF  x0E
31AC:  CLRF   x0F
31AE:  MOVLB  0
31B0:  CALL   1908
....................    displayContrasena(Contrasena[2],60,30,0); 
31B4:  MOVFF  4D9,50C
31B8:  MOVLW  3C
31BA:  MOVLB  5
31BC:  MOVWF  x0D
31BE:  MOVLW  1E
31C0:  MOVWF  x0E
31C2:  CLRF   x0F
31C4:  MOVLB  0
31C6:  CALL   1908
....................    displayContrasena(Contrasena[3],80,30,0); 
31CA:  MOVFF  4DA,50C
31CE:  MOVLW  50
31D0:  MOVLB  5
31D2:  MOVWF  x0D
31D4:  MOVLW  1E
31D6:  MOVWF  x0E
31D8:  CLRF   x0F
31DA:  MOVLB  0
31DC:  CALL   1908
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
31E0:  CALL   1F78
....................        
....................       Envio_Esclavos(); 
31E4:  CALL   20D6
....................       glcd_update(); 
31E8:  CALL   110E
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
31EC:  BSF    F92.0
31EE:  BTFSC  F80.0
31F0:  BRA    3204
31F2:  BSF    F92.1
31F4:  BTFSC  F80.1
31F6:  BRA    3204
31F8:  BSF    F92.2
31FA:  BTFSC  F80.2
31FC:  BRA    3204
31FE:  BSF    F92.3
3200:  BTFSS  F80.3
3202:  BRA    320C
....................       { 
....................          tinicio=0; 
3204:  MOVLB  4
3206:  CLRF   xBE
3208:  CLRF   xBD
320A:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
320C:  MOVLB  4
320E:  MOVF   xBE,W
3210:  SUBLW  37
3212:  BC    3230
3214:  XORLW  FF
3216:  BNZ   321E
3218:  MOVF   xBD,W
321A:  SUBLW  3F
321C:  BC    3230
....................          glcd_fillscreen(OFF); 
321E:  MOVLB  5
3220:  CLRF   x0B
3222:  MOVLB  0
3224:  CALL   10B4
....................          Display_off; 
3228:  BCF    F8D.0
322A:  BCF    F96.0
....................       } 
322C:  BRA    320C
322E:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
3230:  MOVF   xA2,F
3232:  BTFSS  FD8.2
3234:  BRA    37CA
....................        
....................       strcpy(Menus.Letra,"Clave"); 
3236:  MOVLW  04
3238:  MOVWF  FEA
323A:  MOVLW  EA
323C:  MOVWF  FE9
323E:  MOVFF  FF2,50A
3242:  BCF    FF2.7
3244:  MOVLW  00
3246:  MOVLB  0
3248:  CALL   0756
324C:  TBLRD*-
324E:  TBLRD*+
3250:  MOVF   FF5,W
3252:  MOVWF  FEE
3254:  IORLW  00
3256:  BNZ   324E
3258:  MOVLB  5
325A:  BTFSC  x0A.7
325C:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
325E:  MOVLW  04
3260:  MOVWF  x0B
3262:  MOVLW  EA
3264:  MOVWF  x0A
3266:  MOVLW  1E
3268:  MOVWF  x0C
326A:  CLRF   x0D
326C:  MOVLW  01
326E:  MOVWF  x0E
3270:  MOVLW  02
3272:  MOVWF  x0F
3274:  MOVLB  0
3276:  CALL   16E2
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
327A:  BSF    F92.0
327C:  BTFSS  F80.0
327E:  BRA    3356
....................       { 
....................          if(Flanco == 0) 
3280:  MOVLB  4
3282:  BTFSC  x95.0
3284:  BRA    3354
....................          { 
....................             Flanco = 1;delay_ms(30); 
3286:  BSF    x95.0
3288:  MOVLW  1E
328A:  MOVLB  5
328C:  MOVWF  x0B
328E:  MOVLB  0
3290:  CALL   104A
....................             for(i=1;i<=4;i++) 
3294:  MOVLW  01
3296:  MOVLB  4
3298:  MOVWF  xA4
329A:  MOVF   xA4,W
329C:  SUBLW  04
329E:  BNC   3354
....................             { 
....................                if(unidad==i) 
32A0:  MOVF   xA4,W
32A2:  SUBWF  xA3,W
32A4:  BNZ   331C
....................                { 
....................                   Contrasena[i-1]++; 
32A6:  MOVLW  01
32A8:  SUBWF  xA4,W
32AA:  CLRF   03
32AC:  ADDLW  D7
32AE:  MOVWF  FE9
32B0:  MOVLW  04
32B2:  ADDWFC 03,W
32B4:  MOVWF  FEA
32B6:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
32B8:  MOVLW  01
32BA:  SUBWF  xA4,W
32BC:  CLRF   03
32BE:  ADDLW  D7
32C0:  MOVWF  FE9
32C2:  MOVLW  04
32C4:  ADDWFC 03,W
32C6:  MOVWF  FEA
32C8:  BTFSC  FEF.7
32CA:  BRA    32E4
32CC:  MOVF   FEF,W
32CE:  SUBLW  09
32D0:  BC    32E4
....................                   { 
....................                      Contrasena[i-1]=0; 
32D2:  MOVLW  01
32D4:  SUBWF  xA4,W
32D6:  CLRF   03
32D8:  ADDLW  D7
32DA:  MOVWF  FE9
32DC:  MOVLW  04
32DE:  ADDWFC 03,W
32E0:  MOVWF  FEA
32E2:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
32E4:  MOVLW  01
32E6:  SUBWF  xA4,W
32E8:  CLRF   03
32EA:  ADDLW  D7
32EC:  MOVWF  FE9
32EE:  MOVLW  04
32F0:  ADDWFC 03,W
32F2:  MOVWF  FEA
32F4:  MOVFF  FEF,50A
32F8:  MOVF   xA4,W
32FA:  MULLW  14
32FC:  MOVFF  FF3,50B
3300:  MOVLB  5
3302:  MOVFF  50A,50C
3306:  MOVFF  50B,50D
330A:  MOVLW  1E
330C:  MOVWF  x0E
330E:  MOVLW  01
3310:  MOVWF  x0F
3312:  MOVLB  0
3314:  CALL   1908
....................                } 
....................                else 
3318:  BRA    334E
331A:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
331C:  MOVLW  01
331E:  SUBWF  xA4,W
3320:  CLRF   03
3322:  ADDLW  D7
3324:  MOVWF  FE9
3326:  MOVLW  04
3328:  ADDWFC 03,W
332A:  MOVWF  FEA
332C:  MOVFF  FEF,50A
3330:  MOVF   xA4,W
3332:  MULLW  14
3334:  MOVFF  FF3,50B
3338:  MOVLB  5
333A:  MOVFF  50A,50C
333E:  MOVFF  50B,50D
3342:  MOVLW  1E
3344:  MOVWF  x0E
3346:  CLRF   x0F
3348:  MOVLB  0
334A:  CALL   1908
....................                } 
....................             } 
334E:  MOVLB  4
3350:  INCF   xA4,F
3352:  BRA    329A
....................          } 
....................       } 
....................          else 
3354:  BRA    335A
....................             {Flanco = 0;} 
3356:  MOVLB  4
3358:  BCF    x95.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
335A:  BSF    F92.1
335C:  BTFSS  F80.1
335E:  BRA    3432
....................       { 
....................          if(Flanco2 == 0) 
3360:  BTFSC  x95.2
3362:  BRA    3430
....................             {Flanco2 = 1;delay_ms(30); 
3364:  BSF    x95.2
3366:  MOVLW  1E
3368:  MOVLB  5
336A:  MOVWF  x0B
336C:  MOVLB  0
336E:  CALL   104A
....................                for(i=1;i<=4;i++) 
3372:  MOVLW  01
3374:  MOVLB  4
3376:  MOVWF  xA4
3378:  MOVF   xA4,W
337A:  SUBLW  04
337C:  BNC   3430
....................                { 
....................                   if(unidad==i) 
337E:  MOVF   xA4,W
3380:  SUBWF  xA3,W
3382:  BNZ   33F8
....................                   {Contrasena[i-1]--;  
3384:  MOVLW  01
3386:  SUBWF  xA4,W
3388:  CLRF   03
338A:  ADDLW  D7
338C:  MOVWF  FE9
338E:  MOVLW  04
3390:  ADDWFC 03,W
3392:  MOVWF  FEA
3394:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
3396:  MOVLW  01
3398:  SUBWF  xA4,W
339A:  CLRF   03
339C:  ADDLW  D7
339E:  MOVWF  FE9
33A0:  MOVLW  04
33A2:  ADDWFC 03,W
33A4:  MOVWF  FEA
33A6:  BTFSC  FEF.7
33A8:  BRA    33AC
33AA:  BRA    33C0
....................                         {Contrasena[i-1]=9;} 
33AC:  MOVLW  01
33AE:  SUBWF  xA4,W
33B0:  CLRF   03
33B2:  ADDLW  D7
33B4:  MOVWF  FE9
33B6:  MOVLW  04
33B8:  ADDWFC 03,W
33BA:  MOVWF  FEA
33BC:  MOVLW  09
33BE:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
33C0:  MOVLW  01
33C2:  SUBWF  xA4,W
33C4:  CLRF   03
33C6:  ADDLW  D7
33C8:  MOVWF  FE9
33CA:  MOVLW  04
33CC:  ADDWFC 03,W
33CE:  MOVWF  FEA
33D0:  MOVFF  FEF,50A
33D4:  MOVF   xA4,W
33D6:  MULLW  14
33D8:  MOVFF  FF3,50B
33DC:  MOVLB  5
33DE:  MOVFF  50A,50C
33E2:  MOVFF  50B,50D
33E6:  MOVLW  1E
33E8:  MOVWF  x0E
33EA:  MOVLW  01
33EC:  MOVWF  x0F
33EE:  MOVLB  0
33F0:  CALL   1908
....................                   else 
33F4:  BRA    342A
33F6:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
33F8:  MOVLW  01
33FA:  SUBWF  xA4,W
33FC:  CLRF   03
33FE:  ADDLW  D7
3400:  MOVWF  FE9
3402:  MOVLW  04
3404:  ADDWFC 03,W
3406:  MOVWF  FEA
3408:  MOVFF  FEF,50A
340C:  MOVF   xA4,W
340E:  MULLW  14
3410:  MOVFF  FF3,50B
3414:  MOVLB  5
3416:  MOVFF  50A,50C
341A:  MOVFF  50B,50D
341E:  MOVLW  1E
3420:  MOVWF  x0E
3422:  CLRF   x0F
3424:  MOVLB  0
3426:  CALL   1908
....................                }       
342A:  MOVLB  4
342C:  INCF   xA4,F
342E:  BRA    3378
....................             }      
....................       } 
....................          else 
3430:  BRA    3434
....................             {Flanco2 = 0;}   
3432:  BCF    x95.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3434:  BSF    F92.2
3436:  BTFSS  F80.2
3438:  BRA    34D2
....................       { 
....................          if(Flanco1 == 0) 
343A:  BTFSC  x95.1
343C:  BRA    34D0
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
343E:  BSF    x95.1
3440:  MOVLW  1E
3442:  MOVLB  5
3444:  MOVWF  x0B
3446:  MOVLB  0
3448:  CALL   104A
344C:  MOVLB  4
344E:  INCF   xA3,F
....................                for(i=1;i<=4;i++) 
3450:  MOVLW  01
3452:  MOVWF  xA4
3454:  MOVF   xA4,W
3456:  SUBLW  04
3458:  BNC   34D0
....................                { 
....................                   if(unidad==i) 
345A:  MOVF   xA4,W
345C:  SUBWF  xA3,W
345E:  BNZ   3498
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
3460:  MOVLW  01
3462:  SUBWF  xA4,W
3464:  CLRF   03
3466:  ADDLW  D7
3468:  MOVWF  FE9
346A:  MOVLW  04
346C:  ADDWFC 03,W
346E:  MOVWF  FEA
3470:  MOVFF  FEF,50A
3474:  MOVF   xA4,W
3476:  MULLW  14
3478:  MOVFF  FF3,50B
347C:  MOVLB  5
347E:  MOVFF  50A,50C
3482:  MOVFF  50B,50D
3486:  MOVLW  1E
3488:  MOVWF  x0E
348A:  MOVLW  01
348C:  MOVWF  x0F
348E:  MOVLB  0
3490:  CALL   1908
....................                   else 
3494:  BRA    34CA
3496:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3498:  MOVLW  01
349A:  SUBWF  xA4,W
349C:  CLRF   03
349E:  ADDLW  D7
34A0:  MOVWF  FE9
34A2:  MOVLW  04
34A4:  ADDWFC 03,W
34A6:  MOVWF  FEA
34A8:  MOVFF  FEF,50A
34AC:  MOVF   xA4,W
34AE:  MULLW  14
34B0:  MOVFF  FF3,50B
34B4:  MOVLB  5
34B6:  MOVFF  50A,50C
34BA:  MOVFF  50B,50D
34BE:  MOVLW  1E
34C0:  MOVWF  x0E
34C2:  CLRF   x0F
34C4:  MOVLB  0
34C6:  CALL   1908
....................                } 
34CA:  MOVLB  4
34CC:  INCF   xA4,F
34CE:  BRA    3454
....................             } 
....................       } 
....................          else 
34D0:  BRA    34D4
....................             {Flanco1 = 0;}   
34D2:  BCF    x95.1
....................      
....................       if(unidad>4) 
34D4:  MOVF   xA3,W
34D6:  SUBLW  04
34D8:  BTFSC  FD8.0
34DA:  BRA    37CA
....................       {glcd_fillScreen(OFF);unidad=4; 
34DC:  MOVLB  5
34DE:  CLRF   x0B
34E0:  MOVLB  0
34E2:  CALL   10B4
34E6:  MOVLW  04
34E8:  MOVLB  4
34EA:  MOVWF  xA3
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
34EC:  MOVF   xD7,W
34EE:  SUBLW  03
34F0:  BNZ   35D8
34F2:  MOVF   xD8,W
34F4:  SUBLW  08
34F6:  BNZ   35D8
34F8:  MOVF   xD9,W
34FA:  SUBLW  09
34FC:  BNZ   35D8
34FE:  MOVF   xDA,W
3500:  SUBLW  02
3502:  BNZ   35D8
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3504:  MOVLW  0A
3506:  MOVWF  FA9
3508:  CLRF   FA8
350A:  BCF    FA6.6
350C:  BCF    FA6.7
350E:  BSF    FA6.2
3510:  MOVF   FF2,W
3512:  MOVWF  00
3514:  BCF    FF2.7
3516:  MOVLB  F
3518:  MOVLW  55
351A:  MOVWF  FA7
351C:  MOVLW  AA
351E:  MOVWF  FA7
3520:  BSF    FA6.1
3522:  BTFSC  FA6.1
3524:  BRA    3522
3526:  BCF    FA6.2
3528:  MOVF   00,W
352A:  IORWF  FF2,F
352C:  MOVLW  14
352E:  MOVLB  5
3530:  MOVWF  x0B
3532:  MOVLB  0
3534:  CALL   104A
3538:  MOVLW  0B
353A:  MOVWF  FA9
353C:  CLRF   FA8
353E:  BCF    FA6.6
3540:  BCF    FA6.7
3542:  BSF    FA6.2
3544:  MOVF   FF2,W
3546:  MOVWF  00
3548:  BCF    FF2.7
354A:  MOVLB  F
354C:  MOVLW  55
354E:  MOVWF  FA7
3550:  MOVLW  AA
3552:  MOVWF  FA7
3554:  BSF    FA6.1
3556:  BTFSC  FA6.1
3558:  BRA    3556
355A:  BCF    FA6.2
355C:  MOVF   00,W
355E:  IORWF  FF2,F
3560:  MOVLW  14
3562:  MOVLB  5
3564:  MOVWF  x0B
3566:  MOVLB  0
3568:  CALL   104A
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
356C:  MOVLW  0C
356E:  MOVWF  FA9
3570:  CLRF   FA8
3572:  BCF    FA6.6
3574:  BCF    FA6.7
3576:  BSF    FA6.2
3578:  MOVF   FF2,W
357A:  MOVWF  00
357C:  BCF    FF2.7
357E:  MOVLB  F
3580:  MOVLW  55
3582:  MOVWF  FA7
3584:  MOVLW  AA
3586:  MOVWF  FA7
3588:  BSF    FA6.1
358A:  BTFSC  FA6.1
358C:  BRA    358A
358E:  BCF    FA6.2
3590:  MOVF   00,W
3592:  IORWF  FF2,F
3594:  MOVLW  14
3596:  MOVLB  5
3598:  MOVWF  x0B
359A:  MOVLB  0
359C:  CALL   104A
35A0:  MOVLW  0D
35A2:  MOVWF  FA9
35A4:  CLRF   FA8
35A6:  BCF    FA6.6
35A8:  BCF    FA6.7
35AA:  BSF    FA6.2
35AC:  MOVF   FF2,W
35AE:  MOVWF  00
35B0:  BCF    FF2.7
35B2:  MOVLB  F
35B4:  MOVLW  55
35B6:  MOVWF  FA7
35B8:  MOVLW  AA
35BA:  MOVWF  FA7
35BC:  BSF    FA6.1
35BE:  BTFSC  FA6.1
35C0:  BRA    35BE
35C2:  BCF    FA6.2
35C4:  MOVF   00,W
35C6:  IORWF  FF2,F
35C8:  MOVLW  14
35CA:  MOVLB  5
35CC:  MOVWF  x0B
35CE:  MOVLB  0
35D0:  CALL   104A
....................              reset_cpu();}         
35D4:  RESET
35D6:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
35D8:  MOVF   xDB,W
35DA:  SUBWF  xD7,W
35DC:  BNZ   36AE
35DE:  MOVF   xDC,W
35E0:  SUBWF  xD8,W
35E2:  BNZ   36AE
35E4:  MOVF   xDD,W
35E6:  SUBWF  xD9,W
35E8:  BNZ   36AE
35EA:  MOVF   xDE,W
35EC:  SUBWF  xDA,W
35EE:  BNZ   36AE
....................          { 
....................             glcd_fillScreen(OFF); 
35F0:  MOVLB  5
35F2:  CLRF   x0B
35F4:  MOVLB  0
35F6:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
35FA:  MOVLW  04
35FC:  MOVWF  FEA
35FE:  MOVLW  EA
3600:  MOVWF  FE9
3602:  MOVFF  FF2,50A
3606:  BCF    FF2.7
3608:  MOVLW  00
360A:  CALL   0756
360E:  TBLRD*-
3610:  TBLRD*+
3612:  MOVF   FF5,W
3614:  MOVWF  FEE
3616:  IORLW  00
3618:  BNZ   3610
361A:  MOVLB  5
361C:  BTFSC  x0A.7
361E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3620:  MOVLW  04
3622:  MOVWF  x0B
3624:  MOVLW  EA
3626:  MOVWF  x0A
3628:  MOVLW  1E
362A:  MOVWF  x0C
362C:  CLRF   x0D
362E:  CLRF   x0E
3630:  MOVLW  02
3632:  MOVWF  x0F
3634:  MOVLB  0
3636:  CALL   16E2
....................             strcpy(Menus.Letra,"Correcta"); 
363A:  MOVLW  04
363C:  MOVWF  FEA
363E:  MOVLW  EA
3640:  MOVWF  FE9
3642:  MOVFF  FF2,50A
3646:  BCF    FF2.7
3648:  MOVLW  00
364A:  CALL   0776
364E:  TBLRD*-
3650:  TBLRD*+
3652:  MOVF   FF5,W
3654:  MOVWF  FEE
3656:  IORLW  00
3658:  BNZ   3650
365A:  MOVLB  5
365C:  BTFSC  x0A.7
365E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
3660:  MOVLW  04
3662:  MOVWF  x0B
3664:  MOVLW  EA
3666:  MOVWF  x0A
3668:  MOVLW  0F
366A:  MOVWF  x0C
366C:  MOVLW  1E
366E:  MOVWF  x0D
3670:  CLRF   x0E
3672:  MOVLW  02
3674:  MOVWF  x0F
3676:  MOVLB  0
3678:  CALL   16E2
....................             Menu=1;glcd_update();delay_ms(1000); 
367C:  MOVLW  01
367E:  MOVLB  4
3680:  MOVWF  xA2
3682:  MOVLB  0
3684:  CALL   110E
3688:  MOVLW  04
368A:  MOVLB  5
368C:  MOVWF  x0A
368E:  MOVLW  FA
3690:  MOVWF  x0B
3692:  MOVLB  0
3694:  CALL   104A
3698:  MOVLB  5
369A:  DECFSZ x0A,F
369C:  BRA    368E
....................             glcd_fillScreen(OFF);unidad=1; 
369E:  CLRF   x0B
36A0:  MOVLB  0
36A2:  CALL   10B4
36A6:  MOVLW  01
36A8:  MOVLB  4
36AA:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
36AC:  BRA    37CA
....................          { 
....................             glcd_fillScreen(OFF); 
36AE:  MOVLB  5
36B0:  CLRF   x0B
36B2:  MOVLB  0
36B4:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
36B8:  MOVLW  04
36BA:  MOVWF  FEA
36BC:  MOVLW  EA
36BE:  MOVWF  FE9
36C0:  MOVFF  FF2,50A
36C4:  BCF    FF2.7
36C6:  MOVLW  00
36C8:  CALL   0756
36CC:  TBLRD*-
36CE:  TBLRD*+
36D0:  MOVF   FF5,W
36D2:  MOVWF  FEE
36D4:  IORLW  00
36D6:  BNZ   36CE
36D8:  MOVLB  5
36DA:  BTFSC  x0A.7
36DC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
36DE:  MOVLW  04
36E0:  MOVWF  x0B
36E2:  MOVLW  EA
36E4:  MOVWF  x0A
36E6:  MOVLW  1E
36E8:  MOVWF  x0C
36EA:  CLRF   x0D
36EC:  CLRF   x0E
36EE:  MOVLW  02
36F0:  MOVWF  x0F
36F2:  MOVLB  0
36F4:  CALL   16E2
....................             strcpy(Menus.Letra,"Incorrecta"); 
36F8:  MOVLW  04
36FA:  MOVWF  FEA
36FC:  MOVLW  EA
36FE:  MOVWF  FE9
3700:  MOVFF  FF2,50A
3704:  BCF    FF2.7
3706:  MOVLW  00
3708:  CALL   079A
370C:  TBLRD*-
370E:  TBLRD*+
3710:  MOVF   FF5,W
3712:  MOVWF  FEE
3714:  IORLW  00
3716:  BNZ   370E
3718:  MOVLB  5
371A:  BTFSC  x0A.7
371C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
371E:  MOVLW  04
3720:  MOVWF  x0B
3722:  MOVLW  EA
3724:  MOVWF  x0A
3726:  CLRF   x0C
3728:  MOVLW  1E
372A:  MOVWF  x0D
372C:  CLRF   x0E
372E:  MOVLW  02
3730:  MOVWF  x0F
3732:  MOVLB  0
3734:  CALL   16E2
....................             Menu=0;glcd_update();delay_ms(1000); 
3738:  MOVLB  4
373A:  CLRF   xA2
373C:  MOVLB  0
373E:  CALL   110E
3742:  MOVLW  04
3744:  MOVLB  5
3746:  MOVWF  x0A
3748:  MOVLW  FA
374A:  MOVWF  x0B
374C:  MOVLB  0
374E:  CALL   104A
3752:  MOVLB  5
3754:  DECFSZ x0A,F
3756:  BRA    3748
....................             glcd_fillScreen(OFF);unidad=1; 
3758:  CLRF   x0B
375A:  MOVLB  0
375C:  CALL   10B4
3760:  MOVLW  01
3762:  MOVLB  4
3764:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3766:  CLRF   xD7
3768:  CLRF   xD8
376A:  CLRF   xD9
376C:  CLRF   xDA
....................             displayContrasena(Contrasena[0],20,30,1); 
376E:  MOVFF  4D7,50C
3772:  MOVLW  14
3774:  MOVLB  5
3776:  MOVWF  x0D
3778:  MOVLW  1E
377A:  MOVWF  x0E
377C:  MOVLW  01
377E:  MOVWF  x0F
3780:  MOVLB  0
3782:  CALL   1908
....................             displayContrasena(Contrasena[1],40,30,0); 
3786:  MOVFF  4D8,50C
378A:  MOVLW  28
378C:  MOVLB  5
378E:  MOVWF  x0D
3790:  MOVLW  1E
3792:  MOVWF  x0E
3794:  CLRF   x0F
3796:  MOVLB  0
3798:  CALL   1908
....................             displayContrasena(Contrasena[2],60,30,0); 
379C:  MOVFF  4D9,50C
37A0:  MOVLW  3C
37A2:  MOVLB  5
37A4:  MOVWF  x0D
37A6:  MOVLW  1E
37A8:  MOVWF  x0E
37AA:  CLRF   x0F
37AC:  MOVLB  0
37AE:  CALL   1908
....................             displayContrasena(Contrasena[3],80,30,0); 
37B2:  MOVFF  4DA,50C
37B6:  MOVLW  50
37B8:  MOVLB  5
37BA:  MOVWF  x0D
37BC:  MOVLW  1E
37BE:  MOVWF  x0E
37C0:  CLRF   x0F
37C2:  MOVLB  0
37C4:  CALL   1908
37C8:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
37CA:  DECFSZ xA2,W
37CC:  BRA    3DDC
....................        
....................       if(visual==1) 
37CE:  BTFSS  x95.4
37D0:  BRA    3D62
....................       { 
....................          if(Opcion>7) 
37D2:  MOVF   xAC,W
37D4:  SUBLW  07
37D6:  BC    37DC
....................          {Opcion=1;} 
37D8:  MOVLW  01
37DA:  MOVWF  xAC
....................          if(Opcion<1) 
37DC:  MOVF   xAC,F
37DE:  BNZ   37E4
....................          {Opcion=7;} 
37E0:  MOVLW  07
37E2:  MOVWF  xAC
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
37E4:  MOVLW  04
37E6:  MOVWF  FEA
37E8:  MOVLW  EA
37EA:  MOVWF  FE9
37EC:  MOVFF  FF2,50A
37F0:  BCF    FF2.7
37F2:  MOVLW  00
37F4:  MOVLB  0
37F6:  CALL   07C0
37FA:  TBLRD*-
37FC:  TBLRD*+
37FE:  MOVF   FF5,W
3800:  MOVWF  FEE
3802:  IORLW  00
3804:  BNZ   37FC
3806:  MOVLB  5
3808:  BTFSC  x0A.7
380A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
380C:  MOVLW  04
380E:  MOVWF  x0B
3810:  MOVLW  EA
3812:  MOVWF  x0A
3814:  MOVLW  1E
3816:  MOVWF  x0C
3818:  CLRF   x0D
381A:  MOVLW  01
381C:  MOVWF  x0E
381E:  MOVWF  x0F
3820:  MOVLB  0
3822:  CALL   16E2
....................        
....................          if(Opcion<=6) 
3826:  MOVLB  4
3828:  MOVF   xAC,W
382A:  SUBLW  06
382C:  BTFSS  FD8.0
382E:  BRA    3B92
....................          { 
....................             if(Opcion==1) 
3830:  DECFSZ xAC,W
3832:  BRA    387A
....................                {strcpy(Menus.Letra,"Caucho"); 
3834:  MOVLW  04
3836:  MOVWF  FEA
3838:  MOVLW  EA
383A:  MOVWF  FE9
383C:  MOVFF  FF2,50A
3840:  BCF    FF2.7
3842:  MOVLW  00
3844:  MOVLB  0
3846:  CALL   07EA
384A:  TBLRD*-
384C:  TBLRD*+
384E:  MOVF   FF5,W
3850:  MOVWF  FEE
3852:  IORLW  00
3854:  BNZ   384C
3856:  MOVLB  5
3858:  BTFSC  x0A.7
385A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
385C:  MOVLW  04
385E:  MOVWF  x0B
3860:  MOVLW  EA
3862:  MOVWF  x0A
3864:  CLRF   x0C
3866:  MOVLW  0A
3868:  MOVWF  x0D
386A:  MOVLW  01
386C:  MOVWF  x0E
386E:  MOVWF  x0F
3870:  MOVLB  0
3872:  CALL   16E2
....................             else 
3876:  BRA    38BC
3878:  MOVLB  4
....................                {strcpy(Menus.Letra,"Caucho"); 
387A:  MOVLW  04
387C:  MOVWF  FEA
387E:  MOVLW  EA
3880:  MOVWF  FE9
3882:  MOVFF  FF2,50A
3886:  BCF    FF2.7
3888:  MOVLW  00
388A:  MOVLB  0
388C:  CALL   07EA
3890:  TBLRD*-
3892:  TBLRD*+
3894:  MOVF   FF5,W
3896:  MOVWF  FEE
3898:  IORLW  00
389A:  BNZ   3892
389C:  MOVLB  5
389E:  BTFSC  x0A.7
38A0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
38A2:  MOVLW  04
38A4:  MOVWF  x0B
38A6:  MOVLW  EA
38A8:  MOVWF  x0A
38AA:  CLRF   x0C
38AC:  MOVLW  0A
38AE:  MOVWF  x0D
38B0:  CLRF   x0E
38B2:  MOVLW  01
38B4:  MOVWF  x0F
38B6:  MOVLB  0
38B8:  CALL   16E2
....................              
....................             if(Opcion==2)    
38BC:  MOVLB  4
38BE:  MOVF   xAC,W
38C0:  SUBLW  02
38C2:  BNZ   390A
....................                {strcpy(Menus.Letra,"Liquidos"); 
38C4:  MOVLW  04
38C6:  MOVWF  FEA
38C8:  MOVLW  EA
38CA:  MOVWF  FE9
38CC:  MOVFF  FF2,50A
38D0:  BCF    FF2.7
38D2:  MOVLW  00
38D4:  MOVLB  0
38D6:  CALL   080C
38DA:  TBLRD*-
38DC:  TBLRD*+
38DE:  MOVF   FF5,W
38E0:  MOVWF  FEE
38E2:  IORLW  00
38E4:  BNZ   38DC
38E6:  MOVLB  5
38E8:  BTFSC  x0A.7
38EA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,19,1,1);} 
38EC:  MOVLW  04
38EE:  MOVWF  x0B
38F0:  MOVLW  EA
38F2:  MOVWF  x0A
38F4:  CLRF   x0C
38F6:  MOVLW  13
38F8:  MOVWF  x0D
38FA:  MOVLW  01
38FC:  MOVWF  x0E
38FE:  MOVWF  x0F
3900:  MOVLB  0
3902:  CALL   16E2
....................             else 
3906:  BRA    394C
3908:  MOVLB  4
....................                {strcpy(Menus.Letra,"Liquidos"); 
390A:  MOVLW  04
390C:  MOVWF  FEA
390E:  MOVLW  EA
3910:  MOVWF  FE9
3912:  MOVFF  FF2,50A
3916:  BCF    FF2.7
3918:  MOVLW  00
391A:  MOVLB  0
391C:  CALL   080C
3920:  TBLRD*-
3922:  TBLRD*+
3924:  MOVF   FF5,W
3926:  MOVWF  FEE
3928:  IORLW  00
392A:  BNZ   3922
392C:  MOVLB  5
392E:  BTFSC  x0A.7
3930:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,19,0,1);}    
3932:  MOVLW  04
3934:  MOVWF  x0B
3936:  MOVLW  EA
3938:  MOVWF  x0A
393A:  CLRF   x0C
393C:  MOVLW  13
393E:  MOVWF  x0D
3940:  CLRF   x0E
3942:  MOVLW  01
3944:  MOVWF  x0F
3946:  MOVLB  0
3948:  CALL   16E2
....................                 
....................              if(Opcion==3)    
394C:  MOVLB  4
394E:  MOVF   xAC,W
3950:  SUBLW  03
3952:  BNZ   399A
....................                {strcpy(Menus.Letra,"Instrumental Suave"); 
3954:  MOVLW  04
3956:  MOVWF  FEA
3958:  MOVLW  EA
395A:  MOVWF  FE9
395C:  MOVFF  FF2,50A
3960:  BCF    FF2.7
3962:  MOVLW  00
3964:  MOVLB  0
3966:  CALL   0830
396A:  TBLRD*-
396C:  TBLRD*+
396E:  MOVF   FF5,W
3970:  MOVWF  FEE
3972:  IORLW  00
3974:  BNZ   396C
3976:  MOVLB  5
3978:  BTFSC  x0A.7
397A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,28,1,1);} 
397C:  MOVLW  04
397E:  MOVWF  x0B
3980:  MOVLW  EA
3982:  MOVWF  x0A
3984:  CLRF   x0C
3986:  MOVLW  1C
3988:  MOVWF  x0D
398A:  MOVLW  01
398C:  MOVWF  x0E
398E:  MOVWF  x0F
3990:  MOVLB  0
3992:  CALL   16E2
....................             else 
3996:  BRA    39DC
3998:  MOVLB  4
....................                {strcpy(Menus.Letra,"Instrumental Suave"); 
399A:  MOVLW  04
399C:  MOVWF  FEA
399E:  MOVLW  EA
39A0:  MOVWF  FE9
39A2:  MOVFF  FF2,50A
39A6:  BCF    FF2.7
39A8:  MOVLW  00
39AA:  MOVLB  0
39AC:  CALL   0830
39B0:  TBLRD*-
39B2:  TBLRD*+
39B4:  MOVF   FF5,W
39B6:  MOVWF  FEE
39B8:  IORLW  00
39BA:  BNZ   39B2
39BC:  MOVLB  5
39BE:  BTFSC  x0A.7
39C0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,28,0,1);} 
39C2:  MOVLW  04
39C4:  MOVWF  x0B
39C6:  MOVLW  EA
39C8:  MOVWF  x0A
39CA:  CLRF   x0C
39CC:  MOVLW  1C
39CE:  MOVWF  x0D
39D0:  CLRF   x0E
39D2:  MOVLW  01
39D4:  MOVWF  x0F
39D6:  MOVLB  0
39D8:  CALL   16E2
....................                 
....................             if(Opcion==4)    
39DC:  MOVLB  4
39DE:  MOVF   xAC,W
39E0:  SUBLW  04
39E2:  BNZ   3A2A
....................                {strcpy(Menus.Letra,"Textil e Instrumental"); 
39E4:  MOVLW  04
39E6:  MOVWF  FEA
39E8:  MOVLW  EA
39EA:  MOVWF  FE9
39EC:  MOVFF  FF2,50A
39F0:  BCF    FF2.7
39F2:  MOVLW  00
39F4:  MOVLB  0
39F6:  CALL   085E
39FA:  TBLRD*-
39FC:  TBLRD*+
39FE:  MOVF   FF5,W
3A00:  MOVWF  FEE
3A02:  IORLW  00
3A04:  BNZ   39FC
3A06:  MOVLB  5
3A08:  BTFSC  x0A.7
3A0A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,37,1,1);} 
3A0C:  MOVLW  04
3A0E:  MOVWF  x0B
3A10:  MOVLW  EA
3A12:  MOVWF  x0A
3A14:  CLRF   x0C
3A16:  MOVLW  25
3A18:  MOVWF  x0D
3A1A:  MOVLW  01
3A1C:  MOVWF  x0E
3A1E:  MOVWF  x0F
3A20:  MOVLB  0
3A22:  CALL   16E2
....................             else 
3A26:  BRA    3A6C
3A28:  MOVLB  4
....................                {strcpy(Menus.Letra,"Textil e Instrumental"); 
3A2A:  MOVLW  04
3A2C:  MOVWF  FEA
3A2E:  MOVLW  EA
3A30:  MOVWF  FE9
3A32:  MOVFF  FF2,50A
3A36:  BCF    FF2.7
3A38:  MOVLW  00
3A3A:  MOVLB  0
3A3C:  CALL   085E
3A40:  TBLRD*-
3A42:  TBLRD*+
3A44:  MOVF   FF5,W
3A46:  MOVWF  FEE
3A48:  IORLW  00
3A4A:  BNZ   3A42
3A4C:  MOVLB  5
3A4E:  BTFSC  x0A.7
3A50:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,37,0,1);}    
3A52:  MOVLW  04
3A54:  MOVWF  x0B
3A56:  MOVLW  EA
3A58:  MOVWF  x0A
3A5A:  CLRF   x0C
3A5C:  MOVLW  25
3A5E:  MOVWF  x0D
3A60:  CLRF   x0E
3A62:  MOVLW  01
3A64:  MOVWF  x0F
3A66:  MOVLB  0
3A68:  CALL   16E2
....................                 
....................             if(Opcion==5)    
3A6C:  MOVLB  4
3A6E:  MOVF   xAC,W
3A70:  SUBLW  05
3A72:  BNZ   3ABA
....................                {strcpy(Menus.Letra,"Personalizado"); 
3A74:  MOVLW  04
3A76:  MOVWF  FEA
3A78:  MOVLW  EA
3A7A:  MOVWF  FE9
3A7C:  MOVFF  FF2,50A
3A80:  BCF    FF2.7
3A82:  MOVLW  00
3A84:  MOVLB  0
3A86:  CALL   088E
3A8A:  TBLRD*-
3A8C:  TBLRD*+
3A8E:  MOVF   FF5,W
3A90:  MOVWF  FEE
3A92:  IORLW  00
3A94:  BNZ   3A8C
3A96:  MOVLB  5
3A98:  BTFSC  x0A.7
3A9A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,46,1,1);} 
3A9C:  MOVLW  04
3A9E:  MOVWF  x0B
3AA0:  MOVLW  EA
3AA2:  MOVWF  x0A
3AA4:  CLRF   x0C
3AA6:  MOVLW  2E
3AA8:  MOVWF  x0D
3AAA:  MOVLW  01
3AAC:  MOVWF  x0E
3AAE:  MOVWF  x0F
3AB0:  MOVLB  0
3AB2:  CALL   16E2
....................             else 
3AB6:  BRA    3AFC
3AB8:  MOVLB  4
....................                {strcpy(Menus.Letra,"Personalizado"); 
3ABA:  MOVLW  04
3ABC:  MOVWF  FEA
3ABE:  MOVLW  EA
3AC0:  MOVWF  FE9
3AC2:  MOVFF  FF2,50A
3AC6:  BCF    FF2.7
3AC8:  MOVLW  00
3ACA:  MOVLB  0
3ACC:  CALL   088E
3AD0:  TBLRD*-
3AD2:  TBLRD*+
3AD4:  MOVF   FF5,W
3AD6:  MOVWF  FEE
3AD8:  IORLW  00
3ADA:  BNZ   3AD2
3ADC:  MOVLB  5
3ADE:  BTFSC  x0A.7
3AE0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,46,0,1);}   
3AE2:  MOVLW  04
3AE4:  MOVWF  x0B
3AE6:  MOVLW  EA
3AE8:  MOVWF  x0A
3AEA:  CLRF   x0C
3AEC:  MOVLW  2E
3AEE:  MOVWF  x0D
3AF0:  CLRF   x0E
3AF2:  MOVLW  01
3AF4:  MOVWF  x0F
3AF6:  MOVLB  0
3AF8:  CALL   16E2
....................                 
....................             if(Opcion==6)    
3AFC:  MOVLB  4
3AFE:  MOVF   xAC,W
3B00:  SUBLW  06
3B02:  BNZ   3B4A
....................                {strcpy(Menus.Letra,"Cambio Clave"); 
3B04:  MOVLW  04
3B06:  MOVWF  FEA
3B08:  MOVLW  EA
3B0A:  MOVWF  FE9
3B0C:  MOVFF  FF2,50A
3B10:  BCF    FF2.7
3B12:  MOVLW  00
3B14:  MOVLB  0
3B16:  CALL   08B6
3B1A:  TBLRD*-
3B1C:  TBLRD*+
3B1E:  MOVF   FF5,W
3B20:  MOVWF  FEE
3B22:  IORLW  00
3B24:  BNZ   3B1C
3B26:  MOVLB  5
3B28:  BTFSC  x0A.7
3B2A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,1,1);} 
3B2C:  MOVLW  04
3B2E:  MOVWF  x0B
3B30:  MOVLW  EA
3B32:  MOVWF  x0A
3B34:  CLRF   x0C
3B36:  MOVLW  37
3B38:  MOVWF  x0D
3B3A:  MOVLW  01
3B3C:  MOVWF  x0E
3B3E:  MOVWF  x0F
3B40:  MOVLB  0
3B42:  CALL   16E2
....................             else 
3B46:  BRA    3B8C
3B48:  MOVLB  4
....................                {strcpy(Menus.Letra,"Cambio Clave"); 
3B4A:  MOVLW  04
3B4C:  MOVWF  FEA
3B4E:  MOVLW  EA
3B50:  MOVWF  FE9
3B52:  MOVFF  FF2,50A
3B56:  BCF    FF2.7
3B58:  MOVLW  00
3B5A:  MOVLB  0
3B5C:  CALL   08B6
3B60:  TBLRD*-
3B62:  TBLRD*+
3B64:  MOVF   FF5,W
3B66:  MOVWF  FEE
3B68:  IORLW  00
3B6A:  BNZ   3B62
3B6C:  MOVLB  5
3B6E:  BTFSC  x0A.7
3B70:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,0,1);}      
3B72:  MOVLW  04
3B74:  MOVWF  x0B
3B76:  MOVLW  EA
3B78:  MOVWF  x0A
3B7A:  CLRF   x0C
3B7C:  MOVLW  37
3B7E:  MOVWF  x0D
3B80:  CLRF   x0E
3B82:  MOVLW  01
3B84:  MOVWF  x0F
3B86:  MOVLB  0
3B88:  CALL   16E2
....................                visual=0; 
3B8C:  MOVLB  4
3B8E:  BCF    x95.4
....................          } 
....................          else 
3B90:  BRA    3D62
....................          { 
....................             if(Opcion==7) 
3B92:  MOVF   xAC,W
3B94:  SUBLW  07
3B96:  BNZ   3BDE
....................                {strcpy(Menus.Letra,"Presion Atm."); 
3B98:  MOVLW  04
3B9A:  MOVWF  FEA
3B9C:  MOVLW  EA
3B9E:  MOVWF  FE9
3BA0:  MOVFF  FF2,50A
3BA4:  BCF    FF2.7
3BA6:  MOVLW  00
3BA8:  MOVLB  0
3BAA:  CALL   08DE
3BAE:  TBLRD*-
3BB0:  TBLRD*+
3BB2:  MOVF   FF5,W
3BB4:  MOVWF  FEE
3BB6:  IORLW  00
3BB8:  BNZ   3BB0
3BBA:  MOVLB  5
3BBC:  BTFSC  x0A.7
3BBE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
3BC0:  MOVLW  04
3BC2:  MOVWF  x0B
3BC4:  MOVLW  EA
3BC6:  MOVWF  x0A
3BC8:  CLRF   x0C
3BCA:  MOVLW  0A
3BCC:  MOVWF  x0D
3BCE:  MOVLW  01
3BD0:  MOVWF  x0E
3BD2:  MOVWF  x0F
3BD4:  MOVLB  0
3BD6:  CALL   16E2
....................             else 
3BDA:  BRA    3C20
3BDC:  MOVLB  4
....................                {strcpy(Menus.Letra,"Presion Atm."); 
3BDE:  MOVLW  04
3BE0:  MOVWF  FEA
3BE2:  MOVLW  EA
3BE4:  MOVWF  FE9
3BE6:  MOVFF  FF2,50A
3BEA:  BCF    FF2.7
3BEC:  MOVLW  00
3BEE:  MOVLB  0
3BF0:  CALL   08DE
3BF4:  TBLRD*-
3BF6:  TBLRD*+
3BF8:  MOVF   FF5,W
3BFA:  MOVWF  FEE
3BFC:  IORLW  00
3BFE:  BNZ   3BF6
3C00:  MOVLB  5
3C02:  BTFSC  x0A.7
3C04:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
3C06:  MOVLW  04
3C08:  MOVWF  x0B
3C0A:  MOVLW  EA
3C0C:  MOVWF  x0A
3C0E:  CLRF   x0C
3C10:  MOVLW  0A
3C12:  MOVWF  x0D
3C14:  CLRF   x0E
3C16:  MOVLW  01
3C18:  MOVWF  x0F
3C1A:  MOVLB  0
3C1C:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3C20:  MOVLW  04
3C22:  MOVWF  FEA
3C24:  MOVLW  EA
3C26:  MOVWF  FE9
3C28:  MOVFF  FF2,50A
3C2C:  BCF    FF2.7
3C2E:  MOVLW  00
3C30:  CALL   0906
3C34:  TBLRD*-
3C36:  TBLRD*+
3C38:  MOVF   FF5,W
3C3A:  MOVWF  FEE
3C3C:  IORLW  00
3C3E:  BNZ   3C36
3C40:  MOVLB  5
3C42:  BTFSC  x0A.7
3C44:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,19,0,1); 
3C46:  MOVLW  04
3C48:  MOVWF  x0B
3C4A:  MOVLW  EA
3C4C:  MOVWF  x0A
3C4E:  CLRF   x0C
3C50:  MOVLW  13
3C52:  MOVWF  x0D
3C54:  CLRF   x0E
3C56:  MOVLW  01
3C58:  MOVWF  x0F
3C5A:  MOVLB  0
3C5C:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3C60:  MOVLW  04
3C62:  MOVWF  FEA
3C64:  MOVLW  EA
3C66:  MOVWF  FE9
3C68:  MOVFF  FF2,50A
3C6C:  BCF    FF2.7
3C6E:  MOVLW  00
3C70:  CALL   0906
3C74:  TBLRD*-
3C76:  TBLRD*+
3C78:  MOVF   FF5,W
3C7A:  MOVWF  FEE
3C7C:  IORLW  00
3C7E:  BNZ   3C76
3C80:  MOVLB  5
3C82:  BTFSC  x0A.7
3C84:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,28,0,1); 
3C86:  MOVLW  04
3C88:  MOVWF  x0B
3C8A:  MOVLW  EA
3C8C:  MOVWF  x0A
3C8E:  CLRF   x0C
3C90:  MOVLW  1C
3C92:  MOVWF  x0D
3C94:  CLRF   x0E
3C96:  MOVLW  01
3C98:  MOVWF  x0F
3C9A:  MOVLB  0
3C9C:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3CA0:  MOVLW  04
3CA2:  MOVWF  FEA
3CA4:  MOVLW  EA
3CA6:  MOVWF  FE9
3CA8:  MOVFF  FF2,50A
3CAC:  BCF    FF2.7
3CAE:  MOVLW  00
3CB0:  CALL   0906
3CB4:  TBLRD*-
3CB6:  TBLRD*+
3CB8:  MOVF   FF5,W
3CBA:  MOVWF  FEE
3CBC:  IORLW  00
3CBE:  BNZ   3CB6
3CC0:  MOVLB  5
3CC2:  BTFSC  x0A.7
3CC4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,37,0,1); 
3CC6:  MOVLW  04
3CC8:  MOVWF  x0B
3CCA:  MOVLW  EA
3CCC:  MOVWF  x0A
3CCE:  CLRF   x0C
3CD0:  MOVLW  25
3CD2:  MOVWF  x0D
3CD4:  CLRF   x0E
3CD6:  MOVLW  01
3CD8:  MOVWF  x0F
3CDA:  MOVLB  0
3CDC:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3CE0:  MOVLW  04
3CE2:  MOVWF  FEA
3CE4:  MOVLW  EA
3CE6:  MOVWF  FE9
3CE8:  MOVFF  FF2,50A
3CEC:  BCF    FF2.7
3CEE:  MOVLW  00
3CF0:  CALL   0906
3CF4:  TBLRD*-
3CF6:  TBLRD*+
3CF8:  MOVF   FF5,W
3CFA:  MOVWF  FEE
3CFC:  IORLW  00
3CFE:  BNZ   3CF6
3D00:  MOVLB  5
3D02:  BTFSC  x0A.7
3D04:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,46,0,1); 
3D06:  MOVLW  04
3D08:  MOVWF  x0B
3D0A:  MOVLW  EA
3D0C:  MOVWF  x0A
3D0E:  CLRF   x0C
3D10:  MOVLW  2E
3D12:  MOVWF  x0D
3D14:  CLRF   x0E
3D16:  MOVLW  01
3D18:  MOVWF  x0F
3D1A:  MOVLB  0
3D1C:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3D20:  MOVLW  04
3D22:  MOVWF  FEA
3D24:  MOVLW  EA
3D26:  MOVWF  FE9
3D28:  MOVFF  FF2,50A
3D2C:  BCF    FF2.7
3D2E:  MOVLW  00
3D30:  CALL   0906
3D34:  TBLRD*-
3D36:  TBLRD*+
3D38:  MOVF   FF5,W
3D3A:  MOVWF  FEE
3D3C:  IORLW  00
3D3E:  BNZ   3D36
3D40:  MOVLB  5
3D42:  BTFSC  x0A.7
3D44:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,0,1); 
3D46:  MOVLW  04
3D48:  MOVWF  x0B
3D4A:  MOVLW  EA
3D4C:  MOVWF  x0A
3D4E:  CLRF   x0C
3D50:  MOVLW  37
3D52:  MOVWF  x0D
3D54:  CLRF   x0E
3D56:  MOVLW  01
3D58:  MOVWF  x0F
3D5A:  MOVLB  0
3D5C:  CALL   16E2
3D60:  MOVLB  4
....................          } 
....................       } 
....................       if(UP)//Si oprime hacia arriba 
3D62:  BSF    F92.0
3D64:  BTFSS  F80.0
3D66:  BRA    3D82
....................          {  if(Flanco == 0)  
3D68:  BTFSC  x95.0
3D6A:  BRA    3D80
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3D6C:  BSF    x95.0
3D6E:  MOVLW  1E
3D70:  MOVLB  5
3D72:  MOVWF  x0B
3D74:  MOVLB  0
3D76:  CALL   104A
3D7A:  MOVLB  4
3D7C:  DECF   xAC,F
3D7E:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3D80:  BRA    3D84
....................                {Flanco = 0;} 
3D82:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
3D84:  BSF    F92.1
3D86:  BTFSS  F80.1
3D88:  BRA    3DA4
....................          {  if(Flanco2 == 0)  
3D8A:  BTFSC  x95.2
3D8C:  BRA    3DA2
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
3D8E:  BSF    x95.2
3D90:  MOVLW  1E
3D92:  MOVLB  5
3D94:  MOVWF  x0B
3D96:  MOVLB  0
3D98:  CALL   104A
3D9C:  MOVLB  4
3D9E:  INCF   xAC,F
3DA0:  BSF    x95.4
....................                }      
....................          } 
....................             else 
3DA2:  BRA    3DA6
....................                {Flanco2 = 0;}   
3DA4:  BCF    x95.2
....................                 
....................        if(RIGHT)//Si oprime SET 
3DA6:  BSF    F92.2
3DA8:  BTFSS  F80.2
3DAA:  BRA    3DDA
....................          {  if(Flanco1 == 0)  
3DAC:  BTFSC  x95.1
3DAE:  BRA    3DD8
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
3DB0:  BSF    x95.1
3DB2:  MOVLW  1E
3DB4:  MOVLB  5
3DB6:  MOVWF  x0B
3DB8:  MOVLB  0
3DBA:  CALL   104A
3DBE:  MOVLW  03
3DC0:  MOVLB  4
3DC2:  ADDWF  xAC,W
3DC4:  MOVWF  xA2
3DC6:  MOVLW  01
3DC8:  MOVWF  xAC
3DCA:  MOVLB  5
3DCC:  CLRF   x0B
3DCE:  MOVLB  0
3DD0:  CALL   10B4
3DD4:  MOVLB  4
3DD6:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3DD8:  BRA    3DDC
....................                {Flanco1 = 0;}   
3DDA:  BCF    x95.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
3DDC:  MOVF   xA2,W
3DDE:  SUBLW  04
3DE0:  BTFSS  FD8.2
3DE2:  BRA    4110
....................        
....................       if(visual==1) 
3DE4:  BTFSS  x95.4
3DE6:  BRA    3F3C
....................       { 
....................          glcd_imagen(2); //Guante 
3DE8:  MOVLW  02
3DEA:  MOVLB  5
3DEC:  MOVWF  x0A
3DEE:  MOVLB  0
3DF0:  CALL   2136
....................          strcpy(Menus.Letra,"Caucho"); 
3DF4:  MOVLW  04
3DF6:  MOVWF  FEA
3DF8:  MOVLW  EA
3DFA:  MOVWF  FE9
3DFC:  MOVFF  FF2,50A
3E00:  BCF    FF2.7
3E02:  MOVLW  00
3E04:  CALL   07EA
3E08:  TBLRD*-
3E0A:  TBLRD*+
3E0C:  MOVF   FF5,W
3E0E:  MOVWF  FEE
3E10:  IORLW  00
3E12:  BNZ   3E0A
3E14:  MOVLB  5
3E16:  BTFSC  x0A.7
3E18:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3E1A:  MOVLW  04
3E1C:  MOVWF  x0B
3E1E:  MOVLW  EA
3E20:  MOVWF  x0A
3E22:  MOVLW  14
3E24:  MOVWF  x0C
3E26:  CLRF   x0D
3E28:  MOVLW  01
3E2A:  MOVWF  x0E
3E2C:  MOVLW  02
3E2E:  MOVWF  x0F
3E30:  MOVLB  0
3E32:  CALL   16E2
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3E36:  MOVLW  04
3E38:  MOVWF  FEA
3E3A:  MOVLW  EA
3E3C:  MOVWF  FE9
3E3E:  MOVFF  FF2,50A
3E42:  BCF    FF2.7
3E44:  MOVLW  00
3E46:  CALL   07EA
3E4A:  TBLRD*-
3E4C:  TBLRD*+
3E4E:  MOVF   FF5,W
3E50:  MOVWF  FEE
3E52:  IORLW  00
3E54:  BNZ   3E4C
3E56:  MOVLB  5
3E58:  BTFSC  x0A.7
3E5A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3E5C:  MOVLW  04
3E5E:  MOVWF  x0B
3E60:  MOVLW  EA
3E62:  MOVWF  x0A
3E64:  MOVLW  07
3E66:  MOVWF  x0C
3E68:  MOVLW  37
3E6A:  MOVWF  x0D
3E6C:  CLRF   x0E
3E6E:  MOVLW  01
3E70:  MOVWF  x0F
3E72:  MOVLB  0
3E74:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3E78:  MOVLW  04
3E7A:  MOVWF  FEA
3E7C:  MOVLW  EA
3E7E:  MOVWF  FE9
3E80:  MOVFF  FF2,50A
3E84:  BCF    FF2.7
3E86:  MOVLW  00
3E88:  CALL   092C
3E8C:  TBLRD*-
3E8E:  TBLRD*+
3E90:  MOVF   FF5,W
3E92:  MOVWF  FEE
3E94:  IORLW  00
3E96:  BNZ   3E8E
3E98:  MOVLB  5
3E9A:  BTFSC  x0A.7
3E9C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3E9E:  MOVLW  04
3EA0:  MOVWF  x0B
3EA2:  MOVLW  EA
3EA4:  MOVWF  x0A
3EA6:  CLRF   x0C
3EA8:  MOVLW  1A
3EAA:  MOVWF  x0D
3EAC:  CLRF   x0E
3EAE:  MOVLW  01
3EB0:  MOVWF  x0F
3EB2:  MOVLB  0
3EB4:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3EB8:  MOVLW  04
3EBA:  MOVWF  FEA
3EBC:  MOVLW  EA
3EBE:  MOVWF  FE9
3EC0:  MOVFF  FF2,50A
3EC4:  BCF    FF2.7
3EC6:  MOVLW  00
3EC8:  CALL   0958
3ECC:  TBLRD*-
3ECE:  TBLRD*+
3ED0:  MOVF   FF5,W
3ED2:  MOVWF  FEE
3ED4:  IORLW  00
3ED6:  BNZ   3ECE
3ED8:  MOVLB  5
3EDA:  BTFSC  x0A.7
3EDC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3EDE:  MOVLW  04
3EE0:  MOVWF  x0B
3EE2:  MOVLW  EA
3EE4:  MOVWF  x0A
3EE6:  CLRF   x0C
3EE8:  MOVLW  24
3EEA:  MOVWF  x0D
3EEC:  CLRF   x0E
3EEE:  MOVLW  01
3EF0:  MOVWF  x0F
3EF2:  MOVLB  0
3EF4:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3EF8:  MOVLW  04
3EFA:  MOVWF  FEA
3EFC:  MOVLW  EA
3EFE:  MOVWF  FE9
3F00:  MOVFF  FF2,50A
3F04:  BCF    FF2.7
3F06:  MOVLW  00
3F08:  CALL   0988
3F0C:  TBLRD*-
3F0E:  TBLRD*+
3F10:  MOVF   FF5,W
3F12:  MOVWF  FEE
3F14:  IORLW  00
3F16:  BNZ   3F0E
3F18:  MOVLB  5
3F1A:  BTFSC  x0A.7
3F1C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3F1E:  MOVLW  04
3F20:  MOVWF  x0B
3F22:  MOVLW  EA
3F24:  MOVWF  x0A
3F26:  CLRF   x0C
3F28:  MOVLW  2E
3F2A:  MOVWF  x0D
3F2C:  CLRF   x0E
3F2E:  MOVLW  01
3F30:  MOVWF  x0F
3F32:  MOVLB  0
3F34:  CALL   16E2
....................          visual=0; 
3F38:  MOVLB  4
3F3A:  BCF    x95.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3F3C:  BSF    F92.3
3F3E:  BTFSS  F80.3
3F40:  BRA    3F62
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3F42:  MOVLW  1E
3F44:  MOVLB  5
3F46:  MOVWF  x0B
3F48:  MOVLB  0
3F4A:  CALL   104A
3F4E:  MOVLW  01
3F50:  MOVLB  4
3F52:  MOVWF  xA2
3F54:  MOVLB  5
3F56:  CLRF   x0B
3F58:  MOVLB  0
3F5A:  CALL   10B4
3F5E:  MOVLB  4
3F60:  BSF    x95.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3F62:  BSF    F92.2
3F64:  BTFSS  F80.2
3F66:  BRA    4110
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;visual=1; 
3F68:  CLRF   xCB
3F6A:  CLRF   xCC
3F6C:  MOVLW  05
3F6E:  MOVWF  xCD
3F70:  MOVLW  01
3F72:  MOVWF  xCE
3F74:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3F76:  CLRF   xD3
3F78:  CLRF   xD4
3F7A:  MOVLW  05
3F7C:  MOVWF  xD5
3F7E:  MOVLW  01
3F80:  MOVWF  xD6
3F82:  CLRF   xB8
3F84:  CLRF   xB7
3F86:  MOVLW  79
3F88:  MOVWF  xA9
3F8A:  MOVLW  14
3F8C:  MOVWF  xA2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3F8E:  MOVWF  xA2
3F90:  MOVLW  0F
3F92:  MOVLB  5
3F94:  MOVWF  x20
3F96:  MOVLW  12
3F98:  MOVWF  x21
3F9A:  MOVLW  1E
3F9C:  MOVWF  x22
3F9E:  MOVLW  35
3FA0:  MOVWF  x23
3FA2:  CLRF   x24
3FA4:  MOVLW  01
3FA6:  MOVWF  x25
3FA8:  MOVLB  0
3FAA:  CALL   1620
3FAE:  MOVLB  4
3FB0:  CLRF   xAE
3FB2:  MOVLW  C0
3FB4:  IORWF  FF2,F
3FB6:  MOVLB  5
3FB8:  CLRF   x0B
3FBA:  MOVLB  0
3FBC:  CALL   10B4
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3FC0:  MOVLW  04
3FC2:  MOVWF  FEA
3FC4:  MOVLW  EA
3FC6:  MOVWF  FE9
3FC8:  MOVFF  FF2,50A
3FCC:  BCF    FF2.7
3FCE:  MOVLW  00
3FD0:  CALL   09B2
3FD4:  TBLRD*-
3FD6:  TBLRD*+
3FD8:  MOVF   FF5,W
3FDA:  MOVWF  FEE
3FDC:  IORLW  00
3FDE:  BNZ   3FD6
3FE0:  MOVLB  5
3FE2:  BTFSC  x0A.7
3FE4:  BSF    FF2.7
3FE6:  MOVLW  04
3FE8:  MOVWF  x0B
3FEA:  MOVLW  EA
3FEC:  MOVWF  x0A
3FEE:  CLRF   x0C
3FF0:  MOVLW  37
3FF2:  MOVWF  x0D
3FF4:  MOVLW  02
3FF6:  MOVWF  x0E
3FF8:  MOVLW  01
3FFA:  MOVWF  x0F
3FFC:  MOVLB  0
3FFE:  CALL   16E2
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
4002:  MOVLW  0F
4004:  MOVLB  5
4006:  MOVWF  x20
4008:  MOVLW  12
400A:  MOVWF  x21
400C:  MOVLW  1E
400E:  MOVWF  x22
4010:  MOVLW  35
4012:  MOVWF  x23
4014:  CLRF   x24
4016:  MOVLW  01
4018:  MOVWF  x25
401A:  MOVLB  0
401C:  CALL   1620
....................          glcd_imagen(5); 
4020:  MOVLW  05
4022:  MOVLB  5
4024:  MOVWF  x0A
4026:  MOVLB  0
4028:  CALL   2136
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
402C:  MOVLW  04
402E:  MOVWF  FEA
4030:  MOVLW  EA
4032:  MOVWF  FE9
4034:  MOVFF  FF2,50A
4038:  BCF    FF2.7
403A:  MOVLW  00
403C:  CALL   09D8
4040:  TBLRD*-
4042:  TBLRD*+
4044:  MOVF   FF5,W
4046:  MOVWF  FEE
4048:  IORLW  00
404A:  BNZ   4042
404C:  MOVLB  5
404E:  BTFSC  x0A.7
4050:  BSF    FF2.7
4052:  MOVLW  04
4054:  MOVWF  x0B
4056:  MOVLW  EA
4058:  MOVWF  x0A
405A:  CLRF   x0C
405C:  CLRF   x0D
405E:  MOVLW  02
4060:  MOVWF  x0E
4062:  MOVLW  01
4064:  MOVWF  x0F
4066:  MOVLB  0
4068:  CALL   16E2
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
406C:  MOVLW  04
406E:  MOVWF  FEA
4070:  MOVLW  EA
4072:  MOVWF  FE9
4074:  MOVFF  FF2,50A
4078:  BCF    FF2.7
407A:  MOVLW  00
407C:  CALL   09FA
4080:  TBLRD*-
4082:  TBLRD*+
4084:  MOVF   FF5,W
4086:  MOVWF  FEE
4088:  IORLW  00
408A:  BNZ   4082
408C:  MOVLB  5
408E:  BTFSC  x0A.7
4090:  BSF    FF2.7
4092:  MOVLW  04
4094:  MOVWF  x0B
4096:  MOVLW  EA
4098:  MOVWF  x0A
409A:  CLRF   x0C
409C:  MOVLW  08
409E:  MOVWF  x0D
40A0:  MOVLW  02
40A2:  MOVWF  x0E
40A4:  MOVLW  01
40A6:  MOVWF  x0F
40A8:  MOVLB  0
40AA:  CALL   16E2
....................          glcd_circle(95,40,2,NO,ON); 
40AE:  MOVLW  5F
40B0:  MOVLB  5
40B2:  MOVWF  x0A
40B4:  MOVLW  28
40B6:  MOVWF  x0B
40B8:  MOVLW  02
40BA:  MOVWF  x0C
40BC:  CLRF   x0D
40BE:  MOVLW  01
40C0:  MOVWF  x0E
40C2:  MOVLB  0
40C4:  CALL   2232
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
40C8:  MOVLW  04
40CA:  MOVWF  FEA
40CC:  MOVLW  EA
40CE:  MOVWF  FE9
40D0:  MOVFF  FF2,50A
40D4:  BCF    FF2.7
40D6:  MOVLW  00
40D8:  CALL   0A1C
40DC:  TBLRD*-
40DE:  TBLRD*+
40E0:  MOVF   FF5,W
40E2:  MOVWF  FEE
40E4:  IORLW  00
40E6:  BNZ   40DE
40E8:  MOVLB  5
40EA:  BTFSC  x0A.7
40EC:  BSF    FF2.7
40EE:  MOVLW  04
40F0:  MOVWF  x0B
40F2:  MOVLW  EA
40F4:  MOVWF  x0A
40F6:  MOVLW  66
40F8:  MOVWF  x0C
40FA:  MOVLW  28
40FC:  MOVWF  x0D
40FE:  MOVLW  02
4100:  MOVWF  x0E
4102:  MOVWF  x0F
4104:  MOVLB  0
4106:  CALL   16E2
....................          MuestraTiemposProgramados(); 
410A:  CALL   2632
410E:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
4110:  MOVF   xA2,W
4112:  SUBLW  05
4114:  BTFSS  FD8.2
4116:  BRA    42DC
....................        
....................       if(visual==1) 
4118:  BTFSS  x95.4
411A:  BRA    4272
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
411C:  MOVLW  04
411E:  MOVLB  5
4120:  MOVWF  x0A
4122:  MOVLB  0
4124:  CALL   2136
....................          strcpy(Menus.Letra,"Liquidos"); 
4128:  MOVLW  04
412A:  MOVWF  FEA
412C:  MOVLW  EA
412E:  MOVWF  FE9
4130:  MOVFF  FF2,50A
4134:  BCF    FF2.7
4136:  MOVLW  00
4138:  CALL   080C
413C:  TBLRD*-
413E:  TBLRD*+
4140:  MOVF   FF5,W
4142:  MOVWF  FEE
4144:  IORLW  00
4146:  BNZ   413E
4148:  MOVLB  5
414A:  BTFSC  x0A.7
414C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
414E:  MOVLW  04
4150:  MOVWF  x0B
4152:  MOVLW  EA
4154:  MOVWF  x0A
4156:  MOVLW  14
4158:  MOVWF  x0C
415A:  CLRF   x0D
415C:  MOVLW  01
415E:  MOVWF  x0E
4160:  MOVLW  02
4162:  MOVWF  x0F
4164:  MOVLB  0
4166:  CALL   16E2
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
416A:  MOVLW  04
416C:  MOVWF  FEA
416E:  MOVLW  EA
4170:  MOVWF  FE9
4172:  MOVFF  FF2,50A
4176:  BCF    FF2.7
4178:  MOVLW  00
417A:  CALL   080C
417E:  TBLRD*-
4180:  TBLRD*+
4182:  MOVF   FF5,W
4184:  MOVWF  FEE
4186:  IORLW  00
4188:  BNZ   4180
418A:  MOVLB  5
418C:  BTFSC  x0A.7
418E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
4190:  MOVLW  04
4192:  MOVWF  x0B
4194:  MOVLW  EA
4196:  MOVWF  x0A
4198:  MOVLW  07
419A:  MOVWF  x0C
419C:  MOVLW  37
419E:  MOVWF  x0D
41A0:  MOVLW  02
41A2:  MOVWF  x0E
41A4:  MOVLW  01
41A6:  MOVWF  x0F
41A8:  MOVLB  0
41AA:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
41AE:  MOVLW  04
41B0:  MOVWF  FEA
41B2:  MOVLW  EA
41B4:  MOVWF  FE9
41B6:  MOVFF  FF2,50A
41BA:  BCF    FF2.7
41BC:  MOVLW  00
41BE:  CALL   092C
41C2:  TBLRD*-
41C4:  TBLRD*+
41C6:  MOVF   FF5,W
41C8:  MOVWF  FEE
41CA:  IORLW  00
41CC:  BNZ   41C4
41CE:  MOVLB  5
41D0:  BTFSC  x0A.7
41D2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
41D4:  MOVLW  04
41D6:  MOVWF  x0B
41D8:  MOVLW  EA
41DA:  MOVWF  x0A
41DC:  CLRF   x0C
41DE:  MOVLW  1A
41E0:  MOVWF  x0D
41E2:  CLRF   x0E
41E4:  MOVLW  01
41E6:  MOVWF  x0F
41E8:  MOVLB  0
41EA:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
41EE:  MOVLW  04
41F0:  MOVWF  FEA
41F2:  MOVLW  EA
41F4:  MOVWF  FE9
41F6:  MOVFF  FF2,50A
41FA:  BCF    FF2.7
41FC:  MOVLW  00
41FE:  CALL   0A38
4202:  TBLRD*-
4204:  TBLRD*+
4206:  MOVF   FF5,W
4208:  MOVWF  FEE
420A:  IORLW  00
420C:  BNZ   4204
420E:  MOVLB  5
4210:  BTFSC  x0A.7
4212:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4214:  MOVLW  04
4216:  MOVWF  x0B
4218:  MOVLW  EA
421A:  MOVWF  x0A
421C:  CLRF   x0C
421E:  MOVLW  24
4220:  MOVWF  x0D
4222:  CLRF   x0E
4224:  MOVLW  01
4226:  MOVWF  x0F
4228:  MOVLB  0
422A:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
422E:  MOVLW  04
4230:  MOVWF  FEA
4232:  MOVLW  EA
4234:  MOVWF  FE9
4236:  MOVFF  FF2,50A
423A:  BCF    FF2.7
423C:  MOVLW  00
423E:  CALL   0A68
4242:  TBLRD*-
4244:  TBLRD*+
4246:  MOVF   FF5,W
4248:  MOVWF  FEE
424A:  IORLW  00
424C:  BNZ   4244
424E:  MOVLB  5
4250:  BTFSC  x0A.7
4252:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
4254:  MOVLW  04
4256:  MOVWF  x0B
4258:  MOVLW  EA
425A:  MOVWF  x0A
425C:  CLRF   x0C
425E:  MOVLW  2E
4260:  MOVWF  x0D
4262:  CLRF   x0E
4264:  MOVLW  01
4266:  MOVWF  x0F
4268:  MOVLB  0
426A:  CALL   16E2
....................          visual=0; 
426E:  MOVLB  4
4270:  BCF    x95.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
4272:  BSF    F92.3
4274:  BTFSS  F80.3
4276:  BRA    4298
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4278:  MOVLW  1E
427A:  MOVLB  5
427C:  MOVWF  x0B
427E:  MOVLB  0
4280:  CALL   104A
4284:  MOVLW  01
4286:  MOVLB  4
4288:  MOVWF  xA2
428A:  MOVLB  5
428C:  CLRF   x0B
428E:  MOVLB  0
4290:  CALL   10B4
4294:  MOVLB  4
4296:  BSF    x95.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
4298:  BSF    F92.2
429A:  BTFSS  F80.2
429C:  BRA    42DC
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
429E:  CLRF   xCB
42A0:  CLRF   xCC
42A2:  CLRF   xCD
42A4:  MOVLW  02
42A6:  MOVWF  xCE
42A8:  BSF    x95.5
42AA:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
42AC:  CLRF   xD3
42AE:  CLRF   xD4
42B0:  CLRF   xD5
42B2:  CLRF   xD6
42B4:  MOVLW  79
42B6:  MOVWF  xA9
42B8:  MOVLW  0E
42BA:  MOVWF  xA2
42BC:  MOVLW  04
42BE:  MOVLB  5
42C0:  MOVWF  x0A
42C2:  MOVLW  AF
42C4:  MOVWF  x0B
42C6:  MOVLB  0
42C8:  CALL   104A
42CC:  MOVLB  5
42CE:  DECFSZ x0A,F
42D0:  BRA    42C2
42D2:  CLRF   x0B
42D4:  MOVLB  0
42D6:  CALL   10B4
42DA:  MOVLB  4
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
42DC:  MOVF   xA2,W
42DE:  SUBLW  06
42E0:  BTFSS  FD8.2
42E2:  BRA    44A8
....................        
....................       if(visual==1) 
42E4:  BTFSS  x95.4
42E6:  BRA    443C
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
42E8:  MOVLW  03
42EA:  MOVLB  5
42EC:  MOVWF  x0A
42EE:  MOVLB  0
42F0:  CALL   2136
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
42F4:  MOVLW  04
42F6:  MOVWF  FEA
42F8:  MOVLW  EA
42FA:  MOVWF  FE9
42FC:  MOVFF  FF2,50A
4300:  BCF    FF2.7
4302:  MOVLW  00
4304:  CALL   0A92
4308:  TBLRD*-
430A:  TBLRD*+
430C:  MOVF   FF5,W
430E:  MOVWF  FEE
4310:  IORLW  00
4312:  BNZ   430A
4314:  MOVLB  5
4316:  BTFSC  x0A.7
4318:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
431A:  MOVLW  04
431C:  MOVWF  x0B
431E:  MOVLW  EA
4320:  MOVWF  x0A
4322:  CLRF   x0C
4324:  CLRF   x0D
4326:  MOVLW  01
4328:  MOVWF  x0E
432A:  MOVLW  02
432C:  MOVWF  x0F
432E:  MOVLB  0
4330:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
4334:  MOVLW  04
4336:  MOVWF  FEA
4338:  MOVLW  EA
433A:  MOVWF  FE9
433C:  MOVFF  FF2,50A
4340:  BCF    FF2.7
4342:  MOVLW  00
4344:  CALL   0830
4348:  TBLRD*-
434A:  TBLRD*+
434C:  MOVF   FF5,W
434E:  MOVWF  FEE
4350:  IORLW  00
4352:  BNZ   434A
4354:  MOVLB  5
4356:  BTFSC  x0A.7
4358:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
435A:  MOVLW  04
435C:  MOVWF  x0B
435E:  MOVLW  EA
4360:  MOVWF  x0A
4362:  MOVLW  07
4364:  MOVWF  x0C
4366:  MOVLW  37
4368:  MOVWF  x0D
436A:  MOVLW  02
436C:  MOVWF  x0E
436E:  MOVLW  01
4370:  MOVWF  x0F
4372:  MOVLB  0
4374:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
4378:  MOVLW  04
437A:  MOVWF  FEA
437C:  MOVLW  EA
437E:  MOVWF  FE9
4380:  MOVFF  FF2,50A
4384:  BCF    FF2.7
4386:  MOVLW  00
4388:  CALL   092C
438C:  TBLRD*-
438E:  TBLRD*+
4390:  MOVF   FF5,W
4392:  MOVWF  FEE
4394:  IORLW  00
4396:  BNZ   438E
4398:  MOVLB  5
439A:  BTFSC  x0A.7
439C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
439E:  MOVLW  04
43A0:  MOVWF  x0B
43A2:  MOVLW  EA
43A4:  MOVWF  x0A
43A6:  CLRF   x0C
43A8:  MOVLW  1A
43AA:  MOVWF  x0D
43AC:  CLRF   x0E
43AE:  MOVLW  01
43B0:  MOVWF  x0F
43B2:  MOVLB  0
43B4:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
43B8:  MOVLW  04
43BA:  MOVWF  FEA
43BC:  MOVLW  EA
43BE:  MOVWF  FE9
43C0:  MOVFF  FF2,50A
43C4:  BCF    FF2.7
43C6:  MOVLW  00
43C8:  CALL   0958
43CC:  TBLRD*-
43CE:  TBLRD*+
43D0:  MOVF   FF5,W
43D2:  MOVWF  FEE
43D4:  IORLW  00
43D6:  BNZ   43CE
43D8:  MOVLB  5
43DA:  BTFSC  x0A.7
43DC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
43DE:  MOVLW  04
43E0:  MOVWF  x0B
43E2:  MOVLW  EA
43E4:  MOVWF  x0A
43E6:  CLRF   x0C
43E8:  MOVLW  24
43EA:  MOVWF  x0D
43EC:  CLRF   x0E
43EE:  MOVLW  01
43F0:  MOVWF  x0F
43F2:  MOVLB  0
43F4:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
43F8:  MOVLW  04
43FA:  MOVWF  FEA
43FC:  MOVLW  EA
43FE:  MOVWF  FE9
4400:  MOVFF  FF2,50A
4404:  BCF    FF2.7
4406:  MOVLW  00
4408:  CALL   0A68
440C:  TBLRD*-
440E:  TBLRD*+
4410:  MOVF   FF5,W
4412:  MOVWF  FEE
4414:  IORLW  00
4416:  BNZ   440E
4418:  MOVLB  5
441A:  BTFSC  x0A.7
441C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
441E:  MOVLW  04
4420:  MOVWF  x0B
4422:  MOVLW  EA
4424:  MOVWF  x0A
4426:  CLRF   x0C
4428:  MOVLW  2E
442A:  MOVWF  x0D
442C:  CLRF   x0E
442E:  MOVLW  01
4430:  MOVWF  x0F
4432:  MOVLB  0
4434:  CALL   16E2
....................          visual=0; 
4438:  MOVLB  4
443A:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
443C:  BSF    F92.3
443E:  BTFSS  F80.3
4440:  BRA    4462
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4442:  MOVLW  1E
4444:  MOVLB  5
4446:  MOVWF  x0B
4448:  MOVLB  0
444A:  CALL   104A
444E:  MOVLW  01
4450:  MOVLB  4
4452:  MOVWF  xA2
4454:  MOVLB  5
4456:  CLRF   x0B
4458:  MOVLB  0
445A:  CALL   10B4
445E:  MOVLB  4
4460:  BSF    x95.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
4462:  BSF    F92.2
4464:  BTFSS  F80.2
4466:  BRA    44A8
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
4468:  CLRF   xCB
446A:  CLRF   xCC
446C:  MOVLW  05
446E:  MOVWF  xCD
4470:  MOVLW  01
4472:  MOVWF  xCE
4474:  BSF    x95.5
4476:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
4478:  CLRF   xD3
447A:  CLRF   xD4
447C:  CLRF   xD5
447E:  CLRF   xD6
4480:  MOVLW  79
4482:  MOVWF  xA9
4484:  MOVLW  0E
4486:  MOVWF  xA2
4488:  MOVLW  04
448A:  MOVLB  5
448C:  MOVWF  x0A
448E:  MOVLW  AF
4490:  MOVWF  x0B
4492:  MOVLB  0
4494:  CALL   104A
4498:  MOVLB  5
449A:  DECFSZ x0A,F
449C:  BRA    448E
449E:  CLRF   x0B
44A0:  MOVLB  0
44A2:  CALL   10B4
44A6:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
44A8:  MOVF   xA2,W
44AA:  SUBLW  07
44AC:  BTFSS  FD8.2
44AE:  BRA    47EE
....................        
....................       if(visual==1) 
44B0:  BTFSS  x95.4
44B2:  BRA    4606
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
44B4:  MOVLW  01
44B6:  MOVLB  5
44B8:  MOVWF  x0A
44BA:  MOVLB  0
44BC:  CALL   2136
....................          strcpy(Menus.Letra,"Tex & Ins"); 
44C0:  MOVLW  04
44C2:  MOVWF  FEA
44C4:  MOVLW  EA
44C6:  MOVWF  FE9
44C8:  MOVFF  FF2,50A
44CC:  BCF    FF2.7
44CE:  MOVLW  00
44D0:  CALL   0AB8
44D4:  TBLRD*-
44D6:  TBLRD*+
44D8:  MOVF   FF5,W
44DA:  MOVWF  FEE
44DC:  IORLW  00
44DE:  BNZ   44D6
44E0:  MOVLB  5
44E2:  BTFSC  x0A.7
44E4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
44E6:  MOVLW  04
44E8:  MOVWF  x0B
44EA:  MOVLW  EA
44EC:  MOVWF  x0A
44EE:  CLRF   x0C
44F0:  CLRF   x0D
44F2:  MOVLW  01
44F4:  MOVWF  x0E
44F6:  MOVLW  02
44F8:  MOVWF  x0F
44FA:  MOVLB  0
44FC:  CALL   16E2
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
4500:  MOVLW  04
4502:  MOVWF  FEA
4504:  MOVLW  EA
4506:  MOVWF  FE9
4508:  MOVFF  FF2,50A
450C:  BCF    FF2.7
450E:  MOVLW  00
4510:  CALL   085E
4514:  TBLRD*-
4516:  TBLRD*+
4518:  MOVF   FF5,W
451A:  MOVWF  FEE
451C:  IORLW  00
451E:  BNZ   4516
4520:  MOVLB  5
4522:  BTFSC  x0A.7
4524:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4526:  MOVLW  04
4528:  MOVWF  x0B
452A:  MOVLW  EA
452C:  MOVWF  x0A
452E:  CLRF   x0C
4530:  MOVLW  37
4532:  MOVWF  x0D
4534:  MOVLW  02
4536:  MOVWF  x0E
4538:  MOVLW  01
453A:  MOVWF  x0F
453C:  MOVLB  0
453E:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
4542:  MOVLW  04
4544:  MOVWF  FEA
4546:  MOVLW  EA
4548:  MOVWF  FE9
454A:  MOVFF  FF2,50A
454E:  BCF    FF2.7
4550:  MOVLW  00
4552:  CALL   092C
4556:  TBLRD*-
4558:  TBLRD*+
455A:  MOVF   FF5,W
455C:  MOVWF  FEE
455E:  IORLW  00
4560:  BNZ   4558
4562:  MOVLB  5
4564:  BTFSC  x0A.7
4566:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4568:  MOVLW  04
456A:  MOVWF  x0B
456C:  MOVLW  EA
456E:  MOVWF  x0A
4570:  CLRF   x0C
4572:  MOVLW  1A
4574:  MOVWF  x0D
4576:  CLRF   x0E
4578:  MOVLW  01
457A:  MOVWF  x0F
457C:  MOVLB  0
457E:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
4582:  MOVLW  04
4584:  MOVWF  FEA
4586:  MOVLW  EA
4588:  MOVWF  FE9
458A:  MOVFF  FF2,50A
458E:  BCF    FF2.7
4590:  MOVLW  00
4592:  CALL   0ADC
4596:  TBLRD*-
4598:  TBLRD*+
459A:  MOVF   FF5,W
459C:  MOVWF  FEE
459E:  IORLW  00
45A0:  BNZ   4598
45A2:  MOVLB  5
45A4:  BTFSC  x0A.7
45A6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
45A8:  MOVLW  04
45AA:  MOVWF  x0B
45AC:  MOVLW  EA
45AE:  MOVWF  x0A
45B0:  CLRF   x0C
45B2:  MOVLW  24
45B4:  MOVWF  x0D
45B6:  CLRF   x0E
45B8:  MOVLW  01
45BA:  MOVWF  x0F
45BC:  MOVLB  0
45BE:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
45C2:  MOVLW  04
45C4:  MOVWF  FEA
45C6:  MOVLW  EA
45C8:  MOVWF  FE9
45CA:  MOVFF  FF2,50A
45CE:  BCF    FF2.7
45D0:  MOVLW  00
45D2:  CALL   0B0C
45D6:  TBLRD*-
45D8:  TBLRD*+
45DA:  MOVF   FF5,W
45DC:  MOVWF  FEE
45DE:  IORLW  00
45E0:  BNZ   45D8
45E2:  MOVLB  5
45E4:  BTFSC  x0A.7
45E6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
45E8:  MOVLW  04
45EA:  MOVWF  x0B
45EC:  MOVLW  EA
45EE:  MOVWF  x0A
45F0:  CLRF   x0C
45F2:  MOVLW  2E
45F4:  MOVWF  x0D
45F6:  CLRF   x0E
45F8:  MOVLW  01
45FA:  MOVWF  x0F
45FC:  MOVLB  0
45FE:  CALL   16E2
....................          visual=0; 
4602:  MOVLB  4
4604:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4606:  BSF    F92.3
4608:  BTFSS  F80.3
460A:  BRA    462C
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
460C:  MOVLW  1E
460E:  MOVLB  5
4610:  MOVWF  x0B
4612:  MOVLB  0
4614:  CALL   104A
4618:  MOVLW  01
461A:  MOVLB  4
461C:  MOVWF  xA2
461E:  MOVLB  5
4620:  CLRF   x0B
4622:  MOVLB  0
4624:  CALL   10B4
4628:  MOVLB  4
462A:  BSF    x95.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
462C:  BSF    F92.2
462E:  BTFSS  F80.2
4630:  BRA    47EE
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
4632:  CLRF   xCB
4634:  CLRF   xCC
4636:  MOVLW  05
4638:  MOVWF  xCD
463A:  MOVLW  02
463C:  MOVWF  xCE
463E:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
4640:  CLRF   xD3
4642:  CLRF   xD4
4644:  CLRF   xD5
4646:  MOVLW  01
4648:  MOVWF  xD6
464A:  MOVLW  79
464C:  MOVWF  xA9
464E:  MOVLW  14
4650:  MOVWF  xA2
4652:  MOVLW  04
4654:  MOVLB  5
4656:  MOVWF  x0A
4658:  MOVLW  AF
465A:  MOVWF  x0B
465C:  MOVLB  0
465E:  CALL   104A
4662:  MOVLB  5
4664:  DECFSZ x0A,F
4666:  BRA    4658
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
4668:  MOVLW  14
466A:  MOVLB  4
466C:  MOVWF  xA2
466E:  MOVLW  0F
4670:  MOVLB  5
4672:  MOVWF  x20
4674:  MOVLW  12
4676:  MOVWF  x21
4678:  MOVLW  1E
467A:  MOVWF  x22
467C:  MOVLW  35
467E:  MOVWF  x23
4680:  CLRF   x24
4682:  MOVLW  01
4684:  MOVWF  x25
4686:  MOVLB  0
4688:  CALL   1620
468C:  MOVLB  4
468E:  CLRF   xAE
4690:  MOVLW  C0
4692:  IORWF  FF2,F
4694:  MOVLB  5
4696:  CLRF   x0B
4698:  MOVLB  0
469A:  CALL   10B4
....................          strcpy(Menus.Letra,"Calentando"); 
469E:  MOVLW  04
46A0:  MOVWF  FEA
46A2:  MOVLW  EA
46A4:  MOVWF  FE9
46A6:  MOVFF  FF2,50A
46AA:  BCF    FF2.7
46AC:  MOVLW  00
46AE:  CALL   09B2
46B2:  TBLRD*-
46B4:  TBLRD*+
46B6:  MOVF   FF5,W
46B8:  MOVWF  FEE
46BA:  IORLW  00
46BC:  BNZ   46B4
46BE:  MOVLB  5
46C0:  BTFSC  x0A.7
46C2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
46C4:  MOVLW  04
46C6:  MOVWF  x0B
46C8:  MOVLW  EA
46CA:  MOVWF  x0A
46CC:  CLRF   x0C
46CE:  MOVLW  37
46D0:  MOVWF  x0D
46D2:  MOVLW  02
46D4:  MOVWF  x0E
46D6:  MOVLW  01
46D8:  MOVWF  x0F
46DA:  MOVLB  0
46DC:  CALL   16E2
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
46E0:  MOVLW  0F
46E2:  MOVLB  5
46E4:  MOVWF  x20
46E6:  MOVLW  12
46E8:  MOVWF  x21
46EA:  MOVLW  1E
46EC:  MOVWF  x22
46EE:  MOVLW  35
46F0:  MOVWF  x23
46F2:  CLRF   x24
46F4:  MOVLW  01
46F6:  MOVWF  x25
46F8:  MOVLB  0
46FA:  CALL   1620
....................          glcd_imagen(5); 
46FE:  MOVLW  05
4700:  MOVLB  5
4702:  MOVWF  x0A
4704:  MOVLB  0
4706:  CALL   2136
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
470A:  MOVLW  04
470C:  MOVWF  FEA
470E:  MOVLW  EA
4710:  MOVWF  FE9
4712:  MOVFF  FF2,50A
4716:  BCF    FF2.7
4718:  MOVLW  00
471A:  CALL   09D8
471E:  TBLRD*-
4720:  TBLRD*+
4722:  MOVF   FF5,W
4724:  MOVWF  FEE
4726:  IORLW  00
4728:  BNZ   4720
472A:  MOVLB  5
472C:  BTFSC  x0A.7
472E:  BSF    FF2.7
4730:  MOVLW  04
4732:  MOVWF  x0B
4734:  MOVLW  EA
4736:  MOVWF  x0A
4738:  CLRF   x0C
473A:  CLRF   x0D
473C:  MOVLW  02
473E:  MOVWF  x0E
4740:  MOVLW  01
4742:  MOVWF  x0F
4744:  MOVLB  0
4746:  CALL   16E2
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
474A:  MOVLW  04
474C:  MOVWF  FEA
474E:  MOVLW  EA
4750:  MOVWF  FE9
4752:  MOVFF  FF2,50A
4756:  BCF    FF2.7
4758:  MOVLW  00
475A:  CALL   09FA
475E:  TBLRD*-
4760:  TBLRD*+
4762:  MOVF   FF5,W
4764:  MOVWF  FEE
4766:  IORLW  00
4768:  BNZ   4760
476A:  MOVLB  5
476C:  BTFSC  x0A.7
476E:  BSF    FF2.7
4770:  MOVLW  04
4772:  MOVWF  x0B
4774:  MOVLW  EA
4776:  MOVWF  x0A
4778:  CLRF   x0C
477A:  MOVLW  08
477C:  MOVWF  x0D
477E:  MOVLW  02
4780:  MOVWF  x0E
4782:  MOVLW  01
4784:  MOVWF  x0F
4786:  MOVLB  0
4788:  CALL   16E2
....................          glcd_circle(95,40,2,NO,ON); 
478C:  MOVLW  5F
478E:  MOVLB  5
4790:  MOVWF  x0A
4792:  MOVLW  28
4794:  MOVWF  x0B
4796:  MOVLW  02
4798:  MOVWF  x0C
479A:  CLRF   x0D
479C:  MOVLW  01
479E:  MOVWF  x0E
47A0:  MOVLB  0
47A2:  CALL   2232
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
47A6:  MOVLW  04
47A8:  MOVWF  FEA
47AA:  MOVLW  EA
47AC:  MOVWF  FE9
47AE:  MOVFF  FF2,50A
47B2:  BCF    FF2.7
47B4:  MOVLW  00
47B6:  CALL   0A1C
47BA:  TBLRD*-
47BC:  TBLRD*+
47BE:  MOVF   FF5,W
47C0:  MOVWF  FEE
47C2:  IORLW  00
47C4:  BNZ   47BC
47C6:  MOVLB  5
47C8:  BTFSC  x0A.7
47CA:  BSF    FF2.7
47CC:  MOVLW  04
47CE:  MOVWF  x0B
47D0:  MOVLW  EA
47D2:  MOVWF  x0A
47D4:  MOVLW  66
47D6:  MOVWF  x0C
47D8:  MOVLW  28
47DA:  MOVWF  x0D
47DC:  MOVLW  02
47DE:  MOVWF  x0E
47E0:  MOVWF  x0F
47E2:  MOVLB  0
47E4:  CALL   16E2
....................          MuestraTiemposProgramados(); 
47E8:  CALL   2632
47EC:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
47EE:  MOVF   xA2,W
47F0:  SUBLW  08
47F2:  BTFSS  FD8.2
47F4:  BRA    4BD2
....................          
....................          if(visual==1) 
47F6:  BTFSS  x95.4
47F8:  BRA    4B1E
....................          { 
....................             if(Opcion>5) 
47FA:  MOVF   xAC,W
47FC:  SUBLW  05
47FE:  BC    4804
....................             {Opcion=1;} 
4800:  MOVLW  01
4802:  MOVWF  xAC
....................             if(Opcion<1) 
4804:  MOVF   xAC,F
4806:  BNZ   480C
....................             {Opcion=5;} 
4808:  MOVLW  05
480A:  MOVWF  xAC
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
480C:  MOVLW  04
480E:  MOVWF  FEA
4810:  MOVLW  EA
4812:  MOVWF  FE9
4814:  MOVFF  FF2,50A
4818:  BCF    FF2.7
481A:  MOVLW  00
481C:  MOVLB  0
481E:  CALL   0B36
4822:  TBLRD*-
4824:  TBLRD*+
4826:  MOVF   FF5,W
4828:  MOVWF  FEE
482A:  IORLW  00
482C:  BNZ   4824
482E:  MOVLB  5
4830:  BTFSC  x0A.7
4832:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4834:  MOVLW  04
4836:  MOVWF  x0B
4838:  MOVLW  EA
483A:  MOVWF  x0A
483C:  CLRF   x0C
483E:  CLRF   x0D
4840:  MOVLW  01
4842:  MOVWF  x0E
4844:  MOVWF  x0F
4846:  MOVLB  0
4848:  CALL   16E2
....................        
....................             if(Opcion==1)    
484C:  MOVLB  4
484E:  DECFSZ xAC,W
4850:  BRA    4898
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
4852:  MOVLW  04
4854:  MOVWF  FEA
4856:  MOVLW  EA
4858:  MOVWF  FE9
485A:  MOVFF  FF2,50A
485E:  BCF    FF2.7
4860:  MOVLW  00
4862:  MOVLB  0
4864:  CALL   0B66
4868:  TBLRD*-
486A:  TBLRD*+
486C:  MOVF   FF5,W
486E:  MOVWF  FEE
4870:  IORLW  00
4872:  BNZ   486A
4874:  MOVLB  5
4876:  BTFSC  x0A.7
4878:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
487A:  MOVLW  04
487C:  MOVWF  x0B
487E:  MOVLW  EA
4880:  MOVWF  x0A
4882:  CLRF   x0C
4884:  MOVLW  0A
4886:  MOVWF  x0D
4888:  MOVLW  01
488A:  MOVWF  x0E
488C:  MOVWF  x0F
488E:  MOVLB  0
4890:  CALL   16E2
....................             else 
4894:  BRA    48DA
4896:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
4898:  MOVLW  04
489A:  MOVWF  FEA
489C:  MOVLW  EA
489E:  MOVWF  FE9
48A0:  MOVFF  FF2,50A
48A4:  BCF    FF2.7
48A6:  MOVLW  00
48A8:  MOVLB  0
48AA:  CALL   0B66
48AE:  TBLRD*-
48B0:  TBLRD*+
48B2:  MOVF   FF5,W
48B4:  MOVWF  FEE
48B6:  IORLW  00
48B8:  BNZ   48B0
48BA:  MOVLB  5
48BC:  BTFSC  x0A.7
48BE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
48C0:  MOVLW  04
48C2:  MOVWF  x0B
48C4:  MOVLW  EA
48C6:  MOVWF  x0A
48C8:  CLRF   x0C
48CA:  MOVLW  0A
48CC:  MOVWF  x0D
48CE:  CLRF   x0E
48D0:  MOVLW  01
48D2:  MOVWF  x0F
48D4:  MOVLB  0
48D6:  CALL   16E2
....................              
....................             if(Opcion==2)    
48DA:  MOVLB  4
48DC:  MOVF   xAC,W
48DE:  SUBLW  02
48E0:  BNZ   4928
....................                {strcpy(Menus.Letra,"T. Secado"); 
48E2:  MOVLW  04
48E4:  MOVWF  FEA
48E6:  MOVLW  EA
48E8:  MOVWF  FE9
48EA:  MOVFF  FF2,50A
48EE:  BCF    FF2.7
48F0:  MOVLW  00
48F2:  MOVLB  0
48F4:  CALL   0B92
48F8:  TBLRD*-
48FA:  TBLRD*+
48FC:  MOVF   FF5,W
48FE:  MOVWF  FEE
4900:  IORLW  00
4902:  BNZ   48FA
4904:  MOVLB  5
4906:  BTFSC  x0A.7
4908:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
490A:  MOVLW  04
490C:  MOVWF  x0B
490E:  MOVLW  EA
4910:  MOVWF  x0A
4912:  CLRF   x0C
4914:  MOVLW  14
4916:  MOVWF  x0D
4918:  MOVLW  01
491A:  MOVWF  x0E
491C:  MOVWF  x0F
491E:  MOVLB  0
4920:  CALL   16E2
....................             else 
4924:  BRA    496A
4926:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
4928:  MOVLW  04
492A:  MOVWF  FEA
492C:  MOVLW  EA
492E:  MOVWF  FE9
4930:  MOVFF  FF2,50A
4934:  BCF    FF2.7
4936:  MOVLW  00
4938:  MOVLB  0
493A:  CALL   0B92
493E:  TBLRD*-
4940:  TBLRD*+
4942:  MOVF   FF5,W
4944:  MOVWF  FEE
4946:  IORLW  00
4948:  BNZ   4940
494A:  MOVLB  5
494C:  BTFSC  x0A.7
494E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
4950:  MOVLW  04
4952:  MOVWF  x0B
4954:  MOVLW  EA
4956:  MOVWF  x0A
4958:  CLRF   x0C
495A:  MOVLW  14
495C:  MOVWF  x0D
495E:  CLRF   x0E
4960:  MOVLW  01
4962:  MOVWF  x0F
4964:  MOVLB  0
4966:  CALL   16E2
....................                 
....................              if(Opcion==3)    
496A:  MOVLB  4
496C:  MOVF   xAC,W
496E:  SUBLW  03
4970:  BNZ   49B8
....................                {strcpy(Menus.Letra,"Temperatura"); 
4972:  MOVLW  04
4974:  MOVWF  FEA
4976:  MOVLW  EA
4978:  MOVWF  FE9
497A:  MOVFF  FF2,50A
497E:  BCF    FF2.7
4980:  MOVLW  00
4982:  MOVLB  0
4984:  CALL   0BB6
4988:  TBLRD*-
498A:  TBLRD*+
498C:  MOVF   FF5,W
498E:  MOVWF  FEE
4990:  IORLW  00
4992:  BNZ   498A
4994:  MOVLB  5
4996:  BTFSC  x0A.7
4998:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
499A:  MOVLW  04
499C:  MOVWF  x0B
499E:  MOVLW  EA
49A0:  MOVWF  x0A
49A2:  CLRF   x0C
49A4:  MOVLW  1E
49A6:  MOVWF  x0D
49A8:  MOVLW  01
49AA:  MOVWF  x0E
49AC:  MOVWF  x0F
49AE:  MOVLB  0
49B0:  CALL   16E2
....................             else 
49B4:  BRA    49FA
49B6:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
49B8:  MOVLW  04
49BA:  MOVWF  FEA
49BC:  MOVLW  EA
49BE:  MOVWF  FE9
49C0:  MOVFF  FF2,50A
49C4:  BCF    FF2.7
49C6:  MOVLW  00
49C8:  MOVLB  0
49CA:  CALL   0BB6
49CE:  TBLRD*-
49D0:  TBLRD*+
49D2:  MOVF   FF5,W
49D4:  MOVWF  FEE
49D6:  IORLW  00
49D8:  BNZ   49D0
49DA:  MOVLB  5
49DC:  BTFSC  x0A.7
49DE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
49E0:  MOVLW  04
49E2:  MOVWF  x0B
49E4:  MOVLW  EA
49E6:  MOVWF  x0A
49E8:  CLRF   x0C
49EA:  MOVLW  1E
49EC:  MOVWF  x0D
49EE:  CLRF   x0E
49F0:  MOVLW  01
49F2:  MOVWF  x0F
49F4:  MOVLB  0
49F6:  CALL   16E2
....................                 
....................             if(Opcion==4)    
49FA:  MOVLB  4
49FC:  MOVF   xAC,W
49FE:  SUBLW  04
4A00:  BNZ   4A48
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4A02:  MOVLW  04
4A04:  MOVWF  FEA
4A06:  MOVLW  EA
4A08:  MOVWF  FE9
4A0A:  MOVFF  FF2,50A
4A0E:  BCF    FF2.7
4A10:  MOVLW  00
4A12:  MOVLB  0
4A14:  CALL   0BDC
4A18:  TBLRD*-
4A1A:  TBLRD*+
4A1C:  MOVF   FF5,W
4A1E:  MOVWF  FEE
4A20:  IORLW  00
4A22:  BNZ   4A1A
4A24:  MOVLB  5
4A26:  BTFSC  x0A.7
4A28:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
4A2A:  MOVLW  04
4A2C:  MOVWF  x0B
4A2E:  MOVLW  EA
4A30:  MOVWF  x0A
4A32:  CLRF   x0C
4A34:  MOVLW  28
4A36:  MOVWF  x0D
4A38:  MOVLW  01
4A3A:  MOVWF  x0E
4A3C:  MOVWF  x0F
4A3E:  MOVLB  0
4A40:  CALL   16E2
....................             else 
4A44:  BRA    4A8A
4A46:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4A48:  MOVLW  04
4A4A:  MOVWF  FEA
4A4C:  MOVLW  EA
4A4E:  MOVWF  FE9
4A50:  MOVFF  FF2,50A
4A54:  BCF    FF2.7
4A56:  MOVLW  00
4A58:  MOVLB  0
4A5A:  CALL   0BDC
4A5E:  TBLRD*-
4A60:  TBLRD*+
4A62:  MOVF   FF5,W
4A64:  MOVWF  FEE
4A66:  IORLW  00
4A68:  BNZ   4A60
4A6A:  MOVLB  5
4A6C:  BTFSC  x0A.7
4A6E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
4A70:  MOVLW  04
4A72:  MOVWF  x0B
4A74:  MOVLW  EA
4A76:  MOVWF  x0A
4A78:  CLRF   x0C
4A7A:  MOVLW  28
4A7C:  MOVWF  x0D
4A7E:  CLRF   x0E
4A80:  MOVLW  01
4A82:  MOVWF  x0F
4A84:  MOVLB  0
4A86:  CALL   16E2
....................                 
....................             if(Opcion==5)    
4A8A:  MOVLB  4
4A8C:  MOVF   xAC,W
4A8E:  SUBLW  05
4A90:  BNZ   4AD8
....................                {strcpy(Menus.Letra,"Continuar"); 
4A92:  MOVLW  04
4A94:  MOVWF  FEA
4A96:  MOVLW  EA
4A98:  MOVWF  FE9
4A9A:  MOVFF  FF2,50A
4A9E:  BCF    FF2.7
4AA0:  MOVLW  00
4AA2:  MOVLB  0
4AA4:  CALL   0C08
4AA8:  TBLRD*-
4AAA:  TBLRD*+
4AAC:  MOVF   FF5,W
4AAE:  MOVWF  FEE
4AB0:  IORLW  00
4AB2:  BNZ   4AAA
4AB4:  MOVLB  5
4AB6:  BTFSC  x0A.7
4AB8:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
4ABA:  MOVLW  04
4ABC:  MOVWF  x0B
4ABE:  MOVLW  EA
4AC0:  MOVWF  x0A
4AC2:  CLRF   x0C
4AC4:  MOVLW  32
4AC6:  MOVWF  x0D
4AC8:  MOVLW  01
4ACA:  MOVWF  x0E
4ACC:  MOVWF  x0F
4ACE:  MOVLB  0
4AD0:  CALL   16E2
....................             else 
4AD4:  BRA    4B1A
4AD6:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
4AD8:  MOVLW  04
4ADA:  MOVWF  FEA
4ADC:  MOVLW  EA
4ADE:  MOVWF  FE9
4AE0:  MOVFF  FF2,50A
4AE4:  BCF    FF2.7
4AE6:  MOVLW  00
4AE8:  MOVLB  0
4AEA:  CALL   0C08
4AEE:  TBLRD*-
4AF0:  TBLRD*+
4AF2:  MOVF   FF5,W
4AF4:  MOVWF  FEE
4AF6:  IORLW  00
4AF8:  BNZ   4AF0
4AFA:  MOVLB  5
4AFC:  BTFSC  x0A.7
4AFE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
4B00:  MOVLW  04
4B02:  MOVWF  x0B
4B04:  MOVLW  EA
4B06:  MOVWF  x0A
4B08:  CLRF   x0C
4B0A:  MOVLW  32
4B0C:  MOVWF  x0D
4B0E:  CLRF   x0E
4B10:  MOVLW  01
4B12:  MOVWF  x0F
4B14:  MOVLB  0
4B16:  CALL   16E2
....................                           
....................             visual=0; 
4B1A:  MOVLB  4
4B1C:  BCF    x95.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
4B1E:  BSF    F92.0
4B20:  BTFSS  F80.0
4B22:  BRA    4B3E
....................          {  if(Flanco == 0)  
4B24:  BTFSC  x95.0
4B26:  BRA    4B3C
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4B28:  BSF    x95.0
4B2A:  MOVLW  1E
4B2C:  MOVLB  5
4B2E:  MOVWF  x0B
4B30:  MOVLB  0
4B32:  CALL   104A
4B36:  MOVLB  4
4B38:  DECF   xAC,F
4B3A:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4B3C:  BRA    4B40
....................                {Flanco = 0;} 
4B3E:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4B40:  BSF    F92.1
4B42:  BTFSS  F80.1
4B44:  BRA    4B60
....................          {  if(Flanco2 == 0)  
4B46:  BTFSC  x95.2
4B48:  BRA    4B5E
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4B4A:  BSF    x95.2
4B4C:  MOVLW  1E
4B4E:  MOVLB  5
4B50:  MOVWF  x0B
4B52:  MOVLB  0
4B54:  CALL   104A
4B58:  MOVLB  4
4B5A:  INCF   xAC,F
4B5C:  BSF    x95.4
....................                }      
....................          } 
....................             else 
4B5E:  BRA    4B62
....................                {Flanco2 = 0;}   
4B60:  BCF    x95.2
....................                 
....................          if(RIGHT)//Si oprime SET 
4B62:  BSF    F92.2
4B64:  BTFSS  F80.2
4B66:  BRA    4BA0
....................          {  if(Flanco1 == 0)  
4B68:  BTFSC  x95.1
4B6A:  BRA    4B9E
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4B6C:  BSF    x95.1
4B6E:  MOVLW  02
4B70:  MOVLB  5
4B72:  MOVWF  x0A
4B74:  MOVLW  96
4B76:  MOVWF  x0B
4B78:  MOVLB  0
4B7A:  CALL   104A
4B7E:  MOVLB  5
4B80:  DECFSZ x0A,F
4B82:  BRA    4B74
4B84:  MOVLW  0A
4B86:  MOVLB  4
4B88:  ADDWF  xAC,W
4B8A:  MOVWF  xA2
4B8C:  MOVLW  01
4B8E:  MOVWF  xAC
4B90:  MOVLB  5
4B92:  CLRF   x0B
4B94:  MOVLB  0
4B96:  CALL   10B4
4B9A:  MOVLB  4
4B9C:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4B9E:  BRA    4BA2
....................                {Flanco1 = 0;}   
4BA0:  BCF    x95.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
4BA2:  BSF    F92.3
4BA4:  BTFSS  F80.3
4BA6:  BRA    4BD2
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
4BA8:  MOVLW  04
4BAA:  MOVLB  5
4BAC:  MOVWF  x0A
4BAE:  MOVLW  AF
4BB0:  MOVWF  x0B
4BB2:  MOVLB  0
4BB4:  CALL   104A
4BB8:  MOVLB  5
4BBA:  DECFSZ x0A,F
4BBC:  BRA    4BAE
4BBE:  MOVLW  01
4BC0:  MOVLB  4
4BC2:  MOVWF  xA2
4BC4:  MOVLB  5
4BC6:  CLRF   x0B
4BC8:  MOVLB  0
4BCA:  CALL   10B4
4BCE:  MOVLB  4
4BD0:  BSF    x95.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
4BD2:  MOVF   xA2,W
4BD4:  SUBLW  09
4BD6:  BTFSS  FD8.2
4BD8:  BRA    508E
....................          
....................       strcpy(Menus.Letra,"Clave"); 
4BDA:  MOVLW  04
4BDC:  MOVWF  FEA
4BDE:  MOVLW  EA
4BE0:  MOVWF  FE9
4BE2:  MOVFF  FF2,50A
4BE6:  BCF    FF2.7
4BE8:  MOVLW  00
4BEA:  MOVLB  0
4BEC:  CALL   0756
4BF0:  TBLRD*-
4BF2:  TBLRD*+
4BF4:  MOVF   FF5,W
4BF6:  MOVWF  FEE
4BF8:  IORLW  00
4BFA:  BNZ   4BF2
4BFC:  MOVLB  5
4BFE:  BTFSC  x0A.7
4C00:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4C02:  MOVLW  04
4C04:  MOVWF  x0B
4C06:  MOVLW  EA
4C08:  MOVWF  x0A
4C0A:  MOVLW  1E
4C0C:  MOVWF  x0C
4C0E:  CLRF   x0D
4C10:  MOVLW  01
4C12:  MOVWF  x0E
4C14:  MOVLW  02
4C16:  MOVWF  x0F
4C18:  MOVLB  0
4C1A:  CALL   16E2
....................        
....................       if(unidad==1) 
4C1E:  MOVLB  4
4C20:  DECFSZ xA3,W
4C22:  BRA    4C82
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4C24:  MOVFF  4D7,50C
4C28:  MOVLW  14
4C2A:  MOVLB  5
4C2C:  MOVWF  x0D
4C2E:  MOVLW  1E
4C30:  MOVWF  x0E
4C32:  MOVLW  01
4C34:  MOVWF  x0F
4C36:  MOVLB  0
4C38:  CALL   1908
....................          displayContrasena(Contrasena[1],40,30,0); 
4C3C:  MOVFF  4D8,50C
4C40:  MOVLW  28
4C42:  MOVLB  5
4C44:  MOVWF  x0D
4C46:  MOVLW  1E
4C48:  MOVWF  x0E
4C4A:  CLRF   x0F
4C4C:  MOVLB  0
4C4E:  CALL   1908
....................          displayContrasena(Contrasena[2],60,30,0); 
4C52:  MOVFF  4D9,50C
4C56:  MOVLW  3C
4C58:  MOVLB  5
4C5A:  MOVWF  x0D
4C5C:  MOVLW  1E
4C5E:  MOVWF  x0E
4C60:  CLRF   x0F
4C62:  MOVLB  0
4C64:  CALL   1908
....................          displayContrasena(Contrasena[3],80,30,0); 
4C68:  MOVFF  4DA,50C
4C6C:  MOVLW  50
4C6E:  MOVLB  5
4C70:  MOVWF  x0D
4C72:  MOVLW  1E
4C74:  MOVWF  x0E
4C76:  CLRF   x0F
4C78:  MOVLB  0
4C7A:  CALL   1908
....................       } 
....................       else 
4C7E:  BRA    4DAA
4C80:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4C82:  MOVF   xA3,W
4C84:  SUBLW  02
4C86:  BNZ   4CE6
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
4C88:  MOVFF  4D7,50C
4C8C:  MOVLW  14
4C8E:  MOVLB  5
4C90:  MOVWF  x0D
4C92:  MOVLW  1E
4C94:  MOVWF  x0E
4C96:  CLRF   x0F
4C98:  MOVLB  0
4C9A:  CALL   1908
....................             displayContrasena(Contrasena[1],40,30,1); 
4C9E:  MOVFF  4D8,50C
4CA2:  MOVLW  28
4CA4:  MOVLB  5
4CA6:  MOVWF  x0D
4CA8:  MOVLW  1E
4CAA:  MOVWF  x0E
4CAC:  MOVLW  01
4CAE:  MOVWF  x0F
4CB0:  MOVLB  0
4CB2:  CALL   1908
....................             displayContrasena(Contrasena[2],60,30,0); 
4CB6:  MOVFF  4D9,50C
4CBA:  MOVLW  3C
4CBC:  MOVLB  5
4CBE:  MOVWF  x0D
4CC0:  MOVLW  1E
4CC2:  MOVWF  x0E
4CC4:  CLRF   x0F
4CC6:  MOVLB  0
4CC8:  CALL   1908
....................             displayContrasena(Contrasena[3],80,30,0); 
4CCC:  MOVFF  4DA,50C
4CD0:  MOVLW  50
4CD2:  MOVLB  5
4CD4:  MOVWF  x0D
4CD6:  MOVLW  1E
4CD8:  MOVWF  x0E
4CDA:  CLRF   x0F
4CDC:  MOVLB  0
4CDE:  CALL   1908
....................          } 
....................          else 
4CE2:  BRA    4DAA
4CE4:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4CE6:  MOVF   xA3,W
4CE8:  SUBLW  03
4CEA:  BNZ   4D4A
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4CEC:  MOVFF  4D7,50C
4CF0:  MOVLW  14
4CF2:  MOVLB  5
4CF4:  MOVWF  x0D
4CF6:  MOVLW  1E
4CF8:  MOVWF  x0E
4CFA:  CLRF   x0F
4CFC:  MOVLB  0
4CFE:  CALL   1908
....................                displayContrasena(Contrasena[1],40,30,0); 
4D02:  MOVFF  4D8,50C
4D06:  MOVLW  28
4D08:  MOVLB  5
4D0A:  MOVWF  x0D
4D0C:  MOVLW  1E
4D0E:  MOVWF  x0E
4D10:  CLRF   x0F
4D12:  MOVLB  0
4D14:  CALL   1908
....................                displayContrasena(Contrasena[2],60,30,1); 
4D18:  MOVFF  4D9,50C
4D1C:  MOVLW  3C
4D1E:  MOVLB  5
4D20:  MOVWF  x0D
4D22:  MOVLW  1E
4D24:  MOVWF  x0E
4D26:  MOVLW  01
4D28:  MOVWF  x0F
4D2A:  MOVLB  0
4D2C:  CALL   1908
....................                displayContrasena(Contrasena[3],80,30,0); 
4D30:  MOVFF  4DA,50C
4D34:  MOVLW  50
4D36:  MOVLB  5
4D38:  MOVWF  x0D
4D3A:  MOVLW  1E
4D3C:  MOVWF  x0E
4D3E:  CLRF   x0F
4D40:  MOVLB  0
4D42:  CALL   1908
....................             } 
....................             else 
4D46:  BRA    4DAA
4D48:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4D4A:  MOVF   xA3,W
4D4C:  SUBLW  04
4D4E:  BNZ   4DAC
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4D50:  MOVFF  4D7,50C
4D54:  MOVLW  14
4D56:  MOVLB  5
4D58:  MOVWF  x0D
4D5A:  MOVLW  1E
4D5C:  MOVWF  x0E
4D5E:  CLRF   x0F
4D60:  MOVLB  0
4D62:  CALL   1908
....................                   displayContrasena(Contrasena[1],40,30,0); 
4D66:  MOVFF  4D8,50C
4D6A:  MOVLW  28
4D6C:  MOVLB  5
4D6E:  MOVWF  x0D
4D70:  MOVLW  1E
4D72:  MOVWF  x0E
4D74:  CLRF   x0F
4D76:  MOVLB  0
4D78:  CALL   1908
....................                   displayContrasena(Contrasena[2],60,30,0); 
4D7C:  MOVFF  4D9,50C
4D80:  MOVLW  3C
4D82:  MOVLB  5
4D84:  MOVWF  x0D
4D86:  MOVLW  1E
4D88:  MOVWF  x0E
4D8A:  CLRF   x0F
4D8C:  MOVLB  0
4D8E:  CALL   1908
....................                   displayContrasena(Contrasena[3],80,30,1); 
4D92:  MOVFF  4DA,50C
4D96:  MOVLW  50
4D98:  MOVLB  5
4D9A:  MOVWF  x0D
4D9C:  MOVLW  1E
4D9E:  MOVWF  x0E
4DA0:  MOVLW  01
4DA2:  MOVWF  x0F
4DA4:  MOVLB  0
4DA6:  CALL   1908
4DAA:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4DAC:  BSF    F92.0
4DAE:  BTFSS  F80.0
4DB0:  BRA    4E1A
....................       { 
....................          if(Flanco == 0) 
4DB2:  BTFSC  x95.0
4DB4:  BRA    4E18
....................          { 
....................             Flanco = 1;delay_ms(30); 
4DB6:  BSF    x95.0
4DB8:  MOVLW  1E
4DBA:  MOVLB  5
4DBC:  MOVWF  x0B
4DBE:  MOVLB  0
4DC0:  CALL   104A
....................             for(i=1;i<=4;i++) 
4DC4:  MOVLW  01
4DC6:  MOVLB  4
4DC8:  MOVWF  xA4
4DCA:  MOVF   xA4,W
4DCC:  SUBLW  04
4DCE:  BNC   4E18
....................             { 
....................                if(unidad==i) 
4DD0:  MOVF   xA4,W
4DD2:  SUBWF  xA3,W
4DD4:  BNZ   4E14
....................                { 
....................                   Contrasena[i-1]++; 
4DD6:  MOVLW  01
4DD8:  SUBWF  xA4,W
4DDA:  CLRF   03
4DDC:  ADDLW  D7
4DDE:  MOVWF  FE9
4DE0:  MOVLW  04
4DE2:  ADDWFC 03,W
4DE4:  MOVWF  FEA
4DE6:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4DE8:  MOVLW  01
4DEA:  SUBWF  xA4,W
4DEC:  CLRF   03
4DEE:  ADDLW  D7
4DF0:  MOVWF  FE9
4DF2:  MOVLW  04
4DF4:  ADDWFC 03,W
4DF6:  MOVWF  FEA
4DF8:  BTFSC  FEF.7
4DFA:  BRA    4E14
4DFC:  MOVF   FEF,W
4DFE:  SUBLW  09
4E00:  BC    4E14
....................                   { 
....................                      Contrasena[i-1]=0; 
4E02:  MOVLW  01
4E04:  SUBWF  xA4,W
4E06:  CLRF   03
4E08:  ADDLW  D7
4E0A:  MOVWF  FE9
4E0C:  MOVLW  04
4E0E:  ADDWFC 03,W
4E10:  MOVWF  FEA
4E12:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4E14:  INCF   xA4,F
4E16:  BRA    4DCA
....................          } 
....................       } 
....................       else 
4E18:  BRA    4E1C
....................       { 
....................          Flanco = 0; 
4E1A:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4E1C:  BSF    F92.1
4E1E:  BTFSS  F80.1
4E20:  BRA    4E88
....................       { 
....................          if(Flanco2 == 0) 
4E22:  BTFSC  x95.2
4E24:  BRA    4E86
....................             {Flanco2 = 1;delay_ms(30); 
4E26:  BSF    x95.2
4E28:  MOVLW  1E
4E2A:  MOVLB  5
4E2C:  MOVWF  x0B
4E2E:  MOVLB  0
4E30:  CALL   104A
....................                for(i=1;i<=4;i++) 
4E34:  MOVLW  01
4E36:  MOVLB  4
4E38:  MOVWF  xA4
4E3A:  MOVF   xA4,W
4E3C:  SUBLW  04
4E3E:  BNC   4E86
....................                { 
....................                   if(unidad==i) 
4E40:  MOVF   xA4,W
4E42:  SUBWF  xA3,W
4E44:  BNZ   4E82
....................                   {Contrasena[i-1]--;  
4E46:  MOVLW  01
4E48:  SUBWF  xA4,W
4E4A:  CLRF   03
4E4C:  ADDLW  D7
4E4E:  MOVWF  FE9
4E50:  MOVLW  04
4E52:  ADDWFC 03,W
4E54:  MOVWF  FEA
4E56:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4E58:  MOVLW  01
4E5A:  SUBWF  xA4,W
4E5C:  CLRF   03
4E5E:  ADDLW  D7
4E60:  MOVWF  FE9
4E62:  MOVLW  04
4E64:  ADDWFC 03,W
4E66:  MOVWF  FEA
4E68:  BTFSC  FEF.7
4E6A:  BRA    4E6E
4E6C:  BRA    4E82
....................                         {Contrasena[i-1]=9;} 
4E6E:  MOVLW  01
4E70:  SUBWF  xA4,W
4E72:  CLRF   03
4E74:  ADDLW  D7
4E76:  MOVWF  FE9
4E78:  MOVLW  04
4E7A:  ADDWFC 03,W
4E7C:  MOVWF  FEA
4E7E:  MOVLW  09
4E80:  MOVWF  FEF
....................                   } 
....................                }       
4E82:  INCF   xA4,F
4E84:  BRA    4E3A
....................             }      
....................       } 
....................       else 
4E86:  BRA    4E8A
....................       { 
....................          Flanco2 = 0; 
4E88:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4E8A:  BSF    F92.2
4E8C:  BTFSS  F80.2
4E8E:  BRA    4EB2
....................       { 
....................          if(Flanco1 == 0) 
4E90:  BTFSC  x95.1
4E92:  BRA    4EB0
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4E94:  BSF    x95.1
4E96:  MOVLW  02
4E98:  MOVLB  5
4E9A:  MOVWF  x0A
4E9C:  MOVLW  96
4E9E:  MOVWF  x0B
4EA0:  MOVLB  0
4EA2:  CALL   104A
4EA6:  MOVLB  5
4EA8:  DECFSZ x0A,F
4EAA:  BRA    4E9C
4EAC:  MOVLB  4
4EAE:  INCF   xA3,F
....................       } 
....................       else 
4EB0:  BRA    4EB4
....................       { 
....................          Flanco1 = 0; 
4EB2:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4EB4:  BSF    F92.3
4EB6:  BTFSS  F80.3
4EB8:  BRA    4EE2
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4EBA:  MOVLW  04
4EBC:  MOVLB  5
4EBE:  MOVWF  x0A
4EC0:  MOVLW  AF
4EC2:  MOVWF  x0B
4EC4:  MOVLB  0
4EC6:  CALL   104A
4ECA:  MOVLB  5
4ECC:  DECFSZ x0A,F
4ECE:  BRA    4EC0
4ED0:  MOVLW  01
4ED2:  MOVLB  4
4ED4:  MOVWF  xA2
4ED6:  MOVLB  5
4ED8:  CLRF   x0B
4EDA:  MOVLB  0
4EDC:  CALL   10B4
4EE0:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4EE2:  MOVF   xA3,W
4EE4:  SUBLW  04
4EE6:  BTFSC  FD8.0
4EE8:  BRA    508E
....................       {glcd_fillScreen(OFF); 
4EEA:  MOVLB  5
4EEC:  CLRF   x0B
4EEE:  MOVLB  0
4EF0:  CALL   10B4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4EF4:  MOVLB  4
4EF6:  MOVF   xDB,W
4EF8:  SUBWF  xD7,W
4EFA:  BNZ   4FCC
4EFC:  MOVF   xDC,W
4EFE:  SUBWF  xD8,W
4F00:  BNZ   4FCC
4F02:  MOVF   xDD,W
4F04:  SUBWF  xD9,W
4F06:  BNZ   4FCC
4F08:  MOVF   xDE,W
4F0A:  SUBWF  xDA,W
4F0C:  BNZ   4FCC
....................          { 
....................             glcd_fillScreen(OFF); 
4F0E:  MOVLB  5
4F10:  CLRF   x0B
4F12:  MOVLB  0
4F14:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
4F18:  MOVLW  04
4F1A:  MOVWF  FEA
4F1C:  MOVLW  EA
4F1E:  MOVWF  FE9
4F20:  MOVFF  FF2,50A
4F24:  BCF    FF2.7
4F26:  MOVLW  00
4F28:  CALL   0756
4F2C:  TBLRD*-
4F2E:  TBLRD*+
4F30:  MOVF   FF5,W
4F32:  MOVWF  FEE
4F34:  IORLW  00
4F36:  BNZ   4F2E
4F38:  MOVLB  5
4F3A:  BTFSC  x0A.7
4F3C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4F3E:  MOVLW  04
4F40:  MOVWF  x0B
4F42:  MOVLW  EA
4F44:  MOVWF  x0A
4F46:  MOVLW  1E
4F48:  MOVWF  x0C
4F4A:  CLRF   x0D
4F4C:  CLRF   x0E
4F4E:  MOVLW  02
4F50:  MOVWF  x0F
4F52:  MOVLB  0
4F54:  CALL   16E2
....................             strcpy(Menus.Letra,"Correcta"); 
4F58:  MOVLW  04
4F5A:  MOVWF  FEA
4F5C:  MOVLW  EA
4F5E:  MOVWF  FE9
4F60:  MOVFF  FF2,50A
4F64:  BCF    FF2.7
4F66:  MOVLW  00
4F68:  CALL   0776
4F6C:  TBLRD*-
4F6E:  TBLRD*+
4F70:  MOVF   FF5,W
4F72:  MOVWF  FEE
4F74:  IORLW  00
4F76:  BNZ   4F6E
4F78:  MOVLB  5
4F7A:  BTFSC  x0A.7
4F7C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4F7E:  MOVLW  04
4F80:  MOVWF  x0B
4F82:  MOVLW  EA
4F84:  MOVWF  x0A
4F86:  MOVLW  0F
4F88:  MOVWF  x0C
4F8A:  MOVLW  1E
4F8C:  MOVWF  x0D
4F8E:  CLRF   x0E
4F90:  MOVLW  02
4F92:  MOVWF  x0F
4F94:  MOVLB  0
4F96:  CALL   16E2
....................             Menu=91;glcd_update();delay_ms(1000); 
4F9A:  MOVLW  5B
4F9C:  MOVLB  4
4F9E:  MOVWF  xA2
4FA0:  MOVLB  0
4FA2:  CALL   110E
4FA6:  MOVLW  04
4FA8:  MOVLB  5
4FAA:  MOVWF  x0A
4FAC:  MOVLW  FA
4FAE:  MOVWF  x0B
4FB0:  MOVLB  0
4FB2:  CALL   104A
4FB6:  MOVLB  5
4FB8:  DECFSZ x0A,F
4FBA:  BRA    4FAC
....................             glcd_fillScreen(OFF);unidad=1; 
4FBC:  CLRF   x0B
4FBE:  MOVLB  0
4FC0:  CALL   10B4
4FC4:  MOVLW  01
4FC6:  MOVLB  4
4FC8:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4FCA:  BRA    508E
....................          { 
....................             glcd_fillScreen(OFF); 
4FCC:  MOVLB  5
4FCE:  CLRF   x0B
4FD0:  MOVLB  0
4FD2:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
4FD6:  MOVLW  04
4FD8:  MOVWF  FEA
4FDA:  MOVLW  EA
4FDC:  MOVWF  FE9
4FDE:  MOVFF  FF2,50A
4FE2:  BCF    FF2.7
4FE4:  MOVLW  00
4FE6:  CALL   0756
4FEA:  TBLRD*-
4FEC:  TBLRD*+
4FEE:  MOVF   FF5,W
4FF0:  MOVWF  FEE
4FF2:  IORLW  00
4FF4:  BNZ   4FEC
4FF6:  MOVLB  5
4FF8:  BTFSC  x0A.7
4FFA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4FFC:  MOVLW  04
4FFE:  MOVWF  x0B
5000:  MOVLW  EA
5002:  MOVWF  x0A
5004:  MOVLW  1E
5006:  MOVWF  x0C
5008:  CLRF   x0D
500A:  CLRF   x0E
500C:  MOVLW  02
500E:  MOVWF  x0F
5010:  MOVLB  0
5012:  CALL   16E2
....................             strcpy(Menus.Letra,"Incorrecta"); 
5016:  MOVLW  04
5018:  MOVWF  FEA
501A:  MOVLW  EA
501C:  MOVWF  FE9
501E:  MOVFF  FF2,50A
5022:  BCF    FF2.7
5024:  MOVLW  00
5026:  CALL   079A
502A:  TBLRD*-
502C:  TBLRD*+
502E:  MOVF   FF5,W
5030:  MOVWF  FEE
5032:  IORLW  00
5034:  BNZ   502C
5036:  MOVLB  5
5038:  BTFSC  x0A.7
503A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
503C:  MOVLW  04
503E:  MOVWF  x0B
5040:  MOVLW  EA
5042:  MOVWF  x0A
5044:  CLRF   x0C
5046:  MOVLW  1E
5048:  MOVWF  x0D
504A:  CLRF   x0E
504C:  MOVLW  02
504E:  MOVWF  x0F
5050:  MOVLB  0
5052:  CALL   16E2
....................             Menu=1;glcd_update();delay_ms(1000); 
5056:  MOVLW  01
5058:  MOVLB  4
505A:  MOVWF  xA2
505C:  MOVLB  0
505E:  CALL   110E
5062:  MOVLW  04
5064:  MOVLB  5
5066:  MOVWF  x0A
5068:  MOVLW  FA
506A:  MOVWF  x0B
506C:  MOVLB  0
506E:  CALL   104A
5072:  MOVLB  5
5074:  DECFSZ x0A,F
5076:  BRA    5068
....................             glcd_fillScreen(OFF);unidad=1; 
5078:  CLRF   x0B
507A:  MOVLB  0
507C:  CALL   10B4
5080:  MOVLW  01
5082:  MOVLB  4
5084:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
5086:  CLRF   xD7
5088:  CLRF   xD8
508A:  CLRF   xD9
508C:  CLRF   xDA
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
508E:  MOVF   xA2,W
5090:  SUBLW  5B
5092:  BTFSS  FD8.2
5094:  BRA    546E
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
5096:  MOVLW  04
5098:  MOVWF  FEA
509A:  MOVLW  EA
509C:  MOVWF  FE9
509E:  MOVFF  FF2,50A
50A2:  BCF    FF2.7
50A4:  MOVLW  00
50A6:  MOVLB  0
50A8:  CALL   0C2C
50AC:  TBLRD*-
50AE:  TBLRD*+
50B0:  MOVF   FF5,W
50B2:  MOVWF  FEE
50B4:  IORLW  00
50B6:  BNZ   50AE
50B8:  MOVLB  5
50BA:  BTFSC  x0A.7
50BC:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
50BE:  MOVLW  04
50C0:  MOVWF  x0B
50C2:  MOVLW  EA
50C4:  MOVWF  x0A
50C6:  CLRF   x0C
50C8:  CLRF   x0D
50CA:  MOVLW  01
50CC:  MOVWF  x0E
50CE:  MOVLW  02
50D0:  MOVWF  x0F
50D2:  MOVLB  0
50D4:  CALL   16E2
....................        
....................       if(unidad==1) 
50D8:  MOVLB  4
50DA:  DECFSZ xA3,W
50DC:  BRA    513C
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
50DE:  MOVFF  4DB,50C
50E2:  MOVLW  14
50E4:  MOVLB  5
50E6:  MOVWF  x0D
50E8:  MOVLW  1E
50EA:  MOVWF  x0E
50EC:  MOVLW  01
50EE:  MOVWF  x0F
50F0:  MOVLB  0
50F2:  CALL   1908
....................          displayContrasena(Password[1],40,30,0); 
50F6:  MOVFF  4DC,50C
50FA:  MOVLW  28
50FC:  MOVLB  5
50FE:  MOVWF  x0D
5100:  MOVLW  1E
5102:  MOVWF  x0E
5104:  CLRF   x0F
5106:  MOVLB  0
5108:  CALL   1908
....................          displayContrasena(Password[2],60,30,0); 
510C:  MOVFF  4DD,50C
5110:  MOVLW  3C
5112:  MOVLB  5
5114:  MOVWF  x0D
5116:  MOVLW  1E
5118:  MOVWF  x0E
511A:  CLRF   x0F
511C:  MOVLB  0
511E:  CALL   1908
....................          displayContrasena(Password[3],80,30,0); 
5122:  MOVFF  4DE,50C
5126:  MOVLW  50
5128:  MOVLB  5
512A:  MOVWF  x0D
512C:  MOVLW  1E
512E:  MOVWF  x0E
5130:  CLRF   x0F
5132:  MOVLB  0
5134:  CALL   1908
....................       } 
....................       else 
5138:  BRA    5264
513A:  MOVLB  4
....................       { 
....................          if(unidad==2) 
513C:  MOVF   xA3,W
513E:  SUBLW  02
5140:  BNZ   51A0
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
5142:  MOVFF  4DB,50C
5146:  MOVLW  14
5148:  MOVLB  5
514A:  MOVWF  x0D
514C:  MOVLW  1E
514E:  MOVWF  x0E
5150:  CLRF   x0F
5152:  MOVLB  0
5154:  CALL   1908
....................             displayContrasena(Password[1],40,30,1); 
5158:  MOVFF  4DC,50C
515C:  MOVLW  28
515E:  MOVLB  5
5160:  MOVWF  x0D
5162:  MOVLW  1E
5164:  MOVWF  x0E
5166:  MOVLW  01
5168:  MOVWF  x0F
516A:  MOVLB  0
516C:  CALL   1908
....................             displayContrasena(Password[2],60,30,0); 
5170:  MOVFF  4DD,50C
5174:  MOVLW  3C
5176:  MOVLB  5
5178:  MOVWF  x0D
517A:  MOVLW  1E
517C:  MOVWF  x0E
517E:  CLRF   x0F
5180:  MOVLB  0
5182:  CALL   1908
....................             displayContrasena(Password[3],80,30,0); 
5186:  MOVFF  4DE,50C
518A:  MOVLW  50
518C:  MOVLB  5
518E:  MOVWF  x0D
5190:  MOVLW  1E
5192:  MOVWF  x0E
5194:  CLRF   x0F
5196:  MOVLB  0
5198:  CALL   1908
....................          } 
....................          else 
519C:  BRA    5264
519E:  MOVLB  4
....................          { 
....................             if(unidad==3) 
51A0:  MOVF   xA3,W
51A2:  SUBLW  03
51A4:  BNZ   5204
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
51A6:  MOVFF  4DB,50C
51AA:  MOVLW  14
51AC:  MOVLB  5
51AE:  MOVWF  x0D
51B0:  MOVLW  1E
51B2:  MOVWF  x0E
51B4:  CLRF   x0F
51B6:  MOVLB  0
51B8:  CALL   1908
....................                displayContrasena(Password[1],40,30,0); 
51BC:  MOVFF  4DC,50C
51C0:  MOVLW  28
51C2:  MOVLB  5
51C4:  MOVWF  x0D
51C6:  MOVLW  1E
51C8:  MOVWF  x0E
51CA:  CLRF   x0F
51CC:  MOVLB  0
51CE:  CALL   1908
....................                displayContrasena(Password[2],60,30,1); 
51D2:  MOVFF  4DD,50C
51D6:  MOVLW  3C
51D8:  MOVLB  5
51DA:  MOVWF  x0D
51DC:  MOVLW  1E
51DE:  MOVWF  x0E
51E0:  MOVLW  01
51E2:  MOVWF  x0F
51E4:  MOVLB  0
51E6:  CALL   1908
....................                displayContrasena(Password[3],80,30,0); 
51EA:  MOVFF  4DE,50C
51EE:  MOVLW  50
51F0:  MOVLB  5
51F2:  MOVWF  x0D
51F4:  MOVLW  1E
51F6:  MOVWF  x0E
51F8:  CLRF   x0F
51FA:  MOVLB  0
51FC:  CALL   1908
....................             } 
....................             else 
5200:  BRA    5264
5202:  MOVLB  4
....................             { 
....................                if(unidad==4) 
5204:  MOVF   xA3,W
5206:  SUBLW  04
5208:  BNZ   5266
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
520A:  MOVFF  4DB,50C
520E:  MOVLW  14
5210:  MOVLB  5
5212:  MOVWF  x0D
5214:  MOVLW  1E
5216:  MOVWF  x0E
5218:  CLRF   x0F
521A:  MOVLB  0
521C:  CALL   1908
....................                   displayContrasena(Password[1],40,30,0); 
5220:  MOVFF  4DC,50C
5224:  MOVLW  28
5226:  MOVLB  5
5228:  MOVWF  x0D
522A:  MOVLW  1E
522C:  MOVWF  x0E
522E:  CLRF   x0F
5230:  MOVLB  0
5232:  CALL   1908
....................                   displayContrasena(Password[2],60,30,0); 
5236:  MOVFF  4DD,50C
523A:  MOVLW  3C
523C:  MOVLB  5
523E:  MOVWF  x0D
5240:  MOVLW  1E
5242:  MOVWF  x0E
5244:  CLRF   x0F
5246:  MOVLB  0
5248:  CALL   1908
....................                   displayContrasena(Password[3],80,30,1); 
524C:  MOVFF  4DE,50C
5250:  MOVLW  50
5252:  MOVLB  5
5254:  MOVWF  x0D
5256:  MOVLW  1E
5258:  MOVWF  x0E
525A:  MOVLW  01
525C:  MOVWF  x0F
525E:  MOVLB  0
5260:  CALL   1908
5264:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
5266:  BSF    F92.0
5268:  BTFSS  F80.0
526A:  BRA    52D4
....................       { 
....................          if(Flanco == 0) 
526C:  BTFSC  x95.0
526E:  BRA    52D2
....................          { 
....................             Flanco = 1;delay_ms(30); 
5270:  BSF    x95.0
5272:  MOVLW  1E
5274:  MOVLB  5
5276:  MOVWF  x0B
5278:  MOVLB  0
527A:  CALL   104A
....................             for(i=1;i<=4;i++) 
527E:  MOVLW  01
5280:  MOVLB  4
5282:  MOVWF  xA4
5284:  MOVF   xA4,W
5286:  SUBLW  04
5288:  BNC   52D2
....................             { 
....................                if(unidad==i) 
528A:  MOVF   xA4,W
528C:  SUBWF  xA3,W
528E:  BNZ   52CE
....................                { 
....................                   Password[i-1]++; 
5290:  MOVLW  01
5292:  SUBWF  xA4,W
5294:  CLRF   03
5296:  ADDLW  DB
5298:  MOVWF  FE9
529A:  MOVLW  04
529C:  ADDWFC 03,W
529E:  MOVWF  FEA
52A0:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
52A2:  MOVLW  01
52A4:  SUBWF  xA4,W
52A6:  CLRF   03
52A8:  ADDLW  DB
52AA:  MOVWF  FE9
52AC:  MOVLW  04
52AE:  ADDWFC 03,W
52B0:  MOVWF  FEA
52B2:  BTFSC  FEF.7
52B4:  BRA    52CE
52B6:  MOVF   FEF,W
52B8:  SUBLW  09
52BA:  BC    52CE
....................                   { 
....................                      Password[i-1]=0; 
52BC:  MOVLW  01
52BE:  SUBWF  xA4,W
52C0:  CLRF   03
52C2:  ADDLW  DB
52C4:  MOVWF  FE9
52C6:  MOVLW  04
52C8:  ADDWFC 03,W
52CA:  MOVWF  FEA
52CC:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
52CE:  INCF   xA4,F
52D0:  BRA    5284
....................          } 
....................       } 
....................       else 
52D2:  BRA    52D6
....................       { 
....................          Flanco = 0; 
52D4:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
52D6:  BSF    F92.1
52D8:  BTFSS  F80.1
52DA:  BRA    5342
....................       { 
....................          if(Flanco2 == 0) 
52DC:  BTFSC  x95.2
52DE:  BRA    5340
....................             {Flanco2 = 1;delay_ms(30); 
52E0:  BSF    x95.2
52E2:  MOVLW  1E
52E4:  MOVLB  5
52E6:  MOVWF  x0B
52E8:  MOVLB  0
52EA:  CALL   104A
....................                for(i=1;i<=4;i++) 
52EE:  MOVLW  01
52F0:  MOVLB  4
52F2:  MOVWF  xA4
52F4:  MOVF   xA4,W
52F6:  SUBLW  04
52F8:  BNC   5340
....................                { 
....................                   if(unidad==i) 
52FA:  MOVF   xA4,W
52FC:  SUBWF  xA3,W
52FE:  BNZ   533C
....................                   { 
....................                      Password[i-1]--; 
5300:  MOVLW  01
5302:  SUBWF  xA4,W
5304:  CLRF   03
5306:  ADDLW  DB
5308:  MOVWF  FE9
530A:  MOVLW  04
530C:  ADDWFC 03,W
530E:  MOVWF  FEA
5310:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
5312:  MOVLW  01
5314:  SUBWF  xA4,W
5316:  CLRF   03
5318:  ADDLW  DB
531A:  MOVWF  FE9
531C:  MOVLW  04
531E:  ADDWFC 03,W
5320:  MOVWF  FEA
5322:  BTFSC  FEF.7
5324:  BRA    5328
5326:  BRA    533C
....................                      { 
....................                         Password[i-1]=9; 
5328:  MOVLW  01
532A:  SUBWF  xA4,W
532C:  CLRF   03
532E:  ADDLW  DB
5330:  MOVWF  FE9
5332:  MOVLW  04
5334:  ADDWFC 03,W
5336:  MOVWF  FEA
5338:  MOVLW  09
533A:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
533C:  INCF   xA4,F
533E:  BRA    52F4
....................             }      
....................       } 
....................       else 
5340:  BRA    5344
....................       { 
....................          Flanco2 = 0; 
5342:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
5344:  BSF    F92.2
5346:  BTFSS  F80.2
5348:  BRA    536C
....................       { 
....................          if(Flanco1 == 0) 
534A:  BTFSC  x95.1
534C:  BRA    536A
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
534E:  BSF    x95.1
5350:  MOVLW  02
5352:  MOVLB  5
5354:  MOVWF  x0A
5356:  MOVLW  96
5358:  MOVWF  x0B
535A:  MOVLB  0
535C:  CALL   104A
5360:  MOVLB  5
5362:  DECFSZ x0A,F
5364:  BRA    5356
5366:  MOVLB  4
5368:  INCF   xA3,F
....................       } 
....................       else 
536A:  BRA    536E
....................       { 
....................          Flanco1 = 0; 
536C:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
536E:  BSF    F92.3
5370:  BTFSS  F80.3
5372:  BRA    539C
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
5374:  MOVLW  04
5376:  MOVLB  5
5378:  MOVWF  x0A
537A:  MOVLW  AF
537C:  MOVWF  x0B
537E:  MOVLB  0
5380:  CALL   104A
5384:  MOVLB  5
5386:  DECFSZ x0A,F
5388:  BRA    537A
538A:  MOVLW  01
538C:  MOVLB  4
538E:  MOVWF  xA2
5390:  MOVLB  5
5392:  CLRF   x0B
5394:  MOVLB  0
5396:  CALL   10B4
539A:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
539C:  MOVF   xA3,W
539E:  SUBLW  04
53A0:  BC    546E
....................       { 
....................          Opcion=1;unidad=1; 
53A2:  MOVLW  01
53A4:  MOVWF  xAC
53A6:  MOVWF  xA3
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
53A8:  MOVLW  0A
53AA:  MOVWF  FA9
53AC:  MOVFF  4DB,FA8
53B0:  BCF    FA6.6
53B2:  BCF    FA6.7
53B4:  BSF    FA6.2
53B6:  MOVF   FF2,W
53B8:  MOVWF  00
53BA:  BCF    FF2.7
53BC:  MOVLB  F
53BE:  MOVLW  55
53C0:  MOVWF  FA7
53C2:  MOVLW  AA
53C4:  MOVWF  FA7
53C6:  BSF    FA6.1
53C8:  BTFSC  FA6.1
53CA:  BRA    53C8
53CC:  BCF    FA6.2
53CE:  MOVF   00,W
53D0:  IORWF  FF2,F
53D2:  MOVLW  0B
53D4:  MOVWF  FA9
53D6:  MOVFF  4DC,FA8
53DA:  BCF    FA6.6
53DC:  BCF    FA6.7
53DE:  BSF    FA6.2
53E0:  MOVF   FF2,W
53E2:  MOVWF  00
53E4:  BCF    FF2.7
53E6:  MOVLW  55
53E8:  MOVWF  FA7
53EA:  MOVLW  AA
53EC:  MOVWF  FA7
53EE:  BSF    FA6.1
53F0:  BTFSC  FA6.1
53F2:  BRA    53F0
53F4:  BCF    FA6.2
53F6:  MOVF   00,W
53F8:  IORWF  FF2,F
53FA:  MOVLW  0C
53FC:  MOVWF  FA9
53FE:  MOVFF  4DD,FA8
5402:  BCF    FA6.6
5404:  BCF    FA6.7
5406:  BSF    FA6.2
5408:  MOVF   FF2,W
540A:  MOVWF  00
540C:  BCF    FF2.7
540E:  MOVLW  55
5410:  MOVWF  FA7
5412:  MOVLW  AA
5414:  MOVWF  FA7
5416:  BSF    FA6.1
5418:  BTFSC  FA6.1
541A:  BRA    5418
541C:  BCF    FA6.2
541E:  MOVF   00,W
5420:  IORWF  FF2,F
5422:  MOVLW  0D
5424:  MOVWF  FA9
5426:  MOVFF  4DE,FA8
542A:  BCF    FA6.6
542C:  BCF    FA6.7
542E:  BSF    FA6.2
5430:  MOVF   FF2,W
5432:  MOVWF  00
5434:  BCF    FF2.7
5436:  MOVLW  55
5438:  MOVWF  FA7
543A:  MOVLW  AA
543C:  MOVWF  FA7
543E:  BSF    FA6.1
5440:  BTFSC  FA6.1
5442:  BRA    5440
5444:  BCF    FA6.2
5446:  MOVF   00,W
5448:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
544A:  MOVLW  04
544C:  MOVLB  5
544E:  MOVWF  x0A
5450:  MOVLW  FA
5452:  MOVWF  x0B
5454:  MOVLB  0
5456:  CALL   104A
545A:  MOVLB  5
545C:  DECFSZ x0A,F
545E:  BRA    5450
5460:  CLRF   x0B
5462:  MOVLB  0
5464:  CALL   10B4
5468:  MOVLW  01
546A:  MOVLB  4
546C:  MOVWF  xA2
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==10){ // Menu de Presion Atmosferica 
546E:  MOVF   xA2,W
5470:  SUBLW  0A
5472:  BTFSS  FD8.2
5474:  BRA    5612
....................       
....................  
....................          strcpy(Menus.Letra,"Atmosfera"); 
5476:  MOVLW  04
5478:  MOVWF  FEA
547A:  MOVLW  EA
547C:  MOVWF  FE9
547E:  MOVFF  FF2,50A
5482:  BCF    FF2.7
5484:  MOVLW  00
5486:  MOVLB  0
5488:  CALL   0C52
548C:  TBLRD*-
548E:  TBLRD*+
5490:  MOVF   FF5,W
5492:  MOVWF  FEE
5494:  IORLW  00
5496:  BNZ   548E
5498:  MOVLB  5
549A:  BTFSC  x0A.7
549C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
549E:  MOVLW  04
54A0:  MOVWF  x0B
54A2:  MOVLW  EA
54A4:  MOVWF  x0A
54A6:  CLRF   x0C
54A8:  CLRF   x0D
54AA:  MOVLW  01
54AC:  MOVWF  x0E
54AE:  MOVLW  02
54B0:  MOVWF  x0F
54B2:  MOVLB  0
54B4:  CALL   16E2
....................          strcpy(Menus.Letra,"kpa");displayMenu(Menus.Letra,92,30,2,1); 
54B8:  MOVLW  04
54BA:  MOVWF  FEA
54BC:  MOVLW  EA
54BE:  MOVWF  FE9
54C0:  MOVFF  FF2,50A
54C4:  BCF    FF2.7
54C6:  MOVLW  00
54C8:  CALL   0C76
54CC:  TBLRD*-
54CE:  TBLRD*+
54D0:  MOVF   FF5,W
54D2:  MOVWF  FEE
54D4:  IORLW  00
54D6:  BNZ   54CE
54D8:  MOVLB  5
54DA:  BTFSC  x0A.7
54DC:  BSF    FF2.7
54DE:  MOVLW  04
54E0:  MOVWF  x0B
54E2:  MOVLW  EA
54E4:  MOVWF  x0A
54E6:  MOVLW  5C
54E8:  MOVWF  x0C
54EA:  MOVLW  1E
54EC:  MOVWF  x0D
54EE:  MOVLW  02
54F0:  MOVWF  x0E
54F2:  MOVLW  01
54F4:  MOVWF  x0F
54F6:  MOVLB  0
54F8:  CALL   16E2
....................           
....................          displayT(Atmosferica,31,35,2);  
54FC:  MOVLB  5
54FE:  CLRF   x0B
5500:  MOVFF  4AA,50A
5504:  MOVLB  0
5506:  CALL   1AA0
550A:  MOVFF  00,50A
550E:  MOVFF  01,50B
5512:  MOVFF  02,50C
5516:  MOVFF  03,50D
551A:  MOVFF  03,511
551E:  MOVFF  02,510
5522:  MOVFF  01,50F
5526:  MOVFF  00,50E
552A:  MOVLW  1F
552C:  MOVLB  5
552E:  MOVWF  x12
5530:  MOVLW  23
5532:  MOVWF  x13
5534:  MOVLW  02
5536:  MOVWF  x14
5538:  MOVLB  0
553A:  CALL   2AE0
....................        
....................          if(UP)//Si oprime hacia arriba 
553E:  BSF    F92.0
5540:  BTFSS  F80.0
5542:  BRA    5562
....................          {   
....................             delay_ms(30);Atmosferica+=1;visual=1;glcd_fillScreen(OFF); 
5544:  MOVLW  1E
5546:  MOVLB  5
5548:  MOVWF  x0B
554A:  MOVLB  0
554C:  CALL   104A
5550:  MOVLW  01
5552:  MOVLB  4
5554:  ADDWF  xAA,F
5556:  BSF    x95.4
5558:  MOVLB  5
555A:  CLRF   x0B
555C:  MOVLB  0
555E:  CALL   10B4
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5562:  BSF    F92.1
5564:  BTFSS  F80.1
5566:  BRA    5586
....................          {   
....................             delay_ms(30);Atmosferica-=1;visual=1;glcd_fillScreen(OFF);      
5568:  MOVLW  1E
556A:  MOVLB  5
556C:  MOVWF  x0B
556E:  MOVLB  0
5570:  CALL   104A
5574:  MOVLW  01
5576:  MOVLB  4
5578:  SUBWF  xAA,F
557A:  BSF    x95.4
557C:  MOVLB  5
557E:  CLRF   x0B
5580:  MOVLB  0
5582:  CALL   10B4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5586:  BSF    F92.2
5588:  BTFSS  F80.2
558A:  BRA    55A6
....................          {   
....................             delay_ms(30);visual=1;glcd_fillScreen(OFF); 
558C:  MOVLW  1E
558E:  MOVLB  5
5590:  MOVWF  x0B
5592:  MOVLB  0
5594:  CALL   104A
5598:  MOVLB  4
559A:  BSF    x95.4
559C:  MOVLB  5
559E:  CLRF   x0B
55A0:  MOVLB  0
55A2:  CALL   10B4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
55A6:  BSF    F92.3
55A8:  BTFSS  F80.3
55AA:  BRA    5610
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
55AC:  MOVLW  04
55AE:  MOVLB  5
55B0:  MOVWF  x0A
55B2:  MOVLW  AF
55B4:  MOVWF  x0B
55B6:  MOVLB  0
55B8:  CALL   104A
55BC:  MOVLB  5
55BE:  DECFSZ x0A,F
55C0:  BRA    55B2
55C2:  MOVLW  01
55C4:  MOVLB  4
55C6:  MOVWF  xA2
55C8:  MOVLB  5
55CA:  CLRF   x0B
55CC:  MOVLB  0
55CE:  CALL   10B4
55D2:  MOVLW  01
55D4:  MOVLB  4
55D6:  MOVWF  xAC
55D8:  BSF    x95.4
....................             write_eeprom(90,Atmosferica); 
55DA:  MOVLW  5A
55DC:  MOVWF  FA9
55DE:  MOVFF  4AA,FA8
55E2:  BCF    FA6.6
55E4:  BCF    FA6.7
55E6:  BSF    FA6.2
55E8:  MOVF   FF2,W
55EA:  MOVWF  00
55EC:  BCF    FF2.7
55EE:  MOVLB  F
55F0:  MOVLW  55
55F2:  MOVWF  FA7
55F4:  MOVLW  AA
55F6:  MOVWF  FA7
55F8:  BSF    FA6.1
55FA:  BTFSC  FA6.1
55FC:  BRA    55FA
55FE:  BCF    FA6.2
5600:  MOVF   00,W
5602:  IORWF  FF2,F
....................             delay_ms(10); 
5604:  MOVLW  0A
5606:  MOVLB  5
5608:  MOVWF  x0B
560A:  MOVLB  0
560C:  CALL   104A
5610:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
5612:  MOVF   xA2,W
5614:  SUBLW  0B
5616:  BTFSS  FD8.2
5618:  BRA    591A
....................       
....................       if(visual==1) 
561A:  BTFSS  x95.4
561C:  BRA    57A8
....................       { 
....................          if(unidad<1) 
561E:  MOVF   xA3,F
5620:  BNZ   5626
....................          {unidad=4;} 
5622:  MOVLW  04
5624:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
5626:  MOVLW  04
5628:  MOVWF  FEA
562A:  MOVLW  EA
562C:  MOVWF  FE9
562E:  MOVFF  FF2,50A
5632:  BCF    FF2.7
5634:  MOVLW  00
5636:  MOVLB  0
5638:  CALL   0C94
563C:  TBLRD*-
563E:  TBLRD*+
5640:  MOVF   FF5,W
5642:  MOVWF  FEE
5644:  IORLW  00
5646:  BNZ   563E
5648:  MOVLB  5
564A:  BTFSC  x0A.7
564C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
564E:  MOVLW  04
5650:  MOVWF  x0B
5652:  MOVLW  EA
5654:  MOVWF  x0A
5656:  CLRF   x0C
5658:  CLRF   x0D
565A:  MOVLW  01
565C:  MOVWF  x0E
565E:  MOVLW  02
5660:  MOVWF  x0F
5662:  MOVLB  0
5664:  CALL   16E2
....................           
....................          if(unidad==4) 
5668:  MOVLB  4
566A:  MOVF   xA3,W
566C:  SUBLW  04
566E:  BNZ   568E
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
5670:  MOVFF  4CE,50B
5674:  MOVLW  14
5676:  MOVLB  5
5678:  MOVWF  x0C
567A:  MOVLW  28
567C:  MOVWF  x0D
567E:  MOVLW  01
5680:  MOVWF  x0E
5682:  MOVLW  02
5684:  MOVWF  x0F
5686:  MOVLB  0
5688:  CALL   24E2
....................          else 
568C:  BRA    56A8
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
568E:  MOVFF  4CE,50B
5692:  MOVLW  14
5694:  MOVLB  5
5696:  MOVWF  x0C
5698:  MOVLW  28
569A:  MOVWF  x0D
569C:  CLRF   x0E
569E:  MOVLW  02
56A0:  MOVWF  x0F
56A2:  MOVLB  0
56A4:  CALL   24E2
....................           
....................          if(unidad==3) 
56A8:  MOVLB  4
56AA:  MOVF   xA3,W
56AC:  SUBLW  03
56AE:  BNZ   56CC
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
56B0:  MOVFF  4CD,50B
56B4:  MOVLW  28
56B6:  MOVLB  5
56B8:  MOVWF  x0C
56BA:  MOVWF  x0D
56BC:  MOVLW  01
56BE:  MOVWF  x0E
56C0:  MOVLW  02
56C2:  MOVWF  x0F
56C4:  MOVLB  0
56C6:  CALL   24E2
....................          else 
56CA:  BRA    56E4
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
56CC:  MOVFF  4CD,50B
56D0:  MOVLW  28
56D2:  MOVLB  5
56D4:  MOVWF  x0C
56D6:  MOVWF  x0D
56D8:  CLRF   x0E
56DA:  MOVLW  02
56DC:  MOVWF  x0F
56DE:  MOVLB  0
56E0:  CALL   24E2
....................           
....................          if(unidad==2) 
56E4:  MOVLB  4
56E6:  MOVF   xA3,W
56E8:  SUBLW  02
56EA:  BNZ   570A
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
56EC:  MOVFF  4CC,50B
56F0:  MOVLW  46
56F2:  MOVLB  5
56F4:  MOVWF  x0C
56F6:  MOVLW  28
56F8:  MOVWF  x0D
56FA:  MOVLW  01
56FC:  MOVWF  x0E
56FE:  MOVLW  02
5700:  MOVWF  x0F
5702:  MOVLB  0
5704:  CALL   24E2
....................          else 
5708:  BRA    5724
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
570A:  MOVFF  4CC,50B
570E:  MOVLW  46
5710:  MOVLB  5
5712:  MOVWF  x0C
5714:  MOVLW  28
5716:  MOVWF  x0D
5718:  CLRF   x0E
571A:  MOVLW  02
571C:  MOVWF  x0F
571E:  MOVLB  0
5720:  CALL   24E2
....................           
....................          if(unidad==1) 
5724:  MOVLB  4
5726:  DECFSZ xA3,W
5728:  BRA    5748
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
572A:  MOVFF  4CB,50B
572E:  MOVLW  5A
5730:  MOVLB  5
5732:  MOVWF  x0C
5734:  MOVLW  28
5736:  MOVWF  x0D
5738:  MOVLW  01
573A:  MOVWF  x0E
573C:  MOVLW  02
573E:  MOVWF  x0F
5740:  MOVLB  0
5742:  CALL   24E2
....................          else 
5746:  BRA    5762
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
5748:  MOVFF  4CB,50B
574C:  MOVLW  5A
574E:  MOVLB  5
5750:  MOVWF  x0C
5752:  MOVLW  28
5754:  MOVWF  x0D
5756:  CLRF   x0E
5758:  MOVLW  02
575A:  MOVWF  x0F
575C:  MOVLB  0
575E:  CALL   24E2
....................           
....................          strcpy(Menus.Letra,":"); 
5762:  MOVLW  04
5764:  MOVWF  FEA
5766:  MOVLW  EA
5768:  MOVWF  FE9
576A:  MOVFF  FF2,50A
576E:  BCF    FF2.7
5770:  MOVLW  00
5772:  CALL   06BE
5776:  TBLRD*-
5778:  TBLRD*+
577A:  MOVF   FF5,W
577C:  MOVWF  FEE
577E:  IORLW  00
5780:  BNZ   5778
5782:  MOVLB  5
5784:  BTFSC  x0A.7
5786:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
5788:  MOVLW  04
578A:  MOVWF  x0B
578C:  MOVLW  EA
578E:  MOVWF  x0A
5790:  MOVLW  3C
5792:  MOVWF  x0C
5794:  MOVLW  2A
5796:  MOVWF  x0D
5798:  MOVLW  02
579A:  MOVWF  x0E
579C:  MOVWF  x0F
579E:  MOVLB  0
57A0:  CALL   16E2
....................           
....................          visual=0; 
57A4:  MOVLB  4
57A6:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
57A8:  BSF    F92.0
57AA:  BTFSS  F80.0
57AC:  BRA    57EA
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
57AE:  MOVLW  01
57B0:  SUBWF  xA3,W
57B2:  CLRF   03
57B4:  ADDLW  CB
57B6:  MOVWF  FE9
57B8:  MOVLW  04
57BA:  ADDWFC 03,W
57BC:  MOVWF  FEA
57BE:  BTFSC  FEF.7
57C0:  BRA    57C8
57C2:  MOVF   FEF,W
57C4:  SUBLW  08
57C6:  BNC   57EA
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
57C8:  MOVLW  1E
57CA:  MOVLB  5
57CC:  MOVWF  x0B
57CE:  MOVLB  0
57D0:  CALL   104A
57D4:  MOVLW  01
57D6:  MOVLB  4
57D8:  SUBWF  xA3,W
57DA:  CLRF   03
57DC:  ADDLW  CB
57DE:  MOVWF  FE9
57E0:  MOVLW  04
57E2:  ADDWFC 03,W
57E4:  MOVWF  FEA
57E6:  INCF   FEF,F
57E8:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
57EA:  BSF    F92.1
57EC:  BTFSS  F80.1
57EE:  BRA    582C
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
57F0:  MOVLW  01
57F2:  SUBWF  xA3,W
57F4:  CLRF   03
57F6:  ADDLW  CB
57F8:  MOVWF  FE9
57FA:  MOVLW  04
57FC:  ADDWFC 03,W
57FE:  MOVWF  FEA
5800:  BTFSC  FEF.7
5802:  BRA    582C
5804:  MOVF   FEF,W
5806:  SUBLW  00
5808:  BC    582C
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
580A:  MOVLW  1E
580C:  MOVLB  5
580E:  MOVWF  x0B
5810:  MOVLB  0
5812:  CALL   104A
5816:  MOVLW  01
5818:  MOVLB  4
581A:  SUBWF  xA3,W
581C:  CLRF   03
581E:  ADDLW  CB
5820:  MOVWF  FE9
5822:  MOVLW  04
5824:  ADDWFC 03,W
5826:  MOVWF  FEA
5828:  DECF   FEF,F
582A:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
582C:  BSF    F92.2
582E:  BTFSS  F80.2
5830:  BRA    5844
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5832:  MOVLW  1E
5834:  MOVLB  5
5836:  MOVWF  x0B
5838:  MOVLB  0
583A:  CALL   104A
583E:  MOVLB  4
5840:  DECF   xA3,F
5842:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5844:  BSF    F92.3
5846:  BTFSS  F80.3
5848:  BRA    591A
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
584A:  MOVLW  04
584C:  MOVLB  5
584E:  MOVWF  x0A
5850:  MOVLW  AF
5852:  MOVWF  x0B
5854:  MOVLB  0
5856:  CALL   104A
585A:  MOVLB  5
585C:  DECFSZ x0A,F
585E:  BRA    5850
5860:  MOVLW  08
5862:  MOVLB  4
5864:  MOVWF  xA2
5866:  MOVLB  5
5868:  CLRF   x0B
586A:  MOVLB  0
586C:  CALL   10B4
5870:  MOVLW  01
5872:  MOVLB  4
5874:  MOVWF  xAC
5876:  BSF    x95.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
5878:  CLRF   FA9
587A:  MOVFF  4CB,FA8
587E:  BCF    FA6.6
5880:  BCF    FA6.7
5882:  BSF    FA6.2
5884:  MOVF   FF2,W
5886:  MOVWF  00
5888:  BCF    FF2.7
588A:  MOVLB  F
588C:  MOVLW  55
588E:  MOVWF  FA7
5890:  MOVLW  AA
5892:  MOVWF  FA7
5894:  BSF    FA6.1
5896:  BTFSC  FA6.1
5898:  BRA    5896
589A:  BCF    FA6.2
589C:  MOVF   00,W
589E:  IORWF  FF2,F
58A0:  MOVLW  01
58A2:  MOVWF  FA9
58A4:  MOVFF  4CC,FA8
58A8:  BCF    FA6.6
58AA:  BCF    FA6.7
58AC:  BSF    FA6.2
58AE:  MOVF   FF2,W
58B0:  MOVWF  00
58B2:  BCF    FF2.7
58B4:  MOVLW  55
58B6:  MOVWF  FA7
58B8:  MOVLW  AA
58BA:  MOVWF  FA7
58BC:  BSF    FA6.1
58BE:  BTFSC  FA6.1
58C0:  BRA    58BE
58C2:  BCF    FA6.2
58C4:  MOVF   00,W
58C6:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
58C8:  MOVLW  02
58CA:  MOVWF  FA9
58CC:  MOVFF  4CD,FA8
58D0:  BCF    FA6.6
58D2:  BCF    FA6.7
58D4:  BSF    FA6.2
58D6:  MOVFF  FF2,00
58DA:  BCF    FF2.7
58DC:  MOVLW  55
58DE:  MOVWF  FA7
58E0:  MOVLW  AA
58E2:  MOVWF  FA7
58E4:  BSF    FA6.1
58E6:  BTFSC  FA6.1
58E8:  BRA    58E6
58EA:  BCF    FA6.2
58EC:  MOVF   00,W
58EE:  IORWF  FF2,F
58F0:  MOVLW  03
58F2:  MOVWF  FA9
58F4:  MOVFF  4CE,FA8
58F8:  BCF    FA6.6
58FA:  BCF    FA6.7
58FC:  BSF    FA6.2
58FE:  MOVFF  FF2,00
5902:  BCF    FF2.7
5904:  MOVLW  55
5906:  MOVWF  FA7
5908:  MOVLW  AA
590A:  MOVWF  FA7
590C:  BSF    FA6.1
590E:  BTFSC  FA6.1
5910:  BRA    590E
5912:  BCF    FA6.2
5914:  MOVF   00,W
5916:  IORWF  FF2,F
5918:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
591A:  MOVF   xA2,W
591C:  SUBLW  0C
591E:  BTFSS  FD8.2
5920:  BRA    5C24
....................       
....................       if(visual==1) 
5922:  BTFSS  x95.4
5924:  BRA    5AB0
....................       { 
....................          if(unidad<1) 
5926:  MOVF   xA3,F
5928:  BNZ   592E
....................          {unidad=4;} 
592A:  MOVLW  04
592C:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra," Secado"); 
592E:  MOVLW  04
5930:  MOVWF  FEA
5932:  MOVLW  EA
5934:  MOVWF  FE9
5936:  MOVFF  FF2,50A
593A:  BCF    FF2.7
593C:  MOVLW  00
593E:  MOVLB  0
5940:  CALL   0CB8
5944:  TBLRD*-
5946:  TBLRD*+
5948:  MOVF   FF5,W
594A:  MOVWF  FEE
594C:  IORLW  00
594E:  BNZ   5946
5950:  MOVLB  5
5952:  BTFSC  x0A.7
5954:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5956:  MOVLW  04
5958:  MOVWF  x0B
595A:  MOVLW  EA
595C:  MOVWF  x0A
595E:  CLRF   x0C
5960:  CLRF   x0D
5962:  MOVLW  01
5964:  MOVWF  x0E
5966:  MOVLW  02
5968:  MOVWF  x0F
596A:  MOVLB  0
596C:  CALL   16E2
....................           
....................          if(unidad==4) 
5970:  MOVLB  4
5972:  MOVF   xA3,W
5974:  SUBLW  04
5976:  BNZ   5996
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
5978:  MOVFF  4D6,50B
597C:  MOVLW  14
597E:  MOVLB  5
5980:  MOVWF  x0C
5982:  MOVLW  28
5984:  MOVWF  x0D
5986:  MOVLW  01
5988:  MOVWF  x0E
598A:  MOVLW  02
598C:  MOVWF  x0F
598E:  MOVLB  0
5990:  CALL   24E2
....................          else 
5994:  BRA    59B0
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
5996:  MOVFF  4D6,50B
599A:  MOVLW  14
599C:  MOVLB  5
599E:  MOVWF  x0C
59A0:  MOVLW  28
59A2:  MOVWF  x0D
59A4:  CLRF   x0E
59A6:  MOVLW  02
59A8:  MOVWF  x0F
59AA:  MOVLB  0
59AC:  CALL   24E2
....................           
....................          if(unidad==3) 
59B0:  MOVLB  4
59B2:  MOVF   xA3,W
59B4:  SUBLW  03
59B6:  BNZ   59D4
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
59B8:  MOVFF  4D5,50B
59BC:  MOVLW  28
59BE:  MOVLB  5
59C0:  MOVWF  x0C
59C2:  MOVWF  x0D
59C4:  MOVLW  01
59C6:  MOVWF  x0E
59C8:  MOVLW  02
59CA:  MOVWF  x0F
59CC:  MOVLB  0
59CE:  CALL   24E2
....................          else 
59D2:  BRA    59EC
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
59D4:  MOVFF  4D5,50B
59D8:  MOVLW  28
59DA:  MOVLB  5
59DC:  MOVWF  x0C
59DE:  MOVWF  x0D
59E0:  CLRF   x0E
59E2:  MOVLW  02
59E4:  MOVWF  x0F
59E6:  MOVLB  0
59E8:  CALL   24E2
....................           
....................          if(unidad==2) 
59EC:  MOVLB  4
59EE:  MOVF   xA3,W
59F0:  SUBLW  02
59F2:  BNZ   5A12
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
59F4:  MOVFF  4D4,50B
59F8:  MOVLW  46
59FA:  MOVLB  5
59FC:  MOVWF  x0C
59FE:  MOVLW  28
5A00:  MOVWF  x0D
5A02:  MOVLW  01
5A04:  MOVWF  x0E
5A06:  MOVLW  02
5A08:  MOVWF  x0F
5A0A:  MOVLB  0
5A0C:  CALL   24E2
....................          else 
5A10:  BRA    5A2C
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
5A12:  MOVFF  4D4,50B
5A16:  MOVLW  46
5A18:  MOVLB  5
5A1A:  MOVWF  x0C
5A1C:  MOVLW  28
5A1E:  MOVWF  x0D
5A20:  CLRF   x0E
5A22:  MOVLW  02
5A24:  MOVWF  x0F
5A26:  MOVLB  0
5A28:  CALL   24E2
....................           
....................          if(unidad==1) 
5A2C:  MOVLB  4
5A2E:  DECFSZ xA3,W
5A30:  BRA    5A50
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
5A32:  MOVFF  4D3,50B
5A36:  MOVLW  5A
5A38:  MOVLB  5
5A3A:  MOVWF  x0C
5A3C:  MOVLW  28
5A3E:  MOVWF  x0D
5A40:  MOVLW  01
5A42:  MOVWF  x0E
5A44:  MOVLW  02
5A46:  MOVWF  x0F
5A48:  MOVLB  0
5A4A:  CALL   24E2
....................          else 
5A4E:  BRA    5A6A
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
5A50:  MOVFF  4D3,50B
5A54:  MOVLW  5A
5A56:  MOVLB  5
5A58:  MOVWF  x0C
5A5A:  MOVLW  28
5A5C:  MOVWF  x0D
5A5E:  CLRF   x0E
5A60:  MOVLW  02
5A62:  MOVWF  x0F
5A64:  MOVLB  0
5A66:  CALL   24E2
....................           
....................          strcpy(Menus.Letra,":"); 
5A6A:  MOVLW  04
5A6C:  MOVWF  FEA
5A6E:  MOVLW  EA
5A70:  MOVWF  FE9
5A72:  MOVFF  FF2,50A
5A76:  BCF    FF2.7
5A78:  MOVLW  00
5A7A:  CALL   06BE
5A7E:  TBLRD*-
5A80:  TBLRD*+
5A82:  MOVF   FF5,W
5A84:  MOVWF  FEE
5A86:  IORLW  00
5A88:  BNZ   5A80
5A8A:  MOVLB  5
5A8C:  BTFSC  x0A.7
5A8E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
5A90:  MOVLW  04
5A92:  MOVWF  x0B
5A94:  MOVLW  EA
5A96:  MOVWF  x0A
5A98:  MOVLW  3C
5A9A:  MOVWF  x0C
5A9C:  MOVLW  2A
5A9E:  MOVWF  x0D
5AA0:  MOVLW  02
5AA2:  MOVWF  x0E
5AA4:  MOVWF  x0F
5AA6:  MOVLB  0
5AA8:  CALL   16E2
....................           
....................          visual=0; 
5AAC:  MOVLB  4
5AAE:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5AB0:  BSF    F92.0
5AB2:  BTFSS  F80.0
5AB4:  BRA    5AF2
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
5AB6:  MOVLW  01
5AB8:  SUBWF  xA3,W
5ABA:  CLRF   03
5ABC:  ADDLW  D3
5ABE:  MOVWF  FE9
5AC0:  MOVLW  04
5AC2:  ADDWFC 03,W
5AC4:  MOVWF  FEA
5AC6:  BTFSC  FEF.7
5AC8:  BRA    5AD0
5ACA:  MOVF   FEF,W
5ACC:  SUBLW  08
5ACE:  BNC   5AF2
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
5AD0:  MOVLW  1E
5AD2:  MOVLB  5
5AD4:  MOVWF  x0B
5AD6:  MOVLB  0
5AD8:  CALL   104A
5ADC:  MOVLW  01
5ADE:  MOVLB  4
5AE0:  SUBWF  xA3,W
5AE2:  CLRF   03
5AE4:  ADDLW  D3
5AE6:  MOVWF  FE9
5AE8:  MOVLW  04
5AEA:  ADDWFC 03,W
5AEC:  MOVWF  FEA
5AEE:  INCF   FEF,F
5AF0:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5AF2:  BSF    F92.1
5AF4:  BTFSS  F80.1
5AF6:  BRA    5B34
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
5AF8:  MOVLW  01
5AFA:  SUBWF  xA3,W
5AFC:  CLRF   03
5AFE:  ADDLW  D3
5B00:  MOVWF  FE9
5B02:  MOVLW  04
5B04:  ADDWFC 03,W
5B06:  MOVWF  FEA
5B08:  BTFSC  FEF.7
5B0A:  BRA    5B34
5B0C:  MOVF   FEF,W
5B0E:  SUBLW  00
5B10:  BC    5B34
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
5B12:  MOVLW  1E
5B14:  MOVLB  5
5B16:  MOVWF  x0B
5B18:  MOVLB  0
5B1A:  CALL   104A
5B1E:  MOVLW  01
5B20:  MOVLB  4
5B22:  SUBWF  xA3,W
5B24:  CLRF   03
5B26:  ADDLW  D3
5B28:  MOVWF  FE9
5B2A:  MOVLW  04
5B2C:  ADDWFC 03,W
5B2E:  MOVWF  FEA
5B30:  DECF   FEF,F
5B32:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5B34:  BSF    F92.2
5B36:  BTFSS  F80.2
5B38:  BRA    5B4C
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5B3A:  MOVLW  1E
5B3C:  MOVLB  5
5B3E:  MOVWF  x0B
5B40:  MOVLB  0
5B42:  CALL   104A
5B46:  MOVLB  4
5B48:  DECF   xA3,F
5B4A:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5B4C:  BSF    F92.3
5B4E:  BTFSS  F80.3
5B50:  BRA    5C24
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5B52:  MOVLW  04
5B54:  MOVLB  5
5B56:  MOVWF  x0A
5B58:  MOVLW  AF
5B5A:  MOVWF  x0B
5B5C:  MOVLB  0
5B5E:  CALL   104A
5B62:  MOVLB  5
5B64:  DECFSZ x0A,F
5B66:  BRA    5B58
5B68:  MOVLW  08
5B6A:  MOVLB  4
5B6C:  MOVWF  xA2
5B6E:  MOVLB  5
5B70:  CLRF   x0B
5B72:  MOVLB  0
5B74:  CALL   10B4
5B78:  MOVLW  01
5B7A:  MOVLB  4
5B7C:  MOVWF  xAC
5B7E:  BSF    x95.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
5B80:  MOVLW  04
5B82:  MOVWF  FA9
5B84:  MOVFF  4D3,FA8
5B88:  BCF    FA6.6
5B8A:  BCF    FA6.7
5B8C:  BSF    FA6.2
5B8E:  MOVF   FF2,W
5B90:  MOVWF  00
5B92:  BCF    FF2.7
5B94:  MOVLB  F
5B96:  MOVLW  55
5B98:  MOVWF  FA7
5B9A:  MOVLW  AA
5B9C:  MOVWF  FA7
5B9E:  BSF    FA6.1
5BA0:  BTFSC  FA6.1
5BA2:  BRA    5BA0
5BA4:  BCF    FA6.2
5BA6:  MOVF   00,W
5BA8:  IORWF  FF2,F
5BAA:  MOVLW  05
5BAC:  MOVWF  FA9
5BAE:  MOVFF  4D4,FA8
5BB2:  BCF    FA6.6
5BB4:  BCF    FA6.7
5BB6:  BSF    FA6.2
5BB8:  MOVF   FF2,W
5BBA:  MOVWF  00
5BBC:  BCF    FF2.7
5BBE:  MOVLW  55
5BC0:  MOVWF  FA7
5BC2:  MOVLW  AA
5BC4:  MOVWF  FA7
5BC6:  BSF    FA6.1
5BC8:  BTFSC  FA6.1
5BCA:  BRA    5BC8
5BCC:  BCF    FA6.2
5BCE:  MOVF   00,W
5BD0:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
5BD2:  MOVLW  06
5BD4:  MOVWF  FA9
5BD6:  MOVFF  4D5,FA8
5BDA:  BCF    FA6.6
5BDC:  BCF    FA6.7
5BDE:  BSF    FA6.2
5BE0:  MOVFF  FF2,00
5BE4:  BCF    FF2.7
5BE6:  MOVLW  55
5BE8:  MOVWF  FA7
5BEA:  MOVLW  AA
5BEC:  MOVWF  FA7
5BEE:  BSF    FA6.1
5BF0:  BTFSC  FA6.1
5BF2:  BRA    5BF0
5BF4:  BCF    FA6.2
5BF6:  MOVF   00,W
5BF8:  IORWF  FF2,F
5BFA:  MOVLW  07
5BFC:  MOVWF  FA9
5BFE:  MOVFF  4D6,FA8
5C02:  BCF    FA6.6
5C04:  BCF    FA6.7
5C06:  BSF    FA6.2
5C08:  MOVFF  FF2,00
5C0C:  BCF    FF2.7
5C0E:  MOVLW  55
5C10:  MOVWF  FA7
5C12:  MOVLW  AA
5C14:  MOVWF  FA7
5C16:  BSF    FA6.1
5C18:  BTFSC  FA6.1
5C1A:  BRA    5C18
5C1C:  BCF    FA6.2
5C1E:  MOVF   00,W
5C20:  IORWF  FF2,F
5C22:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
5C24:  MOVF   xA2,W
5C26:  SUBLW  0D
5C28:  BTFSS  FD8.2
5C2A:  BRA    5D62
....................       
....................       if(visual==1) 
5C2C:  BTFSS  x95.4
5C2E:  BRA    5C96
....................       { 
....................          glcd_fillScreen(OFF); 
5C30:  MOVLB  5
5C32:  CLRF   x0B
5C34:  MOVLB  0
5C36:  CALL   10B4
....................          strcpy(Menus.Letra,"Temperatura"); 
5C3A:  MOVLW  04
5C3C:  MOVWF  FEA
5C3E:  MOVLW  EA
5C40:  MOVWF  FE9
5C42:  MOVFF  FF2,50A
5C46:  BCF    FF2.7
5C48:  MOVLW  00
5C4A:  CALL   0BB6
5C4E:  TBLRD*-
5C50:  TBLRD*+
5C52:  MOVF   FF5,W
5C54:  MOVWF  FEE
5C56:  IORLW  00
5C58:  BNZ   5C50
5C5A:  MOVLB  5
5C5C:  BTFSC  x0A.7
5C5E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5C60:  MOVLW  04
5C62:  MOVWF  x0B
5C64:  MOVLW  EA
5C66:  MOVWF  x0A
5C68:  CLRF   x0C
5C6A:  CLRF   x0D
5C6C:  MOVLW  01
5C6E:  MOVWF  x0E
5C70:  MOVLW  02
5C72:  MOVWF  x0F
5C74:  MOVLB  0
5C76:  CALL   16E2
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
5C7A:  MOVFF  4A9,50B
5C7E:  MOVLW  1E
5C80:  MOVLB  5
5C82:  MOVWF  x0C
5C84:  MOVWF  x0D
5C86:  CLRF   x0E
5C88:  MOVLW  03
5C8A:  MOVWF  x0F
5C8C:  MOVLB  0
5C8E:  CALL   24E2
....................           
....................          visual=0; 
5C92:  MOVLB  4
5C94:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
5C96:  BSF    F92.0
5C98:  BTFSS  F80.0
5C9A:  BRA    5CCE
....................          {   
....................             if(Setpoint<134) 
5C9C:  MOVF   xA9,W
5C9E:  SUBLW  85
5CA0:  BNC   5CCE
....................             { 
....................                if(Setpoint<100) 
5CA2:  MOVF   xA9,W
5CA4:  SUBLW  63
5CA6:  BNC   5CBC
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
5CA8:  MOVLW  64
5CAA:  MOVWF  xA9
5CAC:  MOVLB  5
5CAE:  MOVWF  x0B
5CB0:  MOVLB  0
5CB2:  CALL   104A
5CB6:  MOVLB  4
5CB8:  BSF    x95.4
....................                } 
....................                else 
5CBA:  BRA    5CCE
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
5CBC:  MOVLW  1E
5CBE:  MOVLB  5
5CC0:  MOVWF  x0B
5CC2:  MOVLB  0
5CC4:  CALL   104A
5CC8:  MOVLB  4
5CCA:  INCF   xA9,F
5CCC:  BSF    x95.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5CCE:  BSF    F92.1
5CD0:  BTFSS  F80.1
5CD2:  BRA    5CEC
....................          {   
....................             if(Setpoint>105) 
5CD4:  MOVF   xA9,W
5CD6:  SUBLW  69
5CD8:  BC    5CEC
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
5CDA:  MOVLW  1E
5CDC:  MOVLB  5
5CDE:  MOVWF  x0B
5CE0:  MOVLB  0
5CE2:  CALL   104A
5CE6:  MOVLB  4
5CE8:  DECF   xA9,F
5CEA:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5CEC:  BSF    F92.2
5CEE:  BTFSS  F80.2
5CF0:  BRA    5D02
....................          {   
....................             delay_ms(30);visual=1; 
5CF2:  MOVLW  1E
5CF4:  MOVLB  5
5CF6:  MOVWF  x0B
5CF8:  MOVLB  0
5CFA:  CALL   104A
5CFE:  MOVLB  4
5D00:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5D02:  BSF    F92.3
5D04:  BTFSS  F80.3
5D06:  BRA    5D62
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5D08:  MOVLW  04
5D0A:  MOVLB  5
5D0C:  MOVWF  x0A
5D0E:  MOVLW  AF
5D10:  MOVWF  x0B
5D12:  MOVLB  0
5D14:  CALL   104A
5D18:  MOVLB  5
5D1A:  DECFSZ x0A,F
5D1C:  BRA    5D0E
5D1E:  MOVLW  08
5D20:  MOVLB  4
5D22:  MOVWF  xA2
5D24:  MOVLB  5
5D26:  CLRF   x0B
5D28:  MOVLB  0
5D2A:  CALL   10B4
5D2E:  MOVLW  01
5D30:  MOVLB  4
5D32:  MOVWF  xAC
5D34:  BSF    x95.4
....................             write_eeprom(8,Setpoint); 
5D36:  MOVLW  08
5D38:  MOVWF  FA9
5D3A:  MOVFF  4A9,FA8
5D3E:  BCF    FA6.6
5D40:  BCF    FA6.7
5D42:  BSF    FA6.2
5D44:  MOVF   FF2,W
5D46:  MOVWF  00
5D48:  BCF    FF2.7
5D4A:  MOVLB  F
5D4C:  MOVLW  55
5D4E:  MOVWF  FA7
5D50:  MOVLW  AA
5D52:  MOVWF  FA7
5D54:  BSF    FA6.1
5D56:  BTFSC  FA6.1
5D58:  BRA    5D56
5D5A:  BCF    FA6.2
5D5C:  MOVF   00,W
5D5E:  IORWF  FF2,F
5D60:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
5D62:  MOVF   xA2,W
5D64:  SUBLW  0E
5D66:  BTFSS  FD8.2
5D68:  BRA    6058
....................       if(Nivel>6) 
5D6A:  MOVF   xBA,F
5D6C:  BNZ   5D74
5D6E:  MOVF   xB9,W
5D70:  SUBLW  06
5D72:  BC    5D7A
....................          Nivel=6; 
5D74:  CLRF   xBA
5D76:  MOVLW  06
5D78:  MOVWF  xB9
....................           
....................       if(visual==1) 
5D7A:  BTFSS  x95.4
5D7C:  BRA    5DDE
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
5D7E:  MOVLW  04
5D80:  MOVWF  FEA
5D82:  MOVLW  EA
5D84:  MOVWF  FE9
5D86:  MOVFF  FF2,50A
5D8A:  BCF    FF2.7
5D8C:  MOVLW  00
5D8E:  MOVLB  0
5D90:  CALL   0CDA
5D94:  TBLRD*-
5D96:  TBLRD*+
5D98:  MOVF   FF5,W
5D9A:  MOVWF  FEE
5D9C:  IORLW  00
5D9E:  BNZ   5D96
5DA0:  MOVLB  5
5DA2:  BTFSC  x0A.7
5DA4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5DA6:  MOVLW  04
5DA8:  MOVWF  x0B
5DAA:  MOVLW  EA
5DAC:  MOVWF  x0A
5DAE:  CLRF   x0C
5DB0:  CLRF   x0D
5DB2:  MOVLW  01
5DB4:  MOVWF  x0E
5DB6:  MOVLW  02
5DB8:  MOVWF  x0F
5DBA:  MOVLB  0
5DBC:  CALL   16E2
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
5DC0:  MOVFF  4B9,50B
5DC4:  MOVLW  32
5DC6:  MOVLB  5
5DC8:  MOVWF  x0C
5DCA:  MOVLW  28
5DCC:  MOVWF  x0D
5DCE:  CLRF   x0E
5DD0:  MOVLW  02
5DD2:  MOVWF  x0F
5DD4:  MOVLB  0
5DD6:  CALL   24E2
....................           
....................          visual=0; 
5DDA:  MOVLB  4
5DDC:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5DDE:  BSF    F92.0
5DE0:  BTFSS  F80.0
5DE2:  BRA    5E04
....................          {   
....................             if(Nivel<6) 
5DE4:  MOVF   xBA,F
5DE6:  BNZ   5E04
5DE8:  MOVF   xB9,W
5DEA:  SUBLW  05
5DEC:  BNC   5E04
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
5DEE:  MOVLW  1E
5DF0:  MOVLB  5
5DF2:  MOVWF  x0B
5DF4:  MOVLB  0
5DF6:  CALL   104A
5DFA:  MOVLB  4
5DFC:  INCF   xB9,F
5DFE:  BTFSC  FD8.2
5E00:  INCF   xBA,F
5E02:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5E04:  BSF    F92.1
5E06:  BTFSS  F80.1
5E08:  BRA    5E2C
....................          {   
....................             if(Nivel>1) 
5E0A:  MOVF   xBA,F
5E0C:  BNZ   5E14
5E0E:  MOVF   xB9,W
5E10:  SUBLW  01
5E12:  BC    5E2C
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
5E14:  MOVLW  1E
5E16:  MOVLB  5
5E18:  MOVWF  x0B
5E1A:  MOVLB  0
5E1C:  CALL   104A
5E20:  MOVLB  4
5E22:  MOVF   xB9,W
5E24:  BTFSC  FD8.2
5E26:  DECF   xBA,F
5E28:  DECF   xB9,F
5E2A:  BSF    x95.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
5E2C:  BTFSS  x95.5
5E2E:  BRA    5FE8
....................          { 
....................             if(RIGHT)//Si oprime SET 
5E30:  BSF    F92.2
5E32:  BTFSS  F80.2
5E34:  BRA    5FE6
....................             {   
....................                write_eeprom(9,Nivel); 
5E36:  MOVLW  09
5E38:  MOVWF  FA9
5E3A:  MOVFF  4B9,FA8
5E3E:  BCF    FA6.6
5E40:  BCF    FA6.7
5E42:  BSF    FA6.2
5E44:  MOVF   FF2,W
5E46:  MOVWF  00
5E48:  BCF    FF2.7
5E4A:  MOVLB  F
5E4C:  MOVLW  55
5E4E:  MOVWF  FA7
5E50:  MOVLW  AA
5E52:  MOVWF  FA7
5E54:  BSF    FA6.1
5E56:  BTFSC  FA6.1
5E58:  BRA    5E56
5E5A:  BCF    FA6.2
5E5C:  MOVF   00,W
5E5E:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5E60:  MOVLW  14
5E62:  MOVLB  4
5E64:  MOVWF  xA2
5E66:  MOVLW  0F
5E68:  MOVLB  5
5E6A:  MOVWF  x20
5E6C:  MOVLW  12
5E6E:  MOVWF  x21
5E70:  MOVLW  1E
5E72:  MOVWF  x22
5E74:  MOVLW  35
5E76:  MOVWF  x23
5E78:  CLRF   x24
5E7A:  MOVLW  01
5E7C:  MOVWF  x25
5E7E:  MOVLB  0
5E80:  CALL   1620
5E84:  MOVLB  4
5E86:  CLRF   xAE
5E88:  MOVLW  C0
5E8A:  IORWF  FF2,F
5E8C:  MOVLB  5
5E8E:  CLRF   x0B
5E90:  MOVLB  0
5E92:  CALL   10B4
....................                strcpy(Menus.Letra,"Calentando"); 
5E96:  MOVLW  04
5E98:  MOVWF  FEA
5E9A:  MOVLW  EA
5E9C:  MOVWF  FE9
5E9E:  MOVFF  FF2,50A
5EA2:  BCF    FF2.7
5EA4:  MOVLW  00
5EA6:  CALL   09B2
5EAA:  TBLRD*-
5EAC:  TBLRD*+
5EAE:  MOVF   FF5,W
5EB0:  MOVWF  FEE
5EB2:  IORLW  00
5EB4:  BNZ   5EAC
5EB6:  MOVLB  5
5EB8:  BTFSC  x0A.7
5EBA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
5EBC:  MOVLW  04
5EBE:  MOVWF  x0B
5EC0:  MOVLW  EA
5EC2:  MOVWF  x0A
5EC4:  CLRF   x0C
5EC6:  MOVLW  37
5EC8:  MOVWF  x0D
5ECA:  MOVLW  02
5ECC:  MOVWF  x0E
5ECE:  MOVLW  01
5ED0:  MOVWF  x0F
5ED2:  MOVLB  0
5ED4:  CALL   16E2
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
5ED8:  MOVLW  0F
5EDA:  MOVLB  5
5EDC:  MOVWF  x20
5EDE:  MOVLW  12
5EE0:  MOVWF  x21
5EE2:  MOVLW  1E
5EE4:  MOVWF  x22
5EE6:  MOVLW  35
5EE8:  MOVWF  x23
5EEA:  CLRF   x24
5EEC:  MOVLW  01
5EEE:  MOVWF  x25
5EF0:  MOVLB  0
5EF2:  CALL   1620
....................                glcd_imagen(5); 
5EF6:  MOVLW  05
5EF8:  MOVLB  5
5EFA:  MOVWF  x0A
5EFC:  MOVLB  0
5EFE:  CALL   2136
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5F02:  MOVLW  04
5F04:  MOVWF  FEA
5F06:  MOVLW  EA
5F08:  MOVWF  FE9
5F0A:  MOVFF  FF2,50A
5F0E:  BCF    FF2.7
5F10:  MOVLW  00
5F12:  CALL   09D8
5F16:  TBLRD*-
5F18:  TBLRD*+
5F1A:  MOVF   FF5,W
5F1C:  MOVWF  FEE
5F1E:  IORLW  00
5F20:  BNZ   5F18
5F22:  MOVLB  5
5F24:  BTFSC  x0A.7
5F26:  BSF    FF2.7
5F28:  MOVLW  04
5F2A:  MOVWF  x0B
5F2C:  MOVLW  EA
5F2E:  MOVWF  x0A
5F30:  CLRF   x0C
5F32:  CLRF   x0D
5F34:  MOVLW  02
5F36:  MOVWF  x0E
5F38:  MOVLW  01
5F3A:  MOVWF  x0F
5F3C:  MOVLB  0
5F3E:  CALL   16E2
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5F42:  MOVLW  04
5F44:  MOVWF  FEA
5F46:  MOVLW  EA
5F48:  MOVWF  FE9
5F4A:  MOVFF  FF2,50A
5F4E:  BCF    FF2.7
5F50:  MOVLW  00
5F52:  CALL   09FA
5F56:  TBLRD*-
5F58:  TBLRD*+
5F5A:  MOVF   FF5,W
5F5C:  MOVWF  FEE
5F5E:  IORLW  00
5F60:  BNZ   5F58
5F62:  MOVLB  5
5F64:  BTFSC  x0A.7
5F66:  BSF    FF2.7
5F68:  MOVLW  04
5F6A:  MOVWF  x0B
5F6C:  MOVLW  EA
5F6E:  MOVWF  x0A
5F70:  CLRF   x0C
5F72:  MOVLW  08
5F74:  MOVWF  x0D
5F76:  MOVLW  02
5F78:  MOVWF  x0E
5F7A:  MOVLW  01
5F7C:  MOVWF  x0F
5F7E:  MOVLB  0
5F80:  CALL   16E2
....................                glcd_circle(95,40,2,NO,ON); 
5F84:  MOVLW  5F
5F86:  MOVLB  5
5F88:  MOVWF  x0A
5F8A:  MOVLW  28
5F8C:  MOVWF  x0B
5F8E:  MOVLW  02
5F90:  MOVWF  x0C
5F92:  CLRF   x0D
5F94:  MOVLW  01
5F96:  MOVWF  x0E
5F98:  MOVLB  0
5F9A:  CALL   2232
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5F9E:  MOVLW  04
5FA0:  MOVWF  FEA
5FA2:  MOVLW  EA
5FA4:  MOVWF  FE9
5FA6:  MOVFF  FF2,50A
5FAA:  BCF    FF2.7
5FAC:  MOVLW  00
5FAE:  CALL   0A1C
5FB2:  TBLRD*-
5FB4:  TBLRD*+
5FB6:  MOVF   FF5,W
5FB8:  MOVWF  FEE
5FBA:  IORLW  00
5FBC:  BNZ   5FB4
5FBE:  MOVLB  5
5FC0:  BTFSC  x0A.7
5FC2:  BSF    FF2.7
5FC4:  MOVLW  04
5FC6:  MOVWF  x0B
5FC8:  MOVLW  EA
5FCA:  MOVWF  x0A
5FCC:  MOVLW  66
5FCE:  MOVWF  x0C
5FD0:  MOVLW  28
5FD2:  MOVWF  x0D
5FD4:  MOVLW  02
5FD6:  MOVWF  x0E
5FD8:  MOVWF  x0F
5FDA:  MOVLB  0
5FDC:  CALL   16E2
....................                MuestraTiemposProgramados(); 
5FE0:  CALL   2632
5FE4:  MOVLB  4
....................             }       
....................          } 
....................          else 
5FE6:  BRA    6058
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5FE8:  BSF    F92.3
5FEA:  BTFSS  F80.3
5FEC:  BRA    6058
....................             { 
....................                if(Nivel<6) 
5FEE:  MOVF   xBA,F
5FF0:  BNZ   5FFC
5FF2:  MOVF   xB9,W
5FF4:  SUBLW  05
5FF6:  BNC   5FFC
....................                { 
....................                   desfoguelento=1; 
5FF8:  BSF    x95.5
....................                } 
....................                else 
5FFA:  BRA    5FFE
....................                { 
....................                   desfoguelento=0; 
5FFC:  BCF    x95.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5FFE:  MOVLW  04
6000:  MOVLB  5
6002:  MOVWF  x0A
6004:  MOVLW  AF
6006:  MOVWF  x0B
6008:  MOVLB  0
600A:  CALL   104A
600E:  MOVLB  5
6010:  DECFSZ x0A,F
6012:  BRA    6004
6014:  MOVLW  08
6016:  MOVLB  4
6018:  MOVWF  xA2
601A:  MOVLB  5
601C:  CLRF   x0B
601E:  MOVLB  0
6020:  CALL   10B4
6024:  MOVLW  01
6026:  MOVLB  4
6028:  MOVWF  xAC
602A:  BSF    x95.4
....................                write_eeprom(9,Nivel); 
602C:  MOVLW  09
602E:  MOVWF  FA9
6030:  MOVFF  4B9,FA8
6034:  BCF    FA6.6
6036:  BCF    FA6.7
6038:  BSF    FA6.2
603A:  MOVF   FF2,W
603C:  MOVWF  00
603E:  BCF    FF2.7
6040:  MOVLB  F
6042:  MOVLW  55
6044:  MOVWF  FA7
6046:  MOVLW  AA
6048:  MOVWF  FA7
604A:  BSF    FA6.1
604C:  BTFSC  FA6.1
604E:  BRA    604C
6050:  BCF    FA6.2
6052:  MOVF   00,W
6054:  IORWF  FF2,F
6056:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
6058:  MOVF   xA2,W
605A:  SUBLW  0F
605C:  BTFSS  FD8.2
605E:  BRA    6392
....................        
....................       if(visual==1) 
6060:  BTFSS  x95.4
6062:  BRA    61C8
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
6064:  MOVLW  04
6066:  MOVWF  FEA
6068:  MOVLW  EA
606A:  MOVWF  FE9
606C:  MOVFF  FF2,50A
6070:  BCF    FF2.7
6072:  MOVLW  00
6074:  MOVLB  0
6076:  CALL   0C08
607A:  TBLRD*-
607C:  TBLRD*+
607E:  MOVF   FF5,W
6080:  MOVWF  FEE
6082:  IORLW  00
6084:  BNZ   607C
6086:  MOVLB  5
6088:  BTFSC  x0A.7
608A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
608C:  MOVLW  04
608E:  MOVWF  x0B
6090:  MOVLW  EA
6092:  MOVWF  x0A
6094:  CLRF   x0C
6096:  CLRF   x0D
6098:  MOVLW  01
609A:  MOVWF  x0E
609C:  MOVLW  02
609E:  MOVWF  x0F
60A0:  MOVLB  0
60A2:  CALL   16E2
....................           
....................          if(Opcion==2) 
60A6:  MOVLB  4
60A8:  MOVF   xAC,W
60AA:  SUBLW  02
60AC:  BNZ   6138
....................          {strcpy(Menus.Letra,"SI"); 
60AE:  MOVLW  04
60B0:  MOVWF  FEA
60B2:  MOVLW  EA
60B4:  MOVWF  FE9
60B6:  MOVFF  FF2,50A
60BA:  BCF    FF2.7
60BC:  MOVLW  00
60BE:  MOVLB  0
60C0:  CALL   0CFE
60C4:  TBLRD*-
60C6:  TBLRD*+
60C8:  MOVF   FF5,W
60CA:  MOVWF  FEE
60CC:  IORLW  00
60CE:  BNZ   60C6
60D0:  MOVLB  5
60D2:  BTFSC  x0A.7
60D4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
60D6:  MOVLW  04
60D8:  MOVWF  x0B
60DA:  MOVLW  EA
60DC:  MOVWF  x0A
60DE:  MOVLW  32
60E0:  MOVWF  x0C
60E2:  MOVLW  19
60E4:  MOVWF  x0D
60E6:  MOVLW  01
60E8:  MOVWF  x0E
60EA:  MOVLW  02
60EC:  MOVWF  x0F
60EE:  MOVLB  0
60F0:  CALL   16E2
....................          strcpy(Menus.Letra,"NO"); 
60F4:  MOVLW  04
60F6:  MOVWF  FEA
60F8:  MOVLW  EA
60FA:  MOVWF  FE9
60FC:  MOVFF  FF2,50A
6100:  BCF    FF2.7
6102:  MOVLW  00
6104:  CALL   0D1C
6108:  TBLRD*-
610A:  TBLRD*+
610C:  MOVF   FF5,W
610E:  MOVWF  FEE
6110:  IORLW  00
6112:  BNZ   610A
6114:  MOVLB  5
6116:  BTFSC  x0A.7
6118:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
611A:  MOVLW  04
611C:  MOVWF  x0B
611E:  MOVLW  EA
6120:  MOVWF  x0A
6122:  MOVLW  32
6124:  MOVWF  x0C
6126:  MOVLW  2D
6128:  MOVWF  x0D
612A:  CLRF   x0E
612C:  MOVLW  02
612E:  MOVWF  x0F
6130:  MOVLB  0
6132:  CALL   16E2
6136:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
6138:  DECFSZ xAC,W
613A:  BRA    61C6
....................          {strcpy(Menus.Letra,"SI"); 
613C:  MOVLW  04
613E:  MOVWF  FEA
6140:  MOVLW  EA
6142:  MOVWF  FE9
6144:  MOVFF  FF2,50A
6148:  BCF    FF2.7
614A:  MOVLW  00
614C:  MOVLB  0
614E:  CALL   0CFE
6152:  TBLRD*-
6154:  TBLRD*+
6156:  MOVF   FF5,W
6158:  MOVWF  FEE
615A:  IORLW  00
615C:  BNZ   6154
615E:  MOVLB  5
6160:  BTFSC  x0A.7
6162:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
6164:  MOVLW  04
6166:  MOVWF  x0B
6168:  MOVLW  EA
616A:  MOVWF  x0A
616C:  MOVLW  32
616E:  MOVWF  x0C
6170:  MOVLW  19
6172:  MOVWF  x0D
6174:  CLRF   x0E
6176:  MOVLW  02
6178:  MOVWF  x0F
617A:  MOVLB  0
617C:  CALL   16E2
....................          strcpy(Menus.Letra,"NO"); 
6180:  MOVLW  04
6182:  MOVWF  FEA
6184:  MOVLW  EA
6186:  MOVWF  FE9
6188:  MOVFF  FF2,50A
618C:  BCF    FF2.7
618E:  MOVLW  00
6190:  CALL   0D1C
6194:  TBLRD*-
6196:  TBLRD*+
6198:  MOVF   FF5,W
619A:  MOVWF  FEE
619C:  IORLW  00
619E:  BNZ   6196
61A0:  MOVLB  5
61A2:  BTFSC  x0A.7
61A4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
61A6:  MOVLW  04
61A8:  MOVWF  x0B
61AA:  MOVLW  EA
61AC:  MOVWF  x0A
61AE:  MOVLW  32
61B0:  MOVWF  x0C
61B2:  MOVLW  2D
61B4:  MOVWF  x0D
61B6:  MOVLW  01
61B8:  MOVWF  x0E
61BA:  MOVLW  02
61BC:  MOVWF  x0F
61BE:  MOVLB  0
61C0:  CALL   16E2
61C4:  MOVLB  4
....................          } 
....................          visual=0; 
61C6:  BCF    x95.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
61C8:  BSF    F92.0
61CA:  BTFSS  F80.0
61CC:  BRA    61D8
....................       { 
....................          if(Opcion<2) 
61CE:  MOVF   xAC,W
61D0:  SUBLW  01
61D2:  BNC   61D6
....................          { 
....................             Opcion++; 
61D4:  INCF   xAC,F
....................          } 
....................          visual=1; 
61D6:  BSF    x95.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
61D8:  BSF    F92.1
61DA:  BTFSS  F80.1
61DC:  BRA    61E8
....................       {   
....................          if(Opcion>1) 
61DE:  MOVF   xAC,W
61E0:  SUBLW  01
61E2:  BC    61E6
....................          { 
....................             Opcion--; 
61E4:  DECF   xAC,F
....................          }   
....................          visual=1; 
61E6:  BSF    x95.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
61E8:  BSF    F92.2
61EA:  BTFSS  F80.2
61EC:  BRA    635E
....................       {   
....................          if(Opcion==2) 
61EE:  MOVF   xAC,W
61F0:  SUBLW  02
61F2:  BTFSS  FD8.2
61F4:  BRA    6330
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
61F6:  MOVLW  14
61F8:  MOVWF  xA2
61FA:  MOVLW  0F
61FC:  MOVLB  5
61FE:  MOVWF  x20
6200:  MOVLW  12
6202:  MOVWF  x21
6204:  MOVLW  1E
6206:  MOVWF  x22
6208:  MOVLW  35
620A:  MOVWF  x23
620C:  CLRF   x24
620E:  MOVLW  01
6210:  MOVWF  x25
6212:  MOVLB  0
6214:  CALL   1620
6218:  MOVLB  4
621A:  CLRF   xAE
621C:  MOVLW  C0
621E:  IORWF  FF2,F
6220:  MOVLB  5
6222:  CLRF   x0B
6224:  MOVLB  0
6226:  CALL   10B4
....................             strcpy(Menus.Letra,"Calentando"); 
622A:  MOVLW  04
622C:  MOVWF  FEA
622E:  MOVLW  EA
6230:  MOVWF  FE9
6232:  MOVFF  FF2,50A
6236:  BCF    FF2.7
6238:  MOVLW  00
623A:  CALL   09B2
623E:  TBLRD*-
6240:  TBLRD*+
6242:  MOVF   FF5,W
6244:  MOVWF  FEE
6246:  IORLW  00
6248:  BNZ   6240
624A:  MOVLB  5
624C:  BTFSC  x0A.7
624E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
6250:  MOVLW  04
6252:  MOVWF  x0B
6254:  MOVLW  EA
6256:  MOVWF  x0A
6258:  CLRF   x0C
625A:  MOVLW  37
625C:  MOVWF  x0D
625E:  MOVLW  02
6260:  MOVWF  x0E
6262:  MOVLW  01
6264:  MOVWF  x0F
6266:  MOVLB  0
6268:  CALL   16E2
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
626C:  MOVLW  0F
626E:  MOVLB  5
6270:  MOVWF  x20
6272:  MOVLW  12
6274:  MOVWF  x21
6276:  MOVLW  1E
6278:  MOVWF  x22
627A:  MOVLW  35
627C:  MOVWF  x23
627E:  CLRF   x24
6280:  MOVLW  01
6282:  MOVWF  x25
6284:  MOVLB  0
6286:  CALL   1620
....................             glcd_imagen(5); 
628A:  MOVLW  05
628C:  MOVLB  5
628E:  MOVWF  x0A
6290:  MOVLB  0
6292:  CALL   2136
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
6296:  MOVLW  04
6298:  MOVWF  FEA
629A:  MOVLW  EA
629C:  MOVWF  FE9
629E:  MOVFF  FF2,50A
62A2:  BCF    FF2.7
62A4:  MOVLW  00
62A6:  CALL   09D8
62AA:  TBLRD*-
62AC:  TBLRD*+
62AE:  MOVF   FF5,W
62B0:  MOVWF  FEE
62B2:  IORLW  00
62B4:  BNZ   62AC
62B6:  MOVLB  5
62B8:  BTFSC  x0A.7
62BA:  BSF    FF2.7
62BC:  MOVLW  04
62BE:  MOVWF  x0B
62C0:  MOVLW  EA
62C2:  MOVWF  x0A
62C4:  CLRF   x0C
62C6:  CLRF   x0D
62C8:  MOVLW  02
62CA:  MOVWF  x0E
62CC:  MOVLW  01
62CE:  MOVWF  x0F
62D0:  MOVLB  0
62D2:  CALL   16E2
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
62D6:  MOVLW  04
62D8:  MOVWF  FEA
62DA:  MOVLW  EA
62DC:  MOVWF  FE9
62DE:  MOVFF  FF2,50A
62E2:  BCF    FF2.7
62E4:  MOVLW  00
62E6:  CALL   09FA
62EA:  TBLRD*-
62EC:  TBLRD*+
62EE:  MOVF   FF5,W
62F0:  MOVWF  FEE
62F2:  IORLW  00
62F4:  BNZ   62EC
62F6:  MOVLB  5
62F8:  BTFSC  x0A.7
62FA:  BSF    FF2.7
62FC:  MOVLW  04
62FE:  MOVWF  x0B
6300:  MOVLW  EA
6302:  MOVWF  x0A
6304:  CLRF   x0C
6306:  MOVLW  08
6308:  MOVWF  x0D
630A:  MOVLW  02
630C:  MOVWF  x0E
630E:  MOVLW  01
6310:  MOVWF  x0F
6312:  MOVLB  0
6314:  CALL   16E2
....................             MuestraTiemposProgramados(); 
6318:  CALL   2632
....................             if(Nivel<6) 
631C:  MOVLB  4
631E:  MOVF   xBA,F
6320:  BNZ   632C
6322:  MOVF   xB9,W
6324:  SUBLW  05
6326:  BNC   632C
....................                { 
....................                   desfoguelento=1; 
6328:  BSF    x95.5
....................                } 
....................                else 
632A:  BRA    632E
....................                { 
....................                   desfoguelento=0; 
632C:  BCF    x95.5
....................                } 
....................          } 
....................          else 
632E:  BRA    635E
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6330:  MOVLW  04
6332:  MOVLB  5
6334:  MOVWF  x0A
6336:  MOVLW  AF
6338:  MOVWF  x0B
633A:  MOVLB  0
633C:  CALL   104A
6340:  MOVLB  5
6342:  DECFSZ x0A,F
6344:  BRA    6336
6346:  MOVLW  08
6348:  MOVLB  4
634A:  MOVWF  xA2
634C:  MOVLB  5
634E:  CLRF   x0B
6350:  MOVLB  0
6352:  CALL   10B4
6356:  MOVLW  01
6358:  MOVLB  4
635A:  MOVWF  xAC
635C:  BSF    x95.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
635E:  BSF    F92.3
6360:  BTFSS  F80.3
6362:  BRA    6392
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6364:  MOVLW  04
6366:  MOVLB  5
6368:  MOVWF  x0A
636A:  MOVLW  AF
636C:  MOVWF  x0B
636E:  MOVLB  0
6370:  CALL   104A
6374:  MOVLB  5
6376:  DECFSZ x0A,F
6378:  BRA    636A
637A:  MOVLW  08
637C:  MOVLB  4
637E:  MOVWF  xA2
6380:  MOVLB  5
6382:  CLRF   x0B
6384:  MOVLB  0
6386:  CALL   10B4
638A:  MOVLW  01
638C:  MOVLB  4
638E:  MOVWF  xAC
6390:  BSF    x95.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
6392:  MOVF   xA2,W
6394:  SUBLW  14
6396:  BTFSS  FD8.2
6398:  GOTO   6FD8
....................     
....................    Lectura_Esclavos(); 
639C:  MOVLB  0
639E:  CALL   1F78
....................     
....................    Envio_Esclavos(); 
63A2:  CALL   20D6
....................    // Nuevo Flujo de Programa con logica 2018 para ajustar ciclos de Pre-Vacio y de Vacio al final del ciclo// 
....................     
....................    if(Alarma>0 || Alarma2>0 || AlarmaAgua>0) 
63A6:  MOVLB  4
63A8:  MOVF   x92,F
63AA:  BNZ   63B6
63AC:  MOVF   x94,F
63AE:  BNZ   63B6
63B0:  MOVF   x93,F
63B2:  BTFSC  FD8.2
63B4:  BRA    6554
....................    { 
....................       if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
63B6:  DECFSZ x92,W
63B8:  BRA    641A
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
63BA:  MOVLB  5
63BC:  CLRF   x20
63BE:  MOVLW  37
63C0:  MOVWF  x21
63C2:  MOVLW  7F
63C4:  MOVWF  x22
63C6:  MOVLW  3F
63C8:  MOVWF  x23
63CA:  MOVLW  01
63CC:  MOVWF  x24
63CE:  CLRF   x25
63D0:  MOVLB  0
63D2:  CALL   1620
....................          strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
63D6:  MOVLW  04
63D8:  MOVWF  FEA
63DA:  MOVLW  EA
63DC:  MOVWF  FE9
63DE:  MOVFF  FF2,50A
63E2:  BCF    FF2.7
63E4:  MOVLW  00
63E6:  CALL   0D3A
63EA:  TBLRD*-
63EC:  TBLRD*+
63EE:  MOVF   FF5,W
63F0:  MOVWF  FEE
63F2:  IORLW  00
63F4:  BNZ   63EC
63F6:  MOVLB  5
63F8:  BTFSC  x0A.7
63FA:  BSF    FF2.7
63FC:  MOVLW  04
63FE:  MOVWF  x0B
6400:  MOVLW  EA
6402:  MOVWF  x0A
6404:  CLRF   x0C
6406:  MOVLW  37
6408:  MOVWF  x0D
640A:  MOVLW  02
640C:  MOVWF  x0E
640E:  MOVLW  01
6410:  MOVWF  x0F
6412:  MOVLB  0
6414:  CALL   16E2
6418:  MOVLB  4
....................       } 
....................        
....................       if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
641A:  MOVF   x92,W
641C:  SUBLW  02
641E:  BNZ   6484
....................       { 
....................          tiempo_esterilizacion=0;tiempo_secado=0; 
6420:  CLRF   xAD
6422:  CLRF   xAE
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6424:  MOVLB  5
6426:  CLRF   x20
6428:  MOVLW  37
642A:  MOVWF  x21
642C:  MOVLW  7F
642E:  MOVWF  x22
6430:  MOVLW  3F
6432:  MOVWF  x23
6434:  MOVLW  01
6436:  MOVWF  x24
6438:  CLRF   x25
643A:  MOVLB  0
643C:  CALL   1620
....................          strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6440:  MOVLW  04
6442:  MOVWF  FEA
6444:  MOVLW  EA
6446:  MOVWF  FE9
6448:  MOVFF  FF2,50A
644C:  BCF    FF2.7
644E:  MOVLW  00
6450:  CALL   0D60
6454:  TBLRD*-
6456:  TBLRD*+
6458:  MOVF   FF5,W
645A:  MOVWF  FEE
645C:  IORLW  00
645E:  BNZ   6456
6460:  MOVLB  5
6462:  BTFSC  x0A.7
6464:  BSF    FF2.7
6466:  MOVLW  04
6468:  MOVWF  x0B
646A:  MOVLW  EA
646C:  MOVWF  x0A
646E:  CLRF   x0C
6470:  MOVLW  37
6472:  MOVWF  x0D
6474:  MOVLW  02
6476:  MOVWF  x0E
6478:  MOVLW  01
647A:  MOVWF  x0F
647C:  MOVLB  0
647E:  CALL   16E2
6482:  MOVLB  4
....................       } 
....................           
....................       if(Alarma==3) // Alarma de Error de Agua: Error por Bajo Nivel de Agua Durante Funcionamiento 
6484:  MOVF   x92,W
6486:  SUBLW  03
6488:  BNZ   64EE
....................       { 
....................          tiempo_esterilizacion=0;tiempo_secado=0; 
648A:  CLRF   xAD
648C:  CLRF   xAE
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
648E:  MOVLB  5
6490:  CLRF   x20
6492:  MOVLW  37
6494:  MOVWF  x21
6496:  MOVLW  7F
6498:  MOVWF  x22
649A:  MOVLW  3F
649C:  MOVWF  x23
649E:  MOVLW  01
64A0:  MOVWF  x24
64A2:  CLRF   x25
64A4:  MOVLB  0
64A6:  CALL   1620
....................          strcpy(Menus.Letra,"Error:EA02");displayMenu(Menus.Letra,0,55,2,1);           
64AA:  MOVLW  04
64AC:  MOVWF  FEA
64AE:  MOVLW  EA
64B0:  MOVWF  FE9
64B2:  MOVFF  FF2,50A
64B6:  BCF    FF2.7
64B8:  MOVLW  00
64BA:  CALL   0D86
64BE:  TBLRD*-
64C0:  TBLRD*+
64C2:  MOVF   FF5,W
64C4:  MOVWF  FEE
64C6:  IORLW  00
64C8:  BNZ   64C0
64CA:  MOVLB  5
64CC:  BTFSC  x0A.7
64CE:  BSF    FF2.7
64D0:  MOVLW  04
64D2:  MOVWF  x0B
64D4:  MOVLW  EA
64D6:  MOVWF  x0A
64D8:  CLRF   x0C
64DA:  MOVLW  37
64DC:  MOVWF  x0D
64DE:  MOVLW  02
64E0:  MOVWF  x0E
64E2:  MOVLW  01
64E4:  MOVWF  x0F
64E6:  MOVLB  0
64E8:  CALL   16E2
64EC:  MOVLB  4
....................       } 
....................        
....................       if(AlarmaAgua==1) 
64EE:  DECFSZ x93,W
64F0:  BRA    6552
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
64F2:  MOVLB  5
64F4:  CLRF   x20
64F6:  MOVLW  37
64F8:  MOVWF  x21
64FA:  MOVLW  7F
64FC:  MOVWF  x22
64FE:  MOVLW  3F
6500:  MOVWF  x23
6502:  MOVLW  01
6504:  MOVWF  x24
6506:  CLRF   x25
6508:  MOVLB  0
650A:  CALL   1620
....................          strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
650E:  MOVLW  04
6510:  MOVWF  FEA
6512:  MOVLW  EA
6514:  MOVWF  FE9
6516:  MOVFF  FF2,50A
651A:  BCF    FF2.7
651C:  MOVLW  00
651E:  CALL   0DAC
6522:  TBLRD*-
6524:  TBLRD*+
6526:  MOVF   FF5,W
6528:  MOVWF  FEE
652A:  IORLW  00
652C:  BNZ   6524
652E:  MOVLB  5
6530:  BTFSC  x0A.7
6532:  BSF    FF2.7
6534:  MOVLW  04
6536:  MOVWF  x0B
6538:  MOVLW  EA
653A:  MOVWF  x0A
653C:  CLRF   x0C
653E:  MOVLW  37
6540:  MOVWF  x0D
6542:  MOVLW  02
6544:  MOVWF  x0E
6546:  MOVLW  01
6548:  MOVWF  x0F
654A:  MOVLB  0
654C:  CALL   16E2
6550:  MOVLB  4
....................       } 
....................           
....................    } 
....................    else 
6552:  BRA    694C
....................    { 
....................       if(Puerta==0) 
6554:  MOVF   x8D,F
6556:  BNZ   65BA
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6558:  MOVLB  5
655A:  CLRF   x20
655C:  MOVLW  37
655E:  MOVWF  x21
6560:  MOVLW  7F
6562:  MOVWF  x22
6564:  MOVLW  3F
6566:  MOVWF  x23
6568:  MOVLW  01
656A:  MOVWF  x24
656C:  CLRF   x25
656E:  MOVLB  0
6570:  CALL   1620
....................          strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
6574:  MOVLW  04
6576:  MOVWF  FEA
6578:  MOVLW  EA
657A:  MOVWF  FE9
657C:  MOVFF  FF2,50A
6580:  BCF    FF2.7
6582:  MOVLW  00
6584:  CALL   0DD2
6588:  TBLRD*-
658A:  TBLRD*+
658C:  MOVF   FF5,W
658E:  MOVWF  FEE
6590:  IORLW  00
6592:  BNZ   658A
6594:  MOVLB  5
6596:  BTFSC  x0A.7
6598:  BSF    FF2.7
659A:  MOVLW  04
659C:  MOVWF  x0B
659E:  MOVLW  EA
65A0:  MOVWF  x0A
65A2:  CLRF   x0C
65A4:  MOVLW  37
65A6:  MOVWF  x0D
65A8:  MOVLW  02
65AA:  MOVWF  x0E
65AC:  MOVLW  01
65AE:  MOVWF  x0F
65B0:  MOVLB  0
65B2:  CALL   16E2
....................       } 
....................       else 
65B6:  BRA    694E
65B8:  MOVLB  4
....................       { 
....................          if(NivelTanque==0) 
65BA:  MOVF   x90,F
65BC:  BNZ   6622
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
65BE:  MOVLB  5
65C0:  CLRF   x20
65C2:  MOVLW  37
65C4:  MOVWF  x21
65C6:  MOVLW  7F
65C8:  MOVWF  x22
65CA:  MOVLW  3F
65CC:  MOVWF  x23
65CE:  MOVLW  01
65D0:  MOVWF  x24
65D2:  CLRF   x25
65D4:  MOVLB  0
65D6:  CALL   1620
....................             strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
65DA:  MOVLW  04
65DC:  MOVWF  FEA
65DE:  MOVLW  EA
65E0:  MOVWF  FE9
65E2:  MOVFF  FF2,50A
65E6:  BCF    FF2.7
65E8:  MOVLW  00
65EA:  CALL   0DFC
65EE:  TBLRD*-
65F0:  TBLRD*+
65F2:  MOVF   FF5,W
65F4:  MOVWF  FEE
65F6:  IORLW  00
65F8:  BNZ   65F0
65FA:  MOVLB  5
65FC:  BTFSC  x0A.7
65FE:  BSF    FF2.7
6600:  MOVLW  04
6602:  MOVWF  x0B
6604:  MOVLW  EA
6606:  MOVWF  x0A
6608:  CLRF   x0C
660A:  MOVLW  37
660C:  MOVWF  x0D
660E:  MOVLW  02
6610:  MOVWF  x0E
6612:  MOVLW  01
6614:  MOVWF  x0F
6616:  MOVLB  0
6618:  CALL   16E2
....................             Control=0; 
661C:  MOVLB  4
661E:  CLRF   xA0
....................          } 
....................          else 
6620:  BRA    6630
....................          { 
....................             if(Calentar==10 && tiempo_esterilizacion==0) 
6622:  MOVF   xA8,W
6624:  SUBLW  0A
6626:  BNZ   6630
6628:  MOVF   xAD,F
662A:  BNZ   6630
....................             { 
....................                Prevacio=5; 
662C:  MOVLW  05
662E:  MOVWF  xA5
....................             } 
....................          } 
....................           
....................          if(Prevacio==5) 
6630:  MOVF   xA5,W
6632:  SUBLW  05
6634:  BNZ   66AC
....................          { 
....................             Control=0; 
6636:  CLRF   xA0
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
6638:  MOVLB  5
663A:  CLRF   x20
663C:  MOVLW  37
663E:  MOVWF  x21
6640:  MOVLW  7F
6642:  MOVWF  x22
6644:  MOVLW  3F
6646:  MOVWF  x23
6648:  MOVLW  01
664A:  MOVWF  x24
664C:  CLRF   x25
664E:  MOVLB  0
6650:  CALL   1620
....................             strcpy(Menus.Letra,"Pre-Vacio");displayMenu(Menus.Letra,0,55,2,1); 
6654:  MOVLW  04
6656:  MOVWF  FEA
6658:  MOVLW  EA
665A:  MOVWF  FE9
665C:  MOVFF  FF2,50A
6660:  BCF    FF2.7
6662:  MOVLW  00
6664:  CALL   0E20
6668:  TBLRD*-
666A:  TBLRD*+
666C:  MOVF   FF5,W
666E:  MOVWF  FEE
6670:  IORLW  00
6672:  BNZ   666A
6674:  MOVLB  5
6676:  BTFSC  x0A.7
6678:  BSF    FF2.7
667A:  MOVLW  04
667C:  MOVWF  x0B
667E:  MOVLW  EA
6680:  MOVWF  x0A
6682:  CLRF   x0C
6684:  MOVLW  37
6686:  MOVWF  x0D
6688:  MOVLW  02
668A:  MOVWF  x0E
668C:  MOVLW  01
668E:  MOVWF  x0F
6690:  MOVLB  0
6692:  CALL   16E2
....................             BombaVacio=5; 
6696:  MOVLW  05
6698:  MOVLB  4
669A:  MOVWF  x9E
....................             if(flagprevacio==5) 
669C:  MOVF   xA6,W
669E:  SUBLW  05
66A0:  BNZ   66AC
....................             { 
....................                Prevacio=10;BombaVacio=10;Calentar=5; 
66A2:  MOVLW  0A
66A4:  MOVWF  xA5
66A6:  MOVWF  x9E
66A8:  MOVLW  05
66AA:  MOVWF  xA8
....................             } 
....................          } 
....................           
....................          if(Calentar==5) 
66AC:  MOVF   xA8,W
66AE:  SUBLW  05
66B0:  BTFSS  FD8.2
66B2:  BRA    67AC
....................          { 
....................             Control=1; 
66B4:  MOVLW  01
66B6:  MOVWF  xA0
....................             if(tiempo_esterilizacion==0) 
66B8:  MOVF   xAD,F
66BA:  BNZ   6740
....................             { 
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
66BC:  MOVLW  0F
66BE:  MOVLB  5
66C0:  MOVWF  x20
66C2:  MOVLW  12
66C4:  MOVWF  x21
66C6:  MOVLW  1E
66C8:  MOVWF  x22
66CA:  MOVLW  35
66CC:  MOVWF  x23
66CE:  CLRF   x24
66D0:  MOVLW  01
66D2:  MOVWF  x25
66D4:  MOVLB  0
66D6:  CALL   1620
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
66DA:  MOVLB  5
66DC:  CLRF   x20
66DE:  MOVLW  37
66E0:  MOVWF  x21
66E2:  MOVLW  7F
66E4:  MOVWF  x22
66E6:  MOVLW  3F
66E8:  MOVWF  x23
66EA:  MOVLW  01
66EC:  MOVWF  x24
66EE:  CLRF   x25
66F0:  MOVLB  0
66F2:  CALL   1620
....................                strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
66F6:  MOVLW  04
66F8:  MOVWF  FEA
66FA:  MOVLW  EA
66FC:  MOVWF  FE9
66FE:  MOVFF  FF2,50A
6702:  BCF    FF2.7
6704:  MOVLW  00
6706:  CALL   09B2
670A:  TBLRD*-
670C:  TBLRD*+
670E:  MOVF   FF5,W
6710:  MOVWF  FEE
6712:  IORLW  00
6714:  BNZ   670C
6716:  MOVLB  5
6718:  BTFSC  x0A.7
671A:  BSF    FF2.7
671C:  MOVLW  04
671E:  MOVWF  x0B
6720:  MOVLW  EA
6722:  MOVWF  x0A
6724:  CLRF   x0C
6726:  MOVLW  37
6728:  MOVWF  x0D
672A:  MOVLW  02
672C:  MOVWF  x0E
672E:  MOVLW  01
6730:  MOVWF  x0F
6732:  MOVLB  0
6734:  CALL   16E2
....................                EVDesfogue=0;Control=1; 
6738:  MOVLB  4
673A:  CLRF   x99
673C:  MOVLW  01
673E:  MOVWF  xA0
....................             } 
....................                 
....................             if(tiempo_esterilizacion==1) 
6740:  DECFSZ xAD,W
6742:  BRA    67AC
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6744:  MOVLB  5
6746:  CLRF   x20
6748:  MOVLW  37
674A:  MOVWF  x21
674C:  MOVLW  7F
674E:  MOVWF  x22
6750:  MOVLW  3F
6752:  MOVWF  x23
6754:  MOVLW  01
6756:  MOVWF  x24
6758:  CLRF   x25
675A:  MOVLB  0
675C:  CALL   1620
....................                strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
6760:  MOVLW  04
6762:  MOVWF  FEA
6764:  MOVLW  EA
6766:  MOVWF  FE9
6768:  MOVFF  FF2,50A
676C:  BCF    FF2.7
676E:  MOVLW  00
6770:  CALL   0E44
6774:  TBLRD*-
6776:  TBLRD*+
6778:  MOVF   FF5,W
677A:  MOVWF  FEE
677C:  IORLW  00
677E:  BNZ   6776
6780:  MOVLB  5
6782:  BTFSC  x0A.7
6784:  BSF    FF2.7
6786:  MOVLW  04
6788:  MOVWF  x0B
678A:  MOVLW  EA
678C:  MOVWF  x0A
678E:  CLRF   x0C
6790:  MOVLW  37
6792:  MOVWF  x0D
6794:  MOVLW  02
6796:  MOVWF  x0E
6798:  MOVLW  01
679A:  MOVWF  x0F
679C:  MOVLB  0
679E:  CALL   16E2
....................                EVDesfogue=0;EVTrampa=0;Control=1; 
67A2:  MOVLB  4
67A4:  CLRF   x99
67A6:  CLRF   x9B
67A8:  MOVLW  01
67AA:  MOVWF  xA0
....................             } 
....................          } 
....................           
....................          if(tiempo_esterilizacion==2 && Calentar==20) 
67AC:  MOVF   xAD,W
67AE:  SUBLW  02
67B0:  BTFSS  FD8.2
67B2:  BRA    694C
67B4:  MOVF   xA8,W
67B6:  SUBLW  14
67B8:  BTFSS  FD8.2
67BA:  BRA    694C
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
67BC:  BTFSS  x95.5
67BE:  BRA    6888
....................             { 
....................                if(z==0) 
67C0:  BTFSC  x97.2
67C2:  BRA    6814
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
67C4:  MOVLB  5
67C6:  CLRF   x0A
67C8:  MOVLW  5A
67CA:  MOVWF  x0B
67CC:  MOVLW  38
67CE:  MOVWF  x0C
67D0:  MOVLB  0
67D2:  CALL   2B56
67D6:  MOVLW  19
67D8:  MOVLB  5
67DA:  MOVWF  x20
67DC:  MOVLW  12
67DE:  MOVWF  x21
67E0:  MOVLW  3C
67E2:  MOVWF  x22
67E4:  MOVLW  1A
67E6:  MOVWF  x23
67E8:  CLRF   x24
67EA:  CLRF   x25
67EC:  MOVLB  0
67EE:  CALL   1620
67F2:  MOVLW  37
67F4:  MOVLB  5
67F6:  MOVWF  x20
67F8:  MOVLW  12
67FA:  MOVWF  x21
67FC:  MOVLW  44
67FE:  MOVWF  x22
6800:  MOVLW  35
6802:  MOVWF  x23
6804:  CLRF   x24
6806:  MOVLW  01
6808:  MOVWF  x25
680A:  MOVLB  0
680C:  CALL   1620
6810:  MOVLB  4
6812:  BSF    x97.2
....................                } 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6814:  MOVLB  5
6816:  CLRF   x20
6818:  MOVLW  37
681A:  MOVWF  x21
681C:  MOVLW  7F
681E:  MOVWF  x22
6820:  MOVLW  3F
6822:  MOVWF  x23
6824:  MOVLW  01
6826:  MOVWF  x24
6828:  CLRF   x25
682A:  MOVLB  0
682C:  CALL   1620
....................                strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
6830:  MOVLW  04
6832:  MOVWF  FEA
6834:  MOVLW  EA
6836:  MOVWF  FE9
6838:  MOVFF  FF2,50A
683C:  BCF    FF2.7
683E:  MOVLW  00
6840:  CALL   0E6C
6844:  TBLRD*-
6846:  TBLRD*+
6848:  MOVF   FF5,W
684A:  MOVWF  FEE
684C:  IORLW  00
684E:  BNZ   6846
6850:  MOVLB  5
6852:  BTFSC  x0A.7
6854:  BSF    FF2.7
6856:  MOVLW  04
6858:  MOVWF  x0B
685A:  MOVLW  EA
685C:  MOVWF  x0A
685E:  CLRF   x0C
6860:  MOVLW  37
6862:  MOVWF  x0D
6864:  MOVLW  02
6866:  MOVWF  x0E
6868:  MOVLW  01
686A:  MOVWF  x0F
686C:  MOVLB  0
686E:  CALL   16E2
....................                glcd_imagen(5);        
6872:  MOVLW  05
6874:  MOVLB  5
6876:  MOVWF  x0A
6878:  MOVLB  0
687A:  CALL   2136
....................                Exhaust=2;tiempo_secado=2; 
687E:  MOVLW  02
6880:  MOVLB  4
6882:  MOVWF  xAF
6884:  MOVWF  xAE
....................             } 
....................             else 
6886:  BRA    694C
....................             { 
....................                if(z==0) 
6888:  BTFSC  x97.2
688A:  BRA    68DC
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
688C:  MOVLB  5
688E:  CLRF   x0A
6890:  MOVLW  5A
6892:  MOVWF  x0B
6894:  MOVLW  38
6896:  MOVWF  x0C
6898:  MOVLB  0
689A:  CALL   2B56
689E:  MOVLW  19
68A0:  MOVLB  5
68A2:  MOVWF  x20
68A4:  MOVLW  12
68A6:  MOVWF  x21
68A8:  MOVLW  3C
68AA:  MOVWF  x22
68AC:  MOVLW  1A
68AE:  MOVWF  x23
68B0:  CLRF   x24
68B2:  CLRF   x25
68B4:  MOVLB  0
68B6:  CALL   1620
68BA:  MOVLW  37
68BC:  MOVLB  5
68BE:  MOVWF  x20
68C0:  MOVLW  12
68C2:  MOVWF  x21
68C4:  MOVLW  44
68C6:  MOVWF  x22
68C8:  MOVLW  35
68CA:  MOVWF  x23
68CC:  CLRF   x24
68CE:  MOVLW  01
68D0:  MOVWF  x25
68D2:  MOVLB  0
68D4:  CALL   1620
68D8:  MOVLB  4
68DA:  BSF    x97.2
....................                   //tiempo_secado=1; 
....................                } 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
68DC:  MOVLB  5
68DE:  CLRF   x20
68E0:  MOVLW  37
68E2:  MOVWF  x21
68E4:  MOVLW  7F
68E6:  MOVWF  x22
68E8:  MOVLW  3F
68EA:  MOVWF  x23
68EC:  MOVLW  01
68EE:  MOVWF  x24
68F0:  CLRF   x25
68F2:  MOVLB  0
68F4:  CALL   1620
....................                strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
68F8:  MOVLW  04
68FA:  MOVWF  FEA
68FC:  MOVLW  EA
68FE:  MOVWF  FE9
6900:  MOVFF  FF2,50A
6904:  BCF    FF2.7
6906:  MOVLW  00
6908:  CALL   0E96
690C:  TBLRD*-
690E:  TBLRD*+
6910:  MOVF   FF5,W
6912:  MOVWF  FEE
6914:  IORLW  00
6916:  BNZ   690E
6918:  MOVLB  5
691A:  BTFSC  x0A.7
691C:  BSF    FF2.7
691E:  MOVLW  04
6920:  MOVWF  x0B
6922:  MOVLW  EA
6924:  MOVWF  x0A
6926:  CLRF   x0C
6928:  MOVLW  37
692A:  MOVWF  x0D
692C:  MOVLW  02
692E:  MOVWF  x0E
6930:  MOVLW  01
6932:  MOVWF  x0F
6934:  MOVLB  0
6936:  CALL   16E2
....................                glcd_imagen(5);    
693A:  MOVLW  05
693C:  MOVLB  5
693E:  MOVWF  x0A
6940:  MOVLB  0
6942:  CALL   2136
....................                Exhaust=1; 
6946:  MOVLW  01
6948:  MOVLB  4
694A:  MOVWF  xAF
694C:  MOVLB  0
....................             } 
....................                // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................       } 
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
694E:  MOVLB  4
6950:  BTFSS  x95.6
6952:  BRA    6CCC
....................    {                       
....................       Lectura=0; 
6954:  BCF    x95.6
....................       //displayTiempo(PresionCamara,31,35,2,1); 
....................       //displayTiempo(PresionPreCamara,31,44,2,1); 
....................       displayT(PresionCamara,31,35,1); 
6956:  MOVFF  4C0,50B
695A:  MOVFF  4BF,50A
695E:  MOVLB  0
6960:  CALL   1AA0
6964:  MOVFF  00,50A
6968:  MOVFF  01,50B
696C:  MOVFF  02,50C
6970:  MOVFF  03,50D
6974:  MOVFF  03,511
6978:  MOVFF  02,510
697C:  MOVFF  01,50F
6980:  MOVFF  00,50E
6984:  MOVLW  1F
6986:  MOVLB  5
6988:  MOVWF  x12
698A:  MOVLW  23
698C:  MOVWF  x13
698E:  MOVLW  01
6990:  MOVWF  x14
6992:  MOVLB  0
6994:  CALL   2AE0
....................       displayT(PresionPreCamara,31,44,1); 
6998:  MOVFF  4C2,50B
699C:  MOVFF  4C1,50A
69A0:  CALL   1AA0
69A4:  MOVFF  00,50A
69A8:  MOVFF  01,50B
69AC:  MOVFF  02,50C
69B0:  MOVFF  03,50D
69B4:  MOVFF  03,511
69B8:  MOVFF  02,510
69BC:  MOVFF  01,50F
69C0:  MOVFF  00,50E
69C4:  MOVLW  1F
69C6:  MOVLB  5
69C8:  MOVWF  x12
69CA:  MOVLW  2C
69CC:  MOVWF  x13
69CE:  MOVLW  01
69D0:  MOVWF  x14
69D2:  MOVLB  0
69D4:  CALL   2AE0
....................       glcd_rect(51, 35, 62, 48, YES, OFF);glcd_text57(52, 35, kpa, 1, ON); 
69D8:  MOVLW  33
69DA:  MOVLB  5
69DC:  MOVWF  x20
69DE:  MOVLW  23
69E0:  MOVWF  x21
69E2:  MOVLW  3E
69E4:  MOVWF  x22
69E6:  MOVLW  30
69E8:  MOVWF  x23
69EA:  MOVLW  01
69EC:  MOVWF  x24
69EE:  CLRF   x25
69F0:  MOVLB  0
69F2:  CALL   1620
69F6:  MOVLW  34
69F8:  MOVLB  5
69FA:  MOVWF  x1E
69FC:  MOVLW  23
69FE:  MOVWF  x1F
6A00:  MOVLW  04
6A02:  MOVWF  x21
6A04:  MOVLW  89
6A06:  MOVWF  x20
6A08:  MOVLW  01
6A0A:  MOVWF  x22
6A0C:  MOVWF  x23
6A0E:  MOVLB  0
6A10:  CALL   132A
....................       glcd_rect(51, 44, 62, 48, YES, OFF);glcd_text57(52, 44, kpa, 1, ON); 
6A14:  MOVLW  33
6A16:  MOVLB  5
6A18:  MOVWF  x20
6A1A:  MOVLW  2C
6A1C:  MOVWF  x21
6A1E:  MOVLW  3E
6A20:  MOVWF  x22
6A22:  MOVLW  30
6A24:  MOVWF  x23
6A26:  MOVLW  01
6A28:  MOVWF  x24
6A2A:  CLRF   x25
6A2C:  MOVLB  0
6A2E:  CALL   1620
6A32:  MOVLW  34
6A34:  MOVLB  5
6A36:  MOVWF  x1E
6A38:  MOVLW  2C
6A3A:  MOVWF  x1F
6A3C:  MOVLW  04
6A3E:  MOVWF  x21
6A40:  MOVLW  89
6A42:  MOVWF  x20
6A44:  MOVLW  01
6A46:  MOVWF  x22
6A48:  MOVWF  x23
6A4A:  MOVLB  0
6A4C:  CALL   132A
....................       displayTT(ADC_Pt100,69,20,2); 
6A50:  MOVFF  4C6,50D
6A54:  MOVFF  4C5,50C
6A58:  MOVFF  4C4,50B
6A5C:  MOVFF  4C3,50A
6A60:  MOVLW  45
6A62:  MOVLB  5
6A64:  MOVWF  x0E
6A66:  MOVLW  14
6A68:  MOVWF  x0F
6A6A:  MOVLW  02
6A6C:  MOVWF  x10
6A6E:  MOVLB  0
6A70:  GOTO   2B7A
....................       glcd_circle(95,40,2,NO,ON); 
6A74:  MOVLW  5F
6A76:  MOVLB  5
6A78:  MOVWF  x0A
6A7A:  MOVLW  28
6A7C:  MOVWF  x0B
6A7E:  MOVLW  02
6A80:  MOVWF  x0C
6A82:  CLRF   x0D
6A84:  MOVLW  01
6A86:  MOVWF  x0E
6A88:  MOVLB  0
6A8A:  CALL   2232
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
6A8E:  MOVLW  04
6A90:  MOVWF  FEA
6A92:  MOVLW  EA
6A94:  MOVWF  FE9
6A96:  MOVFF  FF2,50A
6A9A:  BCF    FF2.7
6A9C:  MOVLW  00
6A9E:  CALL   0A1C
6AA2:  TBLRD*-
6AA4:  TBLRD*+
6AA6:  MOVF   FF5,W
6AA8:  MOVWF  FEE
6AAA:  IORLW  00
6AAC:  BNZ   6AA4
6AAE:  MOVLB  5
6AB0:  BTFSC  x0A.7
6AB2:  BSF    FF2.7
6AB4:  MOVLW  04
6AB6:  MOVWF  x0B
6AB8:  MOVLW  EA
6ABA:  MOVWF  x0A
6ABC:  MOVLW  66
6ABE:  MOVWF  x0C
6AC0:  MOVLW  28
6AC2:  MOVWF  x0D
6AC4:  MOVLW  02
6AC6:  MOVWF  x0E
6AC8:  MOVWF  x0F
6ACA:  MOVLB  0
6ACC:  CALL   16E2
....................       displayTiempo(Setpoint,5,20,2,1); 
6AD0:  MOVFF  4A9,50B
6AD4:  MOVLW  05
6AD6:  MOVLB  5
6AD8:  MOVWF  x0C
6ADA:  MOVLW  14
6ADC:  MOVWF  x0D
6ADE:  MOVLW  02
6AE0:  MOVWF  x0E
6AE2:  MOVLW  01
6AE4:  MOVWF  x0F
6AE6:  MOVLB  0
6AE8:  CALL   24E2
....................  
....................       glcd_imagen(5); 
6AEC:  MOVLW  05
6AEE:  MOVLB  5
6AF0:  MOVWF  x0A
6AF2:  MOVLB  0
6AF4:  CALL   2136
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
6AF8:  MOVLW  04
6AFA:  MOVWF  FEA
6AFC:  MOVLW  EA
6AFE:  MOVWF  FE9
6B00:  MOVFF  FF2,50A
6B04:  BCF    FF2.7
6B06:  MOVLW  00
6B08:  CALL   09D8
6B0C:  TBLRD*-
6B0E:  TBLRD*+
6B10:  MOVF   FF5,W
6B12:  MOVWF  FEE
6B14:  IORLW  00
6B16:  BNZ   6B0E
6B18:  MOVLB  5
6B1A:  BTFSC  x0A.7
6B1C:  BSF    FF2.7
6B1E:  MOVLW  04
6B20:  MOVWF  x0B
6B22:  MOVLW  EA
6B24:  MOVWF  x0A
6B26:  CLRF   x0C
6B28:  CLRF   x0D
6B2A:  MOVLW  02
6B2C:  MOVWF  x0E
6B2E:  MOVLW  01
6B30:  MOVWF  x0F
6B32:  MOVLB  0
6B34:  CALL   16E2
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
6B38:  MOVLW  04
6B3A:  MOVWF  FEA
6B3C:  MOVLW  EA
6B3E:  MOVWF  FE9
6B40:  MOVFF  FF2,50A
6B44:  BCF    FF2.7
6B46:  MOVLW  00
6B48:  CALL   09FA
6B4C:  TBLRD*-
6B4E:  TBLRD*+
6B50:  MOVF   FF5,W
6B52:  MOVWF  FEE
6B54:  IORLW  00
6B56:  BNZ   6B4E
6B58:  MOVLB  5
6B5A:  BTFSC  x0A.7
6B5C:  BSF    FF2.7
6B5E:  MOVLW  04
6B60:  MOVWF  x0B
6B62:  MOVLW  EA
6B64:  MOVWF  x0A
6B66:  CLRF   x0C
6B68:  MOVLW  08
6B6A:  MOVWF  x0D
6B6C:  MOVLW  02
6B6E:  MOVWF  x0E
6B70:  MOVLW  01
6B72:  MOVWF  x0F
6B74:  MOVLB  0
6B76:  CALL   16E2
....................       MuestraTiemposProgramados(); 
6B7A:  CALL   2632
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
6B7E:  MOVFF  4CA,50B
6B82:  MOVLW  50
6B84:  MOVLB  5
6B86:  MOVWF  x0C
6B88:  CLRF   x0D
6B8A:  CLRF   x0E
6B8C:  MOVLW  01
6B8E:  MOVWF  x0F
6B90:  MOVLB  0
6B92:  CALL   24E2
6B96:  MOVFF  4C9,50B
6B9A:  MOVLW  56
6B9C:  MOVLB  5
6B9E:  MOVWF  x0C
6BA0:  CLRF   x0D
6BA2:  CLRF   x0E
6BA4:  MOVLW  01
6BA6:  MOVWF  x0F
6BA8:  MOVLB  0
6BAA:  CALL   24E2
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
6BAE:  MOVLW  04
6BB0:  MOVWF  FEA
6BB2:  MOVLW  EA
6BB4:  MOVWF  FE9
6BB6:  MOVFF  FF2,50A
6BBA:  BCF    FF2.7
6BBC:  MOVLW  00
6BBE:  CALL   06BE
6BC2:  TBLRD*-
6BC4:  TBLRD*+
6BC6:  MOVF   FF5,W
6BC8:  MOVWF  FEE
6BCA:  IORLW  00
6BCC:  BNZ   6BC4
6BCE:  MOVLB  5
6BD0:  BTFSC  x0A.7
6BD2:  BSF    FF2.7
6BD4:  MOVLW  04
6BD6:  MOVWF  x0B
6BD8:  MOVLW  EA
6BDA:  MOVWF  x0A
6BDC:  MOVLW  5C
6BDE:  MOVWF  x0C
6BE0:  CLRF   x0D
6BE2:  MOVLW  02
6BE4:  MOVWF  x0E
6BE6:  MOVLW  01
6BE8:  MOVWF  x0F
6BEA:  MOVLB  0
6BEC:  CALL   16E2
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6BF0:  MOVFF  4C8,50B
6BF4:  MOVLW  62
6BF6:  MOVLB  5
6BF8:  MOVWF  x0C
6BFA:  CLRF   x0D
6BFC:  CLRF   x0E
6BFE:  MOVLW  01
6C00:  MOVWF  x0F
6C02:  MOVLB  0
6C04:  CALL   24E2
6C08:  MOVFF  4C7,50B
6C0C:  MOVLW  68
6C0E:  MOVLB  5
6C10:  MOVWF  x0C
6C12:  CLRF   x0D
6C14:  CLRF   x0E
6C16:  MOVLW  01
6C18:  MOVWF  x0F
6C1A:  MOVLB  0
6C1C:  CALL   24E2
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
6C20:  MOVFF  4D2,50B
6C24:  MOVLW  50
6C26:  MOVLB  5
6C28:  MOVWF  x0C
6C2A:  MOVLW  08
6C2C:  MOVWF  x0D
6C2E:  CLRF   x0E
6C30:  MOVLW  01
6C32:  MOVWF  x0F
6C34:  MOVLB  0
6C36:  CALL   24E2
6C3A:  MOVFF  4D1,50B
6C3E:  MOVLW  56
6C40:  MOVLB  5
6C42:  MOVWF  x0C
6C44:  MOVLW  08
6C46:  MOVWF  x0D
6C48:  CLRF   x0E
6C4A:  MOVLW  01
6C4C:  MOVWF  x0F
6C4E:  MOVLB  0
6C50:  CALL   24E2
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
6C54:  MOVLW  04
6C56:  MOVWF  FEA
6C58:  MOVLW  EA
6C5A:  MOVWF  FE9
6C5C:  MOVFF  FF2,50A
6C60:  BCF    FF2.7
6C62:  MOVLW  00
6C64:  CALL   06BE
6C68:  TBLRD*-
6C6A:  TBLRD*+
6C6C:  MOVF   FF5,W
6C6E:  MOVWF  FEE
6C70:  IORLW  00
6C72:  BNZ   6C6A
6C74:  MOVLB  5
6C76:  BTFSC  x0A.7
6C78:  BSF    FF2.7
6C7A:  MOVLW  04
6C7C:  MOVWF  x0B
6C7E:  MOVLW  EA
6C80:  MOVWF  x0A
6C82:  MOVLW  5C
6C84:  MOVWF  x0C
6C86:  MOVLW  08
6C88:  MOVWF  x0D
6C8A:  MOVLW  02
6C8C:  MOVWF  x0E
6C8E:  MOVLW  01
6C90:  MOVWF  x0F
6C92:  MOVLB  0
6C94:  CALL   16E2
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
6C98:  MOVFF  4D0,50B
6C9C:  MOVLW  62
6C9E:  MOVLB  5
6CA0:  MOVWF  x0C
6CA2:  MOVLW  08
6CA4:  MOVWF  x0D
6CA6:  CLRF   x0E
6CA8:  MOVLW  01
6CAA:  MOVWF  x0F
6CAC:  MOVLB  0
6CAE:  CALL   24E2
6CB2:  MOVFF  4CF,50B
6CB6:  MOVLW  68
6CB8:  MOVLB  5
6CBA:  MOVWF  x0C
6CBC:  MOVLW  08
6CBE:  MOVWF  x0D
6CC0:  CLRF   x0E
6CC2:  MOVLW  01
6CC4:  MOVWF  x0F
6CC6:  MOVLB  0
6CC8:  CALL   24E2
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint)-0.3)// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
6CCC:  MOVLB  5
6CCE:  CLRF   x0B
6CD0:  MOVFF  4A9,50A
6CD4:  MOVLB  0
6CD6:  CALL   1AA0
6CDA:  MOVFF  00,50A
6CDE:  MOVFF  01,50B
6CE2:  MOVFF  02,50C
6CE6:  MOVFF  03,50D
6CEA:  BSF    FD8.1
6CEC:  MOVFF  03,511
6CF0:  MOVFF  02,510
6CF4:  MOVFF  01,50F
6CF8:  MOVFF  00,50E
6CFC:  MOVLW  9A
6CFE:  MOVLB  5
6D00:  MOVWF  x15
6D02:  MOVLW  99
6D04:  MOVWF  x14
6D06:  MOVLW  19
6D08:  MOVWF  x13
6D0A:  MOVLW  7D
6D0C:  MOVWF  x12
6D0E:  MOVLB  0
6D10:  CALL   1C36
6D14:  MOVFF  03,50D
6D18:  MOVFF  02,50C
6D1C:  MOVFF  01,50B
6D20:  MOVFF  00,50A
6D24:  MOVFF  4C6,511
6D28:  MOVFF  4C5,510
6D2C:  MOVFF  4C4,50F
6D30:  MOVFF  4C3,50E
6D34:  CALL   2BF4
6D38:  BC    6D3C
6D3A:  BNZ   6DA2
....................    { 
....................       if(est==0) 
6D3C:  MOVLB  4
6D3E:  BTFSC  x96.0
6D40:  BRA    6DA4
....................       { 
....................          tiempo_esterilizacion=1; 
6D42:  MOVLW  01
6D44:  MOVWF  xAD
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
6D46:  MOVLB  5
6D48:  CLRF   x0A
6D4A:  MOVLW  5A
6D4C:  MOVWF  x0B
6D4E:  MOVLW  38
6D50:  MOVWF  x0C
6D52:  MOVLB  0
6D54:  CALL   2B56
6D58:  MOVLW  0F
6D5A:  MOVLB  5
6D5C:  MOVWF  x20
6D5E:  MOVLW  12
6D60:  MOVWF  x21
6D62:  MOVLW  1E
6D64:  MOVWF  x22
6D66:  MOVLW  35
6D68:  MOVWF  x23
6D6A:  CLRF   x24
6D6C:  CLRF   x25
6D6E:  MOVLB  0
6D70:  CALL   1620
6D74:  MOVLW  19
6D76:  MOVLB  5
6D78:  MOVWF  x20
6D7A:  MOVLW  12
6D7C:  MOVWF  x21
6D7E:  MOVLW  3C
6D80:  MOVWF  x22
6D82:  MOVLW  1A
6D84:  MOVWF  x23
6D86:  CLRF   x24
6D88:  MOVLW  01
6D8A:  MOVWF  x25
6D8C:  MOVLB  0
6D8E:  CALL   1620
6D92:  MOVLB  4
6D94:  BSF    x96.0
....................          glcd_imagen(5); 
6D96:  MOVLW  05
6D98:  MOVLB  5
6D9A:  MOVWF  x0A
6D9C:  MOVLB  0
6D9E:  CALL   2136
6DA2:  MOVLB  4
....................       } 
....................    }   
....................     
....................    if((ADC_Pt100<((float)Setpoint-2.0)) && tiempo_esterilizacion==1) 
6DA4:  MOVLB  5
6DA6:  CLRF   x0B
6DA8:  MOVFF  4A9,50A
6DAC:  MOVLB  0
6DAE:  CALL   1AA0
6DB2:  MOVFF  00,50A
6DB6:  MOVFF  01,50B
6DBA:  MOVFF  02,50C
6DBE:  MOVFF  03,50D
6DC2:  BSF    FD8.1
6DC4:  MOVFF  03,511
6DC8:  MOVFF  02,510
6DCC:  MOVFF  01,50F
6DD0:  MOVFF  00,50E
6DD4:  MOVLB  5
6DD6:  CLRF   x15
6DD8:  CLRF   x14
6DDA:  CLRF   x13
6DDC:  MOVLW  80
6DDE:  MOVWF  x12
6DE0:  MOVLB  0
6DE2:  CALL   1C36
6DE6:  MOVFF  4C6,50D
6DEA:  MOVFF  4C5,50C
6DEE:  MOVFF  4C4,50B
6DF2:  MOVFF  4C3,50A
6DF6:  MOVFF  03,511
6DFA:  MOVFF  02,510
6DFE:  MOVFF  01,50F
6E02:  MOVFF  00,50E
6E06:  CALL   2BF4
6E0A:  BNC   6E1C
6E0C:  MOVLB  4
6E0E:  DECFSZ xAD,W
6E10:  BRA    6E14
6E12:  BRA    6E18
6E14:  MOVLB  0
6E16:  BRA    6E1C
....................    { 
....................       est=0;tiempo_esterilizacion=0; 
6E18:  BCF    x96.0
6E1A:  CLRF   xAD
....................    } 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
6E1C:  MOVLB  4
6E1E:  DECFSZ xAF,W
6E20:  BRA    6E46
6E22:  MOVF   xAD,W
6E24:  SUBLW  02
6E26:  BNZ   6E46
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
6E28:  CLRF   xA0
....................       if(PresionCamara<(Atmosferica+10)) 
6E2A:  MOVLW  0A
6E2C:  ADDWF  xAA,W
6E2E:  MOVF   xC0,F
6E30:  BNZ   6E42
6E32:  SUBWF  xBF,W
6E34:  BC    6E42
....................       { 
....................          tiempo_secado=1; 
6E36:  MOVLW  01
6E38:  MOVWF  xAE
....................          Control=0;EVDesfogue=3; 
6E3A:  CLRF   xA0
6E3C:  MOVLW  03
6E3E:  MOVWF  x99
....................       } 
....................       else 
6E40:  BRA    6E46
....................       { 
....................          EVDesfogue=1; 
6E42:  MOVLW  01
6E44:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
6E46:  MOVF   xAF,W
6E48:  SUBLW  02
6E4A:  BNZ   6E84
6E4C:  MOVF   xAD,W
6E4E:  SUBLW  02
6E50:  BNZ   6E84
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
6E52:  CLRF   xA0
....................       if(PresionCamara<(Atmosferica+20)) 
6E54:  MOVLW  14
6E56:  ADDWF  xAA,W
6E58:  MOVF   xC0,F
6E5A:  BNZ   6E66
6E5C:  SUBWF  xBF,W
6E5E:  BC    6E66
....................       { 
....................          EVDesfogue=1; 
6E60:  MOVLW  01
6E62:  MOVWF  x99
....................       } 
....................       else 
6E64:  BRA    6E6A
....................       { 
....................          EVDesfogue=2; 
6E66:  MOVLW  02
6E68:  MOVWF  x99
....................       } 
....................       if(PresionCamara<(Atmosferica+6)) 
6E6A:  MOVLW  06
6E6C:  ADDWF  xAA,W
6E6E:  MOVF   xC0,F
6E70:  BNZ   6E84
6E72:  SUBWF  xBF,W
6E74:  BC    6E84
....................       { 
....................          tiempo_esterilizacion=3; 
6E76:  MOVLW  03
6E78:  MOVWF  xAD
....................          tiempo_secado=2; 
6E7A:  MOVLW  02
6E7C:  MOVWF  xAE
....................          fin_ciclo=1; 
6E7E:  MOVLW  01
6E80:  MOVWF  xAB
....................          EVDesfogue=1; 
6E82:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1) 
6E84:  MOVF   xCB,W
6E86:  XORLW  80
6E88:  MOVWF  00
6E8A:  MOVF   xC7,W
6E8C:  XORLW  80
6E8E:  SUBWF  00,W
6E90:  BZ    6E94
6E92:  BC    6ED0
6E94:  MOVF   xCC,W
6E96:  XORLW  80
6E98:  MOVWF  00
6E9A:  MOVF   xC8,W
6E9C:  XORLW  80
6E9E:  SUBWF  00,W
6EA0:  BZ    6EA4
6EA2:  BC    6ED0
6EA4:  MOVF   xCD,W
6EA6:  XORLW  80
6EA8:  MOVWF  00
6EAA:  MOVF   xC9,W
6EAC:  XORLW  80
6EAE:  SUBWF  00,W
6EB0:  BZ    6EB4
6EB2:  BC    6ED0
6EB4:  MOVF   xCE,W
6EB6:  XORLW  80
6EB8:  MOVWF  00
6EBA:  MOVF   xCA,W
6EBC:  XORLW  80
6EBE:  SUBWF  00,W
6EC0:  BZ    6EC4
6EC2:  BC    6ED0
6EC4:  DECFSZ xAD,W
6EC6:  BRA    6ED0
....................    { 
....................       tiempo_esterilizacion=2;Calentar=20; 
6EC8:  MOVLW  02
6ECA:  MOVWF  xAD
6ECC:  MOVLW  14
6ECE:  MOVWF  xA8
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
6ED0:  MOVF   xD3,W
6ED2:  XORLW  80
6ED4:  MOVWF  00
6ED6:  MOVF   xCF,W
6ED8:  XORLW  80
6EDA:  SUBWF  00,W
6EDC:  BZ    6EE0
6EDE:  BC    6F24
6EE0:  MOVF   xD4,W
6EE2:  XORLW  80
6EE4:  MOVWF  00
6EE6:  MOVF   xD0,W
6EE8:  XORLW  80
6EEA:  SUBWF  00,W
6EEC:  BZ    6EF0
6EEE:  BC    6F24
6EF0:  MOVF   xD5,W
6EF2:  XORLW  80
6EF4:  MOVWF  00
6EF6:  MOVF   xD1,W
6EF8:  XORLW  80
6EFA:  SUBWF  00,W
6EFC:  BZ    6F00
6EFE:  BC    6F24
6F00:  MOVF   xD6,W
6F02:  XORLW  80
6F04:  MOVWF  00
6F06:  MOVF   xD2,W
6F08:  XORLW  80
6F0A:  SUBWF  00,W
6F0C:  BZ    6F10
6F0E:  BC    6F24
6F10:  DECFSZ xAE,W
6F12:  BRA    6F24
....................    { 
....................       tiempo_esterilizacion=3; 
6F14:  MOVLW  03
6F16:  MOVWF  xAD
....................       tiempo_secado=2; 
6F18:  MOVLW  02
6F1A:  MOVWF  xAE
....................       fin_ciclo=1; 
6F1C:  MOVLW  01
6F1E:  MOVWF  xAB
....................       Calentar=10; 
6F20:  MOVLW  0A
6F22:  MOVWF  xA8
....................    } 
....................     
....................    if(fin_ciclo==1) 
6F24:  DECFSZ xAB,W
6F26:  BRA    6F8E
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=4; 
6F28:  CLRF   xA0
6F2A:  MOVLW  04
6F2C:  MOVWF  x99
....................       glcd_rect(0, 55, 127, 63, YES, OFF); 
6F2E:  MOVLB  5
6F30:  CLRF   x20
6F32:  MOVLW  37
6F34:  MOVWF  x21
6F36:  MOVLW  7F
6F38:  MOVWF  x22
6F3A:  MOVLW  3F
6F3C:  MOVWF  x23
6F3E:  MOVLW  01
6F40:  MOVWF  x24
6F42:  CLRF   x25
6F44:  MOVLB  0
6F46:  CALL   1620
....................       strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1);  
6F4A:  MOVLW  04
6F4C:  MOVWF  FEA
6F4E:  MOVLW  EA
6F50:  MOVWF  FE9
6F52:  MOVFF  FF2,50A
6F56:  BCF    FF2.7
6F58:  MOVLW  00
6F5A:  CALL   0EB8
6F5E:  TBLRD*-
6F60:  TBLRD*+
6F62:  MOVF   FF5,W
6F64:  MOVWF  FEE
6F66:  IORLW  00
6F68:  BNZ   6F60
6F6A:  MOVLB  5
6F6C:  BTFSC  x0A.7
6F6E:  BSF    FF2.7
6F70:  MOVLW  04
6F72:  MOVWF  x0B
6F74:  MOVLW  EA
6F76:  MOVWF  x0A
6F78:  CLRF   x0C
6F7A:  MOVLW  37
6F7C:  MOVWF  x0D
6F7E:  MOVLW  02
6F80:  MOVWF  x0E
6F82:  MOVLW  01
6F84:  MOVWF  x0F
6F86:  MOVLB  0
6F88:  CALL   16E2
6F8C:  MOVLB  4
....................    } 
....................     
....................    if(RIGHT) 
6F8E:  BSF    F92.2
6F90:  BTFSS  F80.2
6F92:  BRA    6FCC
....................    { 
....................       glcd_init(ON); 
6F94:  MOVLW  01
6F96:  MOVLB  5
6F98:  MOVWF  x0A
6F9A:  MOVLB  0
6F9C:  CALL   11C6
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6FA0:  MOVLB  4
6FA2:  BCF    x96.2
6FA4:  BCF    x96.3
6FA6:  BCF    x96.4
6FA8:  BCF    x96.5
6FAA:  BCF    x96.6
6FAC:  BCF    x96.7
6FAE:  BCF    x97.0
6FB0:  BCF    x97.1
....................       disp_Alarma=0; 
6FB2:  BCF    x97.3
....................       delay_ms(1000); 
6FB4:  MOVLW  04
6FB6:  MOVLB  5
6FB8:  MOVWF  x0A
6FBA:  MOVLW  FA
6FBC:  MOVWF  x0B
6FBE:  MOVLB  0
6FC0:  CALL   104A
6FC4:  MOVLB  5
6FC6:  DECFSZ x0A,F
6FC8:  BRA    6FBA
6FCA:  MOVLB  4
....................    } 
....................    EVAgua=10; 
6FCC:  MOVLW  0A
6FCE:  MOVWF  x9A
....................    Envio_Esclavos(); 
6FD0:  MOVLB  0
6FD2:  CALL   20D6
6FD6:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6FD8:  MOVF   xA2,W
6FDA:  SUBLW  64
6FDC:  BTFSS  FD8.2
6FDE:  BRA    70DA
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
6FE0:  MOVFF  4DF,50B
6FE4:  MOVLB  5
6FE6:  CLRF   x0C
6FE8:  MOVLW  0A
6FEA:  MOVWF  x0D
6FEC:  MOVLW  02
6FEE:  MOVWF  x0E
6FF0:  MOVLW  01
6FF2:  MOVWF  x0F
6FF4:  MOVLB  0
6FF6:  CALL   24E2
....................    displayTiempo(datoRx[1],0,20,2,1); 
6FFA:  MOVFF  4E0,50B
6FFE:  MOVLB  5
7000:  CLRF   x0C
7002:  MOVLW  14
7004:  MOVWF  x0D
7006:  MOVLW  02
7008:  MOVWF  x0E
700A:  MOVLW  01
700C:  MOVWF  x0F
700E:  MOVLB  0
7010:  CALL   24E2
....................    displayTiempo(datoRx[2],0,30,2,1); 
7014:  MOVFF  4E1,50B
7018:  MOVLB  5
701A:  CLRF   x0C
701C:  MOVLW  1E
701E:  MOVWF  x0D
7020:  MOVLW  02
7022:  MOVWF  x0E
7024:  MOVLW  01
7026:  MOVWF  x0F
7028:  MOVLB  0
702A:  CALL   24E2
....................    displayTiempo(datoRx[3],0,40,2,1); 
702E:  MOVFF  4E2,50B
7032:  MOVLB  5
7034:  CLRF   x0C
7036:  MOVLW  28
7038:  MOVWF  x0D
703A:  MOVLW  02
703C:  MOVWF  x0E
703E:  MOVLW  01
7040:  MOVWF  x0F
7042:  MOVLB  0
7044:  CALL   24E2
....................    displayTiempo(Opcion,0,50,2,1); 
7048:  MOVFF  4AC,50B
704C:  MOVLB  5
704E:  CLRF   x0C
7050:  MOVLW  32
7052:  MOVWF  x0D
7054:  MOVLW  02
7056:  MOVWF  x0E
7058:  MOVLW  01
705A:  MOVWF  x0F
705C:  MOVLB  0
705E:  CALL   24E2
....................    Lectura_Esclavos(); 
7062:  CALL   1F78
....................    Opcion++; 
7066:  MOVLB  4
7068:  INCF   xAC,F
....................    displayTiempo(Puerta,50,10,2,1); 
706A:  MOVFF  48D,50B
706E:  MOVLW  32
7070:  MOVLB  5
7072:  MOVWF  x0C
7074:  MOVLW  0A
7076:  MOVWF  x0D
7078:  MOVLW  02
707A:  MOVWF  x0E
707C:  MOVLW  01
707E:  MOVWF  x0F
7080:  MOVLB  0
7082:  CALL   24E2
....................    displayTiempo(Parada,50,20,2,1); 
7086:  MOVFF  48E,50B
708A:  MOVLW  32
708C:  MOVLB  5
708E:  MOVWF  x0C
7090:  MOVLW  14
7092:  MOVWF  x0D
7094:  MOVLW  02
7096:  MOVWF  x0E
7098:  MOVLW  01
709A:  MOVWF  x0F
709C:  MOVLB  0
709E:  CALL   24E2
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
70A2:  MOVFF  4C6,50D
70A6:  MOVFF  4C5,50C
70AA:  MOVFF  4C4,50B
70AE:  MOVFF  4C3,50A
70B2:  GOTO   2C6E
70B6:  MOVFF  01,50A
70BA:  MOVFF  01,50B
70BE:  MOVLW  32
70C0:  MOVLB  5
70C2:  MOVWF  x0C
70C4:  MOVLW  1E
70C6:  MOVWF  x0D
70C8:  MOVLW  02
70CA:  MOVWF  x0E
70CC:  MOVLW  01
70CE:  MOVWF  x0F
70D0:  MOVLB  0
70D2:  CALL   24E2
....................     
....................  } 
70D6:  MOVLB  4
70D8:  BRA    6FD8
....................        
....................       while(Parada==0) 
....................       { 
70DA:  MOVF   x8E,F
70DC:  BNZ   7196
....................          Lectura_Esclavos(); 
70DE:  MOVLB  0
70E0:  CALL   1F78
....................          delay_ms(100); 
70E4:  MOVLW  64
70E6:  MOVLB  5
70E8:  MOVWF  x0B
70EA:  MOVLB  0
70EC:  CALL   104A
....................          if(disp_Stop==0) 
70F0:  MOVLB  4
70F2:  BTFSC  x96.7
70F4:  BRA    7194
....................          { 
....................             glcd_fillScreen(OFF);  
70F6:  MOVLB  5
70F8:  CLRF   x0B
70FA:  MOVLB  0
70FC:  CALL   10B4
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
7100:  MOVLW  04
7102:  MOVWF  FEA
7104:  MOVLW  EA
7106:  MOVWF  FE9
7108:  MOVFF  FF2,50A
710C:  BCF    FF2.7
710E:  MOVLW  00
7110:  CALL   0EE4
7114:  TBLRD*-
7116:  TBLRD*+
7118:  MOVF   FF5,W
711A:  MOVWF  FEE
711C:  IORLW  00
711E:  BNZ   7116
7120:  MOVLB  5
7122:  BTFSC  x0A.7
7124:  BSF    FF2.7
7126:  MOVLW  04
7128:  MOVWF  x0B
712A:  MOVLW  EA
712C:  MOVWF  x0A
712E:  CLRF   x0C
7130:  MOVLW  0A
7132:  MOVWF  x0D
7134:  CLRF   x0E
7136:  MOVLW  02
7138:  MOVWF  x0F
713A:  MOVLB  0
713C:  CALL   16E2
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
7140:  MOVLW  04
7142:  MOVWF  FEA
7144:  MOVLW  EA
7146:  MOVWF  FE9
7148:  MOVFF  FF2,50A
714C:  BCF    FF2.7
714E:  MOVLW  00
7150:  CALL   0F0A
7154:  TBLRD*-
7156:  TBLRD*+
7158:  MOVF   FF5,W
715A:  MOVWF  FEE
715C:  IORLW  00
715E:  BNZ   7156
7160:  MOVLB  5
7162:  BTFSC  x0A.7
7164:  BSF    FF2.7
7166:  MOVLW  04
7168:  MOVWF  x0B
716A:  MOVLW  EA
716C:  MOVWF  x0A
716E:  CLRF   x0C
7170:  MOVLW  1E
7172:  MOVWF  x0D
7174:  CLRF   x0E
7176:  MOVLW  02
7178:  MOVWF  x0F
717A:  MOVLB  0
717C:  CALL   16E2
7180:  MOVLB  4
7182:  BSF    x95.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
7184:  BCF    x96.2
7186:  BCF    x96.3
7188:  BCF    x96.4
718A:  BCF    x96.5
718C:  BCF    x96.6
718E:  BSF    x96.7
7190:  BCF    x97.0
7192:  BCF    x97.1
....................          } 
....................       }    
7194:  BRA    70DA
....................       if(Parada==1) 
7196:  DECFSZ x8E,W
7198:  BRA    7242
....................       { 
....................          while(emergency==1) 
....................          { 
719A:  BTFSS  x95.3
719C:  BRA    7242
....................             Lectura_Esclavos(); 
719E:  MOVLB  0
71A0:  CALL   1F78
....................             if(disp_Stop==1) 
71A4:  MOVLB  4
71A6:  BTFSS  x96.7
71A8:  BRA    71B8
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
71AA:  MOVLB  5
71AC:  CLRF   x0B
71AE:  MOVLB  0
71B0:  CALL   10B4
71B4:  MOVLB  4
71B6:  BCF    x96.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
71B8:  MOVLW  04
71BA:  MOVWF  FEA
71BC:  MOVLW  EA
71BE:  MOVWF  FE9
71C0:  MOVFF  FF2,50A
71C4:  BCF    FF2.7
71C6:  MOVLW  00
71C8:  MOVLB  0
71CA:  CALL   0F30
71CE:  TBLRD*-
71D0:  TBLRD*+
71D2:  MOVF   FF5,W
71D4:  MOVWF  FEE
71D6:  IORLW  00
71D8:  BNZ   71D0
71DA:  MOVLB  5
71DC:  BTFSC  x0A.7
71DE:  BSF    FF2.7
71E0:  MOVLW  04
71E2:  MOVWF  x0B
71E4:  MOVLW  EA
71E6:  MOVWF  x0A
71E8:  CLRF   x0C
71EA:  MOVLW  0A
71EC:  MOVWF  x0D
71EE:  CLRF   x0E
71F0:  MOVLW  02
71F2:  MOVWF  x0F
71F4:  MOVLB  0
71F6:  CALL   16E2
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
71FA:  MOVLW  04
71FC:  MOVWF  FEA
71FE:  MOVLW  EA
7200:  MOVWF  FE9
7202:  MOVFF  FF2,50A
7206:  BCF    FF2.7
7208:  MOVLW  00
720A:  CALL   0F56
720E:  TBLRD*-
7210:  TBLRD*+
7212:  MOVF   FF5,W
7214:  MOVWF  FEE
7216:  IORLW  00
7218:  BNZ   7210
721A:  MOVLB  5
721C:  BTFSC  x0A.7
721E:  BSF    FF2.7
7220:  MOVLW  04
7222:  MOVWF  x0B
7224:  MOVLW  EA
7226:  MOVWF  x0A
7228:  CLRF   x0C
722A:  MOVLW  1E
722C:  MOVWF  x0D
722E:  CLRF   x0E
7230:  MOVLW  02
7232:  MOVWF  x0F
7234:  MOVLB  0
7236:  CALL   16E2
....................          glcd_update();} 
723A:  CALL   110E
723E:  MOVLB  4
7240:  BRA    719A
....................       } 
....................    } 
7242:  MOVLB  0
7244:  GOTO   31E0
.................... } 
7248:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
