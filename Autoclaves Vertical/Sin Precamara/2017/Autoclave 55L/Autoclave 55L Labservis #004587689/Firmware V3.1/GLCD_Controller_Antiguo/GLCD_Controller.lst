CCS PCH C Compiler, Version 4.104, 5967               13-dic.-17 13:33

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclaves Vertical\Sin Precamara\2017\Autoclave 55L\Autoclave 55L Labservis #0045876XX\Firmware V3.1\GLCD_Controller\GLCD_Controller.lst

               ROM used: 29002 bytes (89%)
                         Largest free fragment is 3762
               RAM used: 1294 (63%) at main() level
                         1348 (66%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2CAC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0F7C
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
104A:  MOVLW  05
104C:  MOVWF  FEA
104E:  MOVLW  0B
1050:  MOVWF  FE9
1052:  MOVF   FEF,W
1054:  BZ    1072
1056:  MOVLW  0F
1058:  MOVWF  01
105A:  CLRF   00
105C:  DECFSZ 00,F
105E:  BRA    105C
1060:  DECFSZ 01,F
1062:  BRA    105A
1064:  MOVLW  8F
1066:  MOVWF  00
1068:  DECFSZ 00,F
106A:  BRA    1068
106C:  NOP   
106E:  DECFSZ FEF,F
1070:  BRA    1056
1072:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
19BE:  MOVLW  08
19C0:  MOVWF  01
19C2:  MOVLW  11
19C4:  MOVWF  00
19C6:  DECFSZ 00,F
19C8:  BRA    19C6
19CA:  BCF    F8A.1
19CC:  BCF    F93.1
19CE:  MOVLW  11
19D0:  MOVWF  00
19D2:  DECFSZ 00,F
19D4:  BRA    19D2
19D6:  MOVLB  5
19D8:  RLCF   x0E,F
19DA:  BCF    F8A.0
19DC:  BTFSC  FD8.0
19DE:  BSF    F93.0
19E0:  BTFSS  FD8.0
19E2:  BCF    F93.0
19E4:  BSF    F93.1
19E6:  BTFSS  F81.1
19E8:  BRA    19E6
19EA:  DECFSZ 01,F
19EC:  BRA    19F0
19EE:  BRA    19F4
19F0:  MOVLB  0
19F2:  BRA    19C2
19F4:  MOVLW  11
19F6:  MOVWF  00
19F8:  DECFSZ 00,F
19FA:  BRA    19F8
19FC:  BCF    F8A.1
19FE:  BCF    F93.1
1A00:  NOP   
1A02:  BSF    F93.0
1A04:  MOVLW  11
1A06:  MOVWF  00
1A08:  DECFSZ 00,F
1A0A:  BRA    1A08
1A0C:  MOVLW  11
1A0E:  MOVWF  00
1A10:  DECFSZ 00,F
1A12:  BRA    1A10
1A14:  BSF    F93.1
1A16:  BTFSS  F81.1
1A18:  BRA    1A16
1A1A:  CLRF   01
1A1C:  MOVLW  11
1A1E:  MOVWF  00
1A20:  DECFSZ 00,F
1A22:  BRA    1A20
1A24:  BTFSC  F81.0
1A26:  BSF    01.0
1A28:  BCF    F8A.1
1A2A:  BCF    F93.1
1A2C:  BCF    F8A.0
1A2E:  BCF    F93.0
1A30:  MOVLB  0
1A32:  RETLW  00
1A34:  MOVLW  08
1A36:  MOVLB  5
1A38:  MOVWF  x0E
1A3A:  MOVFF  00,50F
1A3E:  BSF    F93.0
1A40:  MOVLW  11
1A42:  MOVWF  00
1A44:  DECFSZ 00,F
1A46:  BRA    1A44
1A48:  BSF    F93.1
1A4A:  BTFSS  F81.1
1A4C:  BRA    1A4A
1A4E:  BTFSC  F81.0
1A50:  BSF    FD8.0
1A52:  BTFSS  F81.0
1A54:  BCF    FD8.0
1A56:  RLCF   01,F
1A58:  MOVLW  11
1A5A:  MOVWF  00
1A5C:  DECFSZ 00,F
1A5E:  BRA    1A5C
1A60:  BCF    F93.1
1A62:  BCF    F8A.1
1A64:  DECFSZ x0E,F
1A66:  BRA    1A3E
1A68:  BSF    F93.0
1A6A:  MOVLW  11
1A6C:  MOVWF  00
1A6E:  DECFSZ 00,F
1A70:  BRA    1A6E
1A72:  BCF    F8A.0
1A74:  MOVF   x0F,W
1A76:  BTFSS  FD8.2
1A78:  BCF    F93.0
1A7A:  NOP   
1A7C:  BSF    F93.1
1A7E:  BTFSS  F81.1
1A80:  BRA    1A7E
1A82:  MOVLW  11
1A84:  MOVWF  00
1A86:  DECFSZ 00,F
1A88:  BRA    1A86
1A8A:  BCF    F8A.1
1A8C:  BCF    F93.1
1A8E:  MOVLW  11
1A90:  MOVWF  00
1A92:  DECFSZ 00,F
1A94:  BRA    1A92
1A96:  BCF    F8A.0
1A98:  BCF    F93.0
1A9A:  MOVLB  0
1A9C:  GOTO   2002 (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
11C6:  BCF    F93.2
11C8:  BSF    F8A.2
....................    output_low(GLCD_E); 
11CA:  BCF    F93.7
11CC:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
11CE:  BCF    F93.3
11D0:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
11D2:  BCF    F93.4
11D4:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
11D6:  BCF    F93.5
11D8:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
11DA:  MOVLB  5
11DC:  CLRF   x20
11DE:  MOVLW  C0
11E0:  MOVWF  x21
11E2:  MOVLB  0
11E4:  RCALL  1074
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
11E6:  MOVLW  01
11E8:  MOVLB  5
11EA:  MOVWF  x20
11EC:  MOVLW  C0
11EE:  MOVWF  x21
11F0:  MOVLB  0
11F2:  RCALL  1074
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
11F4:  MOVLB  5
11F6:  CLRF   x20
11F8:  MOVLW  40
11FA:  MOVWF  x21
11FC:  MOVLB  0
11FE:  RCALL  1074
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
1200:  MOVLW  01
1202:  MOVLB  5
1204:  MOVWF  x20
1206:  MOVLW  40
1208:  MOVWF  x21
120A:  MOVLB  0
120C:  RCALL  1074
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
120E:  MOVLB  5
1210:  CLRF   x20
1212:  MOVLW  B8
1214:  MOVWF  x21
1216:  MOVLB  0
1218:  RCALL  1074
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
121A:  MOVLW  01
121C:  MOVLB  5
121E:  MOVWF  x20
1220:  MOVLW  B8
1222:  MOVWF  x21
1224:  MOVLB  0
1226:  RCALL  1074
....................  
....................    if(mode == ON) 
1228:  MOVLB  5
122A:  DECFSZ x0A,W
122C:  BRA    124A
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
122E:  CLRF   x20
1230:  MOVLW  3F
1232:  MOVWF  x21
1234:  MOVLB  0
1236:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1238:  MOVLW  01
123A:  MOVLB  5
123C:  MOVWF  x20
123E:  MOVLW  3F
1240:  MOVWF  x21
1242:  MOVLB  0
1244:  RCALL  1074
....................    } 
....................    else 
1246:  BRA    1262
1248:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
124A:  CLRF   x20
124C:  MOVLW  3E
124E:  MOVWF  x21
1250:  MOVLB  0
1252:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
1254:  MOVLW  01
1256:  MOVLB  5
1258:  MOVWF  x20
125A:  MOVLW  3E
125C:  MOVWF  x21
125E:  MOVLB  0
1260:  RCALL  1074
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
1262:  MOVLB  5
1264:  CLRF   x0B
1266:  MOVLB  0
1268:  RCALL  10B4
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
126A:  RCALL  110E
....................    #endif 
.................... } 
126C:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
110E:  MOVLB  5
1110:  CLRF   x1C
1112:  MOVLW  16
1114:  MOVWF  x1B
....................    p2 = displayData.right; 
1116:  MOVLW  02
1118:  MOVWF  x1E
111A:  MOVLW  16
111C:  MOVWF  x1D
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
111E:  CLRF   x19
1120:  MOVF   x19,W
1122:  SUBLW  07
1124:  BNC   11C2
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1126:  BCF    F93.5
1128:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
112A:  CLRF   x20
112C:  MOVLW  40
112E:  MOVWF  x21
1130:  MOVLB  0
1132:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1134:  MOVLW  01
1136:  MOVLB  5
1138:  MOVWF  x20
113A:  MOVLW  40
113C:  MOVWF  x21
113E:  MOVLB  0
1140:  RCALL  1074
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1142:  MOVLB  5
1144:  MOVF   x19,W
1146:  IORLW  B8
1148:  MOVWF  x1F
114A:  CLRF   x20
114C:  MOVWF  x21
114E:  MOVLB  0
1150:  RCALL  1074
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
1152:  MOVLB  5
1154:  MOVF   x19,W
1156:  IORLW  B8
1158:  MOVWF  x1F
115A:  MOVLW  01
115C:  MOVWF  x20
115E:  MOVFF  51F,521
1162:  MOVLB  0
1164:  RCALL  1074
....................       output_high(GLCD_DI);                     // Set for data 
1166:  BCF    F93.5
1168:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
116A:  MOVLB  5
116C:  CLRF   x1A
116E:  MOVF   x1A,W
1170:  SUBLW  3F
1172:  BNC   11BE
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
1174:  MOVFF  51C,03
1178:  MOVF   x1B,W
117A:  INCF   x1B,F
117C:  BTFSC  FD8.2
117E:  INCF   x1C,F
1180:  MOVWF  FE9
1182:  MOVFF  03,FEA
1186:  MOVFF  FEF,51F
118A:  CLRF   x20
118C:  MOVFF  51F,521
1190:  MOVLB  0
1192:  RCALL  1074
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
1194:  MOVLB  5
1196:  MOVFF  51E,03
119A:  MOVF   x1D,W
119C:  INCF   x1D,F
119E:  BTFSC  FD8.2
11A0:  INCF   x1E,F
11A2:  MOVWF  FE9
11A4:  MOVFF  03,FEA
11A8:  MOVFF  FEF,51F
11AC:  MOVLW  01
11AE:  MOVWF  x20
11B0:  MOVFF  51F,521
11B4:  MOVLB  0
11B6:  RCALL  1074
....................       } 
11B8:  MOVLB  5
11BA:  INCF   x1A,F
11BC:  BRA    116E
....................    } 
11BE:  INCF   x19,F
11C0:  BRA    1120
.................... } 
11C2:  MOVLB  0
11C4:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
126E:  MOVLB  5
1270:  CLRF   x41
1272:  RRCF   x3C,W
1274:  MOVWF  x40
1276:  RRCF   x40,F
1278:  RRCF   x40,F
127A:  MOVLW  1F
127C:  ANDWF  x40,F
....................    temp *= 64; 
127E:  RLCF   x40,F
1280:  RLCF   x41,F
1282:  RLCF   x40,F
1284:  RLCF   x41,F
1286:  RLCF   x40,F
1288:  RLCF   x41,F
128A:  RLCF   x40,F
128C:  RLCF   x41,F
128E:  RLCF   x40,F
1290:  RLCF   x41,F
1292:  RLCF   x40,F
1294:  RLCF   x41,F
1296:  MOVLW  C0
1298:  ANDWF  x40,F
....................    temp += x; 
129A:  MOVF   x3B,W
129C:  ADDWF  x40,F
129E:  MOVLW  00
12A0:  ADDWFC x41,F
....................  
....................    if(x > 63) 
12A2:  MOVF   x3B,W
12A4:  SUBLW  3F
12A6:  BC    12C2
....................    { 
....................       p = displayData.right + temp - 64; 
12A8:  MOVLW  16
12AA:  ADDWF  x40,W
12AC:  MOVWF  x42
12AE:  MOVLW  02
12B0:  ADDWFC x41,W
12B2:  MOVWF  x43
12B4:  MOVLW  40
12B6:  SUBWF  x42,W
12B8:  MOVWF  x3E
12BA:  MOVLW  00
12BC:  SUBWFB x43,W
12BE:  MOVWF  x3F
....................    } 
....................    else 
12C0:  BRA    12CE
....................    { 
....................       p = displayData.left + temp; 
12C2:  MOVLW  16
12C4:  ADDWF  x40,W
12C6:  MOVWF  x3E
12C8:  MOVLW  00
12CA:  ADDWFC x41,W
12CC:  MOVWF  x3F
....................    } 
....................  
....................    if(color) 
12CE:  MOVF   x3D,F
12D0:  BZ    12FC
....................    { 
....................       bit_set(*p, y%8); 
12D2:  MOVFF  53F,03
12D6:  MOVFF  53E,FE9
12DA:  MOVFF  53F,FEA
12DE:  MOVF   x3C,W
12E0:  ANDLW  07
12E2:  MOVWF  x42
12E4:  MOVLW  01
12E6:  MOVWF  00
12E8:  MOVF   x42,W
12EA:  MOVWF  01
12EC:  BZ    12F6
12EE:  BCF    FD8.0
12F0:  RLCF   00,F
12F2:  DECFSZ 01,F
12F4:  BRA    12EE
12F6:  MOVF   00,W
12F8:  IORWF  FEF,F
....................    } 
....................    else 
12FA:  BRA    1326
....................    { 
....................       bit_clear(*p, y%8); 
12FC:  MOVFF  53F,03
1300:  MOVFF  53E,FE9
1304:  MOVFF  53F,FEA
1308:  MOVF   x3C,W
130A:  ANDLW  07
130C:  MOVWF  x42
130E:  MOVLW  01
1310:  MOVWF  00
1312:  MOVF   x42,W
1314:  MOVWF  01
1316:  BZ    1320
1318:  BCF    FD8.0
131A:  RLCF   00,F
131C:  DECFSZ 01,F
131E:  BRA    1318
1320:  MOVF   00,W
1322:  XORLW  FF
1324:  ANDWF  FEF,F
....................    } 
.................... } 
1326:  MOVLB  0
1328:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
10B4:  MOVLB  5
10B6:  CLRF   x0E
10B8:  MOVLW  16
10BA:  MOVWF  x0D
....................    p2 = displayData.right; 
10BC:  MOVLW  02
10BE:  MOVWF  x10
10C0:  MOVLW  16
10C2:  MOVWF  x0F
....................    data = 0xFF * color; 
10C4:  MOVF   x0B,W
10C6:  MULLW  FF
10C8:  MOVFF  FF3,50C
....................  
....................    for(i=0; i<512; ++i) 
10CC:  CLRF   x12
10CE:  CLRF   x11
10D0:  MOVF   x12,W
10D2:  SUBLW  01
10D4:  BNC   110A
....................    { 
....................       *p1++ = data; 
10D6:  MOVFF  50E,03
10DA:  MOVF   x0D,W
10DC:  INCF   x0D,F
10DE:  BTFSC  FD8.2
10E0:  INCF   x0E,F
10E2:  MOVWF  FE9
10E4:  MOVFF  03,FEA
10E8:  MOVFF  50C,FEF
....................       *p2++ = data; 
10EC:  MOVFF  510,03
10F0:  MOVF   x0F,W
10F2:  INCF   x0F,F
10F4:  BTFSC  FD8.2
10F6:  INCF   x10,F
10F8:  MOVWF  FE9
10FA:  MOVFF  03,FEA
10FE:  MOVFF  50C,FEF
....................    } 
1102:  INCF   x11,F
1104:  BTFSC  FD8.2
1106:  INCF   x12,F
1108:  BRA    10D0
.................... } 
110A:  MOVLB  0
110C:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
1074:  MOVLB  5
1076:  MOVF   x20,F
1078:  BZ    1080
....................       output_high(GLCD_CS2); 
107A:  BCF    F93.4
107C:  BSF    F8A.4
....................    else 
107E:  BRA    1084
....................       output_high(GLCD_CS1); 
1080:  BCF    F93.3
1082:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
1084:  BCF    F93.6
1086:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
1088:  CLRF   F95
108A:  MOVFF  521,F8C
....................    delay_cycles(50); 
108E:  MOVLW  10
1090:  MOVWF  00
1092:  DECFSZ 00,F
1094:  BRA    1092
1096:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
1098:  BCF    F93.7
109A:  BSF    F8A.7
....................    delay_cycles(250); 
109C:  MOVLW  53
109E:  MOVWF  00
10A0:  DECFSZ 00,F
10A2:  BRA    10A0
....................    output_low(GLCD_E); 
10A4:  BCF    F93.7
10A6:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
10A8:  BCF    F93.3
10AA:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
10AC:  BCF    F93.4
10AE:  BCF    F8A.4
.................... } 
10B0:  MOVLB  0
10B2:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
14E2:  MOVLW  01
14E4:  MOVLB  5
14E6:  MOVWF  x34
14E8:  MOVWF  x35
14EA:  CLRF   x3A
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
14EC:  MOVF   x2B,W
14EE:  SUBWF  x2D,W
14F0:  MOVWF  x3B
14F2:  MOVF   x3B,W
14F4:  BTFSS  x3B.7
14F6:  BRA    14FE
14F8:  MOVLW  00
14FA:  BSF    FD8.0
14FC:  SUBFWB x3B,W
14FE:  CLRF   03
1500:  MOVWF  x32
1502:  MOVFF  03,533
....................    dy = abs((signed int8)(y2 - y1)); 
1506:  MOVF   x2C,W
1508:  SUBWF  x2E,W
150A:  MOVWF  x3B
150C:  MOVF   x3B,W
150E:  BTFSS  x3B.7
1510:  BRA    1518
1512:  MOVLW  00
1514:  BSF    FD8.0
1516:  SUBFWB x3B,W
1518:  CLRF   03
151A:  MOVWF  x30
151C:  MOVFF  03,531
....................    #endif 
....................  
....................    if(x1 > x2) 
1520:  MOVF   x2B,W
1522:  SUBWF  x2D,W
1524:  BC    152A
....................       addx = -1; 
1526:  MOVLW  FF
1528:  MOVWF  x34
....................    if(y1 > y2) 
152A:  MOVF   x2C,W
152C:  SUBWF  x2E,W
152E:  BC    1534
....................       addy = -1; 
1530:  MOVLW  FF
1532:  MOVWF  x35
....................  
....................    if(dx >= dy) 
1534:  MOVF   x31,W
1536:  SUBWF  x33,W
1538:  BNC   15B0
153A:  BNZ   1542
153C:  MOVF   x30,W
153E:  SUBWF  x32,W
1540:  BNC   15B0
....................    { 
....................       dy *= 2; 
1542:  BCF    FD8.0
1544:  RLCF   x30,F
1546:  RLCF   x31,F
....................       P = dy - dx; 
1548:  MOVF   x32,W
154A:  SUBWF  x30,W
154C:  MOVWF  00
154E:  MOVF   x33,W
1550:  SUBWFB x31,W
1552:  MOVFF  00,536
1556:  MOVWF  x37
....................       diff = P - dx; 
1558:  MOVF   x32,W
155A:  SUBWF  x36,W
155C:  MOVWF  x38
155E:  MOVF   x33,W
1560:  SUBWFB x37,W
1562:  MOVWF  x39
....................  
....................       for(; i<=dx; ++i) 
1564:  MOVF   x33,F
1566:  BNZ   156E
1568:  MOVF   x3A,W
156A:  SUBWF  x32,W
156C:  BNC   15AE
....................       { 
....................          glcd_pixel(x1, y1, color); 
156E:  MOVFF  52B,53B
1572:  MOVFF  52C,53C
1576:  MOVFF  52F,53D
157A:  MOVLB  0
157C:  RCALL  126E
....................  
....................          if(P < 0) 
157E:  MOVLB  5
1580:  BTFSC  x37.7
1582:  BRA    1586
1584:  BRA    1596
....................          { 
....................             P  += dy; 
1586:  MOVF   x30,W
1588:  ADDWF  x36,F
158A:  MOVF   x31,W
158C:  ADDWFC x37,F
....................             x1 += addx; 
158E:  MOVF   x34,W
1590:  ADDWF  x2B,W
1592:  MOVWF  x2B
....................          } 
....................          else 
1594:  BRA    15AA
....................          { 
....................             P  += diff; 
1596:  MOVF   x38,W
1598:  ADDWF  x36,F
159A:  MOVF   x39,W
159C:  ADDWFC x37,F
....................             x1 += addx; 
159E:  MOVF   x34,W
15A0:  ADDWF  x2B,W
15A2:  MOVWF  x2B
....................             y1 += addy; 
15A4:  MOVF   x35,W
15A6:  ADDWF  x2C,W
15A8:  MOVWF  x2C
....................          } 
....................       } 
15AA:  INCF   x3A,F
15AC:  BRA    1564
....................    } 
....................    else 
15AE:  BRA    161C
....................    { 
....................       dx *= 2; 
15B0:  BCF    FD8.0
15B2:  RLCF   x32,F
15B4:  RLCF   x33,F
....................       P = dx - dy; 
15B6:  MOVF   x30,W
15B8:  SUBWF  x32,W
15BA:  MOVWF  00
15BC:  MOVF   x31,W
15BE:  SUBWFB x33,W
15C0:  MOVFF  00,536
15C4:  MOVWF  x37
....................       diff = P - dy; 
15C6:  MOVF   x30,W
15C8:  SUBWF  x36,W
15CA:  MOVWF  x38
15CC:  MOVF   x31,W
15CE:  SUBWFB x37,W
15D0:  MOVWF  x39
....................  
....................       for(; i<=dy; ++i) 
15D2:  MOVF   x31,F
15D4:  BNZ   15DC
15D6:  MOVF   x3A,W
15D8:  SUBWF  x30,W
15DA:  BNC   161C
....................       { 
....................          glcd_pixel(x1, y1, color); 
15DC:  MOVFF  52B,53B
15E0:  MOVFF  52C,53C
15E4:  MOVFF  52F,53D
15E8:  MOVLB  0
15EA:  RCALL  126E
....................  
....................          if(P < 0) 
15EC:  MOVLB  5
15EE:  BTFSC  x37.7
15F0:  BRA    15F4
15F2:  BRA    1604
....................          { 
....................             P  += dx; 
15F4:  MOVF   x32,W
15F6:  ADDWF  x36,F
15F8:  MOVF   x33,W
15FA:  ADDWFC x37,F
....................             y1 += addy; 
15FC:  MOVF   x35,W
15FE:  ADDWF  x2C,W
1600:  MOVWF  x2C
....................          } 
....................          else 
1602:  BRA    1618
....................          { 
....................             P  += diff; 
1604:  MOVF   x38,W
1606:  ADDWF  x36,F
1608:  MOVF   x39,W
160A:  ADDWFC x37,F
....................             x1 += addx; 
160C:  MOVF   x34,W
160E:  ADDWF  x2B,W
1610:  MOVWF  x2B
....................             y1 += addy; 
1612:  MOVF   x35,W
1614:  ADDWF  x2C,W
1616:  MOVWF  x2C
....................          } 
....................       } 
1618:  INCF   x3A,F
161A:  BRA    15D2
....................    } 
.................... } 
161C:  MOVLB  0
161E:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1620:  MOVLB  5
1622:  MOVF   x24,F
1624:  BZ    1682
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1626:  MOVF   x22,W
1628:  SUBWF  x20,W
162A:  BC    1636
....................       { 
....................          xmin = x1; 
162C:  MOVFF  520,527
....................          xmax = x2; 
1630:  MOVFF  522,528
....................       } 
....................       else 
1634:  BRA    163E
....................       { 
....................          xmin = x2; 
1636:  MOVFF  522,527
....................          xmax = x1; 
163A:  MOVFF  520,528
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
163E:  MOVF   x23,W
1640:  SUBWF  x21,W
1642:  BC    164E
....................       { 
....................          ymin = y1; 
1644:  MOVFF  521,529
....................          ymax = y2; 
1648:  MOVFF  523,52A
....................       } 
....................       else 
164C:  BRA    1656
....................       { 
....................          ymin = y2; 
164E:  MOVFF  523,529
....................          ymax = y1; 
1652:  MOVFF  521,52A
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
1656:  MOVF   x27,W
1658:  SUBWF  x28,W
165A:  BNC   1680
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
165C:  MOVFF  529,526
1660:  MOVF   x26,W
1662:  SUBWF  x2A,W
1664:  BNC   167C
....................          { 
....................             glcd_pixel(xmin, i, color); 
1666:  MOVFF  527,53B
166A:  MOVFF  526,53C
166E:  MOVFF  525,53D
1672:  MOVLB  0
1674:  RCALL  126E
....................          } 
1676:  MOVLB  5
1678:  INCF   x26,F
167A:  BRA    1660
....................       } 
167C:  INCF   x27,F
167E:  BRA    1656
....................    } 
....................    else 
1680:  BRA    16DE
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
1682:  MOVFF  520,52B
1686:  MOVFF  521,52C
168A:  MOVFF  522,52D
168E:  MOVFF  521,52E
1692:  MOVFF  525,52F
1696:  MOVLB  0
1698:  RCALL  14E2
....................       glcd_line(x1, y2, x2, y2, color); 
169A:  MOVFF  520,52B
169E:  MOVFF  523,52C
16A2:  MOVFF  522,52D
16A6:  MOVFF  523,52E
16AA:  MOVFF  525,52F
16AE:  RCALL  14E2
....................       glcd_line(x1, y1, x1, y2, color); 
16B0:  MOVFF  520,52B
16B4:  MOVFF  521,52C
16B8:  MOVFF  520,52D
16BC:  MOVFF  523,52E
16C0:  MOVFF  525,52F
16C4:  RCALL  14E2
....................       glcd_line(x2, y1, x2, y2, color); 
16C6:  MOVFF  522,52B
16CA:  MOVFF  521,52C
16CE:  MOVFF  522,52D
16D2:  MOVFF  523,52E
16D6:  MOVFF  525,52F
16DA:  RCALL  14E2
16DC:  MOVLB  5
....................    } 
.................... } 
16DE:  MOVLB  0
16E0:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2232:  MOVLB  5
2234:  CLRF   x0F
....................    b = radius; 
2236:  MOVFF  50C,510
....................    P = 1 - radius; 
223A:  MOVLW  01
223C:  BSF    FD8.0
223E:  SUBFWB x0C,W
2240:  MOVWF  x11
....................  
....................    do 
....................    { 
....................       if(fill) 
2242:  MOVF   x0D,F
2244:  BZ    2310
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
2246:  MOVF   x0F,W
2248:  SUBWF  x0A,W
224A:  MOVWF  x12
224C:  MOVF   x10,W
224E:  ADDWF  x0B,W
2250:  MOVWF  x13
2252:  MOVF   x0F,W
2254:  ADDWF  x0A,W
2256:  MOVWF  x14
2258:  MOVF   x10,W
225A:  ADDWF  x0B,W
225C:  MOVWF  x15
225E:  MOVFF  512,52B
2262:  MOVFF  513,52C
2266:  MOVFF  514,52D
226A:  MOVWF  x2E
226C:  MOVFF  50E,52F
2270:  MOVLB  0
2272:  CALL   14E2
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
2276:  MOVLB  5
2278:  MOVF   x0F,W
227A:  SUBWF  x0A,W
227C:  MOVWF  x12
227E:  MOVF   x10,W
2280:  SUBWF  x0B,W
2282:  MOVWF  x13
2284:  MOVF   x0F,W
2286:  ADDWF  x0A,W
2288:  MOVWF  x14
228A:  MOVF   x10,W
228C:  SUBWF  x0B,W
228E:  MOVWF  x15
2290:  MOVFF  512,52B
2294:  MOVFF  513,52C
2298:  MOVFF  514,52D
229C:  MOVWF  x2E
229E:  MOVFF  50E,52F
22A2:  MOVLB  0
22A4:  CALL   14E2
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
22A8:  MOVLB  5
22AA:  MOVF   x10,W
22AC:  SUBWF  x0A,W
22AE:  MOVWF  x12
22B0:  MOVF   x0F,W
22B2:  ADDWF  x0B,W
22B4:  MOVWF  x13
22B6:  MOVF   x10,W
22B8:  ADDWF  x0A,W
22BA:  MOVWF  x14
22BC:  MOVF   x0F,W
22BE:  ADDWF  x0B,W
22C0:  MOVWF  x15
22C2:  MOVFF  512,52B
22C6:  MOVFF  513,52C
22CA:  MOVFF  514,52D
22CE:  MOVWF  x2E
22D0:  MOVFF  50E,52F
22D4:  MOVLB  0
22D6:  CALL   14E2
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
22DA:  MOVLB  5
22DC:  MOVF   x10,W
22DE:  SUBWF  x0A,W
22E0:  MOVWF  x12
22E2:  MOVF   x0F,W
22E4:  SUBWF  x0B,W
22E6:  MOVWF  x13
22E8:  MOVF   x10,W
22EA:  ADDWF  x0A,W
22EC:  MOVWF  x14
22EE:  MOVF   x0F,W
22F0:  SUBWF  x0B,W
22F2:  MOVWF  x15
22F4:  MOVFF  512,52B
22F8:  MOVFF  513,52C
22FC:  MOVFF  514,52D
2300:  MOVWF  x2E
2302:  MOVFF  50E,52F
2306:  MOVLB  0
2308:  CALL   14E2
....................       } 
....................       else 
230C:  BRA    23FE
230E:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2310:  MOVF   x0A,W
2312:  ADDWF  x0F,W
2314:  MOVWF  x12
2316:  MOVF   x0B,W
2318:  ADDWF  x10,W
231A:  MOVWF  x13
231C:  MOVFF  512,53B
2320:  MOVWF  x3C
2322:  MOVFF  50E,53D
2326:  MOVLB  0
2328:  CALL   126E
....................          glcd_pixel(b+x, a+y, color); 
232C:  MOVLB  5
232E:  MOVF   x0A,W
2330:  ADDWF  x10,W
2332:  MOVWF  x12
2334:  MOVF   x0B,W
2336:  ADDWF  x0F,W
2338:  MOVWF  x13
233A:  MOVFF  512,53B
233E:  MOVWF  x3C
2340:  MOVFF  50E,53D
2344:  MOVLB  0
2346:  CALL   126E
....................          glcd_pixel(x-a, b+y, color); 
234A:  MOVLB  5
234C:  MOVF   x0F,W
234E:  SUBWF  x0A,W
2350:  MOVWF  x12
2352:  MOVF   x0B,W
2354:  ADDWF  x10,W
2356:  MOVWF  x13
2358:  MOVFF  512,53B
235C:  MOVWF  x3C
235E:  MOVFF  50E,53D
2362:  MOVLB  0
2364:  CALL   126E
....................          glcd_pixel(x-b, a+y, color); 
2368:  MOVLB  5
236A:  MOVF   x10,W
236C:  SUBWF  x0A,W
236E:  MOVWF  x12
2370:  MOVF   x0B,W
2372:  ADDWF  x0F,W
2374:  MOVWF  x13
2376:  MOVFF  512,53B
237A:  MOVWF  x3C
237C:  MOVFF  50E,53D
2380:  MOVLB  0
2382:  CALL   126E
....................          glcd_pixel(b+x, y-a, color); 
2386:  MOVLB  5
2388:  MOVF   x0A,W
238A:  ADDWF  x10,W
238C:  MOVWF  x12
238E:  MOVF   x0F,W
2390:  SUBWF  x0B,W
2392:  MOVWF  x13
2394:  MOVFF  512,53B
2398:  MOVWF  x3C
239A:  MOVFF  50E,53D
239E:  MOVLB  0
23A0:  CALL   126E
....................          glcd_pixel(a+x, y-b, color); 
23A4:  MOVLB  5
23A6:  MOVF   x0A,W
23A8:  ADDWF  x0F,W
23AA:  MOVWF  x12
23AC:  MOVF   x10,W
23AE:  SUBWF  x0B,W
23B0:  MOVWF  x13
23B2:  MOVFF  512,53B
23B6:  MOVWF  x3C
23B8:  MOVFF  50E,53D
23BC:  MOVLB  0
23BE:  CALL   126E
....................          glcd_pixel(x-a, y-b, color); 
23C2:  MOVLB  5
23C4:  MOVF   x0F,W
23C6:  SUBWF  x0A,W
23C8:  MOVWF  x12
23CA:  MOVF   x10,W
23CC:  SUBWF  x0B,W
23CE:  MOVWF  x13
23D0:  MOVFF  512,53B
23D4:  MOVWF  x3C
23D6:  MOVFF  50E,53D
23DA:  MOVLB  0
23DC:  CALL   126E
....................          glcd_pixel(x-b, y-a, color); 
23E0:  MOVLB  5
23E2:  MOVF   x10,W
23E4:  SUBWF  x0A,W
23E6:  MOVWF  x12
23E8:  MOVF   x0F,W
23EA:  SUBWF  x0B,W
23EC:  MOVWF  x13
23EE:  MOVFF  512,53B
23F2:  MOVWF  x3C
23F4:  MOVFF  50E,53D
23F8:  MOVLB  0
23FA:  CALL   126E
....................       } 
....................  
....................       if(P < 0) 
23FE:  MOVLB  5
2400:  BTFSC  x11.7
2402:  BRA    2406
2404:  BRA    2422
....................          P += 3 + 2 * a++; 
2406:  MOVF   x0F,W
2408:  INCF   x0F,F
240A:  MOVWF  x12
240C:  MOVLW  02
240E:  MOVWF  x13
2410:  MOVFF  512,514
2414:  MOVLB  0
2416:  RCALL  21E4
2418:  MOVF   01,W
241A:  ADDLW  03
241C:  MOVLB  5
241E:  ADDWF  x11,F
....................       else 
2420:  BRA    2444
....................          P += 5 + 2 * (a++ - b--); 
2422:  MOVF   x0F,W
2424:  INCF   x0F,F
2426:  MOVWF  x12
2428:  MOVF   x10,W
242A:  DECF   x10,F
242C:  SUBWF  x12,W
242E:  MOVWF  x12
2430:  MOVLW  02
2432:  MOVWF  x13
2434:  MOVFF  512,514
2438:  MOVLB  0
243A:  RCALL  21E4
243C:  MOVF   01,W
243E:  ADDLW  05
2440:  MOVLB  5
2442:  ADDWF  x11,F
....................     } while(a <= b); 
2444:  MOVF   x0F,W
2446:  XORLW  80
2448:  MOVWF  00
244A:  MOVF   x10,W
244C:  XORLW  80
244E:  SUBWF  00,W
2450:  BTFSC  FD8.2
2452:  BRA    2242
2454:  BTFSS  FD8.0
2456:  BRA    2242
.................... } 
2458:  MOVLB  0
245A:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
132A:  MOVFF  521,03
132E:  MOVLB  5
1330:  MOVFF  520,FE9
1334:  MOVFF  521,FEA
1338:  MOVF   FEF,F
133A:  BTFSC  FD8.2
133C:  BRA    14DE
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
133E:  MOVFF  521,03
1342:  MOVFF  520,FE9
1346:  MOVFF  521,FEA
134A:  MOVF   FEF,W
134C:  SUBLW  52
134E:  BNC   139E
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1350:  MOVFF  521,03
1354:  MOVFF  520,FE9
1358:  MOVFF  521,FEA
135C:  MOVLW  20
135E:  SUBWF  FEF,W
1360:  MULLW  05
1362:  MOVF   FF3,W
1364:  CLRF   03
1366:  MOVWF  x2D
1368:  MOVLW  05
136A:  MOVWF  FEA
136C:  MOVLW  28
136E:  MOVWF  FE9
1370:  CLRF   x31
1372:  MOVFF  52D,530
1376:  MOVFF  FF2,52E
137A:  BCF    FF2.7
137C:  MOVLW  05
137E:  MOVWF  01
1380:  CLRF   FF7
1382:  MOVF   x2D,W
1384:  MOVLB  0
1386:  CALL   0096
138A:  TBLRD*-
138C:  TBLRD*+
138E:  MOVFF  FF5,FEE
1392:  DECFSZ 01,F
1394:  BRA    138C
1396:  MOVLB  5
1398:  BTFSC  x2E.7
139A:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
139C:  BRA    1408
139E:  MOVFF  521,03
13A2:  MOVFF  520,FE9
13A6:  MOVFF  521,FEA
13AA:  MOVF   FEF,W
13AC:  SUBLW  7E
13AE:  BNC   13FE
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
13B0:  MOVFF  521,03
13B4:  MOVFF  520,FE9
13B8:  MOVFF  521,FEA
13BC:  MOVLW  53
13BE:  SUBWF  FEF,W
13C0:  MULLW  05
13C2:  MOVF   FF3,W
13C4:  CLRF   03
13C6:  MOVWF  x2D
13C8:  MOVLW  05
13CA:  MOVWF  FEA
13CC:  MOVLW  28
13CE:  MOVWF  FE9
13D0:  CLRF   x31
13D2:  MOVFF  52D,530
13D6:  MOVFF  FF2,52E
13DA:  BCF    FF2.7
13DC:  MOVLW  05
13DE:  MOVWF  01
13E0:  CLRF   FF7
13E2:  MOVF   x2D,W
13E4:  MOVLB  0
13E6:  CALL   01B0
13EA:  TBLRD*-
13EC:  TBLRD*+
13EE:  MOVFF  FF5,FEE
13F2:  DECFSZ 01,F
13F4:  BRA    13EC
13F6:  MOVLB  5
13F8:  BTFSC  x2E.7
13FA:  BSF    FF2.7
....................       else 
13FC:  BRA    1408
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
13FE:  CLRF   x28
1400:  CLRF   x29
1402:  CLRF   x2A
1404:  CLRF   x2B
1406:  CLRF   x2C
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1408:  MOVFF  521,03
140C:  MOVF   x20,W
140E:  MOVWF  FE9
1410:  MOVFF  03,FEA
1414:  MOVF   FEF,W
1416:  XORLW  0A
1418:  MOVLB  0
141A:  BZ    1422
141C:  XORLW  07
141E:  BZ    1432
1420:  BRA    1438
....................          case '\n': 
....................             y += 7*size + 1; 
1422:  MOVLB  5
1424:  MOVF   x22,W
1426:  MULLW  07
1428:  MOVF   FF3,W
142A:  ADDLW  01
142C:  ADDWF  x1F,F
....................             continue; 
142E:  BRA    14D0
1430:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1432:  MOVLB  5
1434:  CLRF   x1E
....................             continue; 
1436:  BRA    14D0
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1438:  MOVLB  5
143A:  MOVF   x22,W
143C:  MULLW  05
143E:  MOVF   FF3,W
1440:  ADDWF  x1E,W
1442:  SUBLW  7F
1444:  BC    1452
....................       { 
....................          x = 0;                           // Set x at far left position 
1446:  CLRF   x1E
....................          y += 7*size + 1;                 // Set y at next position down 
1448:  MOVF   x22,W
144A:  MULLW  07
144C:  MOVF   FF3,W
144E:  ADDLW  01
1450:  ADDWF  x1F,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1452:  CLRF   x24
1454:  MOVF   x24,W
1456:  SUBLW  04
1458:  BNC   14D0
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
145A:  CLRF   x25
145C:  MOVF   x25,W
145E:  SUBLW  06
1460:  BNC   14C8
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1462:  CLRF   03
1464:  MOVF   x24,W
1466:  ADDLW  28
1468:  MOVWF  FE9
146A:  MOVLW  05
146C:  ADDWFC 03,W
146E:  MOVWF  FEA
1470:  MOVFF  FEF,52D
1474:  MOVFF  52D,00
1478:  MOVF   x25,W
147A:  MOVWF  01
147C:  BZ    1486
147E:  BCF    FD8.0
1480:  RRCF   00,F
1482:  DECFSZ 01,F
1484:  BRA    147E
1486:  BTFSS  00.0
1488:  BRA    14C4
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
148A:  CLRF   x26
148C:  MOVF   x22,W
148E:  SUBWF  x26,W
1490:  BC    14C4
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
1492:  CLRF   x27
1494:  MOVF   x22,W
1496:  SUBWF  x27,W
1498:  BC    14C0
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
149A:  MOVF   x27,W
149C:  ADDWF  x1E,W
149E:  MOVWF  x2D
14A0:  MOVF   x25,W
14A2:  MULWF  x22
14A4:  MOVF   FF3,W
14A6:  ADDWF  x1F,W
14A8:  ADDWF  x26,W
14AA:  MOVWF  x2E
14AC:  MOVFF  52D,53B
14B0:  MOVWF  x3C
14B2:  MOVFF  523,53D
14B6:  MOVLB  0
14B8:  RCALL  126E
....................                   } 
14BA:  MOVLB  5
14BC:  INCF   x27,F
14BE:  BRA    1494
....................                } 
14C0:  INCF   x26,F
14C2:  BRA    148C
....................             } 
....................          } 
14C4:  INCF   x25,F
14C6:  BRA    145C
....................       } 
14C8:  INCF   x24,F
14CA:  MOVF   x22,W
14CC:  ADDWF  x1E,F
14CE:  BRA    1454
....................    } 
14D0:  INCF   x20,F
14D2:  BTFSC  FD8.2
14D4:  INCF   x21,F
14D6:  INCF   x1E,F
14D8:  MOVLB  0
14DA:  BRA    132A
14DC:  MOVLB  5
.................... } 
14DE:  MOVLB  0
14E0:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0,Prevacio=10,flagprevacio=10,flagvacio=10,Calentar=10; 
.................... int8 Setpoint=0,Atmosferica=71,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0,PresionCamara=0,PresionPreCamara=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
16E2:  MOVLB  5
16E4:  MOVFF  50A,01
16E8:  MOVFF  50B,03
16EC:  MOVFF  50A,510
16F0:  MOVFF  50B,511
16F4:  MOVLW  04
16F6:  MOVWF  FEA
16F8:  MOVLW  EA
16FA:  MOVWF  FE9
16FC:  MOVFF  50B,FE2
1700:  MOVFF  50A,FE1
1704:  MOVF   FE7,F
1706:  MOVFF  FE6,FEE
170A:  BNZ   1704
....................    if(sombreado==2) 
170C:  MOVF   x0E,W
170E:  SUBLW  02
1710:  BNZ   173A
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1712:  MOVLW  01
1714:  ADDWF  x0C,W
1716:  MOVWF  x10
1718:  MOVLW  01
171A:  ADDWF  x0D,W
171C:  MOVWF  x11
171E:  MOVFF  510,51E
1722:  MOVWF  x1F
1724:  MOVLW  04
1726:  MOVWF  x21
1728:  MOVLW  EA
172A:  MOVWF  x20
172C:  MOVFF  50F,522
1730:  MOVLW  01
1732:  MOVWF  x23
1734:  MOVLB  0
1736:  RCALL  132A
1738:  MOVLB  5
....................    if(sombreado==1) 
173A:  DECFSZ x0E,W
173C:  BRA    1788
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
173E:  MOVF   x0F,W
1740:  MULLW  08
1742:  MOVF   FF3,W
1744:  ADDWF  x0D,W
1746:  MOVWF  x10
1748:  CLRF   x20
174A:  MOVFF  50D,521
174E:  MOVLW  7F
1750:  MOVWF  x22
1752:  MOVFF  510,523
1756:  MOVLW  01
1758:  MOVWF  x24
175A:  MOVWF  x25
175C:  MOVLB  0
175E:  RCALL  1620
1760:  MOVLW  01
1762:  MOVLB  5
1764:  ADDWF  x0C,W
1766:  MOVWF  x10
1768:  MOVLW  01
176A:  ADDWF  x0D,W
176C:  MOVWF  x11
176E:  MOVFF  510,51E
1772:  MOVWF  x1F
1774:  MOVLW  04
1776:  MOVWF  x21
1778:  MOVLW  EA
177A:  MOVWF  x20
177C:  MOVFF  50F,522
1780:  CLRF   x23
1782:  MOVLB  0
1784:  RCALL  132A
1786:  MOVLB  5
....................    if(sombreado==0) 
1788:  MOVF   x0E,F
178A:  BNZ   17D6
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
178C:  MOVF   x0F,W
178E:  MULLW  08
1790:  MOVF   FF3,W
1792:  ADDWF  x0D,W
1794:  MOVWF  x10
1796:  CLRF   x20
1798:  MOVFF  50D,521
179C:  MOVLW  7F
179E:  MOVWF  x22
17A0:  MOVFF  510,523
17A4:  MOVLW  01
17A6:  MOVWF  x24
17A8:  CLRF   x25
17AA:  MOVLB  0
17AC:  RCALL  1620
17AE:  MOVLW  01
17B0:  MOVLB  5
17B2:  ADDWF  x0C,W
17B4:  MOVWF  x10
17B6:  MOVLW  01
17B8:  ADDWF  x0D,W
17BA:  MOVWF  x11
17BC:  MOVFF  510,51E
17C0:  MOVWF  x1F
17C2:  MOVLW  04
17C4:  MOVWF  x21
17C6:  MOVLW  EA
17C8:  MOVWF  x20
17CA:  MOVFF  50F,522
17CE:  MOVLW  01
17D0:  MOVWF  x23
17D2:  MOVLB  0
17D4:  RCALL  132A
....................    glcd_update(); 
17D6:  MOVLB  0
17D8:  RCALL  110E
.................... } 
17DA:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
24E2:  MOVLB  5
24E4:  MOVF   x0E,W
24E6:  SUBLW  02
24E8:  BNZ   255A
....................    { 
....................       sprintf(voltage, "%03u", digito); 
24EA:  MOVLW  05
24EC:  MOVWF  x09
24EE:  MOVLW  10
24F0:  MOVWF  x08
24F2:  MOVFF  50B,519
24F6:  MOVLW  03
24F8:  MOVWF  x1A
24FA:  MOVLB  0
24FC:  RCALL  245C
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
24FE:  MOVLB  5
2500:  MOVF   x0F,W
2502:  MULLW  12
2504:  MOVF   FF3,W
2506:  ADDWF  x0C,W
2508:  MOVWF  x19
250A:  MOVF   x0F,W
250C:  MULLW  08
250E:  MOVF   FF3,W
2510:  ADDWF  x0D,W
2512:  MOVWF  x1A
2514:  MOVFF  50C,520
2518:  MOVFF  50D,521
251C:  MOVFF  519,522
2520:  MOVWF  x23
2522:  MOVLW  01
2524:  MOVWF  x24
2526:  MOVWF  x25
2528:  MOVLB  0
252A:  CALL   1620
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
252E:  MOVLW  01
2530:  MOVLB  5
2532:  ADDWF  x0C,W
2534:  MOVWF  x19
2536:  MOVLW  01
2538:  ADDWF  x0D,W
253A:  MOVWF  x1A
253C:  MOVFF  519,51E
2540:  MOVWF  x1F
2542:  MOVLW  05
2544:  MOVWF  x21
2546:  MOVLW  10
2548:  MOVWF  x20
254A:  MOVFF  50F,522
254E:  CLRF   x23
2550:  MOVLB  0
2552:  CALL   132A
....................    } 
....................    else 
2556:  BRA    2628
2558:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
255A:  MOVLW  05
255C:  MOVWF  x09
255E:  MOVLW  10
2560:  MOVWF  x08
2562:  MOVFF  50B,519
2566:  MOVLW  1B
2568:  MOVWF  x1A
256A:  MOVLB  0
256C:  RCALL  245C
....................     
....................       if(sombreado==1) 
256E:  MOVLB  5
2570:  DECFSZ x0E,W
2572:  BRA    25CC
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
2574:  MOVF   x0F,W
2576:  MULLW  05
2578:  MOVF   FF3,W
257A:  ADDWF  x0C,W
257C:  MOVWF  x19
257E:  MOVF   x0F,W
2580:  MULLW  08
2582:  MOVF   FF3,W
2584:  ADDWF  x0D,W
2586:  MOVWF  x1A
2588:  MOVFF  50C,520
258C:  MOVFF  50D,521
2590:  MOVFF  519,522
2594:  MOVWF  x23
2596:  MOVLW  01
2598:  MOVWF  x24
259A:  MOVWF  x25
259C:  MOVLB  0
259E:  CALL   1620
25A2:  MOVLW  01
25A4:  MOVLB  5
25A6:  ADDWF  x0C,W
25A8:  MOVWF  x19
25AA:  MOVLW  01
25AC:  ADDWF  x0D,W
25AE:  MOVWF  x1A
25B0:  MOVFF  519,51E
25B4:  MOVWF  x1F
25B6:  MOVLW  05
25B8:  MOVWF  x21
25BA:  MOVLW  10
25BC:  MOVWF  x20
25BE:  MOVFF  50F,522
25C2:  CLRF   x23
25C4:  MOVLB  0
25C6:  CALL   132A
25CA:  MOVLB  5
....................       if(sombreado==0) 
25CC:  MOVF   x0E,F
25CE:  BNZ   262A
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
25D0:  MOVF   x0F,W
25D2:  MULLW  05
25D4:  MOVF   FF3,W
25D6:  ADDWF  x0C,W
25D8:  MOVWF  x19
25DA:  MOVF   x0F,W
25DC:  MULLW  08
25DE:  MOVF   FF3,W
25E0:  ADDWF  x0D,W
25E2:  MOVWF  x1A
25E4:  MOVFF  50C,520
25E8:  MOVFF  50D,521
25EC:  MOVFF  519,522
25F0:  MOVWF  x23
25F2:  MOVLW  01
25F4:  MOVWF  x24
25F6:  CLRF   x25
25F8:  MOVLB  0
25FA:  CALL   1620
25FE:  MOVLW  01
2600:  MOVLB  5
2602:  ADDWF  x0C,W
2604:  MOVWF  x19
2606:  MOVLW  01
2608:  ADDWF  x0D,W
260A:  MOVWF  x1A
260C:  MOVFF  519,51E
2610:  MOVWF  x1F
2612:  MOVLW  05
2614:  MOVWF  x21
2616:  MOVLW  10
2618:  MOVWF  x20
261A:  MOVFF  50F,522
261E:  MOVLW  01
2620:  MOVWF  x23
2622:  MOVLB  0
2624:  CALL   132A
2628:  MOVLB  5
....................    } 
....................    glcd_update(); 
262A:  MOVLB  0
262C:  CALL   110E
.................... } 
2630:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2136:  MOVLB  5
2138:  MOVF   x0A,W
213A:  SUBLW  05
213C:  BNZ   21E0
....................    for( i = 0 ; i < 64 ; i ++ ) 
213E:  CLRF   x0B
2140:  MOVF   x0B,W
2142:  SUBLW  3F
2144:  BNC   21E0
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2146:  CLRF   x0C
2148:  MOVF   x0C,W
214A:  SUBLW  0F
214C:  BNC   21DC
....................       {     
....................          for(k=7;k>-1;k--) 
214E:  MOVLW  07
2150:  MOVWF  x0D
2152:  MOVF   x0D,W
2154:  XORLW  80
2156:  SUBLW  7F
2158:  BC    21D8
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
215A:  CLRF   x0F
215C:  MOVFF  50B,50E
2160:  CLRF   x11
2162:  MOVLW  10
2164:  MOVWF  x10
2166:  MOVLB  0
2168:  BRA    2112
216A:  MOVFF  02,50F
216E:  MOVFF  01,50E
2172:  MOVLB  5
2174:  MOVF   x0C,W
2176:  ADDWF  01,W
2178:  MOVWF  01
217A:  MOVLW  00
217C:  ADDWFC 02,W
217E:  MOVWF  03
2180:  MOVF   01,W
2182:  MOVFF  FF2,50E
2186:  BCF    FF2.7
2188:  MOVFF  03,FF7
218C:  MOVLB  0
218E:  CALL   02A6
2192:  MOVLB  5
2194:  BTFSC  x0E.7
2196:  BSF    FF2.7
2198:  MOVWF  x0E
219A:  MOVLW  07
219C:  BSF    FD8.0
219E:  SUBFWB x0D,W
21A0:  MOVWF  x0F
21A2:  MOVFF  50E,00
21A6:  MOVF   x0F,W
21A8:  MOVWF  01
21AA:  BZ    21B4
21AC:  BCF    FD8.0
21AE:  RRCF   00,F
21B0:  DECFSZ 01,F
21B2:  BRA    21AC
21B4:  BTFSS  00.0
21B6:  BRA    21D4
....................                glcd_pixel( j*8+k,i, ON ); 
21B8:  MOVF   x0C,W
21BA:  MULLW  08
21BC:  MOVF   FF3,W
21BE:  ADDWF  x0D,W
21C0:  MOVWF  x0E
21C2:  MOVWF  x3B
21C4:  MOVFF  50B,53C
21C8:  MOVLW  01
21CA:  MOVWF  x3D
21CC:  MOVLB  0
21CE:  CALL   126E
21D2:  MOVLB  5
....................          }   
21D4:  DECF   x0D,F
21D6:  BRA    2152
....................       } 
21D8:  INCF   x0C,F
21DA:  BRA    2148
....................    } 
21DC:  INCF   x0B,F
21DE:  BRA    2140
....................    } 
....................     
.................... } 
21E0:  MOVLB  0
21E2:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0F7C:  MOVLW  15
0F7E:  MOVWF  FCF
0F80:  MOVLW  A0
0F82:  MOVWF  FCE
....................    tiempos++; 
0F84:  MOVLB  4
0F86:  INCF   xB1,F
0F88:  BTFSC  FD8.2
0F8A:  INCF   xB2,F
....................    tiempos3++; 
0F8C:  INCF   xB3,F
0F8E:  BTFSC  FD8.2
0F90:  INCF   xB4,F
....................    tiempoctrl++; 
0F92:  INCF   xB5,F
0F94:  BTFSC  FD8.2
0F96:  INCF   xB6,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0F98:  MOVF   xB4,F
0F9A:  BNZ   0FA2
0F9C:  MOVF   xB3,W
0F9E:  SUBLW  27
0FA0:  BC    0FB4
0FA2:  MOVF   xAF,W
0FA4:  SUBLW  02
0FA6:  BNZ   0FB4
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0FA8:  CLRF   xB4
0FAA:  CLRF   xB3
0FAC:  BSF    x95.7
0FAE:  INCF   xBB,F
0FB0:  BTFSC  FD8.2
0FB2:  INCF   xBC,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0FB4:  MOVF   xB1,W
0FB6:  SUBLW  C8
0FB8:  BNZ   1042
0FBA:  MOVF   xB2,F
0FBC:  BNZ   1042
....................    {tiempos=0;Lectura=1;tinicio++; 
0FBE:  CLRF   xB2
0FC0:  CLRF   xB1
0FC2:  BSF    x95.6
0FC4:  INCF   xBD,F
0FC6:  BTFSC  FD8.2
0FC8:  INCF   xBE,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0FCA:  DECFSZ xAD,W
0FCC:  BRA    1006
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0FCE:  INCF   xC7,F
....................       if(Testerilizacion[0]>9) 
0FD0:  BTFSC  xC7.7
0FD2:  BRA    0FDE
0FD4:  MOVF   xC7,W
0FD6:  SUBLW  09
0FD8:  BC    0FDE
....................          {Testerilizacion[0]=0; 
0FDA:  CLRF   xC7
....................           Testerilizacion[1]++;} 
0FDC:  INCF   xC8,F
....................        if(Testerilizacion[1]>5) 
0FDE:  BTFSC  xC8.7
0FE0:  BRA    0FEC
0FE2:  MOVF   xC8,W
0FE4:  SUBLW  05
0FE6:  BC    0FEC
....................          {Testerilizacion[1]=0; 
0FE8:  CLRF   xC8
....................           Testerilizacion[2]++;} 
0FEA:  INCF   xC9,F
....................          if(Testerilizacion[2]>9) 
0FEC:  BTFSC  xC9.7
0FEE:  BRA    0FFA
0FF0:  MOVF   xC9,W
0FF2:  SUBLW  09
0FF4:  BC    0FFA
....................             {Testerilizacion[2]=0; 
0FF6:  CLRF   xC9
....................              Testerilizacion[3]++;} 
0FF8:  INCF   xCA,F
....................             if(Testerilizacion[3]>5) 
0FFA:  BTFSC  xCA.7
0FFC:  BRA    1006
0FFE:  MOVF   xCA,W
1000:  SUBLW  05
1002:  BC    1006
....................                {Testerilizacion[3]=0;} 
1004:  CLRF   xCA
....................       }        
....................        
....................     if(tiempo_secado==1) 
1006:  DECFSZ xAE,W
1008:  BRA    1042
....................       { 
....................                       
....................       Tsecado[0]++; 
100A:  INCF   xCF,F
....................       if(Tsecado[0]>9) 
100C:  BTFSC  xCF.7
100E:  BRA    101A
1010:  MOVF   xCF,W
1012:  SUBLW  09
1014:  BC    101A
....................          {Tsecado[0]=0; 
1016:  CLRF   xCF
....................           Tsecado[1]++;} 
1018:  INCF   xD0,F
....................        if(Tsecado[1]>5) 
101A:  BTFSC  xD0.7
101C:  BRA    1028
101E:  MOVF   xD0,W
1020:  SUBLW  05
1022:  BC    1028
....................          {Tsecado[1]=0; 
1024:  CLRF   xD0
....................           Tsecado[2]++;} 
1026:  INCF   xD1,F
....................          if(Tsecado[2]>9) 
1028:  BTFSC  xD1.7
102A:  BRA    1036
102C:  MOVF   xD1,W
102E:  SUBLW  09
1030:  BC    1036
....................             {Tsecado[2]=0; 
1032:  CLRF   xD1
....................              Tsecado[3]++;} 
1034:  INCF   xD2,F
....................             if(Tsecado[3]>5) 
1036:  BTFSC  xD2.7
1038:  BRA    1042
103A:  MOVF   xD2,W
103C:  SUBLW  05
103E:  BC    1042
....................                {Tsecado[3]=0;} 
1040:  CLRF   xD2
....................       }   
....................    } 
....................    } 
....................     
1042:  BCF    F9E.0
1044:  MOVLB  0
1046:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
2772:  MOVLW  07
2774:  MOVLB  5
2776:  ADDWF  x0C,W
2778:  MOVWF  x0D
277A:  MOVFF  50A,520
277E:  MOVFF  50C,521
2782:  MOVFF  50B,522
2786:  MOVWF  x23
2788:  MOVLW  01
278A:  MOVWF  x24
278C:  CLRF   x25
278E:  MOVLB  0
2790:  CALL   1620
.................... } 
2794:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.0f",adc); // Converts adc to text 
*
2B04:  MOVLW  05
2B06:  MOVLB  5
2B08:  MOVWF  x09
2B0A:  MOVLW  15
2B0C:  MOVWF  x08
2B0E:  MOVLW  42
2B10:  MOVWF  FE9
2B12:  MOVFF  511,521
2B16:  MOVFF  510,520
2B1A:  MOVFF  50F,51F
2B1E:  MOVFF  50E,51E
2B22:  CLRF   x22
2B24:  MOVLB  0
2B26:  RCALL  2952
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2B28:  MOVLB  5
2B2A:  MOVF   x14,W
2B2C:  MULLW  1B
2B2E:  MOVF   FF3,W
2B30:  ADDWF  x12,W
2B32:  MOVWF  x1E
2B34:  MOVF   x14,W
2B36:  MULLW  08
2B38:  MOVF   FF3,W
2B3A:  ADDWF  x13,W
2B3C:  MOVWF  x1F
2B3E:  MOVFF  512,520
2B42:  MOVFF  513,521
2B46:  MOVFF  51E,522
2B4A:  MOVWF  x23
2B4C:  MOVLW  01
2B4E:  MOVWF  x24
2B50:  CLRF   x25
2B52:  MOVLB  0
2B54:  CALL   1620
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2B58:  MOVFF  512,51E
2B5C:  MOVFF  513,51F
2B60:  MOVLW  05
2B62:  MOVLB  5
2B64:  MOVWF  x21
2B66:  MOVLW  15
2B68:  MOVWF  x20
2B6A:  MOVFF  514,522
2B6E:  MOVLW  01
2B70:  MOVWF  x23
2B72:  MOVLB  0
2B74:  CALL   132A
.................... } 
2B78:  RETLW  00
....................  
.................... void displayTT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
2B7A:  MOVLW  05
2B7C:  MOVLB  5
2B7E:  MOVWF  x09
2B80:  MOVLW  11
2B82:  MOVWF  x08
2B84:  MOVLW  42
2B86:  MOVWF  FE9
2B88:  MOVFF  50D,521
2B8C:  MOVFF  50C,520
2B90:  MOVFF  50B,51F
2B94:  MOVFF  50A,51E
2B98:  MOVLW  01
2B9A:  MOVWF  x22
2B9C:  MOVLB  0
2B9E:  RCALL  2952
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2BA0:  MOVLB  5
2BA2:  MOVF   x10,W
2BA4:  MULLW  1B
2BA6:  MOVF   FF3,W
2BA8:  ADDWF  x0E,W
2BAA:  MOVWF  x1A
2BAC:  MOVF   x10,W
2BAE:  MULLW  08
2BB0:  MOVF   FF3,W
2BB2:  ADDWF  x0F,W
2BB4:  MOVWF  x1B
2BB6:  MOVFF  50E,520
2BBA:  MOVFF  50F,521
2BBE:  MOVFF  51A,522
2BC2:  MOVWF  x23
2BC4:  MOVLW  01
2BC6:  MOVWF  x24
2BC8:  CLRF   x25
2BCA:  MOVLB  0
2BCC:  CALL   1620
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2BD0:  MOVFF  50E,51E
2BD4:  MOVFF  50F,51F
2BD8:  MOVLW  05
2BDA:  MOVLB  5
2BDC:  MOVWF  x21
2BDE:  MOVLW  11
2BE0:  MOVWF  x20
2BE2:  MOVFF  510,522
2BE6:  MOVLW  01
2BE8:  MOVWF  x23
2BEA:  MOVLB  0
2BEC:  CALL   132A
.................... } 
2BF0:  GOTO   6978 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
2632:  MOVFF  4CE,50B
2636:  MOVLW  24
2638:  MOVLB  5
263A:  MOVWF  x0C
263C:  CLRF   x0D
263E:  CLRF   x0E
2640:  MOVLW  01
2642:  MOVWF  x0F
2644:  MOVLB  0
2646:  RCALL  24E2
2648:  MOVFF  4CD,50B
264C:  MOVLW  2A
264E:  MOVLB  5
2650:  MOVWF  x0C
2652:  CLRF   x0D
2654:  CLRF   x0E
2656:  MOVLW  01
2658:  MOVWF  x0F
265A:  MOVLB  0
265C:  RCALL  24E2
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
265E:  MOVLW  04
2660:  MOVWF  FEA
2662:  MOVLW  EA
2664:  MOVWF  FE9
2666:  MOVFF  FF2,50A
266A:  BCF    FF2.7
266C:  MOVLW  00
266E:  CALL   06BE
2672:  TBLRD*-
2674:  TBLRD*+
2676:  MOVF   FF5,W
2678:  MOVWF  FEE
267A:  IORLW  00
267C:  BNZ   2674
267E:  MOVLB  5
2680:  BTFSC  x0A.7
2682:  BSF    FF2.7
2684:  MOVLW  04
2686:  MOVWF  x0B
2688:  MOVLW  EA
268A:  MOVWF  x0A
268C:  MOVLW  31
268E:  MOVWF  x0C
2690:  CLRF   x0D
2692:  MOVLW  02
2694:  MOVWF  x0E
2696:  MOVLW  01
2698:  MOVWF  x0F
269A:  MOVLB  0
269C:  CALL   16E2
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
26A0:  MOVFF  4CC,50B
26A4:  MOVLW  36
26A6:  MOVLB  5
26A8:  MOVWF  x0C
26AA:  CLRF   x0D
26AC:  CLRF   x0E
26AE:  MOVLW  01
26B0:  MOVWF  x0F
26B2:  MOVLB  0
26B4:  RCALL  24E2
26B6:  MOVFF  4CB,50B
26BA:  MOVLW  3C
26BC:  MOVLB  5
26BE:  MOVWF  x0C
26C0:  CLRF   x0D
26C2:  CLRF   x0E
26C4:  MOVLW  01
26C6:  MOVWF  x0F
26C8:  MOVLB  0
26CA:  RCALL  24E2
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
26CC:  MOVFF  4D6,50B
26D0:  MOVLW  24
26D2:  MOVLB  5
26D4:  MOVWF  x0C
26D6:  MOVLW  08
26D8:  MOVWF  x0D
26DA:  CLRF   x0E
26DC:  MOVLW  01
26DE:  MOVWF  x0F
26E0:  MOVLB  0
26E2:  RCALL  24E2
26E4:  MOVFF  4D5,50B
26E8:  MOVLW  2A
26EA:  MOVLB  5
26EC:  MOVWF  x0C
26EE:  MOVLW  08
26F0:  MOVWF  x0D
26F2:  CLRF   x0E
26F4:  MOVLW  01
26F6:  MOVWF  x0F
26F8:  MOVLB  0
26FA:  RCALL  24E2
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
26FC:  MOVLW  04
26FE:  MOVWF  FEA
2700:  MOVLW  EA
2702:  MOVWF  FE9
2704:  MOVFF  FF2,50A
2708:  BCF    FF2.7
270A:  MOVLW  00
270C:  CALL   06BE
2710:  TBLRD*-
2712:  TBLRD*+
2714:  MOVF   FF5,W
2716:  MOVWF  FEE
2718:  IORLW  00
271A:  BNZ   2712
271C:  MOVLB  5
271E:  BTFSC  x0A.7
2720:  BSF    FF2.7
2722:  MOVLW  04
2724:  MOVWF  x0B
2726:  MOVLW  EA
2728:  MOVWF  x0A
272A:  MOVLW  31
272C:  MOVWF  x0C
272E:  MOVLW  08
2730:  MOVWF  x0D
2732:  MOVLW  02
2734:  MOVWF  x0E
2736:  MOVLW  01
2738:  MOVWF  x0F
273A:  MOVLB  0
273C:  CALL   16E2
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
2740:  MOVFF  4D4,50B
2744:  MOVLW  36
2746:  MOVLB  5
2748:  MOVWF  x0C
274A:  MOVLW  08
274C:  MOVWF  x0D
274E:  CLRF   x0E
2750:  MOVLW  01
2752:  MOVWF  x0F
2754:  MOVLB  0
2756:  RCALL  24E2
2758:  MOVFF  4D3,50B
275C:  MOVLW  3C
275E:  MOVLB  5
2760:  MOVWF  x0C
2762:  MOVLW  08
2764:  MOVWF  x0D
2766:  CLRF   x0E
2768:  MOVLW  01
276A:  MOVWF  x0F
276C:  MOVLB  0
276E:  RCALL  24E2
.................... } 
2770:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1908:  MOVLW  05
190A:  MOVLB  5
190C:  MOVWF  x09
190E:  MOVLW  10
1910:  MOVWF  x08
1912:  MOVFF  50C,519
1916:  MOVLW  1F
1918:  MOVWF  x1A
191A:  MOVLB  0
191C:  BRA    1828
....................     
....................    if(sombreado==1) 
191E:  MOVLB  5
1920:  DECFSZ x0F,W
1922:  BRA    1972
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1924:  MOVLW  12
1926:  ADDWF  x0D,W
1928:  MOVWF  x19
192A:  MOVLW  18
192C:  ADDWF  x0E,W
192E:  MOVWF  x1A
1930:  MOVFF  50D,520
1934:  MOVFF  50E,521
1938:  MOVFF  519,522
193C:  MOVWF  x23
193E:  MOVLW  01
1940:  MOVWF  x24
1942:  MOVWF  x25
1944:  MOVLB  0
1946:  RCALL  1620
1948:  MOVLW  02
194A:  MOVLB  5
194C:  ADDWF  x0D,W
194E:  MOVWF  x19
1950:  MOVLW  01
1952:  ADDWF  x0E,W
1954:  MOVWF  x1A
1956:  MOVFF  519,51E
195A:  MOVWF  x1F
195C:  MOVLW  05
195E:  MOVWF  x21
1960:  MOVLW  10
1962:  MOVWF  x20
1964:  MOVLW  02
1966:  MOVWF  x22
1968:  CLRF   x23
196A:  MOVLB  0
196C:  RCALL  132A
....................    else    
196E:  BRA    19BC
1970:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
1972:  MOVLW  12
1974:  ADDWF  x0D,W
1976:  MOVWF  x19
1978:  MOVLW  18
197A:  ADDWF  x0E,W
197C:  MOVWF  x1A
197E:  MOVFF  50D,520
1982:  MOVFF  50E,521
1986:  MOVFF  519,522
198A:  MOVWF  x23
198C:  CLRF   x24
198E:  CLRF   x25
1990:  MOVLB  0
1992:  RCALL  1620
1994:  MOVLW  02
1996:  MOVLB  5
1998:  ADDWF  x0D,W
199A:  MOVWF  x19
199C:  MOVLW  01
199E:  ADDWF  x0E,W
19A0:  MOVWF  x1A
19A2:  MOVFF  519,51E
19A6:  MOVWF  x1F
19A8:  MOVLW  05
19AA:  MOVWF  x21
19AC:  MOVLW  10
19AE:  MOVWF  x20
19B0:  MOVLW  02
19B2:  MOVWF  x22
19B4:  MOVLW  01
19B6:  MOVWF  x23
19B8:  MOVLB  0
19BA:  RCALL  132A
....................  
.................... } 
19BC:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
207C:  BSF    F93.0
207E:  MOVLW  11
2080:  MOVWF  00
2082:  DECFSZ 00,F
2084:  BRA    2082
2086:  BSF    F93.1
2088:  MOVLW  11
208A:  MOVWF  00
208C:  DECFSZ 00,F
208E:  BRA    208C
2090:  BCF    F8A.0
2092:  BCF    F93.0
2094:  MOVLW  11
2096:  MOVWF  00
2098:  DECFSZ 00,F
209A:  BRA    2098
209C:  BCF    F8A.1
209E:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
20A0:  MOVFF  50B,50E
20A4:  RCALL  19BE
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
20A6:  MOVFF  50C,50E
20AA:  RCALL  19BE
....................    i2c_write(dato);        // Dato a transmitir 
20AC:  MOVFF  50D,50E
20B0:  RCALL  19BE
....................    i2c_stop();             // Fin comunicación 
20B2:  BCF    F93.0
20B4:  NOP   
20B6:  BSF    F93.1
20B8:  BTFSS  F81.1
20BA:  BRA    20B8
20BC:  MOVLW  11
20BE:  MOVWF  00
20C0:  DECFSZ 00,F
20C2:  BRA    20C0
20C4:  BRA    20C6
20C6:  NOP   
20C8:  BSF    F93.0
20CA:  MOVLW  11
20CC:  MOVWF  00
20CE:  DECFSZ 00,F
20D0:  BRA    20CE
....................  } 
20D2:  GOTO   2108 (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1F96:  BSF    F93.0
1F98:  MOVLW  11
1F9A:  MOVWF  00
1F9C:  DECFSZ 00,F
1F9E:  BRA    1F9C
1FA0:  BSF    F93.1
1FA2:  MOVLW  11
1FA4:  MOVWF  00
1FA6:  DECFSZ 00,F
1FA8:  BRA    1FA6
1FAA:  BCF    F8A.0
1FAC:  BCF    F93.0
1FAE:  MOVLW  11
1FB0:  MOVWF  00
1FB2:  DECFSZ 00,F
1FB4:  BRA    1FB2
1FB6:  BCF    F8A.1
1FB8:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FBA:  MOVFF  50A,50E
1FBE:  MOVLB  0
1FC0:  RCALL  19BE
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1FC2:  MOVFF  50B,50E
1FC6:  RCALL  19BE
....................    i2c_start();            // Reinicio 
1FC8:  BSF    F93.0
1FCA:  MOVLW  11
1FCC:  MOVWF  00
1FCE:  DECFSZ 00,F
1FD0:  BRA    1FCE
1FD2:  BSF    F93.1
1FD4:  MOVLW  11
1FD6:  MOVWF  00
1FD8:  DECFSZ 00,F
1FDA:  BRA    1FD8
1FDC:  BTFSS  F81.1
1FDE:  BRA    1FDC
1FE0:  BCF    F8A.0
1FE2:  BCF    F93.0
1FE4:  MOVLW  11
1FE6:  MOVWF  00
1FE8:  DECFSZ 00,F
1FEA:  BRA    1FE8
1FEC:  BCF    F8A.1
1FEE:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1FF0:  MOVLW  01
1FF2:  MOVLB  5
1FF4:  ADDWF  x0A,W
1FF6:  MOVWF  x0C
1FF8:  MOVWF  x0E
1FFA:  MOVLB  0
1FFC:  RCALL  19BE
....................    dato=i2c_read(0);       // Lectura del dato 
1FFE:  CLRF   00
2000:  BRA    1A34
2002:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
2006:  BCF    F93.0
2008:  NOP   
200A:  BSF    F93.1
200C:  BTFSS  F81.1
200E:  BRA    200C
2010:  MOVLW  11
2012:  MOVWF  00
2014:  DECFSZ 00,F
2016:  BRA    2014
2018:  BRA    201A
201A:  NOP   
201C:  BSF    F93.0
201E:  MOVLW  11
2020:  MOVWF  00
2022:  DECFSZ 00,F
2024:  BRA    2022
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
2044:  MOVFF  498,456
....................    SlaveA0Tx[1]=EVDesfogue; 
2048:  MOVFF  499,457
....................    SlaveA0Tx[2]=EVAgua; 
204C:  MOVFF  49A,458
....................    SlaveA0Tx[3]=EVTrampa; 
2050:  MOVFF  49B,459
....................    SlaveA0Tx[4]=MotorPuerta; 
2054:  MOVFF  49C,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
2058:  MOVFF  49D,45B
....................    SlaveA0Tx[6]=BombaVacio; 
205C:  MOVFF  49E,45C
....................    SlaveA0Tx[7]=BombaAgua; 
2060:  MOVFF  49F,45D
....................    SlaveA0Tx[8]=Control; 
2064:  MOVFF  4A0,45E
....................    SlaveA0Tx[9]=Setpoint; 
2068:  MOVFF  4A9,45F
....................    SlaveA0Tx[10]=20; 
206C:  MOVLW  14
206E:  MOVLB  4
2070:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
2072:  MOVFF  4B9,462
.................... } 
2076:  MOVLB  0
2078:  GOTO   20D8 (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1EAE:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1EB2:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1EB6:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1EBA:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1EBE:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1EC2:  MOVLB  5
1EC4:  CLRF   x0B
1EC6:  MOVFF  41B,50A
1ECA:  MOVLB  0
1ECC:  RCALL  1AA0
1ECE:  MOVFF  03,4C6
1ED2:  MOVFF  02,4C5
1ED6:  MOVFF  01,4C4
1EDA:  MOVFF  00,4C3
....................    Alarma=txbuf[6]; 
1EDE:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1EE2:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1EE6:  MOVFF  41E,4B0
....................    Decimal=txbuf[9]; 
1EEA:  MOVFF  41F,4A1
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1EEE:  MOVLB  5
1EF0:  CLRF   x0B
1EF2:  MOVFF  4A1,50A
1EF6:  MOVLB  0
1EF8:  RCALL  1AA0
1EFA:  MOVFF  00,50A
1EFE:  MOVFF  01,50B
1F02:  MOVFF  02,50C
1F06:  MOVFF  03,50D
1F0A:  MOVFF  03,511
1F0E:  MOVFF  02,510
1F12:  MOVFF  01,50F
1F16:  MOVFF  00,50E
1F1A:  MOVLB  5
1F1C:  CLRF   x15
1F1E:  CLRF   x14
1F20:  MOVLW  20
1F22:  MOVWF  x13
1F24:  MOVLW  82
1F26:  MOVWF  x12
1F28:  MOVLB  0
1F2A:  BRA    1AD6
1F2C:  BCF    FD8.1
1F2E:  MOVFF  4C6,511
1F32:  MOVFF  4C5,510
1F36:  MOVFF  4C4,50F
1F3A:  MOVFF  4C3,50E
1F3E:  MOVFF  03,515
1F42:  MOVFF  02,514
1F46:  MOVFF  01,513
1F4A:  MOVFF  00,512
1F4E:  RCALL  1C36
1F50:  MOVFF  03,4C6
1F54:  MOVFF  02,4C5
1F58:  MOVFF  01,4C4
1F5C:  MOVFF  00,4C3
....................    PresionCamara=make16(txbuf[11],txbuf[10]); 
1F60:  MOVFF  421,4C0
1F64:  MOVFF  420,4BF
....................    PresionPreCamara=make16(txbuf[13],txbuf[12]); 
1F68:  MOVFF  423,4C2
1F6C:  MOVFF  422,4C1
....................    flagprevacio=txbuf[14]; 
1F70:  MOVFF  424,4A6
....................    Atmosferica=txbuf[15]; 
1F74:  MOVFF  425,4AA
.................... } 
1F78:  GOTO   2042 (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
20D6:  BRA    2044
....................    for(i=0;i<13;i++) 
20D8:  MOVLB  4
20DA:  CLRF   xA4
20DC:  MOVF   xA4,W
20DE:  SUBLW  0C
20E0:  BNC   210E
....................    { 
....................       direccion=0xA0; 
20E2:  MOVLW  A0
20E4:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
20E6:  CLRF   03
20E8:  MOVF   xA4,W
20EA:  ADDLW  56
20EC:  MOVWF  FE9
20EE:  MOVLW  04
20F0:  ADDWFC 03,W
20F2:  MOVWF  FEA
20F4:  MOVFF  FEF,50A
20F8:  MOVFF  487,50B
20FC:  MOVFF  4A4,50C
2100:  MOVFF  50A,50D
2104:  MOVLB  0
2106:  BRA    207C
....................    }  
2108:  MOVLB  4
210A:  INCF   xA4,F
210C:  BRA    20DC
.................... } 
210E:  MOVLB  0
2110:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<16;i++) 
*
1F7C:  MOVLB  4
1F7E:  CLRF   xA4
1F80:  MOVF   xA4,W
1F82:  SUBLW  0F
1F84:  BNC   203E
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1F86:  MOVLW  A0
1F88:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1F8A:  MOVFF  4A4,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1F8E:  MOVFF  487,50A
1F92:  MOVFF  488,50B
....................       txbuf[i]=(int8)dato; 
*
2026:  CLRF   03
2028:  MOVLB  4
202A:  MOVF   xA4,W
202C:  ADDLW  16
202E:  MOVWF  FE9
2030:  MOVLW  04
2032:  ADDWFC 03,W
2034:  MOVWF  FEA
2036:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
203A:  INCF   xA4,F
203C:  BRA    1F80
....................    Lee_Vector(); 
203E:  MOVLB  0
2040:  BRA    1EAE
.................... } 
2042:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2CAC:  CLRF   FF8
2CAE:  BCF    FD0.7
2CB0:  BSF    07.7
2CB2:  CLRF   FEA
2CB4:  CLRF   FE9
2CB6:  MOVLB  4
2CB8:  CLRF   x86
2CBA:  CLRF   x87
2CBC:  CLRF   x88
2CBE:  CLRF   x8D
2CC0:  MOVLW  01
2CC2:  MOVWF  x8E
2CC4:  CLRF   x8F
2CC6:  CLRF   x90
2CC8:  CLRF   x91
2CCA:  CLRF   x92
2CCC:  CLRF   x93
2CCE:  CLRF   x94
2CD0:  BCF    x95.0
2CD2:  BCF    x95.1
2CD4:  BCF    x95.2
2CD6:  BCF    x95.3
2CD8:  BSF    x95.4
2CDA:  BCF    x95.5
2CDC:  BCF    x95.6
2CDE:  BCF    x95.7
2CE0:  BCF    x96.0
2CE2:  BCF    x96.1
2CE4:  BCF    x96.2
2CE6:  BCF    x96.3
2CE8:  BCF    x96.4
2CEA:  BCF    x96.5
2CEC:  BCF    x96.6
2CEE:  BCF    x96.7
2CF0:  BCF    x97.0
2CF2:  BCF    x97.1
2CF4:  BCF    x97.2
2CF6:  BCF    x97.3
2CF8:  BCF    x97.4
2CFA:  CLRF   x98
2CFC:  CLRF   x99
2CFE:  CLRF   x9A
2D00:  CLRF   x9B
2D02:  CLRF   x9C
2D04:  CLRF   x9D
2D06:  CLRF   x9E
2D08:  CLRF   x9F
2D0A:  CLRF   xA0
2D0C:  CLRF   xA1
2D0E:  CLRF   xA2
2D10:  MOVWF  xA3
2D12:  CLRF   xA4
2D14:  MOVLW  0A
2D16:  MOVWF  xA5
2D18:  MOVWF  xA6
2D1A:  MOVWF  xA7
2D1C:  MOVWF  xA8
2D1E:  CLRF   xA9
2D20:  MOVLW  47
2D22:  MOVWF  xAA
2D24:  CLRF   xAB
2D26:  MOVLW  01
2D28:  MOVWF  xAC
2D2A:  CLRF   xAD
2D2C:  CLRF   xAE
2D2E:  CLRF   xAF
2D30:  CLRF   xB0
2D32:  CLRF   xB2
2D34:  CLRF   xB1
2D36:  CLRF   xB4
2D38:  CLRF   xB3
2D3A:  CLRF   xB6
2D3C:  CLRF   xB5
2D3E:  CLRF   xB8
2D40:  MOVLW  0F
2D42:  MOVWF  xB7
2D44:  CLRF   xBA
2D46:  CLRF   xB9
2D48:  CLRF   xBC
2D4A:  CLRF   xBB
2D4C:  CLRF   xBE
2D4E:  CLRF   xBD
2D50:  CLRF   xC0
2D52:  CLRF   xBF
2D54:  CLRF   xC2
2D56:  CLRF   xC1
2D58:  CLRF   xC6
2D5A:  CLRF   xC5
2D5C:  CLRF   xC4
2D5E:  CLRF   xC3
2D60:  MOVF   FC1,W
2D62:  ANDLW  C0
2D64:  IORLW  0F
2D66:  MOVWF  FC1
2D68:  MOVLW  07
2D6A:  MOVWF  FB4
2D6C:  MOVLW  6B
2D6E:  MOVWF  x89
2D70:  MOVLW  50
2D72:  MOVWF  x8A
2D74:  MOVLW  61
2D76:  MOVWF  x8B
2D78:  CLRF   x8C
2D7A:  CLRF   xC7
2D7C:  CLRF   xC8
2D7E:  CLRF   xC9
2D80:  CLRF   xCA
2D82:  CLRF   xCB
2D84:  CLRF   xCC
2D86:  CLRF   xCD
2D88:  CLRF   xCE
2D8A:  CLRF   xCF
2D8C:  CLRF   xD0
2D8E:  CLRF   xD1
2D90:  CLRF   xD2
2D92:  CLRF   xD3
2D94:  CLRF   xD4
2D96:  CLRF   xD5
2D98:  CLRF   xD6
2D9A:  CLRF   xD7
2D9C:  CLRF   xD8
2D9E:  CLRF   xD9
2DA0:  CLRF   xDA
2DA2:  CLRF   xDB
2DA4:  CLRF   xDC
2DA6:  CLRF   xDD
2DA8:  CLRF   xDE
2DAA:  MOVLB  5
2DAC:  CLRF   x08
2DAE:  CLRF   x09
....................    Display_on; 
2DB0:  BSF    F8D.0
2DB2:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2DB4:  MOVLB  4
2DB6:  CLRF   x88
2DB8:  MOVF   x88,W
2DBA:  SUBLW  0F
2DBC:  BNC   2DF2
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2DBE:  CLRF   03
2DC0:  MOVF   x88,W
2DC2:  ADDLW  56
2DC4:  MOVWF  FE9
2DC6:  MOVLW  04
2DC8:  ADDWFC 03,W
2DCA:  MOVWF  FEA
2DCC:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2DCE:  CLRF   03
2DD0:  MOVF   x88,W
2DD2:  ADDLW  66
2DD4:  MOVWF  FE9
2DD6:  MOVLW  04
2DD8:  ADDWFC 03,W
2DDA:  MOVWF  FEA
2DDC:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2DDE:  CLRF   03
2DE0:  MOVF   x88,W
2DE2:  ADDLW  76
2DE4:  MOVWF  FE9
2DE6:  MOVLW  04
2DE8:  ADDWFC 03,W
2DEA:  MOVWF  FEA
2DEC:  CLRF   FEF
....................    } 
2DEE:  INCF   x88,F
2DF0:  BRA    2DB8
....................    output_d(0); 
2DF2:  CLRF   F95
2DF4:  CLRF   F8C
....................    delay_ms(1000);    
2DF6:  MOVLW  04
2DF8:  MOVLB  5
2DFA:  MOVWF  x0A
2DFC:  MOVLW  FA
2DFE:  MOVWF  x0B
2E00:  MOVLB  0
2E02:  CALL   104A
2E06:  MOVLB  5
2E08:  DECFSZ x0A,F
2E0A:  BRA    2DFC
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2E0C:  MOVLW  85
2E0E:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2E10:  BSF    F9D.0
....................    enable_interrupts(global); 
2E12:  MOVLW  C0
2E14:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2E16:  MOVFF  FF2,50A
2E1A:  BCF    FF2.7
2E1C:  CLRF   FA9
2E1E:  BCF    FA6.6
2E20:  BCF    FA6.7
2E22:  BSF    FA6.0
2E24:  MOVF   FA8,W
2E26:  BTFSC  x0A.7
2E28:  BSF    FF2.7
2E2A:  MOVLB  4
2E2C:  MOVWF  xCB
2E2E:  MOVFF  FF2,50A
2E32:  BCF    FF2.7
2E34:  MOVLW  01
2E36:  MOVWF  FA9
2E38:  BCF    FA6.6
2E3A:  BCF    FA6.7
2E3C:  BSF    FA6.0
2E3E:  MOVF   FA8,W
2E40:  MOVLB  5
2E42:  BTFSC  x0A.7
2E44:  BSF    FF2.7
2E46:  MOVLB  4
2E48:  MOVWF  xCC
2E4A:  MOVFF  FF2,50A
2E4E:  BCF    FF2.7
2E50:  MOVLW  02
2E52:  MOVWF  FA9
2E54:  BCF    FA6.6
2E56:  BCF    FA6.7
2E58:  BSF    FA6.0
2E5A:  MOVF   FA8,W
2E5C:  MOVLB  5
2E5E:  BTFSC  x0A.7
2E60:  BSF    FF2.7
2E62:  MOVLB  4
2E64:  MOVWF  xCD
2E66:  MOVFF  FF2,50A
2E6A:  BCF    FF2.7
2E6C:  MOVLW  03
2E6E:  MOVWF  FA9
2E70:  BCF    FA6.6
2E72:  BCF    FA6.7
2E74:  BSF    FA6.0
2E76:  MOVF   FA8,W
2E78:  MOVLB  5
2E7A:  BTFSC  x0A.7
2E7C:  BSF    FF2.7
2E7E:  MOVLB  4
2E80:  MOVWF  xCE
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2E82:  MOVFF  FF2,50A
2E86:  BCF    FF2.7
2E88:  MOVLW  04
2E8A:  MOVWF  FA9
2E8C:  BCF    FA6.6
2E8E:  BCF    FA6.7
2E90:  BSF    FA6.0
2E92:  MOVF   FA8,W
2E94:  MOVLB  5
2E96:  BTFSC  x0A.7
2E98:  BSF    FF2.7
2E9A:  MOVLB  4
2E9C:  MOVWF  xD3
2E9E:  MOVFF  FF2,50A
2EA2:  BCF    FF2.7
2EA4:  MOVLW  05
2EA6:  MOVWF  FA9
2EA8:  BCF    FA6.6
2EAA:  BCF    FA6.7
2EAC:  BSF    FA6.0
2EAE:  MOVF   FA8,W
2EB0:  MOVLB  5
2EB2:  BTFSC  x0A.7
2EB4:  BSF    FF2.7
2EB6:  MOVLB  4
2EB8:  MOVWF  xD4
2EBA:  MOVFF  FF2,50A
2EBE:  BCF    FF2.7
2EC0:  MOVLW  06
2EC2:  MOVWF  FA9
2EC4:  BCF    FA6.6
2EC6:  BCF    FA6.7
2EC8:  BSF    FA6.0
2ECA:  MOVF   FA8,W
2ECC:  MOVLB  5
2ECE:  BTFSC  x0A.7
2ED0:  BSF    FF2.7
2ED2:  MOVLB  4
2ED4:  MOVWF  xD5
2ED6:  MOVFF  FF2,50A
2EDA:  BCF    FF2.7
2EDC:  MOVLW  07
2EDE:  MOVWF  FA9
2EE0:  BCF    FA6.6
2EE2:  BCF    FA6.7
2EE4:  BSF    FA6.0
2EE6:  MOVF   FA8,W
2EE8:  MOVLB  5
2EEA:  BTFSC  x0A.7
2EEC:  BSF    FF2.7
2EEE:  MOVLB  4
2EF0:  MOVWF  xD6
2EF2:  MOVFF  FF2,50A
2EF6:  BCF    FF2.7
2EF8:  MOVLW  08
2EFA:  MOVWF  FA9
2EFC:  BCF    FA6.6
2EFE:  BCF    FA6.7
2F00:  BSF    FA6.0
2F02:  MOVF   FA8,W
2F04:  MOVLB  5
2F06:  BTFSC  x0A.7
2F08:  BSF    FF2.7
2F0A:  MOVLB  4
2F0C:  MOVWF  xA9
....................    Nivel=read_eeprom(9); 
2F0E:  MOVFF  FF2,50A
2F12:  BCF    FF2.7
2F14:  MOVLW  09
2F16:  MOVWF  FA9
2F18:  BCF    FA6.6
2F1A:  BCF    FA6.7
2F1C:  BSF    FA6.0
2F1E:  MOVF   FA8,W
2F20:  MOVLB  5
2F22:  BTFSC  x0A.7
2F24:  BSF    FF2.7
2F26:  MOVLB  4
2F28:  CLRF   xBA
2F2A:  MOVWF  xB9
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2F2C:  MOVFF  FF2,50A
2F30:  BCF    FF2.7
2F32:  MOVLW  0A
2F34:  MOVWF  FA9
2F36:  BCF    FA6.6
2F38:  BCF    FA6.7
2F3A:  BSF    FA6.0
2F3C:  MOVF   FA8,W
2F3E:  MOVLB  5
2F40:  BTFSC  x0A.7
2F42:  BSF    FF2.7
2F44:  MOVLB  4
2F46:  MOVWF  xDB
2F48:  MOVFF  FF2,50A
2F4C:  BCF    FF2.7
2F4E:  MOVLW  0B
2F50:  MOVWF  FA9
2F52:  BCF    FA6.6
2F54:  BCF    FA6.7
2F56:  BSF    FA6.0
2F58:  MOVF   FA8,W
2F5A:  MOVLB  5
2F5C:  BTFSC  x0A.7
2F5E:  BSF    FF2.7
2F60:  MOVLB  4
2F62:  MOVWF  xDC
2F64:  MOVFF  FF2,50A
2F68:  BCF    FF2.7
2F6A:  MOVLW  0C
2F6C:  MOVWF  FA9
2F6E:  BCF    FA6.6
2F70:  BCF    FA6.7
2F72:  BSF    FA6.0
2F74:  MOVF   FA8,W
2F76:  MOVLB  5
2F78:  BTFSC  x0A.7
2F7A:  BSF    FF2.7
2F7C:  MOVLB  4
2F7E:  MOVWF  xDD
2F80:  MOVFF  FF2,50A
2F84:  BCF    FF2.7
2F86:  MOVLW  0D
2F88:  MOVWF  FA9
2F8A:  BCF    FA6.6
2F8C:  BCF    FA6.7
2F8E:  BSF    FA6.0
2F90:  MOVF   FA8,W
2F92:  MOVLB  5
2F94:  BTFSC  x0A.7
2F96:  BSF    FF2.7
2F98:  MOVLB  4
2F9A:  MOVWF  xDE
....................    Atmosferica=read_eeprom(90); 
2F9C:  MOVFF  FF2,50A
2FA0:  BCF    FF2.7
2FA2:  MOVLW  5A
2FA4:  MOVWF  FA9
2FA6:  BCF    FA6.6
2FA8:  BCF    FA6.7
2FAA:  BSF    FA6.0
2FAC:  MOVF   FA8,W
2FAE:  MOVLB  5
2FB0:  BTFSC  x0A.7
2FB2:  BSF    FF2.7
2FB4:  MOVLB  4
2FB6:  MOVWF  xAA
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2FB8:  MOVLW  01
2FBA:  MOVLB  5
2FBC:  MOVWF  x0A
2FBE:  MOVLB  0
2FC0:  CALL   11C6
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2FC4:  MOVLB  5
2FC6:  CLRF   x0B
2FC8:  MOVLB  0
2FCA:  CALL   10B4
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2FCE:  MOVLW  04
2FD0:  MOVWF  FEA
2FD2:  MOVLW  EA
2FD4:  MOVWF  FE9
2FD6:  MOVFF  FF2,50A
2FDA:  BCF    FF2.7
2FDC:  MOVLW  00
2FDE:  CALL   06DA
2FE2:  TBLRD*-
2FE4:  TBLRD*+
2FE6:  MOVF   FF5,W
2FE8:  MOVWF  FEE
2FEA:  IORLW  00
2FEC:  BNZ   2FE4
2FEE:  MOVLB  5
2FF0:  BTFSC  x0A.7
2FF2:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2FF4:  MOVLW  04
2FF6:  MOVWF  x0B
2FF8:  MOVLW  EA
2FFA:  MOVWF  x0A
2FFC:  CLRF   x0C
2FFE:  CLRF   x0D
3000:  CLRF   x0E
3002:  MOVLW  02
3004:  MOVWF  x0F
3006:  MOVLB  0
3008:  CALL   16E2
....................    strcpy(Menus.Letra,"Autoclave Vertical"); 
300C:  MOVLW  04
300E:  MOVWF  FEA
3010:  MOVLW  EA
3012:  MOVWF  FE9
3014:  MOVFF  FF2,50A
3018:  BCF    FF2.7
301A:  MOVLW  00
301C:  CALL   0700
3020:  TBLRD*-
3022:  TBLRD*+
3024:  MOVF   FF5,W
3026:  MOVWF  FEE
3028:  IORLW  00
302A:  BNZ   3022
302C:  MOVLB  5
302E:  BTFSC  x0A.7
3030:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
3032:  MOVLW  04
3034:  MOVWF  x0B
3036:  MOVLW  EA
3038:  MOVWF  x0A
303A:  CLRF   x0C
303C:  MOVLW  14
303E:  MOVWF  x0D
3040:  CLRF   x0E
3042:  MOVLW  01
3044:  MOVWF  x0F
3046:  MOVLB  0
3048:  CALL   16E2
....................    strcpy(Menus.Letra," 55 Litros  "); 
304C:  MOVLW  04
304E:  MOVWF  FEA
3050:  MOVLW  EA
3052:  MOVWF  FE9
3054:  MOVFF  FF2,50A
3058:  BCF    FF2.7
305A:  MOVLW  00
305C:  CALL   072E
3060:  TBLRD*-
3062:  TBLRD*+
3064:  MOVF   FF5,W
3066:  MOVWF  FEE
3068:  IORLW  00
306A:  BNZ   3062
306C:  MOVLB  5
306E:  BTFSC  x0A.7
3070:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
3072:  MOVLW  04
3074:  MOVWF  x0B
3076:  MOVLW  EA
3078:  MOVWF  x0A
307A:  CLRF   x0C
307C:  MOVLW  23
307E:  MOVWF  x0D
3080:  CLRF   x0E
3082:  MOVLW  02
3084:  MOVWF  x0F
3086:  MOVLB  0
3088:  CALL   16E2
....................    delay_ms(1000); 
308C:  MOVLW  04
308E:  MOVLB  5
3090:  MOVWF  x0A
3092:  MOVLW  FA
3094:  MOVWF  x0B
3096:  MOVLB  0
3098:  CALL   104A
309C:  MOVLB  5
309E:  DECFSZ x0A,F
30A0:  BRA    3092
....................    delay_ms(1000); 
30A2:  MOVLW  04
30A4:  MOVWF  x0A
30A6:  MOVLW  FA
30A8:  MOVWF  x0B
30AA:  MOVLB  0
30AC:  CALL   104A
30B0:  MOVLB  5
30B2:  DECFSZ x0A,F
30B4:  BRA    30A6
....................    delay_ms(1000); 
30B6:  MOVLW  04
30B8:  MOVWF  x0A
30BA:  MOVLW  FA
30BC:  MOVWF  x0B
30BE:  MOVLB  0
30C0:  CALL   104A
30C4:  MOVLB  5
30C6:  DECFSZ x0A,F
30C8:  BRA    30BA
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
30CA:  CLRF   x0B
30CC:  MOVLB  0
30CE:  CALL   10B4
....................    displayContrasena(Contrasena[0],20,30,1); 
30D2:  MOVFF  4D7,50C
30D6:  MOVLW  14
30D8:  MOVLB  5
30DA:  MOVWF  x0D
30DC:  MOVLW  1E
30DE:  MOVWF  x0E
30E0:  MOVLW  01
30E2:  MOVWF  x0F
30E4:  MOVLB  0
30E6:  CALL   1908
....................    displayContrasena(Contrasena[1],40,30,0); 
30EA:  MOVFF  4D8,50C
30EE:  MOVLW  28
30F0:  MOVLB  5
30F2:  MOVWF  x0D
30F4:  MOVLW  1E
30F6:  MOVWF  x0E
30F8:  CLRF   x0F
30FA:  MOVLB  0
30FC:  CALL   1908
....................    displayContrasena(Contrasena[2],60,30,0); 
3100:  MOVFF  4D9,50C
3104:  MOVLW  3C
3106:  MOVLB  5
3108:  MOVWF  x0D
310A:  MOVLW  1E
310C:  MOVWF  x0E
310E:  CLRF   x0F
3110:  MOVLB  0
3112:  CALL   1908
....................    displayContrasena(Contrasena[3],80,30,0); 
3116:  MOVFF  4DA,50C
311A:  MOVLW  50
311C:  MOVLB  5
311E:  MOVWF  x0D
3120:  MOVLW  1E
3122:  MOVWF  x0E
3124:  CLRF   x0F
3126:  MOVLB  0
3128:  CALL   1908
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
312C:  CALL   1F7C
....................        
....................       Envio_Esclavos(); 
3130:  CALL   20D6
....................       glcd_update(); 
3134:  CALL   110E
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
3138:  BSF    F92.0
313A:  BTFSC  F80.0
313C:  BRA    3150
313E:  BSF    F92.1
3140:  BTFSC  F80.1
3142:  BRA    3150
3144:  BSF    F92.2
3146:  BTFSC  F80.2
3148:  BRA    3150
314A:  BSF    F92.3
314C:  BTFSS  F80.3
314E:  BRA    3158
....................       { 
....................          tinicio=0; 
3150:  MOVLB  4
3152:  CLRF   xBE
3154:  CLRF   xBD
3156:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
3158:  MOVLB  4
315A:  MOVF   xBE,W
315C:  SUBLW  37
315E:  BC    317C
3160:  XORLW  FF
3162:  BNZ   316A
3164:  MOVF   xBD,W
3166:  SUBLW  3F
3168:  BC    317C
....................          glcd_fillscreen(OFF); 
316A:  MOVLB  5
316C:  CLRF   x0B
316E:  MOVLB  0
3170:  CALL   10B4
....................          Display_off; 
3174:  BCF    F8D.0
3176:  BCF    F96.0
....................       } 
3178:  BRA    3158
317A:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
317C:  MOVF   xA2,F
317E:  BTFSS  FD8.2
3180:  BRA    3716
....................        
....................       strcpy(Menus.Letra,"Clave"); 
3182:  MOVLW  04
3184:  MOVWF  FEA
3186:  MOVLW  EA
3188:  MOVWF  FE9
318A:  MOVFF  FF2,50A
318E:  BCF    FF2.7
3190:  MOVLW  00
3192:  MOVLB  0
3194:  CALL   0756
3198:  TBLRD*-
319A:  TBLRD*+
319C:  MOVF   FF5,W
319E:  MOVWF  FEE
31A0:  IORLW  00
31A2:  BNZ   319A
31A4:  MOVLB  5
31A6:  BTFSC  x0A.7
31A8:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
31AA:  MOVLW  04
31AC:  MOVWF  x0B
31AE:  MOVLW  EA
31B0:  MOVWF  x0A
31B2:  MOVLW  1E
31B4:  MOVWF  x0C
31B6:  CLRF   x0D
31B8:  MOVLW  01
31BA:  MOVWF  x0E
31BC:  MOVLW  02
31BE:  MOVWF  x0F
31C0:  MOVLB  0
31C2:  CALL   16E2
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
31C6:  BSF    F92.0
31C8:  BTFSS  F80.0
31CA:  BRA    32A2
....................       { 
....................          if(Flanco == 0) 
31CC:  MOVLB  4
31CE:  BTFSC  x95.0
31D0:  BRA    32A0
....................          { 
....................             Flanco = 1;delay_ms(30); 
31D2:  BSF    x95.0
31D4:  MOVLW  1E
31D6:  MOVLB  5
31D8:  MOVWF  x0B
31DA:  MOVLB  0
31DC:  CALL   104A
....................             for(i=1;i<=4;i++) 
31E0:  MOVLW  01
31E2:  MOVLB  4
31E4:  MOVWF  xA4
31E6:  MOVF   xA4,W
31E8:  SUBLW  04
31EA:  BNC   32A0
....................             { 
....................                if(unidad==i) 
31EC:  MOVF   xA4,W
31EE:  SUBWF  xA3,W
31F0:  BNZ   3268
....................                { 
....................                   Contrasena[i-1]++; 
31F2:  MOVLW  01
31F4:  SUBWF  xA4,W
31F6:  CLRF   03
31F8:  ADDLW  D7
31FA:  MOVWF  FE9
31FC:  MOVLW  04
31FE:  ADDWFC 03,W
3200:  MOVWF  FEA
3202:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
3204:  MOVLW  01
3206:  SUBWF  xA4,W
3208:  CLRF   03
320A:  ADDLW  D7
320C:  MOVWF  FE9
320E:  MOVLW  04
3210:  ADDWFC 03,W
3212:  MOVWF  FEA
3214:  BTFSC  FEF.7
3216:  BRA    3230
3218:  MOVF   FEF,W
321A:  SUBLW  09
321C:  BC    3230
....................                   { 
....................                      Contrasena[i-1]=0; 
321E:  MOVLW  01
3220:  SUBWF  xA4,W
3222:  CLRF   03
3224:  ADDLW  D7
3226:  MOVWF  FE9
3228:  MOVLW  04
322A:  ADDWFC 03,W
322C:  MOVWF  FEA
322E:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
3230:  MOVLW  01
3232:  SUBWF  xA4,W
3234:  CLRF   03
3236:  ADDLW  D7
3238:  MOVWF  FE9
323A:  MOVLW  04
323C:  ADDWFC 03,W
323E:  MOVWF  FEA
3240:  MOVFF  FEF,50A
3244:  MOVF   xA4,W
3246:  MULLW  14
3248:  MOVFF  FF3,50B
324C:  MOVLB  5
324E:  MOVFF  50A,50C
3252:  MOVFF  50B,50D
3256:  MOVLW  1E
3258:  MOVWF  x0E
325A:  MOVLW  01
325C:  MOVWF  x0F
325E:  MOVLB  0
3260:  CALL   1908
....................                } 
....................                else 
3264:  BRA    329A
3266:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
3268:  MOVLW  01
326A:  SUBWF  xA4,W
326C:  CLRF   03
326E:  ADDLW  D7
3270:  MOVWF  FE9
3272:  MOVLW  04
3274:  ADDWFC 03,W
3276:  MOVWF  FEA
3278:  MOVFF  FEF,50A
327C:  MOVF   xA4,W
327E:  MULLW  14
3280:  MOVFF  FF3,50B
3284:  MOVLB  5
3286:  MOVFF  50A,50C
328A:  MOVFF  50B,50D
328E:  MOVLW  1E
3290:  MOVWF  x0E
3292:  CLRF   x0F
3294:  MOVLB  0
3296:  CALL   1908
....................                } 
....................             } 
329A:  MOVLB  4
329C:  INCF   xA4,F
329E:  BRA    31E6
....................          } 
....................       } 
....................          else 
32A0:  BRA    32A6
....................             {Flanco = 0;} 
32A2:  MOVLB  4
32A4:  BCF    x95.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
32A6:  BSF    F92.1
32A8:  BTFSS  F80.1
32AA:  BRA    337E
....................       { 
....................          if(Flanco2 == 0) 
32AC:  BTFSC  x95.2
32AE:  BRA    337C
....................             {Flanco2 = 1;delay_ms(30); 
32B0:  BSF    x95.2
32B2:  MOVLW  1E
32B4:  MOVLB  5
32B6:  MOVWF  x0B
32B8:  MOVLB  0
32BA:  CALL   104A
....................                for(i=1;i<=4;i++) 
32BE:  MOVLW  01
32C0:  MOVLB  4
32C2:  MOVWF  xA4
32C4:  MOVF   xA4,W
32C6:  SUBLW  04
32C8:  BNC   337C
....................                { 
....................                   if(unidad==i) 
32CA:  MOVF   xA4,W
32CC:  SUBWF  xA3,W
32CE:  BNZ   3344
....................                   {Contrasena[i-1]--;  
32D0:  MOVLW  01
32D2:  SUBWF  xA4,W
32D4:  CLRF   03
32D6:  ADDLW  D7
32D8:  MOVWF  FE9
32DA:  MOVLW  04
32DC:  ADDWFC 03,W
32DE:  MOVWF  FEA
32E0:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
32E2:  MOVLW  01
32E4:  SUBWF  xA4,W
32E6:  CLRF   03
32E8:  ADDLW  D7
32EA:  MOVWF  FE9
32EC:  MOVLW  04
32EE:  ADDWFC 03,W
32F0:  MOVWF  FEA
32F2:  BTFSC  FEF.7
32F4:  BRA    32F8
32F6:  BRA    330C
....................                         {Contrasena[i-1]=9;} 
32F8:  MOVLW  01
32FA:  SUBWF  xA4,W
32FC:  CLRF   03
32FE:  ADDLW  D7
3300:  MOVWF  FE9
3302:  MOVLW  04
3304:  ADDWFC 03,W
3306:  MOVWF  FEA
3308:  MOVLW  09
330A:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
330C:  MOVLW  01
330E:  SUBWF  xA4,W
3310:  CLRF   03
3312:  ADDLW  D7
3314:  MOVWF  FE9
3316:  MOVLW  04
3318:  ADDWFC 03,W
331A:  MOVWF  FEA
331C:  MOVFF  FEF,50A
3320:  MOVF   xA4,W
3322:  MULLW  14
3324:  MOVFF  FF3,50B
3328:  MOVLB  5
332A:  MOVFF  50A,50C
332E:  MOVFF  50B,50D
3332:  MOVLW  1E
3334:  MOVWF  x0E
3336:  MOVLW  01
3338:  MOVWF  x0F
333A:  MOVLB  0
333C:  CALL   1908
....................                   else 
3340:  BRA    3376
3342:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3344:  MOVLW  01
3346:  SUBWF  xA4,W
3348:  CLRF   03
334A:  ADDLW  D7
334C:  MOVWF  FE9
334E:  MOVLW  04
3350:  ADDWFC 03,W
3352:  MOVWF  FEA
3354:  MOVFF  FEF,50A
3358:  MOVF   xA4,W
335A:  MULLW  14
335C:  MOVFF  FF3,50B
3360:  MOVLB  5
3362:  MOVFF  50A,50C
3366:  MOVFF  50B,50D
336A:  MOVLW  1E
336C:  MOVWF  x0E
336E:  CLRF   x0F
3370:  MOVLB  0
3372:  CALL   1908
....................                }       
3376:  MOVLB  4
3378:  INCF   xA4,F
337A:  BRA    32C4
....................             }      
....................       } 
....................          else 
337C:  BRA    3380
....................             {Flanco2 = 0;}   
337E:  BCF    x95.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3380:  BSF    F92.2
3382:  BTFSS  F80.2
3384:  BRA    341E
....................       { 
....................          if(Flanco1 == 0) 
3386:  BTFSC  x95.1
3388:  BRA    341C
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
338A:  BSF    x95.1
338C:  MOVLW  1E
338E:  MOVLB  5
3390:  MOVWF  x0B
3392:  MOVLB  0
3394:  CALL   104A
3398:  MOVLB  4
339A:  INCF   xA3,F
....................                for(i=1;i<=4;i++) 
339C:  MOVLW  01
339E:  MOVWF  xA4
33A0:  MOVF   xA4,W
33A2:  SUBLW  04
33A4:  BNC   341C
....................                { 
....................                   if(unidad==i) 
33A6:  MOVF   xA4,W
33A8:  SUBWF  xA3,W
33AA:  BNZ   33E4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
33AC:  MOVLW  01
33AE:  SUBWF  xA4,W
33B0:  CLRF   03
33B2:  ADDLW  D7
33B4:  MOVWF  FE9
33B6:  MOVLW  04
33B8:  ADDWFC 03,W
33BA:  MOVWF  FEA
33BC:  MOVFF  FEF,50A
33C0:  MOVF   xA4,W
33C2:  MULLW  14
33C4:  MOVFF  FF3,50B
33C8:  MOVLB  5
33CA:  MOVFF  50A,50C
33CE:  MOVFF  50B,50D
33D2:  MOVLW  1E
33D4:  MOVWF  x0E
33D6:  MOVLW  01
33D8:  MOVWF  x0F
33DA:  MOVLB  0
33DC:  CALL   1908
....................                   else 
33E0:  BRA    3416
33E2:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
33E4:  MOVLW  01
33E6:  SUBWF  xA4,W
33E8:  CLRF   03
33EA:  ADDLW  D7
33EC:  MOVWF  FE9
33EE:  MOVLW  04
33F0:  ADDWFC 03,W
33F2:  MOVWF  FEA
33F4:  MOVFF  FEF,50A
33F8:  MOVF   xA4,W
33FA:  MULLW  14
33FC:  MOVFF  FF3,50B
3400:  MOVLB  5
3402:  MOVFF  50A,50C
3406:  MOVFF  50B,50D
340A:  MOVLW  1E
340C:  MOVWF  x0E
340E:  CLRF   x0F
3410:  MOVLB  0
3412:  CALL   1908
....................                } 
3416:  MOVLB  4
3418:  INCF   xA4,F
341A:  BRA    33A0
....................             } 
....................       } 
....................          else 
341C:  BRA    3420
....................             {Flanco1 = 0;}   
341E:  BCF    x95.1
....................      
....................       if(unidad>4) 
3420:  MOVF   xA3,W
3422:  SUBLW  04
3424:  BTFSC  FD8.0
3426:  BRA    3716
....................       {glcd_fillScreen(OFF);unidad=4; 
3428:  MOVLB  5
342A:  CLRF   x0B
342C:  MOVLB  0
342E:  CALL   10B4
3432:  MOVLW  04
3434:  MOVLB  4
3436:  MOVWF  xA3
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
3438:  MOVF   xD7,W
343A:  SUBLW  03
343C:  BNZ   3524
343E:  MOVF   xD8,W
3440:  SUBLW  08
3442:  BNZ   3524
3444:  MOVF   xD9,W
3446:  SUBLW  09
3448:  BNZ   3524
344A:  MOVF   xDA,W
344C:  SUBLW  02
344E:  BNZ   3524
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3450:  MOVLW  0A
3452:  MOVWF  FA9
3454:  CLRF   FA8
3456:  BCF    FA6.6
3458:  BCF    FA6.7
345A:  BSF    FA6.2
345C:  MOVF   FF2,W
345E:  MOVWF  00
3460:  BCF    FF2.7
3462:  MOVLB  F
3464:  MOVLW  55
3466:  MOVWF  FA7
3468:  MOVLW  AA
346A:  MOVWF  FA7
346C:  BSF    FA6.1
346E:  BTFSC  FA6.1
3470:  BRA    346E
3472:  BCF    FA6.2
3474:  MOVF   00,W
3476:  IORWF  FF2,F
3478:  MOVLW  14
347A:  MOVLB  5
347C:  MOVWF  x0B
347E:  MOVLB  0
3480:  CALL   104A
3484:  MOVLW  0B
3486:  MOVWF  FA9
3488:  CLRF   FA8
348A:  BCF    FA6.6
348C:  BCF    FA6.7
348E:  BSF    FA6.2
3490:  MOVF   FF2,W
3492:  MOVWF  00
3494:  BCF    FF2.7
3496:  MOVLB  F
3498:  MOVLW  55
349A:  MOVWF  FA7
349C:  MOVLW  AA
349E:  MOVWF  FA7
34A0:  BSF    FA6.1
34A2:  BTFSC  FA6.1
34A4:  BRA    34A2
34A6:  BCF    FA6.2
34A8:  MOVF   00,W
34AA:  IORWF  FF2,F
34AC:  MOVLW  14
34AE:  MOVLB  5
34B0:  MOVWF  x0B
34B2:  MOVLB  0
34B4:  CALL   104A
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
34B8:  MOVLW  0C
34BA:  MOVWF  FA9
34BC:  CLRF   FA8
34BE:  BCF    FA6.6
34C0:  BCF    FA6.7
34C2:  BSF    FA6.2
34C4:  MOVF   FF2,W
34C6:  MOVWF  00
34C8:  BCF    FF2.7
34CA:  MOVLB  F
34CC:  MOVLW  55
34CE:  MOVWF  FA7
34D0:  MOVLW  AA
34D2:  MOVWF  FA7
34D4:  BSF    FA6.1
34D6:  BTFSC  FA6.1
34D8:  BRA    34D6
34DA:  BCF    FA6.2
34DC:  MOVF   00,W
34DE:  IORWF  FF2,F
34E0:  MOVLW  14
34E2:  MOVLB  5
34E4:  MOVWF  x0B
34E6:  MOVLB  0
34E8:  CALL   104A
34EC:  MOVLW  0D
34EE:  MOVWF  FA9
34F0:  CLRF   FA8
34F2:  BCF    FA6.6
34F4:  BCF    FA6.7
34F6:  BSF    FA6.2
34F8:  MOVF   FF2,W
34FA:  MOVWF  00
34FC:  BCF    FF2.7
34FE:  MOVLB  F
3500:  MOVLW  55
3502:  MOVWF  FA7
3504:  MOVLW  AA
3506:  MOVWF  FA7
3508:  BSF    FA6.1
350A:  BTFSC  FA6.1
350C:  BRA    350A
350E:  BCF    FA6.2
3510:  MOVF   00,W
3512:  IORWF  FF2,F
3514:  MOVLW  14
3516:  MOVLB  5
3518:  MOVWF  x0B
351A:  MOVLB  0
351C:  CALL   104A
....................              reset_cpu();}         
3520:  RESET
3522:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
3524:  MOVF   xDB,W
3526:  SUBWF  xD7,W
3528:  BNZ   35FA
352A:  MOVF   xDC,W
352C:  SUBWF  xD8,W
352E:  BNZ   35FA
3530:  MOVF   xDD,W
3532:  SUBWF  xD9,W
3534:  BNZ   35FA
3536:  MOVF   xDE,W
3538:  SUBWF  xDA,W
353A:  BNZ   35FA
....................          { 
....................             glcd_fillScreen(OFF); 
353C:  MOVLB  5
353E:  CLRF   x0B
3540:  MOVLB  0
3542:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
3546:  MOVLW  04
3548:  MOVWF  FEA
354A:  MOVLW  EA
354C:  MOVWF  FE9
354E:  MOVFF  FF2,50A
3552:  BCF    FF2.7
3554:  MOVLW  00
3556:  CALL   0756
355A:  TBLRD*-
355C:  TBLRD*+
355E:  MOVF   FF5,W
3560:  MOVWF  FEE
3562:  IORLW  00
3564:  BNZ   355C
3566:  MOVLB  5
3568:  BTFSC  x0A.7
356A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
356C:  MOVLW  04
356E:  MOVWF  x0B
3570:  MOVLW  EA
3572:  MOVWF  x0A
3574:  MOVLW  1E
3576:  MOVWF  x0C
3578:  CLRF   x0D
357A:  CLRF   x0E
357C:  MOVLW  02
357E:  MOVWF  x0F
3580:  MOVLB  0
3582:  CALL   16E2
....................             strcpy(Menus.Letra,"Correcta"); 
3586:  MOVLW  04
3588:  MOVWF  FEA
358A:  MOVLW  EA
358C:  MOVWF  FE9
358E:  MOVFF  FF2,50A
3592:  BCF    FF2.7
3594:  MOVLW  00
3596:  CALL   0776
359A:  TBLRD*-
359C:  TBLRD*+
359E:  MOVF   FF5,W
35A0:  MOVWF  FEE
35A2:  IORLW  00
35A4:  BNZ   359C
35A6:  MOVLB  5
35A8:  BTFSC  x0A.7
35AA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
35AC:  MOVLW  04
35AE:  MOVWF  x0B
35B0:  MOVLW  EA
35B2:  MOVWF  x0A
35B4:  MOVLW  0F
35B6:  MOVWF  x0C
35B8:  MOVLW  1E
35BA:  MOVWF  x0D
35BC:  CLRF   x0E
35BE:  MOVLW  02
35C0:  MOVWF  x0F
35C2:  MOVLB  0
35C4:  CALL   16E2
....................             Menu=1;glcd_update();delay_ms(1000); 
35C8:  MOVLW  01
35CA:  MOVLB  4
35CC:  MOVWF  xA2
35CE:  MOVLB  0
35D0:  CALL   110E
35D4:  MOVLW  04
35D6:  MOVLB  5
35D8:  MOVWF  x0A
35DA:  MOVLW  FA
35DC:  MOVWF  x0B
35DE:  MOVLB  0
35E0:  CALL   104A
35E4:  MOVLB  5
35E6:  DECFSZ x0A,F
35E8:  BRA    35DA
....................             glcd_fillScreen(OFF);unidad=1; 
35EA:  CLRF   x0B
35EC:  MOVLB  0
35EE:  CALL   10B4
35F2:  MOVLW  01
35F4:  MOVLB  4
35F6:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
35F8:  BRA    3716
....................          { 
....................             glcd_fillScreen(OFF); 
35FA:  MOVLB  5
35FC:  CLRF   x0B
35FE:  MOVLB  0
3600:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
3604:  MOVLW  04
3606:  MOVWF  FEA
3608:  MOVLW  EA
360A:  MOVWF  FE9
360C:  MOVFF  FF2,50A
3610:  BCF    FF2.7
3612:  MOVLW  00
3614:  CALL   0756
3618:  TBLRD*-
361A:  TBLRD*+
361C:  MOVF   FF5,W
361E:  MOVWF  FEE
3620:  IORLW  00
3622:  BNZ   361A
3624:  MOVLB  5
3626:  BTFSC  x0A.7
3628:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
362A:  MOVLW  04
362C:  MOVWF  x0B
362E:  MOVLW  EA
3630:  MOVWF  x0A
3632:  MOVLW  1E
3634:  MOVWF  x0C
3636:  CLRF   x0D
3638:  CLRF   x0E
363A:  MOVLW  02
363C:  MOVWF  x0F
363E:  MOVLB  0
3640:  CALL   16E2
....................             strcpy(Menus.Letra,"Incorrecta"); 
3644:  MOVLW  04
3646:  MOVWF  FEA
3648:  MOVLW  EA
364A:  MOVWF  FE9
364C:  MOVFF  FF2,50A
3650:  BCF    FF2.7
3652:  MOVLW  00
3654:  CALL   079A
3658:  TBLRD*-
365A:  TBLRD*+
365C:  MOVF   FF5,W
365E:  MOVWF  FEE
3660:  IORLW  00
3662:  BNZ   365A
3664:  MOVLB  5
3666:  BTFSC  x0A.7
3668:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
366A:  MOVLW  04
366C:  MOVWF  x0B
366E:  MOVLW  EA
3670:  MOVWF  x0A
3672:  CLRF   x0C
3674:  MOVLW  1E
3676:  MOVWF  x0D
3678:  CLRF   x0E
367A:  MOVLW  02
367C:  MOVWF  x0F
367E:  MOVLB  0
3680:  CALL   16E2
....................             Menu=0;glcd_update();delay_ms(1000); 
3684:  MOVLB  4
3686:  CLRF   xA2
3688:  MOVLB  0
368A:  CALL   110E
368E:  MOVLW  04
3690:  MOVLB  5
3692:  MOVWF  x0A
3694:  MOVLW  FA
3696:  MOVWF  x0B
3698:  MOVLB  0
369A:  CALL   104A
369E:  MOVLB  5
36A0:  DECFSZ x0A,F
36A2:  BRA    3694
....................             glcd_fillScreen(OFF);unidad=1; 
36A4:  CLRF   x0B
36A6:  MOVLB  0
36A8:  CALL   10B4
36AC:  MOVLW  01
36AE:  MOVLB  4
36B0:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
36B2:  CLRF   xD7
36B4:  CLRF   xD8
36B6:  CLRF   xD9
36B8:  CLRF   xDA
....................             displayContrasena(Contrasena[0],20,30,1); 
36BA:  MOVFF  4D7,50C
36BE:  MOVLW  14
36C0:  MOVLB  5
36C2:  MOVWF  x0D
36C4:  MOVLW  1E
36C6:  MOVWF  x0E
36C8:  MOVLW  01
36CA:  MOVWF  x0F
36CC:  MOVLB  0
36CE:  CALL   1908
....................             displayContrasena(Contrasena[1],40,30,0); 
36D2:  MOVFF  4D8,50C
36D6:  MOVLW  28
36D8:  MOVLB  5
36DA:  MOVWF  x0D
36DC:  MOVLW  1E
36DE:  MOVWF  x0E
36E0:  CLRF   x0F
36E2:  MOVLB  0
36E4:  CALL   1908
....................             displayContrasena(Contrasena[2],60,30,0); 
36E8:  MOVFF  4D9,50C
36EC:  MOVLW  3C
36EE:  MOVLB  5
36F0:  MOVWF  x0D
36F2:  MOVLW  1E
36F4:  MOVWF  x0E
36F6:  CLRF   x0F
36F8:  MOVLB  0
36FA:  CALL   1908
....................             displayContrasena(Contrasena[3],80,30,0); 
36FE:  MOVFF  4DA,50C
3702:  MOVLW  50
3704:  MOVLB  5
3706:  MOVWF  x0D
3708:  MOVLW  1E
370A:  MOVWF  x0E
370C:  CLRF   x0F
370E:  MOVLB  0
3710:  CALL   1908
3714:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
3716:  DECFSZ xA2,W
3718:  BRA    3D28
....................        
....................       if(visual==1) 
371A:  BTFSS  x95.4
371C:  BRA    3CAE
....................       { 
....................          if(Opcion>7) 
371E:  MOVF   xAC,W
3720:  SUBLW  07
3722:  BC    3728
....................          {Opcion=1;} 
3724:  MOVLW  01
3726:  MOVWF  xAC
....................          if(Opcion<1) 
3728:  MOVF   xAC,F
372A:  BNZ   3730
....................          {Opcion=7;} 
372C:  MOVLW  07
372E:  MOVWF  xAC
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
3730:  MOVLW  04
3732:  MOVWF  FEA
3734:  MOVLW  EA
3736:  MOVWF  FE9
3738:  MOVFF  FF2,50A
373C:  BCF    FF2.7
373E:  MOVLW  00
3740:  MOVLB  0
3742:  CALL   07C0
3746:  TBLRD*-
3748:  TBLRD*+
374A:  MOVF   FF5,W
374C:  MOVWF  FEE
374E:  IORLW  00
3750:  BNZ   3748
3752:  MOVLB  5
3754:  BTFSC  x0A.7
3756:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
3758:  MOVLW  04
375A:  MOVWF  x0B
375C:  MOVLW  EA
375E:  MOVWF  x0A
3760:  MOVLW  1E
3762:  MOVWF  x0C
3764:  CLRF   x0D
3766:  MOVLW  01
3768:  MOVWF  x0E
376A:  MOVWF  x0F
376C:  MOVLB  0
376E:  CALL   16E2
....................        
....................          if(Opcion<=6) 
3772:  MOVLB  4
3774:  MOVF   xAC,W
3776:  SUBLW  06
3778:  BTFSS  FD8.0
377A:  BRA    3ADE
....................          { 
....................             if(Opcion==1) 
377C:  DECFSZ xAC,W
377E:  BRA    37C6
....................                {strcpy(Menus.Letra,"Caucho"); 
3780:  MOVLW  04
3782:  MOVWF  FEA
3784:  MOVLW  EA
3786:  MOVWF  FE9
3788:  MOVFF  FF2,50A
378C:  BCF    FF2.7
378E:  MOVLW  00
3790:  MOVLB  0
3792:  CALL   07EA
3796:  TBLRD*-
3798:  TBLRD*+
379A:  MOVF   FF5,W
379C:  MOVWF  FEE
379E:  IORLW  00
37A0:  BNZ   3798
37A2:  MOVLB  5
37A4:  BTFSC  x0A.7
37A6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
37A8:  MOVLW  04
37AA:  MOVWF  x0B
37AC:  MOVLW  EA
37AE:  MOVWF  x0A
37B0:  CLRF   x0C
37B2:  MOVLW  0A
37B4:  MOVWF  x0D
37B6:  MOVLW  01
37B8:  MOVWF  x0E
37BA:  MOVWF  x0F
37BC:  MOVLB  0
37BE:  CALL   16E2
....................             else 
37C2:  BRA    3808
37C4:  MOVLB  4
....................                {strcpy(Menus.Letra,"Caucho"); 
37C6:  MOVLW  04
37C8:  MOVWF  FEA
37CA:  MOVLW  EA
37CC:  MOVWF  FE9
37CE:  MOVFF  FF2,50A
37D2:  BCF    FF2.7
37D4:  MOVLW  00
37D6:  MOVLB  0
37D8:  CALL   07EA
37DC:  TBLRD*-
37DE:  TBLRD*+
37E0:  MOVF   FF5,W
37E2:  MOVWF  FEE
37E4:  IORLW  00
37E6:  BNZ   37DE
37E8:  MOVLB  5
37EA:  BTFSC  x0A.7
37EC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
37EE:  MOVLW  04
37F0:  MOVWF  x0B
37F2:  MOVLW  EA
37F4:  MOVWF  x0A
37F6:  CLRF   x0C
37F8:  MOVLW  0A
37FA:  MOVWF  x0D
37FC:  CLRF   x0E
37FE:  MOVLW  01
3800:  MOVWF  x0F
3802:  MOVLB  0
3804:  CALL   16E2
....................              
....................             if(Opcion==2)    
3808:  MOVLB  4
380A:  MOVF   xAC,W
380C:  SUBLW  02
380E:  BNZ   3856
....................                {strcpy(Menus.Letra,"Liquidos"); 
3810:  MOVLW  04
3812:  MOVWF  FEA
3814:  MOVLW  EA
3816:  MOVWF  FE9
3818:  MOVFF  FF2,50A
381C:  BCF    FF2.7
381E:  MOVLW  00
3820:  MOVLB  0
3822:  CALL   080C
3826:  TBLRD*-
3828:  TBLRD*+
382A:  MOVF   FF5,W
382C:  MOVWF  FEE
382E:  IORLW  00
3830:  BNZ   3828
3832:  MOVLB  5
3834:  BTFSC  x0A.7
3836:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,19,1,1);} 
3838:  MOVLW  04
383A:  MOVWF  x0B
383C:  MOVLW  EA
383E:  MOVWF  x0A
3840:  CLRF   x0C
3842:  MOVLW  13
3844:  MOVWF  x0D
3846:  MOVLW  01
3848:  MOVWF  x0E
384A:  MOVWF  x0F
384C:  MOVLB  0
384E:  CALL   16E2
....................             else 
3852:  BRA    3898
3854:  MOVLB  4
....................                {strcpy(Menus.Letra,"Liquidos"); 
3856:  MOVLW  04
3858:  MOVWF  FEA
385A:  MOVLW  EA
385C:  MOVWF  FE9
385E:  MOVFF  FF2,50A
3862:  BCF    FF2.7
3864:  MOVLW  00
3866:  MOVLB  0
3868:  CALL   080C
386C:  TBLRD*-
386E:  TBLRD*+
3870:  MOVF   FF5,W
3872:  MOVWF  FEE
3874:  IORLW  00
3876:  BNZ   386E
3878:  MOVLB  5
387A:  BTFSC  x0A.7
387C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,19,0,1);}    
387E:  MOVLW  04
3880:  MOVWF  x0B
3882:  MOVLW  EA
3884:  MOVWF  x0A
3886:  CLRF   x0C
3888:  MOVLW  13
388A:  MOVWF  x0D
388C:  CLRF   x0E
388E:  MOVLW  01
3890:  MOVWF  x0F
3892:  MOVLB  0
3894:  CALL   16E2
....................                 
....................              if(Opcion==3)    
3898:  MOVLB  4
389A:  MOVF   xAC,W
389C:  SUBLW  03
389E:  BNZ   38E6
....................                {strcpy(Menus.Letra,"Instrumental Suave"); 
38A0:  MOVLW  04
38A2:  MOVWF  FEA
38A4:  MOVLW  EA
38A6:  MOVWF  FE9
38A8:  MOVFF  FF2,50A
38AC:  BCF    FF2.7
38AE:  MOVLW  00
38B0:  MOVLB  0
38B2:  CALL   0830
38B6:  TBLRD*-
38B8:  TBLRD*+
38BA:  MOVF   FF5,W
38BC:  MOVWF  FEE
38BE:  IORLW  00
38C0:  BNZ   38B8
38C2:  MOVLB  5
38C4:  BTFSC  x0A.7
38C6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,28,1,1);} 
38C8:  MOVLW  04
38CA:  MOVWF  x0B
38CC:  MOVLW  EA
38CE:  MOVWF  x0A
38D0:  CLRF   x0C
38D2:  MOVLW  1C
38D4:  MOVWF  x0D
38D6:  MOVLW  01
38D8:  MOVWF  x0E
38DA:  MOVWF  x0F
38DC:  MOVLB  0
38DE:  CALL   16E2
....................             else 
38E2:  BRA    3928
38E4:  MOVLB  4
....................                {strcpy(Menus.Letra,"Instrumental Suave"); 
38E6:  MOVLW  04
38E8:  MOVWF  FEA
38EA:  MOVLW  EA
38EC:  MOVWF  FE9
38EE:  MOVFF  FF2,50A
38F2:  BCF    FF2.7
38F4:  MOVLW  00
38F6:  MOVLB  0
38F8:  CALL   0830
38FC:  TBLRD*-
38FE:  TBLRD*+
3900:  MOVF   FF5,W
3902:  MOVWF  FEE
3904:  IORLW  00
3906:  BNZ   38FE
3908:  MOVLB  5
390A:  BTFSC  x0A.7
390C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,28,0,1);} 
390E:  MOVLW  04
3910:  MOVWF  x0B
3912:  MOVLW  EA
3914:  MOVWF  x0A
3916:  CLRF   x0C
3918:  MOVLW  1C
391A:  MOVWF  x0D
391C:  CLRF   x0E
391E:  MOVLW  01
3920:  MOVWF  x0F
3922:  MOVLB  0
3924:  CALL   16E2
....................                 
....................             if(Opcion==4)    
3928:  MOVLB  4
392A:  MOVF   xAC,W
392C:  SUBLW  04
392E:  BNZ   3976
....................                {strcpy(Menus.Letra,"Textil e Instrumental"); 
3930:  MOVLW  04
3932:  MOVWF  FEA
3934:  MOVLW  EA
3936:  MOVWF  FE9
3938:  MOVFF  FF2,50A
393C:  BCF    FF2.7
393E:  MOVLW  00
3940:  MOVLB  0
3942:  CALL   085E
3946:  TBLRD*-
3948:  TBLRD*+
394A:  MOVF   FF5,W
394C:  MOVWF  FEE
394E:  IORLW  00
3950:  BNZ   3948
3952:  MOVLB  5
3954:  BTFSC  x0A.7
3956:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,37,1,1);} 
3958:  MOVLW  04
395A:  MOVWF  x0B
395C:  MOVLW  EA
395E:  MOVWF  x0A
3960:  CLRF   x0C
3962:  MOVLW  25
3964:  MOVWF  x0D
3966:  MOVLW  01
3968:  MOVWF  x0E
396A:  MOVWF  x0F
396C:  MOVLB  0
396E:  CALL   16E2
....................             else 
3972:  BRA    39B8
3974:  MOVLB  4
....................                {strcpy(Menus.Letra,"Textil e Instrumental"); 
3976:  MOVLW  04
3978:  MOVWF  FEA
397A:  MOVLW  EA
397C:  MOVWF  FE9
397E:  MOVFF  FF2,50A
3982:  BCF    FF2.7
3984:  MOVLW  00
3986:  MOVLB  0
3988:  CALL   085E
398C:  TBLRD*-
398E:  TBLRD*+
3990:  MOVF   FF5,W
3992:  MOVWF  FEE
3994:  IORLW  00
3996:  BNZ   398E
3998:  MOVLB  5
399A:  BTFSC  x0A.7
399C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,37,0,1);}    
399E:  MOVLW  04
39A0:  MOVWF  x0B
39A2:  MOVLW  EA
39A4:  MOVWF  x0A
39A6:  CLRF   x0C
39A8:  MOVLW  25
39AA:  MOVWF  x0D
39AC:  CLRF   x0E
39AE:  MOVLW  01
39B0:  MOVWF  x0F
39B2:  MOVLB  0
39B4:  CALL   16E2
....................                 
....................             if(Opcion==5)    
39B8:  MOVLB  4
39BA:  MOVF   xAC,W
39BC:  SUBLW  05
39BE:  BNZ   3A06
....................                {strcpy(Menus.Letra,"Personalizado"); 
39C0:  MOVLW  04
39C2:  MOVWF  FEA
39C4:  MOVLW  EA
39C6:  MOVWF  FE9
39C8:  MOVFF  FF2,50A
39CC:  BCF    FF2.7
39CE:  MOVLW  00
39D0:  MOVLB  0
39D2:  CALL   088E
39D6:  TBLRD*-
39D8:  TBLRD*+
39DA:  MOVF   FF5,W
39DC:  MOVWF  FEE
39DE:  IORLW  00
39E0:  BNZ   39D8
39E2:  MOVLB  5
39E4:  BTFSC  x0A.7
39E6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,46,1,1);} 
39E8:  MOVLW  04
39EA:  MOVWF  x0B
39EC:  MOVLW  EA
39EE:  MOVWF  x0A
39F0:  CLRF   x0C
39F2:  MOVLW  2E
39F4:  MOVWF  x0D
39F6:  MOVLW  01
39F8:  MOVWF  x0E
39FA:  MOVWF  x0F
39FC:  MOVLB  0
39FE:  CALL   16E2
....................             else 
3A02:  BRA    3A48
3A04:  MOVLB  4
....................                {strcpy(Menus.Letra,"Personalizado"); 
3A06:  MOVLW  04
3A08:  MOVWF  FEA
3A0A:  MOVLW  EA
3A0C:  MOVWF  FE9
3A0E:  MOVFF  FF2,50A
3A12:  BCF    FF2.7
3A14:  MOVLW  00
3A16:  MOVLB  0
3A18:  CALL   088E
3A1C:  TBLRD*-
3A1E:  TBLRD*+
3A20:  MOVF   FF5,W
3A22:  MOVWF  FEE
3A24:  IORLW  00
3A26:  BNZ   3A1E
3A28:  MOVLB  5
3A2A:  BTFSC  x0A.7
3A2C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,46,0,1);}   
3A2E:  MOVLW  04
3A30:  MOVWF  x0B
3A32:  MOVLW  EA
3A34:  MOVWF  x0A
3A36:  CLRF   x0C
3A38:  MOVLW  2E
3A3A:  MOVWF  x0D
3A3C:  CLRF   x0E
3A3E:  MOVLW  01
3A40:  MOVWF  x0F
3A42:  MOVLB  0
3A44:  CALL   16E2
....................                 
....................             if(Opcion==6)    
3A48:  MOVLB  4
3A4A:  MOVF   xAC,W
3A4C:  SUBLW  06
3A4E:  BNZ   3A96
....................                {strcpy(Menus.Letra,"Cambio Clave"); 
3A50:  MOVLW  04
3A52:  MOVWF  FEA
3A54:  MOVLW  EA
3A56:  MOVWF  FE9
3A58:  MOVFF  FF2,50A
3A5C:  BCF    FF2.7
3A5E:  MOVLW  00
3A60:  MOVLB  0
3A62:  CALL   08B6
3A66:  TBLRD*-
3A68:  TBLRD*+
3A6A:  MOVF   FF5,W
3A6C:  MOVWF  FEE
3A6E:  IORLW  00
3A70:  BNZ   3A68
3A72:  MOVLB  5
3A74:  BTFSC  x0A.7
3A76:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,1,1);} 
3A78:  MOVLW  04
3A7A:  MOVWF  x0B
3A7C:  MOVLW  EA
3A7E:  MOVWF  x0A
3A80:  CLRF   x0C
3A82:  MOVLW  37
3A84:  MOVWF  x0D
3A86:  MOVLW  01
3A88:  MOVWF  x0E
3A8A:  MOVWF  x0F
3A8C:  MOVLB  0
3A8E:  CALL   16E2
....................             else 
3A92:  BRA    3AD8
3A94:  MOVLB  4
....................                {strcpy(Menus.Letra,"Cambio Clave"); 
3A96:  MOVLW  04
3A98:  MOVWF  FEA
3A9A:  MOVLW  EA
3A9C:  MOVWF  FE9
3A9E:  MOVFF  FF2,50A
3AA2:  BCF    FF2.7
3AA4:  MOVLW  00
3AA6:  MOVLB  0
3AA8:  CALL   08B6
3AAC:  TBLRD*-
3AAE:  TBLRD*+
3AB0:  MOVF   FF5,W
3AB2:  MOVWF  FEE
3AB4:  IORLW  00
3AB6:  BNZ   3AAE
3AB8:  MOVLB  5
3ABA:  BTFSC  x0A.7
3ABC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,0,1);}      
3ABE:  MOVLW  04
3AC0:  MOVWF  x0B
3AC2:  MOVLW  EA
3AC4:  MOVWF  x0A
3AC6:  CLRF   x0C
3AC8:  MOVLW  37
3ACA:  MOVWF  x0D
3ACC:  CLRF   x0E
3ACE:  MOVLW  01
3AD0:  MOVWF  x0F
3AD2:  MOVLB  0
3AD4:  CALL   16E2
....................                visual=0; 
3AD8:  MOVLB  4
3ADA:  BCF    x95.4
....................          } 
....................          else 
3ADC:  BRA    3CAE
....................          { 
....................             if(Opcion==7) 
3ADE:  MOVF   xAC,W
3AE0:  SUBLW  07
3AE2:  BNZ   3B2A
....................                {strcpy(Menus.Letra,"Presion Atm."); 
3AE4:  MOVLW  04
3AE6:  MOVWF  FEA
3AE8:  MOVLW  EA
3AEA:  MOVWF  FE9
3AEC:  MOVFF  FF2,50A
3AF0:  BCF    FF2.7
3AF2:  MOVLW  00
3AF4:  MOVLB  0
3AF6:  CALL   08DE
3AFA:  TBLRD*-
3AFC:  TBLRD*+
3AFE:  MOVF   FF5,W
3B00:  MOVWF  FEE
3B02:  IORLW  00
3B04:  BNZ   3AFC
3B06:  MOVLB  5
3B08:  BTFSC  x0A.7
3B0A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
3B0C:  MOVLW  04
3B0E:  MOVWF  x0B
3B10:  MOVLW  EA
3B12:  MOVWF  x0A
3B14:  CLRF   x0C
3B16:  MOVLW  0A
3B18:  MOVWF  x0D
3B1A:  MOVLW  01
3B1C:  MOVWF  x0E
3B1E:  MOVWF  x0F
3B20:  MOVLB  0
3B22:  CALL   16E2
....................             else 
3B26:  BRA    3B6C
3B28:  MOVLB  4
....................                {strcpy(Menus.Letra,"Presion Atm."); 
3B2A:  MOVLW  04
3B2C:  MOVWF  FEA
3B2E:  MOVLW  EA
3B30:  MOVWF  FE9
3B32:  MOVFF  FF2,50A
3B36:  BCF    FF2.7
3B38:  MOVLW  00
3B3A:  MOVLB  0
3B3C:  CALL   08DE
3B40:  TBLRD*-
3B42:  TBLRD*+
3B44:  MOVF   FF5,W
3B46:  MOVWF  FEE
3B48:  IORLW  00
3B4A:  BNZ   3B42
3B4C:  MOVLB  5
3B4E:  BTFSC  x0A.7
3B50:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
3B52:  MOVLW  04
3B54:  MOVWF  x0B
3B56:  MOVLW  EA
3B58:  MOVWF  x0A
3B5A:  CLRF   x0C
3B5C:  MOVLW  0A
3B5E:  MOVWF  x0D
3B60:  CLRF   x0E
3B62:  MOVLW  01
3B64:  MOVWF  x0F
3B66:  MOVLB  0
3B68:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3B6C:  MOVLW  04
3B6E:  MOVWF  FEA
3B70:  MOVLW  EA
3B72:  MOVWF  FE9
3B74:  MOVFF  FF2,50A
3B78:  BCF    FF2.7
3B7A:  MOVLW  00
3B7C:  CALL   0906
3B80:  TBLRD*-
3B82:  TBLRD*+
3B84:  MOVF   FF5,W
3B86:  MOVWF  FEE
3B88:  IORLW  00
3B8A:  BNZ   3B82
3B8C:  MOVLB  5
3B8E:  BTFSC  x0A.7
3B90:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,19,0,1); 
3B92:  MOVLW  04
3B94:  MOVWF  x0B
3B96:  MOVLW  EA
3B98:  MOVWF  x0A
3B9A:  CLRF   x0C
3B9C:  MOVLW  13
3B9E:  MOVWF  x0D
3BA0:  CLRF   x0E
3BA2:  MOVLW  01
3BA4:  MOVWF  x0F
3BA6:  MOVLB  0
3BA8:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3BAC:  MOVLW  04
3BAE:  MOVWF  FEA
3BB0:  MOVLW  EA
3BB2:  MOVWF  FE9
3BB4:  MOVFF  FF2,50A
3BB8:  BCF    FF2.7
3BBA:  MOVLW  00
3BBC:  CALL   0906
3BC0:  TBLRD*-
3BC2:  TBLRD*+
3BC4:  MOVF   FF5,W
3BC6:  MOVWF  FEE
3BC8:  IORLW  00
3BCA:  BNZ   3BC2
3BCC:  MOVLB  5
3BCE:  BTFSC  x0A.7
3BD0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,28,0,1); 
3BD2:  MOVLW  04
3BD4:  MOVWF  x0B
3BD6:  MOVLW  EA
3BD8:  MOVWF  x0A
3BDA:  CLRF   x0C
3BDC:  MOVLW  1C
3BDE:  MOVWF  x0D
3BE0:  CLRF   x0E
3BE2:  MOVLW  01
3BE4:  MOVWF  x0F
3BE6:  MOVLB  0
3BE8:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3BEC:  MOVLW  04
3BEE:  MOVWF  FEA
3BF0:  MOVLW  EA
3BF2:  MOVWF  FE9
3BF4:  MOVFF  FF2,50A
3BF8:  BCF    FF2.7
3BFA:  MOVLW  00
3BFC:  CALL   0906
3C00:  TBLRD*-
3C02:  TBLRD*+
3C04:  MOVF   FF5,W
3C06:  MOVWF  FEE
3C08:  IORLW  00
3C0A:  BNZ   3C02
3C0C:  MOVLB  5
3C0E:  BTFSC  x0A.7
3C10:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,37,0,1); 
3C12:  MOVLW  04
3C14:  MOVWF  x0B
3C16:  MOVLW  EA
3C18:  MOVWF  x0A
3C1A:  CLRF   x0C
3C1C:  MOVLW  25
3C1E:  MOVWF  x0D
3C20:  CLRF   x0E
3C22:  MOVLW  01
3C24:  MOVWF  x0F
3C26:  MOVLB  0
3C28:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3C2C:  MOVLW  04
3C2E:  MOVWF  FEA
3C30:  MOVLW  EA
3C32:  MOVWF  FE9
3C34:  MOVFF  FF2,50A
3C38:  BCF    FF2.7
3C3A:  MOVLW  00
3C3C:  CALL   0906
3C40:  TBLRD*-
3C42:  TBLRD*+
3C44:  MOVF   FF5,W
3C46:  MOVWF  FEE
3C48:  IORLW  00
3C4A:  BNZ   3C42
3C4C:  MOVLB  5
3C4E:  BTFSC  x0A.7
3C50:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,46,0,1); 
3C52:  MOVLW  04
3C54:  MOVWF  x0B
3C56:  MOVLW  EA
3C58:  MOVWF  x0A
3C5A:  CLRF   x0C
3C5C:  MOVLW  2E
3C5E:  MOVWF  x0D
3C60:  CLRF   x0E
3C62:  MOVLW  01
3C64:  MOVWF  x0F
3C66:  MOVLB  0
3C68:  CALL   16E2
....................                 
....................                strcpy(Menus.Letra,"           "); 
3C6C:  MOVLW  04
3C6E:  MOVWF  FEA
3C70:  MOVLW  EA
3C72:  MOVWF  FE9
3C74:  MOVFF  FF2,50A
3C78:  BCF    FF2.7
3C7A:  MOVLW  00
3C7C:  CALL   0906
3C80:  TBLRD*-
3C82:  TBLRD*+
3C84:  MOVF   FF5,W
3C86:  MOVWF  FEE
3C88:  IORLW  00
3C8A:  BNZ   3C82
3C8C:  MOVLB  5
3C8E:  BTFSC  x0A.7
3C90:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,0,1); 
3C92:  MOVLW  04
3C94:  MOVWF  x0B
3C96:  MOVLW  EA
3C98:  MOVWF  x0A
3C9A:  CLRF   x0C
3C9C:  MOVLW  37
3C9E:  MOVWF  x0D
3CA0:  CLRF   x0E
3CA2:  MOVLW  01
3CA4:  MOVWF  x0F
3CA6:  MOVLB  0
3CA8:  CALL   16E2
3CAC:  MOVLB  4
....................          } 
....................       } 
....................       if(UP)//Si oprime hacia arriba 
3CAE:  BSF    F92.0
3CB0:  BTFSS  F80.0
3CB2:  BRA    3CCE
....................          {  if(Flanco == 0)  
3CB4:  BTFSC  x95.0
3CB6:  BRA    3CCC
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3CB8:  BSF    x95.0
3CBA:  MOVLW  1E
3CBC:  MOVLB  5
3CBE:  MOVWF  x0B
3CC0:  MOVLB  0
3CC2:  CALL   104A
3CC6:  MOVLB  4
3CC8:  DECF   xAC,F
3CCA:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3CCC:  BRA    3CD0
....................                {Flanco = 0;} 
3CCE:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
3CD0:  BSF    F92.1
3CD2:  BTFSS  F80.1
3CD4:  BRA    3CF0
....................          {  if(Flanco2 == 0)  
3CD6:  BTFSC  x95.2
3CD8:  BRA    3CEE
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
3CDA:  BSF    x95.2
3CDC:  MOVLW  1E
3CDE:  MOVLB  5
3CE0:  MOVWF  x0B
3CE2:  MOVLB  0
3CE4:  CALL   104A
3CE8:  MOVLB  4
3CEA:  INCF   xAC,F
3CEC:  BSF    x95.4
....................                }      
....................          } 
....................             else 
3CEE:  BRA    3CF2
....................                {Flanco2 = 0;}   
3CF0:  BCF    x95.2
....................                 
....................        if(RIGHT)//Si oprime SET 
3CF2:  BSF    F92.2
3CF4:  BTFSS  F80.2
3CF6:  BRA    3D26
....................          {  if(Flanco1 == 0)  
3CF8:  BTFSC  x95.1
3CFA:  BRA    3D24
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
3CFC:  BSF    x95.1
3CFE:  MOVLW  1E
3D00:  MOVLB  5
3D02:  MOVWF  x0B
3D04:  MOVLB  0
3D06:  CALL   104A
3D0A:  MOVLW  03
3D0C:  MOVLB  4
3D0E:  ADDWF  xAC,W
3D10:  MOVWF  xA2
3D12:  MOVLW  01
3D14:  MOVWF  xAC
3D16:  MOVLB  5
3D18:  CLRF   x0B
3D1A:  MOVLB  0
3D1C:  CALL   10B4
3D20:  MOVLB  4
3D22:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3D24:  BRA    3D28
....................                {Flanco1 = 0;}   
3D26:  BCF    x95.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
3D28:  MOVF   xA2,W
3D2A:  SUBLW  04
3D2C:  BTFSS  FD8.2
3D2E:  BRA    405C
....................        
....................       if(visual==1) 
3D30:  BTFSS  x95.4
3D32:  BRA    3E88
....................       { 
....................          glcd_imagen(2); //Guante 
3D34:  MOVLW  02
3D36:  MOVLB  5
3D38:  MOVWF  x0A
3D3A:  MOVLB  0
3D3C:  CALL   2136
....................          strcpy(Menus.Letra,"Caucho"); 
3D40:  MOVLW  04
3D42:  MOVWF  FEA
3D44:  MOVLW  EA
3D46:  MOVWF  FE9
3D48:  MOVFF  FF2,50A
3D4C:  BCF    FF2.7
3D4E:  MOVLW  00
3D50:  CALL   07EA
3D54:  TBLRD*-
3D56:  TBLRD*+
3D58:  MOVF   FF5,W
3D5A:  MOVWF  FEE
3D5C:  IORLW  00
3D5E:  BNZ   3D56
3D60:  MOVLB  5
3D62:  BTFSC  x0A.7
3D64:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3D66:  MOVLW  04
3D68:  MOVWF  x0B
3D6A:  MOVLW  EA
3D6C:  MOVWF  x0A
3D6E:  MOVLW  14
3D70:  MOVWF  x0C
3D72:  CLRF   x0D
3D74:  MOVLW  01
3D76:  MOVWF  x0E
3D78:  MOVLW  02
3D7A:  MOVWF  x0F
3D7C:  MOVLB  0
3D7E:  CALL   16E2
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3D82:  MOVLW  04
3D84:  MOVWF  FEA
3D86:  MOVLW  EA
3D88:  MOVWF  FE9
3D8A:  MOVFF  FF2,50A
3D8E:  BCF    FF2.7
3D90:  MOVLW  00
3D92:  CALL   07EA
3D96:  TBLRD*-
3D98:  TBLRD*+
3D9A:  MOVF   FF5,W
3D9C:  MOVWF  FEE
3D9E:  IORLW  00
3DA0:  BNZ   3D98
3DA2:  MOVLB  5
3DA4:  BTFSC  x0A.7
3DA6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3DA8:  MOVLW  04
3DAA:  MOVWF  x0B
3DAC:  MOVLW  EA
3DAE:  MOVWF  x0A
3DB0:  MOVLW  07
3DB2:  MOVWF  x0C
3DB4:  MOVLW  37
3DB6:  MOVWF  x0D
3DB8:  CLRF   x0E
3DBA:  MOVLW  01
3DBC:  MOVWF  x0F
3DBE:  MOVLB  0
3DC0:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3DC4:  MOVLW  04
3DC6:  MOVWF  FEA
3DC8:  MOVLW  EA
3DCA:  MOVWF  FE9
3DCC:  MOVFF  FF2,50A
3DD0:  BCF    FF2.7
3DD2:  MOVLW  00
3DD4:  CALL   092C
3DD8:  TBLRD*-
3DDA:  TBLRD*+
3DDC:  MOVF   FF5,W
3DDE:  MOVWF  FEE
3DE0:  IORLW  00
3DE2:  BNZ   3DDA
3DE4:  MOVLB  5
3DE6:  BTFSC  x0A.7
3DE8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3DEA:  MOVLW  04
3DEC:  MOVWF  x0B
3DEE:  MOVLW  EA
3DF0:  MOVWF  x0A
3DF2:  CLRF   x0C
3DF4:  MOVLW  1A
3DF6:  MOVWF  x0D
3DF8:  CLRF   x0E
3DFA:  MOVLW  01
3DFC:  MOVWF  x0F
3DFE:  MOVLB  0
3E00:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3E04:  MOVLW  04
3E06:  MOVWF  FEA
3E08:  MOVLW  EA
3E0A:  MOVWF  FE9
3E0C:  MOVFF  FF2,50A
3E10:  BCF    FF2.7
3E12:  MOVLW  00
3E14:  CALL   0958
3E18:  TBLRD*-
3E1A:  TBLRD*+
3E1C:  MOVF   FF5,W
3E1E:  MOVWF  FEE
3E20:  IORLW  00
3E22:  BNZ   3E1A
3E24:  MOVLB  5
3E26:  BTFSC  x0A.7
3E28:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3E2A:  MOVLW  04
3E2C:  MOVWF  x0B
3E2E:  MOVLW  EA
3E30:  MOVWF  x0A
3E32:  CLRF   x0C
3E34:  MOVLW  24
3E36:  MOVWF  x0D
3E38:  CLRF   x0E
3E3A:  MOVLW  01
3E3C:  MOVWF  x0F
3E3E:  MOVLB  0
3E40:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3E44:  MOVLW  04
3E46:  MOVWF  FEA
3E48:  MOVLW  EA
3E4A:  MOVWF  FE9
3E4C:  MOVFF  FF2,50A
3E50:  BCF    FF2.7
3E52:  MOVLW  00
3E54:  CALL   0988
3E58:  TBLRD*-
3E5A:  TBLRD*+
3E5C:  MOVF   FF5,W
3E5E:  MOVWF  FEE
3E60:  IORLW  00
3E62:  BNZ   3E5A
3E64:  MOVLB  5
3E66:  BTFSC  x0A.7
3E68:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3E6A:  MOVLW  04
3E6C:  MOVWF  x0B
3E6E:  MOVLW  EA
3E70:  MOVWF  x0A
3E72:  CLRF   x0C
3E74:  MOVLW  2E
3E76:  MOVWF  x0D
3E78:  CLRF   x0E
3E7A:  MOVLW  01
3E7C:  MOVWF  x0F
3E7E:  MOVLB  0
3E80:  CALL   16E2
....................          visual=0; 
3E84:  MOVLB  4
3E86:  BCF    x95.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3E88:  BSF    F92.3
3E8A:  BTFSS  F80.3
3E8C:  BRA    3EAE
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3E8E:  MOVLW  1E
3E90:  MOVLB  5
3E92:  MOVWF  x0B
3E94:  MOVLB  0
3E96:  CALL   104A
3E9A:  MOVLW  01
3E9C:  MOVLB  4
3E9E:  MOVWF  xA2
3EA0:  MOVLB  5
3EA2:  CLRF   x0B
3EA4:  MOVLB  0
3EA6:  CALL   10B4
3EAA:  MOVLB  4
3EAC:  BSF    x95.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3EAE:  BSF    F92.2
3EB0:  BTFSS  F80.2
3EB2:  BRA    405C
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;visual=1; 
3EB4:  CLRF   xCB
3EB6:  CLRF   xCC
3EB8:  MOVLW  05
3EBA:  MOVWF  xCD
3EBC:  MOVLW  01
3EBE:  MOVWF  xCE
3EC0:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3EC2:  CLRF   xD3
3EC4:  CLRF   xD4
3EC6:  MOVLW  05
3EC8:  MOVWF  xD5
3ECA:  MOVLW  01
3ECC:  MOVWF  xD6
3ECE:  CLRF   xB8
3ED0:  CLRF   xB7
3ED2:  MOVLW  79
3ED4:  MOVWF  xA9
3ED6:  MOVLW  14
3ED8:  MOVWF  xA2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3EDA:  MOVWF  xA2
3EDC:  MOVLW  0F
3EDE:  MOVLB  5
3EE0:  MOVWF  x20
3EE2:  MOVLW  12
3EE4:  MOVWF  x21
3EE6:  MOVLW  1E
3EE8:  MOVWF  x22
3EEA:  MOVLW  35
3EEC:  MOVWF  x23
3EEE:  CLRF   x24
3EF0:  MOVLW  01
3EF2:  MOVWF  x25
3EF4:  MOVLB  0
3EF6:  CALL   1620
3EFA:  MOVLB  4
3EFC:  CLRF   xAE
3EFE:  MOVLW  C0
3F00:  IORWF  FF2,F
3F02:  MOVLB  5
3F04:  CLRF   x0B
3F06:  MOVLB  0
3F08:  CALL   10B4
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3F0C:  MOVLW  04
3F0E:  MOVWF  FEA
3F10:  MOVLW  EA
3F12:  MOVWF  FE9
3F14:  MOVFF  FF2,50A
3F18:  BCF    FF2.7
3F1A:  MOVLW  00
3F1C:  CALL   09B2
3F20:  TBLRD*-
3F22:  TBLRD*+
3F24:  MOVF   FF5,W
3F26:  MOVWF  FEE
3F28:  IORLW  00
3F2A:  BNZ   3F22
3F2C:  MOVLB  5
3F2E:  BTFSC  x0A.7
3F30:  BSF    FF2.7
3F32:  MOVLW  04
3F34:  MOVWF  x0B
3F36:  MOVLW  EA
3F38:  MOVWF  x0A
3F3A:  CLRF   x0C
3F3C:  MOVLW  37
3F3E:  MOVWF  x0D
3F40:  MOVLW  02
3F42:  MOVWF  x0E
3F44:  MOVLW  01
3F46:  MOVWF  x0F
3F48:  MOVLB  0
3F4A:  CALL   16E2
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3F4E:  MOVLW  0F
3F50:  MOVLB  5
3F52:  MOVWF  x20
3F54:  MOVLW  12
3F56:  MOVWF  x21
3F58:  MOVLW  1E
3F5A:  MOVWF  x22
3F5C:  MOVLW  35
3F5E:  MOVWF  x23
3F60:  CLRF   x24
3F62:  MOVLW  01
3F64:  MOVWF  x25
3F66:  MOVLB  0
3F68:  CALL   1620
....................          glcd_imagen(5); 
3F6C:  MOVLW  05
3F6E:  MOVLB  5
3F70:  MOVWF  x0A
3F72:  MOVLB  0
3F74:  CALL   2136
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3F78:  MOVLW  04
3F7A:  MOVWF  FEA
3F7C:  MOVLW  EA
3F7E:  MOVWF  FE9
3F80:  MOVFF  FF2,50A
3F84:  BCF    FF2.7
3F86:  MOVLW  00
3F88:  CALL   09D8
3F8C:  TBLRD*-
3F8E:  TBLRD*+
3F90:  MOVF   FF5,W
3F92:  MOVWF  FEE
3F94:  IORLW  00
3F96:  BNZ   3F8E
3F98:  MOVLB  5
3F9A:  BTFSC  x0A.7
3F9C:  BSF    FF2.7
3F9E:  MOVLW  04
3FA0:  MOVWF  x0B
3FA2:  MOVLW  EA
3FA4:  MOVWF  x0A
3FA6:  CLRF   x0C
3FA8:  CLRF   x0D
3FAA:  MOVLW  02
3FAC:  MOVWF  x0E
3FAE:  MOVLW  01
3FB0:  MOVWF  x0F
3FB2:  MOVLB  0
3FB4:  CALL   16E2
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3FB8:  MOVLW  04
3FBA:  MOVWF  FEA
3FBC:  MOVLW  EA
3FBE:  MOVWF  FE9
3FC0:  MOVFF  FF2,50A
3FC4:  BCF    FF2.7
3FC6:  MOVLW  00
3FC8:  CALL   09FA
3FCC:  TBLRD*-
3FCE:  TBLRD*+
3FD0:  MOVF   FF5,W
3FD2:  MOVWF  FEE
3FD4:  IORLW  00
3FD6:  BNZ   3FCE
3FD8:  MOVLB  5
3FDA:  BTFSC  x0A.7
3FDC:  BSF    FF2.7
3FDE:  MOVLW  04
3FE0:  MOVWF  x0B
3FE2:  MOVLW  EA
3FE4:  MOVWF  x0A
3FE6:  CLRF   x0C
3FE8:  MOVLW  08
3FEA:  MOVWF  x0D
3FEC:  MOVLW  02
3FEE:  MOVWF  x0E
3FF0:  MOVLW  01
3FF2:  MOVWF  x0F
3FF4:  MOVLB  0
3FF6:  CALL   16E2
....................          glcd_circle(95,40,2,NO,ON); 
3FFA:  MOVLW  5F
3FFC:  MOVLB  5
3FFE:  MOVWF  x0A
4000:  MOVLW  28
4002:  MOVWF  x0B
4004:  MOVLW  02
4006:  MOVWF  x0C
4008:  CLRF   x0D
400A:  MOVLW  01
400C:  MOVWF  x0E
400E:  MOVLB  0
4010:  CALL   2232
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
4014:  MOVLW  04
4016:  MOVWF  FEA
4018:  MOVLW  EA
401A:  MOVWF  FE9
401C:  MOVFF  FF2,50A
4020:  BCF    FF2.7
4022:  MOVLW  00
4024:  CALL   0A1C
4028:  TBLRD*-
402A:  TBLRD*+
402C:  MOVF   FF5,W
402E:  MOVWF  FEE
4030:  IORLW  00
4032:  BNZ   402A
4034:  MOVLB  5
4036:  BTFSC  x0A.7
4038:  BSF    FF2.7
403A:  MOVLW  04
403C:  MOVWF  x0B
403E:  MOVLW  EA
4040:  MOVWF  x0A
4042:  MOVLW  66
4044:  MOVWF  x0C
4046:  MOVLW  28
4048:  MOVWF  x0D
404A:  MOVLW  02
404C:  MOVWF  x0E
404E:  MOVWF  x0F
4050:  MOVLB  0
4052:  CALL   16E2
....................          MuestraTiemposProgramados(); 
4056:  CALL   2632
405A:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
405C:  MOVF   xA2,W
405E:  SUBLW  05
4060:  BTFSS  FD8.2
4062:  BRA    4228
....................        
....................       if(visual==1) 
4064:  BTFSS  x95.4
4066:  BRA    41BE
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
4068:  MOVLW  04
406A:  MOVLB  5
406C:  MOVWF  x0A
406E:  MOVLB  0
4070:  CALL   2136
....................          strcpy(Menus.Letra,"Liquidos"); 
4074:  MOVLW  04
4076:  MOVWF  FEA
4078:  MOVLW  EA
407A:  MOVWF  FE9
407C:  MOVFF  FF2,50A
4080:  BCF    FF2.7
4082:  MOVLW  00
4084:  CALL   080C
4088:  TBLRD*-
408A:  TBLRD*+
408C:  MOVF   FF5,W
408E:  MOVWF  FEE
4090:  IORLW  00
4092:  BNZ   408A
4094:  MOVLB  5
4096:  BTFSC  x0A.7
4098:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
409A:  MOVLW  04
409C:  MOVWF  x0B
409E:  MOVLW  EA
40A0:  MOVWF  x0A
40A2:  MOVLW  14
40A4:  MOVWF  x0C
40A6:  CLRF   x0D
40A8:  MOVLW  01
40AA:  MOVWF  x0E
40AC:  MOVLW  02
40AE:  MOVWF  x0F
40B0:  MOVLB  0
40B2:  CALL   16E2
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
40B6:  MOVLW  04
40B8:  MOVWF  FEA
40BA:  MOVLW  EA
40BC:  MOVWF  FE9
40BE:  MOVFF  FF2,50A
40C2:  BCF    FF2.7
40C4:  MOVLW  00
40C6:  CALL   080C
40CA:  TBLRD*-
40CC:  TBLRD*+
40CE:  MOVF   FF5,W
40D0:  MOVWF  FEE
40D2:  IORLW  00
40D4:  BNZ   40CC
40D6:  MOVLB  5
40D8:  BTFSC  x0A.7
40DA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
40DC:  MOVLW  04
40DE:  MOVWF  x0B
40E0:  MOVLW  EA
40E2:  MOVWF  x0A
40E4:  MOVLW  07
40E6:  MOVWF  x0C
40E8:  MOVLW  37
40EA:  MOVWF  x0D
40EC:  MOVLW  02
40EE:  MOVWF  x0E
40F0:  MOVLW  01
40F2:  MOVWF  x0F
40F4:  MOVLB  0
40F6:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
40FA:  MOVLW  04
40FC:  MOVWF  FEA
40FE:  MOVLW  EA
4100:  MOVWF  FE9
4102:  MOVFF  FF2,50A
4106:  BCF    FF2.7
4108:  MOVLW  00
410A:  CALL   092C
410E:  TBLRD*-
4110:  TBLRD*+
4112:  MOVF   FF5,W
4114:  MOVWF  FEE
4116:  IORLW  00
4118:  BNZ   4110
411A:  MOVLB  5
411C:  BTFSC  x0A.7
411E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4120:  MOVLW  04
4122:  MOVWF  x0B
4124:  MOVLW  EA
4126:  MOVWF  x0A
4128:  CLRF   x0C
412A:  MOVLW  1A
412C:  MOVWF  x0D
412E:  CLRF   x0E
4130:  MOVLW  01
4132:  MOVWF  x0F
4134:  MOVLB  0
4136:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
413A:  MOVLW  04
413C:  MOVWF  FEA
413E:  MOVLW  EA
4140:  MOVWF  FE9
4142:  MOVFF  FF2,50A
4146:  BCF    FF2.7
4148:  MOVLW  00
414A:  CALL   0A38
414E:  TBLRD*-
4150:  TBLRD*+
4152:  MOVF   FF5,W
4154:  MOVWF  FEE
4156:  IORLW  00
4158:  BNZ   4150
415A:  MOVLB  5
415C:  BTFSC  x0A.7
415E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4160:  MOVLW  04
4162:  MOVWF  x0B
4164:  MOVLW  EA
4166:  MOVWF  x0A
4168:  CLRF   x0C
416A:  MOVLW  24
416C:  MOVWF  x0D
416E:  CLRF   x0E
4170:  MOVLW  01
4172:  MOVWF  x0F
4174:  MOVLB  0
4176:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
417A:  MOVLW  04
417C:  MOVWF  FEA
417E:  MOVLW  EA
4180:  MOVWF  FE9
4182:  MOVFF  FF2,50A
4186:  BCF    FF2.7
4188:  MOVLW  00
418A:  CALL   0A68
418E:  TBLRD*-
4190:  TBLRD*+
4192:  MOVF   FF5,W
4194:  MOVWF  FEE
4196:  IORLW  00
4198:  BNZ   4190
419A:  MOVLB  5
419C:  BTFSC  x0A.7
419E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
41A0:  MOVLW  04
41A2:  MOVWF  x0B
41A4:  MOVLW  EA
41A6:  MOVWF  x0A
41A8:  CLRF   x0C
41AA:  MOVLW  2E
41AC:  MOVWF  x0D
41AE:  CLRF   x0E
41B0:  MOVLW  01
41B2:  MOVWF  x0F
41B4:  MOVLB  0
41B6:  CALL   16E2
....................          visual=0; 
41BA:  MOVLB  4
41BC:  BCF    x95.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
41BE:  BSF    F92.3
41C0:  BTFSS  F80.3
41C2:  BRA    41E4
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
41C4:  MOVLW  1E
41C6:  MOVLB  5
41C8:  MOVWF  x0B
41CA:  MOVLB  0
41CC:  CALL   104A
41D0:  MOVLW  01
41D2:  MOVLB  4
41D4:  MOVWF  xA2
41D6:  MOVLB  5
41D8:  CLRF   x0B
41DA:  MOVLB  0
41DC:  CALL   10B4
41E0:  MOVLB  4
41E2:  BSF    x95.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
41E4:  BSF    F92.2
41E6:  BTFSS  F80.2
41E8:  BRA    4228
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
41EA:  CLRF   xCB
41EC:  CLRF   xCC
41EE:  CLRF   xCD
41F0:  MOVLW  02
41F2:  MOVWF  xCE
41F4:  BSF    x95.5
41F6:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
41F8:  CLRF   xD3
41FA:  CLRF   xD4
41FC:  CLRF   xD5
41FE:  CLRF   xD6
4200:  MOVLW  79
4202:  MOVWF  xA9
4204:  MOVLW  0E
4206:  MOVWF  xA2
4208:  MOVLW  04
420A:  MOVLB  5
420C:  MOVWF  x0A
420E:  MOVLW  AF
4210:  MOVWF  x0B
4212:  MOVLB  0
4214:  CALL   104A
4218:  MOVLB  5
421A:  DECFSZ x0A,F
421C:  BRA    420E
421E:  CLRF   x0B
4220:  MOVLB  0
4222:  CALL   10B4
4226:  MOVLB  4
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
4228:  MOVF   xA2,W
422A:  SUBLW  06
422C:  BTFSS  FD8.2
422E:  BRA    43F4
....................        
....................       if(visual==1) 
4230:  BTFSS  x95.4
4232:  BRA    4388
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
4234:  MOVLW  03
4236:  MOVLB  5
4238:  MOVWF  x0A
423A:  MOVLB  0
423C:  CALL   2136
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
4240:  MOVLW  04
4242:  MOVWF  FEA
4244:  MOVLW  EA
4246:  MOVWF  FE9
4248:  MOVFF  FF2,50A
424C:  BCF    FF2.7
424E:  MOVLW  00
4250:  CALL   0A92
4254:  TBLRD*-
4256:  TBLRD*+
4258:  MOVF   FF5,W
425A:  MOVWF  FEE
425C:  IORLW  00
425E:  BNZ   4256
4260:  MOVLB  5
4262:  BTFSC  x0A.7
4264:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4266:  MOVLW  04
4268:  MOVWF  x0B
426A:  MOVLW  EA
426C:  MOVWF  x0A
426E:  CLRF   x0C
4270:  CLRF   x0D
4272:  MOVLW  01
4274:  MOVWF  x0E
4276:  MOVLW  02
4278:  MOVWF  x0F
427A:  MOVLB  0
427C:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
4280:  MOVLW  04
4282:  MOVWF  FEA
4284:  MOVLW  EA
4286:  MOVWF  FE9
4288:  MOVFF  FF2,50A
428C:  BCF    FF2.7
428E:  MOVLW  00
4290:  CALL   0830
4294:  TBLRD*-
4296:  TBLRD*+
4298:  MOVF   FF5,W
429A:  MOVWF  FEE
429C:  IORLW  00
429E:  BNZ   4296
42A0:  MOVLB  5
42A2:  BTFSC  x0A.7
42A4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
42A6:  MOVLW  04
42A8:  MOVWF  x0B
42AA:  MOVLW  EA
42AC:  MOVWF  x0A
42AE:  MOVLW  07
42B0:  MOVWF  x0C
42B2:  MOVLW  37
42B4:  MOVWF  x0D
42B6:  MOVLW  02
42B8:  MOVWF  x0E
42BA:  MOVLW  01
42BC:  MOVWF  x0F
42BE:  MOVLB  0
42C0:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
42C4:  MOVLW  04
42C6:  MOVWF  FEA
42C8:  MOVLW  EA
42CA:  MOVWF  FE9
42CC:  MOVFF  FF2,50A
42D0:  BCF    FF2.7
42D2:  MOVLW  00
42D4:  CALL   092C
42D8:  TBLRD*-
42DA:  TBLRD*+
42DC:  MOVF   FF5,W
42DE:  MOVWF  FEE
42E0:  IORLW  00
42E2:  BNZ   42DA
42E4:  MOVLB  5
42E6:  BTFSC  x0A.7
42E8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
42EA:  MOVLW  04
42EC:  MOVWF  x0B
42EE:  MOVLW  EA
42F0:  MOVWF  x0A
42F2:  CLRF   x0C
42F4:  MOVLW  1A
42F6:  MOVWF  x0D
42F8:  CLRF   x0E
42FA:  MOVLW  01
42FC:  MOVWF  x0F
42FE:  MOVLB  0
4300:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
4304:  MOVLW  04
4306:  MOVWF  FEA
4308:  MOVLW  EA
430A:  MOVWF  FE9
430C:  MOVFF  FF2,50A
4310:  BCF    FF2.7
4312:  MOVLW  00
4314:  CALL   0958
4318:  TBLRD*-
431A:  TBLRD*+
431C:  MOVF   FF5,W
431E:  MOVWF  FEE
4320:  IORLW  00
4322:  BNZ   431A
4324:  MOVLB  5
4326:  BTFSC  x0A.7
4328:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
432A:  MOVLW  04
432C:  MOVWF  x0B
432E:  MOVLW  EA
4330:  MOVWF  x0A
4332:  CLRF   x0C
4334:  MOVLW  24
4336:  MOVWF  x0D
4338:  CLRF   x0E
433A:  MOVLW  01
433C:  MOVWF  x0F
433E:  MOVLB  0
4340:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
4344:  MOVLW  04
4346:  MOVWF  FEA
4348:  MOVLW  EA
434A:  MOVWF  FE9
434C:  MOVFF  FF2,50A
4350:  BCF    FF2.7
4352:  MOVLW  00
4354:  CALL   0A68
4358:  TBLRD*-
435A:  TBLRD*+
435C:  MOVF   FF5,W
435E:  MOVWF  FEE
4360:  IORLW  00
4362:  BNZ   435A
4364:  MOVLB  5
4366:  BTFSC  x0A.7
4368:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
436A:  MOVLW  04
436C:  MOVWF  x0B
436E:  MOVLW  EA
4370:  MOVWF  x0A
4372:  CLRF   x0C
4374:  MOVLW  2E
4376:  MOVWF  x0D
4378:  CLRF   x0E
437A:  MOVLW  01
437C:  MOVWF  x0F
437E:  MOVLB  0
4380:  CALL   16E2
....................          visual=0; 
4384:  MOVLB  4
4386:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4388:  BSF    F92.3
438A:  BTFSS  F80.3
438C:  BRA    43AE
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
438E:  MOVLW  1E
4390:  MOVLB  5
4392:  MOVWF  x0B
4394:  MOVLB  0
4396:  CALL   104A
439A:  MOVLW  01
439C:  MOVLB  4
439E:  MOVWF  xA2
43A0:  MOVLB  5
43A2:  CLRF   x0B
43A4:  MOVLB  0
43A6:  CALL   10B4
43AA:  MOVLB  4
43AC:  BSF    x95.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
43AE:  BSF    F92.2
43B0:  BTFSS  F80.2
43B2:  BRA    43F4
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
43B4:  CLRF   xCB
43B6:  CLRF   xCC
43B8:  MOVLW  05
43BA:  MOVWF  xCD
43BC:  MOVLW  01
43BE:  MOVWF  xCE
43C0:  BSF    x95.5
43C2:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
43C4:  CLRF   xD3
43C6:  CLRF   xD4
43C8:  CLRF   xD5
43CA:  CLRF   xD6
43CC:  MOVLW  79
43CE:  MOVWF  xA9
43D0:  MOVLW  0E
43D2:  MOVWF  xA2
43D4:  MOVLW  04
43D6:  MOVLB  5
43D8:  MOVWF  x0A
43DA:  MOVLW  AF
43DC:  MOVWF  x0B
43DE:  MOVLB  0
43E0:  CALL   104A
43E4:  MOVLB  5
43E6:  DECFSZ x0A,F
43E8:  BRA    43DA
43EA:  CLRF   x0B
43EC:  MOVLB  0
43EE:  CALL   10B4
43F2:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
43F4:  MOVF   xA2,W
43F6:  SUBLW  07
43F8:  BTFSS  FD8.2
43FA:  BRA    473A
....................        
....................       if(visual==1) 
43FC:  BTFSS  x95.4
43FE:  BRA    4552
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
4400:  MOVLW  01
4402:  MOVLB  5
4404:  MOVWF  x0A
4406:  MOVLB  0
4408:  CALL   2136
....................          strcpy(Menus.Letra,"Tex & Ins"); 
440C:  MOVLW  04
440E:  MOVWF  FEA
4410:  MOVLW  EA
4412:  MOVWF  FE9
4414:  MOVFF  FF2,50A
4418:  BCF    FF2.7
441A:  MOVLW  00
441C:  CALL   0AB8
4420:  TBLRD*-
4422:  TBLRD*+
4424:  MOVF   FF5,W
4426:  MOVWF  FEE
4428:  IORLW  00
442A:  BNZ   4422
442C:  MOVLB  5
442E:  BTFSC  x0A.7
4430:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4432:  MOVLW  04
4434:  MOVWF  x0B
4436:  MOVLW  EA
4438:  MOVWF  x0A
443A:  CLRF   x0C
443C:  CLRF   x0D
443E:  MOVLW  01
4440:  MOVWF  x0E
4442:  MOVLW  02
4444:  MOVWF  x0F
4446:  MOVLB  0
4448:  CALL   16E2
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
444C:  MOVLW  04
444E:  MOVWF  FEA
4450:  MOVLW  EA
4452:  MOVWF  FE9
4454:  MOVFF  FF2,50A
4458:  BCF    FF2.7
445A:  MOVLW  00
445C:  CALL   085E
4460:  TBLRD*-
4462:  TBLRD*+
4464:  MOVF   FF5,W
4466:  MOVWF  FEE
4468:  IORLW  00
446A:  BNZ   4462
446C:  MOVLB  5
446E:  BTFSC  x0A.7
4470:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4472:  MOVLW  04
4474:  MOVWF  x0B
4476:  MOVLW  EA
4478:  MOVWF  x0A
447A:  CLRF   x0C
447C:  MOVLW  37
447E:  MOVWF  x0D
4480:  MOVLW  02
4482:  MOVWF  x0E
4484:  MOVLW  01
4486:  MOVWF  x0F
4488:  MOVLB  0
448A:  CALL   16E2
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
448E:  MOVLW  04
4490:  MOVWF  FEA
4492:  MOVLW  EA
4494:  MOVWF  FE9
4496:  MOVFF  FF2,50A
449A:  BCF    FF2.7
449C:  MOVLW  00
449E:  CALL   092C
44A2:  TBLRD*-
44A4:  TBLRD*+
44A6:  MOVF   FF5,W
44A8:  MOVWF  FEE
44AA:  IORLW  00
44AC:  BNZ   44A4
44AE:  MOVLB  5
44B0:  BTFSC  x0A.7
44B2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
44B4:  MOVLW  04
44B6:  MOVWF  x0B
44B8:  MOVLW  EA
44BA:  MOVWF  x0A
44BC:  CLRF   x0C
44BE:  MOVLW  1A
44C0:  MOVWF  x0D
44C2:  CLRF   x0E
44C4:  MOVLW  01
44C6:  MOVWF  x0F
44C8:  MOVLB  0
44CA:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
44CE:  MOVLW  04
44D0:  MOVWF  FEA
44D2:  MOVLW  EA
44D4:  MOVWF  FE9
44D6:  MOVFF  FF2,50A
44DA:  BCF    FF2.7
44DC:  MOVLW  00
44DE:  CALL   0ADC
44E2:  TBLRD*-
44E4:  TBLRD*+
44E6:  MOVF   FF5,W
44E8:  MOVWF  FEE
44EA:  IORLW  00
44EC:  BNZ   44E4
44EE:  MOVLB  5
44F0:  BTFSC  x0A.7
44F2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
44F4:  MOVLW  04
44F6:  MOVWF  x0B
44F8:  MOVLW  EA
44FA:  MOVWF  x0A
44FC:  CLRF   x0C
44FE:  MOVLW  24
4500:  MOVWF  x0D
4502:  CLRF   x0E
4504:  MOVLW  01
4506:  MOVWF  x0F
4508:  MOVLB  0
450A:  CALL   16E2
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
450E:  MOVLW  04
4510:  MOVWF  FEA
4512:  MOVLW  EA
4514:  MOVWF  FE9
4516:  MOVFF  FF2,50A
451A:  BCF    FF2.7
451C:  MOVLW  00
451E:  CALL   0B0C
4522:  TBLRD*-
4524:  TBLRD*+
4526:  MOVF   FF5,W
4528:  MOVWF  FEE
452A:  IORLW  00
452C:  BNZ   4524
452E:  MOVLB  5
4530:  BTFSC  x0A.7
4532:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4534:  MOVLW  04
4536:  MOVWF  x0B
4538:  MOVLW  EA
453A:  MOVWF  x0A
453C:  CLRF   x0C
453E:  MOVLW  2E
4540:  MOVWF  x0D
4542:  CLRF   x0E
4544:  MOVLW  01
4546:  MOVWF  x0F
4548:  MOVLB  0
454A:  CALL   16E2
....................          visual=0; 
454E:  MOVLB  4
4550:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4552:  BSF    F92.3
4554:  BTFSS  F80.3
4556:  BRA    4578
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4558:  MOVLW  1E
455A:  MOVLB  5
455C:  MOVWF  x0B
455E:  MOVLB  0
4560:  CALL   104A
4564:  MOVLW  01
4566:  MOVLB  4
4568:  MOVWF  xA2
456A:  MOVLB  5
456C:  CLRF   x0B
456E:  MOVLB  0
4570:  CALL   10B4
4574:  MOVLB  4
4576:  BSF    x95.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
4578:  BSF    F92.2
457A:  BTFSS  F80.2
457C:  BRA    473A
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
457E:  CLRF   xCB
4580:  CLRF   xCC
4582:  MOVLW  05
4584:  MOVWF  xCD
4586:  MOVLW  02
4588:  MOVWF  xCE
458A:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
458C:  CLRF   xD3
458E:  CLRF   xD4
4590:  CLRF   xD5
4592:  MOVLW  01
4594:  MOVWF  xD6
4596:  MOVLW  79
4598:  MOVWF  xA9
459A:  MOVLW  14
459C:  MOVWF  xA2
459E:  MOVLW  04
45A0:  MOVLB  5
45A2:  MOVWF  x0A
45A4:  MOVLW  AF
45A6:  MOVWF  x0B
45A8:  MOVLB  0
45AA:  CALL   104A
45AE:  MOVLB  5
45B0:  DECFSZ x0A,F
45B2:  BRA    45A4
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
45B4:  MOVLW  14
45B6:  MOVLB  4
45B8:  MOVWF  xA2
45BA:  MOVLW  0F
45BC:  MOVLB  5
45BE:  MOVWF  x20
45C0:  MOVLW  12
45C2:  MOVWF  x21
45C4:  MOVLW  1E
45C6:  MOVWF  x22
45C8:  MOVLW  35
45CA:  MOVWF  x23
45CC:  CLRF   x24
45CE:  MOVLW  01
45D0:  MOVWF  x25
45D2:  MOVLB  0
45D4:  CALL   1620
45D8:  MOVLB  4
45DA:  CLRF   xAE
45DC:  MOVLW  C0
45DE:  IORWF  FF2,F
45E0:  MOVLB  5
45E2:  CLRF   x0B
45E4:  MOVLB  0
45E6:  CALL   10B4
....................          strcpy(Menus.Letra,"Calentando"); 
45EA:  MOVLW  04
45EC:  MOVWF  FEA
45EE:  MOVLW  EA
45F0:  MOVWF  FE9
45F2:  MOVFF  FF2,50A
45F6:  BCF    FF2.7
45F8:  MOVLW  00
45FA:  CALL   09B2
45FE:  TBLRD*-
4600:  TBLRD*+
4602:  MOVF   FF5,W
4604:  MOVWF  FEE
4606:  IORLW  00
4608:  BNZ   4600
460A:  MOVLB  5
460C:  BTFSC  x0A.7
460E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4610:  MOVLW  04
4612:  MOVWF  x0B
4614:  MOVLW  EA
4616:  MOVWF  x0A
4618:  CLRF   x0C
461A:  MOVLW  37
461C:  MOVWF  x0D
461E:  MOVLW  02
4620:  MOVWF  x0E
4622:  MOVLW  01
4624:  MOVWF  x0F
4626:  MOVLB  0
4628:  CALL   16E2
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
462C:  MOVLW  0F
462E:  MOVLB  5
4630:  MOVWF  x20
4632:  MOVLW  12
4634:  MOVWF  x21
4636:  MOVLW  1E
4638:  MOVWF  x22
463A:  MOVLW  35
463C:  MOVWF  x23
463E:  CLRF   x24
4640:  MOVLW  01
4642:  MOVWF  x25
4644:  MOVLB  0
4646:  CALL   1620
....................          glcd_imagen(5); 
464A:  MOVLW  05
464C:  MOVLB  5
464E:  MOVWF  x0A
4650:  MOVLB  0
4652:  CALL   2136
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4656:  MOVLW  04
4658:  MOVWF  FEA
465A:  MOVLW  EA
465C:  MOVWF  FE9
465E:  MOVFF  FF2,50A
4662:  BCF    FF2.7
4664:  MOVLW  00
4666:  CALL   09D8
466A:  TBLRD*-
466C:  TBLRD*+
466E:  MOVF   FF5,W
4670:  MOVWF  FEE
4672:  IORLW  00
4674:  BNZ   466C
4676:  MOVLB  5
4678:  BTFSC  x0A.7
467A:  BSF    FF2.7
467C:  MOVLW  04
467E:  MOVWF  x0B
4680:  MOVLW  EA
4682:  MOVWF  x0A
4684:  CLRF   x0C
4686:  CLRF   x0D
4688:  MOVLW  02
468A:  MOVWF  x0E
468C:  MOVLW  01
468E:  MOVWF  x0F
4690:  MOVLB  0
4692:  CALL   16E2
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
4696:  MOVLW  04
4698:  MOVWF  FEA
469A:  MOVLW  EA
469C:  MOVWF  FE9
469E:  MOVFF  FF2,50A
46A2:  BCF    FF2.7
46A4:  MOVLW  00
46A6:  CALL   09FA
46AA:  TBLRD*-
46AC:  TBLRD*+
46AE:  MOVF   FF5,W
46B0:  MOVWF  FEE
46B2:  IORLW  00
46B4:  BNZ   46AC
46B6:  MOVLB  5
46B8:  BTFSC  x0A.7
46BA:  BSF    FF2.7
46BC:  MOVLW  04
46BE:  MOVWF  x0B
46C0:  MOVLW  EA
46C2:  MOVWF  x0A
46C4:  CLRF   x0C
46C6:  MOVLW  08
46C8:  MOVWF  x0D
46CA:  MOVLW  02
46CC:  MOVWF  x0E
46CE:  MOVLW  01
46D0:  MOVWF  x0F
46D2:  MOVLB  0
46D4:  CALL   16E2
....................          glcd_circle(95,40,2,NO,ON); 
46D8:  MOVLW  5F
46DA:  MOVLB  5
46DC:  MOVWF  x0A
46DE:  MOVLW  28
46E0:  MOVWF  x0B
46E2:  MOVLW  02
46E4:  MOVWF  x0C
46E6:  CLRF   x0D
46E8:  MOVLW  01
46EA:  MOVWF  x0E
46EC:  MOVLB  0
46EE:  CALL   2232
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
46F2:  MOVLW  04
46F4:  MOVWF  FEA
46F6:  MOVLW  EA
46F8:  MOVWF  FE9
46FA:  MOVFF  FF2,50A
46FE:  BCF    FF2.7
4700:  MOVLW  00
4702:  CALL   0A1C
4706:  TBLRD*-
4708:  TBLRD*+
470A:  MOVF   FF5,W
470C:  MOVWF  FEE
470E:  IORLW  00
4710:  BNZ   4708
4712:  MOVLB  5
4714:  BTFSC  x0A.7
4716:  BSF    FF2.7
4718:  MOVLW  04
471A:  MOVWF  x0B
471C:  MOVLW  EA
471E:  MOVWF  x0A
4720:  MOVLW  66
4722:  MOVWF  x0C
4724:  MOVLW  28
4726:  MOVWF  x0D
4728:  MOVLW  02
472A:  MOVWF  x0E
472C:  MOVWF  x0F
472E:  MOVLB  0
4730:  CALL   16E2
....................          MuestraTiemposProgramados(); 
4734:  CALL   2632
4738:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
473A:  MOVF   xA2,W
473C:  SUBLW  08
473E:  BTFSS  FD8.2
4740:  BRA    4B1E
....................          
....................          if(visual==1) 
4742:  BTFSS  x95.4
4744:  BRA    4A6A
....................          { 
....................             if(Opcion>5) 
4746:  MOVF   xAC,W
4748:  SUBLW  05
474A:  BC    4750
....................             {Opcion=1;} 
474C:  MOVLW  01
474E:  MOVWF  xAC
....................             if(Opcion<1) 
4750:  MOVF   xAC,F
4752:  BNZ   4758
....................             {Opcion=5;} 
4754:  MOVLW  05
4756:  MOVWF  xAC
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
4758:  MOVLW  04
475A:  MOVWF  FEA
475C:  MOVLW  EA
475E:  MOVWF  FE9
4760:  MOVFF  FF2,50A
4764:  BCF    FF2.7
4766:  MOVLW  00
4768:  MOVLB  0
476A:  CALL   0B36
476E:  TBLRD*-
4770:  TBLRD*+
4772:  MOVF   FF5,W
4774:  MOVWF  FEE
4776:  IORLW  00
4778:  BNZ   4770
477A:  MOVLB  5
477C:  BTFSC  x0A.7
477E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4780:  MOVLW  04
4782:  MOVWF  x0B
4784:  MOVLW  EA
4786:  MOVWF  x0A
4788:  CLRF   x0C
478A:  CLRF   x0D
478C:  MOVLW  01
478E:  MOVWF  x0E
4790:  MOVWF  x0F
4792:  MOVLB  0
4794:  CALL   16E2
....................        
....................             if(Opcion==1)    
4798:  MOVLB  4
479A:  DECFSZ xAC,W
479C:  BRA    47E4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
479E:  MOVLW  04
47A0:  MOVWF  FEA
47A2:  MOVLW  EA
47A4:  MOVWF  FE9
47A6:  MOVFF  FF2,50A
47AA:  BCF    FF2.7
47AC:  MOVLW  00
47AE:  MOVLB  0
47B0:  CALL   0B66
47B4:  TBLRD*-
47B6:  TBLRD*+
47B8:  MOVF   FF5,W
47BA:  MOVWF  FEE
47BC:  IORLW  00
47BE:  BNZ   47B6
47C0:  MOVLB  5
47C2:  BTFSC  x0A.7
47C4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
47C6:  MOVLW  04
47C8:  MOVWF  x0B
47CA:  MOVLW  EA
47CC:  MOVWF  x0A
47CE:  CLRF   x0C
47D0:  MOVLW  0A
47D2:  MOVWF  x0D
47D4:  MOVLW  01
47D6:  MOVWF  x0E
47D8:  MOVWF  x0F
47DA:  MOVLB  0
47DC:  CALL   16E2
....................             else 
47E0:  BRA    4826
47E2:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
47E4:  MOVLW  04
47E6:  MOVWF  FEA
47E8:  MOVLW  EA
47EA:  MOVWF  FE9
47EC:  MOVFF  FF2,50A
47F0:  BCF    FF2.7
47F2:  MOVLW  00
47F4:  MOVLB  0
47F6:  CALL   0B66
47FA:  TBLRD*-
47FC:  TBLRD*+
47FE:  MOVF   FF5,W
4800:  MOVWF  FEE
4802:  IORLW  00
4804:  BNZ   47FC
4806:  MOVLB  5
4808:  BTFSC  x0A.7
480A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
480C:  MOVLW  04
480E:  MOVWF  x0B
4810:  MOVLW  EA
4812:  MOVWF  x0A
4814:  CLRF   x0C
4816:  MOVLW  0A
4818:  MOVWF  x0D
481A:  CLRF   x0E
481C:  MOVLW  01
481E:  MOVWF  x0F
4820:  MOVLB  0
4822:  CALL   16E2
....................              
....................             if(Opcion==2)    
4826:  MOVLB  4
4828:  MOVF   xAC,W
482A:  SUBLW  02
482C:  BNZ   4874
....................                {strcpy(Menus.Letra,"T. Secado"); 
482E:  MOVLW  04
4830:  MOVWF  FEA
4832:  MOVLW  EA
4834:  MOVWF  FE9
4836:  MOVFF  FF2,50A
483A:  BCF    FF2.7
483C:  MOVLW  00
483E:  MOVLB  0
4840:  CALL   0B92
4844:  TBLRD*-
4846:  TBLRD*+
4848:  MOVF   FF5,W
484A:  MOVWF  FEE
484C:  IORLW  00
484E:  BNZ   4846
4850:  MOVLB  5
4852:  BTFSC  x0A.7
4854:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
4856:  MOVLW  04
4858:  MOVWF  x0B
485A:  MOVLW  EA
485C:  MOVWF  x0A
485E:  CLRF   x0C
4860:  MOVLW  14
4862:  MOVWF  x0D
4864:  MOVLW  01
4866:  MOVWF  x0E
4868:  MOVWF  x0F
486A:  MOVLB  0
486C:  CALL   16E2
....................             else 
4870:  BRA    48B6
4872:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
4874:  MOVLW  04
4876:  MOVWF  FEA
4878:  MOVLW  EA
487A:  MOVWF  FE9
487C:  MOVFF  FF2,50A
4880:  BCF    FF2.7
4882:  MOVLW  00
4884:  MOVLB  0
4886:  CALL   0B92
488A:  TBLRD*-
488C:  TBLRD*+
488E:  MOVF   FF5,W
4890:  MOVWF  FEE
4892:  IORLW  00
4894:  BNZ   488C
4896:  MOVLB  5
4898:  BTFSC  x0A.7
489A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
489C:  MOVLW  04
489E:  MOVWF  x0B
48A0:  MOVLW  EA
48A2:  MOVWF  x0A
48A4:  CLRF   x0C
48A6:  MOVLW  14
48A8:  MOVWF  x0D
48AA:  CLRF   x0E
48AC:  MOVLW  01
48AE:  MOVWF  x0F
48B0:  MOVLB  0
48B2:  CALL   16E2
....................                 
....................              if(Opcion==3)    
48B6:  MOVLB  4
48B8:  MOVF   xAC,W
48BA:  SUBLW  03
48BC:  BNZ   4904
....................                {strcpy(Menus.Letra,"Temperatura"); 
48BE:  MOVLW  04
48C0:  MOVWF  FEA
48C2:  MOVLW  EA
48C4:  MOVWF  FE9
48C6:  MOVFF  FF2,50A
48CA:  BCF    FF2.7
48CC:  MOVLW  00
48CE:  MOVLB  0
48D0:  CALL   0BB6
48D4:  TBLRD*-
48D6:  TBLRD*+
48D8:  MOVF   FF5,W
48DA:  MOVWF  FEE
48DC:  IORLW  00
48DE:  BNZ   48D6
48E0:  MOVLB  5
48E2:  BTFSC  x0A.7
48E4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
48E6:  MOVLW  04
48E8:  MOVWF  x0B
48EA:  MOVLW  EA
48EC:  MOVWF  x0A
48EE:  CLRF   x0C
48F0:  MOVLW  1E
48F2:  MOVWF  x0D
48F4:  MOVLW  01
48F6:  MOVWF  x0E
48F8:  MOVWF  x0F
48FA:  MOVLB  0
48FC:  CALL   16E2
....................             else 
4900:  BRA    4946
4902:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
4904:  MOVLW  04
4906:  MOVWF  FEA
4908:  MOVLW  EA
490A:  MOVWF  FE9
490C:  MOVFF  FF2,50A
4910:  BCF    FF2.7
4912:  MOVLW  00
4914:  MOVLB  0
4916:  CALL   0BB6
491A:  TBLRD*-
491C:  TBLRD*+
491E:  MOVF   FF5,W
4920:  MOVWF  FEE
4922:  IORLW  00
4924:  BNZ   491C
4926:  MOVLB  5
4928:  BTFSC  x0A.7
492A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
492C:  MOVLW  04
492E:  MOVWF  x0B
4930:  MOVLW  EA
4932:  MOVWF  x0A
4934:  CLRF   x0C
4936:  MOVLW  1E
4938:  MOVWF  x0D
493A:  CLRF   x0E
493C:  MOVLW  01
493E:  MOVWF  x0F
4940:  MOVLB  0
4942:  CALL   16E2
....................                 
....................             if(Opcion==4)    
4946:  MOVLB  4
4948:  MOVF   xAC,W
494A:  SUBLW  04
494C:  BNZ   4994
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
494E:  MOVLW  04
4950:  MOVWF  FEA
4952:  MOVLW  EA
4954:  MOVWF  FE9
4956:  MOVFF  FF2,50A
495A:  BCF    FF2.7
495C:  MOVLW  00
495E:  MOVLB  0
4960:  CALL   0BDC
4964:  TBLRD*-
4966:  TBLRD*+
4968:  MOVF   FF5,W
496A:  MOVWF  FEE
496C:  IORLW  00
496E:  BNZ   4966
4970:  MOVLB  5
4972:  BTFSC  x0A.7
4974:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
4976:  MOVLW  04
4978:  MOVWF  x0B
497A:  MOVLW  EA
497C:  MOVWF  x0A
497E:  CLRF   x0C
4980:  MOVLW  28
4982:  MOVWF  x0D
4984:  MOVLW  01
4986:  MOVWF  x0E
4988:  MOVWF  x0F
498A:  MOVLB  0
498C:  CALL   16E2
....................             else 
4990:  BRA    49D6
4992:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4994:  MOVLW  04
4996:  MOVWF  FEA
4998:  MOVLW  EA
499A:  MOVWF  FE9
499C:  MOVFF  FF2,50A
49A0:  BCF    FF2.7
49A2:  MOVLW  00
49A4:  MOVLB  0
49A6:  CALL   0BDC
49AA:  TBLRD*-
49AC:  TBLRD*+
49AE:  MOVF   FF5,W
49B0:  MOVWF  FEE
49B2:  IORLW  00
49B4:  BNZ   49AC
49B6:  MOVLB  5
49B8:  BTFSC  x0A.7
49BA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
49BC:  MOVLW  04
49BE:  MOVWF  x0B
49C0:  MOVLW  EA
49C2:  MOVWF  x0A
49C4:  CLRF   x0C
49C6:  MOVLW  28
49C8:  MOVWF  x0D
49CA:  CLRF   x0E
49CC:  MOVLW  01
49CE:  MOVWF  x0F
49D0:  MOVLB  0
49D2:  CALL   16E2
....................                 
....................             if(Opcion==5)    
49D6:  MOVLB  4
49D8:  MOVF   xAC,W
49DA:  SUBLW  05
49DC:  BNZ   4A24
....................                {strcpy(Menus.Letra,"Continuar"); 
49DE:  MOVLW  04
49E0:  MOVWF  FEA
49E2:  MOVLW  EA
49E4:  MOVWF  FE9
49E6:  MOVFF  FF2,50A
49EA:  BCF    FF2.7
49EC:  MOVLW  00
49EE:  MOVLB  0
49F0:  CALL   0C08
49F4:  TBLRD*-
49F6:  TBLRD*+
49F8:  MOVF   FF5,W
49FA:  MOVWF  FEE
49FC:  IORLW  00
49FE:  BNZ   49F6
4A00:  MOVLB  5
4A02:  BTFSC  x0A.7
4A04:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
4A06:  MOVLW  04
4A08:  MOVWF  x0B
4A0A:  MOVLW  EA
4A0C:  MOVWF  x0A
4A0E:  CLRF   x0C
4A10:  MOVLW  32
4A12:  MOVWF  x0D
4A14:  MOVLW  01
4A16:  MOVWF  x0E
4A18:  MOVWF  x0F
4A1A:  MOVLB  0
4A1C:  CALL   16E2
....................             else 
4A20:  BRA    4A66
4A22:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
4A24:  MOVLW  04
4A26:  MOVWF  FEA
4A28:  MOVLW  EA
4A2A:  MOVWF  FE9
4A2C:  MOVFF  FF2,50A
4A30:  BCF    FF2.7
4A32:  MOVLW  00
4A34:  MOVLB  0
4A36:  CALL   0C08
4A3A:  TBLRD*-
4A3C:  TBLRD*+
4A3E:  MOVF   FF5,W
4A40:  MOVWF  FEE
4A42:  IORLW  00
4A44:  BNZ   4A3C
4A46:  MOVLB  5
4A48:  BTFSC  x0A.7
4A4A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
4A4C:  MOVLW  04
4A4E:  MOVWF  x0B
4A50:  MOVLW  EA
4A52:  MOVWF  x0A
4A54:  CLRF   x0C
4A56:  MOVLW  32
4A58:  MOVWF  x0D
4A5A:  CLRF   x0E
4A5C:  MOVLW  01
4A5E:  MOVWF  x0F
4A60:  MOVLB  0
4A62:  CALL   16E2
....................                           
....................             visual=0; 
4A66:  MOVLB  4
4A68:  BCF    x95.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
4A6A:  BSF    F92.0
4A6C:  BTFSS  F80.0
4A6E:  BRA    4A8A
....................          {  if(Flanco == 0)  
4A70:  BTFSC  x95.0
4A72:  BRA    4A88
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4A74:  BSF    x95.0
4A76:  MOVLW  1E
4A78:  MOVLB  5
4A7A:  MOVWF  x0B
4A7C:  MOVLB  0
4A7E:  CALL   104A
4A82:  MOVLB  4
4A84:  DECF   xAC,F
4A86:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4A88:  BRA    4A8C
....................                {Flanco = 0;} 
4A8A:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4A8C:  BSF    F92.1
4A8E:  BTFSS  F80.1
4A90:  BRA    4AAC
....................          {  if(Flanco2 == 0)  
4A92:  BTFSC  x95.2
4A94:  BRA    4AAA
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4A96:  BSF    x95.2
4A98:  MOVLW  1E
4A9A:  MOVLB  5
4A9C:  MOVWF  x0B
4A9E:  MOVLB  0
4AA0:  CALL   104A
4AA4:  MOVLB  4
4AA6:  INCF   xAC,F
4AA8:  BSF    x95.4
....................                }      
....................          } 
....................             else 
4AAA:  BRA    4AAE
....................                {Flanco2 = 0;}   
4AAC:  BCF    x95.2
....................                 
....................          if(RIGHT)//Si oprime SET 
4AAE:  BSF    F92.2
4AB0:  BTFSS  F80.2
4AB2:  BRA    4AEC
....................          {  if(Flanco1 == 0)  
4AB4:  BTFSC  x95.1
4AB6:  BRA    4AEA
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4AB8:  BSF    x95.1
4ABA:  MOVLW  02
4ABC:  MOVLB  5
4ABE:  MOVWF  x0A
4AC0:  MOVLW  96
4AC2:  MOVWF  x0B
4AC4:  MOVLB  0
4AC6:  CALL   104A
4ACA:  MOVLB  5
4ACC:  DECFSZ x0A,F
4ACE:  BRA    4AC0
4AD0:  MOVLW  0A
4AD2:  MOVLB  4
4AD4:  ADDWF  xAC,W
4AD6:  MOVWF  xA2
4AD8:  MOVLW  01
4ADA:  MOVWF  xAC
4ADC:  MOVLB  5
4ADE:  CLRF   x0B
4AE0:  MOVLB  0
4AE2:  CALL   10B4
4AE6:  MOVLB  4
4AE8:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4AEA:  BRA    4AEE
....................                {Flanco1 = 0;}   
4AEC:  BCF    x95.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
4AEE:  BSF    F92.3
4AF0:  BTFSS  F80.3
4AF2:  BRA    4B1E
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
4AF4:  MOVLW  04
4AF6:  MOVLB  5
4AF8:  MOVWF  x0A
4AFA:  MOVLW  AF
4AFC:  MOVWF  x0B
4AFE:  MOVLB  0
4B00:  CALL   104A
4B04:  MOVLB  5
4B06:  DECFSZ x0A,F
4B08:  BRA    4AFA
4B0A:  MOVLW  01
4B0C:  MOVLB  4
4B0E:  MOVWF  xA2
4B10:  MOVLB  5
4B12:  CLRF   x0B
4B14:  MOVLB  0
4B16:  CALL   10B4
4B1A:  MOVLB  4
4B1C:  BSF    x95.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
4B1E:  MOVF   xA2,W
4B20:  SUBLW  09
4B22:  BTFSS  FD8.2
4B24:  BRA    4FDA
....................          
....................       strcpy(Menus.Letra,"Clave"); 
4B26:  MOVLW  04
4B28:  MOVWF  FEA
4B2A:  MOVLW  EA
4B2C:  MOVWF  FE9
4B2E:  MOVFF  FF2,50A
4B32:  BCF    FF2.7
4B34:  MOVLW  00
4B36:  MOVLB  0
4B38:  CALL   0756
4B3C:  TBLRD*-
4B3E:  TBLRD*+
4B40:  MOVF   FF5,W
4B42:  MOVWF  FEE
4B44:  IORLW  00
4B46:  BNZ   4B3E
4B48:  MOVLB  5
4B4A:  BTFSC  x0A.7
4B4C:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4B4E:  MOVLW  04
4B50:  MOVWF  x0B
4B52:  MOVLW  EA
4B54:  MOVWF  x0A
4B56:  MOVLW  1E
4B58:  MOVWF  x0C
4B5A:  CLRF   x0D
4B5C:  MOVLW  01
4B5E:  MOVWF  x0E
4B60:  MOVLW  02
4B62:  MOVWF  x0F
4B64:  MOVLB  0
4B66:  CALL   16E2
....................        
....................       if(unidad==1) 
4B6A:  MOVLB  4
4B6C:  DECFSZ xA3,W
4B6E:  BRA    4BCE
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4B70:  MOVFF  4D7,50C
4B74:  MOVLW  14
4B76:  MOVLB  5
4B78:  MOVWF  x0D
4B7A:  MOVLW  1E
4B7C:  MOVWF  x0E
4B7E:  MOVLW  01
4B80:  MOVWF  x0F
4B82:  MOVLB  0
4B84:  CALL   1908
....................          displayContrasena(Contrasena[1],40,30,0); 
4B88:  MOVFF  4D8,50C
4B8C:  MOVLW  28
4B8E:  MOVLB  5
4B90:  MOVWF  x0D
4B92:  MOVLW  1E
4B94:  MOVWF  x0E
4B96:  CLRF   x0F
4B98:  MOVLB  0
4B9A:  CALL   1908
....................          displayContrasena(Contrasena[2],60,30,0); 
4B9E:  MOVFF  4D9,50C
4BA2:  MOVLW  3C
4BA4:  MOVLB  5
4BA6:  MOVWF  x0D
4BA8:  MOVLW  1E
4BAA:  MOVWF  x0E
4BAC:  CLRF   x0F
4BAE:  MOVLB  0
4BB0:  CALL   1908
....................          displayContrasena(Contrasena[3],80,30,0); 
4BB4:  MOVFF  4DA,50C
4BB8:  MOVLW  50
4BBA:  MOVLB  5
4BBC:  MOVWF  x0D
4BBE:  MOVLW  1E
4BC0:  MOVWF  x0E
4BC2:  CLRF   x0F
4BC4:  MOVLB  0
4BC6:  CALL   1908
....................       } 
....................       else 
4BCA:  BRA    4CF6
4BCC:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4BCE:  MOVF   xA3,W
4BD0:  SUBLW  02
4BD2:  BNZ   4C32
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
4BD4:  MOVFF  4D7,50C
4BD8:  MOVLW  14
4BDA:  MOVLB  5
4BDC:  MOVWF  x0D
4BDE:  MOVLW  1E
4BE0:  MOVWF  x0E
4BE2:  CLRF   x0F
4BE4:  MOVLB  0
4BE6:  CALL   1908
....................             displayContrasena(Contrasena[1],40,30,1); 
4BEA:  MOVFF  4D8,50C
4BEE:  MOVLW  28
4BF0:  MOVLB  5
4BF2:  MOVWF  x0D
4BF4:  MOVLW  1E
4BF6:  MOVWF  x0E
4BF8:  MOVLW  01
4BFA:  MOVWF  x0F
4BFC:  MOVLB  0
4BFE:  CALL   1908
....................             displayContrasena(Contrasena[2],60,30,0); 
4C02:  MOVFF  4D9,50C
4C06:  MOVLW  3C
4C08:  MOVLB  5
4C0A:  MOVWF  x0D
4C0C:  MOVLW  1E
4C0E:  MOVWF  x0E
4C10:  CLRF   x0F
4C12:  MOVLB  0
4C14:  CALL   1908
....................             displayContrasena(Contrasena[3],80,30,0); 
4C18:  MOVFF  4DA,50C
4C1C:  MOVLW  50
4C1E:  MOVLB  5
4C20:  MOVWF  x0D
4C22:  MOVLW  1E
4C24:  MOVWF  x0E
4C26:  CLRF   x0F
4C28:  MOVLB  0
4C2A:  CALL   1908
....................          } 
....................          else 
4C2E:  BRA    4CF6
4C30:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4C32:  MOVF   xA3,W
4C34:  SUBLW  03
4C36:  BNZ   4C96
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4C38:  MOVFF  4D7,50C
4C3C:  MOVLW  14
4C3E:  MOVLB  5
4C40:  MOVWF  x0D
4C42:  MOVLW  1E
4C44:  MOVWF  x0E
4C46:  CLRF   x0F
4C48:  MOVLB  0
4C4A:  CALL   1908
....................                displayContrasena(Contrasena[1],40,30,0); 
4C4E:  MOVFF  4D8,50C
4C52:  MOVLW  28
4C54:  MOVLB  5
4C56:  MOVWF  x0D
4C58:  MOVLW  1E
4C5A:  MOVWF  x0E
4C5C:  CLRF   x0F
4C5E:  MOVLB  0
4C60:  CALL   1908
....................                displayContrasena(Contrasena[2],60,30,1); 
4C64:  MOVFF  4D9,50C
4C68:  MOVLW  3C
4C6A:  MOVLB  5
4C6C:  MOVWF  x0D
4C6E:  MOVLW  1E
4C70:  MOVWF  x0E
4C72:  MOVLW  01
4C74:  MOVWF  x0F
4C76:  MOVLB  0
4C78:  CALL   1908
....................                displayContrasena(Contrasena[3],80,30,0); 
4C7C:  MOVFF  4DA,50C
4C80:  MOVLW  50
4C82:  MOVLB  5
4C84:  MOVWF  x0D
4C86:  MOVLW  1E
4C88:  MOVWF  x0E
4C8A:  CLRF   x0F
4C8C:  MOVLB  0
4C8E:  CALL   1908
....................             } 
....................             else 
4C92:  BRA    4CF6
4C94:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4C96:  MOVF   xA3,W
4C98:  SUBLW  04
4C9A:  BNZ   4CF8
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4C9C:  MOVFF  4D7,50C
4CA0:  MOVLW  14
4CA2:  MOVLB  5
4CA4:  MOVWF  x0D
4CA6:  MOVLW  1E
4CA8:  MOVWF  x0E
4CAA:  CLRF   x0F
4CAC:  MOVLB  0
4CAE:  CALL   1908
....................                   displayContrasena(Contrasena[1],40,30,0); 
4CB2:  MOVFF  4D8,50C
4CB6:  MOVLW  28
4CB8:  MOVLB  5
4CBA:  MOVWF  x0D
4CBC:  MOVLW  1E
4CBE:  MOVWF  x0E
4CC0:  CLRF   x0F
4CC2:  MOVLB  0
4CC4:  CALL   1908
....................                   displayContrasena(Contrasena[2],60,30,0); 
4CC8:  MOVFF  4D9,50C
4CCC:  MOVLW  3C
4CCE:  MOVLB  5
4CD0:  MOVWF  x0D
4CD2:  MOVLW  1E
4CD4:  MOVWF  x0E
4CD6:  CLRF   x0F
4CD8:  MOVLB  0
4CDA:  CALL   1908
....................                   displayContrasena(Contrasena[3],80,30,1); 
4CDE:  MOVFF  4DA,50C
4CE2:  MOVLW  50
4CE4:  MOVLB  5
4CE6:  MOVWF  x0D
4CE8:  MOVLW  1E
4CEA:  MOVWF  x0E
4CEC:  MOVLW  01
4CEE:  MOVWF  x0F
4CF0:  MOVLB  0
4CF2:  CALL   1908
4CF6:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4CF8:  BSF    F92.0
4CFA:  BTFSS  F80.0
4CFC:  BRA    4D66
....................       { 
....................          if(Flanco == 0) 
4CFE:  BTFSC  x95.0
4D00:  BRA    4D64
....................          { 
....................             Flanco = 1;delay_ms(30); 
4D02:  BSF    x95.0
4D04:  MOVLW  1E
4D06:  MOVLB  5
4D08:  MOVWF  x0B
4D0A:  MOVLB  0
4D0C:  CALL   104A
....................             for(i=1;i<=4;i++) 
4D10:  MOVLW  01
4D12:  MOVLB  4
4D14:  MOVWF  xA4
4D16:  MOVF   xA4,W
4D18:  SUBLW  04
4D1A:  BNC   4D64
....................             { 
....................                if(unidad==i) 
4D1C:  MOVF   xA4,W
4D1E:  SUBWF  xA3,W
4D20:  BNZ   4D60
....................                { 
....................                   Contrasena[i-1]++; 
4D22:  MOVLW  01
4D24:  SUBWF  xA4,W
4D26:  CLRF   03
4D28:  ADDLW  D7
4D2A:  MOVWF  FE9
4D2C:  MOVLW  04
4D2E:  ADDWFC 03,W
4D30:  MOVWF  FEA
4D32:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4D34:  MOVLW  01
4D36:  SUBWF  xA4,W
4D38:  CLRF   03
4D3A:  ADDLW  D7
4D3C:  MOVWF  FE9
4D3E:  MOVLW  04
4D40:  ADDWFC 03,W
4D42:  MOVWF  FEA
4D44:  BTFSC  FEF.7
4D46:  BRA    4D60
4D48:  MOVF   FEF,W
4D4A:  SUBLW  09
4D4C:  BC    4D60
....................                   { 
....................                      Contrasena[i-1]=0; 
4D4E:  MOVLW  01
4D50:  SUBWF  xA4,W
4D52:  CLRF   03
4D54:  ADDLW  D7
4D56:  MOVWF  FE9
4D58:  MOVLW  04
4D5A:  ADDWFC 03,W
4D5C:  MOVWF  FEA
4D5E:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4D60:  INCF   xA4,F
4D62:  BRA    4D16
....................          } 
....................       } 
....................       else 
4D64:  BRA    4D68
....................       { 
....................          Flanco = 0; 
4D66:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4D68:  BSF    F92.1
4D6A:  BTFSS  F80.1
4D6C:  BRA    4DD4
....................       { 
....................          if(Flanco2 == 0) 
4D6E:  BTFSC  x95.2
4D70:  BRA    4DD2
....................             {Flanco2 = 1;delay_ms(30); 
4D72:  BSF    x95.2
4D74:  MOVLW  1E
4D76:  MOVLB  5
4D78:  MOVWF  x0B
4D7A:  MOVLB  0
4D7C:  CALL   104A
....................                for(i=1;i<=4;i++) 
4D80:  MOVLW  01
4D82:  MOVLB  4
4D84:  MOVWF  xA4
4D86:  MOVF   xA4,W
4D88:  SUBLW  04
4D8A:  BNC   4DD2
....................                { 
....................                   if(unidad==i) 
4D8C:  MOVF   xA4,W
4D8E:  SUBWF  xA3,W
4D90:  BNZ   4DCE
....................                   {Contrasena[i-1]--;  
4D92:  MOVLW  01
4D94:  SUBWF  xA4,W
4D96:  CLRF   03
4D98:  ADDLW  D7
4D9A:  MOVWF  FE9
4D9C:  MOVLW  04
4D9E:  ADDWFC 03,W
4DA0:  MOVWF  FEA
4DA2:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4DA4:  MOVLW  01
4DA6:  SUBWF  xA4,W
4DA8:  CLRF   03
4DAA:  ADDLW  D7
4DAC:  MOVWF  FE9
4DAE:  MOVLW  04
4DB0:  ADDWFC 03,W
4DB2:  MOVWF  FEA
4DB4:  BTFSC  FEF.7
4DB6:  BRA    4DBA
4DB8:  BRA    4DCE
....................                         {Contrasena[i-1]=9;} 
4DBA:  MOVLW  01
4DBC:  SUBWF  xA4,W
4DBE:  CLRF   03
4DC0:  ADDLW  D7
4DC2:  MOVWF  FE9
4DC4:  MOVLW  04
4DC6:  ADDWFC 03,W
4DC8:  MOVWF  FEA
4DCA:  MOVLW  09
4DCC:  MOVWF  FEF
....................                   } 
....................                }       
4DCE:  INCF   xA4,F
4DD0:  BRA    4D86
....................             }      
....................       } 
....................       else 
4DD2:  BRA    4DD6
....................       { 
....................          Flanco2 = 0; 
4DD4:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4DD6:  BSF    F92.2
4DD8:  BTFSS  F80.2
4DDA:  BRA    4DFE
....................       { 
....................          if(Flanco1 == 0) 
4DDC:  BTFSC  x95.1
4DDE:  BRA    4DFC
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4DE0:  BSF    x95.1
4DE2:  MOVLW  02
4DE4:  MOVLB  5
4DE6:  MOVWF  x0A
4DE8:  MOVLW  96
4DEA:  MOVWF  x0B
4DEC:  MOVLB  0
4DEE:  CALL   104A
4DF2:  MOVLB  5
4DF4:  DECFSZ x0A,F
4DF6:  BRA    4DE8
4DF8:  MOVLB  4
4DFA:  INCF   xA3,F
....................       } 
....................       else 
4DFC:  BRA    4E00
....................       { 
....................          Flanco1 = 0; 
4DFE:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4E00:  BSF    F92.3
4E02:  BTFSS  F80.3
4E04:  BRA    4E2E
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4E06:  MOVLW  04
4E08:  MOVLB  5
4E0A:  MOVWF  x0A
4E0C:  MOVLW  AF
4E0E:  MOVWF  x0B
4E10:  MOVLB  0
4E12:  CALL   104A
4E16:  MOVLB  5
4E18:  DECFSZ x0A,F
4E1A:  BRA    4E0C
4E1C:  MOVLW  01
4E1E:  MOVLB  4
4E20:  MOVWF  xA2
4E22:  MOVLB  5
4E24:  CLRF   x0B
4E26:  MOVLB  0
4E28:  CALL   10B4
4E2C:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4E2E:  MOVF   xA3,W
4E30:  SUBLW  04
4E32:  BTFSC  FD8.0
4E34:  BRA    4FDA
....................       {glcd_fillScreen(OFF); 
4E36:  MOVLB  5
4E38:  CLRF   x0B
4E3A:  MOVLB  0
4E3C:  CALL   10B4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4E40:  MOVLB  4
4E42:  MOVF   xDB,W
4E44:  SUBWF  xD7,W
4E46:  BNZ   4F18
4E48:  MOVF   xDC,W
4E4A:  SUBWF  xD8,W
4E4C:  BNZ   4F18
4E4E:  MOVF   xDD,W
4E50:  SUBWF  xD9,W
4E52:  BNZ   4F18
4E54:  MOVF   xDE,W
4E56:  SUBWF  xDA,W
4E58:  BNZ   4F18
....................          { 
....................             glcd_fillScreen(OFF); 
4E5A:  MOVLB  5
4E5C:  CLRF   x0B
4E5E:  MOVLB  0
4E60:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
4E64:  MOVLW  04
4E66:  MOVWF  FEA
4E68:  MOVLW  EA
4E6A:  MOVWF  FE9
4E6C:  MOVFF  FF2,50A
4E70:  BCF    FF2.7
4E72:  MOVLW  00
4E74:  CALL   0756
4E78:  TBLRD*-
4E7A:  TBLRD*+
4E7C:  MOVF   FF5,W
4E7E:  MOVWF  FEE
4E80:  IORLW  00
4E82:  BNZ   4E7A
4E84:  MOVLB  5
4E86:  BTFSC  x0A.7
4E88:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4E8A:  MOVLW  04
4E8C:  MOVWF  x0B
4E8E:  MOVLW  EA
4E90:  MOVWF  x0A
4E92:  MOVLW  1E
4E94:  MOVWF  x0C
4E96:  CLRF   x0D
4E98:  CLRF   x0E
4E9A:  MOVLW  02
4E9C:  MOVWF  x0F
4E9E:  MOVLB  0
4EA0:  CALL   16E2
....................             strcpy(Menus.Letra,"Correcta"); 
4EA4:  MOVLW  04
4EA6:  MOVWF  FEA
4EA8:  MOVLW  EA
4EAA:  MOVWF  FE9
4EAC:  MOVFF  FF2,50A
4EB0:  BCF    FF2.7
4EB2:  MOVLW  00
4EB4:  CALL   0776
4EB8:  TBLRD*-
4EBA:  TBLRD*+
4EBC:  MOVF   FF5,W
4EBE:  MOVWF  FEE
4EC0:  IORLW  00
4EC2:  BNZ   4EBA
4EC4:  MOVLB  5
4EC6:  BTFSC  x0A.7
4EC8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4ECA:  MOVLW  04
4ECC:  MOVWF  x0B
4ECE:  MOVLW  EA
4ED0:  MOVWF  x0A
4ED2:  MOVLW  0F
4ED4:  MOVWF  x0C
4ED6:  MOVLW  1E
4ED8:  MOVWF  x0D
4EDA:  CLRF   x0E
4EDC:  MOVLW  02
4EDE:  MOVWF  x0F
4EE0:  MOVLB  0
4EE2:  CALL   16E2
....................             Menu=91;glcd_update();delay_ms(1000); 
4EE6:  MOVLW  5B
4EE8:  MOVLB  4
4EEA:  MOVWF  xA2
4EEC:  MOVLB  0
4EEE:  CALL   110E
4EF2:  MOVLW  04
4EF4:  MOVLB  5
4EF6:  MOVWF  x0A
4EF8:  MOVLW  FA
4EFA:  MOVWF  x0B
4EFC:  MOVLB  0
4EFE:  CALL   104A
4F02:  MOVLB  5
4F04:  DECFSZ x0A,F
4F06:  BRA    4EF8
....................             glcd_fillScreen(OFF);unidad=1; 
4F08:  CLRF   x0B
4F0A:  MOVLB  0
4F0C:  CALL   10B4
4F10:  MOVLW  01
4F12:  MOVLB  4
4F14:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4F16:  BRA    4FDA
....................          { 
....................             glcd_fillScreen(OFF); 
4F18:  MOVLB  5
4F1A:  CLRF   x0B
4F1C:  MOVLB  0
4F1E:  CALL   10B4
....................             strcpy(Menus.Letra,"Clave"); 
4F22:  MOVLW  04
4F24:  MOVWF  FEA
4F26:  MOVLW  EA
4F28:  MOVWF  FE9
4F2A:  MOVFF  FF2,50A
4F2E:  BCF    FF2.7
4F30:  MOVLW  00
4F32:  CALL   0756
4F36:  TBLRD*-
4F38:  TBLRD*+
4F3A:  MOVF   FF5,W
4F3C:  MOVWF  FEE
4F3E:  IORLW  00
4F40:  BNZ   4F38
4F42:  MOVLB  5
4F44:  BTFSC  x0A.7
4F46:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4F48:  MOVLW  04
4F4A:  MOVWF  x0B
4F4C:  MOVLW  EA
4F4E:  MOVWF  x0A
4F50:  MOVLW  1E
4F52:  MOVWF  x0C
4F54:  CLRF   x0D
4F56:  CLRF   x0E
4F58:  MOVLW  02
4F5A:  MOVWF  x0F
4F5C:  MOVLB  0
4F5E:  CALL   16E2
....................             strcpy(Menus.Letra,"Incorrecta"); 
4F62:  MOVLW  04
4F64:  MOVWF  FEA
4F66:  MOVLW  EA
4F68:  MOVWF  FE9
4F6A:  MOVFF  FF2,50A
4F6E:  BCF    FF2.7
4F70:  MOVLW  00
4F72:  CALL   079A
4F76:  TBLRD*-
4F78:  TBLRD*+
4F7A:  MOVF   FF5,W
4F7C:  MOVWF  FEE
4F7E:  IORLW  00
4F80:  BNZ   4F78
4F82:  MOVLB  5
4F84:  BTFSC  x0A.7
4F86:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4F88:  MOVLW  04
4F8A:  MOVWF  x0B
4F8C:  MOVLW  EA
4F8E:  MOVWF  x0A
4F90:  CLRF   x0C
4F92:  MOVLW  1E
4F94:  MOVWF  x0D
4F96:  CLRF   x0E
4F98:  MOVLW  02
4F9A:  MOVWF  x0F
4F9C:  MOVLB  0
4F9E:  CALL   16E2
....................             Menu=1;glcd_update();delay_ms(1000); 
4FA2:  MOVLW  01
4FA4:  MOVLB  4
4FA6:  MOVWF  xA2
4FA8:  MOVLB  0
4FAA:  CALL   110E
4FAE:  MOVLW  04
4FB0:  MOVLB  5
4FB2:  MOVWF  x0A
4FB4:  MOVLW  FA
4FB6:  MOVWF  x0B
4FB8:  MOVLB  0
4FBA:  CALL   104A
4FBE:  MOVLB  5
4FC0:  DECFSZ x0A,F
4FC2:  BRA    4FB4
....................             glcd_fillScreen(OFF);unidad=1; 
4FC4:  CLRF   x0B
4FC6:  MOVLB  0
4FC8:  CALL   10B4
4FCC:  MOVLW  01
4FCE:  MOVLB  4
4FD0:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4FD2:  CLRF   xD7
4FD4:  CLRF   xD8
4FD6:  CLRF   xD9
4FD8:  CLRF   xDA
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4FDA:  MOVF   xA2,W
4FDC:  SUBLW  5B
4FDE:  BTFSS  FD8.2
4FE0:  BRA    53BA
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4FE2:  MOVLW  04
4FE4:  MOVWF  FEA
4FE6:  MOVLW  EA
4FE8:  MOVWF  FE9
4FEA:  MOVFF  FF2,50A
4FEE:  BCF    FF2.7
4FF0:  MOVLW  00
4FF2:  MOVLB  0
4FF4:  CALL   0C2C
4FF8:  TBLRD*-
4FFA:  TBLRD*+
4FFC:  MOVF   FF5,W
4FFE:  MOVWF  FEE
5000:  IORLW  00
5002:  BNZ   4FFA
5004:  MOVLB  5
5006:  BTFSC  x0A.7
5008:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
500A:  MOVLW  04
500C:  MOVWF  x0B
500E:  MOVLW  EA
5010:  MOVWF  x0A
5012:  CLRF   x0C
5014:  CLRF   x0D
5016:  MOVLW  01
5018:  MOVWF  x0E
501A:  MOVLW  02
501C:  MOVWF  x0F
501E:  MOVLB  0
5020:  CALL   16E2
....................        
....................       if(unidad==1) 
5024:  MOVLB  4
5026:  DECFSZ xA3,W
5028:  BRA    5088
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
502A:  MOVFF  4DB,50C
502E:  MOVLW  14
5030:  MOVLB  5
5032:  MOVWF  x0D
5034:  MOVLW  1E
5036:  MOVWF  x0E
5038:  MOVLW  01
503A:  MOVWF  x0F
503C:  MOVLB  0
503E:  CALL   1908
....................          displayContrasena(Password[1],40,30,0); 
5042:  MOVFF  4DC,50C
5046:  MOVLW  28
5048:  MOVLB  5
504A:  MOVWF  x0D
504C:  MOVLW  1E
504E:  MOVWF  x0E
5050:  CLRF   x0F
5052:  MOVLB  0
5054:  CALL   1908
....................          displayContrasena(Password[2],60,30,0); 
5058:  MOVFF  4DD,50C
505C:  MOVLW  3C
505E:  MOVLB  5
5060:  MOVWF  x0D
5062:  MOVLW  1E
5064:  MOVWF  x0E
5066:  CLRF   x0F
5068:  MOVLB  0
506A:  CALL   1908
....................          displayContrasena(Password[3],80,30,0); 
506E:  MOVFF  4DE,50C
5072:  MOVLW  50
5074:  MOVLB  5
5076:  MOVWF  x0D
5078:  MOVLW  1E
507A:  MOVWF  x0E
507C:  CLRF   x0F
507E:  MOVLB  0
5080:  CALL   1908
....................       } 
....................       else 
5084:  BRA    51B0
5086:  MOVLB  4
....................       { 
....................          if(unidad==2) 
5088:  MOVF   xA3,W
508A:  SUBLW  02
508C:  BNZ   50EC
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
508E:  MOVFF  4DB,50C
5092:  MOVLW  14
5094:  MOVLB  5
5096:  MOVWF  x0D
5098:  MOVLW  1E
509A:  MOVWF  x0E
509C:  CLRF   x0F
509E:  MOVLB  0
50A0:  CALL   1908
....................             displayContrasena(Password[1],40,30,1); 
50A4:  MOVFF  4DC,50C
50A8:  MOVLW  28
50AA:  MOVLB  5
50AC:  MOVWF  x0D
50AE:  MOVLW  1E
50B0:  MOVWF  x0E
50B2:  MOVLW  01
50B4:  MOVWF  x0F
50B6:  MOVLB  0
50B8:  CALL   1908
....................             displayContrasena(Password[2],60,30,0); 
50BC:  MOVFF  4DD,50C
50C0:  MOVLW  3C
50C2:  MOVLB  5
50C4:  MOVWF  x0D
50C6:  MOVLW  1E
50C8:  MOVWF  x0E
50CA:  CLRF   x0F
50CC:  MOVLB  0
50CE:  CALL   1908
....................             displayContrasena(Password[3],80,30,0); 
50D2:  MOVFF  4DE,50C
50D6:  MOVLW  50
50D8:  MOVLB  5
50DA:  MOVWF  x0D
50DC:  MOVLW  1E
50DE:  MOVWF  x0E
50E0:  CLRF   x0F
50E2:  MOVLB  0
50E4:  CALL   1908
....................          } 
....................          else 
50E8:  BRA    51B0
50EA:  MOVLB  4
....................          { 
....................             if(unidad==3) 
50EC:  MOVF   xA3,W
50EE:  SUBLW  03
50F0:  BNZ   5150
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
50F2:  MOVFF  4DB,50C
50F6:  MOVLW  14
50F8:  MOVLB  5
50FA:  MOVWF  x0D
50FC:  MOVLW  1E
50FE:  MOVWF  x0E
5100:  CLRF   x0F
5102:  MOVLB  0
5104:  CALL   1908
....................                displayContrasena(Password[1],40,30,0); 
5108:  MOVFF  4DC,50C
510C:  MOVLW  28
510E:  MOVLB  5
5110:  MOVWF  x0D
5112:  MOVLW  1E
5114:  MOVWF  x0E
5116:  CLRF   x0F
5118:  MOVLB  0
511A:  CALL   1908
....................                displayContrasena(Password[2],60,30,1); 
511E:  MOVFF  4DD,50C
5122:  MOVLW  3C
5124:  MOVLB  5
5126:  MOVWF  x0D
5128:  MOVLW  1E
512A:  MOVWF  x0E
512C:  MOVLW  01
512E:  MOVWF  x0F
5130:  MOVLB  0
5132:  CALL   1908
....................                displayContrasena(Password[3],80,30,0); 
5136:  MOVFF  4DE,50C
513A:  MOVLW  50
513C:  MOVLB  5
513E:  MOVWF  x0D
5140:  MOVLW  1E
5142:  MOVWF  x0E
5144:  CLRF   x0F
5146:  MOVLB  0
5148:  CALL   1908
....................             } 
....................             else 
514C:  BRA    51B0
514E:  MOVLB  4
....................             { 
....................                if(unidad==4) 
5150:  MOVF   xA3,W
5152:  SUBLW  04
5154:  BNZ   51B2
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
5156:  MOVFF  4DB,50C
515A:  MOVLW  14
515C:  MOVLB  5
515E:  MOVWF  x0D
5160:  MOVLW  1E
5162:  MOVWF  x0E
5164:  CLRF   x0F
5166:  MOVLB  0
5168:  CALL   1908
....................                   displayContrasena(Password[1],40,30,0); 
516C:  MOVFF  4DC,50C
5170:  MOVLW  28
5172:  MOVLB  5
5174:  MOVWF  x0D
5176:  MOVLW  1E
5178:  MOVWF  x0E
517A:  CLRF   x0F
517C:  MOVLB  0
517E:  CALL   1908
....................                   displayContrasena(Password[2],60,30,0); 
5182:  MOVFF  4DD,50C
5186:  MOVLW  3C
5188:  MOVLB  5
518A:  MOVWF  x0D
518C:  MOVLW  1E
518E:  MOVWF  x0E
5190:  CLRF   x0F
5192:  MOVLB  0
5194:  CALL   1908
....................                   displayContrasena(Password[3],80,30,1); 
5198:  MOVFF  4DE,50C
519C:  MOVLW  50
519E:  MOVLB  5
51A0:  MOVWF  x0D
51A2:  MOVLW  1E
51A4:  MOVWF  x0E
51A6:  MOVLW  01
51A8:  MOVWF  x0F
51AA:  MOVLB  0
51AC:  CALL   1908
51B0:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
51B2:  BSF    F92.0
51B4:  BTFSS  F80.0
51B6:  BRA    5220
....................       { 
....................          if(Flanco == 0) 
51B8:  BTFSC  x95.0
51BA:  BRA    521E
....................          { 
....................             Flanco = 1;delay_ms(30); 
51BC:  BSF    x95.0
51BE:  MOVLW  1E
51C0:  MOVLB  5
51C2:  MOVWF  x0B
51C4:  MOVLB  0
51C6:  CALL   104A
....................             for(i=1;i<=4;i++) 
51CA:  MOVLW  01
51CC:  MOVLB  4
51CE:  MOVWF  xA4
51D0:  MOVF   xA4,W
51D2:  SUBLW  04
51D4:  BNC   521E
....................             { 
....................                if(unidad==i) 
51D6:  MOVF   xA4,W
51D8:  SUBWF  xA3,W
51DA:  BNZ   521A
....................                { 
....................                   Password[i-1]++; 
51DC:  MOVLW  01
51DE:  SUBWF  xA4,W
51E0:  CLRF   03
51E2:  ADDLW  DB
51E4:  MOVWF  FE9
51E6:  MOVLW  04
51E8:  ADDWFC 03,W
51EA:  MOVWF  FEA
51EC:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
51EE:  MOVLW  01
51F0:  SUBWF  xA4,W
51F2:  CLRF   03
51F4:  ADDLW  DB
51F6:  MOVWF  FE9
51F8:  MOVLW  04
51FA:  ADDWFC 03,W
51FC:  MOVWF  FEA
51FE:  BTFSC  FEF.7
5200:  BRA    521A
5202:  MOVF   FEF,W
5204:  SUBLW  09
5206:  BC    521A
....................                   { 
....................                      Password[i-1]=0; 
5208:  MOVLW  01
520A:  SUBWF  xA4,W
520C:  CLRF   03
520E:  ADDLW  DB
5210:  MOVWF  FE9
5212:  MOVLW  04
5214:  ADDWFC 03,W
5216:  MOVWF  FEA
5218:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
521A:  INCF   xA4,F
521C:  BRA    51D0
....................          } 
....................       } 
....................       else 
521E:  BRA    5222
....................       { 
....................          Flanco = 0; 
5220:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5222:  BSF    F92.1
5224:  BTFSS  F80.1
5226:  BRA    528E
....................       { 
....................          if(Flanco2 == 0) 
5228:  BTFSC  x95.2
522A:  BRA    528C
....................             {Flanco2 = 1;delay_ms(30); 
522C:  BSF    x95.2
522E:  MOVLW  1E
5230:  MOVLB  5
5232:  MOVWF  x0B
5234:  MOVLB  0
5236:  CALL   104A
....................                for(i=1;i<=4;i++) 
523A:  MOVLW  01
523C:  MOVLB  4
523E:  MOVWF  xA4
5240:  MOVF   xA4,W
5242:  SUBLW  04
5244:  BNC   528C
....................                { 
....................                   if(unidad==i) 
5246:  MOVF   xA4,W
5248:  SUBWF  xA3,W
524A:  BNZ   5288
....................                   { 
....................                      Password[i-1]--; 
524C:  MOVLW  01
524E:  SUBWF  xA4,W
5250:  CLRF   03
5252:  ADDLW  DB
5254:  MOVWF  FE9
5256:  MOVLW  04
5258:  ADDWFC 03,W
525A:  MOVWF  FEA
525C:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
525E:  MOVLW  01
5260:  SUBWF  xA4,W
5262:  CLRF   03
5264:  ADDLW  DB
5266:  MOVWF  FE9
5268:  MOVLW  04
526A:  ADDWFC 03,W
526C:  MOVWF  FEA
526E:  BTFSC  FEF.7
5270:  BRA    5274
5272:  BRA    5288
....................                      { 
....................                         Password[i-1]=9; 
5274:  MOVLW  01
5276:  SUBWF  xA4,W
5278:  CLRF   03
527A:  ADDLW  DB
527C:  MOVWF  FE9
527E:  MOVLW  04
5280:  ADDWFC 03,W
5282:  MOVWF  FEA
5284:  MOVLW  09
5286:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
5288:  INCF   xA4,F
528A:  BRA    5240
....................             }      
....................       } 
....................       else 
528C:  BRA    5290
....................       { 
....................          Flanco2 = 0; 
528E:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
5290:  BSF    F92.2
5292:  BTFSS  F80.2
5294:  BRA    52B8
....................       { 
....................          if(Flanco1 == 0) 
5296:  BTFSC  x95.1
5298:  BRA    52B6
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
529A:  BSF    x95.1
529C:  MOVLW  02
529E:  MOVLB  5
52A0:  MOVWF  x0A
52A2:  MOVLW  96
52A4:  MOVWF  x0B
52A6:  MOVLB  0
52A8:  CALL   104A
52AC:  MOVLB  5
52AE:  DECFSZ x0A,F
52B0:  BRA    52A2
52B2:  MOVLB  4
52B4:  INCF   xA3,F
....................       } 
....................       else 
52B6:  BRA    52BA
....................       { 
....................          Flanco1 = 0; 
52B8:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
52BA:  BSF    F92.3
52BC:  BTFSS  F80.3
52BE:  BRA    52E8
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
52C0:  MOVLW  04
52C2:  MOVLB  5
52C4:  MOVWF  x0A
52C6:  MOVLW  AF
52C8:  MOVWF  x0B
52CA:  MOVLB  0
52CC:  CALL   104A
52D0:  MOVLB  5
52D2:  DECFSZ x0A,F
52D4:  BRA    52C6
52D6:  MOVLW  01
52D8:  MOVLB  4
52DA:  MOVWF  xA2
52DC:  MOVLB  5
52DE:  CLRF   x0B
52E0:  MOVLB  0
52E2:  CALL   10B4
52E6:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
52E8:  MOVF   xA3,W
52EA:  SUBLW  04
52EC:  BC    53BA
....................       { 
....................          Opcion=1;unidad=1; 
52EE:  MOVLW  01
52F0:  MOVWF  xAC
52F2:  MOVWF  xA3
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
52F4:  MOVLW  0A
52F6:  MOVWF  FA9
52F8:  MOVFF  4DB,FA8
52FC:  BCF    FA6.6
52FE:  BCF    FA6.7
5300:  BSF    FA6.2
5302:  MOVF   FF2,W
5304:  MOVWF  00
5306:  BCF    FF2.7
5308:  MOVLB  F
530A:  MOVLW  55
530C:  MOVWF  FA7
530E:  MOVLW  AA
5310:  MOVWF  FA7
5312:  BSF    FA6.1
5314:  BTFSC  FA6.1
5316:  BRA    5314
5318:  BCF    FA6.2
531A:  MOVF   00,W
531C:  IORWF  FF2,F
531E:  MOVLW  0B
5320:  MOVWF  FA9
5322:  MOVFF  4DC,FA8
5326:  BCF    FA6.6
5328:  BCF    FA6.7
532A:  BSF    FA6.2
532C:  MOVF   FF2,W
532E:  MOVWF  00
5330:  BCF    FF2.7
5332:  MOVLW  55
5334:  MOVWF  FA7
5336:  MOVLW  AA
5338:  MOVWF  FA7
533A:  BSF    FA6.1
533C:  BTFSC  FA6.1
533E:  BRA    533C
5340:  BCF    FA6.2
5342:  MOVF   00,W
5344:  IORWF  FF2,F
5346:  MOVLW  0C
5348:  MOVWF  FA9
534A:  MOVFF  4DD,FA8
534E:  BCF    FA6.6
5350:  BCF    FA6.7
5352:  BSF    FA6.2
5354:  MOVF   FF2,W
5356:  MOVWF  00
5358:  BCF    FF2.7
535A:  MOVLW  55
535C:  MOVWF  FA7
535E:  MOVLW  AA
5360:  MOVWF  FA7
5362:  BSF    FA6.1
5364:  BTFSC  FA6.1
5366:  BRA    5364
5368:  BCF    FA6.2
536A:  MOVF   00,W
536C:  IORWF  FF2,F
536E:  MOVLW  0D
5370:  MOVWF  FA9
5372:  MOVFF  4DE,FA8
5376:  BCF    FA6.6
5378:  BCF    FA6.7
537A:  BSF    FA6.2
537C:  MOVF   FF2,W
537E:  MOVWF  00
5380:  BCF    FF2.7
5382:  MOVLW  55
5384:  MOVWF  FA7
5386:  MOVLW  AA
5388:  MOVWF  FA7
538A:  BSF    FA6.1
538C:  BTFSC  FA6.1
538E:  BRA    538C
5390:  BCF    FA6.2
5392:  MOVF   00,W
5394:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
5396:  MOVLW  04
5398:  MOVLB  5
539A:  MOVWF  x0A
539C:  MOVLW  FA
539E:  MOVWF  x0B
53A0:  MOVLB  0
53A2:  CALL   104A
53A6:  MOVLB  5
53A8:  DECFSZ x0A,F
53AA:  BRA    539C
53AC:  CLRF   x0B
53AE:  MOVLB  0
53B0:  CALL   10B4
53B4:  MOVLW  01
53B6:  MOVLB  4
53B8:  MOVWF  xA2
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==10){ // Menu de Presion Atmosferica 
53BA:  MOVF   xA2,W
53BC:  SUBLW  0A
53BE:  BTFSS  FD8.2
53C0:  BRA    5516
....................       
....................       if(visual==1) 
53C2:  BTFSS  x95.4
53C4:  BRA    5470
....................       { 
....................          glcd_fillScreen(OFF); 
53C6:  MOVLB  5
53C8:  CLRF   x0B
53CA:  MOVLB  0
53CC:  CALL   10B4
....................          strcpy(Menus.Letra,"Atmosfera"); 
53D0:  MOVLW  04
53D2:  MOVWF  FEA
53D4:  MOVLW  EA
53D6:  MOVWF  FE9
53D8:  MOVFF  FF2,50A
53DC:  BCF    FF2.7
53DE:  MOVLW  00
53E0:  CALL   0C52
53E4:  TBLRD*-
53E6:  TBLRD*+
53E8:  MOVF   FF5,W
53EA:  MOVWF  FEE
53EC:  IORLW  00
53EE:  BNZ   53E6
53F0:  MOVLB  5
53F2:  BTFSC  x0A.7
53F4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
53F6:  MOVLW  04
53F8:  MOVWF  x0B
53FA:  MOVLW  EA
53FC:  MOVWF  x0A
53FE:  CLRF   x0C
5400:  CLRF   x0D
5402:  MOVLW  01
5404:  MOVWF  x0E
5406:  MOVLW  02
5408:  MOVWF  x0F
540A:  MOVLB  0
540C:  CALL   16E2
....................          strcpy(Menus.Letra,"kpa");displayMenu(Menus.Letra,92,30,2,1); 
5410:  MOVLW  04
5412:  MOVWF  FEA
5414:  MOVLW  EA
5416:  MOVWF  FE9
5418:  MOVFF  FF2,50A
541C:  BCF    FF2.7
541E:  MOVLW  00
5420:  CALL   0C76
5424:  TBLRD*-
5426:  TBLRD*+
5428:  MOVF   FF5,W
542A:  MOVWF  FEE
542C:  IORLW  00
542E:  BNZ   5426
5430:  MOVLB  5
5432:  BTFSC  x0A.7
5434:  BSF    FF2.7
5436:  MOVLW  04
5438:  MOVWF  x0B
543A:  MOVLW  EA
543C:  MOVWF  x0A
543E:  MOVLW  5C
5440:  MOVWF  x0C
5442:  MOVLW  1E
5444:  MOVWF  x0D
5446:  MOVLW  02
5448:  MOVWF  x0E
544A:  MOVLW  01
544C:  MOVWF  x0F
544E:  MOVLB  0
5450:  CALL   16E2
....................           
....................          displayTiempo(Atmosferica,30,30,0,3); 
5454:  MOVFF  4AA,50B
5458:  MOVLW  1E
545A:  MOVLB  5
545C:  MOVWF  x0C
545E:  MOVWF  x0D
5460:  CLRF   x0E
5462:  MOVLW  03
5464:  MOVWF  x0F
5466:  MOVLB  0
5468:  CALL   24E2
....................           
....................          visual=0; 
546C:  MOVLB  4
546E:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
5470:  BSF    F92.0
5472:  BTFSS  F80.0
5474:  BRA    5488
....................          {   
....................             delay_ms(30);Atmosferica++;visual=1; 
5476:  MOVLW  1E
5478:  MOVLB  5
547A:  MOVWF  x0B
547C:  MOVLB  0
547E:  CALL   104A
5482:  MOVLB  4
5484:  INCF   xAA,F
5486:  BSF    x95.4
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5488:  BSF    F92.1
548A:  BTFSS  F80.1
548C:  BRA    54A0
....................          {   
....................             delay_ms(30);Atmosferica--;visual=1;      
548E:  MOVLW  1E
5490:  MOVLB  5
5492:  MOVWF  x0B
5494:  MOVLB  0
5496:  CALL   104A
549A:  MOVLB  4
549C:  DECF   xAA,F
549E:  BSF    x95.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
54A0:  BSF    F92.2
54A2:  BTFSS  F80.2
54A4:  BRA    54B6
....................          {   
....................             delay_ms(30);visual=1; 
54A6:  MOVLW  1E
54A8:  MOVLB  5
54AA:  MOVWF  x0B
54AC:  MOVLB  0
54AE:  CALL   104A
54B2:  MOVLB  4
54B4:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
54B6:  BSF    F92.3
54B8:  BTFSS  F80.3
54BA:  BRA    5516
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
54BC:  MOVLW  04
54BE:  MOVLB  5
54C0:  MOVWF  x0A
54C2:  MOVLW  AF
54C4:  MOVWF  x0B
54C6:  MOVLB  0
54C8:  CALL   104A
54CC:  MOVLB  5
54CE:  DECFSZ x0A,F
54D0:  BRA    54C2
54D2:  MOVLW  01
54D4:  MOVLB  4
54D6:  MOVWF  xA2
54D8:  MOVLB  5
54DA:  CLRF   x0B
54DC:  MOVLB  0
54DE:  CALL   10B4
54E2:  MOVLW  01
54E4:  MOVLB  4
54E6:  MOVWF  xAC
54E8:  BSF    x95.4
....................             write_eeprom(90,Atmosferica); 
54EA:  MOVLW  5A
54EC:  MOVWF  FA9
54EE:  MOVFF  4AA,FA8
54F2:  BCF    FA6.6
54F4:  BCF    FA6.7
54F6:  BSF    FA6.2
54F8:  MOVF   FF2,W
54FA:  MOVWF  00
54FC:  BCF    FF2.7
54FE:  MOVLB  F
5500:  MOVLW  55
5502:  MOVWF  FA7
5504:  MOVLW  AA
5506:  MOVWF  FA7
5508:  BSF    FA6.1
550A:  BTFSC  FA6.1
550C:  BRA    550A
550E:  BCF    FA6.2
5510:  MOVF   00,W
5512:  IORWF  FF2,F
5514:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
5516:  MOVF   xA2,W
5518:  SUBLW  0B
551A:  BTFSS  FD8.2
551C:  BRA    581E
....................       
....................       if(visual==1) 
551E:  BTFSS  x95.4
5520:  BRA    56AC
....................       { 
....................          if(unidad<1) 
5522:  MOVF   xA3,F
5524:  BNZ   552A
....................          {unidad=4;} 
5526:  MOVLW  04
5528:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
552A:  MOVLW  04
552C:  MOVWF  FEA
552E:  MOVLW  EA
5530:  MOVWF  FE9
5532:  MOVFF  FF2,50A
5536:  BCF    FF2.7
5538:  MOVLW  00
553A:  MOVLB  0
553C:  CALL   0C94
5540:  TBLRD*-
5542:  TBLRD*+
5544:  MOVF   FF5,W
5546:  MOVWF  FEE
5548:  IORLW  00
554A:  BNZ   5542
554C:  MOVLB  5
554E:  BTFSC  x0A.7
5550:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5552:  MOVLW  04
5554:  MOVWF  x0B
5556:  MOVLW  EA
5558:  MOVWF  x0A
555A:  CLRF   x0C
555C:  CLRF   x0D
555E:  MOVLW  01
5560:  MOVWF  x0E
5562:  MOVLW  02
5564:  MOVWF  x0F
5566:  MOVLB  0
5568:  CALL   16E2
....................           
....................          if(unidad==4) 
556C:  MOVLB  4
556E:  MOVF   xA3,W
5570:  SUBLW  04
5572:  BNZ   5592
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
5574:  MOVFF  4CE,50B
5578:  MOVLW  14
557A:  MOVLB  5
557C:  MOVWF  x0C
557E:  MOVLW  28
5580:  MOVWF  x0D
5582:  MOVLW  01
5584:  MOVWF  x0E
5586:  MOVLW  02
5588:  MOVWF  x0F
558A:  MOVLB  0
558C:  CALL   24E2
....................          else 
5590:  BRA    55AC
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
5592:  MOVFF  4CE,50B
5596:  MOVLW  14
5598:  MOVLB  5
559A:  MOVWF  x0C
559C:  MOVLW  28
559E:  MOVWF  x0D
55A0:  CLRF   x0E
55A2:  MOVLW  02
55A4:  MOVWF  x0F
55A6:  MOVLB  0
55A8:  CALL   24E2
....................           
....................          if(unidad==3) 
55AC:  MOVLB  4
55AE:  MOVF   xA3,W
55B0:  SUBLW  03
55B2:  BNZ   55D0
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
55B4:  MOVFF  4CD,50B
55B8:  MOVLW  28
55BA:  MOVLB  5
55BC:  MOVWF  x0C
55BE:  MOVWF  x0D
55C0:  MOVLW  01
55C2:  MOVWF  x0E
55C4:  MOVLW  02
55C6:  MOVWF  x0F
55C8:  MOVLB  0
55CA:  CALL   24E2
....................          else 
55CE:  BRA    55E8
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
55D0:  MOVFF  4CD,50B
55D4:  MOVLW  28
55D6:  MOVLB  5
55D8:  MOVWF  x0C
55DA:  MOVWF  x0D
55DC:  CLRF   x0E
55DE:  MOVLW  02
55E0:  MOVWF  x0F
55E2:  MOVLB  0
55E4:  CALL   24E2
....................           
....................          if(unidad==2) 
55E8:  MOVLB  4
55EA:  MOVF   xA3,W
55EC:  SUBLW  02
55EE:  BNZ   560E
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
55F0:  MOVFF  4CC,50B
55F4:  MOVLW  46
55F6:  MOVLB  5
55F8:  MOVWF  x0C
55FA:  MOVLW  28
55FC:  MOVWF  x0D
55FE:  MOVLW  01
5600:  MOVWF  x0E
5602:  MOVLW  02
5604:  MOVWF  x0F
5606:  MOVLB  0
5608:  CALL   24E2
....................          else 
560C:  BRA    5628
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
560E:  MOVFF  4CC,50B
5612:  MOVLW  46
5614:  MOVLB  5
5616:  MOVWF  x0C
5618:  MOVLW  28
561A:  MOVWF  x0D
561C:  CLRF   x0E
561E:  MOVLW  02
5620:  MOVWF  x0F
5622:  MOVLB  0
5624:  CALL   24E2
....................           
....................          if(unidad==1) 
5628:  MOVLB  4
562A:  DECFSZ xA3,W
562C:  BRA    564C
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
562E:  MOVFF  4CB,50B
5632:  MOVLW  5A
5634:  MOVLB  5
5636:  MOVWF  x0C
5638:  MOVLW  28
563A:  MOVWF  x0D
563C:  MOVLW  01
563E:  MOVWF  x0E
5640:  MOVLW  02
5642:  MOVWF  x0F
5644:  MOVLB  0
5646:  CALL   24E2
....................          else 
564A:  BRA    5666
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
564C:  MOVFF  4CB,50B
5650:  MOVLW  5A
5652:  MOVLB  5
5654:  MOVWF  x0C
5656:  MOVLW  28
5658:  MOVWF  x0D
565A:  CLRF   x0E
565C:  MOVLW  02
565E:  MOVWF  x0F
5660:  MOVLB  0
5662:  CALL   24E2
....................           
....................          strcpy(Menus.Letra,":"); 
5666:  MOVLW  04
5668:  MOVWF  FEA
566A:  MOVLW  EA
566C:  MOVWF  FE9
566E:  MOVFF  FF2,50A
5672:  BCF    FF2.7
5674:  MOVLW  00
5676:  CALL   06BE
567A:  TBLRD*-
567C:  TBLRD*+
567E:  MOVF   FF5,W
5680:  MOVWF  FEE
5682:  IORLW  00
5684:  BNZ   567C
5686:  MOVLB  5
5688:  BTFSC  x0A.7
568A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
568C:  MOVLW  04
568E:  MOVWF  x0B
5690:  MOVLW  EA
5692:  MOVWF  x0A
5694:  MOVLW  3C
5696:  MOVWF  x0C
5698:  MOVLW  2A
569A:  MOVWF  x0D
569C:  MOVLW  02
569E:  MOVWF  x0E
56A0:  MOVWF  x0F
56A2:  MOVLB  0
56A4:  CALL   16E2
....................           
....................          visual=0; 
56A8:  MOVLB  4
56AA:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
56AC:  BSF    F92.0
56AE:  BTFSS  F80.0
56B0:  BRA    56EE
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
56B2:  MOVLW  01
56B4:  SUBWF  xA3,W
56B6:  CLRF   03
56B8:  ADDLW  CB
56BA:  MOVWF  FE9
56BC:  MOVLW  04
56BE:  ADDWFC 03,W
56C0:  MOVWF  FEA
56C2:  BTFSC  FEF.7
56C4:  BRA    56CC
56C6:  MOVF   FEF,W
56C8:  SUBLW  08
56CA:  BNC   56EE
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
56CC:  MOVLW  1E
56CE:  MOVLB  5
56D0:  MOVWF  x0B
56D2:  MOVLB  0
56D4:  CALL   104A
56D8:  MOVLW  01
56DA:  MOVLB  4
56DC:  SUBWF  xA3,W
56DE:  CLRF   03
56E0:  ADDLW  CB
56E2:  MOVWF  FE9
56E4:  MOVLW  04
56E6:  ADDWFC 03,W
56E8:  MOVWF  FEA
56EA:  INCF   FEF,F
56EC:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
56EE:  BSF    F92.1
56F0:  BTFSS  F80.1
56F2:  BRA    5730
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
56F4:  MOVLW  01
56F6:  SUBWF  xA3,W
56F8:  CLRF   03
56FA:  ADDLW  CB
56FC:  MOVWF  FE9
56FE:  MOVLW  04
5700:  ADDWFC 03,W
5702:  MOVWF  FEA
5704:  BTFSC  FEF.7
5706:  BRA    5730
5708:  MOVF   FEF,W
570A:  SUBLW  00
570C:  BC    5730
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
570E:  MOVLW  1E
5710:  MOVLB  5
5712:  MOVWF  x0B
5714:  MOVLB  0
5716:  CALL   104A
571A:  MOVLW  01
571C:  MOVLB  4
571E:  SUBWF  xA3,W
5720:  CLRF   03
5722:  ADDLW  CB
5724:  MOVWF  FE9
5726:  MOVLW  04
5728:  ADDWFC 03,W
572A:  MOVWF  FEA
572C:  DECF   FEF,F
572E:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5730:  BSF    F92.2
5732:  BTFSS  F80.2
5734:  BRA    5748
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5736:  MOVLW  1E
5738:  MOVLB  5
573A:  MOVWF  x0B
573C:  MOVLB  0
573E:  CALL   104A
5742:  MOVLB  4
5744:  DECF   xA3,F
5746:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5748:  BSF    F92.3
574A:  BTFSS  F80.3
574C:  BRA    581E
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
574E:  MOVLW  04
5750:  MOVLB  5
5752:  MOVWF  x0A
5754:  MOVLW  AF
5756:  MOVWF  x0B
5758:  MOVLB  0
575A:  CALL   104A
575E:  MOVLB  5
5760:  DECFSZ x0A,F
5762:  BRA    5754
5764:  MOVLW  08
5766:  MOVLB  4
5768:  MOVWF  xA2
576A:  MOVLB  5
576C:  CLRF   x0B
576E:  MOVLB  0
5770:  CALL   10B4
5774:  MOVLW  01
5776:  MOVLB  4
5778:  MOVWF  xAC
577A:  BSF    x95.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
577C:  CLRF   FA9
577E:  MOVFF  4CB,FA8
5782:  BCF    FA6.6
5784:  BCF    FA6.7
5786:  BSF    FA6.2
5788:  MOVF   FF2,W
578A:  MOVWF  00
578C:  BCF    FF2.7
578E:  MOVLB  F
5790:  MOVLW  55
5792:  MOVWF  FA7
5794:  MOVLW  AA
5796:  MOVWF  FA7
5798:  BSF    FA6.1
579A:  BTFSC  FA6.1
579C:  BRA    579A
579E:  BCF    FA6.2
57A0:  MOVF   00,W
57A2:  IORWF  FF2,F
57A4:  MOVLW  01
57A6:  MOVWF  FA9
57A8:  MOVFF  4CC,FA8
57AC:  BCF    FA6.6
57AE:  BCF    FA6.7
57B0:  BSF    FA6.2
57B2:  MOVF   FF2,W
57B4:  MOVWF  00
57B6:  BCF    FF2.7
57B8:  MOVLW  55
57BA:  MOVWF  FA7
57BC:  MOVLW  AA
57BE:  MOVWF  FA7
57C0:  BSF    FA6.1
57C2:  BTFSC  FA6.1
57C4:  BRA    57C2
57C6:  BCF    FA6.2
57C8:  MOVF   00,W
57CA:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
57CC:  MOVLW  02
57CE:  MOVWF  FA9
57D0:  MOVFF  4CD,FA8
57D4:  BCF    FA6.6
57D6:  BCF    FA6.7
57D8:  BSF    FA6.2
57DA:  MOVFF  FF2,00
57DE:  BCF    FF2.7
57E0:  MOVLW  55
57E2:  MOVWF  FA7
57E4:  MOVLW  AA
57E6:  MOVWF  FA7
57E8:  BSF    FA6.1
57EA:  BTFSC  FA6.1
57EC:  BRA    57EA
57EE:  BCF    FA6.2
57F0:  MOVF   00,W
57F2:  IORWF  FF2,F
57F4:  MOVLW  03
57F6:  MOVWF  FA9
57F8:  MOVFF  4CE,FA8
57FC:  BCF    FA6.6
57FE:  BCF    FA6.7
5800:  BSF    FA6.2
5802:  MOVFF  FF2,00
5806:  BCF    FF2.7
5808:  MOVLW  55
580A:  MOVWF  FA7
580C:  MOVLW  AA
580E:  MOVWF  FA7
5810:  BSF    FA6.1
5812:  BTFSC  FA6.1
5814:  BRA    5812
5816:  BCF    FA6.2
5818:  MOVF   00,W
581A:  IORWF  FF2,F
581C:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
581E:  MOVF   xA2,W
5820:  SUBLW  0C
5822:  BTFSS  FD8.2
5824:  BRA    5B28
....................       
....................       if(visual==1) 
5826:  BTFSS  x95.4
5828:  BRA    59B4
....................       { 
....................          if(unidad<1) 
582A:  MOVF   xA3,F
582C:  BNZ   5832
....................          {unidad=4;} 
582E:  MOVLW  04
5830:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra," Secado"); 
5832:  MOVLW  04
5834:  MOVWF  FEA
5836:  MOVLW  EA
5838:  MOVWF  FE9
583A:  MOVFF  FF2,50A
583E:  BCF    FF2.7
5840:  MOVLW  00
5842:  MOVLB  0
5844:  CALL   0CB8
5848:  TBLRD*-
584A:  TBLRD*+
584C:  MOVF   FF5,W
584E:  MOVWF  FEE
5850:  IORLW  00
5852:  BNZ   584A
5854:  MOVLB  5
5856:  BTFSC  x0A.7
5858:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
585A:  MOVLW  04
585C:  MOVWF  x0B
585E:  MOVLW  EA
5860:  MOVWF  x0A
5862:  CLRF   x0C
5864:  CLRF   x0D
5866:  MOVLW  01
5868:  MOVWF  x0E
586A:  MOVLW  02
586C:  MOVWF  x0F
586E:  MOVLB  0
5870:  CALL   16E2
....................           
....................          if(unidad==4) 
5874:  MOVLB  4
5876:  MOVF   xA3,W
5878:  SUBLW  04
587A:  BNZ   589A
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
587C:  MOVFF  4D6,50B
5880:  MOVLW  14
5882:  MOVLB  5
5884:  MOVWF  x0C
5886:  MOVLW  28
5888:  MOVWF  x0D
588A:  MOVLW  01
588C:  MOVWF  x0E
588E:  MOVLW  02
5890:  MOVWF  x0F
5892:  MOVLB  0
5894:  CALL   24E2
....................          else 
5898:  BRA    58B4
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
589A:  MOVFF  4D6,50B
589E:  MOVLW  14
58A0:  MOVLB  5
58A2:  MOVWF  x0C
58A4:  MOVLW  28
58A6:  MOVWF  x0D
58A8:  CLRF   x0E
58AA:  MOVLW  02
58AC:  MOVWF  x0F
58AE:  MOVLB  0
58B0:  CALL   24E2
....................           
....................          if(unidad==3) 
58B4:  MOVLB  4
58B6:  MOVF   xA3,W
58B8:  SUBLW  03
58BA:  BNZ   58D8
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
58BC:  MOVFF  4D5,50B
58C0:  MOVLW  28
58C2:  MOVLB  5
58C4:  MOVWF  x0C
58C6:  MOVWF  x0D
58C8:  MOVLW  01
58CA:  MOVWF  x0E
58CC:  MOVLW  02
58CE:  MOVWF  x0F
58D0:  MOVLB  0
58D2:  CALL   24E2
....................          else 
58D6:  BRA    58F0
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
58D8:  MOVFF  4D5,50B
58DC:  MOVLW  28
58DE:  MOVLB  5
58E0:  MOVWF  x0C
58E2:  MOVWF  x0D
58E4:  CLRF   x0E
58E6:  MOVLW  02
58E8:  MOVWF  x0F
58EA:  MOVLB  0
58EC:  CALL   24E2
....................           
....................          if(unidad==2) 
58F0:  MOVLB  4
58F2:  MOVF   xA3,W
58F4:  SUBLW  02
58F6:  BNZ   5916
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
58F8:  MOVFF  4D4,50B
58FC:  MOVLW  46
58FE:  MOVLB  5
5900:  MOVWF  x0C
5902:  MOVLW  28
5904:  MOVWF  x0D
5906:  MOVLW  01
5908:  MOVWF  x0E
590A:  MOVLW  02
590C:  MOVWF  x0F
590E:  MOVLB  0
5910:  CALL   24E2
....................          else 
5914:  BRA    5930
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
5916:  MOVFF  4D4,50B
591A:  MOVLW  46
591C:  MOVLB  5
591E:  MOVWF  x0C
5920:  MOVLW  28
5922:  MOVWF  x0D
5924:  CLRF   x0E
5926:  MOVLW  02
5928:  MOVWF  x0F
592A:  MOVLB  0
592C:  CALL   24E2
....................           
....................          if(unidad==1) 
5930:  MOVLB  4
5932:  DECFSZ xA3,W
5934:  BRA    5954
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
5936:  MOVFF  4D3,50B
593A:  MOVLW  5A
593C:  MOVLB  5
593E:  MOVWF  x0C
5940:  MOVLW  28
5942:  MOVWF  x0D
5944:  MOVLW  01
5946:  MOVWF  x0E
5948:  MOVLW  02
594A:  MOVWF  x0F
594C:  MOVLB  0
594E:  CALL   24E2
....................          else 
5952:  BRA    596E
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
5954:  MOVFF  4D3,50B
5958:  MOVLW  5A
595A:  MOVLB  5
595C:  MOVWF  x0C
595E:  MOVLW  28
5960:  MOVWF  x0D
5962:  CLRF   x0E
5964:  MOVLW  02
5966:  MOVWF  x0F
5968:  MOVLB  0
596A:  CALL   24E2
....................           
....................          strcpy(Menus.Letra,":"); 
596E:  MOVLW  04
5970:  MOVWF  FEA
5972:  MOVLW  EA
5974:  MOVWF  FE9
5976:  MOVFF  FF2,50A
597A:  BCF    FF2.7
597C:  MOVLW  00
597E:  CALL   06BE
5982:  TBLRD*-
5984:  TBLRD*+
5986:  MOVF   FF5,W
5988:  MOVWF  FEE
598A:  IORLW  00
598C:  BNZ   5984
598E:  MOVLB  5
5990:  BTFSC  x0A.7
5992:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
5994:  MOVLW  04
5996:  MOVWF  x0B
5998:  MOVLW  EA
599A:  MOVWF  x0A
599C:  MOVLW  3C
599E:  MOVWF  x0C
59A0:  MOVLW  2A
59A2:  MOVWF  x0D
59A4:  MOVLW  02
59A6:  MOVWF  x0E
59A8:  MOVWF  x0F
59AA:  MOVLB  0
59AC:  CALL   16E2
....................           
....................          visual=0; 
59B0:  MOVLB  4
59B2:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
59B4:  BSF    F92.0
59B6:  BTFSS  F80.0
59B8:  BRA    59F6
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
59BA:  MOVLW  01
59BC:  SUBWF  xA3,W
59BE:  CLRF   03
59C0:  ADDLW  D3
59C2:  MOVWF  FE9
59C4:  MOVLW  04
59C6:  ADDWFC 03,W
59C8:  MOVWF  FEA
59CA:  BTFSC  FEF.7
59CC:  BRA    59D4
59CE:  MOVF   FEF,W
59D0:  SUBLW  08
59D2:  BNC   59F6
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
59D4:  MOVLW  1E
59D6:  MOVLB  5
59D8:  MOVWF  x0B
59DA:  MOVLB  0
59DC:  CALL   104A
59E0:  MOVLW  01
59E2:  MOVLB  4
59E4:  SUBWF  xA3,W
59E6:  CLRF   03
59E8:  ADDLW  D3
59EA:  MOVWF  FE9
59EC:  MOVLW  04
59EE:  ADDWFC 03,W
59F0:  MOVWF  FEA
59F2:  INCF   FEF,F
59F4:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
59F6:  BSF    F92.1
59F8:  BTFSS  F80.1
59FA:  BRA    5A38
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
59FC:  MOVLW  01
59FE:  SUBWF  xA3,W
5A00:  CLRF   03
5A02:  ADDLW  D3
5A04:  MOVWF  FE9
5A06:  MOVLW  04
5A08:  ADDWFC 03,W
5A0A:  MOVWF  FEA
5A0C:  BTFSC  FEF.7
5A0E:  BRA    5A38
5A10:  MOVF   FEF,W
5A12:  SUBLW  00
5A14:  BC    5A38
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
5A16:  MOVLW  1E
5A18:  MOVLB  5
5A1A:  MOVWF  x0B
5A1C:  MOVLB  0
5A1E:  CALL   104A
5A22:  MOVLW  01
5A24:  MOVLB  4
5A26:  SUBWF  xA3,W
5A28:  CLRF   03
5A2A:  ADDLW  D3
5A2C:  MOVWF  FE9
5A2E:  MOVLW  04
5A30:  ADDWFC 03,W
5A32:  MOVWF  FEA
5A34:  DECF   FEF,F
5A36:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5A38:  BSF    F92.2
5A3A:  BTFSS  F80.2
5A3C:  BRA    5A50
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5A3E:  MOVLW  1E
5A40:  MOVLB  5
5A42:  MOVWF  x0B
5A44:  MOVLB  0
5A46:  CALL   104A
5A4A:  MOVLB  4
5A4C:  DECF   xA3,F
5A4E:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5A50:  BSF    F92.3
5A52:  BTFSS  F80.3
5A54:  BRA    5B28
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5A56:  MOVLW  04
5A58:  MOVLB  5
5A5A:  MOVWF  x0A
5A5C:  MOVLW  AF
5A5E:  MOVWF  x0B
5A60:  MOVLB  0
5A62:  CALL   104A
5A66:  MOVLB  5
5A68:  DECFSZ x0A,F
5A6A:  BRA    5A5C
5A6C:  MOVLW  08
5A6E:  MOVLB  4
5A70:  MOVWF  xA2
5A72:  MOVLB  5
5A74:  CLRF   x0B
5A76:  MOVLB  0
5A78:  CALL   10B4
5A7C:  MOVLW  01
5A7E:  MOVLB  4
5A80:  MOVWF  xAC
5A82:  BSF    x95.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
5A84:  MOVLW  04
5A86:  MOVWF  FA9
5A88:  MOVFF  4D3,FA8
5A8C:  BCF    FA6.6
5A8E:  BCF    FA6.7
5A90:  BSF    FA6.2
5A92:  MOVF   FF2,W
5A94:  MOVWF  00
5A96:  BCF    FF2.7
5A98:  MOVLB  F
5A9A:  MOVLW  55
5A9C:  MOVWF  FA7
5A9E:  MOVLW  AA
5AA0:  MOVWF  FA7
5AA2:  BSF    FA6.1
5AA4:  BTFSC  FA6.1
5AA6:  BRA    5AA4
5AA8:  BCF    FA6.2
5AAA:  MOVF   00,W
5AAC:  IORWF  FF2,F
5AAE:  MOVLW  05
5AB0:  MOVWF  FA9
5AB2:  MOVFF  4D4,FA8
5AB6:  BCF    FA6.6
5AB8:  BCF    FA6.7
5ABA:  BSF    FA6.2
5ABC:  MOVF   FF2,W
5ABE:  MOVWF  00
5AC0:  BCF    FF2.7
5AC2:  MOVLW  55
5AC4:  MOVWF  FA7
5AC6:  MOVLW  AA
5AC8:  MOVWF  FA7
5ACA:  BSF    FA6.1
5ACC:  BTFSC  FA6.1
5ACE:  BRA    5ACC
5AD0:  BCF    FA6.2
5AD2:  MOVF   00,W
5AD4:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
5AD6:  MOVLW  06
5AD8:  MOVWF  FA9
5ADA:  MOVFF  4D5,FA8
5ADE:  BCF    FA6.6
5AE0:  BCF    FA6.7
5AE2:  BSF    FA6.2
5AE4:  MOVFF  FF2,00
5AE8:  BCF    FF2.7
5AEA:  MOVLW  55
5AEC:  MOVWF  FA7
5AEE:  MOVLW  AA
5AF0:  MOVWF  FA7
5AF2:  BSF    FA6.1
5AF4:  BTFSC  FA6.1
5AF6:  BRA    5AF4
5AF8:  BCF    FA6.2
5AFA:  MOVF   00,W
5AFC:  IORWF  FF2,F
5AFE:  MOVLW  07
5B00:  MOVWF  FA9
5B02:  MOVFF  4D6,FA8
5B06:  BCF    FA6.6
5B08:  BCF    FA6.7
5B0A:  BSF    FA6.2
5B0C:  MOVFF  FF2,00
5B10:  BCF    FF2.7
5B12:  MOVLW  55
5B14:  MOVWF  FA7
5B16:  MOVLW  AA
5B18:  MOVWF  FA7
5B1A:  BSF    FA6.1
5B1C:  BTFSC  FA6.1
5B1E:  BRA    5B1C
5B20:  BCF    FA6.2
5B22:  MOVF   00,W
5B24:  IORWF  FF2,F
5B26:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
5B28:  MOVF   xA2,W
5B2A:  SUBLW  0D
5B2C:  BTFSS  FD8.2
5B2E:  BRA    5C66
....................       
....................       if(visual==1) 
5B30:  BTFSS  x95.4
5B32:  BRA    5B9A
....................       { 
....................          glcd_fillScreen(OFF); 
5B34:  MOVLB  5
5B36:  CLRF   x0B
5B38:  MOVLB  0
5B3A:  CALL   10B4
....................          strcpy(Menus.Letra,"Temperatura"); 
5B3E:  MOVLW  04
5B40:  MOVWF  FEA
5B42:  MOVLW  EA
5B44:  MOVWF  FE9
5B46:  MOVFF  FF2,50A
5B4A:  BCF    FF2.7
5B4C:  MOVLW  00
5B4E:  CALL   0BB6
5B52:  TBLRD*-
5B54:  TBLRD*+
5B56:  MOVF   FF5,W
5B58:  MOVWF  FEE
5B5A:  IORLW  00
5B5C:  BNZ   5B54
5B5E:  MOVLB  5
5B60:  BTFSC  x0A.7
5B62:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5B64:  MOVLW  04
5B66:  MOVWF  x0B
5B68:  MOVLW  EA
5B6A:  MOVWF  x0A
5B6C:  CLRF   x0C
5B6E:  CLRF   x0D
5B70:  MOVLW  01
5B72:  MOVWF  x0E
5B74:  MOVLW  02
5B76:  MOVWF  x0F
5B78:  MOVLB  0
5B7A:  CALL   16E2
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
5B7E:  MOVFF  4A9,50B
5B82:  MOVLW  1E
5B84:  MOVLB  5
5B86:  MOVWF  x0C
5B88:  MOVWF  x0D
5B8A:  CLRF   x0E
5B8C:  MOVLW  03
5B8E:  MOVWF  x0F
5B90:  MOVLB  0
5B92:  CALL   24E2
....................           
....................          visual=0; 
5B96:  MOVLB  4
5B98:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
5B9A:  BSF    F92.0
5B9C:  BTFSS  F80.0
5B9E:  BRA    5BD2
....................          {   
....................             if(Setpoint<134) 
5BA0:  MOVF   xA9,W
5BA2:  SUBLW  85
5BA4:  BNC   5BD2
....................             { 
....................                if(Setpoint<100) 
5BA6:  MOVF   xA9,W
5BA8:  SUBLW  63
5BAA:  BNC   5BC0
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
5BAC:  MOVLW  64
5BAE:  MOVWF  xA9
5BB0:  MOVLB  5
5BB2:  MOVWF  x0B
5BB4:  MOVLB  0
5BB6:  CALL   104A
5BBA:  MOVLB  4
5BBC:  BSF    x95.4
....................                } 
....................                else 
5BBE:  BRA    5BD2
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
5BC0:  MOVLW  1E
5BC2:  MOVLB  5
5BC4:  MOVWF  x0B
5BC6:  MOVLB  0
5BC8:  CALL   104A
5BCC:  MOVLB  4
5BCE:  INCF   xA9,F
5BD0:  BSF    x95.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5BD2:  BSF    F92.1
5BD4:  BTFSS  F80.1
5BD6:  BRA    5BF0
....................          {   
....................             if(Setpoint>105) 
5BD8:  MOVF   xA9,W
5BDA:  SUBLW  69
5BDC:  BC    5BF0
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
5BDE:  MOVLW  1E
5BE0:  MOVLB  5
5BE2:  MOVWF  x0B
5BE4:  MOVLB  0
5BE6:  CALL   104A
5BEA:  MOVLB  4
5BEC:  DECF   xA9,F
5BEE:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5BF0:  BSF    F92.2
5BF2:  BTFSS  F80.2
5BF4:  BRA    5C06
....................          {   
....................             delay_ms(30);visual=1; 
5BF6:  MOVLW  1E
5BF8:  MOVLB  5
5BFA:  MOVWF  x0B
5BFC:  MOVLB  0
5BFE:  CALL   104A
5C02:  MOVLB  4
5C04:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5C06:  BSF    F92.3
5C08:  BTFSS  F80.3
5C0A:  BRA    5C66
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5C0C:  MOVLW  04
5C0E:  MOVLB  5
5C10:  MOVWF  x0A
5C12:  MOVLW  AF
5C14:  MOVWF  x0B
5C16:  MOVLB  0
5C18:  CALL   104A
5C1C:  MOVLB  5
5C1E:  DECFSZ x0A,F
5C20:  BRA    5C12
5C22:  MOVLW  08
5C24:  MOVLB  4
5C26:  MOVWF  xA2
5C28:  MOVLB  5
5C2A:  CLRF   x0B
5C2C:  MOVLB  0
5C2E:  CALL   10B4
5C32:  MOVLW  01
5C34:  MOVLB  4
5C36:  MOVWF  xAC
5C38:  BSF    x95.4
....................             write_eeprom(8,Setpoint); 
5C3A:  MOVLW  08
5C3C:  MOVWF  FA9
5C3E:  MOVFF  4A9,FA8
5C42:  BCF    FA6.6
5C44:  BCF    FA6.7
5C46:  BSF    FA6.2
5C48:  MOVF   FF2,W
5C4A:  MOVWF  00
5C4C:  BCF    FF2.7
5C4E:  MOVLB  F
5C50:  MOVLW  55
5C52:  MOVWF  FA7
5C54:  MOVLW  AA
5C56:  MOVWF  FA7
5C58:  BSF    FA6.1
5C5A:  BTFSC  FA6.1
5C5C:  BRA    5C5A
5C5E:  BCF    FA6.2
5C60:  MOVF   00,W
5C62:  IORWF  FF2,F
5C64:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
5C66:  MOVF   xA2,W
5C68:  SUBLW  0E
5C6A:  BTFSS  FD8.2
5C6C:  BRA    5F5C
....................       if(Nivel>6) 
5C6E:  MOVF   xBA,F
5C70:  BNZ   5C78
5C72:  MOVF   xB9,W
5C74:  SUBLW  06
5C76:  BC    5C7E
....................          Nivel=6; 
5C78:  CLRF   xBA
5C7A:  MOVLW  06
5C7C:  MOVWF  xB9
....................           
....................       if(visual==1) 
5C7E:  BTFSS  x95.4
5C80:  BRA    5CE2
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
5C82:  MOVLW  04
5C84:  MOVWF  FEA
5C86:  MOVLW  EA
5C88:  MOVWF  FE9
5C8A:  MOVFF  FF2,50A
5C8E:  BCF    FF2.7
5C90:  MOVLW  00
5C92:  MOVLB  0
5C94:  CALL   0CDA
5C98:  TBLRD*-
5C9A:  TBLRD*+
5C9C:  MOVF   FF5,W
5C9E:  MOVWF  FEE
5CA0:  IORLW  00
5CA2:  BNZ   5C9A
5CA4:  MOVLB  5
5CA6:  BTFSC  x0A.7
5CA8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5CAA:  MOVLW  04
5CAC:  MOVWF  x0B
5CAE:  MOVLW  EA
5CB0:  MOVWF  x0A
5CB2:  CLRF   x0C
5CB4:  CLRF   x0D
5CB6:  MOVLW  01
5CB8:  MOVWF  x0E
5CBA:  MOVLW  02
5CBC:  MOVWF  x0F
5CBE:  MOVLB  0
5CC0:  CALL   16E2
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
5CC4:  MOVFF  4B9,50B
5CC8:  MOVLW  32
5CCA:  MOVLB  5
5CCC:  MOVWF  x0C
5CCE:  MOVLW  28
5CD0:  MOVWF  x0D
5CD2:  CLRF   x0E
5CD4:  MOVLW  02
5CD6:  MOVWF  x0F
5CD8:  MOVLB  0
5CDA:  CALL   24E2
....................           
....................          visual=0; 
5CDE:  MOVLB  4
5CE0:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5CE2:  BSF    F92.0
5CE4:  BTFSS  F80.0
5CE6:  BRA    5D08
....................          {   
....................             if(Nivel<6) 
5CE8:  MOVF   xBA,F
5CEA:  BNZ   5D08
5CEC:  MOVF   xB9,W
5CEE:  SUBLW  05
5CF0:  BNC   5D08
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
5CF2:  MOVLW  1E
5CF4:  MOVLB  5
5CF6:  MOVWF  x0B
5CF8:  MOVLB  0
5CFA:  CALL   104A
5CFE:  MOVLB  4
5D00:  INCF   xB9,F
5D02:  BTFSC  FD8.2
5D04:  INCF   xBA,F
5D06:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5D08:  BSF    F92.1
5D0A:  BTFSS  F80.1
5D0C:  BRA    5D30
....................          {   
....................             if(Nivel>1) 
5D0E:  MOVF   xBA,F
5D10:  BNZ   5D18
5D12:  MOVF   xB9,W
5D14:  SUBLW  01
5D16:  BC    5D30
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
5D18:  MOVLW  1E
5D1A:  MOVLB  5
5D1C:  MOVWF  x0B
5D1E:  MOVLB  0
5D20:  CALL   104A
5D24:  MOVLB  4
5D26:  MOVF   xB9,W
5D28:  BTFSC  FD8.2
5D2A:  DECF   xBA,F
5D2C:  DECF   xB9,F
5D2E:  BSF    x95.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
5D30:  BTFSS  x95.5
5D32:  BRA    5EEC
....................          { 
....................             if(RIGHT)//Si oprime SET 
5D34:  BSF    F92.2
5D36:  BTFSS  F80.2
5D38:  BRA    5EEA
....................             {   
....................                write_eeprom(9,Nivel); 
5D3A:  MOVLW  09
5D3C:  MOVWF  FA9
5D3E:  MOVFF  4B9,FA8
5D42:  BCF    FA6.6
5D44:  BCF    FA6.7
5D46:  BSF    FA6.2
5D48:  MOVF   FF2,W
5D4A:  MOVWF  00
5D4C:  BCF    FF2.7
5D4E:  MOVLB  F
5D50:  MOVLW  55
5D52:  MOVWF  FA7
5D54:  MOVLW  AA
5D56:  MOVWF  FA7
5D58:  BSF    FA6.1
5D5A:  BTFSC  FA6.1
5D5C:  BRA    5D5A
5D5E:  BCF    FA6.2
5D60:  MOVF   00,W
5D62:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5D64:  MOVLW  14
5D66:  MOVLB  4
5D68:  MOVWF  xA2
5D6A:  MOVLW  0F
5D6C:  MOVLB  5
5D6E:  MOVWF  x20
5D70:  MOVLW  12
5D72:  MOVWF  x21
5D74:  MOVLW  1E
5D76:  MOVWF  x22
5D78:  MOVLW  35
5D7A:  MOVWF  x23
5D7C:  CLRF   x24
5D7E:  MOVLW  01
5D80:  MOVWF  x25
5D82:  MOVLB  0
5D84:  CALL   1620
5D88:  MOVLB  4
5D8A:  CLRF   xAE
5D8C:  MOVLW  C0
5D8E:  IORWF  FF2,F
5D90:  MOVLB  5
5D92:  CLRF   x0B
5D94:  MOVLB  0
5D96:  CALL   10B4
....................                strcpy(Menus.Letra,"Calentando"); 
5D9A:  MOVLW  04
5D9C:  MOVWF  FEA
5D9E:  MOVLW  EA
5DA0:  MOVWF  FE9
5DA2:  MOVFF  FF2,50A
5DA6:  BCF    FF2.7
5DA8:  MOVLW  00
5DAA:  CALL   09B2
5DAE:  TBLRD*-
5DB0:  TBLRD*+
5DB2:  MOVF   FF5,W
5DB4:  MOVWF  FEE
5DB6:  IORLW  00
5DB8:  BNZ   5DB0
5DBA:  MOVLB  5
5DBC:  BTFSC  x0A.7
5DBE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
5DC0:  MOVLW  04
5DC2:  MOVWF  x0B
5DC4:  MOVLW  EA
5DC6:  MOVWF  x0A
5DC8:  CLRF   x0C
5DCA:  MOVLW  37
5DCC:  MOVWF  x0D
5DCE:  MOVLW  02
5DD0:  MOVWF  x0E
5DD2:  MOVLW  01
5DD4:  MOVWF  x0F
5DD6:  MOVLB  0
5DD8:  CALL   16E2
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
5DDC:  MOVLW  0F
5DDE:  MOVLB  5
5DE0:  MOVWF  x20
5DE2:  MOVLW  12
5DE4:  MOVWF  x21
5DE6:  MOVLW  1E
5DE8:  MOVWF  x22
5DEA:  MOVLW  35
5DEC:  MOVWF  x23
5DEE:  CLRF   x24
5DF0:  MOVLW  01
5DF2:  MOVWF  x25
5DF4:  MOVLB  0
5DF6:  CALL   1620
....................                glcd_imagen(5); 
5DFA:  MOVLW  05
5DFC:  MOVLB  5
5DFE:  MOVWF  x0A
5E00:  MOVLB  0
5E02:  CALL   2136
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5E06:  MOVLW  04
5E08:  MOVWF  FEA
5E0A:  MOVLW  EA
5E0C:  MOVWF  FE9
5E0E:  MOVFF  FF2,50A
5E12:  BCF    FF2.7
5E14:  MOVLW  00
5E16:  CALL   09D8
5E1A:  TBLRD*-
5E1C:  TBLRD*+
5E1E:  MOVF   FF5,W
5E20:  MOVWF  FEE
5E22:  IORLW  00
5E24:  BNZ   5E1C
5E26:  MOVLB  5
5E28:  BTFSC  x0A.7
5E2A:  BSF    FF2.7
5E2C:  MOVLW  04
5E2E:  MOVWF  x0B
5E30:  MOVLW  EA
5E32:  MOVWF  x0A
5E34:  CLRF   x0C
5E36:  CLRF   x0D
5E38:  MOVLW  02
5E3A:  MOVWF  x0E
5E3C:  MOVLW  01
5E3E:  MOVWF  x0F
5E40:  MOVLB  0
5E42:  CALL   16E2
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5E46:  MOVLW  04
5E48:  MOVWF  FEA
5E4A:  MOVLW  EA
5E4C:  MOVWF  FE9
5E4E:  MOVFF  FF2,50A
5E52:  BCF    FF2.7
5E54:  MOVLW  00
5E56:  CALL   09FA
5E5A:  TBLRD*-
5E5C:  TBLRD*+
5E5E:  MOVF   FF5,W
5E60:  MOVWF  FEE
5E62:  IORLW  00
5E64:  BNZ   5E5C
5E66:  MOVLB  5
5E68:  BTFSC  x0A.7
5E6A:  BSF    FF2.7
5E6C:  MOVLW  04
5E6E:  MOVWF  x0B
5E70:  MOVLW  EA
5E72:  MOVWF  x0A
5E74:  CLRF   x0C
5E76:  MOVLW  08
5E78:  MOVWF  x0D
5E7A:  MOVLW  02
5E7C:  MOVWF  x0E
5E7E:  MOVLW  01
5E80:  MOVWF  x0F
5E82:  MOVLB  0
5E84:  CALL   16E2
....................                glcd_circle(95,40,2,NO,ON); 
5E88:  MOVLW  5F
5E8A:  MOVLB  5
5E8C:  MOVWF  x0A
5E8E:  MOVLW  28
5E90:  MOVWF  x0B
5E92:  MOVLW  02
5E94:  MOVWF  x0C
5E96:  CLRF   x0D
5E98:  MOVLW  01
5E9A:  MOVWF  x0E
5E9C:  MOVLB  0
5E9E:  CALL   2232
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5EA2:  MOVLW  04
5EA4:  MOVWF  FEA
5EA6:  MOVLW  EA
5EA8:  MOVWF  FE9
5EAA:  MOVFF  FF2,50A
5EAE:  BCF    FF2.7
5EB0:  MOVLW  00
5EB2:  CALL   0A1C
5EB6:  TBLRD*-
5EB8:  TBLRD*+
5EBA:  MOVF   FF5,W
5EBC:  MOVWF  FEE
5EBE:  IORLW  00
5EC0:  BNZ   5EB8
5EC2:  MOVLB  5
5EC4:  BTFSC  x0A.7
5EC6:  BSF    FF2.7
5EC8:  MOVLW  04
5ECA:  MOVWF  x0B
5ECC:  MOVLW  EA
5ECE:  MOVWF  x0A
5ED0:  MOVLW  66
5ED2:  MOVWF  x0C
5ED4:  MOVLW  28
5ED6:  MOVWF  x0D
5ED8:  MOVLW  02
5EDA:  MOVWF  x0E
5EDC:  MOVWF  x0F
5EDE:  MOVLB  0
5EE0:  CALL   16E2
....................                MuestraTiemposProgramados(); 
5EE4:  CALL   2632
5EE8:  MOVLB  4
....................             }       
....................          } 
....................          else 
5EEA:  BRA    5F5C
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5EEC:  BSF    F92.3
5EEE:  BTFSS  F80.3
5EF0:  BRA    5F5C
....................             { 
....................                if(Nivel<6) 
5EF2:  MOVF   xBA,F
5EF4:  BNZ   5F00
5EF6:  MOVF   xB9,W
5EF8:  SUBLW  05
5EFA:  BNC   5F00
....................                { 
....................                   desfoguelento=1; 
5EFC:  BSF    x95.5
....................                } 
....................                else 
5EFE:  BRA    5F02
....................                { 
....................                   desfoguelento=0; 
5F00:  BCF    x95.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5F02:  MOVLW  04
5F04:  MOVLB  5
5F06:  MOVWF  x0A
5F08:  MOVLW  AF
5F0A:  MOVWF  x0B
5F0C:  MOVLB  0
5F0E:  CALL   104A
5F12:  MOVLB  5
5F14:  DECFSZ x0A,F
5F16:  BRA    5F08
5F18:  MOVLW  08
5F1A:  MOVLB  4
5F1C:  MOVWF  xA2
5F1E:  MOVLB  5
5F20:  CLRF   x0B
5F22:  MOVLB  0
5F24:  CALL   10B4
5F28:  MOVLW  01
5F2A:  MOVLB  4
5F2C:  MOVWF  xAC
5F2E:  BSF    x95.4
....................                write_eeprom(9,Nivel); 
5F30:  MOVLW  09
5F32:  MOVWF  FA9
5F34:  MOVFF  4B9,FA8
5F38:  BCF    FA6.6
5F3A:  BCF    FA6.7
5F3C:  BSF    FA6.2
5F3E:  MOVF   FF2,W
5F40:  MOVWF  00
5F42:  BCF    FF2.7
5F44:  MOVLB  F
5F46:  MOVLW  55
5F48:  MOVWF  FA7
5F4A:  MOVLW  AA
5F4C:  MOVWF  FA7
5F4E:  BSF    FA6.1
5F50:  BTFSC  FA6.1
5F52:  BRA    5F50
5F54:  BCF    FA6.2
5F56:  MOVF   00,W
5F58:  IORWF  FF2,F
5F5A:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5F5C:  MOVF   xA2,W
5F5E:  SUBLW  0F
5F60:  BTFSS  FD8.2
5F62:  BRA    6296
....................        
....................       if(visual==1) 
5F64:  BTFSS  x95.4
5F66:  BRA    60CC
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5F68:  MOVLW  04
5F6A:  MOVWF  FEA
5F6C:  MOVLW  EA
5F6E:  MOVWF  FE9
5F70:  MOVFF  FF2,50A
5F74:  BCF    FF2.7
5F76:  MOVLW  00
5F78:  MOVLB  0
5F7A:  CALL   0C08
5F7E:  TBLRD*-
5F80:  TBLRD*+
5F82:  MOVF   FF5,W
5F84:  MOVWF  FEE
5F86:  IORLW  00
5F88:  BNZ   5F80
5F8A:  MOVLB  5
5F8C:  BTFSC  x0A.7
5F8E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5F90:  MOVLW  04
5F92:  MOVWF  x0B
5F94:  MOVLW  EA
5F96:  MOVWF  x0A
5F98:  CLRF   x0C
5F9A:  CLRF   x0D
5F9C:  MOVLW  01
5F9E:  MOVWF  x0E
5FA0:  MOVLW  02
5FA2:  MOVWF  x0F
5FA4:  MOVLB  0
5FA6:  CALL   16E2
....................           
....................          if(Opcion==2) 
5FAA:  MOVLB  4
5FAC:  MOVF   xAC,W
5FAE:  SUBLW  02
5FB0:  BNZ   603C
....................          {strcpy(Menus.Letra,"SI"); 
5FB2:  MOVLW  04
5FB4:  MOVWF  FEA
5FB6:  MOVLW  EA
5FB8:  MOVWF  FE9
5FBA:  MOVFF  FF2,50A
5FBE:  BCF    FF2.7
5FC0:  MOVLW  00
5FC2:  MOVLB  0
5FC4:  CALL   0CFE
5FC8:  TBLRD*-
5FCA:  TBLRD*+
5FCC:  MOVF   FF5,W
5FCE:  MOVWF  FEE
5FD0:  IORLW  00
5FD2:  BNZ   5FCA
5FD4:  MOVLB  5
5FD6:  BTFSC  x0A.7
5FD8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5FDA:  MOVLW  04
5FDC:  MOVWF  x0B
5FDE:  MOVLW  EA
5FE0:  MOVWF  x0A
5FE2:  MOVLW  32
5FE4:  MOVWF  x0C
5FE6:  MOVLW  19
5FE8:  MOVWF  x0D
5FEA:  MOVLW  01
5FEC:  MOVWF  x0E
5FEE:  MOVLW  02
5FF0:  MOVWF  x0F
5FF2:  MOVLB  0
5FF4:  CALL   16E2
....................          strcpy(Menus.Letra,"NO"); 
5FF8:  MOVLW  04
5FFA:  MOVWF  FEA
5FFC:  MOVLW  EA
5FFE:  MOVWF  FE9
6000:  MOVFF  FF2,50A
6004:  BCF    FF2.7
6006:  MOVLW  00
6008:  CALL   0D1C
600C:  TBLRD*-
600E:  TBLRD*+
6010:  MOVF   FF5,W
6012:  MOVWF  FEE
6014:  IORLW  00
6016:  BNZ   600E
6018:  MOVLB  5
601A:  BTFSC  x0A.7
601C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
601E:  MOVLW  04
6020:  MOVWF  x0B
6022:  MOVLW  EA
6024:  MOVWF  x0A
6026:  MOVLW  32
6028:  MOVWF  x0C
602A:  MOVLW  2D
602C:  MOVWF  x0D
602E:  CLRF   x0E
6030:  MOVLW  02
6032:  MOVWF  x0F
6034:  MOVLB  0
6036:  CALL   16E2
603A:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
603C:  DECFSZ xAC,W
603E:  BRA    60CA
....................          {strcpy(Menus.Letra,"SI"); 
6040:  MOVLW  04
6042:  MOVWF  FEA
6044:  MOVLW  EA
6046:  MOVWF  FE9
6048:  MOVFF  FF2,50A
604C:  BCF    FF2.7
604E:  MOVLW  00
6050:  MOVLB  0
6052:  CALL   0CFE
6056:  TBLRD*-
6058:  TBLRD*+
605A:  MOVF   FF5,W
605C:  MOVWF  FEE
605E:  IORLW  00
6060:  BNZ   6058
6062:  MOVLB  5
6064:  BTFSC  x0A.7
6066:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
6068:  MOVLW  04
606A:  MOVWF  x0B
606C:  MOVLW  EA
606E:  MOVWF  x0A
6070:  MOVLW  32
6072:  MOVWF  x0C
6074:  MOVLW  19
6076:  MOVWF  x0D
6078:  CLRF   x0E
607A:  MOVLW  02
607C:  MOVWF  x0F
607E:  MOVLB  0
6080:  CALL   16E2
....................          strcpy(Menus.Letra,"NO"); 
6084:  MOVLW  04
6086:  MOVWF  FEA
6088:  MOVLW  EA
608A:  MOVWF  FE9
608C:  MOVFF  FF2,50A
6090:  BCF    FF2.7
6092:  MOVLW  00
6094:  CALL   0D1C
6098:  TBLRD*-
609A:  TBLRD*+
609C:  MOVF   FF5,W
609E:  MOVWF  FEE
60A0:  IORLW  00
60A2:  BNZ   609A
60A4:  MOVLB  5
60A6:  BTFSC  x0A.7
60A8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
60AA:  MOVLW  04
60AC:  MOVWF  x0B
60AE:  MOVLW  EA
60B0:  MOVWF  x0A
60B2:  MOVLW  32
60B4:  MOVWF  x0C
60B6:  MOVLW  2D
60B8:  MOVWF  x0D
60BA:  MOVLW  01
60BC:  MOVWF  x0E
60BE:  MOVLW  02
60C0:  MOVWF  x0F
60C2:  MOVLB  0
60C4:  CALL   16E2
60C8:  MOVLB  4
....................          } 
....................          visual=0; 
60CA:  BCF    x95.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
60CC:  BSF    F92.0
60CE:  BTFSS  F80.0
60D0:  BRA    60DC
....................       { 
....................          if(Opcion<2) 
60D2:  MOVF   xAC,W
60D4:  SUBLW  01
60D6:  BNC   60DA
....................          { 
....................             Opcion++; 
60D8:  INCF   xAC,F
....................          } 
....................          visual=1; 
60DA:  BSF    x95.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
60DC:  BSF    F92.1
60DE:  BTFSS  F80.1
60E0:  BRA    60EC
....................       {   
....................          if(Opcion>1) 
60E2:  MOVF   xAC,W
60E4:  SUBLW  01
60E6:  BC    60EA
....................          { 
....................             Opcion--; 
60E8:  DECF   xAC,F
....................          }   
....................          visual=1; 
60EA:  BSF    x95.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
60EC:  BSF    F92.2
60EE:  BTFSS  F80.2
60F0:  BRA    6262
....................       {   
....................          if(Opcion==2) 
60F2:  MOVF   xAC,W
60F4:  SUBLW  02
60F6:  BTFSS  FD8.2
60F8:  BRA    6234
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
60FA:  MOVLW  14
60FC:  MOVWF  xA2
60FE:  MOVLW  0F
6100:  MOVLB  5
6102:  MOVWF  x20
6104:  MOVLW  12
6106:  MOVWF  x21
6108:  MOVLW  1E
610A:  MOVWF  x22
610C:  MOVLW  35
610E:  MOVWF  x23
6110:  CLRF   x24
6112:  MOVLW  01
6114:  MOVWF  x25
6116:  MOVLB  0
6118:  CALL   1620
611C:  MOVLB  4
611E:  CLRF   xAE
6120:  MOVLW  C0
6122:  IORWF  FF2,F
6124:  MOVLB  5
6126:  CLRF   x0B
6128:  MOVLB  0
612A:  CALL   10B4
....................             strcpy(Menus.Letra,"Calentando"); 
612E:  MOVLW  04
6130:  MOVWF  FEA
6132:  MOVLW  EA
6134:  MOVWF  FE9
6136:  MOVFF  FF2,50A
613A:  BCF    FF2.7
613C:  MOVLW  00
613E:  CALL   09B2
6142:  TBLRD*-
6144:  TBLRD*+
6146:  MOVF   FF5,W
6148:  MOVWF  FEE
614A:  IORLW  00
614C:  BNZ   6144
614E:  MOVLB  5
6150:  BTFSC  x0A.7
6152:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
6154:  MOVLW  04
6156:  MOVWF  x0B
6158:  MOVLW  EA
615A:  MOVWF  x0A
615C:  CLRF   x0C
615E:  MOVLW  37
6160:  MOVWF  x0D
6162:  MOVLW  02
6164:  MOVWF  x0E
6166:  MOVLW  01
6168:  MOVWF  x0F
616A:  MOVLB  0
616C:  CALL   16E2
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
6170:  MOVLW  0F
6172:  MOVLB  5
6174:  MOVWF  x20
6176:  MOVLW  12
6178:  MOVWF  x21
617A:  MOVLW  1E
617C:  MOVWF  x22
617E:  MOVLW  35
6180:  MOVWF  x23
6182:  CLRF   x24
6184:  MOVLW  01
6186:  MOVWF  x25
6188:  MOVLB  0
618A:  CALL   1620
....................             glcd_imagen(5); 
618E:  MOVLW  05
6190:  MOVLB  5
6192:  MOVWF  x0A
6194:  MOVLB  0
6196:  CALL   2136
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
619A:  MOVLW  04
619C:  MOVWF  FEA
619E:  MOVLW  EA
61A0:  MOVWF  FE9
61A2:  MOVFF  FF2,50A
61A6:  BCF    FF2.7
61A8:  MOVLW  00
61AA:  CALL   09D8
61AE:  TBLRD*-
61B0:  TBLRD*+
61B2:  MOVF   FF5,W
61B4:  MOVWF  FEE
61B6:  IORLW  00
61B8:  BNZ   61B0
61BA:  MOVLB  5
61BC:  BTFSC  x0A.7
61BE:  BSF    FF2.7
61C0:  MOVLW  04
61C2:  MOVWF  x0B
61C4:  MOVLW  EA
61C6:  MOVWF  x0A
61C8:  CLRF   x0C
61CA:  CLRF   x0D
61CC:  MOVLW  02
61CE:  MOVWF  x0E
61D0:  MOVLW  01
61D2:  MOVWF  x0F
61D4:  MOVLB  0
61D6:  CALL   16E2
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
61DA:  MOVLW  04
61DC:  MOVWF  FEA
61DE:  MOVLW  EA
61E0:  MOVWF  FE9
61E2:  MOVFF  FF2,50A
61E6:  BCF    FF2.7
61E8:  MOVLW  00
61EA:  CALL   09FA
61EE:  TBLRD*-
61F0:  TBLRD*+
61F2:  MOVF   FF5,W
61F4:  MOVWF  FEE
61F6:  IORLW  00
61F8:  BNZ   61F0
61FA:  MOVLB  5
61FC:  BTFSC  x0A.7
61FE:  BSF    FF2.7
6200:  MOVLW  04
6202:  MOVWF  x0B
6204:  MOVLW  EA
6206:  MOVWF  x0A
6208:  CLRF   x0C
620A:  MOVLW  08
620C:  MOVWF  x0D
620E:  MOVLW  02
6210:  MOVWF  x0E
6212:  MOVLW  01
6214:  MOVWF  x0F
6216:  MOVLB  0
6218:  CALL   16E2
....................             MuestraTiemposProgramados(); 
621C:  CALL   2632
....................             if(Nivel<6) 
6220:  MOVLB  4
6222:  MOVF   xBA,F
6224:  BNZ   6230
6226:  MOVF   xB9,W
6228:  SUBLW  05
622A:  BNC   6230
....................                { 
....................                   desfoguelento=1; 
622C:  BSF    x95.5
....................                } 
....................                else 
622E:  BRA    6232
....................                { 
....................                   desfoguelento=0; 
6230:  BCF    x95.5
....................                } 
....................          } 
....................          else 
6232:  BRA    6262
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6234:  MOVLW  04
6236:  MOVLB  5
6238:  MOVWF  x0A
623A:  MOVLW  AF
623C:  MOVWF  x0B
623E:  MOVLB  0
6240:  CALL   104A
6244:  MOVLB  5
6246:  DECFSZ x0A,F
6248:  BRA    623A
624A:  MOVLW  08
624C:  MOVLB  4
624E:  MOVWF  xA2
6250:  MOVLB  5
6252:  CLRF   x0B
6254:  MOVLB  0
6256:  CALL   10B4
625A:  MOVLW  01
625C:  MOVLB  4
625E:  MOVWF  xAC
6260:  BSF    x95.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
6262:  BSF    F92.3
6264:  BTFSS  F80.3
6266:  BRA    6296
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6268:  MOVLW  04
626A:  MOVLB  5
626C:  MOVWF  x0A
626E:  MOVLW  AF
6270:  MOVWF  x0B
6272:  MOVLB  0
6274:  CALL   104A
6278:  MOVLB  5
627A:  DECFSZ x0A,F
627C:  BRA    626E
627E:  MOVLW  08
6280:  MOVLB  4
6282:  MOVWF  xA2
6284:  MOVLB  5
6286:  CLRF   x0B
6288:  MOVLB  0
628A:  CALL   10B4
628E:  MOVLW  01
6290:  MOVLB  4
6292:  MOVWF  xAC
6294:  BSF    x95.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
6296:  MOVF   xA2,W
6298:  SUBLW  14
629A:  BTFSS  FD8.2
629C:  GOTO   6EDC
....................     
....................    Lectura_Esclavos(); 
62A0:  MOVLB  0
62A2:  CALL   1F7C
....................     
....................    Envio_Esclavos(); 
62A6:  CALL   20D6
....................    // Nuevo Flujo de Programa con logica 2018 para ajustar ciclos de Pre-Vacio y de Vacio al final del ciclo// 
....................     
....................    if(Alarma>0 || Alarma2>0 || AlarmaAgua>0) 
62AA:  MOVLB  4
62AC:  MOVF   x92,F
62AE:  BNZ   62BA
62B0:  MOVF   x94,F
62B2:  BNZ   62BA
62B4:  MOVF   x93,F
62B6:  BTFSC  FD8.2
62B8:  BRA    6458
....................    { 
....................       if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
62BA:  DECFSZ x92,W
62BC:  BRA    631E
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
62BE:  MOVLB  5
62C0:  CLRF   x20
62C2:  MOVLW  37
62C4:  MOVWF  x21
62C6:  MOVLW  7F
62C8:  MOVWF  x22
62CA:  MOVLW  3F
62CC:  MOVWF  x23
62CE:  MOVLW  01
62D0:  MOVWF  x24
62D2:  CLRF   x25
62D4:  MOVLB  0
62D6:  CALL   1620
....................          strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
62DA:  MOVLW  04
62DC:  MOVWF  FEA
62DE:  MOVLW  EA
62E0:  MOVWF  FE9
62E2:  MOVFF  FF2,50A
62E6:  BCF    FF2.7
62E8:  MOVLW  00
62EA:  CALL   0D3A
62EE:  TBLRD*-
62F0:  TBLRD*+
62F2:  MOVF   FF5,W
62F4:  MOVWF  FEE
62F6:  IORLW  00
62F8:  BNZ   62F0
62FA:  MOVLB  5
62FC:  BTFSC  x0A.7
62FE:  BSF    FF2.7
6300:  MOVLW  04
6302:  MOVWF  x0B
6304:  MOVLW  EA
6306:  MOVWF  x0A
6308:  CLRF   x0C
630A:  MOVLW  37
630C:  MOVWF  x0D
630E:  MOVLW  02
6310:  MOVWF  x0E
6312:  MOVLW  01
6314:  MOVWF  x0F
6316:  MOVLB  0
6318:  CALL   16E2
631C:  MOVLB  4
....................       } 
....................        
....................       if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
631E:  MOVF   x92,W
6320:  SUBLW  02
6322:  BNZ   6388
....................       { 
....................          tiempo_esterilizacion=0;tiempo_secado=0; 
6324:  CLRF   xAD
6326:  CLRF   xAE
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6328:  MOVLB  5
632A:  CLRF   x20
632C:  MOVLW  37
632E:  MOVWF  x21
6330:  MOVLW  7F
6332:  MOVWF  x22
6334:  MOVLW  3F
6336:  MOVWF  x23
6338:  MOVLW  01
633A:  MOVWF  x24
633C:  CLRF   x25
633E:  MOVLB  0
6340:  CALL   1620
....................          strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6344:  MOVLW  04
6346:  MOVWF  FEA
6348:  MOVLW  EA
634A:  MOVWF  FE9
634C:  MOVFF  FF2,50A
6350:  BCF    FF2.7
6352:  MOVLW  00
6354:  CALL   0D60
6358:  TBLRD*-
635A:  TBLRD*+
635C:  MOVF   FF5,W
635E:  MOVWF  FEE
6360:  IORLW  00
6362:  BNZ   635A
6364:  MOVLB  5
6366:  BTFSC  x0A.7
6368:  BSF    FF2.7
636A:  MOVLW  04
636C:  MOVWF  x0B
636E:  MOVLW  EA
6370:  MOVWF  x0A
6372:  CLRF   x0C
6374:  MOVLW  37
6376:  MOVWF  x0D
6378:  MOVLW  02
637A:  MOVWF  x0E
637C:  MOVLW  01
637E:  MOVWF  x0F
6380:  MOVLB  0
6382:  CALL   16E2
6386:  MOVLB  4
....................       } 
....................           
....................       if(Alarma==3) // Alarma de Error de Agua: Error por Bajo Nivel de Agua Durante Funcionamiento 
6388:  MOVF   x92,W
638A:  SUBLW  03
638C:  BNZ   63F2
....................       { 
....................          tiempo_esterilizacion=0;tiempo_secado=0; 
638E:  CLRF   xAD
6390:  CLRF   xAE
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6392:  MOVLB  5
6394:  CLRF   x20
6396:  MOVLW  37
6398:  MOVWF  x21
639A:  MOVLW  7F
639C:  MOVWF  x22
639E:  MOVLW  3F
63A0:  MOVWF  x23
63A2:  MOVLW  01
63A4:  MOVWF  x24
63A6:  CLRF   x25
63A8:  MOVLB  0
63AA:  CALL   1620
....................          strcpy(Menus.Letra,"Error:EA02");displayMenu(Menus.Letra,0,55,2,1);           
63AE:  MOVLW  04
63B0:  MOVWF  FEA
63B2:  MOVLW  EA
63B4:  MOVWF  FE9
63B6:  MOVFF  FF2,50A
63BA:  BCF    FF2.7
63BC:  MOVLW  00
63BE:  CALL   0D86
63C2:  TBLRD*-
63C4:  TBLRD*+
63C6:  MOVF   FF5,W
63C8:  MOVWF  FEE
63CA:  IORLW  00
63CC:  BNZ   63C4
63CE:  MOVLB  5
63D0:  BTFSC  x0A.7
63D2:  BSF    FF2.7
63D4:  MOVLW  04
63D6:  MOVWF  x0B
63D8:  MOVLW  EA
63DA:  MOVWF  x0A
63DC:  CLRF   x0C
63DE:  MOVLW  37
63E0:  MOVWF  x0D
63E2:  MOVLW  02
63E4:  MOVWF  x0E
63E6:  MOVLW  01
63E8:  MOVWF  x0F
63EA:  MOVLB  0
63EC:  CALL   16E2
63F0:  MOVLB  4
....................       } 
....................        
....................       if(AlarmaAgua==1) 
63F2:  DECFSZ x93,W
63F4:  BRA    6456
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
63F6:  MOVLB  5
63F8:  CLRF   x20
63FA:  MOVLW  37
63FC:  MOVWF  x21
63FE:  MOVLW  7F
6400:  MOVWF  x22
6402:  MOVLW  3F
6404:  MOVWF  x23
6406:  MOVLW  01
6408:  MOVWF  x24
640A:  CLRF   x25
640C:  MOVLB  0
640E:  CALL   1620
....................          strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
6412:  MOVLW  04
6414:  MOVWF  FEA
6416:  MOVLW  EA
6418:  MOVWF  FE9
641A:  MOVFF  FF2,50A
641E:  BCF    FF2.7
6420:  MOVLW  00
6422:  CALL   0DAC
6426:  TBLRD*-
6428:  TBLRD*+
642A:  MOVF   FF5,W
642C:  MOVWF  FEE
642E:  IORLW  00
6430:  BNZ   6428
6432:  MOVLB  5
6434:  BTFSC  x0A.7
6436:  BSF    FF2.7
6438:  MOVLW  04
643A:  MOVWF  x0B
643C:  MOVLW  EA
643E:  MOVWF  x0A
6440:  CLRF   x0C
6442:  MOVLW  37
6444:  MOVWF  x0D
6446:  MOVLW  02
6448:  MOVWF  x0E
644A:  MOVLW  01
644C:  MOVWF  x0F
644E:  MOVLB  0
6450:  CALL   16E2
6454:  MOVLB  4
....................       } 
....................           
....................    } 
....................    else 
6456:  BRA    6850
....................    { 
....................       if(Puerta==0) 
6458:  MOVF   x8D,F
645A:  BNZ   64BE
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
645C:  MOVLB  5
645E:  CLRF   x20
6460:  MOVLW  37
6462:  MOVWF  x21
6464:  MOVLW  7F
6466:  MOVWF  x22
6468:  MOVLW  3F
646A:  MOVWF  x23
646C:  MOVLW  01
646E:  MOVWF  x24
6470:  CLRF   x25
6472:  MOVLB  0
6474:  CALL   1620
....................          strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
6478:  MOVLW  04
647A:  MOVWF  FEA
647C:  MOVLW  EA
647E:  MOVWF  FE9
6480:  MOVFF  FF2,50A
6484:  BCF    FF2.7
6486:  MOVLW  00
6488:  CALL   0DD2
648C:  TBLRD*-
648E:  TBLRD*+
6490:  MOVF   FF5,W
6492:  MOVWF  FEE
6494:  IORLW  00
6496:  BNZ   648E
6498:  MOVLB  5
649A:  BTFSC  x0A.7
649C:  BSF    FF2.7
649E:  MOVLW  04
64A0:  MOVWF  x0B
64A2:  MOVLW  EA
64A4:  MOVWF  x0A
64A6:  CLRF   x0C
64A8:  MOVLW  37
64AA:  MOVWF  x0D
64AC:  MOVLW  02
64AE:  MOVWF  x0E
64B0:  MOVLW  01
64B2:  MOVWF  x0F
64B4:  MOVLB  0
64B6:  CALL   16E2
....................       } 
....................       else 
64BA:  BRA    6852
64BC:  MOVLB  4
....................       { 
....................          if(NivelTanque==0) 
64BE:  MOVF   x90,F
64C0:  BNZ   6526
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
64C2:  MOVLB  5
64C4:  CLRF   x20
64C6:  MOVLW  37
64C8:  MOVWF  x21
64CA:  MOVLW  7F
64CC:  MOVWF  x22
64CE:  MOVLW  3F
64D0:  MOVWF  x23
64D2:  MOVLW  01
64D4:  MOVWF  x24
64D6:  CLRF   x25
64D8:  MOVLB  0
64DA:  CALL   1620
....................             strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
64DE:  MOVLW  04
64E0:  MOVWF  FEA
64E2:  MOVLW  EA
64E4:  MOVWF  FE9
64E6:  MOVFF  FF2,50A
64EA:  BCF    FF2.7
64EC:  MOVLW  00
64EE:  CALL   0DFC
64F2:  TBLRD*-
64F4:  TBLRD*+
64F6:  MOVF   FF5,W
64F8:  MOVWF  FEE
64FA:  IORLW  00
64FC:  BNZ   64F4
64FE:  MOVLB  5
6500:  BTFSC  x0A.7
6502:  BSF    FF2.7
6504:  MOVLW  04
6506:  MOVWF  x0B
6508:  MOVLW  EA
650A:  MOVWF  x0A
650C:  CLRF   x0C
650E:  MOVLW  37
6510:  MOVWF  x0D
6512:  MOVLW  02
6514:  MOVWF  x0E
6516:  MOVLW  01
6518:  MOVWF  x0F
651A:  MOVLB  0
651C:  CALL   16E2
....................             Control=0; 
6520:  MOVLB  4
6522:  CLRF   xA0
....................          } 
....................          else 
6524:  BRA    6534
....................          { 
....................             if(Calentar==10 && tiempo_esterilizacion==0) 
6526:  MOVF   xA8,W
6528:  SUBLW  0A
652A:  BNZ   6534
652C:  MOVF   xAD,F
652E:  BNZ   6534
....................             { 
....................                Prevacio=5; 
6530:  MOVLW  05
6532:  MOVWF  xA5
....................             } 
....................          } 
....................           
....................          if(Prevacio==5) 
6534:  MOVF   xA5,W
6536:  SUBLW  05
6538:  BNZ   65B0
....................          { 
....................             Control=0; 
653A:  CLRF   xA0
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
653C:  MOVLB  5
653E:  CLRF   x20
6540:  MOVLW  37
6542:  MOVWF  x21
6544:  MOVLW  7F
6546:  MOVWF  x22
6548:  MOVLW  3F
654A:  MOVWF  x23
654C:  MOVLW  01
654E:  MOVWF  x24
6550:  CLRF   x25
6552:  MOVLB  0
6554:  CALL   1620
....................             strcpy(Menus.Letra,"Pre-Vacio");displayMenu(Menus.Letra,0,55,2,1); 
6558:  MOVLW  04
655A:  MOVWF  FEA
655C:  MOVLW  EA
655E:  MOVWF  FE9
6560:  MOVFF  FF2,50A
6564:  BCF    FF2.7
6566:  MOVLW  00
6568:  CALL   0E20
656C:  TBLRD*-
656E:  TBLRD*+
6570:  MOVF   FF5,W
6572:  MOVWF  FEE
6574:  IORLW  00
6576:  BNZ   656E
6578:  MOVLB  5
657A:  BTFSC  x0A.7
657C:  BSF    FF2.7
657E:  MOVLW  04
6580:  MOVWF  x0B
6582:  MOVLW  EA
6584:  MOVWF  x0A
6586:  CLRF   x0C
6588:  MOVLW  37
658A:  MOVWF  x0D
658C:  MOVLW  02
658E:  MOVWF  x0E
6590:  MOVLW  01
6592:  MOVWF  x0F
6594:  MOVLB  0
6596:  CALL   16E2
....................             BombaVacio=5; 
659A:  MOVLW  05
659C:  MOVLB  4
659E:  MOVWF  x9E
....................             if(flagprevacio==5) 
65A0:  MOVF   xA6,W
65A2:  SUBLW  05
65A4:  BNZ   65B0
....................             { 
....................                Prevacio=10;BombaVacio=10;Calentar=5; 
65A6:  MOVLW  0A
65A8:  MOVWF  xA5
65AA:  MOVWF  x9E
65AC:  MOVLW  05
65AE:  MOVWF  xA8
....................             } 
....................          } 
....................           
....................          if(Calentar==5) 
65B0:  MOVF   xA8,W
65B2:  SUBLW  05
65B4:  BTFSS  FD8.2
65B6:  BRA    66B0
....................          { 
....................             Control=1; 
65B8:  MOVLW  01
65BA:  MOVWF  xA0
....................             if(tiempo_esterilizacion==0) 
65BC:  MOVF   xAD,F
65BE:  BNZ   6644
....................             { 
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
65C0:  MOVLW  0F
65C2:  MOVLB  5
65C4:  MOVWF  x20
65C6:  MOVLW  12
65C8:  MOVWF  x21
65CA:  MOVLW  1E
65CC:  MOVWF  x22
65CE:  MOVLW  35
65D0:  MOVWF  x23
65D2:  CLRF   x24
65D4:  MOVLW  01
65D6:  MOVWF  x25
65D8:  MOVLB  0
65DA:  CALL   1620
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
65DE:  MOVLB  5
65E0:  CLRF   x20
65E2:  MOVLW  37
65E4:  MOVWF  x21
65E6:  MOVLW  7F
65E8:  MOVWF  x22
65EA:  MOVLW  3F
65EC:  MOVWF  x23
65EE:  MOVLW  01
65F0:  MOVWF  x24
65F2:  CLRF   x25
65F4:  MOVLB  0
65F6:  CALL   1620
....................                strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
65FA:  MOVLW  04
65FC:  MOVWF  FEA
65FE:  MOVLW  EA
6600:  MOVWF  FE9
6602:  MOVFF  FF2,50A
6606:  BCF    FF2.7
6608:  MOVLW  00
660A:  CALL   09B2
660E:  TBLRD*-
6610:  TBLRD*+
6612:  MOVF   FF5,W
6614:  MOVWF  FEE
6616:  IORLW  00
6618:  BNZ   6610
661A:  MOVLB  5
661C:  BTFSC  x0A.7
661E:  BSF    FF2.7
6620:  MOVLW  04
6622:  MOVWF  x0B
6624:  MOVLW  EA
6626:  MOVWF  x0A
6628:  CLRF   x0C
662A:  MOVLW  37
662C:  MOVWF  x0D
662E:  MOVLW  02
6630:  MOVWF  x0E
6632:  MOVLW  01
6634:  MOVWF  x0F
6636:  MOVLB  0
6638:  CALL   16E2
....................                EVDesfogue=0;Control=1; 
663C:  MOVLB  4
663E:  CLRF   x99
6640:  MOVLW  01
6642:  MOVWF  xA0
....................             } 
....................                 
....................             if(tiempo_esterilizacion==1) 
6644:  DECFSZ xAD,W
6646:  BRA    66B0
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6648:  MOVLB  5
664A:  CLRF   x20
664C:  MOVLW  37
664E:  MOVWF  x21
6650:  MOVLW  7F
6652:  MOVWF  x22
6654:  MOVLW  3F
6656:  MOVWF  x23
6658:  MOVLW  01
665A:  MOVWF  x24
665C:  CLRF   x25
665E:  MOVLB  0
6660:  CALL   1620
....................                strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
6664:  MOVLW  04
6666:  MOVWF  FEA
6668:  MOVLW  EA
666A:  MOVWF  FE9
666C:  MOVFF  FF2,50A
6670:  BCF    FF2.7
6672:  MOVLW  00
6674:  CALL   0E44
6678:  TBLRD*-
667A:  TBLRD*+
667C:  MOVF   FF5,W
667E:  MOVWF  FEE
6680:  IORLW  00
6682:  BNZ   667A
6684:  MOVLB  5
6686:  BTFSC  x0A.7
6688:  BSF    FF2.7
668A:  MOVLW  04
668C:  MOVWF  x0B
668E:  MOVLW  EA
6690:  MOVWF  x0A
6692:  CLRF   x0C
6694:  MOVLW  37
6696:  MOVWF  x0D
6698:  MOVLW  02
669A:  MOVWF  x0E
669C:  MOVLW  01
669E:  MOVWF  x0F
66A0:  MOVLB  0
66A2:  CALL   16E2
....................                EVDesfogue=0;EVTrampa=0;Control=1; 
66A6:  MOVLB  4
66A8:  CLRF   x99
66AA:  CLRF   x9B
66AC:  MOVLW  01
66AE:  MOVWF  xA0
....................             } 
....................          } 
....................           
....................          if(tiempo_esterilizacion==2 && Calentar==20) 
66B0:  MOVF   xAD,W
66B2:  SUBLW  02
66B4:  BTFSS  FD8.2
66B6:  BRA    6850
66B8:  MOVF   xA8,W
66BA:  SUBLW  14
66BC:  BTFSS  FD8.2
66BE:  BRA    6850
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
66C0:  BTFSS  x95.5
66C2:  BRA    678C
....................             { 
....................                if(z==0) 
66C4:  BTFSC  x97.2
66C6:  BRA    6718
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
66C8:  MOVLB  5
66CA:  CLRF   x0A
66CC:  MOVLW  5A
66CE:  MOVWF  x0B
66D0:  MOVLW  38
66D2:  MOVWF  x0C
66D4:  MOVLB  0
66D6:  CALL   2772
66DA:  MOVLW  19
66DC:  MOVLB  5
66DE:  MOVWF  x20
66E0:  MOVLW  12
66E2:  MOVWF  x21
66E4:  MOVLW  3C
66E6:  MOVWF  x22
66E8:  MOVLW  1A
66EA:  MOVWF  x23
66EC:  CLRF   x24
66EE:  CLRF   x25
66F0:  MOVLB  0
66F2:  CALL   1620
66F6:  MOVLW  37
66F8:  MOVLB  5
66FA:  MOVWF  x20
66FC:  MOVLW  12
66FE:  MOVWF  x21
6700:  MOVLW  44
6702:  MOVWF  x22
6704:  MOVLW  35
6706:  MOVWF  x23
6708:  CLRF   x24
670A:  MOVLW  01
670C:  MOVWF  x25
670E:  MOVLB  0
6710:  CALL   1620
6714:  MOVLB  4
6716:  BSF    x97.2
....................                } 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6718:  MOVLB  5
671A:  CLRF   x20
671C:  MOVLW  37
671E:  MOVWF  x21
6720:  MOVLW  7F
6722:  MOVWF  x22
6724:  MOVLW  3F
6726:  MOVWF  x23
6728:  MOVLW  01
672A:  MOVWF  x24
672C:  CLRF   x25
672E:  MOVLB  0
6730:  CALL   1620
....................                strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
6734:  MOVLW  04
6736:  MOVWF  FEA
6738:  MOVLW  EA
673A:  MOVWF  FE9
673C:  MOVFF  FF2,50A
6740:  BCF    FF2.7
6742:  MOVLW  00
6744:  CALL   0E6C
6748:  TBLRD*-
674A:  TBLRD*+
674C:  MOVF   FF5,W
674E:  MOVWF  FEE
6750:  IORLW  00
6752:  BNZ   674A
6754:  MOVLB  5
6756:  BTFSC  x0A.7
6758:  BSF    FF2.7
675A:  MOVLW  04
675C:  MOVWF  x0B
675E:  MOVLW  EA
6760:  MOVWF  x0A
6762:  CLRF   x0C
6764:  MOVLW  37
6766:  MOVWF  x0D
6768:  MOVLW  02
676A:  MOVWF  x0E
676C:  MOVLW  01
676E:  MOVWF  x0F
6770:  MOVLB  0
6772:  CALL   16E2
....................                glcd_imagen(5);        
6776:  MOVLW  05
6778:  MOVLB  5
677A:  MOVWF  x0A
677C:  MOVLB  0
677E:  CALL   2136
....................                Exhaust=2;tiempo_secado=2; 
6782:  MOVLW  02
6784:  MOVLB  4
6786:  MOVWF  xAF
6788:  MOVWF  xAE
....................             } 
....................             else 
678A:  BRA    6850
....................             { 
....................                if(z==0) 
678C:  BTFSC  x97.2
678E:  BRA    67E0
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
6790:  MOVLB  5
6792:  CLRF   x0A
6794:  MOVLW  5A
6796:  MOVWF  x0B
6798:  MOVLW  38
679A:  MOVWF  x0C
679C:  MOVLB  0
679E:  CALL   2772
67A2:  MOVLW  19
67A4:  MOVLB  5
67A6:  MOVWF  x20
67A8:  MOVLW  12
67AA:  MOVWF  x21
67AC:  MOVLW  3C
67AE:  MOVWF  x22
67B0:  MOVLW  1A
67B2:  MOVWF  x23
67B4:  CLRF   x24
67B6:  CLRF   x25
67B8:  MOVLB  0
67BA:  CALL   1620
67BE:  MOVLW  37
67C0:  MOVLB  5
67C2:  MOVWF  x20
67C4:  MOVLW  12
67C6:  MOVWF  x21
67C8:  MOVLW  44
67CA:  MOVWF  x22
67CC:  MOVLW  35
67CE:  MOVWF  x23
67D0:  CLRF   x24
67D2:  MOVLW  01
67D4:  MOVWF  x25
67D6:  MOVLB  0
67D8:  CALL   1620
67DC:  MOVLB  4
67DE:  BSF    x97.2
....................                   //tiempo_secado=1; 
....................                } 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
67E0:  MOVLB  5
67E2:  CLRF   x20
67E4:  MOVLW  37
67E6:  MOVWF  x21
67E8:  MOVLW  7F
67EA:  MOVWF  x22
67EC:  MOVLW  3F
67EE:  MOVWF  x23
67F0:  MOVLW  01
67F2:  MOVWF  x24
67F4:  CLRF   x25
67F6:  MOVLB  0
67F8:  CALL   1620
....................                strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
67FC:  MOVLW  04
67FE:  MOVWF  FEA
6800:  MOVLW  EA
6802:  MOVWF  FE9
6804:  MOVFF  FF2,50A
6808:  BCF    FF2.7
680A:  MOVLW  00
680C:  CALL   0E96
6810:  TBLRD*-
6812:  TBLRD*+
6814:  MOVF   FF5,W
6816:  MOVWF  FEE
6818:  IORLW  00
681A:  BNZ   6812
681C:  MOVLB  5
681E:  BTFSC  x0A.7
6820:  BSF    FF2.7
6822:  MOVLW  04
6824:  MOVWF  x0B
6826:  MOVLW  EA
6828:  MOVWF  x0A
682A:  CLRF   x0C
682C:  MOVLW  37
682E:  MOVWF  x0D
6830:  MOVLW  02
6832:  MOVWF  x0E
6834:  MOVLW  01
6836:  MOVWF  x0F
6838:  MOVLB  0
683A:  CALL   16E2
....................                glcd_imagen(5);    
683E:  MOVLW  05
6840:  MOVLB  5
6842:  MOVWF  x0A
6844:  MOVLB  0
6846:  CALL   2136
....................                Exhaust=1; 
684A:  MOVLW  01
684C:  MOVLB  4
684E:  MOVWF  xAF
6850:  MOVLB  0
....................             } 
....................                // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................       } 
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
6852:  MOVLB  4
6854:  BTFSS  x95.6
6856:  BRA    6BD0
....................    {                       
....................       Lectura=0; 
6858:  BCF    x95.6
....................       //displayTiempo(PresionCamara,31,35,2,1); 
....................       //displayTiempo(PresionPreCamara,31,44,2,1); 
....................       displayT(PresionCamara,31,35,1); 
685A:  MOVFF  4C0,50B
685E:  MOVFF  4BF,50A
6862:  MOVLB  0
6864:  CALL   1AA0
6868:  MOVFF  00,50A
686C:  MOVFF  01,50B
6870:  MOVFF  02,50C
6874:  MOVFF  03,50D
6878:  MOVFF  03,511
687C:  MOVFF  02,510
6880:  MOVFF  01,50F
6884:  MOVFF  00,50E
6888:  MOVLW  1F
688A:  MOVLB  5
688C:  MOVWF  x12
688E:  MOVLW  23
6890:  MOVWF  x13
6892:  MOVLW  01
6894:  MOVWF  x14
6896:  MOVLB  0
6898:  CALL   2B04
....................       displayT(PresionPreCamara,31,44,1); 
689C:  MOVFF  4C2,50B
68A0:  MOVFF  4C1,50A
68A4:  CALL   1AA0
68A8:  MOVFF  00,50A
68AC:  MOVFF  01,50B
68B0:  MOVFF  02,50C
68B4:  MOVFF  03,50D
68B8:  MOVFF  03,511
68BC:  MOVFF  02,510
68C0:  MOVFF  01,50F
68C4:  MOVFF  00,50E
68C8:  MOVLW  1F
68CA:  MOVLB  5
68CC:  MOVWF  x12
68CE:  MOVLW  2C
68D0:  MOVWF  x13
68D2:  MOVLW  01
68D4:  MOVWF  x14
68D6:  MOVLB  0
68D8:  CALL   2B04
....................       glcd_rect(51, 35, 62, 48, YES, OFF);glcd_text57(52, 35, kpa, 1, ON); 
68DC:  MOVLW  33
68DE:  MOVLB  5
68E0:  MOVWF  x20
68E2:  MOVLW  23
68E4:  MOVWF  x21
68E6:  MOVLW  3E
68E8:  MOVWF  x22
68EA:  MOVLW  30
68EC:  MOVWF  x23
68EE:  MOVLW  01
68F0:  MOVWF  x24
68F2:  CLRF   x25
68F4:  MOVLB  0
68F6:  CALL   1620
68FA:  MOVLW  34
68FC:  MOVLB  5
68FE:  MOVWF  x1E
6900:  MOVLW  23
6902:  MOVWF  x1F
6904:  MOVLW  04
6906:  MOVWF  x21
6908:  MOVLW  89
690A:  MOVWF  x20
690C:  MOVLW  01
690E:  MOVWF  x22
6910:  MOVWF  x23
6912:  MOVLB  0
6914:  CALL   132A
....................       glcd_rect(51, 44, 62, 48, YES, OFF);glcd_text57(52, 44, kpa, 1, ON); 
6918:  MOVLW  33
691A:  MOVLB  5
691C:  MOVWF  x20
691E:  MOVLW  2C
6920:  MOVWF  x21
6922:  MOVLW  3E
6924:  MOVWF  x22
6926:  MOVLW  30
6928:  MOVWF  x23
692A:  MOVLW  01
692C:  MOVWF  x24
692E:  CLRF   x25
6930:  MOVLB  0
6932:  CALL   1620
6936:  MOVLW  34
6938:  MOVLB  5
693A:  MOVWF  x1E
693C:  MOVLW  2C
693E:  MOVWF  x1F
6940:  MOVLW  04
6942:  MOVWF  x21
6944:  MOVLW  89
6946:  MOVWF  x20
6948:  MOVLW  01
694A:  MOVWF  x22
694C:  MOVWF  x23
694E:  MOVLB  0
6950:  CALL   132A
....................       displayTT(ADC_Pt100,69,20,2); 
6954:  MOVFF  4C6,50D
6958:  MOVFF  4C5,50C
695C:  MOVFF  4C4,50B
6960:  MOVFF  4C3,50A
6964:  MOVLW  45
6966:  MOVLB  5
6968:  MOVWF  x0E
696A:  MOVLW  14
696C:  MOVWF  x0F
696E:  MOVLW  02
6970:  MOVWF  x10
6972:  MOVLB  0
6974:  GOTO   2B7A
....................       glcd_circle(95,40,2,NO,ON); 
6978:  MOVLW  5F
697A:  MOVLB  5
697C:  MOVWF  x0A
697E:  MOVLW  28
6980:  MOVWF  x0B
6982:  MOVLW  02
6984:  MOVWF  x0C
6986:  CLRF   x0D
6988:  MOVLW  01
698A:  MOVWF  x0E
698C:  MOVLB  0
698E:  CALL   2232
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
6992:  MOVLW  04
6994:  MOVWF  FEA
6996:  MOVLW  EA
6998:  MOVWF  FE9
699A:  MOVFF  FF2,50A
699E:  BCF    FF2.7
69A0:  MOVLW  00
69A2:  CALL   0A1C
69A6:  TBLRD*-
69A8:  TBLRD*+
69AA:  MOVF   FF5,W
69AC:  MOVWF  FEE
69AE:  IORLW  00
69B0:  BNZ   69A8
69B2:  MOVLB  5
69B4:  BTFSC  x0A.7
69B6:  BSF    FF2.7
69B8:  MOVLW  04
69BA:  MOVWF  x0B
69BC:  MOVLW  EA
69BE:  MOVWF  x0A
69C0:  MOVLW  66
69C2:  MOVWF  x0C
69C4:  MOVLW  28
69C6:  MOVWF  x0D
69C8:  MOVLW  02
69CA:  MOVWF  x0E
69CC:  MOVWF  x0F
69CE:  MOVLB  0
69D0:  CALL   16E2
....................       displayTiempo(Setpoint,5,20,2,1); 
69D4:  MOVFF  4A9,50B
69D8:  MOVLW  05
69DA:  MOVLB  5
69DC:  MOVWF  x0C
69DE:  MOVLW  14
69E0:  MOVWF  x0D
69E2:  MOVLW  02
69E4:  MOVWF  x0E
69E6:  MOVLW  01
69E8:  MOVWF  x0F
69EA:  MOVLB  0
69EC:  CALL   24E2
....................  
....................       glcd_imagen(5); 
69F0:  MOVLW  05
69F2:  MOVLB  5
69F4:  MOVWF  x0A
69F6:  MOVLB  0
69F8:  CALL   2136
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
69FC:  MOVLW  04
69FE:  MOVWF  FEA
6A00:  MOVLW  EA
6A02:  MOVWF  FE9
6A04:  MOVFF  FF2,50A
6A08:  BCF    FF2.7
6A0A:  MOVLW  00
6A0C:  CALL   09D8
6A10:  TBLRD*-
6A12:  TBLRD*+
6A14:  MOVF   FF5,W
6A16:  MOVWF  FEE
6A18:  IORLW  00
6A1A:  BNZ   6A12
6A1C:  MOVLB  5
6A1E:  BTFSC  x0A.7
6A20:  BSF    FF2.7
6A22:  MOVLW  04
6A24:  MOVWF  x0B
6A26:  MOVLW  EA
6A28:  MOVWF  x0A
6A2A:  CLRF   x0C
6A2C:  CLRF   x0D
6A2E:  MOVLW  02
6A30:  MOVWF  x0E
6A32:  MOVLW  01
6A34:  MOVWF  x0F
6A36:  MOVLB  0
6A38:  CALL   16E2
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
6A3C:  MOVLW  04
6A3E:  MOVWF  FEA
6A40:  MOVLW  EA
6A42:  MOVWF  FE9
6A44:  MOVFF  FF2,50A
6A48:  BCF    FF2.7
6A4A:  MOVLW  00
6A4C:  CALL   09FA
6A50:  TBLRD*-
6A52:  TBLRD*+
6A54:  MOVF   FF5,W
6A56:  MOVWF  FEE
6A58:  IORLW  00
6A5A:  BNZ   6A52
6A5C:  MOVLB  5
6A5E:  BTFSC  x0A.7
6A60:  BSF    FF2.7
6A62:  MOVLW  04
6A64:  MOVWF  x0B
6A66:  MOVLW  EA
6A68:  MOVWF  x0A
6A6A:  CLRF   x0C
6A6C:  MOVLW  08
6A6E:  MOVWF  x0D
6A70:  MOVLW  02
6A72:  MOVWF  x0E
6A74:  MOVLW  01
6A76:  MOVWF  x0F
6A78:  MOVLB  0
6A7A:  CALL   16E2
....................       MuestraTiemposProgramados(); 
6A7E:  CALL   2632
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
6A82:  MOVFF  4CA,50B
6A86:  MOVLW  50
6A88:  MOVLB  5
6A8A:  MOVWF  x0C
6A8C:  CLRF   x0D
6A8E:  CLRF   x0E
6A90:  MOVLW  01
6A92:  MOVWF  x0F
6A94:  MOVLB  0
6A96:  CALL   24E2
6A9A:  MOVFF  4C9,50B
6A9E:  MOVLW  56
6AA0:  MOVLB  5
6AA2:  MOVWF  x0C
6AA4:  CLRF   x0D
6AA6:  CLRF   x0E
6AA8:  MOVLW  01
6AAA:  MOVWF  x0F
6AAC:  MOVLB  0
6AAE:  CALL   24E2
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
6AB2:  MOVLW  04
6AB4:  MOVWF  FEA
6AB6:  MOVLW  EA
6AB8:  MOVWF  FE9
6ABA:  MOVFF  FF2,50A
6ABE:  BCF    FF2.7
6AC0:  MOVLW  00
6AC2:  CALL   06BE
6AC6:  TBLRD*-
6AC8:  TBLRD*+
6ACA:  MOVF   FF5,W
6ACC:  MOVWF  FEE
6ACE:  IORLW  00
6AD0:  BNZ   6AC8
6AD2:  MOVLB  5
6AD4:  BTFSC  x0A.7
6AD6:  BSF    FF2.7
6AD8:  MOVLW  04
6ADA:  MOVWF  x0B
6ADC:  MOVLW  EA
6ADE:  MOVWF  x0A
6AE0:  MOVLW  5C
6AE2:  MOVWF  x0C
6AE4:  CLRF   x0D
6AE6:  MOVLW  02
6AE8:  MOVWF  x0E
6AEA:  MOVLW  01
6AEC:  MOVWF  x0F
6AEE:  MOVLB  0
6AF0:  CALL   16E2
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6AF4:  MOVFF  4C8,50B
6AF8:  MOVLW  62
6AFA:  MOVLB  5
6AFC:  MOVWF  x0C
6AFE:  CLRF   x0D
6B00:  CLRF   x0E
6B02:  MOVLW  01
6B04:  MOVWF  x0F
6B06:  MOVLB  0
6B08:  CALL   24E2
6B0C:  MOVFF  4C7,50B
6B10:  MOVLW  68
6B12:  MOVLB  5
6B14:  MOVWF  x0C
6B16:  CLRF   x0D
6B18:  CLRF   x0E
6B1A:  MOVLW  01
6B1C:  MOVWF  x0F
6B1E:  MOVLB  0
6B20:  CALL   24E2
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
6B24:  MOVFF  4D2,50B
6B28:  MOVLW  50
6B2A:  MOVLB  5
6B2C:  MOVWF  x0C
6B2E:  MOVLW  08
6B30:  MOVWF  x0D
6B32:  CLRF   x0E
6B34:  MOVLW  01
6B36:  MOVWF  x0F
6B38:  MOVLB  0
6B3A:  CALL   24E2
6B3E:  MOVFF  4D1,50B
6B42:  MOVLW  56
6B44:  MOVLB  5
6B46:  MOVWF  x0C
6B48:  MOVLW  08
6B4A:  MOVWF  x0D
6B4C:  CLRF   x0E
6B4E:  MOVLW  01
6B50:  MOVWF  x0F
6B52:  MOVLB  0
6B54:  CALL   24E2
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
6B58:  MOVLW  04
6B5A:  MOVWF  FEA
6B5C:  MOVLW  EA
6B5E:  MOVWF  FE9
6B60:  MOVFF  FF2,50A
6B64:  BCF    FF2.7
6B66:  MOVLW  00
6B68:  CALL   06BE
6B6C:  TBLRD*-
6B6E:  TBLRD*+
6B70:  MOVF   FF5,W
6B72:  MOVWF  FEE
6B74:  IORLW  00
6B76:  BNZ   6B6E
6B78:  MOVLB  5
6B7A:  BTFSC  x0A.7
6B7C:  BSF    FF2.7
6B7E:  MOVLW  04
6B80:  MOVWF  x0B
6B82:  MOVLW  EA
6B84:  MOVWF  x0A
6B86:  MOVLW  5C
6B88:  MOVWF  x0C
6B8A:  MOVLW  08
6B8C:  MOVWF  x0D
6B8E:  MOVLW  02
6B90:  MOVWF  x0E
6B92:  MOVLW  01
6B94:  MOVWF  x0F
6B96:  MOVLB  0
6B98:  CALL   16E2
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
6B9C:  MOVFF  4D0,50B
6BA0:  MOVLW  62
6BA2:  MOVLB  5
6BA4:  MOVWF  x0C
6BA6:  MOVLW  08
6BA8:  MOVWF  x0D
6BAA:  CLRF   x0E
6BAC:  MOVLW  01
6BAE:  MOVWF  x0F
6BB0:  MOVLB  0
6BB2:  CALL   24E2
6BB6:  MOVFF  4CF,50B
6BBA:  MOVLW  68
6BBC:  MOVLB  5
6BBE:  MOVWF  x0C
6BC0:  MOVLW  08
6BC2:  MOVWF  x0D
6BC4:  CLRF   x0E
6BC6:  MOVLW  01
6BC8:  MOVWF  x0F
6BCA:  MOVLB  0
6BCC:  CALL   24E2
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint)-0.3)// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
6BD0:  MOVLB  5
6BD2:  CLRF   x0B
6BD4:  MOVFF  4A9,50A
6BD8:  MOVLB  0
6BDA:  CALL   1AA0
6BDE:  MOVFF  00,50A
6BE2:  MOVFF  01,50B
6BE6:  MOVFF  02,50C
6BEA:  MOVFF  03,50D
6BEE:  BSF    FD8.1
6BF0:  MOVFF  03,511
6BF4:  MOVFF  02,510
6BF8:  MOVFF  01,50F
6BFC:  MOVFF  00,50E
6C00:  MOVLW  9A
6C02:  MOVLB  5
6C04:  MOVWF  x15
6C06:  MOVLW  99
6C08:  MOVWF  x14
6C0A:  MOVLW  19
6C0C:  MOVWF  x13
6C0E:  MOVLW  7D
6C10:  MOVWF  x12
6C12:  MOVLB  0
6C14:  CALL   1C36
6C18:  MOVFF  03,50D
6C1C:  MOVFF  02,50C
6C20:  MOVFF  01,50B
6C24:  MOVFF  00,50A
6C28:  MOVFF  4C6,511
6C2C:  MOVFF  4C5,510
6C30:  MOVFF  4C4,50F
6C34:  MOVFF  4C3,50E
6C38:  CALL   2BF4
6C3C:  BC    6C40
6C3E:  BNZ   6CA6
....................    { 
....................       if(est==0) 
6C40:  MOVLB  4
6C42:  BTFSC  x96.0
6C44:  BRA    6CA8
....................       { 
....................          tiempo_esterilizacion=1; 
6C46:  MOVLW  01
6C48:  MOVWF  xAD
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
6C4A:  MOVLB  5
6C4C:  CLRF   x0A
6C4E:  MOVLW  5A
6C50:  MOVWF  x0B
6C52:  MOVLW  38
6C54:  MOVWF  x0C
6C56:  MOVLB  0
6C58:  CALL   2772
6C5C:  MOVLW  0F
6C5E:  MOVLB  5
6C60:  MOVWF  x20
6C62:  MOVLW  12
6C64:  MOVWF  x21
6C66:  MOVLW  1E
6C68:  MOVWF  x22
6C6A:  MOVLW  35
6C6C:  MOVWF  x23
6C6E:  CLRF   x24
6C70:  CLRF   x25
6C72:  MOVLB  0
6C74:  CALL   1620
6C78:  MOVLW  19
6C7A:  MOVLB  5
6C7C:  MOVWF  x20
6C7E:  MOVLW  12
6C80:  MOVWF  x21
6C82:  MOVLW  3C
6C84:  MOVWF  x22
6C86:  MOVLW  1A
6C88:  MOVWF  x23
6C8A:  CLRF   x24
6C8C:  MOVLW  01
6C8E:  MOVWF  x25
6C90:  MOVLB  0
6C92:  CALL   1620
6C96:  MOVLB  4
6C98:  BSF    x96.0
....................          glcd_imagen(5); 
6C9A:  MOVLW  05
6C9C:  MOVLB  5
6C9E:  MOVWF  x0A
6CA0:  MOVLB  0
6CA2:  CALL   2136
6CA6:  MOVLB  4
....................       } 
....................    }   
....................     
....................    if((ADC_Pt100<((float)Setpoint-2.0)) && tiempo_esterilizacion==1) 
6CA8:  MOVLB  5
6CAA:  CLRF   x0B
6CAC:  MOVFF  4A9,50A
6CB0:  MOVLB  0
6CB2:  CALL   1AA0
6CB6:  MOVFF  00,50A
6CBA:  MOVFF  01,50B
6CBE:  MOVFF  02,50C
6CC2:  MOVFF  03,50D
6CC6:  BSF    FD8.1
6CC8:  MOVFF  03,511
6CCC:  MOVFF  02,510
6CD0:  MOVFF  01,50F
6CD4:  MOVFF  00,50E
6CD8:  MOVLB  5
6CDA:  CLRF   x15
6CDC:  CLRF   x14
6CDE:  CLRF   x13
6CE0:  MOVLW  80
6CE2:  MOVWF  x12
6CE4:  MOVLB  0
6CE6:  CALL   1C36
6CEA:  MOVFF  4C6,50D
6CEE:  MOVFF  4C5,50C
6CF2:  MOVFF  4C4,50B
6CF6:  MOVFF  4C3,50A
6CFA:  MOVFF  03,511
6CFE:  MOVFF  02,510
6D02:  MOVFF  01,50F
6D06:  MOVFF  00,50E
6D0A:  CALL   2BF4
6D0E:  BNC   6D20
6D10:  MOVLB  4
6D12:  DECFSZ xAD,W
6D14:  BRA    6D18
6D16:  BRA    6D1C
6D18:  MOVLB  0
6D1A:  BRA    6D20
....................    { 
....................       est=0;tiempo_esterilizacion=0; 
6D1C:  BCF    x96.0
6D1E:  CLRF   xAD
....................    } 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
6D20:  MOVLB  4
6D22:  DECFSZ xAF,W
6D24:  BRA    6D4A
6D26:  MOVF   xAD,W
6D28:  SUBLW  02
6D2A:  BNZ   6D4A
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
6D2C:  CLRF   xA0
....................       if(PresionCamara<(Atmosferica+6)) 
6D2E:  MOVLW  06
6D30:  ADDWF  xAA,W
6D32:  MOVF   xC0,F
6D34:  BNZ   6D46
6D36:  SUBWF  xBF,W
6D38:  BC    6D46
....................       { 
....................          tiempo_secado=1; 
6D3A:  MOVLW  01
6D3C:  MOVWF  xAE
....................          Control=0;EVDesfogue=3; 
6D3E:  CLRF   xA0
6D40:  MOVLW  03
6D42:  MOVWF  x99
....................       } 
....................       else 
6D44:  BRA    6D4A
....................       { 
....................          EVDesfogue=1; 
6D46:  MOVLW  01
6D48:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
6D4A:  MOVF   xAF,W
6D4C:  SUBLW  02
6D4E:  BNZ   6D88
6D50:  MOVF   xAD,W
6D52:  SUBLW  02
6D54:  BNZ   6D88
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
6D56:  CLRF   xA0
....................       if(PresionCamara<(Atmosferica+20)) 
6D58:  MOVLW  14
6D5A:  ADDWF  xAA,W
6D5C:  MOVF   xC0,F
6D5E:  BNZ   6D6A
6D60:  SUBWF  xBF,W
6D62:  BC    6D6A
....................       { 
....................          EVDesfogue=1; 
6D64:  MOVLW  01
6D66:  MOVWF  x99
....................       } 
....................       else 
6D68:  BRA    6D6E
....................       { 
....................          EVDesfogue=2; 
6D6A:  MOVLW  02
6D6C:  MOVWF  x99
....................       } 
....................       if(PresionCamara<(Atmosferica+6)) 
6D6E:  MOVLW  06
6D70:  ADDWF  xAA,W
6D72:  MOVF   xC0,F
6D74:  BNZ   6D88
6D76:  SUBWF  xBF,W
6D78:  BC    6D88
....................       { 
....................          tiempo_esterilizacion=3; 
6D7A:  MOVLW  03
6D7C:  MOVWF  xAD
....................          tiempo_secado=2; 
6D7E:  MOVLW  02
6D80:  MOVWF  xAE
....................          fin_ciclo=1; 
6D82:  MOVLW  01
6D84:  MOVWF  xAB
....................          EVDesfogue=1; 
6D86:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1) 
6D88:  MOVF   xCB,W
6D8A:  XORLW  80
6D8C:  MOVWF  00
6D8E:  MOVF   xC7,W
6D90:  XORLW  80
6D92:  SUBWF  00,W
6D94:  BZ    6D98
6D96:  BC    6DD4
6D98:  MOVF   xCC,W
6D9A:  XORLW  80
6D9C:  MOVWF  00
6D9E:  MOVF   xC8,W
6DA0:  XORLW  80
6DA2:  SUBWF  00,W
6DA4:  BZ    6DA8
6DA6:  BC    6DD4
6DA8:  MOVF   xCD,W
6DAA:  XORLW  80
6DAC:  MOVWF  00
6DAE:  MOVF   xC9,W
6DB0:  XORLW  80
6DB2:  SUBWF  00,W
6DB4:  BZ    6DB8
6DB6:  BC    6DD4
6DB8:  MOVF   xCE,W
6DBA:  XORLW  80
6DBC:  MOVWF  00
6DBE:  MOVF   xCA,W
6DC0:  XORLW  80
6DC2:  SUBWF  00,W
6DC4:  BZ    6DC8
6DC6:  BC    6DD4
6DC8:  DECFSZ xAD,W
6DCA:  BRA    6DD4
....................    { 
....................       tiempo_esterilizacion=2;Calentar=20; 
6DCC:  MOVLW  02
6DCE:  MOVWF  xAD
6DD0:  MOVLW  14
6DD2:  MOVWF  xA8
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
6DD4:  MOVF   xD3,W
6DD6:  XORLW  80
6DD8:  MOVWF  00
6DDA:  MOVF   xCF,W
6DDC:  XORLW  80
6DDE:  SUBWF  00,W
6DE0:  BZ    6DE4
6DE2:  BC    6E28
6DE4:  MOVF   xD4,W
6DE6:  XORLW  80
6DE8:  MOVWF  00
6DEA:  MOVF   xD0,W
6DEC:  XORLW  80
6DEE:  SUBWF  00,W
6DF0:  BZ    6DF4
6DF2:  BC    6E28
6DF4:  MOVF   xD5,W
6DF6:  XORLW  80
6DF8:  MOVWF  00
6DFA:  MOVF   xD1,W
6DFC:  XORLW  80
6DFE:  SUBWF  00,W
6E00:  BZ    6E04
6E02:  BC    6E28
6E04:  MOVF   xD6,W
6E06:  XORLW  80
6E08:  MOVWF  00
6E0A:  MOVF   xD2,W
6E0C:  XORLW  80
6E0E:  SUBWF  00,W
6E10:  BZ    6E14
6E12:  BC    6E28
6E14:  DECFSZ xAE,W
6E16:  BRA    6E28
....................    { 
....................       tiempo_esterilizacion=3; 
6E18:  MOVLW  03
6E1A:  MOVWF  xAD
....................       tiempo_secado=2; 
6E1C:  MOVLW  02
6E1E:  MOVWF  xAE
....................       fin_ciclo=1; 
6E20:  MOVLW  01
6E22:  MOVWF  xAB
....................       Calentar=10; 
6E24:  MOVLW  0A
6E26:  MOVWF  xA8
....................    } 
....................     
....................    if(fin_ciclo==1) 
6E28:  DECFSZ xAB,W
6E2A:  BRA    6E92
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=4; 
6E2C:  CLRF   xA0
6E2E:  MOVLW  04
6E30:  MOVWF  x99
....................       glcd_rect(0, 55, 127, 63, YES, OFF); 
6E32:  MOVLB  5
6E34:  CLRF   x20
6E36:  MOVLW  37
6E38:  MOVWF  x21
6E3A:  MOVLW  7F
6E3C:  MOVWF  x22
6E3E:  MOVLW  3F
6E40:  MOVWF  x23
6E42:  MOVLW  01
6E44:  MOVWF  x24
6E46:  CLRF   x25
6E48:  MOVLB  0
6E4A:  CALL   1620
....................       strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1);  
6E4E:  MOVLW  04
6E50:  MOVWF  FEA
6E52:  MOVLW  EA
6E54:  MOVWF  FE9
6E56:  MOVFF  FF2,50A
6E5A:  BCF    FF2.7
6E5C:  MOVLW  00
6E5E:  CALL   0EB8
6E62:  TBLRD*-
6E64:  TBLRD*+
6E66:  MOVF   FF5,W
6E68:  MOVWF  FEE
6E6A:  IORLW  00
6E6C:  BNZ   6E64
6E6E:  MOVLB  5
6E70:  BTFSC  x0A.7
6E72:  BSF    FF2.7
6E74:  MOVLW  04
6E76:  MOVWF  x0B
6E78:  MOVLW  EA
6E7A:  MOVWF  x0A
6E7C:  CLRF   x0C
6E7E:  MOVLW  37
6E80:  MOVWF  x0D
6E82:  MOVLW  02
6E84:  MOVWF  x0E
6E86:  MOVLW  01
6E88:  MOVWF  x0F
6E8A:  MOVLB  0
6E8C:  CALL   16E2
6E90:  MOVLB  4
....................    } 
....................     
....................    if(RIGHT) 
6E92:  BSF    F92.2
6E94:  BTFSS  F80.2
6E96:  BRA    6ED0
....................    { 
....................       glcd_init(ON); 
6E98:  MOVLW  01
6E9A:  MOVLB  5
6E9C:  MOVWF  x0A
6E9E:  MOVLB  0
6EA0:  CALL   11C6
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6EA4:  MOVLB  4
6EA6:  BCF    x96.2
6EA8:  BCF    x96.3
6EAA:  BCF    x96.4
6EAC:  BCF    x96.5
6EAE:  BCF    x96.6
6EB0:  BCF    x96.7
6EB2:  BCF    x97.0
6EB4:  BCF    x97.1
....................       disp_Alarma=0; 
6EB6:  BCF    x97.3
....................       delay_ms(1000); 
6EB8:  MOVLW  04
6EBA:  MOVLB  5
6EBC:  MOVWF  x0A
6EBE:  MOVLW  FA
6EC0:  MOVWF  x0B
6EC2:  MOVLB  0
6EC4:  CALL   104A
6EC8:  MOVLB  5
6ECA:  DECFSZ x0A,F
6ECC:  BRA    6EBE
6ECE:  MOVLB  4
....................    } 
....................    EVAgua=10; 
6ED0:  MOVLW  0A
6ED2:  MOVWF  x9A
....................    Envio_Esclavos(); 
6ED4:  MOVLB  0
6ED6:  CALL   20D6
6EDA:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6EDC:  MOVF   xA2,W
6EDE:  SUBLW  64
6EE0:  BTFSS  FD8.2
6EE2:  BRA    6FDE
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
6EE4:  MOVFF  4DF,50B
6EE8:  MOVLB  5
6EEA:  CLRF   x0C
6EEC:  MOVLW  0A
6EEE:  MOVWF  x0D
6EF0:  MOVLW  02
6EF2:  MOVWF  x0E
6EF4:  MOVLW  01
6EF6:  MOVWF  x0F
6EF8:  MOVLB  0
6EFA:  CALL   24E2
....................    displayTiempo(datoRx[1],0,20,2,1); 
6EFE:  MOVFF  4E0,50B
6F02:  MOVLB  5
6F04:  CLRF   x0C
6F06:  MOVLW  14
6F08:  MOVWF  x0D
6F0A:  MOVLW  02
6F0C:  MOVWF  x0E
6F0E:  MOVLW  01
6F10:  MOVWF  x0F
6F12:  MOVLB  0
6F14:  CALL   24E2
....................    displayTiempo(datoRx[2],0,30,2,1); 
6F18:  MOVFF  4E1,50B
6F1C:  MOVLB  5
6F1E:  CLRF   x0C
6F20:  MOVLW  1E
6F22:  MOVWF  x0D
6F24:  MOVLW  02
6F26:  MOVWF  x0E
6F28:  MOVLW  01
6F2A:  MOVWF  x0F
6F2C:  MOVLB  0
6F2E:  CALL   24E2
....................    displayTiempo(datoRx[3],0,40,2,1); 
6F32:  MOVFF  4E2,50B
6F36:  MOVLB  5
6F38:  CLRF   x0C
6F3A:  MOVLW  28
6F3C:  MOVWF  x0D
6F3E:  MOVLW  02
6F40:  MOVWF  x0E
6F42:  MOVLW  01
6F44:  MOVWF  x0F
6F46:  MOVLB  0
6F48:  CALL   24E2
....................    displayTiempo(Opcion,0,50,2,1); 
6F4C:  MOVFF  4AC,50B
6F50:  MOVLB  5
6F52:  CLRF   x0C
6F54:  MOVLW  32
6F56:  MOVWF  x0D
6F58:  MOVLW  02
6F5A:  MOVWF  x0E
6F5C:  MOVLW  01
6F5E:  MOVWF  x0F
6F60:  MOVLB  0
6F62:  CALL   24E2
....................    Lectura_Esclavos(); 
6F66:  CALL   1F7C
....................    Opcion++; 
6F6A:  MOVLB  4
6F6C:  INCF   xAC,F
....................    displayTiempo(Puerta,50,10,2,1); 
6F6E:  MOVFF  48D,50B
6F72:  MOVLW  32
6F74:  MOVLB  5
6F76:  MOVWF  x0C
6F78:  MOVLW  0A
6F7A:  MOVWF  x0D
6F7C:  MOVLW  02
6F7E:  MOVWF  x0E
6F80:  MOVLW  01
6F82:  MOVWF  x0F
6F84:  MOVLB  0
6F86:  CALL   24E2
....................    displayTiempo(Parada,50,20,2,1); 
6F8A:  MOVFF  48E,50B
6F8E:  MOVLW  32
6F90:  MOVLB  5
6F92:  MOVWF  x0C
6F94:  MOVLW  14
6F96:  MOVWF  x0D
6F98:  MOVLW  02
6F9A:  MOVWF  x0E
6F9C:  MOVLW  01
6F9E:  MOVWF  x0F
6FA0:  MOVLB  0
6FA2:  CALL   24E2
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6FA6:  MOVFF  4C6,50D
6FAA:  MOVFF  4C5,50C
6FAE:  MOVFF  4C4,50B
6FB2:  MOVFF  4C3,50A
6FB6:  GOTO   2C6E
6FBA:  MOVFF  01,50A
6FBE:  MOVFF  01,50B
6FC2:  MOVLW  32
6FC4:  MOVLB  5
6FC6:  MOVWF  x0C
6FC8:  MOVLW  1E
6FCA:  MOVWF  x0D
6FCC:  MOVLW  02
6FCE:  MOVWF  x0E
6FD0:  MOVLW  01
6FD2:  MOVWF  x0F
6FD4:  MOVLB  0
6FD6:  CALL   24E2
....................     
....................  } 
6FDA:  MOVLB  4
6FDC:  BRA    6EDC
....................        
....................       while(Parada==0) 
....................       { 
6FDE:  MOVF   x8E,F
6FE0:  BNZ   709A
....................          Lectura_Esclavos(); 
6FE2:  MOVLB  0
6FE4:  CALL   1F7C
....................          delay_ms(100); 
6FE8:  MOVLW  64
6FEA:  MOVLB  5
6FEC:  MOVWF  x0B
6FEE:  MOVLB  0
6FF0:  CALL   104A
....................          if(disp_Stop==0) 
6FF4:  MOVLB  4
6FF6:  BTFSC  x96.7
6FF8:  BRA    7098
....................          { 
....................             glcd_fillScreen(OFF);  
6FFA:  MOVLB  5
6FFC:  CLRF   x0B
6FFE:  MOVLB  0
7000:  CALL   10B4
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
7004:  MOVLW  04
7006:  MOVWF  FEA
7008:  MOVLW  EA
700A:  MOVWF  FE9
700C:  MOVFF  FF2,50A
7010:  BCF    FF2.7
7012:  MOVLW  00
7014:  CALL   0EE4
7018:  TBLRD*-
701A:  TBLRD*+
701C:  MOVF   FF5,W
701E:  MOVWF  FEE
7020:  IORLW  00
7022:  BNZ   701A
7024:  MOVLB  5
7026:  BTFSC  x0A.7
7028:  BSF    FF2.7
702A:  MOVLW  04
702C:  MOVWF  x0B
702E:  MOVLW  EA
7030:  MOVWF  x0A
7032:  CLRF   x0C
7034:  MOVLW  0A
7036:  MOVWF  x0D
7038:  CLRF   x0E
703A:  MOVLW  02
703C:  MOVWF  x0F
703E:  MOVLB  0
7040:  CALL   16E2
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
7044:  MOVLW  04
7046:  MOVWF  FEA
7048:  MOVLW  EA
704A:  MOVWF  FE9
704C:  MOVFF  FF2,50A
7050:  BCF    FF2.7
7052:  MOVLW  00
7054:  CALL   0F0A
7058:  TBLRD*-
705A:  TBLRD*+
705C:  MOVF   FF5,W
705E:  MOVWF  FEE
7060:  IORLW  00
7062:  BNZ   705A
7064:  MOVLB  5
7066:  BTFSC  x0A.7
7068:  BSF    FF2.7
706A:  MOVLW  04
706C:  MOVWF  x0B
706E:  MOVLW  EA
7070:  MOVWF  x0A
7072:  CLRF   x0C
7074:  MOVLW  1E
7076:  MOVWF  x0D
7078:  CLRF   x0E
707A:  MOVLW  02
707C:  MOVWF  x0F
707E:  MOVLB  0
7080:  CALL   16E2
7084:  MOVLB  4
7086:  BSF    x95.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
7088:  BCF    x96.2
708A:  BCF    x96.3
708C:  BCF    x96.4
708E:  BCF    x96.5
7090:  BCF    x96.6
7092:  BSF    x96.7
7094:  BCF    x97.0
7096:  BCF    x97.1
....................          } 
....................       }    
7098:  BRA    6FDE
....................       if(Parada==1) 
709A:  DECFSZ x8E,W
709C:  BRA    7146
....................       { 
....................          while(emergency==1) 
....................          { 
709E:  BTFSS  x95.3
70A0:  BRA    7146
....................             Lectura_Esclavos(); 
70A2:  MOVLB  0
70A4:  CALL   1F7C
....................             if(disp_Stop==1) 
70A8:  MOVLB  4
70AA:  BTFSS  x96.7
70AC:  BRA    70BC
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
70AE:  MOVLB  5
70B0:  CLRF   x0B
70B2:  MOVLB  0
70B4:  CALL   10B4
70B8:  MOVLB  4
70BA:  BCF    x96.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
70BC:  MOVLW  04
70BE:  MOVWF  FEA
70C0:  MOVLW  EA
70C2:  MOVWF  FE9
70C4:  MOVFF  FF2,50A
70C8:  BCF    FF2.7
70CA:  MOVLW  00
70CC:  MOVLB  0
70CE:  CALL   0F30
70D2:  TBLRD*-
70D4:  TBLRD*+
70D6:  MOVF   FF5,W
70D8:  MOVWF  FEE
70DA:  IORLW  00
70DC:  BNZ   70D4
70DE:  MOVLB  5
70E0:  BTFSC  x0A.7
70E2:  BSF    FF2.7
70E4:  MOVLW  04
70E6:  MOVWF  x0B
70E8:  MOVLW  EA
70EA:  MOVWF  x0A
70EC:  CLRF   x0C
70EE:  MOVLW  0A
70F0:  MOVWF  x0D
70F2:  CLRF   x0E
70F4:  MOVLW  02
70F6:  MOVWF  x0F
70F8:  MOVLB  0
70FA:  CALL   16E2
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
70FE:  MOVLW  04
7100:  MOVWF  FEA
7102:  MOVLW  EA
7104:  MOVWF  FE9
7106:  MOVFF  FF2,50A
710A:  BCF    FF2.7
710C:  MOVLW  00
710E:  CALL   0F56
7112:  TBLRD*-
7114:  TBLRD*+
7116:  MOVF   FF5,W
7118:  MOVWF  FEE
711A:  IORLW  00
711C:  BNZ   7114
711E:  MOVLB  5
7120:  BTFSC  x0A.7
7122:  BSF    FF2.7
7124:  MOVLW  04
7126:  MOVWF  x0B
7128:  MOVLW  EA
712A:  MOVWF  x0A
712C:  CLRF   x0C
712E:  MOVLW  1E
7130:  MOVWF  x0D
7132:  CLRF   x0E
7134:  MOVLW  02
7136:  MOVWF  x0F
7138:  MOVLB  0
713A:  CALL   16E2
....................          glcd_update();} 
713E:  CALL   110E
7142:  MOVLB  4
7144:  BRA    709E
....................       } 
....................    } 
7146:  MOVLB  0
7148:  GOTO   312C
.................... } 
714C:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
