CCS PCH C Compiler, Version 4.104, 5967               07-oct.-17 11:24

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclaves Vertical\Con Precamara\2017\Autoclave 85L\Autoclave Luker #004587664\Firmware V3.1\GLCD_Controller\GLCD_Controller.lst

               ROM used: 28080 bytes (86%)
                         Largest free fragment is 4684
               RAM used: 1289 (63%) at main() level
                         1343 (66%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2BF0
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0EC8
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0F96:  MOVLW  05
0F98:  MOVWF  FEA
0F9A:  MOVLW  06
0F9C:  MOVWF  FE9
0F9E:  MOVF   FEF,W
0FA0:  BZ    0FBE
0FA2:  MOVLW  0F
0FA4:  MOVWF  01
0FA6:  CLRF   00
0FA8:  DECFSZ 00,F
0FAA:  BRA    0FA8
0FAC:  DECFSZ 01,F
0FAE:  BRA    0FA6
0FB0:  MOVLW  8F
0FB2:  MOVWF  00
0FB4:  DECFSZ 00,F
0FB6:  BRA    0FB4
0FB8:  NOP   
0FBA:  DECFSZ FEF,F
0FBC:  BRA    0FA2
0FBE:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
190A:  MOVLW  08
190C:  MOVWF  01
190E:  MOVLW  11
1910:  MOVWF  00
1912:  DECFSZ 00,F
1914:  BRA    1912
1916:  BCF    F8A.1
1918:  BCF    F93.1
191A:  MOVLW  11
191C:  MOVWF  00
191E:  DECFSZ 00,F
1920:  BRA    191E
1922:  MOVLB  5
1924:  RLCF   x09,F
1926:  BCF    F8A.0
1928:  BTFSC  FD8.0
192A:  BSF    F93.0
192C:  BTFSS  FD8.0
192E:  BCF    F93.0
1930:  BSF    F93.1
1932:  BTFSS  F81.1
1934:  BRA    1932
1936:  DECFSZ 01,F
1938:  BRA    193C
193A:  BRA    1940
193C:  MOVLB  0
193E:  BRA    190E
1940:  MOVLW  11
1942:  MOVWF  00
1944:  DECFSZ 00,F
1946:  BRA    1944
1948:  BCF    F8A.1
194A:  BCF    F93.1
194C:  NOP   
194E:  BSF    F93.0
1950:  MOVLW  11
1952:  MOVWF  00
1954:  DECFSZ 00,F
1956:  BRA    1954
1958:  MOVLW  11
195A:  MOVWF  00
195C:  DECFSZ 00,F
195E:  BRA    195C
1960:  BSF    F93.1
1962:  BTFSS  F81.1
1964:  BRA    1962
1966:  CLRF   01
1968:  MOVLW  11
196A:  MOVWF  00
196C:  DECFSZ 00,F
196E:  BRA    196C
1970:  BTFSC  F81.0
1972:  BSF    01.0
1974:  BCF    F8A.1
1976:  BCF    F93.1
1978:  BCF    F8A.0
197A:  BCF    F93.0
197C:  MOVLB  0
197E:  RETLW  00
1980:  MOVLW  08
1982:  MOVLB  5
1984:  MOVWF  x09
1986:  MOVFF  00,50A
198A:  BSF    F93.0
198C:  MOVLW  11
198E:  MOVWF  00
1990:  DECFSZ 00,F
1992:  BRA    1990
1994:  BSF    F93.1
1996:  BTFSS  F81.1
1998:  BRA    1996
199A:  BTFSC  F81.0
199C:  BSF    FD8.0
199E:  BTFSS  F81.0
19A0:  BCF    FD8.0
19A2:  RLCF   01,F
19A4:  MOVLW  11
19A6:  MOVWF  00
19A8:  DECFSZ 00,F
19AA:  BRA    19A8
19AC:  BCF    F93.1
19AE:  BCF    F8A.1
19B0:  DECFSZ x09,F
19B2:  BRA    198A
19B4:  BSF    F93.0
19B6:  MOVLW  11
19B8:  MOVWF  00
19BA:  DECFSZ 00,F
19BC:  BRA    19BA
19BE:  BCF    F8A.0
19C0:  MOVF   x0A,W
19C2:  BTFSS  FD8.2
19C4:  BCF    F93.0
19C6:  NOP   
19C8:  BSF    F93.1
19CA:  BTFSS  F81.1
19CC:  BRA    19CA
19CE:  MOVLW  11
19D0:  MOVWF  00
19D2:  DECFSZ 00,F
19D4:  BRA    19D2
19D6:  BCF    F8A.1
19D8:  BCF    F93.1
19DA:  MOVLW  11
19DC:  MOVWF  00
19DE:  DECFSZ 00,F
19E0:  BRA    19DE
19E2:  BCF    F8A.0
19E4:  BCF    F93.0
19E6:  MOVLB  0
19E8:  GOTO   1F46 (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
1112:  BCF    F93.2
1114:  BSF    F8A.2
....................    output_low(GLCD_E); 
1116:  BCF    F93.7
1118:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
111A:  BCF    F93.3
111C:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
111E:  BCF    F93.4
1120:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
1122:  BCF    F93.5
1124:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1126:  MOVLB  5
1128:  CLRF   x1B
112A:  MOVLW  C0
112C:  MOVWF  x1C
112E:  MOVLB  0
1130:  RCALL  0FC0
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1132:  MOVLW  01
1134:  MOVLB  5
1136:  MOVWF  x1B
1138:  MOVLW  C0
113A:  MOVWF  x1C
113C:  MOVLB  0
113E:  RCALL  0FC0
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
1140:  MOVLB  5
1142:  CLRF   x1B
1144:  MOVLW  40
1146:  MOVWF  x1C
1148:  MOVLB  0
114A:  RCALL  0FC0
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
114C:  MOVLW  01
114E:  MOVLB  5
1150:  MOVWF  x1B
1152:  MOVLW  40
1154:  MOVWF  x1C
1156:  MOVLB  0
1158:  RCALL  0FC0
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
115A:  MOVLB  5
115C:  CLRF   x1B
115E:  MOVLW  B8
1160:  MOVWF  x1C
1162:  MOVLB  0
1164:  RCALL  0FC0
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
1166:  MOVLW  01
1168:  MOVLB  5
116A:  MOVWF  x1B
116C:  MOVLW  B8
116E:  MOVWF  x1C
1170:  MOVLB  0
1172:  RCALL  0FC0
....................  
....................    if(mode == ON) 
1174:  MOVLB  5
1176:  DECFSZ x05,W
1178:  BRA    1196
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
117A:  CLRF   x1B
117C:  MOVLW  3F
117E:  MOVWF  x1C
1180:  MOVLB  0
1182:  RCALL  0FC0
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1184:  MOVLW  01
1186:  MOVLB  5
1188:  MOVWF  x1B
118A:  MOVLW  3F
118C:  MOVWF  x1C
118E:  MOVLB  0
1190:  RCALL  0FC0
....................    } 
....................    else 
1192:  BRA    11AE
1194:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
1196:  CLRF   x1B
1198:  MOVLW  3E
119A:  MOVWF  x1C
119C:  MOVLB  0
119E:  RCALL  0FC0
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
11A0:  MOVLW  01
11A2:  MOVLB  5
11A4:  MOVWF  x1B
11A6:  MOVLW  3E
11A8:  MOVWF  x1C
11AA:  MOVLB  0
11AC:  RCALL  0FC0
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
11AE:  MOVLB  5
11B0:  CLRF   x06
11B2:  MOVLB  0
11B4:  RCALL  1000
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
11B6:  RCALL  105A
....................    #endif 
.................... } 
11B8:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
105A:  MOVLB  5
105C:  CLRF   x17
105E:  MOVLW  16
1060:  MOVWF  x16
....................    p2 = displayData.right; 
1062:  MOVLW  02
1064:  MOVWF  x19
1066:  MOVLW  16
1068:  MOVWF  x18
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
106A:  CLRF   x14
106C:  MOVF   x14,W
106E:  SUBLW  07
1070:  BNC   110E
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1072:  BCF    F93.5
1074:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
1076:  CLRF   x1B
1078:  MOVLW  40
107A:  MOVWF  x1C
107C:  MOVLB  0
107E:  RCALL  0FC0
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1080:  MOVLW  01
1082:  MOVLB  5
1084:  MOVWF  x1B
1086:  MOVLW  40
1088:  MOVWF  x1C
108A:  MOVLB  0
108C:  RCALL  0FC0
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
108E:  MOVLB  5
1090:  MOVF   x14,W
1092:  IORLW  B8
1094:  MOVWF  x1A
1096:  CLRF   x1B
1098:  MOVWF  x1C
109A:  MOVLB  0
109C:  RCALL  0FC0
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
109E:  MOVLB  5
10A0:  MOVF   x14,W
10A2:  IORLW  B8
10A4:  MOVWF  x1A
10A6:  MOVLW  01
10A8:  MOVWF  x1B
10AA:  MOVFF  51A,51C
10AE:  MOVLB  0
10B0:  RCALL  0FC0
....................       output_high(GLCD_DI);                     // Set for data 
10B2:  BCF    F93.5
10B4:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
10B6:  MOVLB  5
10B8:  CLRF   x15
10BA:  MOVF   x15,W
10BC:  SUBLW  3F
10BE:  BNC   110A
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
10C0:  MOVFF  517,03
10C4:  MOVF   x16,W
10C6:  INCF   x16,F
10C8:  BTFSC  FD8.2
10CA:  INCF   x17,F
10CC:  MOVWF  FE9
10CE:  MOVFF  03,FEA
10D2:  MOVFF  FEF,51A
10D6:  CLRF   x1B
10D8:  MOVFF  51A,51C
10DC:  MOVLB  0
10DE:  RCALL  0FC0
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
10E0:  MOVLB  5
10E2:  MOVFF  519,03
10E6:  MOVF   x18,W
10E8:  INCF   x18,F
10EA:  BTFSC  FD8.2
10EC:  INCF   x19,F
10EE:  MOVWF  FE9
10F0:  MOVFF  03,FEA
10F4:  MOVFF  FEF,51A
10F8:  MOVLW  01
10FA:  MOVWF  x1B
10FC:  MOVFF  51A,51C
1100:  MOVLB  0
1102:  RCALL  0FC0
....................       } 
1104:  MOVLB  5
1106:  INCF   x15,F
1108:  BRA    10BA
....................    } 
110A:  INCF   x14,F
110C:  BRA    106C
.................... } 
110E:  MOVLB  0
1110:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
11BA:  MOVLB  5
11BC:  CLRF   x3C
11BE:  RRCF   x37,W
11C0:  MOVWF  x3B
11C2:  RRCF   x3B,F
11C4:  RRCF   x3B,F
11C6:  MOVLW  1F
11C8:  ANDWF  x3B,F
....................    temp *= 64; 
11CA:  RLCF   x3B,F
11CC:  RLCF   x3C,F
11CE:  RLCF   x3B,F
11D0:  RLCF   x3C,F
11D2:  RLCF   x3B,F
11D4:  RLCF   x3C,F
11D6:  RLCF   x3B,F
11D8:  RLCF   x3C,F
11DA:  RLCF   x3B,F
11DC:  RLCF   x3C,F
11DE:  RLCF   x3B,F
11E0:  RLCF   x3C,F
11E2:  MOVLW  C0
11E4:  ANDWF  x3B,F
....................    temp += x; 
11E6:  MOVF   x36,W
11E8:  ADDWF  x3B,F
11EA:  MOVLW  00
11EC:  ADDWFC x3C,F
....................  
....................    if(x > 63) 
11EE:  MOVF   x36,W
11F0:  SUBLW  3F
11F2:  BC    120E
....................    { 
....................       p = displayData.right + temp - 64; 
11F4:  MOVLW  16
11F6:  ADDWF  x3B,W
11F8:  MOVWF  x3D
11FA:  MOVLW  02
11FC:  ADDWFC x3C,W
11FE:  MOVWF  x3E
1200:  MOVLW  40
1202:  SUBWF  x3D,W
1204:  MOVWF  x39
1206:  MOVLW  00
1208:  SUBWFB x3E,W
120A:  MOVWF  x3A
....................    } 
....................    else 
120C:  BRA    121A
....................    { 
....................       p = displayData.left + temp; 
120E:  MOVLW  16
1210:  ADDWF  x3B,W
1212:  MOVWF  x39
1214:  MOVLW  00
1216:  ADDWFC x3C,W
1218:  MOVWF  x3A
....................    } 
....................  
....................    if(color) 
121A:  MOVF   x38,F
121C:  BZ    1248
....................    { 
....................       bit_set(*p, y%8); 
121E:  MOVFF  53A,03
1222:  MOVFF  539,FE9
1226:  MOVFF  53A,FEA
122A:  MOVF   x37,W
122C:  ANDLW  07
122E:  MOVWF  x3D
1230:  MOVLW  01
1232:  MOVWF  00
1234:  MOVF   x3D,W
1236:  MOVWF  01
1238:  BZ    1242
123A:  BCF    FD8.0
123C:  RLCF   00,F
123E:  DECFSZ 01,F
1240:  BRA    123A
1242:  MOVF   00,W
1244:  IORWF  FEF,F
....................    } 
....................    else 
1246:  BRA    1272
....................    { 
....................       bit_clear(*p, y%8); 
1248:  MOVFF  53A,03
124C:  MOVFF  539,FE9
1250:  MOVFF  53A,FEA
1254:  MOVF   x37,W
1256:  ANDLW  07
1258:  MOVWF  x3D
125A:  MOVLW  01
125C:  MOVWF  00
125E:  MOVF   x3D,W
1260:  MOVWF  01
1262:  BZ    126C
1264:  BCF    FD8.0
1266:  RLCF   00,F
1268:  DECFSZ 01,F
126A:  BRA    1264
126C:  MOVF   00,W
126E:  XORLW  FF
1270:  ANDWF  FEF,F
....................    } 
.................... } 
1272:  MOVLB  0
1274:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
1000:  MOVLB  5
1002:  CLRF   x09
1004:  MOVLW  16
1006:  MOVWF  x08
....................    p2 = displayData.right; 
1008:  MOVLW  02
100A:  MOVWF  x0B
100C:  MOVLW  16
100E:  MOVWF  x0A
....................    data = 0xFF * color; 
1010:  MOVF   x06,W
1012:  MULLW  FF
1014:  MOVFF  FF3,507
....................  
....................    for(i=0; i<512; ++i) 
1018:  CLRF   x0D
101A:  CLRF   x0C
101C:  MOVF   x0D,W
101E:  SUBLW  01
1020:  BNC   1056
....................    { 
....................       *p1++ = data; 
1022:  MOVFF  509,03
1026:  MOVF   x08,W
1028:  INCF   x08,F
102A:  BTFSC  FD8.2
102C:  INCF   x09,F
102E:  MOVWF  FE9
1030:  MOVFF  03,FEA
1034:  MOVFF  507,FEF
....................       *p2++ = data; 
1038:  MOVFF  50B,03
103C:  MOVF   x0A,W
103E:  INCF   x0A,F
1040:  BTFSC  FD8.2
1042:  INCF   x0B,F
1044:  MOVWF  FE9
1046:  MOVFF  03,FEA
104A:  MOVFF  507,FEF
....................    } 
104E:  INCF   x0C,F
1050:  BTFSC  FD8.2
1052:  INCF   x0D,F
1054:  BRA    101C
.................... } 
1056:  MOVLB  0
1058:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0FC0:  MOVLB  5
0FC2:  MOVF   x1B,F
0FC4:  BZ    0FCC
....................       output_high(GLCD_CS2); 
0FC6:  BCF    F93.4
0FC8:  BSF    F8A.4
....................    else 
0FCA:  BRA    0FD0
....................       output_high(GLCD_CS1); 
0FCC:  BCF    F93.3
0FCE:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0FD0:  BCF    F93.6
0FD2:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0FD4:  CLRF   F95
0FD6:  MOVFF  51C,F8C
....................    delay_cycles(50); 
0FDA:  MOVLW  10
0FDC:  MOVWF  00
0FDE:  DECFSZ 00,F
0FE0:  BRA    0FDE
0FE2:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0FE4:  BCF    F93.7
0FE6:  BSF    F8A.7
....................    delay_cycles(250); 
0FE8:  MOVLW  53
0FEA:  MOVWF  00
0FEC:  DECFSZ 00,F
0FEE:  BRA    0FEC
....................    output_low(GLCD_E); 
0FF0:  BCF    F93.7
0FF2:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0FF4:  BCF    F93.3
0FF6:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0FF8:  BCF    F93.4
0FFA:  BCF    F8A.4
.................... } 
0FFC:  MOVLB  0
0FFE:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
142E:  MOVLW  01
1430:  MOVLB  5
1432:  MOVWF  x2F
1434:  MOVWF  x30
1436:  CLRF   x35
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
1438:  MOVF   x26,W
143A:  SUBWF  x28,W
143C:  MOVWF  x36
143E:  MOVF   x36,W
1440:  BTFSS  x36.7
1442:  BRA    144A
1444:  MOVLW  00
1446:  BSF    FD8.0
1448:  SUBFWB x36,W
144A:  CLRF   03
144C:  MOVWF  x2D
144E:  MOVFF  03,52E
....................    dy = abs((signed int8)(y2 - y1)); 
1452:  MOVF   x27,W
1454:  SUBWF  x29,W
1456:  MOVWF  x36
1458:  MOVF   x36,W
145A:  BTFSS  x36.7
145C:  BRA    1464
145E:  MOVLW  00
1460:  BSF    FD8.0
1462:  SUBFWB x36,W
1464:  CLRF   03
1466:  MOVWF  x2B
1468:  MOVFF  03,52C
....................    #endif 
....................  
....................    if(x1 > x2) 
146C:  MOVF   x26,W
146E:  SUBWF  x28,W
1470:  BC    1476
....................       addx = -1; 
1472:  MOVLW  FF
1474:  MOVWF  x2F
....................    if(y1 > y2) 
1476:  MOVF   x27,W
1478:  SUBWF  x29,W
147A:  BC    1480
....................       addy = -1; 
147C:  MOVLW  FF
147E:  MOVWF  x30
....................  
....................    if(dx >= dy) 
1480:  MOVF   x2C,W
1482:  SUBWF  x2E,W
1484:  BNC   14FC
1486:  BNZ   148E
1488:  MOVF   x2B,W
148A:  SUBWF  x2D,W
148C:  BNC   14FC
....................    { 
....................       dy *= 2; 
148E:  BCF    FD8.0
1490:  RLCF   x2B,F
1492:  RLCF   x2C,F
....................       P = dy - dx; 
1494:  MOVF   x2D,W
1496:  SUBWF  x2B,W
1498:  MOVWF  00
149A:  MOVF   x2E,W
149C:  SUBWFB x2C,W
149E:  MOVFF  00,531
14A2:  MOVWF  x32
....................       diff = P - dx; 
14A4:  MOVF   x2D,W
14A6:  SUBWF  x31,W
14A8:  MOVWF  x33
14AA:  MOVF   x2E,W
14AC:  SUBWFB x32,W
14AE:  MOVWF  x34
....................  
....................       for(; i<=dx; ++i) 
14B0:  MOVF   x2E,F
14B2:  BNZ   14BA
14B4:  MOVF   x35,W
14B6:  SUBWF  x2D,W
14B8:  BNC   14FA
....................       { 
....................          glcd_pixel(x1, y1, color); 
14BA:  MOVFF  526,536
14BE:  MOVFF  527,537
14C2:  MOVFF  52A,538
14C6:  MOVLB  0
14C8:  RCALL  11BA
....................  
....................          if(P < 0) 
14CA:  MOVLB  5
14CC:  BTFSC  x32.7
14CE:  BRA    14D2
14D0:  BRA    14E2
....................          { 
....................             P  += dy; 
14D2:  MOVF   x2B,W
14D4:  ADDWF  x31,F
14D6:  MOVF   x2C,W
14D8:  ADDWFC x32,F
....................             x1 += addx; 
14DA:  MOVF   x2F,W
14DC:  ADDWF  x26,W
14DE:  MOVWF  x26
....................          } 
....................          else 
14E0:  BRA    14F6
....................          { 
....................             P  += diff; 
14E2:  MOVF   x33,W
14E4:  ADDWF  x31,F
14E6:  MOVF   x34,W
14E8:  ADDWFC x32,F
....................             x1 += addx; 
14EA:  MOVF   x2F,W
14EC:  ADDWF  x26,W
14EE:  MOVWF  x26
....................             y1 += addy; 
14F0:  MOVF   x30,W
14F2:  ADDWF  x27,W
14F4:  MOVWF  x27
....................          } 
....................       } 
14F6:  INCF   x35,F
14F8:  BRA    14B0
....................    } 
....................    else 
14FA:  BRA    1568
....................    { 
....................       dx *= 2; 
14FC:  BCF    FD8.0
14FE:  RLCF   x2D,F
1500:  RLCF   x2E,F
....................       P = dx - dy; 
1502:  MOVF   x2B,W
1504:  SUBWF  x2D,W
1506:  MOVWF  00
1508:  MOVF   x2C,W
150A:  SUBWFB x2E,W
150C:  MOVFF  00,531
1510:  MOVWF  x32
....................       diff = P - dy; 
1512:  MOVF   x2B,W
1514:  SUBWF  x31,W
1516:  MOVWF  x33
1518:  MOVF   x2C,W
151A:  SUBWFB x32,W
151C:  MOVWF  x34
....................  
....................       for(; i<=dy; ++i) 
151E:  MOVF   x2C,F
1520:  BNZ   1528
1522:  MOVF   x35,W
1524:  SUBWF  x2B,W
1526:  BNC   1568
....................       { 
....................          glcd_pixel(x1, y1, color); 
1528:  MOVFF  526,536
152C:  MOVFF  527,537
1530:  MOVFF  52A,538
1534:  MOVLB  0
1536:  RCALL  11BA
....................  
....................          if(P < 0) 
1538:  MOVLB  5
153A:  BTFSC  x32.7
153C:  BRA    1540
153E:  BRA    1550
....................          { 
....................             P  += dx; 
1540:  MOVF   x2D,W
1542:  ADDWF  x31,F
1544:  MOVF   x2E,W
1546:  ADDWFC x32,F
....................             y1 += addy; 
1548:  MOVF   x30,W
154A:  ADDWF  x27,W
154C:  MOVWF  x27
....................          } 
....................          else 
154E:  BRA    1564
....................          { 
....................             P  += diff; 
1550:  MOVF   x33,W
1552:  ADDWF  x31,F
1554:  MOVF   x34,W
1556:  ADDWFC x32,F
....................             x1 += addx; 
1558:  MOVF   x2F,W
155A:  ADDWF  x26,W
155C:  MOVWF  x26
....................             y1 += addy; 
155E:  MOVF   x30,W
1560:  ADDWF  x27,W
1562:  MOVWF  x27
....................          } 
....................       } 
1564:  INCF   x35,F
1566:  BRA    151E
....................    } 
.................... } 
1568:  MOVLB  0
156A:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
156C:  MOVLB  5
156E:  MOVF   x1F,F
1570:  BZ    15CE
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1572:  MOVF   x1D,W
1574:  SUBWF  x1B,W
1576:  BC    1582
....................       { 
....................          xmin = x1; 
1578:  MOVFF  51B,522
....................          xmax = x2; 
157C:  MOVFF  51D,523
....................       } 
....................       else 
1580:  BRA    158A
....................       { 
....................          xmin = x2; 
1582:  MOVFF  51D,522
....................          xmax = x1; 
1586:  MOVFF  51B,523
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
158A:  MOVF   x1E,W
158C:  SUBWF  x1C,W
158E:  BC    159A
....................       { 
....................          ymin = y1; 
1590:  MOVFF  51C,524
....................          ymax = y2; 
1594:  MOVFF  51E,525
....................       } 
....................       else 
1598:  BRA    15A2
....................       { 
....................          ymin = y2; 
159A:  MOVFF  51E,524
....................          ymax = y1; 
159E:  MOVFF  51C,525
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
15A2:  MOVF   x22,W
15A4:  SUBWF  x23,W
15A6:  BNC   15CC
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
15A8:  MOVFF  524,521
15AC:  MOVF   x21,W
15AE:  SUBWF  x25,W
15B0:  BNC   15C8
....................          { 
....................             glcd_pixel(xmin, i, color); 
15B2:  MOVFF  522,536
15B6:  MOVFF  521,537
15BA:  MOVFF  520,538
15BE:  MOVLB  0
15C0:  RCALL  11BA
....................          } 
15C2:  MOVLB  5
15C4:  INCF   x21,F
15C6:  BRA    15AC
....................       } 
15C8:  INCF   x22,F
15CA:  BRA    15A2
....................    } 
....................    else 
15CC:  BRA    162A
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
15CE:  MOVFF  51B,526
15D2:  MOVFF  51C,527
15D6:  MOVFF  51D,528
15DA:  MOVFF  51C,529
15DE:  MOVFF  520,52A
15E2:  MOVLB  0
15E4:  RCALL  142E
....................       glcd_line(x1, y2, x2, y2, color); 
15E6:  MOVFF  51B,526
15EA:  MOVFF  51E,527
15EE:  MOVFF  51D,528
15F2:  MOVFF  51E,529
15F6:  MOVFF  520,52A
15FA:  RCALL  142E
....................       glcd_line(x1, y1, x1, y2, color); 
15FC:  MOVFF  51B,526
1600:  MOVFF  51C,527
1604:  MOVFF  51B,528
1608:  MOVFF  51E,529
160C:  MOVFF  520,52A
1610:  RCALL  142E
....................       glcd_line(x2, y1, x2, y2, color); 
1612:  MOVFF  51D,526
1616:  MOVFF  51C,527
161A:  MOVFF  51D,528
161E:  MOVFF  51E,529
1622:  MOVFF  520,52A
1626:  RCALL  142E
1628:  MOVLB  5
....................    } 
.................... } 
162A:  MOVLB  0
162C:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2176:  MOVLB  5
2178:  CLRF   x0A
....................    b = radius; 
217A:  MOVFF  507,50B
....................    P = 1 - radius; 
217E:  MOVLW  01
2180:  BSF    FD8.0
2182:  SUBFWB x07,W
2184:  MOVWF  x0C
....................  
....................    do 
....................    { 
....................       if(fill) 
2186:  MOVF   x08,F
2188:  BZ    2254
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
218A:  MOVF   x0A,W
218C:  SUBWF  x05,W
218E:  MOVWF  x0D
2190:  MOVF   x0B,W
2192:  ADDWF  x06,W
2194:  MOVWF  x0E
2196:  MOVF   x0A,W
2198:  ADDWF  x05,W
219A:  MOVWF  x0F
219C:  MOVF   x0B,W
219E:  ADDWF  x06,W
21A0:  MOVWF  x10
21A2:  MOVFF  50D,526
21A6:  MOVFF  50E,527
21AA:  MOVFF  50F,528
21AE:  MOVWF  x29
21B0:  MOVFF  509,52A
21B4:  MOVLB  0
21B6:  CALL   142E
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
21BA:  MOVLB  5
21BC:  MOVF   x0A,W
21BE:  SUBWF  x05,W
21C0:  MOVWF  x0D
21C2:  MOVF   x0B,W
21C4:  SUBWF  x06,W
21C6:  MOVWF  x0E
21C8:  MOVF   x0A,W
21CA:  ADDWF  x05,W
21CC:  MOVWF  x0F
21CE:  MOVF   x0B,W
21D0:  SUBWF  x06,W
21D2:  MOVWF  x10
21D4:  MOVFF  50D,526
21D8:  MOVFF  50E,527
21DC:  MOVFF  50F,528
21E0:  MOVWF  x29
21E2:  MOVFF  509,52A
21E6:  MOVLB  0
21E8:  CALL   142E
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
21EC:  MOVLB  5
21EE:  MOVF   x0B,W
21F0:  SUBWF  x05,W
21F2:  MOVWF  x0D
21F4:  MOVF   x0A,W
21F6:  ADDWF  x06,W
21F8:  MOVWF  x0E
21FA:  MOVF   x0B,W
21FC:  ADDWF  x05,W
21FE:  MOVWF  x0F
2200:  MOVF   x0A,W
2202:  ADDWF  x06,W
2204:  MOVWF  x10
2206:  MOVFF  50D,526
220A:  MOVFF  50E,527
220E:  MOVFF  50F,528
2212:  MOVWF  x29
2214:  MOVFF  509,52A
2218:  MOVLB  0
221A:  CALL   142E
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
221E:  MOVLB  5
2220:  MOVF   x0B,W
2222:  SUBWF  x05,W
2224:  MOVWF  x0D
2226:  MOVF   x0A,W
2228:  SUBWF  x06,W
222A:  MOVWF  x0E
222C:  MOVF   x0B,W
222E:  ADDWF  x05,W
2230:  MOVWF  x0F
2232:  MOVF   x0A,W
2234:  SUBWF  x06,W
2236:  MOVWF  x10
2238:  MOVFF  50D,526
223C:  MOVFF  50E,527
2240:  MOVFF  50F,528
2244:  MOVWF  x29
2246:  MOVFF  509,52A
224A:  MOVLB  0
224C:  CALL   142E
....................       } 
....................       else 
2250:  BRA    2342
2252:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2254:  MOVF   x05,W
2256:  ADDWF  x0A,W
2258:  MOVWF  x0D
225A:  MOVF   x06,W
225C:  ADDWF  x0B,W
225E:  MOVWF  x0E
2260:  MOVFF  50D,536
2264:  MOVWF  x37
2266:  MOVFF  509,538
226A:  MOVLB  0
226C:  CALL   11BA
....................          glcd_pixel(b+x, a+y, color); 
2270:  MOVLB  5
2272:  MOVF   x05,W
2274:  ADDWF  x0B,W
2276:  MOVWF  x0D
2278:  MOVF   x06,W
227A:  ADDWF  x0A,W
227C:  MOVWF  x0E
227E:  MOVFF  50D,536
2282:  MOVWF  x37
2284:  MOVFF  509,538
2288:  MOVLB  0
228A:  CALL   11BA
....................          glcd_pixel(x-a, b+y, color); 
228E:  MOVLB  5
2290:  MOVF   x0A,W
2292:  SUBWF  x05,W
2294:  MOVWF  x0D
2296:  MOVF   x06,W
2298:  ADDWF  x0B,W
229A:  MOVWF  x0E
229C:  MOVFF  50D,536
22A0:  MOVWF  x37
22A2:  MOVFF  509,538
22A6:  MOVLB  0
22A8:  CALL   11BA
....................          glcd_pixel(x-b, a+y, color); 
22AC:  MOVLB  5
22AE:  MOVF   x0B,W
22B0:  SUBWF  x05,W
22B2:  MOVWF  x0D
22B4:  MOVF   x06,W
22B6:  ADDWF  x0A,W
22B8:  MOVWF  x0E
22BA:  MOVFF  50D,536
22BE:  MOVWF  x37
22C0:  MOVFF  509,538
22C4:  MOVLB  0
22C6:  CALL   11BA
....................          glcd_pixel(b+x, y-a, color); 
22CA:  MOVLB  5
22CC:  MOVF   x05,W
22CE:  ADDWF  x0B,W
22D0:  MOVWF  x0D
22D2:  MOVF   x0A,W
22D4:  SUBWF  x06,W
22D6:  MOVWF  x0E
22D8:  MOVFF  50D,536
22DC:  MOVWF  x37
22DE:  MOVFF  509,538
22E2:  MOVLB  0
22E4:  CALL   11BA
....................          glcd_pixel(a+x, y-b, color); 
22E8:  MOVLB  5
22EA:  MOVF   x05,W
22EC:  ADDWF  x0A,W
22EE:  MOVWF  x0D
22F0:  MOVF   x0B,W
22F2:  SUBWF  x06,W
22F4:  MOVWF  x0E
22F6:  MOVFF  50D,536
22FA:  MOVWF  x37
22FC:  MOVFF  509,538
2300:  MOVLB  0
2302:  CALL   11BA
....................          glcd_pixel(x-a, y-b, color); 
2306:  MOVLB  5
2308:  MOVF   x0A,W
230A:  SUBWF  x05,W
230C:  MOVWF  x0D
230E:  MOVF   x0B,W
2310:  SUBWF  x06,W
2312:  MOVWF  x0E
2314:  MOVFF  50D,536
2318:  MOVWF  x37
231A:  MOVFF  509,538
231E:  MOVLB  0
2320:  CALL   11BA
....................          glcd_pixel(x-b, y-a, color); 
2324:  MOVLB  5
2326:  MOVF   x0B,W
2328:  SUBWF  x05,W
232A:  MOVWF  x0D
232C:  MOVF   x0A,W
232E:  SUBWF  x06,W
2330:  MOVWF  x0E
2332:  MOVFF  50D,536
2336:  MOVWF  x37
2338:  MOVFF  509,538
233C:  MOVLB  0
233E:  CALL   11BA
....................       } 
....................  
....................       if(P < 0) 
2342:  MOVLB  5
2344:  BTFSC  x0C.7
2346:  BRA    234A
2348:  BRA    2366
....................          P += 3 + 2 * a++; 
234A:  MOVF   x0A,W
234C:  INCF   x0A,F
234E:  MOVWF  x0D
2350:  MOVLW  02
2352:  MOVWF  x0E
2354:  MOVFF  50D,50F
2358:  MOVLB  0
235A:  RCALL  2128
235C:  MOVF   01,W
235E:  ADDLW  03
2360:  MOVLB  5
2362:  ADDWF  x0C,F
....................       else 
2364:  BRA    2388
....................          P += 5 + 2 * (a++ - b--); 
2366:  MOVF   x0A,W
2368:  INCF   x0A,F
236A:  MOVWF  x0D
236C:  MOVF   x0B,W
236E:  DECF   x0B,F
2370:  SUBWF  x0D,W
2372:  MOVWF  x0D
2374:  MOVLW  02
2376:  MOVWF  x0E
2378:  MOVFF  50D,50F
237C:  MOVLB  0
237E:  RCALL  2128
2380:  MOVF   01,W
2382:  ADDLW  05
2384:  MOVLB  5
2386:  ADDWF  x0C,F
....................     } while(a <= b); 
2388:  MOVF   x0A,W
238A:  XORLW  80
238C:  MOVWF  00
238E:  MOVF   x0B,W
2390:  XORLW  80
2392:  SUBWF  00,W
2394:  BTFSC  FD8.2
2396:  BRA    2186
2398:  BTFSS  FD8.0
239A:  BRA    2186
.................... } 
239C:  MOVLB  0
239E:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
1276:  MOVFF  51C,03
127A:  MOVLB  5
127C:  MOVFF  51B,FE9
1280:  MOVFF  51C,FEA
1284:  MOVF   FEF,F
1286:  BTFSC  FD8.2
1288:  BRA    142A
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
128A:  MOVFF  51C,03
128E:  MOVFF  51B,FE9
1292:  MOVFF  51C,FEA
1296:  MOVF   FEF,W
1298:  SUBLW  52
129A:  BNC   12EA
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
129C:  MOVFF  51C,03
12A0:  MOVFF  51B,FE9
12A4:  MOVFF  51C,FEA
12A8:  MOVLW  20
12AA:  SUBWF  FEF,W
12AC:  MULLW  05
12AE:  MOVF   FF3,W
12B0:  CLRF   03
12B2:  MOVWF  x28
12B4:  MOVLW  05
12B6:  MOVWF  FEA
12B8:  MOVLW  23
12BA:  MOVWF  FE9
12BC:  CLRF   x2C
12BE:  MOVFF  528,52B
12C2:  MOVFF  FF2,529
12C6:  BCF    FF2.7
12C8:  MOVLW  05
12CA:  MOVWF  01
12CC:  CLRF   FF7
12CE:  MOVF   x28,W
12D0:  MOVLB  0
12D2:  CALL   0096
12D6:  TBLRD*-
12D8:  TBLRD*+
12DA:  MOVFF  FF5,FEE
12DE:  DECFSZ 01,F
12E0:  BRA    12D8
12E2:  MOVLB  5
12E4:  BTFSC  x29.7
12E6:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
12E8:  BRA    1354
12EA:  MOVFF  51C,03
12EE:  MOVFF  51B,FE9
12F2:  MOVFF  51C,FEA
12F6:  MOVF   FEF,W
12F8:  SUBLW  7E
12FA:  BNC   134A
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
12FC:  MOVFF  51C,03
1300:  MOVFF  51B,FE9
1304:  MOVFF  51C,FEA
1308:  MOVLW  53
130A:  SUBWF  FEF,W
130C:  MULLW  05
130E:  MOVF   FF3,W
1310:  CLRF   03
1312:  MOVWF  x28
1314:  MOVLW  05
1316:  MOVWF  FEA
1318:  MOVLW  23
131A:  MOVWF  FE9
131C:  CLRF   x2C
131E:  MOVFF  528,52B
1322:  MOVFF  FF2,529
1326:  BCF    FF2.7
1328:  MOVLW  05
132A:  MOVWF  01
132C:  CLRF   FF7
132E:  MOVF   x28,W
1330:  MOVLB  0
1332:  CALL   01B0
1336:  TBLRD*-
1338:  TBLRD*+
133A:  MOVFF  FF5,FEE
133E:  DECFSZ 01,F
1340:  BRA    1338
1342:  MOVLB  5
1344:  BTFSC  x29.7
1346:  BSF    FF2.7
....................       else 
1348:  BRA    1354
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
134A:  CLRF   x23
134C:  CLRF   x24
134E:  CLRF   x25
1350:  CLRF   x26
1352:  CLRF   x27
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1354:  MOVFF  51C,03
1358:  MOVF   x1B,W
135A:  MOVWF  FE9
135C:  MOVFF  03,FEA
1360:  MOVF   FEF,W
1362:  XORLW  0A
1364:  MOVLB  0
1366:  BZ    136E
1368:  XORLW  07
136A:  BZ    137E
136C:  BRA    1384
....................          case '\n': 
....................             y += 7*size + 1; 
136E:  MOVLB  5
1370:  MOVF   x1D,W
1372:  MULLW  07
1374:  MOVF   FF3,W
1376:  ADDLW  01
1378:  ADDWF  x1A,F
....................             continue; 
137A:  BRA    141C
137C:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
137E:  MOVLB  5
1380:  CLRF   x19
....................             continue; 
1382:  BRA    141C
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1384:  MOVLB  5
1386:  MOVF   x1D,W
1388:  MULLW  05
138A:  MOVF   FF3,W
138C:  ADDWF  x19,W
138E:  SUBLW  7F
1390:  BC    139E
....................       { 
....................          x = 0;                           // Set x at far left position 
1392:  CLRF   x19
....................          y += 7*size + 1;                 // Set y at next position down 
1394:  MOVF   x1D,W
1396:  MULLW  07
1398:  MOVF   FF3,W
139A:  ADDLW  01
139C:  ADDWF  x1A,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
139E:  CLRF   x1F
13A0:  MOVF   x1F,W
13A2:  SUBLW  04
13A4:  BNC   141C
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
13A6:  CLRF   x20
13A8:  MOVF   x20,W
13AA:  SUBLW  06
13AC:  BNC   1414
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
13AE:  CLRF   03
13B0:  MOVF   x1F,W
13B2:  ADDLW  23
13B4:  MOVWF  FE9
13B6:  MOVLW  05
13B8:  ADDWFC 03,W
13BA:  MOVWF  FEA
13BC:  MOVFF  FEF,528
13C0:  MOVFF  528,00
13C4:  MOVF   x20,W
13C6:  MOVWF  01
13C8:  BZ    13D2
13CA:  BCF    FD8.0
13CC:  RRCF   00,F
13CE:  DECFSZ 01,F
13D0:  BRA    13CA
13D2:  BTFSS  00.0
13D4:  BRA    1410
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
13D6:  CLRF   x21
13D8:  MOVF   x1D,W
13DA:  SUBWF  x21,W
13DC:  BC    1410
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
13DE:  CLRF   x22
13E0:  MOVF   x1D,W
13E2:  SUBWF  x22,W
13E4:  BC    140C
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
13E6:  MOVF   x22,W
13E8:  ADDWF  x19,W
13EA:  MOVWF  x28
13EC:  MOVF   x20,W
13EE:  MULWF  x1D
13F0:  MOVF   FF3,W
13F2:  ADDWF  x1A,W
13F4:  ADDWF  x21,W
13F6:  MOVWF  x29
13F8:  MOVFF  528,536
13FC:  MOVWF  x37
13FE:  MOVFF  51E,538
1402:  MOVLB  0
1404:  RCALL  11BA
....................                   } 
1406:  MOVLB  5
1408:  INCF   x22,F
140A:  BRA    13E0
....................                } 
140C:  INCF   x21,F
140E:  BRA    13D8
....................             } 
....................          } 
1410:  INCF   x20,F
1412:  BRA    13A8
....................       } 
1414:  INCF   x1F,F
1416:  MOVF   x1D,W
1418:  ADDWF  x19,F
141A:  BRA    13A0
....................    } 
141C:  INCF   x1B,F
141E:  BTFSC  FD8.2
1420:  INCF   x1C,F
1422:  INCF   x19,F
1424:  MOVLB  0
1426:  BRA    1276
1428:  MOVLB  5
.................... } 
142A:  MOVLB  0
142C:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0,PresionCamara=0,PresionPreCamara=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
162E:  MOVLB  5
1630:  MOVFF  505,01
1634:  MOVFF  506,03
1638:  MOVFF  505,50B
163C:  MOVFF  506,50C
1640:  MOVLW  04
1642:  MOVWF  FEA
1644:  MOVLW  E5
1646:  MOVWF  FE9
1648:  MOVFF  506,FE2
164C:  MOVFF  505,FE1
1650:  MOVF   FE7,F
1652:  MOVFF  FE6,FEE
1656:  BNZ   1650
....................    if(sombreado==2) 
1658:  MOVF   x09,W
165A:  SUBLW  02
165C:  BNZ   1686
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
165E:  MOVLW  01
1660:  ADDWF  x07,W
1662:  MOVWF  x0B
1664:  MOVLW  01
1666:  ADDWF  x08,W
1668:  MOVWF  x0C
166A:  MOVFF  50B,519
166E:  MOVWF  x1A
1670:  MOVLW  04
1672:  MOVWF  x1C
1674:  MOVLW  E5
1676:  MOVWF  x1B
1678:  MOVFF  50A,51D
167C:  MOVLW  01
167E:  MOVWF  x1E
1680:  MOVLB  0
1682:  RCALL  1276
1684:  MOVLB  5
....................    if(sombreado==1) 
1686:  DECFSZ x09,W
1688:  BRA    16D4
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
168A:  MOVF   x0A,W
168C:  MULLW  08
168E:  MOVF   FF3,W
1690:  ADDWF  x08,W
1692:  MOVWF  x0B
1694:  CLRF   x1B
1696:  MOVFF  508,51C
169A:  MOVLW  7F
169C:  MOVWF  x1D
169E:  MOVFF  50B,51E
16A2:  MOVLW  01
16A4:  MOVWF  x1F
16A6:  MOVWF  x20
16A8:  MOVLB  0
16AA:  RCALL  156C
16AC:  MOVLW  01
16AE:  MOVLB  5
16B0:  ADDWF  x07,W
16B2:  MOVWF  x0B
16B4:  MOVLW  01
16B6:  ADDWF  x08,W
16B8:  MOVWF  x0C
16BA:  MOVFF  50B,519
16BE:  MOVWF  x1A
16C0:  MOVLW  04
16C2:  MOVWF  x1C
16C4:  MOVLW  E5
16C6:  MOVWF  x1B
16C8:  MOVFF  50A,51D
16CC:  CLRF   x1E
16CE:  MOVLB  0
16D0:  RCALL  1276
16D2:  MOVLB  5
....................    if(sombreado==0) 
16D4:  MOVF   x09,F
16D6:  BNZ   1722
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
16D8:  MOVF   x0A,W
16DA:  MULLW  08
16DC:  MOVF   FF3,W
16DE:  ADDWF  x08,W
16E0:  MOVWF  x0B
16E2:  CLRF   x1B
16E4:  MOVFF  508,51C
16E8:  MOVLW  7F
16EA:  MOVWF  x1D
16EC:  MOVFF  50B,51E
16F0:  MOVLW  01
16F2:  MOVWF  x1F
16F4:  CLRF   x20
16F6:  MOVLB  0
16F8:  RCALL  156C
16FA:  MOVLW  01
16FC:  MOVLB  5
16FE:  ADDWF  x07,W
1700:  MOVWF  x0B
1702:  MOVLW  01
1704:  ADDWF  x08,W
1706:  MOVWF  x0C
1708:  MOVFF  50B,519
170C:  MOVWF  x1A
170E:  MOVLW  04
1710:  MOVWF  x1C
1712:  MOVLW  E5
1714:  MOVWF  x1B
1716:  MOVFF  50A,51D
171A:  MOVLW  01
171C:  MOVWF  x1E
171E:  MOVLB  0
1720:  RCALL  1276
....................    glcd_update(); 
1722:  MOVLB  0
1724:  RCALL  105A
.................... } 
1726:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
2426:  MOVLB  5
2428:  MOVF   x09,W
242A:  SUBLW  02
242C:  BNZ   249E
....................    { 
....................       sprintf(voltage, "%03u", digito); 
242E:  MOVLW  05
2430:  MOVWF  x04
2432:  MOVLW  0B
2434:  MOVWF  x03
2436:  MOVFF  506,514
243A:  MOVLW  03
243C:  MOVWF  x15
243E:  MOVLB  0
2440:  RCALL  23A0
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2442:  MOVLB  5
2444:  MOVF   x0A,W
2446:  MULLW  12
2448:  MOVF   FF3,W
244A:  ADDWF  x07,W
244C:  MOVWF  x14
244E:  MOVF   x0A,W
2450:  MULLW  08
2452:  MOVF   FF3,W
2454:  ADDWF  x08,W
2456:  MOVWF  x15
2458:  MOVFF  507,51B
245C:  MOVFF  508,51C
2460:  MOVFF  514,51D
2464:  MOVWF  x1E
2466:  MOVLW  01
2468:  MOVWF  x1F
246A:  MOVWF  x20
246C:  MOVLB  0
246E:  CALL   156C
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2472:  MOVLW  01
2474:  MOVLB  5
2476:  ADDWF  x07,W
2478:  MOVWF  x14
247A:  MOVLW  01
247C:  ADDWF  x08,W
247E:  MOVWF  x15
2480:  MOVFF  514,519
2484:  MOVWF  x1A
2486:  MOVLW  05
2488:  MOVWF  x1C
248A:  MOVLW  0B
248C:  MOVWF  x1B
248E:  MOVFF  50A,51D
2492:  CLRF   x1E
2494:  MOVLB  0
2496:  CALL   1276
....................    } 
....................    else 
249A:  BRA    256C
249C:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
249E:  MOVLW  05
24A0:  MOVWF  x04
24A2:  MOVLW  0B
24A4:  MOVWF  x03
24A6:  MOVFF  506,514
24AA:  MOVLW  1B
24AC:  MOVWF  x15
24AE:  MOVLB  0
24B0:  RCALL  23A0
....................     
....................       if(sombreado==1) 
24B2:  MOVLB  5
24B4:  DECFSZ x09,W
24B6:  BRA    2510
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24B8:  MOVF   x0A,W
24BA:  MULLW  05
24BC:  MOVF   FF3,W
24BE:  ADDWF  x07,W
24C0:  MOVWF  x14
24C2:  MOVF   x0A,W
24C4:  MULLW  08
24C6:  MOVF   FF3,W
24C8:  ADDWF  x08,W
24CA:  MOVWF  x15
24CC:  MOVFF  507,51B
24D0:  MOVFF  508,51C
24D4:  MOVFF  514,51D
24D8:  MOVWF  x1E
24DA:  MOVLW  01
24DC:  MOVWF  x1F
24DE:  MOVWF  x20
24E0:  MOVLB  0
24E2:  CALL   156C
24E6:  MOVLW  01
24E8:  MOVLB  5
24EA:  ADDWF  x07,W
24EC:  MOVWF  x14
24EE:  MOVLW  01
24F0:  ADDWF  x08,W
24F2:  MOVWF  x15
24F4:  MOVFF  514,519
24F8:  MOVWF  x1A
24FA:  MOVLW  05
24FC:  MOVWF  x1C
24FE:  MOVLW  0B
2500:  MOVWF  x1B
2502:  MOVFF  50A,51D
2506:  CLRF   x1E
2508:  MOVLB  0
250A:  CALL   1276
250E:  MOVLB  5
....................       if(sombreado==0) 
2510:  MOVF   x09,F
2512:  BNZ   256E
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2514:  MOVF   x0A,W
2516:  MULLW  05
2518:  MOVF   FF3,W
251A:  ADDWF  x07,W
251C:  MOVWF  x14
251E:  MOVF   x0A,W
2520:  MULLW  08
2522:  MOVF   FF3,W
2524:  ADDWF  x08,W
2526:  MOVWF  x15
2528:  MOVFF  507,51B
252C:  MOVFF  508,51C
2530:  MOVFF  514,51D
2534:  MOVWF  x1E
2536:  MOVLW  01
2538:  MOVWF  x1F
253A:  CLRF   x20
253C:  MOVLB  0
253E:  CALL   156C
2542:  MOVLW  01
2544:  MOVLB  5
2546:  ADDWF  x07,W
2548:  MOVWF  x14
254A:  MOVLW  01
254C:  ADDWF  x08,W
254E:  MOVWF  x15
2550:  MOVFF  514,519
2554:  MOVWF  x1A
2556:  MOVLW  05
2558:  MOVWF  x1C
255A:  MOVLW  0B
255C:  MOVWF  x1B
255E:  MOVFF  50A,51D
2562:  MOVLW  01
2564:  MOVWF  x1E
2566:  MOVLB  0
2568:  CALL   1276
256C:  MOVLB  5
....................    } 
....................    glcd_update(); 
256E:  MOVLB  0
2570:  CALL   105A
.................... } 
2574:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
207A:  MOVLB  5
207C:  MOVF   x05,W
207E:  SUBLW  05
2080:  BNZ   2124
....................    for( i = 0 ; i < 64 ; i ++ ) 
2082:  CLRF   x06
2084:  MOVF   x06,W
2086:  SUBLW  3F
2088:  BNC   2124
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
208A:  CLRF   x07
208C:  MOVF   x07,W
208E:  SUBLW  0F
2090:  BNC   2120
....................       {     
....................          for(k=7;k>-1;k--) 
2092:  MOVLW  07
2094:  MOVWF  x08
2096:  MOVF   x08,W
2098:  XORLW  80
209A:  SUBLW  7F
209C:  BC    211C
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
209E:  CLRF   x0A
20A0:  MOVFF  506,509
20A4:  CLRF   x0C
20A6:  MOVLW  10
20A8:  MOVWF  x0B
20AA:  MOVLB  0
20AC:  BRA    2056
20AE:  MOVFF  02,50A
20B2:  MOVFF  01,509
20B6:  MOVLB  5
20B8:  MOVF   x07,W
20BA:  ADDWF  01,W
20BC:  MOVWF  01
20BE:  MOVLW  00
20C0:  ADDWFC 02,W
20C2:  MOVWF  03
20C4:  MOVF   01,W
20C6:  MOVFF  FF2,509
20CA:  BCF    FF2.7
20CC:  MOVFF  03,FF7
20D0:  MOVLB  0
20D2:  CALL   02A6
20D6:  MOVLB  5
20D8:  BTFSC  x09.7
20DA:  BSF    FF2.7
20DC:  MOVWF  x09
20DE:  MOVLW  07
20E0:  BSF    FD8.0
20E2:  SUBFWB x08,W
20E4:  MOVWF  x0A
20E6:  MOVFF  509,00
20EA:  MOVF   x0A,W
20EC:  MOVWF  01
20EE:  BZ    20F8
20F0:  BCF    FD8.0
20F2:  RRCF   00,F
20F4:  DECFSZ 01,F
20F6:  BRA    20F0
20F8:  BTFSS  00.0
20FA:  BRA    2118
....................                glcd_pixel( j*8+k,i, ON ); 
20FC:  MOVF   x07,W
20FE:  MULLW  08
2100:  MOVF   FF3,W
2102:  ADDWF  x08,W
2104:  MOVWF  x09
2106:  MOVWF  x36
2108:  MOVFF  506,537
210C:  MOVLW  01
210E:  MOVWF  x38
2110:  MOVLB  0
2112:  CALL   11BA
2116:  MOVLB  5
....................          }   
2118:  DECF   x08,F
211A:  BRA    2096
....................       } 
211C:  INCF   x07,F
211E:  BRA    208C
....................    } 
2120:  INCF   x06,F
2122:  BRA    2084
....................    } 
....................     
.................... } 
2124:  MOVLB  0
2126:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0EC8:  MOVLW  15
0ECA:  MOVWF  FCF
0ECC:  MOVLW  A0
0ECE:  MOVWF  FCE
....................    tiempos++; 
0ED0:  MOVLB  4
0ED2:  INCF   xAC,F
0ED4:  BTFSC  FD8.2
0ED6:  INCF   xAD,F
....................    tiempos3++; 
0ED8:  INCF   xAE,F
0EDA:  BTFSC  FD8.2
0EDC:  INCF   xAF,F
....................    tiempoctrl++; 
0EDE:  INCF   xB0,F
0EE0:  BTFSC  FD8.2
0EE2:  INCF   xB1,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0EE4:  MOVF   xAF,F
0EE6:  BNZ   0EEE
0EE8:  MOVF   xAE,W
0EEA:  SUBLW  27
0EEC:  BC    0F00
0EEE:  MOVF   xAA,W
0EF0:  SUBLW  02
0EF2:  BNZ   0F00
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0EF4:  CLRF   xAF
0EF6:  CLRF   xAE
0EF8:  BSF    x95.7
0EFA:  INCF   xB6,F
0EFC:  BTFSC  FD8.2
0EFE:  INCF   xB7,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0F00:  MOVF   xAC,W
0F02:  SUBLW  C8
0F04:  BNZ   0F8E
0F06:  MOVF   xAD,F
0F08:  BNZ   0F8E
....................    {tiempos=0;Lectura=1;tinicio++; 
0F0A:  CLRF   xAD
0F0C:  CLRF   xAC
0F0E:  BSF    x95.6
0F10:  INCF   xB8,F
0F12:  BTFSC  FD8.2
0F14:  INCF   xB9,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0F16:  DECFSZ xA8,W
0F18:  BRA    0F52
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0F1A:  INCF   xC2,F
....................       if(Testerilizacion[0]>9) 
0F1C:  BTFSC  xC2.7
0F1E:  BRA    0F2A
0F20:  MOVF   xC2,W
0F22:  SUBLW  09
0F24:  BC    0F2A
....................          {Testerilizacion[0]=0; 
0F26:  CLRF   xC2
....................           Testerilizacion[1]++;} 
0F28:  INCF   xC3,F
....................        if(Testerilizacion[1]>5) 
0F2A:  BTFSC  xC3.7
0F2C:  BRA    0F38
0F2E:  MOVF   xC3,W
0F30:  SUBLW  05
0F32:  BC    0F38
....................          {Testerilizacion[1]=0; 
0F34:  CLRF   xC3
....................           Testerilizacion[2]++;} 
0F36:  INCF   xC4,F
....................          if(Testerilizacion[2]>9) 
0F38:  BTFSC  xC4.7
0F3A:  BRA    0F46
0F3C:  MOVF   xC4,W
0F3E:  SUBLW  09
0F40:  BC    0F46
....................             {Testerilizacion[2]=0; 
0F42:  CLRF   xC4
....................              Testerilizacion[3]++;} 
0F44:  INCF   xC5,F
....................             if(Testerilizacion[3]>5) 
0F46:  BTFSC  xC5.7
0F48:  BRA    0F52
0F4A:  MOVF   xC5,W
0F4C:  SUBLW  05
0F4E:  BC    0F52
....................                {Testerilizacion[3]=0;} 
0F50:  CLRF   xC5
....................       }        
....................        
....................     if(tiempo_secado==1) 
0F52:  DECFSZ xA9,W
0F54:  BRA    0F8E
....................       { 
....................                       
....................       Tsecado[0]++; 
0F56:  INCF   xCA,F
....................       if(Tsecado[0]>9) 
0F58:  BTFSC  xCA.7
0F5A:  BRA    0F66
0F5C:  MOVF   xCA,W
0F5E:  SUBLW  09
0F60:  BC    0F66
....................          {Tsecado[0]=0; 
0F62:  CLRF   xCA
....................           Tsecado[1]++;} 
0F64:  INCF   xCB,F
....................        if(Tsecado[1]>5) 
0F66:  BTFSC  xCB.7
0F68:  BRA    0F74
0F6A:  MOVF   xCB,W
0F6C:  SUBLW  05
0F6E:  BC    0F74
....................          {Tsecado[1]=0; 
0F70:  CLRF   xCB
....................           Tsecado[2]++;} 
0F72:  INCF   xCC,F
....................          if(Tsecado[2]>9) 
0F74:  BTFSC  xCC.7
0F76:  BRA    0F82
0F78:  MOVF   xCC,W
0F7A:  SUBLW  09
0F7C:  BC    0F82
....................             {Tsecado[2]=0; 
0F7E:  CLRF   xCC
....................              Tsecado[3]++;} 
0F80:  INCF   xCD,F
....................             if(Tsecado[3]>5) 
0F82:  BTFSC  xCD.7
0F84:  BRA    0F8E
0F86:  MOVF   xCD,W
0F88:  SUBLW  05
0F8A:  BC    0F8E
....................                {Tsecado[3]=0;} 
0F8C:  CLRF   xCD
....................       }   
....................    } 
....................    } 
....................     
0F8E:  BCF    F9E.0
0F90:  MOVLB  0
0F92:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
26B6:  MOVLW  07
26B8:  MOVLB  5
26BA:  ADDWF  x07,W
26BC:  MOVWF  x08
26BE:  MOVFF  505,51B
26C2:  MOVFF  507,51C
26C6:  MOVFF  506,51D
26CA:  MOVWF  x1E
26CC:  MOVLW  01
26CE:  MOVWF  x1F
26D0:  CLRF   x20
26D2:  MOVLB  0
26D4:  CALL   156C
.................... } 
26D8:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.0f",adc); // Converts adc to text 
*
2A48:  MOVLW  05
2A4A:  MOVLB  5
2A4C:  MOVWF  x04
2A4E:  MOVLW  10
2A50:  MOVWF  x03
2A52:  MOVLW  42
2A54:  MOVWF  FE9
2A56:  MOVFF  50C,51C
2A5A:  MOVFF  50B,51B
2A5E:  MOVFF  50A,51A
2A62:  MOVFF  509,519
2A66:  CLRF   x1D
2A68:  MOVLB  0
2A6A:  RCALL  2896
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2A6C:  MOVLB  5
2A6E:  MOVF   x0F,W
2A70:  MULLW  1B
2A72:  MOVF   FF3,W
2A74:  ADDWF  x0D,W
2A76:  MOVWF  x19
2A78:  MOVF   x0F,W
2A7A:  MULLW  08
2A7C:  MOVF   FF3,W
2A7E:  ADDWF  x0E,W
2A80:  MOVWF  x1A
2A82:  MOVFF  50D,51B
2A86:  MOVFF  50E,51C
2A8A:  MOVFF  519,51D
2A8E:  MOVWF  x1E
2A90:  MOVLW  01
2A92:  MOVWF  x1F
2A94:  CLRF   x20
2A96:  MOVLB  0
2A98:  CALL   156C
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2A9C:  MOVFF  50D,519
2AA0:  MOVFF  50E,51A
2AA4:  MOVLW  05
2AA6:  MOVLB  5
2AA8:  MOVWF  x1C
2AAA:  MOVLW  10
2AAC:  MOVWF  x1B
2AAE:  MOVFF  50F,51D
2AB2:  MOVLW  01
2AB4:  MOVWF  x1E
2AB6:  MOVLB  0
2AB8:  CALL   1276
.................... } 
2ABC:  RETLW  00
....................  
.................... void displayTT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
2ABE:  MOVLW  05
2AC0:  MOVLB  5
2AC2:  MOVWF  x04
2AC4:  MOVLW  0C
2AC6:  MOVWF  x03
2AC8:  MOVLW  42
2ACA:  MOVWF  FE9
2ACC:  MOVFF  508,51C
2AD0:  MOVFF  507,51B
2AD4:  MOVFF  506,51A
2AD8:  MOVFF  505,519
2ADC:  MOVLW  01
2ADE:  MOVWF  x1D
2AE0:  MOVLB  0
2AE2:  RCALL  2896
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2AE4:  MOVLB  5
2AE6:  MOVF   x0B,W
2AE8:  MULLW  1B
2AEA:  MOVF   FF3,W
2AEC:  ADDWF  x09,W
2AEE:  MOVWF  x15
2AF0:  MOVF   x0B,W
2AF2:  MULLW  08
2AF4:  MOVF   FF3,W
2AF6:  ADDWF  x0A,W
2AF8:  MOVWF  x16
2AFA:  MOVFF  509,51B
2AFE:  MOVFF  50A,51C
2B02:  MOVFF  515,51D
2B06:  MOVWF  x1E
2B08:  MOVLW  01
2B0A:  MOVWF  x1F
2B0C:  CLRF   x20
2B0E:  MOVLB  0
2B10:  CALL   156C
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2B14:  MOVFF  509,519
2B18:  MOVFF  50A,51A
2B1C:  MOVLW  05
2B1E:  MOVLB  5
2B20:  MOVWF  x1C
2B22:  MOVLW  0C
2B24:  MOVWF  x1B
2B26:  MOVFF  50B,51D
2B2A:  MOVLW  01
2B2C:  MOVWF  x1E
2B2E:  MOVLB  0
2B30:  CALL   1276
.................... } 
2B34:  GOTO   65D8 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
2576:  MOVFF  4C9,506
257A:  MOVLW  24
257C:  MOVLB  5
257E:  MOVWF  x07
2580:  CLRF   x08
2582:  CLRF   x09
2584:  MOVLW  01
2586:  MOVWF  x0A
2588:  MOVLB  0
258A:  RCALL  2426
258C:  MOVFF  4C8,506
2590:  MOVLW  2A
2592:  MOVLB  5
2594:  MOVWF  x07
2596:  CLRF   x08
2598:  CLRF   x09
259A:  MOVLW  01
259C:  MOVWF  x0A
259E:  MOVLB  0
25A0:  RCALL  2426
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
25A2:  MOVLW  04
25A4:  MOVWF  FEA
25A6:  MOVLW  E5
25A8:  MOVWF  FE9
25AA:  MOVFF  FF2,505
25AE:  BCF    FF2.7
25B0:  MOVLW  00
25B2:  CALL   06BE
25B6:  TBLRD*-
25B8:  TBLRD*+
25BA:  MOVF   FF5,W
25BC:  MOVWF  FEE
25BE:  IORLW  00
25C0:  BNZ   25B8
25C2:  MOVLB  5
25C4:  BTFSC  x05.7
25C6:  BSF    FF2.7
25C8:  MOVLW  04
25CA:  MOVWF  x06
25CC:  MOVLW  E5
25CE:  MOVWF  x05
25D0:  MOVLW  31
25D2:  MOVWF  x07
25D4:  CLRF   x08
25D6:  MOVLW  02
25D8:  MOVWF  x09
25DA:  MOVLW  01
25DC:  MOVWF  x0A
25DE:  MOVLB  0
25E0:  CALL   162E
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
25E4:  MOVFF  4C7,506
25E8:  MOVLW  36
25EA:  MOVLB  5
25EC:  MOVWF  x07
25EE:  CLRF   x08
25F0:  CLRF   x09
25F2:  MOVLW  01
25F4:  MOVWF  x0A
25F6:  MOVLB  0
25F8:  RCALL  2426
25FA:  MOVFF  4C6,506
25FE:  MOVLW  3C
2600:  MOVLB  5
2602:  MOVWF  x07
2604:  CLRF   x08
2606:  CLRF   x09
2608:  MOVLW  01
260A:  MOVWF  x0A
260C:  MOVLB  0
260E:  RCALL  2426
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
2610:  MOVFF  4D1,506
2614:  MOVLW  24
2616:  MOVLB  5
2618:  MOVWF  x07
261A:  MOVLW  08
261C:  MOVWF  x08
261E:  CLRF   x09
2620:  MOVLW  01
2622:  MOVWF  x0A
2624:  MOVLB  0
2626:  RCALL  2426
2628:  MOVFF  4D0,506
262C:  MOVLW  2A
262E:  MOVLB  5
2630:  MOVWF  x07
2632:  MOVLW  08
2634:  MOVWF  x08
2636:  CLRF   x09
2638:  MOVLW  01
263A:  MOVWF  x0A
263C:  MOVLB  0
263E:  RCALL  2426
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
2640:  MOVLW  04
2642:  MOVWF  FEA
2644:  MOVLW  E5
2646:  MOVWF  FE9
2648:  MOVFF  FF2,505
264C:  BCF    FF2.7
264E:  MOVLW  00
2650:  CALL   06BE
2654:  TBLRD*-
2656:  TBLRD*+
2658:  MOVF   FF5,W
265A:  MOVWF  FEE
265C:  IORLW  00
265E:  BNZ   2656
2660:  MOVLB  5
2662:  BTFSC  x05.7
2664:  BSF    FF2.7
2666:  MOVLW  04
2668:  MOVWF  x06
266A:  MOVLW  E5
266C:  MOVWF  x05
266E:  MOVLW  31
2670:  MOVWF  x07
2672:  MOVLW  08
2674:  MOVWF  x08
2676:  MOVLW  02
2678:  MOVWF  x09
267A:  MOVLW  01
267C:  MOVWF  x0A
267E:  MOVLB  0
2680:  CALL   162E
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
2684:  MOVFF  4CF,506
2688:  MOVLW  36
268A:  MOVLB  5
268C:  MOVWF  x07
268E:  MOVLW  08
2690:  MOVWF  x08
2692:  CLRF   x09
2694:  MOVLW  01
2696:  MOVWF  x0A
2698:  MOVLB  0
269A:  RCALL  2426
269C:  MOVFF  4CE,506
26A0:  MOVLW  3C
26A2:  MOVLB  5
26A4:  MOVWF  x07
26A6:  MOVLW  08
26A8:  MOVWF  x08
26AA:  CLRF   x09
26AC:  MOVLW  01
26AE:  MOVWF  x0A
26B0:  MOVLB  0
26B2:  RCALL  2426
.................... } 
26B4:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1854:  MOVLW  05
1856:  MOVLB  5
1858:  MOVWF  x04
185A:  MOVLW  0B
185C:  MOVWF  x03
185E:  MOVFF  507,514
1862:  MOVLW  1F
1864:  MOVWF  x15
1866:  MOVLB  0
1868:  BRA    1774
....................     
....................    if(sombreado==1) 
186A:  MOVLB  5
186C:  DECFSZ x0A,W
186E:  BRA    18BE
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1870:  MOVLW  12
1872:  ADDWF  x08,W
1874:  MOVWF  x14
1876:  MOVLW  18
1878:  ADDWF  x09,W
187A:  MOVWF  x15
187C:  MOVFF  508,51B
1880:  MOVFF  509,51C
1884:  MOVFF  514,51D
1888:  MOVWF  x1E
188A:  MOVLW  01
188C:  MOVWF  x1F
188E:  MOVWF  x20
1890:  MOVLB  0
1892:  RCALL  156C
1894:  MOVLW  02
1896:  MOVLB  5
1898:  ADDWF  x08,W
189A:  MOVWF  x14
189C:  MOVLW  01
189E:  ADDWF  x09,W
18A0:  MOVWF  x15
18A2:  MOVFF  514,519
18A6:  MOVWF  x1A
18A8:  MOVLW  05
18AA:  MOVWF  x1C
18AC:  MOVLW  0B
18AE:  MOVWF  x1B
18B0:  MOVLW  02
18B2:  MOVWF  x1D
18B4:  CLRF   x1E
18B6:  MOVLB  0
18B8:  RCALL  1276
....................    else    
18BA:  BRA    1908
18BC:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
18BE:  MOVLW  12
18C0:  ADDWF  x08,W
18C2:  MOVWF  x14
18C4:  MOVLW  18
18C6:  ADDWF  x09,W
18C8:  MOVWF  x15
18CA:  MOVFF  508,51B
18CE:  MOVFF  509,51C
18D2:  MOVFF  514,51D
18D6:  MOVWF  x1E
18D8:  CLRF   x1F
18DA:  CLRF   x20
18DC:  MOVLB  0
18DE:  RCALL  156C
18E0:  MOVLW  02
18E2:  MOVLB  5
18E4:  ADDWF  x08,W
18E6:  MOVWF  x14
18E8:  MOVLW  01
18EA:  ADDWF  x09,W
18EC:  MOVWF  x15
18EE:  MOVFF  514,519
18F2:  MOVWF  x1A
18F4:  MOVLW  05
18F6:  MOVWF  x1C
18F8:  MOVLW  0B
18FA:  MOVWF  x1B
18FC:  MOVLW  02
18FE:  MOVWF  x1D
1900:  MOVLW  01
1902:  MOVWF  x1E
1904:  MOVLB  0
1906:  RCALL  1276
....................  
.................... } 
1908:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
1FC0:  BSF    F93.0
1FC2:  MOVLW  11
1FC4:  MOVWF  00
1FC6:  DECFSZ 00,F
1FC8:  BRA    1FC6
1FCA:  BSF    F93.1
1FCC:  MOVLW  11
1FCE:  MOVWF  00
1FD0:  DECFSZ 00,F
1FD2:  BRA    1FD0
1FD4:  BCF    F8A.0
1FD6:  BCF    F93.0
1FD8:  MOVLW  11
1FDA:  MOVWF  00
1FDC:  DECFSZ 00,F
1FDE:  BRA    1FDC
1FE0:  BCF    F8A.1
1FE2:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FE4:  MOVFF  506,509
1FE8:  RCALL  190A
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
1FEA:  MOVFF  507,509
1FEE:  RCALL  190A
....................    i2c_write(dato);        // Dato a transmitir 
1FF0:  MOVFF  508,509
1FF4:  RCALL  190A
....................    i2c_stop();             // Fin comunicación 
1FF6:  BCF    F93.0
1FF8:  NOP   
1FFA:  BSF    F93.1
1FFC:  BTFSS  F81.1
1FFE:  BRA    1FFC
2000:  MOVLW  11
2002:  MOVWF  00
2004:  DECFSZ 00,F
2006:  BRA    2004
2008:  BRA    200A
200A:  NOP   
200C:  BSF    F93.0
200E:  MOVLW  11
2010:  MOVWF  00
2012:  DECFSZ 00,F
2014:  BRA    2012
....................  } 
2016:  GOTO   204C (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1EDA:  BSF    F93.0
1EDC:  MOVLW  11
1EDE:  MOVWF  00
1EE0:  DECFSZ 00,F
1EE2:  BRA    1EE0
1EE4:  BSF    F93.1
1EE6:  MOVLW  11
1EE8:  MOVWF  00
1EEA:  DECFSZ 00,F
1EEC:  BRA    1EEA
1EEE:  BCF    F8A.0
1EF0:  BCF    F93.0
1EF2:  MOVLW  11
1EF4:  MOVWF  00
1EF6:  DECFSZ 00,F
1EF8:  BRA    1EF6
1EFA:  BCF    F8A.1
1EFC:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1EFE:  MOVFF  505,509
1F02:  MOVLB  0
1F04:  RCALL  190A
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1F06:  MOVFF  506,509
1F0A:  RCALL  190A
....................    i2c_start();            // Reinicio 
1F0C:  BSF    F93.0
1F0E:  MOVLW  11
1F10:  MOVWF  00
1F12:  DECFSZ 00,F
1F14:  BRA    1F12
1F16:  BSF    F93.1
1F18:  MOVLW  11
1F1A:  MOVWF  00
1F1C:  DECFSZ 00,F
1F1E:  BRA    1F1C
1F20:  BTFSS  F81.1
1F22:  BRA    1F20
1F24:  BCF    F8A.0
1F26:  BCF    F93.0
1F28:  MOVLW  11
1F2A:  MOVWF  00
1F2C:  DECFSZ 00,F
1F2E:  BRA    1F2C
1F30:  BCF    F8A.1
1F32:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1F34:  MOVLW  01
1F36:  MOVLB  5
1F38:  ADDWF  x05,W
1F3A:  MOVWF  x07
1F3C:  MOVWF  x09
1F3E:  MOVLB  0
1F40:  RCALL  190A
....................    dato=i2c_read(0);       // Lectura del dato 
1F42:  CLRF   00
1F44:  BRA    1980
1F46:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
1F4A:  BCF    F93.0
1F4C:  NOP   
1F4E:  BSF    F93.1
1F50:  BTFSS  F81.1
1F52:  BRA    1F50
1F54:  MOVLW  11
1F56:  MOVWF  00
1F58:  DECFSZ 00,F
1F5A:  BRA    1F58
1F5C:  BRA    1F5E
1F5E:  NOP   
1F60:  BSF    F93.0
1F62:  MOVLW  11
1F64:  MOVWF  00
1F66:  DECFSZ 00,F
1F68:  BRA    1F66
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
1F88:  MOVFF  498,456
....................    SlaveA0Tx[1]=EVDesfogue; 
1F8C:  MOVFF  499,457
....................    SlaveA0Tx[2]=EVAgua; 
1F90:  MOVFF  49A,458
....................    SlaveA0Tx[3]=EVTrampa; 
1F94:  MOVFF  49B,459
....................    SlaveA0Tx[4]=MotorPuerta; 
1F98:  MOVFF  49C,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
1F9C:  MOVFF  49D,45B
....................    SlaveA0Tx[6]=BombaVacio; 
1FA0:  MOVFF  49E,45C
....................    SlaveA0Tx[7]=BombaAgua; 
1FA4:  MOVFF  49F,45D
....................    SlaveA0Tx[8]=Control; 
1FA8:  MOVFF  4A0,45E
....................    SlaveA0Tx[9]=Setpoint; 
1FAC:  MOVFF  4A5,45F
....................    SlaveA0Tx[10]=20; 
1FB0:  MOVLW  14
1FB2:  MOVLB  4
1FB4:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
1FB6:  MOVFF  4B4,462
.................... } 
1FBA:  MOVLB  0
1FBC:  GOTO   201C (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1DFA:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1DFE:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1E02:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1E06:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1E0A:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1E0E:  MOVLB  5
1E10:  CLRF   x06
1E12:  MOVFF  41B,505
1E16:  MOVLB  0
1E18:  RCALL  19EC
1E1A:  MOVFF  03,4C1
1E1E:  MOVFF  02,4C0
1E22:  MOVFF  01,4BF
1E26:  MOVFF  00,4BE
....................    Alarma=txbuf[6]; 
1E2A:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1E2E:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1E32:  MOVFF  41E,4AB
....................    Decimal=txbuf[9]; 
1E36:  MOVFF  41F,4A1
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1E3A:  MOVLB  5
1E3C:  CLRF   x06
1E3E:  MOVFF  4A1,505
1E42:  MOVLB  0
1E44:  RCALL  19EC
1E46:  MOVFF  00,505
1E4A:  MOVFF  01,506
1E4E:  MOVFF  02,507
1E52:  MOVFF  03,508
1E56:  MOVFF  03,50C
1E5A:  MOVFF  02,50B
1E5E:  MOVFF  01,50A
1E62:  MOVFF  00,509
1E66:  MOVLB  5
1E68:  CLRF   x10
1E6A:  CLRF   x0F
1E6C:  MOVLW  20
1E6E:  MOVWF  x0E
1E70:  MOVLW  82
1E72:  MOVWF  x0D
1E74:  MOVLB  0
1E76:  BRA    1A22
1E78:  BCF    FD8.1
1E7A:  MOVFF  4C1,50C
1E7E:  MOVFF  4C0,50B
1E82:  MOVFF  4BF,50A
1E86:  MOVFF  4BE,509
1E8A:  MOVFF  03,510
1E8E:  MOVFF  02,50F
1E92:  MOVFF  01,50E
1E96:  MOVFF  00,50D
1E9A:  RCALL  1B82
1E9C:  MOVFF  03,4C1
1EA0:  MOVFF  02,4C0
1EA4:  MOVFF  01,4BF
1EA8:  MOVFF  00,4BE
....................    PresionCamara=make16(txbuf[11],txbuf[10]); 
1EAC:  MOVFF  421,4BB
1EB0:  MOVFF  420,4BA
....................    PresionPreCamara=make16(txbuf[13],txbuf[12]); 
1EB4:  MOVFF  423,4BD
1EB8:  MOVFF  422,4BC
.................... } 
1EBC:  GOTO   1F86 (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
201A:  BRA    1F88
....................    for(i=0;i<13;i++) 
201C:  MOVLB  4
201E:  CLRF   xA4
2020:  MOVF   xA4,W
2022:  SUBLW  0C
2024:  BNC   2052
....................    { 
....................       direccion=0xA0; 
2026:  MOVLW  A0
2028:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
202A:  CLRF   03
202C:  MOVF   xA4,W
202E:  ADDLW  56
2030:  MOVWF  FE9
2032:  MOVLW  04
2034:  ADDWFC 03,W
2036:  MOVWF  FEA
2038:  MOVFF  FEF,505
203C:  MOVFF  487,506
2040:  MOVFF  4A4,507
2044:  MOVFF  505,508
2048:  MOVLB  0
204A:  BRA    1FC0
....................    }  
204C:  MOVLB  4
204E:  INCF   xA4,F
2050:  BRA    2020
.................... } 
2052:  MOVLB  0
2054:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<14;i++) 
*
1EC0:  MOVLB  4
1EC2:  CLRF   xA4
1EC4:  MOVF   xA4,W
1EC6:  SUBLW  0D
1EC8:  BNC   1F82
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1ECA:  MOVLW  A0
1ECC:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1ECE:  MOVFF  4A4,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1ED2:  MOVFF  487,505
1ED6:  MOVFF  488,506
....................       txbuf[i]=(int8)dato; 
*
1F6A:  CLRF   03
1F6C:  MOVLB  4
1F6E:  MOVF   xA4,W
1F70:  ADDLW  16
1F72:  MOVWF  FE9
1F74:  MOVLW  04
1F76:  ADDWFC 03,W
1F78:  MOVWF  FEA
1F7A:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
1F7E:  INCF   xA4,F
1F80:  BRA    1EC4
....................    Lee_Vector(); 
1F82:  MOVLB  0
1F84:  BRA    1DFA
.................... } 
1F86:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2BF0:  CLRF   FF8
2BF2:  BCF    FD0.7
2BF4:  BSF    07.7
2BF6:  CLRF   FEA
2BF8:  CLRF   FE9
2BFA:  MOVLB  4
2BFC:  CLRF   x86
2BFE:  CLRF   x87
2C00:  CLRF   x88
2C02:  CLRF   x8D
2C04:  MOVLW  01
2C06:  MOVWF  x8E
2C08:  CLRF   x8F
2C0A:  CLRF   x90
2C0C:  CLRF   x91
2C0E:  CLRF   x92
2C10:  CLRF   x93
2C12:  CLRF   x94
2C14:  BCF    x95.0
2C16:  BCF    x95.1
2C18:  BCF    x95.2
2C1A:  BCF    x95.3
2C1C:  BSF    x95.4
2C1E:  BCF    x95.5
2C20:  BCF    x95.6
2C22:  BCF    x95.7
2C24:  BCF    x96.0
2C26:  BCF    x96.1
2C28:  BCF    x96.2
2C2A:  BCF    x96.3
2C2C:  BCF    x96.4
2C2E:  BCF    x96.5
2C30:  BCF    x96.6
2C32:  BCF    x96.7
2C34:  BCF    x97.0
2C36:  BCF    x97.1
2C38:  BCF    x97.2
2C3A:  BCF    x97.3
2C3C:  BCF    x97.4
2C3E:  CLRF   x98
2C40:  CLRF   x99
2C42:  CLRF   x9A
2C44:  CLRF   x9B
2C46:  CLRF   x9C
2C48:  CLRF   x9D
2C4A:  CLRF   x9E
2C4C:  CLRF   x9F
2C4E:  CLRF   xA0
2C50:  CLRF   xA1
2C52:  CLRF   xA2
2C54:  MOVWF  xA3
2C56:  CLRF   xA4
2C58:  CLRF   xA5
2C5A:  CLRF   xA6
2C5C:  MOVWF  xA7
2C5E:  CLRF   xA8
2C60:  CLRF   xA9
2C62:  CLRF   xAA
2C64:  CLRF   xAB
2C66:  CLRF   xAD
2C68:  CLRF   xAC
2C6A:  CLRF   xAF
2C6C:  CLRF   xAE
2C6E:  CLRF   xB1
2C70:  CLRF   xB0
2C72:  CLRF   xB3
2C74:  MOVLW  0F
2C76:  MOVWF  xB2
2C78:  CLRF   xB5
2C7A:  CLRF   xB4
2C7C:  CLRF   xB7
2C7E:  CLRF   xB6
2C80:  CLRF   xB9
2C82:  CLRF   xB8
2C84:  CLRF   xBB
2C86:  CLRF   xBA
2C88:  CLRF   xBD
2C8A:  CLRF   xBC
2C8C:  CLRF   xC1
2C8E:  CLRF   xC0
2C90:  CLRF   xBF
2C92:  CLRF   xBE
2C94:  MOVF   FC1,W
2C96:  ANDLW  C0
2C98:  IORLW  0F
2C9A:  MOVWF  FC1
2C9C:  MOVLW  07
2C9E:  MOVWF  FB4
2CA0:  MOVLW  6B
2CA2:  MOVWF  x89
2CA4:  MOVLW  50
2CA6:  MOVWF  x8A
2CA8:  MOVLW  61
2CAA:  MOVWF  x8B
2CAC:  CLRF   x8C
2CAE:  CLRF   xC2
2CB0:  CLRF   xC3
2CB2:  CLRF   xC4
2CB4:  CLRF   xC5
2CB6:  CLRF   xC6
2CB8:  CLRF   xC7
2CBA:  CLRF   xC8
2CBC:  CLRF   xC9
2CBE:  CLRF   xCA
2CC0:  CLRF   xCB
2CC2:  CLRF   xCC
2CC4:  CLRF   xCD
2CC6:  CLRF   xCE
2CC8:  CLRF   xCF
2CCA:  CLRF   xD0
2CCC:  CLRF   xD1
2CCE:  CLRF   xD2
2CD0:  CLRF   xD3
2CD2:  CLRF   xD4
2CD4:  CLRF   xD5
2CD6:  CLRF   xD6
2CD8:  CLRF   xD7
2CDA:  CLRF   xD8
2CDC:  CLRF   xD9
2CDE:  MOVLB  5
2CE0:  CLRF   x03
2CE2:  CLRF   x04
....................    Display_on; 
2CE4:  BSF    F8D.0
2CE6:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2CE8:  MOVLB  4
2CEA:  CLRF   x88
2CEC:  MOVF   x88,W
2CEE:  SUBLW  0F
2CF0:  BNC   2D26
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2CF2:  CLRF   03
2CF4:  MOVF   x88,W
2CF6:  ADDLW  56
2CF8:  MOVWF  FE9
2CFA:  MOVLW  04
2CFC:  ADDWFC 03,W
2CFE:  MOVWF  FEA
2D00:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2D02:  CLRF   03
2D04:  MOVF   x88,W
2D06:  ADDLW  66
2D08:  MOVWF  FE9
2D0A:  MOVLW  04
2D0C:  ADDWFC 03,W
2D0E:  MOVWF  FEA
2D10:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2D12:  CLRF   03
2D14:  MOVF   x88,W
2D16:  ADDLW  76
2D18:  MOVWF  FE9
2D1A:  MOVLW  04
2D1C:  ADDWFC 03,W
2D1E:  MOVWF  FEA
2D20:  CLRF   FEF
....................    } 
2D22:  INCF   x88,F
2D24:  BRA    2CEC
....................    output_d(0); 
2D26:  CLRF   F95
2D28:  CLRF   F8C
....................    delay_ms(1000);    
2D2A:  MOVLW  04
2D2C:  MOVLB  5
2D2E:  MOVWF  x05
2D30:  MOVLW  FA
2D32:  MOVWF  x06
2D34:  MOVLB  0
2D36:  CALL   0F96
2D3A:  MOVLB  5
2D3C:  DECFSZ x05,F
2D3E:  BRA    2D30
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2D40:  MOVLW  85
2D42:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2D44:  BSF    F9D.0
....................    enable_interrupts(global); 
2D46:  MOVLW  C0
2D48:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2D4A:  MOVFF  FF2,505
2D4E:  BCF    FF2.7
2D50:  CLRF   FA9
2D52:  BCF    FA6.6
2D54:  BCF    FA6.7
2D56:  BSF    FA6.0
2D58:  MOVF   FA8,W
2D5A:  BTFSC  x05.7
2D5C:  BSF    FF2.7
2D5E:  MOVLB  4
2D60:  MOVWF  xC6
2D62:  MOVFF  FF2,505
2D66:  BCF    FF2.7
2D68:  MOVLW  01
2D6A:  MOVWF  FA9
2D6C:  BCF    FA6.6
2D6E:  BCF    FA6.7
2D70:  BSF    FA6.0
2D72:  MOVF   FA8,W
2D74:  MOVLB  5
2D76:  BTFSC  x05.7
2D78:  BSF    FF2.7
2D7A:  MOVLB  4
2D7C:  MOVWF  xC7
2D7E:  MOVFF  FF2,505
2D82:  BCF    FF2.7
2D84:  MOVLW  02
2D86:  MOVWF  FA9
2D88:  BCF    FA6.6
2D8A:  BCF    FA6.7
2D8C:  BSF    FA6.0
2D8E:  MOVF   FA8,W
2D90:  MOVLB  5
2D92:  BTFSC  x05.7
2D94:  BSF    FF2.7
2D96:  MOVLB  4
2D98:  MOVWF  xC8
2D9A:  MOVFF  FF2,505
2D9E:  BCF    FF2.7
2DA0:  MOVLW  03
2DA2:  MOVWF  FA9
2DA4:  BCF    FA6.6
2DA6:  BCF    FA6.7
2DA8:  BSF    FA6.0
2DAA:  MOVF   FA8,W
2DAC:  MOVLB  5
2DAE:  BTFSC  x05.7
2DB0:  BSF    FF2.7
2DB2:  MOVLB  4
2DB4:  MOVWF  xC9
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2DB6:  MOVFF  FF2,505
2DBA:  BCF    FF2.7
2DBC:  MOVLW  04
2DBE:  MOVWF  FA9
2DC0:  BCF    FA6.6
2DC2:  BCF    FA6.7
2DC4:  BSF    FA6.0
2DC6:  MOVF   FA8,W
2DC8:  MOVLB  5
2DCA:  BTFSC  x05.7
2DCC:  BSF    FF2.7
2DCE:  MOVLB  4
2DD0:  MOVWF  xCE
2DD2:  MOVFF  FF2,505
2DD6:  BCF    FF2.7
2DD8:  MOVLW  05
2DDA:  MOVWF  FA9
2DDC:  BCF    FA6.6
2DDE:  BCF    FA6.7
2DE0:  BSF    FA6.0
2DE2:  MOVF   FA8,W
2DE4:  MOVLB  5
2DE6:  BTFSC  x05.7
2DE8:  BSF    FF2.7
2DEA:  MOVLB  4
2DEC:  MOVWF  xCF
2DEE:  MOVFF  FF2,505
2DF2:  BCF    FF2.7
2DF4:  MOVLW  06
2DF6:  MOVWF  FA9
2DF8:  BCF    FA6.6
2DFA:  BCF    FA6.7
2DFC:  BSF    FA6.0
2DFE:  MOVF   FA8,W
2E00:  MOVLB  5
2E02:  BTFSC  x05.7
2E04:  BSF    FF2.7
2E06:  MOVLB  4
2E08:  MOVWF  xD0
2E0A:  MOVFF  FF2,505
2E0E:  BCF    FF2.7
2E10:  MOVLW  07
2E12:  MOVWF  FA9
2E14:  BCF    FA6.6
2E16:  BCF    FA6.7
2E18:  BSF    FA6.0
2E1A:  MOVF   FA8,W
2E1C:  MOVLB  5
2E1E:  BTFSC  x05.7
2E20:  BSF    FF2.7
2E22:  MOVLB  4
2E24:  MOVWF  xD1
2E26:  MOVFF  FF2,505
2E2A:  BCF    FF2.7
2E2C:  MOVLW  08
2E2E:  MOVWF  FA9
2E30:  BCF    FA6.6
2E32:  BCF    FA6.7
2E34:  BSF    FA6.0
2E36:  MOVF   FA8,W
2E38:  MOVLB  5
2E3A:  BTFSC  x05.7
2E3C:  BSF    FF2.7
2E3E:  MOVLB  4
2E40:  MOVWF  xA5
....................    Nivel=read_eeprom(9); 
2E42:  MOVFF  FF2,505
2E46:  BCF    FF2.7
2E48:  MOVLW  09
2E4A:  MOVWF  FA9
2E4C:  BCF    FA6.6
2E4E:  BCF    FA6.7
2E50:  BSF    FA6.0
2E52:  MOVF   FA8,W
2E54:  MOVLB  5
2E56:  BTFSC  x05.7
2E58:  BSF    FF2.7
2E5A:  MOVLB  4
2E5C:  CLRF   xB5
2E5E:  MOVWF  xB4
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2E60:  MOVFF  FF2,505
2E64:  BCF    FF2.7
2E66:  MOVLW  0A
2E68:  MOVWF  FA9
2E6A:  BCF    FA6.6
2E6C:  BCF    FA6.7
2E6E:  BSF    FA6.0
2E70:  MOVF   FA8,W
2E72:  MOVLB  5
2E74:  BTFSC  x05.7
2E76:  BSF    FF2.7
2E78:  MOVLB  4
2E7A:  MOVWF  xD6
2E7C:  MOVFF  FF2,505
2E80:  BCF    FF2.7
2E82:  MOVLW  0B
2E84:  MOVWF  FA9
2E86:  BCF    FA6.6
2E88:  BCF    FA6.7
2E8A:  BSF    FA6.0
2E8C:  MOVF   FA8,W
2E8E:  MOVLB  5
2E90:  BTFSC  x05.7
2E92:  BSF    FF2.7
2E94:  MOVLB  4
2E96:  MOVWF  xD7
2E98:  MOVFF  FF2,505
2E9C:  BCF    FF2.7
2E9E:  MOVLW  0C
2EA0:  MOVWF  FA9
2EA2:  BCF    FA6.6
2EA4:  BCF    FA6.7
2EA6:  BSF    FA6.0
2EA8:  MOVF   FA8,W
2EAA:  MOVLB  5
2EAC:  BTFSC  x05.7
2EAE:  BSF    FF2.7
2EB0:  MOVLB  4
2EB2:  MOVWF  xD8
2EB4:  MOVFF  FF2,505
2EB8:  BCF    FF2.7
2EBA:  MOVLW  0D
2EBC:  MOVWF  FA9
2EBE:  BCF    FA6.6
2EC0:  BCF    FA6.7
2EC2:  BSF    FA6.0
2EC4:  MOVF   FA8,W
2EC6:  MOVLB  5
2EC8:  BTFSC  x05.7
2ECA:  BSF    FF2.7
2ECC:  MOVLB  4
2ECE:  MOVWF  xD9
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2ED0:  MOVLW  01
2ED2:  MOVLB  5
2ED4:  MOVWF  x05
2ED6:  MOVLB  0
2ED8:  CALL   1112
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2EDC:  MOVLB  5
2EDE:  CLRF   x06
2EE0:  MOVLB  0
2EE2:  CALL   1000
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2EE6:  MOVLW  04
2EE8:  MOVWF  FEA
2EEA:  MOVLW  E5
2EEC:  MOVWF  FE9
2EEE:  MOVFF  FF2,505
2EF2:  BCF    FF2.7
2EF4:  MOVLW  00
2EF6:  CALL   06DA
2EFA:  TBLRD*-
2EFC:  TBLRD*+
2EFE:  MOVF   FF5,W
2F00:  MOVWF  FEE
2F02:  IORLW  00
2F04:  BNZ   2EFC
2F06:  MOVLB  5
2F08:  BTFSC  x05.7
2F0A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2F0C:  MOVLW  04
2F0E:  MOVWF  x06
2F10:  MOVLW  E5
2F12:  MOVWF  x05
2F14:  CLRF   x07
2F16:  CLRF   x08
2F18:  CLRF   x09
2F1A:  MOVLW  02
2F1C:  MOVWF  x0A
2F1E:  MOVLB  0
2F20:  CALL   162E
....................    strcpy(Menus.Letra,"Autoclave Vertical"); 
2F24:  MOVLW  04
2F26:  MOVWF  FEA
2F28:  MOVLW  E5
2F2A:  MOVWF  FE9
2F2C:  MOVFF  FF2,505
2F30:  BCF    FF2.7
2F32:  MOVLW  00
2F34:  CALL   0700
2F38:  TBLRD*-
2F3A:  TBLRD*+
2F3C:  MOVF   FF5,W
2F3E:  MOVWF  FEE
2F40:  IORLW  00
2F42:  BNZ   2F3A
2F44:  MOVLB  5
2F46:  BTFSC  x05.7
2F48:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
2F4A:  MOVLW  04
2F4C:  MOVWF  x06
2F4E:  MOVLW  E5
2F50:  MOVWF  x05
2F52:  CLRF   x07
2F54:  MOVLW  14
2F56:  MOVWF  x08
2F58:  CLRF   x09
2F5A:  MOVLW  01
2F5C:  MOVWF  x0A
2F5E:  MOVLB  0
2F60:  CALL   162E
....................    strcpy(Menus.Letra," 85 Litros  "); 
2F64:  MOVLW  04
2F66:  MOVWF  FEA
2F68:  MOVLW  E5
2F6A:  MOVWF  FE9
2F6C:  MOVFF  FF2,505
2F70:  BCF    FF2.7
2F72:  MOVLW  00
2F74:  CALL   072E
2F78:  TBLRD*-
2F7A:  TBLRD*+
2F7C:  MOVF   FF5,W
2F7E:  MOVWF  FEE
2F80:  IORLW  00
2F82:  BNZ   2F7A
2F84:  MOVLB  5
2F86:  BTFSC  x05.7
2F88:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
2F8A:  MOVLW  04
2F8C:  MOVWF  x06
2F8E:  MOVLW  E5
2F90:  MOVWF  x05
2F92:  CLRF   x07
2F94:  MOVLW  23
2F96:  MOVWF  x08
2F98:  CLRF   x09
2F9A:  MOVLW  02
2F9C:  MOVWF  x0A
2F9E:  MOVLB  0
2FA0:  CALL   162E
....................    delay_ms(1000); 
2FA4:  MOVLW  04
2FA6:  MOVLB  5
2FA8:  MOVWF  x05
2FAA:  MOVLW  FA
2FAC:  MOVWF  x06
2FAE:  MOVLB  0
2FB0:  CALL   0F96
2FB4:  MOVLB  5
2FB6:  DECFSZ x05,F
2FB8:  BRA    2FAA
....................    delay_ms(1000); 
2FBA:  MOVLW  04
2FBC:  MOVWF  x05
2FBE:  MOVLW  FA
2FC0:  MOVWF  x06
2FC2:  MOVLB  0
2FC4:  CALL   0F96
2FC8:  MOVLB  5
2FCA:  DECFSZ x05,F
2FCC:  BRA    2FBE
....................    delay_ms(1000); 
2FCE:  MOVLW  04
2FD0:  MOVWF  x05
2FD2:  MOVLW  FA
2FD4:  MOVWF  x06
2FD6:  MOVLB  0
2FD8:  CALL   0F96
2FDC:  MOVLB  5
2FDE:  DECFSZ x05,F
2FE0:  BRA    2FD2
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2FE2:  CLRF   x06
2FE4:  MOVLB  0
2FE6:  CALL   1000
....................    displayContrasena(Contrasena[0],20,30,1); 
2FEA:  MOVFF  4D2,507
2FEE:  MOVLW  14
2FF0:  MOVLB  5
2FF2:  MOVWF  x08
2FF4:  MOVLW  1E
2FF6:  MOVWF  x09
2FF8:  MOVLW  01
2FFA:  MOVWF  x0A
2FFC:  MOVLB  0
2FFE:  CALL   1854
....................    displayContrasena(Contrasena[1],40,30,0); 
3002:  MOVFF  4D3,507
3006:  MOVLW  28
3008:  MOVLB  5
300A:  MOVWF  x08
300C:  MOVLW  1E
300E:  MOVWF  x09
3010:  CLRF   x0A
3012:  MOVLB  0
3014:  CALL   1854
....................    displayContrasena(Contrasena[2],60,30,0); 
3018:  MOVFF  4D4,507
301C:  MOVLW  3C
301E:  MOVLB  5
3020:  MOVWF  x08
3022:  MOVLW  1E
3024:  MOVWF  x09
3026:  CLRF   x0A
3028:  MOVLB  0
302A:  CALL   1854
....................    displayContrasena(Contrasena[3],80,30,0); 
302E:  MOVFF  4D5,507
3032:  MOVLW  50
3034:  MOVLB  5
3036:  MOVWF  x08
3038:  MOVLW  1E
303A:  MOVWF  x09
303C:  CLRF   x0A
303E:  MOVLB  0
3040:  CALL   1854
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
3044:  CALL   1EC0
....................        
....................       Envio_Esclavos(); 
3048:  CALL   201A
....................       glcd_update(); 
304C:  CALL   105A
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
3050:  BSF    F92.0
3052:  BTFSC  F80.0
3054:  BRA    3068
3056:  BSF    F92.1
3058:  BTFSC  F80.1
305A:  BRA    3068
305C:  BSF    F92.2
305E:  BTFSC  F80.2
3060:  BRA    3068
3062:  BSF    F92.3
3064:  BTFSS  F80.3
3066:  BRA    3070
....................       { 
....................          tinicio=0; 
3068:  MOVLB  4
306A:  CLRF   xB9
306C:  CLRF   xB8
306E:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
3070:  MOVLB  4
3072:  MOVF   xB9,W
3074:  SUBLW  37
3076:  BC    3094
3078:  XORLW  FF
307A:  BNZ   3082
307C:  MOVF   xB8,W
307E:  SUBLW  3F
3080:  BC    3094
....................          glcd_fillscreen(OFF); 
3082:  MOVLB  5
3084:  CLRF   x06
3086:  MOVLB  0
3088:  CALL   1000
....................          Display_off; 
308C:  BCF    F8D.0
308E:  BCF    F96.0
....................       } 
3090:  BRA    3070
3092:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
3094:  MOVF   xA2,F
3096:  BTFSS  FD8.2
3098:  BRA    362E
....................        
....................       strcpy(Menus.Letra,"Clave"); 
309A:  MOVLW  04
309C:  MOVWF  FEA
309E:  MOVLW  E5
30A0:  MOVWF  FE9
30A2:  MOVFF  FF2,505
30A6:  BCF    FF2.7
30A8:  MOVLW  00
30AA:  MOVLB  0
30AC:  CALL   0756
30B0:  TBLRD*-
30B2:  TBLRD*+
30B4:  MOVF   FF5,W
30B6:  MOVWF  FEE
30B8:  IORLW  00
30BA:  BNZ   30B2
30BC:  MOVLB  5
30BE:  BTFSC  x05.7
30C0:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
30C2:  MOVLW  04
30C4:  MOVWF  x06
30C6:  MOVLW  E5
30C8:  MOVWF  x05
30CA:  MOVLW  1E
30CC:  MOVWF  x07
30CE:  CLRF   x08
30D0:  MOVLW  01
30D2:  MOVWF  x09
30D4:  MOVLW  02
30D6:  MOVWF  x0A
30D8:  MOVLB  0
30DA:  CALL   162E
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
30DE:  BSF    F92.0
30E0:  BTFSS  F80.0
30E2:  BRA    31BA
....................       { 
....................          if(Flanco == 0) 
30E4:  MOVLB  4
30E6:  BTFSC  x95.0
30E8:  BRA    31B8
....................          { 
....................             Flanco = 1;delay_ms(30); 
30EA:  BSF    x95.0
30EC:  MOVLW  1E
30EE:  MOVLB  5
30F0:  MOVWF  x06
30F2:  MOVLB  0
30F4:  CALL   0F96
....................             for(i=1;i<=4;i++) 
30F8:  MOVLW  01
30FA:  MOVLB  4
30FC:  MOVWF  xA4
30FE:  MOVF   xA4,W
3100:  SUBLW  04
3102:  BNC   31B8
....................             { 
....................                if(unidad==i) 
3104:  MOVF   xA4,W
3106:  SUBWF  xA3,W
3108:  BNZ   3180
....................                { 
....................                   Contrasena[i-1]++; 
310A:  MOVLW  01
310C:  SUBWF  xA4,W
310E:  CLRF   03
3110:  ADDLW  D2
3112:  MOVWF  FE9
3114:  MOVLW  04
3116:  ADDWFC 03,W
3118:  MOVWF  FEA
311A:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
311C:  MOVLW  01
311E:  SUBWF  xA4,W
3120:  CLRF   03
3122:  ADDLW  D2
3124:  MOVWF  FE9
3126:  MOVLW  04
3128:  ADDWFC 03,W
312A:  MOVWF  FEA
312C:  BTFSC  FEF.7
312E:  BRA    3148
3130:  MOVF   FEF,W
3132:  SUBLW  09
3134:  BC    3148
....................                   { 
....................                      Contrasena[i-1]=0; 
3136:  MOVLW  01
3138:  SUBWF  xA4,W
313A:  CLRF   03
313C:  ADDLW  D2
313E:  MOVWF  FE9
3140:  MOVLW  04
3142:  ADDWFC 03,W
3144:  MOVWF  FEA
3146:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
3148:  MOVLW  01
314A:  SUBWF  xA4,W
314C:  CLRF   03
314E:  ADDLW  D2
3150:  MOVWF  FE9
3152:  MOVLW  04
3154:  ADDWFC 03,W
3156:  MOVWF  FEA
3158:  MOVFF  FEF,505
315C:  MOVF   xA4,W
315E:  MULLW  14
3160:  MOVFF  FF3,506
3164:  MOVLB  5
3166:  MOVFF  505,507
316A:  MOVFF  506,508
316E:  MOVLW  1E
3170:  MOVWF  x09
3172:  MOVLW  01
3174:  MOVWF  x0A
3176:  MOVLB  0
3178:  CALL   1854
....................                } 
....................                else 
317C:  BRA    31B2
317E:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
3180:  MOVLW  01
3182:  SUBWF  xA4,W
3184:  CLRF   03
3186:  ADDLW  D2
3188:  MOVWF  FE9
318A:  MOVLW  04
318C:  ADDWFC 03,W
318E:  MOVWF  FEA
3190:  MOVFF  FEF,505
3194:  MOVF   xA4,W
3196:  MULLW  14
3198:  MOVFF  FF3,506
319C:  MOVLB  5
319E:  MOVFF  505,507
31A2:  MOVFF  506,508
31A6:  MOVLW  1E
31A8:  MOVWF  x09
31AA:  CLRF   x0A
31AC:  MOVLB  0
31AE:  CALL   1854
....................                } 
....................             } 
31B2:  MOVLB  4
31B4:  INCF   xA4,F
31B6:  BRA    30FE
....................          } 
....................       } 
....................          else 
31B8:  BRA    31BE
....................             {Flanco = 0;} 
31BA:  MOVLB  4
31BC:  BCF    x95.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
31BE:  BSF    F92.1
31C0:  BTFSS  F80.1
31C2:  BRA    3296
....................       { 
....................          if(Flanco2 == 0) 
31C4:  BTFSC  x95.2
31C6:  BRA    3294
....................             {Flanco2 = 1;delay_ms(30); 
31C8:  BSF    x95.2
31CA:  MOVLW  1E
31CC:  MOVLB  5
31CE:  MOVWF  x06
31D0:  MOVLB  0
31D2:  CALL   0F96
....................                for(i=1;i<=4;i++) 
31D6:  MOVLW  01
31D8:  MOVLB  4
31DA:  MOVWF  xA4
31DC:  MOVF   xA4,W
31DE:  SUBLW  04
31E0:  BNC   3294
....................                { 
....................                   if(unidad==i) 
31E2:  MOVF   xA4,W
31E4:  SUBWF  xA3,W
31E6:  BNZ   325C
....................                   {Contrasena[i-1]--;  
31E8:  MOVLW  01
31EA:  SUBWF  xA4,W
31EC:  CLRF   03
31EE:  ADDLW  D2
31F0:  MOVWF  FE9
31F2:  MOVLW  04
31F4:  ADDWFC 03,W
31F6:  MOVWF  FEA
31F8:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
31FA:  MOVLW  01
31FC:  SUBWF  xA4,W
31FE:  CLRF   03
3200:  ADDLW  D2
3202:  MOVWF  FE9
3204:  MOVLW  04
3206:  ADDWFC 03,W
3208:  MOVWF  FEA
320A:  BTFSC  FEF.7
320C:  BRA    3210
320E:  BRA    3224
....................                         {Contrasena[i-1]=9;} 
3210:  MOVLW  01
3212:  SUBWF  xA4,W
3214:  CLRF   03
3216:  ADDLW  D2
3218:  MOVWF  FE9
321A:  MOVLW  04
321C:  ADDWFC 03,W
321E:  MOVWF  FEA
3220:  MOVLW  09
3222:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
3224:  MOVLW  01
3226:  SUBWF  xA4,W
3228:  CLRF   03
322A:  ADDLW  D2
322C:  MOVWF  FE9
322E:  MOVLW  04
3230:  ADDWFC 03,W
3232:  MOVWF  FEA
3234:  MOVFF  FEF,505
3238:  MOVF   xA4,W
323A:  MULLW  14
323C:  MOVFF  FF3,506
3240:  MOVLB  5
3242:  MOVFF  505,507
3246:  MOVFF  506,508
324A:  MOVLW  1E
324C:  MOVWF  x09
324E:  MOVLW  01
3250:  MOVWF  x0A
3252:  MOVLB  0
3254:  CALL   1854
....................                   else 
3258:  BRA    328E
325A:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
325C:  MOVLW  01
325E:  SUBWF  xA4,W
3260:  CLRF   03
3262:  ADDLW  D2
3264:  MOVWF  FE9
3266:  MOVLW  04
3268:  ADDWFC 03,W
326A:  MOVWF  FEA
326C:  MOVFF  FEF,505
3270:  MOVF   xA4,W
3272:  MULLW  14
3274:  MOVFF  FF3,506
3278:  MOVLB  5
327A:  MOVFF  505,507
327E:  MOVFF  506,508
3282:  MOVLW  1E
3284:  MOVWF  x09
3286:  CLRF   x0A
3288:  MOVLB  0
328A:  CALL   1854
....................                }       
328E:  MOVLB  4
3290:  INCF   xA4,F
3292:  BRA    31DC
....................             }      
....................       } 
....................          else 
3294:  BRA    3298
....................             {Flanco2 = 0;}   
3296:  BCF    x95.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3298:  BSF    F92.2
329A:  BTFSS  F80.2
329C:  BRA    3336
....................       { 
....................          if(Flanco1 == 0) 
329E:  BTFSC  x95.1
32A0:  BRA    3334
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
32A2:  BSF    x95.1
32A4:  MOVLW  1E
32A6:  MOVLB  5
32A8:  MOVWF  x06
32AA:  MOVLB  0
32AC:  CALL   0F96
32B0:  MOVLB  4
32B2:  INCF   xA3,F
....................                for(i=1;i<=4;i++) 
32B4:  MOVLW  01
32B6:  MOVWF  xA4
32B8:  MOVF   xA4,W
32BA:  SUBLW  04
32BC:  BNC   3334
....................                { 
....................                   if(unidad==i) 
32BE:  MOVF   xA4,W
32C0:  SUBWF  xA3,W
32C2:  BNZ   32FC
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
32C4:  MOVLW  01
32C6:  SUBWF  xA4,W
32C8:  CLRF   03
32CA:  ADDLW  D2
32CC:  MOVWF  FE9
32CE:  MOVLW  04
32D0:  ADDWFC 03,W
32D2:  MOVWF  FEA
32D4:  MOVFF  FEF,505
32D8:  MOVF   xA4,W
32DA:  MULLW  14
32DC:  MOVFF  FF3,506
32E0:  MOVLB  5
32E2:  MOVFF  505,507
32E6:  MOVFF  506,508
32EA:  MOVLW  1E
32EC:  MOVWF  x09
32EE:  MOVLW  01
32F0:  MOVWF  x0A
32F2:  MOVLB  0
32F4:  CALL   1854
....................                   else 
32F8:  BRA    332E
32FA:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
32FC:  MOVLW  01
32FE:  SUBWF  xA4,W
3300:  CLRF   03
3302:  ADDLW  D2
3304:  MOVWF  FE9
3306:  MOVLW  04
3308:  ADDWFC 03,W
330A:  MOVWF  FEA
330C:  MOVFF  FEF,505
3310:  MOVF   xA4,W
3312:  MULLW  14
3314:  MOVFF  FF3,506
3318:  MOVLB  5
331A:  MOVFF  505,507
331E:  MOVFF  506,508
3322:  MOVLW  1E
3324:  MOVWF  x09
3326:  CLRF   x0A
3328:  MOVLB  0
332A:  CALL   1854
....................                } 
332E:  MOVLB  4
3330:  INCF   xA4,F
3332:  BRA    32B8
....................             } 
....................       } 
....................          else 
3334:  BRA    3338
....................             {Flanco1 = 0;}   
3336:  BCF    x95.1
....................      
....................       if(unidad>4) 
3338:  MOVF   xA3,W
333A:  SUBLW  04
333C:  BTFSC  FD8.0
333E:  BRA    362E
....................       {glcd_fillScreen(OFF);unidad=4; 
3340:  MOVLB  5
3342:  CLRF   x06
3344:  MOVLB  0
3346:  CALL   1000
334A:  MOVLW  04
334C:  MOVLB  4
334E:  MOVWF  xA3
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
3350:  MOVF   xD2,W
3352:  SUBLW  03
3354:  BNZ   343C
3356:  MOVF   xD3,W
3358:  SUBLW  08
335A:  BNZ   343C
335C:  MOVF   xD4,W
335E:  SUBLW  09
3360:  BNZ   343C
3362:  MOVF   xD5,W
3364:  SUBLW  02
3366:  BNZ   343C
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3368:  MOVLW  0A
336A:  MOVWF  FA9
336C:  CLRF   FA8
336E:  BCF    FA6.6
3370:  BCF    FA6.7
3372:  BSF    FA6.2
3374:  MOVF   FF2,W
3376:  MOVWF  00
3378:  BCF    FF2.7
337A:  MOVLB  F
337C:  MOVLW  55
337E:  MOVWF  FA7
3380:  MOVLW  AA
3382:  MOVWF  FA7
3384:  BSF    FA6.1
3386:  BTFSC  FA6.1
3388:  BRA    3386
338A:  BCF    FA6.2
338C:  MOVF   00,W
338E:  IORWF  FF2,F
3390:  MOVLW  14
3392:  MOVLB  5
3394:  MOVWF  x06
3396:  MOVLB  0
3398:  CALL   0F96
339C:  MOVLW  0B
339E:  MOVWF  FA9
33A0:  CLRF   FA8
33A2:  BCF    FA6.6
33A4:  BCF    FA6.7
33A6:  BSF    FA6.2
33A8:  MOVF   FF2,W
33AA:  MOVWF  00
33AC:  BCF    FF2.7
33AE:  MOVLB  F
33B0:  MOVLW  55
33B2:  MOVWF  FA7
33B4:  MOVLW  AA
33B6:  MOVWF  FA7
33B8:  BSF    FA6.1
33BA:  BTFSC  FA6.1
33BC:  BRA    33BA
33BE:  BCF    FA6.2
33C0:  MOVF   00,W
33C2:  IORWF  FF2,F
33C4:  MOVLW  14
33C6:  MOVLB  5
33C8:  MOVWF  x06
33CA:  MOVLB  0
33CC:  CALL   0F96
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
33D0:  MOVLW  0C
33D2:  MOVWF  FA9
33D4:  CLRF   FA8
33D6:  BCF    FA6.6
33D8:  BCF    FA6.7
33DA:  BSF    FA6.2
33DC:  MOVF   FF2,W
33DE:  MOVWF  00
33E0:  BCF    FF2.7
33E2:  MOVLB  F
33E4:  MOVLW  55
33E6:  MOVWF  FA7
33E8:  MOVLW  AA
33EA:  MOVWF  FA7
33EC:  BSF    FA6.1
33EE:  BTFSC  FA6.1
33F0:  BRA    33EE
33F2:  BCF    FA6.2
33F4:  MOVF   00,W
33F6:  IORWF  FF2,F
33F8:  MOVLW  14
33FA:  MOVLB  5
33FC:  MOVWF  x06
33FE:  MOVLB  0
3400:  CALL   0F96
3404:  MOVLW  0D
3406:  MOVWF  FA9
3408:  CLRF   FA8
340A:  BCF    FA6.6
340C:  BCF    FA6.7
340E:  BSF    FA6.2
3410:  MOVF   FF2,W
3412:  MOVWF  00
3414:  BCF    FF2.7
3416:  MOVLB  F
3418:  MOVLW  55
341A:  MOVWF  FA7
341C:  MOVLW  AA
341E:  MOVWF  FA7
3420:  BSF    FA6.1
3422:  BTFSC  FA6.1
3424:  BRA    3422
3426:  BCF    FA6.2
3428:  MOVF   00,W
342A:  IORWF  FF2,F
342C:  MOVLW  14
342E:  MOVLB  5
3430:  MOVWF  x06
3432:  MOVLB  0
3434:  CALL   0F96
....................              reset_cpu();}         
3438:  RESET
343A:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
343C:  MOVF   xD6,W
343E:  SUBWF  xD2,W
3440:  BNZ   3512
3442:  MOVF   xD7,W
3444:  SUBWF  xD3,W
3446:  BNZ   3512
3448:  MOVF   xD8,W
344A:  SUBWF  xD4,W
344C:  BNZ   3512
344E:  MOVF   xD9,W
3450:  SUBWF  xD5,W
3452:  BNZ   3512
....................          { 
....................             glcd_fillScreen(OFF); 
3454:  MOVLB  5
3456:  CLRF   x06
3458:  MOVLB  0
345A:  CALL   1000
....................             strcpy(Menus.Letra,"Clave"); 
345E:  MOVLW  04
3460:  MOVWF  FEA
3462:  MOVLW  E5
3464:  MOVWF  FE9
3466:  MOVFF  FF2,505
346A:  BCF    FF2.7
346C:  MOVLW  00
346E:  CALL   0756
3472:  TBLRD*-
3474:  TBLRD*+
3476:  MOVF   FF5,W
3478:  MOVWF  FEE
347A:  IORLW  00
347C:  BNZ   3474
347E:  MOVLB  5
3480:  BTFSC  x05.7
3482:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3484:  MOVLW  04
3486:  MOVWF  x06
3488:  MOVLW  E5
348A:  MOVWF  x05
348C:  MOVLW  1E
348E:  MOVWF  x07
3490:  CLRF   x08
3492:  CLRF   x09
3494:  MOVLW  02
3496:  MOVWF  x0A
3498:  MOVLB  0
349A:  CALL   162E
....................             strcpy(Menus.Letra,"Correcta"); 
349E:  MOVLW  04
34A0:  MOVWF  FEA
34A2:  MOVLW  E5
34A4:  MOVWF  FE9
34A6:  MOVFF  FF2,505
34AA:  BCF    FF2.7
34AC:  MOVLW  00
34AE:  CALL   0776
34B2:  TBLRD*-
34B4:  TBLRD*+
34B6:  MOVF   FF5,W
34B8:  MOVWF  FEE
34BA:  IORLW  00
34BC:  BNZ   34B4
34BE:  MOVLB  5
34C0:  BTFSC  x05.7
34C2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
34C4:  MOVLW  04
34C6:  MOVWF  x06
34C8:  MOVLW  E5
34CA:  MOVWF  x05
34CC:  MOVLW  0F
34CE:  MOVWF  x07
34D0:  MOVLW  1E
34D2:  MOVWF  x08
34D4:  CLRF   x09
34D6:  MOVLW  02
34D8:  MOVWF  x0A
34DA:  MOVLB  0
34DC:  CALL   162E
....................             Menu=1;glcd_update();delay_ms(1000); 
34E0:  MOVLW  01
34E2:  MOVLB  4
34E4:  MOVWF  xA2
34E6:  MOVLB  0
34E8:  CALL   105A
34EC:  MOVLW  04
34EE:  MOVLB  5
34F0:  MOVWF  x05
34F2:  MOVLW  FA
34F4:  MOVWF  x06
34F6:  MOVLB  0
34F8:  CALL   0F96
34FC:  MOVLB  5
34FE:  DECFSZ x05,F
3500:  BRA    34F2
....................             glcd_fillScreen(OFF);unidad=1; 
3502:  CLRF   x06
3504:  MOVLB  0
3506:  CALL   1000
350A:  MOVLW  01
350C:  MOVLB  4
350E:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
3510:  BRA    362E
....................          { 
....................             glcd_fillScreen(OFF); 
3512:  MOVLB  5
3514:  CLRF   x06
3516:  MOVLB  0
3518:  CALL   1000
....................             strcpy(Menus.Letra,"Clave"); 
351C:  MOVLW  04
351E:  MOVWF  FEA
3520:  MOVLW  E5
3522:  MOVWF  FE9
3524:  MOVFF  FF2,505
3528:  BCF    FF2.7
352A:  MOVLW  00
352C:  CALL   0756
3530:  TBLRD*-
3532:  TBLRD*+
3534:  MOVF   FF5,W
3536:  MOVWF  FEE
3538:  IORLW  00
353A:  BNZ   3532
353C:  MOVLB  5
353E:  BTFSC  x05.7
3540:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3542:  MOVLW  04
3544:  MOVWF  x06
3546:  MOVLW  E5
3548:  MOVWF  x05
354A:  MOVLW  1E
354C:  MOVWF  x07
354E:  CLRF   x08
3550:  CLRF   x09
3552:  MOVLW  02
3554:  MOVWF  x0A
3556:  MOVLB  0
3558:  CALL   162E
....................             strcpy(Menus.Letra,"Incorrecta"); 
355C:  MOVLW  04
355E:  MOVWF  FEA
3560:  MOVLW  E5
3562:  MOVWF  FE9
3564:  MOVFF  FF2,505
3568:  BCF    FF2.7
356A:  MOVLW  00
356C:  CALL   079A
3570:  TBLRD*-
3572:  TBLRD*+
3574:  MOVF   FF5,W
3576:  MOVWF  FEE
3578:  IORLW  00
357A:  BNZ   3572
357C:  MOVLB  5
357E:  BTFSC  x05.7
3580:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
3582:  MOVLW  04
3584:  MOVWF  x06
3586:  MOVLW  E5
3588:  MOVWF  x05
358A:  CLRF   x07
358C:  MOVLW  1E
358E:  MOVWF  x08
3590:  CLRF   x09
3592:  MOVLW  02
3594:  MOVWF  x0A
3596:  MOVLB  0
3598:  CALL   162E
....................             Menu=0;glcd_update();delay_ms(1000); 
359C:  MOVLB  4
359E:  CLRF   xA2
35A0:  MOVLB  0
35A2:  CALL   105A
35A6:  MOVLW  04
35A8:  MOVLB  5
35AA:  MOVWF  x05
35AC:  MOVLW  FA
35AE:  MOVWF  x06
35B0:  MOVLB  0
35B2:  CALL   0F96
35B6:  MOVLB  5
35B8:  DECFSZ x05,F
35BA:  BRA    35AC
....................             glcd_fillScreen(OFF);unidad=1; 
35BC:  CLRF   x06
35BE:  MOVLB  0
35C0:  CALL   1000
35C4:  MOVLW  01
35C6:  MOVLB  4
35C8:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
35CA:  CLRF   xD2
35CC:  CLRF   xD3
35CE:  CLRF   xD4
35D0:  CLRF   xD5
....................             displayContrasena(Contrasena[0],20,30,1); 
35D2:  MOVFF  4D2,507
35D6:  MOVLW  14
35D8:  MOVLB  5
35DA:  MOVWF  x08
35DC:  MOVLW  1E
35DE:  MOVWF  x09
35E0:  MOVLW  01
35E2:  MOVWF  x0A
35E4:  MOVLB  0
35E6:  CALL   1854
....................             displayContrasena(Contrasena[1],40,30,0); 
35EA:  MOVFF  4D3,507
35EE:  MOVLW  28
35F0:  MOVLB  5
35F2:  MOVWF  x08
35F4:  MOVLW  1E
35F6:  MOVWF  x09
35F8:  CLRF   x0A
35FA:  MOVLB  0
35FC:  CALL   1854
....................             displayContrasena(Contrasena[2],60,30,0); 
3600:  MOVFF  4D4,507
3604:  MOVLW  3C
3606:  MOVLB  5
3608:  MOVWF  x08
360A:  MOVLW  1E
360C:  MOVWF  x09
360E:  CLRF   x0A
3610:  MOVLB  0
3612:  CALL   1854
....................             displayContrasena(Contrasena[3],80,30,0); 
3616:  MOVFF  4D5,507
361A:  MOVLW  50
361C:  MOVLB  5
361E:  MOVWF  x08
3620:  MOVLW  1E
3622:  MOVWF  x09
3624:  CLRF   x0A
3626:  MOVLB  0
3628:  CALL   1854
362C:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
362E:  DECFSZ xA2,W
3630:  BRA    3A66
....................        
....................       if(visual==1) 
3632:  BTFSS  x95.4
3634:  BRA    39EC
....................       { 
....................          if(Opcion>6) 
3636:  MOVF   xA7,W
3638:  SUBLW  06
363A:  BC    3640
....................          {Opcion=1;} 
363C:  MOVLW  01
363E:  MOVWF  xA7
....................          if(Opcion<1) 
3640:  MOVF   xA7,F
3642:  BNZ   3648
....................          {Opcion=6;} 
3644:  MOVLW  06
3646:  MOVWF  xA7
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
3648:  MOVLW  04
364A:  MOVWF  FEA
364C:  MOVLW  E5
364E:  MOVWF  FE9
3650:  MOVFF  FF2,505
3654:  BCF    FF2.7
3656:  MOVLW  00
3658:  MOVLB  0
365A:  CALL   07C0
365E:  TBLRD*-
3660:  TBLRD*+
3662:  MOVF   FF5,W
3664:  MOVWF  FEE
3666:  IORLW  00
3668:  BNZ   3660
366A:  MOVLB  5
366C:  BTFSC  x05.7
366E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
3670:  MOVLW  04
3672:  MOVWF  x06
3674:  MOVLW  E5
3676:  MOVWF  x05
3678:  MOVLW  1E
367A:  MOVWF  x07
367C:  CLRF   x08
367E:  MOVLW  01
3680:  MOVWF  x09
3682:  MOVWF  x0A
3684:  MOVLB  0
3686:  CALL   162E
....................        
....................          if(Opcion==1)    
368A:  MOVLB  4
368C:  DECFSZ xA7,W
368E:  BRA    36D6
....................             {strcpy(Menus.Letra,"Caucho"); 
3690:  MOVLW  04
3692:  MOVWF  FEA
3694:  MOVLW  E5
3696:  MOVWF  FE9
3698:  MOVFF  FF2,505
369C:  BCF    FF2.7
369E:  MOVLW  00
36A0:  MOVLB  0
36A2:  CALL   07EA
36A6:  TBLRD*-
36A8:  TBLRD*+
36AA:  MOVF   FF5,W
36AC:  MOVWF  FEE
36AE:  IORLW  00
36B0:  BNZ   36A8
36B2:  MOVLB  5
36B4:  BTFSC  x05.7
36B6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
36B8:  MOVLW  04
36BA:  MOVWF  x06
36BC:  MOVLW  E5
36BE:  MOVWF  x05
36C0:  CLRF   x07
36C2:  MOVLW  0A
36C4:  MOVWF  x08
36C6:  MOVLW  01
36C8:  MOVWF  x09
36CA:  MOVWF  x0A
36CC:  MOVLB  0
36CE:  CALL   162E
....................          else 
36D2:  BRA    3718
36D4:  MOVLB  4
....................             {strcpy(Menus.Letra,"Caucho"); 
36D6:  MOVLW  04
36D8:  MOVWF  FEA
36DA:  MOVLW  E5
36DC:  MOVWF  FE9
36DE:  MOVFF  FF2,505
36E2:  BCF    FF2.7
36E4:  MOVLW  00
36E6:  MOVLB  0
36E8:  CALL   07EA
36EC:  TBLRD*-
36EE:  TBLRD*+
36F0:  MOVF   FF5,W
36F2:  MOVWF  FEE
36F4:  IORLW  00
36F6:  BNZ   36EE
36F8:  MOVLB  5
36FA:  BTFSC  x05.7
36FC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
36FE:  MOVLW  04
3700:  MOVWF  x06
3702:  MOVLW  E5
3704:  MOVWF  x05
3706:  CLRF   x07
3708:  MOVLW  0A
370A:  MOVWF  x08
370C:  CLRF   x09
370E:  MOVLW  01
3710:  MOVWF  x0A
3712:  MOVLB  0
3714:  CALL   162E
....................           
....................          if(Opcion==2)    
3718:  MOVLB  4
371A:  MOVF   xA7,W
371C:  SUBLW  02
371E:  BNZ   3766
....................             {strcpy(Menus.Letra,"Liquidos"); 
3720:  MOVLW  04
3722:  MOVWF  FEA
3724:  MOVLW  E5
3726:  MOVWF  FE9
3728:  MOVFF  FF2,505
372C:  BCF    FF2.7
372E:  MOVLW  00
3730:  MOVLB  0
3732:  CALL   080C
3736:  TBLRD*-
3738:  TBLRD*+
373A:  MOVF   FF5,W
373C:  MOVWF  FEE
373E:  IORLW  00
3740:  BNZ   3738
3742:  MOVLB  5
3744:  BTFSC  x05.7
3746:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
3748:  MOVLW  04
374A:  MOVWF  x06
374C:  MOVLW  E5
374E:  MOVWF  x05
3750:  CLRF   x07
3752:  MOVLW  13
3754:  MOVWF  x08
3756:  MOVLW  01
3758:  MOVWF  x09
375A:  MOVWF  x0A
375C:  MOVLB  0
375E:  CALL   162E
....................          else 
3762:  BRA    37A8
3764:  MOVLB  4
....................             {strcpy(Menus.Letra,"Liquidos"); 
3766:  MOVLW  04
3768:  MOVWF  FEA
376A:  MOVLW  E5
376C:  MOVWF  FE9
376E:  MOVFF  FF2,505
3772:  BCF    FF2.7
3774:  MOVLW  00
3776:  MOVLB  0
3778:  CALL   080C
377C:  TBLRD*-
377E:  TBLRD*+
3780:  MOVF   FF5,W
3782:  MOVWF  FEE
3784:  IORLW  00
3786:  BNZ   377E
3788:  MOVLB  5
378A:  BTFSC  x05.7
378C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
378E:  MOVLW  04
3790:  MOVWF  x06
3792:  MOVLW  E5
3794:  MOVWF  x05
3796:  CLRF   x07
3798:  MOVLW  13
379A:  MOVWF  x08
379C:  CLRF   x09
379E:  MOVLW  01
37A0:  MOVWF  x0A
37A2:  MOVLB  0
37A4:  CALL   162E
....................              
....................           if(Opcion==3)    
37A8:  MOVLB  4
37AA:  MOVF   xA7,W
37AC:  SUBLW  03
37AE:  BNZ   37F6
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
37B0:  MOVLW  04
37B2:  MOVWF  FEA
37B4:  MOVLW  E5
37B6:  MOVWF  FE9
37B8:  MOVFF  FF2,505
37BC:  BCF    FF2.7
37BE:  MOVLW  00
37C0:  MOVLB  0
37C2:  CALL   0830
37C6:  TBLRD*-
37C8:  TBLRD*+
37CA:  MOVF   FF5,W
37CC:  MOVWF  FEE
37CE:  IORLW  00
37D0:  BNZ   37C8
37D2:  MOVLB  5
37D4:  BTFSC  x05.7
37D6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
37D8:  MOVLW  04
37DA:  MOVWF  x06
37DC:  MOVLW  E5
37DE:  MOVWF  x05
37E0:  CLRF   x07
37E2:  MOVLW  1C
37E4:  MOVWF  x08
37E6:  MOVLW  01
37E8:  MOVWF  x09
37EA:  MOVWF  x0A
37EC:  MOVLB  0
37EE:  CALL   162E
....................          else 
37F2:  BRA    3838
37F4:  MOVLB  4
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
37F6:  MOVLW  04
37F8:  MOVWF  FEA
37FA:  MOVLW  E5
37FC:  MOVWF  FE9
37FE:  MOVFF  FF2,505
3802:  BCF    FF2.7
3804:  MOVLW  00
3806:  MOVLB  0
3808:  CALL   0830
380C:  TBLRD*-
380E:  TBLRD*+
3810:  MOVF   FF5,W
3812:  MOVWF  FEE
3814:  IORLW  00
3816:  BNZ   380E
3818:  MOVLB  5
381A:  BTFSC  x05.7
381C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
381E:  MOVLW  04
3820:  MOVWF  x06
3822:  MOVLW  E5
3824:  MOVWF  x05
3826:  CLRF   x07
3828:  MOVLW  1C
382A:  MOVWF  x08
382C:  CLRF   x09
382E:  MOVLW  01
3830:  MOVWF  x0A
3832:  MOVLB  0
3834:  CALL   162E
....................              
....................          if(Opcion==4)    
3838:  MOVLB  4
383A:  MOVF   xA7,W
383C:  SUBLW  04
383E:  BNZ   3886
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
3840:  MOVLW  04
3842:  MOVWF  FEA
3844:  MOVLW  E5
3846:  MOVWF  FE9
3848:  MOVFF  FF2,505
384C:  BCF    FF2.7
384E:  MOVLW  00
3850:  MOVLB  0
3852:  CALL   085E
3856:  TBLRD*-
3858:  TBLRD*+
385A:  MOVF   FF5,W
385C:  MOVWF  FEE
385E:  IORLW  00
3860:  BNZ   3858
3862:  MOVLB  5
3864:  BTFSC  x05.7
3866:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
3868:  MOVLW  04
386A:  MOVWF  x06
386C:  MOVLW  E5
386E:  MOVWF  x05
3870:  CLRF   x07
3872:  MOVLW  25
3874:  MOVWF  x08
3876:  MOVLW  01
3878:  MOVWF  x09
387A:  MOVWF  x0A
387C:  MOVLB  0
387E:  CALL   162E
....................          else 
3882:  BRA    38C8
3884:  MOVLB  4
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
3886:  MOVLW  04
3888:  MOVWF  FEA
388A:  MOVLW  E5
388C:  MOVWF  FE9
388E:  MOVFF  FF2,505
3892:  BCF    FF2.7
3894:  MOVLW  00
3896:  MOVLB  0
3898:  CALL   085E
389C:  TBLRD*-
389E:  TBLRD*+
38A0:  MOVF   FF5,W
38A2:  MOVWF  FEE
38A4:  IORLW  00
38A6:  BNZ   389E
38A8:  MOVLB  5
38AA:  BTFSC  x05.7
38AC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
38AE:  MOVLW  04
38B0:  MOVWF  x06
38B2:  MOVLW  E5
38B4:  MOVWF  x05
38B6:  CLRF   x07
38B8:  MOVLW  25
38BA:  MOVWF  x08
38BC:  CLRF   x09
38BE:  MOVLW  01
38C0:  MOVWF  x0A
38C2:  MOVLB  0
38C4:  CALL   162E
....................              
....................          if(Opcion==5)    
38C8:  MOVLB  4
38CA:  MOVF   xA7,W
38CC:  SUBLW  05
38CE:  BNZ   3916
....................             {strcpy(Menus.Letra,"Personalizado"); 
38D0:  MOVLW  04
38D2:  MOVWF  FEA
38D4:  MOVLW  E5
38D6:  MOVWF  FE9
38D8:  MOVFF  FF2,505
38DC:  BCF    FF2.7
38DE:  MOVLW  00
38E0:  MOVLB  0
38E2:  CALL   088E
38E6:  TBLRD*-
38E8:  TBLRD*+
38EA:  MOVF   FF5,W
38EC:  MOVWF  FEE
38EE:  IORLW  00
38F0:  BNZ   38E8
38F2:  MOVLB  5
38F4:  BTFSC  x05.7
38F6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
38F8:  MOVLW  04
38FA:  MOVWF  x06
38FC:  MOVLW  E5
38FE:  MOVWF  x05
3900:  CLRF   x07
3902:  MOVLW  2E
3904:  MOVWF  x08
3906:  MOVLW  01
3908:  MOVWF  x09
390A:  MOVWF  x0A
390C:  MOVLB  0
390E:  CALL   162E
....................          else 
3912:  BRA    3958
3914:  MOVLB  4
....................             {strcpy(Menus.Letra,"Personalizado"); 
3916:  MOVLW  04
3918:  MOVWF  FEA
391A:  MOVLW  E5
391C:  MOVWF  FE9
391E:  MOVFF  FF2,505
3922:  BCF    FF2.7
3924:  MOVLW  00
3926:  MOVLB  0
3928:  CALL   088E
392C:  TBLRD*-
392E:  TBLRD*+
3930:  MOVF   FF5,W
3932:  MOVWF  FEE
3934:  IORLW  00
3936:  BNZ   392E
3938:  MOVLB  5
393A:  BTFSC  x05.7
393C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
393E:  MOVLW  04
3940:  MOVWF  x06
3942:  MOVLW  E5
3944:  MOVWF  x05
3946:  CLRF   x07
3948:  MOVLW  2E
394A:  MOVWF  x08
394C:  CLRF   x09
394E:  MOVLW  01
3950:  MOVWF  x0A
3952:  MOVLB  0
3954:  CALL   162E
....................              
....................          if(Opcion==6)    
3958:  MOVLB  4
395A:  MOVF   xA7,W
395C:  SUBLW  06
395E:  BNZ   39A6
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3960:  MOVLW  04
3962:  MOVWF  FEA
3964:  MOVLW  E5
3966:  MOVWF  FE9
3968:  MOVFF  FF2,505
396C:  BCF    FF2.7
396E:  MOVLW  00
3970:  MOVLB  0
3972:  CALL   08B6
3976:  TBLRD*-
3978:  TBLRD*+
397A:  MOVF   FF5,W
397C:  MOVWF  FEE
397E:  IORLW  00
3980:  BNZ   3978
3982:  MOVLB  5
3984:  BTFSC  x05.7
3986:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
3988:  MOVLW  04
398A:  MOVWF  x06
398C:  MOVLW  E5
398E:  MOVWF  x05
3990:  CLRF   x07
3992:  MOVLW  37
3994:  MOVWF  x08
3996:  MOVLW  01
3998:  MOVWF  x09
399A:  MOVWF  x0A
399C:  MOVLB  0
399E:  CALL   162E
....................          else 
39A2:  BRA    39E8
39A4:  MOVLB  4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
39A6:  MOVLW  04
39A8:  MOVWF  FEA
39AA:  MOVLW  E5
39AC:  MOVWF  FE9
39AE:  MOVFF  FF2,505
39B2:  BCF    FF2.7
39B4:  MOVLW  00
39B6:  MOVLB  0
39B8:  CALL   08B6
39BC:  TBLRD*-
39BE:  TBLRD*+
39C0:  MOVF   FF5,W
39C2:  MOVWF  FEE
39C4:  IORLW  00
39C6:  BNZ   39BE
39C8:  MOVLB  5
39CA:  BTFSC  x05.7
39CC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
39CE:  MOVLW  04
39D0:  MOVWF  x06
39D2:  MOVLW  E5
39D4:  MOVWF  x05
39D6:  CLRF   x07
39D8:  MOVLW  37
39DA:  MOVWF  x08
39DC:  CLRF   x09
39DE:  MOVLW  01
39E0:  MOVWF  x0A
39E2:  MOVLB  0
39E4:  CALL   162E
....................             visual=0; 
39E8:  MOVLB  4
39EA:  BCF    x95.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
39EC:  BSF    F92.0
39EE:  BTFSS  F80.0
39F0:  BRA    3A0C
....................          {  if(Flanco == 0)  
39F2:  BTFSC  x95.0
39F4:  BRA    3A0A
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
39F6:  BSF    x95.0
39F8:  MOVLW  1E
39FA:  MOVLB  5
39FC:  MOVWF  x06
39FE:  MOVLB  0
3A00:  CALL   0F96
3A04:  MOVLB  4
3A06:  DECF   xA7,F
3A08:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3A0A:  BRA    3A0E
....................                {Flanco = 0;} 
3A0C:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
3A0E:  BSF    F92.1
3A10:  BTFSS  F80.1
3A12:  BRA    3A2E
....................          {  if(Flanco2 == 0)  
3A14:  BTFSC  x95.2
3A16:  BRA    3A2C
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
3A18:  BSF    x95.2
3A1A:  MOVLW  1E
3A1C:  MOVLB  5
3A1E:  MOVWF  x06
3A20:  MOVLB  0
3A22:  CALL   0F96
3A26:  MOVLB  4
3A28:  INCF   xA7,F
3A2A:  BSF    x95.4
....................                }      
....................          } 
....................             else 
3A2C:  BRA    3A30
....................                {Flanco2 = 0;}   
3A2E:  BCF    x95.2
....................                 
....................        if(RIGHT)//Si oprime SET 
3A30:  BSF    F92.2
3A32:  BTFSS  F80.2
3A34:  BRA    3A64
....................          {  if(Flanco1 == 0)  
3A36:  BTFSC  x95.1
3A38:  BRA    3A62
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
3A3A:  BSF    x95.1
3A3C:  MOVLW  1E
3A3E:  MOVLB  5
3A40:  MOVWF  x06
3A42:  MOVLB  0
3A44:  CALL   0F96
3A48:  MOVLW  03
3A4A:  MOVLB  4
3A4C:  ADDWF  xA7,W
3A4E:  MOVWF  xA2
3A50:  MOVLW  01
3A52:  MOVWF  xA7
3A54:  MOVLB  5
3A56:  CLRF   x06
3A58:  MOVLB  0
3A5A:  CALL   1000
3A5E:  MOVLB  4
3A60:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3A62:  BRA    3A66
....................                {Flanco1 = 0;}   
3A64:  BCF    x95.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
3A66:  MOVF   xA2,W
3A68:  SUBLW  04
3A6A:  BTFSS  FD8.2
3A6C:  BRA    3D9A
....................        
....................       if(visual==1) 
3A6E:  BTFSS  x95.4
3A70:  BRA    3BC6
....................       { 
....................          glcd_imagen(2); //Guante 
3A72:  MOVLW  02
3A74:  MOVLB  5
3A76:  MOVWF  x05
3A78:  MOVLB  0
3A7A:  CALL   207A
....................          strcpy(Menus.Letra,"Caucho"); 
3A7E:  MOVLW  04
3A80:  MOVWF  FEA
3A82:  MOVLW  E5
3A84:  MOVWF  FE9
3A86:  MOVFF  FF2,505
3A8A:  BCF    FF2.7
3A8C:  MOVLW  00
3A8E:  CALL   07EA
3A92:  TBLRD*-
3A94:  TBLRD*+
3A96:  MOVF   FF5,W
3A98:  MOVWF  FEE
3A9A:  IORLW  00
3A9C:  BNZ   3A94
3A9E:  MOVLB  5
3AA0:  BTFSC  x05.7
3AA2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3AA4:  MOVLW  04
3AA6:  MOVWF  x06
3AA8:  MOVLW  E5
3AAA:  MOVWF  x05
3AAC:  MOVLW  14
3AAE:  MOVWF  x07
3AB0:  CLRF   x08
3AB2:  MOVLW  01
3AB4:  MOVWF  x09
3AB6:  MOVLW  02
3AB8:  MOVWF  x0A
3ABA:  MOVLB  0
3ABC:  CALL   162E
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3AC0:  MOVLW  04
3AC2:  MOVWF  FEA
3AC4:  MOVLW  E5
3AC6:  MOVWF  FE9
3AC8:  MOVFF  FF2,505
3ACC:  BCF    FF2.7
3ACE:  MOVLW  00
3AD0:  CALL   07EA
3AD4:  TBLRD*-
3AD6:  TBLRD*+
3AD8:  MOVF   FF5,W
3ADA:  MOVWF  FEE
3ADC:  IORLW  00
3ADE:  BNZ   3AD6
3AE0:  MOVLB  5
3AE2:  BTFSC  x05.7
3AE4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3AE6:  MOVLW  04
3AE8:  MOVWF  x06
3AEA:  MOVLW  E5
3AEC:  MOVWF  x05
3AEE:  MOVLW  07
3AF0:  MOVWF  x07
3AF2:  MOVLW  37
3AF4:  MOVWF  x08
3AF6:  CLRF   x09
3AF8:  MOVLW  01
3AFA:  MOVWF  x0A
3AFC:  MOVLB  0
3AFE:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3B02:  MOVLW  04
3B04:  MOVWF  FEA
3B06:  MOVLW  E5
3B08:  MOVWF  FE9
3B0A:  MOVFF  FF2,505
3B0E:  BCF    FF2.7
3B10:  MOVLW  00
3B12:  CALL   08DE
3B16:  TBLRD*-
3B18:  TBLRD*+
3B1A:  MOVF   FF5,W
3B1C:  MOVWF  FEE
3B1E:  IORLW  00
3B20:  BNZ   3B18
3B22:  MOVLB  5
3B24:  BTFSC  x05.7
3B26:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3B28:  MOVLW  04
3B2A:  MOVWF  x06
3B2C:  MOVLW  E5
3B2E:  MOVWF  x05
3B30:  CLRF   x07
3B32:  MOVLW  1A
3B34:  MOVWF  x08
3B36:  CLRF   x09
3B38:  MOVLW  01
3B3A:  MOVWF  x0A
3B3C:  MOVLB  0
3B3E:  CALL   162E
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
3B42:  MOVLW  04
3B44:  MOVWF  FEA
3B46:  MOVLW  E5
3B48:  MOVWF  FE9
3B4A:  MOVFF  FF2,505
3B4E:  BCF    FF2.7
3B50:  MOVLW  00
3B52:  CALL   090A
3B56:  TBLRD*-
3B58:  TBLRD*+
3B5A:  MOVF   FF5,W
3B5C:  MOVWF  FEE
3B5E:  IORLW  00
3B60:  BNZ   3B58
3B62:  MOVLB  5
3B64:  BTFSC  x05.7
3B66:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3B68:  MOVLW  04
3B6A:  MOVWF  x06
3B6C:  MOVLW  E5
3B6E:  MOVWF  x05
3B70:  CLRF   x07
3B72:  MOVLW  24
3B74:  MOVWF  x08
3B76:  CLRF   x09
3B78:  MOVLW  01
3B7A:  MOVWF  x0A
3B7C:  MOVLB  0
3B7E:  CALL   162E
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3B82:  MOVLW  04
3B84:  MOVWF  FEA
3B86:  MOVLW  E5
3B88:  MOVWF  FE9
3B8A:  MOVFF  FF2,505
3B8E:  BCF    FF2.7
3B90:  MOVLW  00
3B92:  CALL   093A
3B96:  TBLRD*-
3B98:  TBLRD*+
3B9A:  MOVF   FF5,W
3B9C:  MOVWF  FEE
3B9E:  IORLW  00
3BA0:  BNZ   3B98
3BA2:  MOVLB  5
3BA4:  BTFSC  x05.7
3BA6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3BA8:  MOVLW  04
3BAA:  MOVWF  x06
3BAC:  MOVLW  E5
3BAE:  MOVWF  x05
3BB0:  CLRF   x07
3BB2:  MOVLW  2E
3BB4:  MOVWF  x08
3BB6:  CLRF   x09
3BB8:  MOVLW  01
3BBA:  MOVWF  x0A
3BBC:  MOVLB  0
3BBE:  CALL   162E
....................          visual=0; 
3BC2:  MOVLB  4
3BC4:  BCF    x95.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3BC6:  BSF    F92.3
3BC8:  BTFSS  F80.3
3BCA:  BRA    3BEC
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3BCC:  MOVLW  1E
3BCE:  MOVLB  5
3BD0:  MOVWF  x06
3BD2:  MOVLB  0
3BD4:  CALL   0F96
3BD8:  MOVLW  01
3BDA:  MOVLB  4
3BDC:  MOVWF  xA2
3BDE:  MOVLB  5
3BE0:  CLRF   x06
3BE2:  MOVLB  0
3BE4:  CALL   1000
3BE8:  MOVLB  4
3BEA:  BSF    x95.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3BEC:  BSF    F92.2
3BEE:  BTFSS  F80.2
3BF0:  BRA    3D9A
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
3BF2:  CLRF   xC6
3BF4:  CLRF   xC7
3BF6:  MOVLW  05
3BF8:  MOVWF  xC8
3BFA:  MOVLW  02
3BFC:  MOVWF  xC9
3BFE:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3C00:  CLRF   xCE
3C02:  CLRF   xCF
3C04:  MOVLW  05
3C06:  MOVWF  xD0
3C08:  MOVLW  01
3C0A:  MOVWF  xD1
3C0C:  CLRF   xB3
3C0E:  CLRF   xB2
3C10:  MOVLW  79
3C12:  MOVWF  xA5
3C14:  MOVLW  14
3C16:  MOVWF  xA2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3C18:  MOVWF  xA2
3C1A:  MOVLW  0F
3C1C:  MOVLB  5
3C1E:  MOVWF  x1B
3C20:  MOVLW  12
3C22:  MOVWF  x1C
3C24:  MOVLW  1E
3C26:  MOVWF  x1D
3C28:  MOVLW  35
3C2A:  MOVWF  x1E
3C2C:  CLRF   x1F
3C2E:  MOVLW  01
3C30:  MOVWF  x20
3C32:  MOVLB  0
3C34:  CALL   156C
3C38:  MOVLB  4
3C3A:  CLRF   xA9
3C3C:  MOVLW  C0
3C3E:  IORWF  FF2,F
3C40:  MOVLB  5
3C42:  CLRF   x06
3C44:  MOVLB  0
3C46:  CALL   1000
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3C4A:  MOVLW  04
3C4C:  MOVWF  FEA
3C4E:  MOVLW  E5
3C50:  MOVWF  FE9
3C52:  MOVFF  FF2,505
3C56:  BCF    FF2.7
3C58:  MOVLW  00
3C5A:  CALL   0964
3C5E:  TBLRD*-
3C60:  TBLRD*+
3C62:  MOVF   FF5,W
3C64:  MOVWF  FEE
3C66:  IORLW  00
3C68:  BNZ   3C60
3C6A:  MOVLB  5
3C6C:  BTFSC  x05.7
3C6E:  BSF    FF2.7
3C70:  MOVLW  04
3C72:  MOVWF  x06
3C74:  MOVLW  E5
3C76:  MOVWF  x05
3C78:  CLRF   x07
3C7A:  MOVLW  37
3C7C:  MOVWF  x08
3C7E:  MOVLW  02
3C80:  MOVWF  x09
3C82:  MOVLW  01
3C84:  MOVWF  x0A
3C86:  MOVLB  0
3C88:  CALL   162E
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3C8C:  MOVLW  0F
3C8E:  MOVLB  5
3C90:  MOVWF  x1B
3C92:  MOVLW  12
3C94:  MOVWF  x1C
3C96:  MOVLW  1E
3C98:  MOVWF  x1D
3C9A:  MOVLW  35
3C9C:  MOVWF  x1E
3C9E:  CLRF   x1F
3CA0:  MOVLW  01
3CA2:  MOVWF  x20
3CA4:  MOVLB  0
3CA6:  CALL   156C
....................          glcd_imagen(5); 
3CAA:  MOVLW  05
3CAC:  MOVLB  5
3CAE:  MOVWF  x05
3CB0:  MOVLB  0
3CB2:  CALL   207A
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3CB6:  MOVLW  04
3CB8:  MOVWF  FEA
3CBA:  MOVLW  E5
3CBC:  MOVWF  FE9
3CBE:  MOVFF  FF2,505
3CC2:  BCF    FF2.7
3CC4:  MOVLW  00
3CC6:  CALL   098A
3CCA:  TBLRD*-
3CCC:  TBLRD*+
3CCE:  MOVF   FF5,W
3CD0:  MOVWF  FEE
3CD2:  IORLW  00
3CD4:  BNZ   3CCC
3CD6:  MOVLB  5
3CD8:  BTFSC  x05.7
3CDA:  BSF    FF2.7
3CDC:  MOVLW  04
3CDE:  MOVWF  x06
3CE0:  MOVLW  E5
3CE2:  MOVWF  x05
3CE4:  CLRF   x07
3CE6:  CLRF   x08
3CE8:  MOVLW  02
3CEA:  MOVWF  x09
3CEC:  MOVLW  01
3CEE:  MOVWF  x0A
3CF0:  MOVLB  0
3CF2:  CALL   162E
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3CF6:  MOVLW  04
3CF8:  MOVWF  FEA
3CFA:  MOVLW  E5
3CFC:  MOVWF  FE9
3CFE:  MOVFF  FF2,505
3D02:  BCF    FF2.7
3D04:  MOVLW  00
3D06:  CALL   09AC
3D0A:  TBLRD*-
3D0C:  TBLRD*+
3D0E:  MOVF   FF5,W
3D10:  MOVWF  FEE
3D12:  IORLW  00
3D14:  BNZ   3D0C
3D16:  MOVLB  5
3D18:  BTFSC  x05.7
3D1A:  BSF    FF2.7
3D1C:  MOVLW  04
3D1E:  MOVWF  x06
3D20:  MOVLW  E5
3D22:  MOVWF  x05
3D24:  CLRF   x07
3D26:  MOVLW  08
3D28:  MOVWF  x08
3D2A:  MOVLW  02
3D2C:  MOVWF  x09
3D2E:  MOVLW  01
3D30:  MOVWF  x0A
3D32:  MOVLB  0
3D34:  CALL   162E
....................          glcd_circle(95,40,2,NO,ON); 
3D38:  MOVLW  5F
3D3A:  MOVLB  5
3D3C:  MOVWF  x05
3D3E:  MOVLW  28
3D40:  MOVWF  x06
3D42:  MOVLW  02
3D44:  MOVWF  x07
3D46:  CLRF   x08
3D48:  MOVLW  01
3D4A:  MOVWF  x09
3D4C:  MOVLB  0
3D4E:  CALL   2176
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3D52:  MOVLW  04
3D54:  MOVWF  FEA
3D56:  MOVLW  E5
3D58:  MOVWF  FE9
3D5A:  MOVFF  FF2,505
3D5E:  BCF    FF2.7
3D60:  MOVLW  00
3D62:  CALL   09CE
3D66:  TBLRD*-
3D68:  TBLRD*+
3D6A:  MOVF   FF5,W
3D6C:  MOVWF  FEE
3D6E:  IORLW  00
3D70:  BNZ   3D68
3D72:  MOVLB  5
3D74:  BTFSC  x05.7
3D76:  BSF    FF2.7
3D78:  MOVLW  04
3D7A:  MOVWF  x06
3D7C:  MOVLW  E5
3D7E:  MOVWF  x05
3D80:  MOVLW  66
3D82:  MOVWF  x07
3D84:  MOVLW  28
3D86:  MOVWF  x08
3D88:  MOVLW  02
3D8A:  MOVWF  x09
3D8C:  MOVWF  x0A
3D8E:  MOVLB  0
3D90:  CALL   162E
....................          MuestraTiemposProgramados(); 
3D94:  CALL   2576
3D98:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
3D9A:  MOVF   xA2,W
3D9C:  SUBLW  05
3D9E:  BTFSS  FD8.2
3DA0:  BRA    3F66
....................        
....................       if(visual==1) 
3DA2:  BTFSS  x95.4
3DA4:  BRA    3EFC
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
3DA6:  MOVLW  04
3DA8:  MOVLB  5
3DAA:  MOVWF  x05
3DAC:  MOVLB  0
3DAE:  CALL   207A
....................          strcpy(Menus.Letra,"Liquidos"); 
3DB2:  MOVLW  04
3DB4:  MOVWF  FEA
3DB6:  MOVLW  E5
3DB8:  MOVWF  FE9
3DBA:  MOVFF  FF2,505
3DBE:  BCF    FF2.7
3DC0:  MOVLW  00
3DC2:  CALL   080C
3DC6:  TBLRD*-
3DC8:  TBLRD*+
3DCA:  MOVF   FF5,W
3DCC:  MOVWF  FEE
3DCE:  IORLW  00
3DD0:  BNZ   3DC8
3DD2:  MOVLB  5
3DD4:  BTFSC  x05.7
3DD6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3DD8:  MOVLW  04
3DDA:  MOVWF  x06
3DDC:  MOVLW  E5
3DDE:  MOVWF  x05
3DE0:  MOVLW  14
3DE2:  MOVWF  x07
3DE4:  CLRF   x08
3DE6:  MOVLW  01
3DE8:  MOVWF  x09
3DEA:  MOVLW  02
3DEC:  MOVWF  x0A
3DEE:  MOVLB  0
3DF0:  CALL   162E
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
3DF4:  MOVLW  04
3DF6:  MOVWF  FEA
3DF8:  MOVLW  E5
3DFA:  MOVWF  FE9
3DFC:  MOVFF  FF2,505
3E00:  BCF    FF2.7
3E02:  MOVLW  00
3E04:  CALL   080C
3E08:  TBLRD*-
3E0A:  TBLRD*+
3E0C:  MOVF   FF5,W
3E0E:  MOVWF  FEE
3E10:  IORLW  00
3E12:  BNZ   3E0A
3E14:  MOVLB  5
3E16:  BTFSC  x05.7
3E18:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3E1A:  MOVLW  04
3E1C:  MOVWF  x06
3E1E:  MOVLW  E5
3E20:  MOVWF  x05
3E22:  MOVLW  07
3E24:  MOVWF  x07
3E26:  MOVLW  37
3E28:  MOVWF  x08
3E2A:  MOVLW  02
3E2C:  MOVWF  x09
3E2E:  MOVLW  01
3E30:  MOVWF  x0A
3E32:  MOVLB  0
3E34:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3E38:  MOVLW  04
3E3A:  MOVWF  FEA
3E3C:  MOVLW  E5
3E3E:  MOVWF  FE9
3E40:  MOVFF  FF2,505
3E44:  BCF    FF2.7
3E46:  MOVLW  00
3E48:  CALL   08DE
3E4C:  TBLRD*-
3E4E:  TBLRD*+
3E50:  MOVF   FF5,W
3E52:  MOVWF  FEE
3E54:  IORLW  00
3E56:  BNZ   3E4E
3E58:  MOVLB  5
3E5A:  BTFSC  x05.7
3E5C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3E5E:  MOVLW  04
3E60:  MOVWF  x06
3E62:  MOVLW  E5
3E64:  MOVWF  x05
3E66:  CLRF   x07
3E68:  MOVLW  1A
3E6A:  MOVWF  x08
3E6C:  CLRF   x09
3E6E:  MOVLW  01
3E70:  MOVWF  x0A
3E72:  MOVLB  0
3E74:  CALL   162E
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
3E78:  MOVLW  04
3E7A:  MOVWF  FEA
3E7C:  MOVLW  E5
3E7E:  MOVWF  FE9
3E80:  MOVFF  FF2,505
3E84:  BCF    FF2.7
3E86:  MOVLW  00
3E88:  CALL   09EA
3E8C:  TBLRD*-
3E8E:  TBLRD*+
3E90:  MOVF   FF5,W
3E92:  MOVWF  FEE
3E94:  IORLW  00
3E96:  BNZ   3E8E
3E98:  MOVLB  5
3E9A:  BTFSC  x05.7
3E9C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3E9E:  MOVLW  04
3EA0:  MOVWF  x06
3EA2:  MOVLW  E5
3EA4:  MOVWF  x05
3EA6:  CLRF   x07
3EA8:  MOVLW  24
3EAA:  MOVWF  x08
3EAC:  CLRF   x09
3EAE:  MOVLW  01
3EB0:  MOVWF  x0A
3EB2:  MOVLB  0
3EB4:  CALL   162E
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3EB8:  MOVLW  04
3EBA:  MOVWF  FEA
3EBC:  MOVLW  E5
3EBE:  MOVWF  FE9
3EC0:  MOVFF  FF2,505
3EC4:  BCF    FF2.7
3EC6:  MOVLW  00
3EC8:  CALL   0A1A
3ECC:  TBLRD*-
3ECE:  TBLRD*+
3ED0:  MOVF   FF5,W
3ED2:  MOVWF  FEE
3ED4:  IORLW  00
3ED6:  BNZ   3ECE
3ED8:  MOVLB  5
3EDA:  BTFSC  x05.7
3EDC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
3EDE:  MOVLW  04
3EE0:  MOVWF  x06
3EE2:  MOVLW  E5
3EE4:  MOVWF  x05
3EE6:  CLRF   x07
3EE8:  MOVLW  2E
3EEA:  MOVWF  x08
3EEC:  CLRF   x09
3EEE:  MOVLW  01
3EF0:  MOVWF  x0A
3EF2:  MOVLB  0
3EF4:  CALL   162E
....................          visual=0; 
3EF8:  MOVLB  4
3EFA:  BCF    x95.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
3EFC:  BSF    F92.3
3EFE:  BTFSS  F80.3
3F00:  BRA    3F22
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3F02:  MOVLW  1E
3F04:  MOVLB  5
3F06:  MOVWF  x06
3F08:  MOVLB  0
3F0A:  CALL   0F96
3F0E:  MOVLW  01
3F10:  MOVLB  4
3F12:  MOVWF  xA2
3F14:  MOVLB  5
3F16:  CLRF   x06
3F18:  MOVLB  0
3F1A:  CALL   1000
3F1E:  MOVLB  4
3F20:  BSF    x95.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
3F22:  BSF    F92.2
3F24:  BTFSS  F80.2
3F26:  BRA    3F66
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
3F28:  CLRF   xC6
3F2A:  CLRF   xC7
3F2C:  CLRF   xC8
3F2E:  MOVLW  02
3F30:  MOVWF  xC9
3F32:  BSF    x95.5
3F34:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
3F36:  CLRF   xCE
3F38:  CLRF   xCF
3F3A:  CLRF   xD0
3F3C:  CLRF   xD1
3F3E:  MOVLW  79
3F40:  MOVWF  xA5
3F42:  MOVLW  0E
3F44:  MOVWF  xA2
3F46:  MOVLW  04
3F48:  MOVLB  5
3F4A:  MOVWF  x05
3F4C:  MOVLW  AF
3F4E:  MOVWF  x06
3F50:  MOVLB  0
3F52:  CALL   0F96
3F56:  MOVLB  5
3F58:  DECFSZ x05,F
3F5A:  BRA    3F4C
3F5C:  CLRF   x06
3F5E:  MOVLB  0
3F60:  CALL   1000
3F64:  MOVLB  4
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
3F66:  MOVF   xA2,W
3F68:  SUBLW  06
3F6A:  BTFSS  FD8.2
3F6C:  BRA    4132
....................        
....................       if(visual==1) 
3F6E:  BTFSS  x95.4
3F70:  BRA    40C6
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
3F72:  MOVLW  03
3F74:  MOVLB  5
3F76:  MOVWF  x05
3F78:  MOVLB  0
3F7A:  CALL   207A
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
3F7E:  MOVLW  04
3F80:  MOVWF  FEA
3F82:  MOVLW  E5
3F84:  MOVWF  FE9
3F86:  MOVFF  FF2,505
3F8A:  BCF    FF2.7
3F8C:  MOVLW  00
3F8E:  CALL   0A44
3F92:  TBLRD*-
3F94:  TBLRD*+
3F96:  MOVF   FF5,W
3F98:  MOVWF  FEE
3F9A:  IORLW  00
3F9C:  BNZ   3F94
3F9E:  MOVLB  5
3FA0:  BTFSC  x05.7
3FA2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3FA4:  MOVLW  04
3FA6:  MOVWF  x06
3FA8:  MOVLW  E5
3FAA:  MOVWF  x05
3FAC:  CLRF   x07
3FAE:  CLRF   x08
3FB0:  MOVLW  01
3FB2:  MOVWF  x09
3FB4:  MOVLW  02
3FB6:  MOVWF  x0A
3FB8:  MOVLB  0
3FBA:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
3FBE:  MOVLW  04
3FC0:  MOVWF  FEA
3FC2:  MOVLW  E5
3FC4:  MOVWF  FE9
3FC6:  MOVFF  FF2,505
3FCA:  BCF    FF2.7
3FCC:  MOVLW  00
3FCE:  CALL   0830
3FD2:  TBLRD*-
3FD4:  TBLRD*+
3FD6:  MOVF   FF5,W
3FD8:  MOVWF  FEE
3FDA:  IORLW  00
3FDC:  BNZ   3FD4
3FDE:  MOVLB  5
3FE0:  BTFSC  x05.7
3FE2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3FE4:  MOVLW  04
3FE6:  MOVWF  x06
3FE8:  MOVLW  E5
3FEA:  MOVWF  x05
3FEC:  MOVLW  07
3FEE:  MOVWF  x07
3FF0:  MOVLW  37
3FF2:  MOVWF  x08
3FF4:  MOVLW  02
3FF6:  MOVWF  x09
3FF8:  MOVLW  01
3FFA:  MOVWF  x0A
3FFC:  MOVLB  0
3FFE:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
4002:  MOVLW  04
4004:  MOVWF  FEA
4006:  MOVLW  E5
4008:  MOVWF  FE9
400A:  MOVFF  FF2,505
400E:  BCF    FF2.7
4010:  MOVLW  00
4012:  CALL   08DE
4016:  TBLRD*-
4018:  TBLRD*+
401A:  MOVF   FF5,W
401C:  MOVWF  FEE
401E:  IORLW  00
4020:  BNZ   4018
4022:  MOVLB  5
4024:  BTFSC  x05.7
4026:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4028:  MOVLW  04
402A:  MOVWF  x06
402C:  MOVLW  E5
402E:  MOVWF  x05
4030:  CLRF   x07
4032:  MOVLW  1A
4034:  MOVWF  x08
4036:  CLRF   x09
4038:  MOVLW  01
403A:  MOVWF  x0A
403C:  MOVLB  0
403E:  CALL   162E
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
4042:  MOVLW  04
4044:  MOVWF  FEA
4046:  MOVLW  E5
4048:  MOVWF  FE9
404A:  MOVFF  FF2,505
404E:  BCF    FF2.7
4050:  MOVLW  00
4052:  CALL   0A6A
4056:  TBLRD*-
4058:  TBLRD*+
405A:  MOVF   FF5,W
405C:  MOVWF  FEE
405E:  IORLW  00
4060:  BNZ   4058
4062:  MOVLB  5
4064:  BTFSC  x05.7
4066:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4068:  MOVLW  04
406A:  MOVWF  x06
406C:  MOVLW  E5
406E:  MOVWF  x05
4070:  CLRF   x07
4072:  MOVLW  24
4074:  MOVWF  x08
4076:  CLRF   x09
4078:  MOVLW  01
407A:  MOVWF  x0A
407C:  MOVLB  0
407E:  CALL   162E
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
4082:  MOVLW  04
4084:  MOVWF  FEA
4086:  MOVLW  E5
4088:  MOVWF  FE9
408A:  MOVFF  FF2,505
408E:  BCF    FF2.7
4090:  MOVLW  00
4092:  CALL   0A1A
4096:  TBLRD*-
4098:  TBLRD*+
409A:  MOVF   FF5,W
409C:  MOVWF  FEE
409E:  IORLW  00
40A0:  BNZ   4098
40A2:  MOVLB  5
40A4:  BTFSC  x05.7
40A6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
40A8:  MOVLW  04
40AA:  MOVWF  x06
40AC:  MOVLW  E5
40AE:  MOVWF  x05
40B0:  CLRF   x07
40B2:  MOVLW  2E
40B4:  MOVWF  x08
40B6:  CLRF   x09
40B8:  MOVLW  01
40BA:  MOVWF  x0A
40BC:  MOVLB  0
40BE:  CALL   162E
....................          visual=0; 
40C2:  MOVLB  4
40C4:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
40C6:  BSF    F92.3
40C8:  BTFSS  F80.3
40CA:  BRA    40EC
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
40CC:  MOVLW  1E
40CE:  MOVLB  5
40D0:  MOVWF  x06
40D2:  MOVLB  0
40D4:  CALL   0F96
40D8:  MOVLW  01
40DA:  MOVLB  4
40DC:  MOVWF  xA2
40DE:  MOVLB  5
40E0:  CLRF   x06
40E2:  MOVLB  0
40E4:  CALL   1000
40E8:  MOVLB  4
40EA:  BSF    x95.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
40EC:  BSF    F92.2
40EE:  BTFSS  F80.2
40F0:  BRA    4132
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
40F2:  CLRF   xC6
40F4:  CLRF   xC7
40F6:  MOVLW  05
40F8:  MOVWF  xC8
40FA:  MOVLW  01
40FC:  MOVWF  xC9
40FE:  BSF    x95.5
4100:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
4102:  CLRF   xCE
4104:  CLRF   xCF
4106:  CLRF   xD0
4108:  CLRF   xD1
410A:  MOVLW  79
410C:  MOVWF  xA5
410E:  MOVLW  0E
4110:  MOVWF  xA2
4112:  MOVLW  04
4114:  MOVLB  5
4116:  MOVWF  x05
4118:  MOVLW  AF
411A:  MOVWF  x06
411C:  MOVLB  0
411E:  CALL   0F96
4122:  MOVLB  5
4124:  DECFSZ x05,F
4126:  BRA    4118
4128:  CLRF   x06
412A:  MOVLB  0
412C:  CALL   1000
4130:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
4132:  MOVF   xA2,W
4134:  SUBLW  07
4136:  BTFSS  FD8.2
4138:  BRA    4478
....................        
....................       if(visual==1) 
413A:  BTFSS  x95.4
413C:  BRA    4290
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
413E:  MOVLW  01
4140:  MOVLB  5
4142:  MOVWF  x05
4144:  MOVLB  0
4146:  CALL   207A
....................          strcpy(Menus.Letra,"Tex & Ins"); 
414A:  MOVLW  04
414C:  MOVWF  FEA
414E:  MOVLW  E5
4150:  MOVWF  FE9
4152:  MOVFF  FF2,505
4156:  BCF    FF2.7
4158:  MOVLW  00
415A:  CALL   0A9A
415E:  TBLRD*-
4160:  TBLRD*+
4162:  MOVF   FF5,W
4164:  MOVWF  FEE
4166:  IORLW  00
4168:  BNZ   4160
416A:  MOVLB  5
416C:  BTFSC  x05.7
416E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4170:  MOVLW  04
4172:  MOVWF  x06
4174:  MOVLW  E5
4176:  MOVWF  x05
4178:  CLRF   x07
417A:  CLRF   x08
417C:  MOVLW  01
417E:  MOVWF  x09
4180:  MOVLW  02
4182:  MOVWF  x0A
4184:  MOVLB  0
4186:  CALL   162E
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
418A:  MOVLW  04
418C:  MOVWF  FEA
418E:  MOVLW  E5
4190:  MOVWF  FE9
4192:  MOVFF  FF2,505
4196:  BCF    FF2.7
4198:  MOVLW  00
419A:  CALL   085E
419E:  TBLRD*-
41A0:  TBLRD*+
41A2:  MOVF   FF5,W
41A4:  MOVWF  FEE
41A6:  IORLW  00
41A8:  BNZ   41A0
41AA:  MOVLB  5
41AC:  BTFSC  x05.7
41AE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
41B0:  MOVLW  04
41B2:  MOVWF  x06
41B4:  MOVLW  E5
41B6:  MOVWF  x05
41B8:  CLRF   x07
41BA:  MOVLW  37
41BC:  MOVWF  x08
41BE:  MOVLW  02
41C0:  MOVWF  x09
41C2:  MOVLW  01
41C4:  MOVWF  x0A
41C6:  MOVLB  0
41C8:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
41CC:  MOVLW  04
41CE:  MOVWF  FEA
41D0:  MOVLW  E5
41D2:  MOVWF  FE9
41D4:  MOVFF  FF2,505
41D8:  BCF    FF2.7
41DA:  MOVLW  00
41DC:  CALL   08DE
41E0:  TBLRD*-
41E2:  TBLRD*+
41E4:  MOVF   FF5,W
41E6:  MOVWF  FEE
41E8:  IORLW  00
41EA:  BNZ   41E2
41EC:  MOVLB  5
41EE:  BTFSC  x05.7
41F0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
41F2:  MOVLW  04
41F4:  MOVWF  x06
41F6:  MOVLW  E5
41F8:  MOVWF  x05
41FA:  CLRF   x07
41FC:  MOVLW  1A
41FE:  MOVWF  x08
4200:  CLRF   x09
4202:  MOVLW  01
4204:  MOVWF  x0A
4206:  MOVLB  0
4208:  CALL   162E
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
420C:  MOVLW  04
420E:  MOVWF  FEA
4210:  MOVLW  E5
4212:  MOVWF  FE9
4214:  MOVFF  FF2,505
4218:  BCF    FF2.7
421A:  MOVLW  00
421C:  CALL   090A
4220:  TBLRD*-
4222:  TBLRD*+
4224:  MOVF   FF5,W
4226:  MOVWF  FEE
4228:  IORLW  00
422A:  BNZ   4222
422C:  MOVLB  5
422E:  BTFSC  x05.7
4230:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4232:  MOVLW  04
4234:  MOVWF  x06
4236:  MOVLW  E5
4238:  MOVWF  x05
423A:  CLRF   x07
423C:  MOVLW  24
423E:  MOVWF  x08
4240:  CLRF   x09
4242:  MOVLW  01
4244:  MOVWF  x0A
4246:  MOVLB  0
4248:  CALL   162E
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
424C:  MOVLW  04
424E:  MOVWF  FEA
4250:  MOVLW  E5
4252:  MOVWF  FE9
4254:  MOVFF  FF2,505
4258:  BCF    FF2.7
425A:  MOVLW  00
425C:  CALL   0ABE
4260:  TBLRD*-
4262:  TBLRD*+
4264:  MOVF   FF5,W
4266:  MOVWF  FEE
4268:  IORLW  00
426A:  BNZ   4262
426C:  MOVLB  5
426E:  BTFSC  x05.7
4270:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4272:  MOVLW  04
4274:  MOVWF  x06
4276:  MOVLW  E5
4278:  MOVWF  x05
427A:  CLRF   x07
427C:  MOVLW  2E
427E:  MOVWF  x08
4280:  CLRF   x09
4282:  MOVLW  01
4284:  MOVWF  x0A
4286:  MOVLB  0
4288:  CALL   162E
....................          visual=0; 
428C:  MOVLB  4
428E:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4290:  BSF    F92.3
4292:  BTFSS  F80.3
4294:  BRA    42B6
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4296:  MOVLW  1E
4298:  MOVLB  5
429A:  MOVWF  x06
429C:  MOVLB  0
429E:  CALL   0F96
42A2:  MOVLW  01
42A4:  MOVLB  4
42A6:  MOVWF  xA2
42A8:  MOVLB  5
42AA:  CLRF   x06
42AC:  MOVLB  0
42AE:  CALL   1000
42B2:  MOVLB  4
42B4:  BSF    x95.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
42B6:  BSF    F92.2
42B8:  BTFSS  F80.2
42BA:  BRA    4478
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
42BC:  CLRF   xC6
42BE:  CLRF   xC7
42C0:  MOVLW  05
42C2:  MOVWF  xC8
42C4:  MOVLW  02
42C6:  MOVWF  xC9
42C8:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
42CA:  CLRF   xCE
42CC:  CLRF   xCF
42CE:  CLRF   xD0
42D0:  MOVLW  01
42D2:  MOVWF  xD1
42D4:  MOVLW  79
42D6:  MOVWF  xA5
42D8:  MOVLW  14
42DA:  MOVWF  xA2
42DC:  MOVLW  04
42DE:  MOVLB  5
42E0:  MOVWF  x05
42E2:  MOVLW  AF
42E4:  MOVWF  x06
42E6:  MOVLB  0
42E8:  CALL   0F96
42EC:  MOVLB  5
42EE:  DECFSZ x05,F
42F0:  BRA    42E2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
42F2:  MOVLW  14
42F4:  MOVLB  4
42F6:  MOVWF  xA2
42F8:  MOVLW  0F
42FA:  MOVLB  5
42FC:  MOVWF  x1B
42FE:  MOVLW  12
4300:  MOVWF  x1C
4302:  MOVLW  1E
4304:  MOVWF  x1D
4306:  MOVLW  35
4308:  MOVWF  x1E
430A:  CLRF   x1F
430C:  MOVLW  01
430E:  MOVWF  x20
4310:  MOVLB  0
4312:  CALL   156C
4316:  MOVLB  4
4318:  CLRF   xA9
431A:  MOVLW  C0
431C:  IORWF  FF2,F
431E:  MOVLB  5
4320:  CLRF   x06
4322:  MOVLB  0
4324:  CALL   1000
....................          strcpy(Menus.Letra,"Calentando"); 
4328:  MOVLW  04
432A:  MOVWF  FEA
432C:  MOVLW  E5
432E:  MOVWF  FE9
4330:  MOVFF  FF2,505
4334:  BCF    FF2.7
4336:  MOVLW  00
4338:  CALL   0964
433C:  TBLRD*-
433E:  TBLRD*+
4340:  MOVF   FF5,W
4342:  MOVWF  FEE
4344:  IORLW  00
4346:  BNZ   433E
4348:  MOVLB  5
434A:  BTFSC  x05.7
434C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
434E:  MOVLW  04
4350:  MOVWF  x06
4352:  MOVLW  E5
4354:  MOVWF  x05
4356:  CLRF   x07
4358:  MOVLW  37
435A:  MOVWF  x08
435C:  MOVLW  02
435E:  MOVWF  x09
4360:  MOVLW  01
4362:  MOVWF  x0A
4364:  MOVLB  0
4366:  CALL   162E
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
436A:  MOVLW  0F
436C:  MOVLB  5
436E:  MOVWF  x1B
4370:  MOVLW  12
4372:  MOVWF  x1C
4374:  MOVLW  1E
4376:  MOVWF  x1D
4378:  MOVLW  35
437A:  MOVWF  x1E
437C:  CLRF   x1F
437E:  MOVLW  01
4380:  MOVWF  x20
4382:  MOVLB  0
4384:  CALL   156C
....................          glcd_imagen(5); 
4388:  MOVLW  05
438A:  MOVLB  5
438C:  MOVWF  x05
438E:  MOVLB  0
4390:  CALL   207A
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4394:  MOVLW  04
4396:  MOVWF  FEA
4398:  MOVLW  E5
439A:  MOVWF  FE9
439C:  MOVFF  FF2,505
43A0:  BCF    FF2.7
43A2:  MOVLW  00
43A4:  CALL   098A
43A8:  TBLRD*-
43AA:  TBLRD*+
43AC:  MOVF   FF5,W
43AE:  MOVWF  FEE
43B0:  IORLW  00
43B2:  BNZ   43AA
43B4:  MOVLB  5
43B6:  BTFSC  x05.7
43B8:  BSF    FF2.7
43BA:  MOVLW  04
43BC:  MOVWF  x06
43BE:  MOVLW  E5
43C0:  MOVWF  x05
43C2:  CLRF   x07
43C4:  CLRF   x08
43C6:  MOVLW  02
43C8:  MOVWF  x09
43CA:  MOVLW  01
43CC:  MOVWF  x0A
43CE:  MOVLB  0
43D0:  CALL   162E
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
43D4:  MOVLW  04
43D6:  MOVWF  FEA
43D8:  MOVLW  E5
43DA:  MOVWF  FE9
43DC:  MOVFF  FF2,505
43E0:  BCF    FF2.7
43E2:  MOVLW  00
43E4:  CALL   09AC
43E8:  TBLRD*-
43EA:  TBLRD*+
43EC:  MOVF   FF5,W
43EE:  MOVWF  FEE
43F0:  IORLW  00
43F2:  BNZ   43EA
43F4:  MOVLB  5
43F6:  BTFSC  x05.7
43F8:  BSF    FF2.7
43FA:  MOVLW  04
43FC:  MOVWF  x06
43FE:  MOVLW  E5
4400:  MOVWF  x05
4402:  CLRF   x07
4404:  MOVLW  08
4406:  MOVWF  x08
4408:  MOVLW  02
440A:  MOVWF  x09
440C:  MOVLW  01
440E:  MOVWF  x0A
4410:  MOVLB  0
4412:  CALL   162E
....................          glcd_circle(95,40,2,NO,ON); 
4416:  MOVLW  5F
4418:  MOVLB  5
441A:  MOVWF  x05
441C:  MOVLW  28
441E:  MOVWF  x06
4420:  MOVLW  02
4422:  MOVWF  x07
4424:  CLRF   x08
4426:  MOVLW  01
4428:  MOVWF  x09
442A:  MOVLB  0
442C:  CALL   2176
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
4430:  MOVLW  04
4432:  MOVWF  FEA
4434:  MOVLW  E5
4436:  MOVWF  FE9
4438:  MOVFF  FF2,505
443C:  BCF    FF2.7
443E:  MOVLW  00
4440:  CALL   09CE
4444:  TBLRD*-
4446:  TBLRD*+
4448:  MOVF   FF5,W
444A:  MOVWF  FEE
444C:  IORLW  00
444E:  BNZ   4446
4450:  MOVLB  5
4452:  BTFSC  x05.7
4454:  BSF    FF2.7
4456:  MOVLW  04
4458:  MOVWF  x06
445A:  MOVLW  E5
445C:  MOVWF  x05
445E:  MOVLW  66
4460:  MOVWF  x07
4462:  MOVLW  28
4464:  MOVWF  x08
4466:  MOVLW  02
4468:  MOVWF  x09
446A:  MOVWF  x0A
446C:  MOVLB  0
446E:  CALL   162E
....................          MuestraTiemposProgramados(); 
4472:  CALL   2576
4476:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
4478:  MOVF   xA2,W
447A:  SUBLW  08
447C:  BTFSS  FD8.2
447E:  BRA    485C
....................          
....................          if(visual==1) 
4480:  BTFSS  x95.4
4482:  BRA    47A8
....................          { 
....................             if(Opcion>5) 
4484:  MOVF   xA7,W
4486:  SUBLW  05
4488:  BC    448E
....................             {Opcion=1;} 
448A:  MOVLW  01
448C:  MOVWF  xA7
....................             if(Opcion<1) 
448E:  MOVF   xA7,F
4490:  BNZ   4496
....................             {Opcion=5;} 
4492:  MOVLW  05
4494:  MOVWF  xA7
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
4496:  MOVLW  04
4498:  MOVWF  FEA
449A:  MOVLW  E5
449C:  MOVWF  FE9
449E:  MOVFF  FF2,505
44A2:  BCF    FF2.7
44A4:  MOVLW  00
44A6:  MOVLB  0
44A8:  CALL   0AE8
44AC:  TBLRD*-
44AE:  TBLRD*+
44B0:  MOVF   FF5,W
44B2:  MOVWF  FEE
44B4:  IORLW  00
44B6:  BNZ   44AE
44B8:  MOVLB  5
44BA:  BTFSC  x05.7
44BC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
44BE:  MOVLW  04
44C0:  MOVWF  x06
44C2:  MOVLW  E5
44C4:  MOVWF  x05
44C6:  CLRF   x07
44C8:  CLRF   x08
44CA:  MOVLW  01
44CC:  MOVWF  x09
44CE:  MOVWF  x0A
44D0:  MOVLB  0
44D2:  CALL   162E
....................        
....................             if(Opcion==1)    
44D6:  MOVLB  4
44D8:  DECFSZ xA7,W
44DA:  BRA    4522
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
44DC:  MOVLW  04
44DE:  MOVWF  FEA
44E0:  MOVLW  E5
44E2:  MOVWF  FE9
44E4:  MOVFF  FF2,505
44E8:  BCF    FF2.7
44EA:  MOVLW  00
44EC:  MOVLB  0
44EE:  CALL   0B18
44F2:  TBLRD*-
44F4:  TBLRD*+
44F6:  MOVF   FF5,W
44F8:  MOVWF  FEE
44FA:  IORLW  00
44FC:  BNZ   44F4
44FE:  MOVLB  5
4500:  BTFSC  x05.7
4502:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
4504:  MOVLW  04
4506:  MOVWF  x06
4508:  MOVLW  E5
450A:  MOVWF  x05
450C:  CLRF   x07
450E:  MOVLW  0A
4510:  MOVWF  x08
4512:  MOVLW  01
4514:  MOVWF  x09
4516:  MOVWF  x0A
4518:  MOVLB  0
451A:  CALL   162E
....................             else 
451E:  BRA    4564
4520:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
4522:  MOVLW  04
4524:  MOVWF  FEA
4526:  MOVLW  E5
4528:  MOVWF  FE9
452A:  MOVFF  FF2,505
452E:  BCF    FF2.7
4530:  MOVLW  00
4532:  MOVLB  0
4534:  CALL   0B18
4538:  TBLRD*-
453A:  TBLRD*+
453C:  MOVF   FF5,W
453E:  MOVWF  FEE
4540:  IORLW  00
4542:  BNZ   453A
4544:  MOVLB  5
4546:  BTFSC  x05.7
4548:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
454A:  MOVLW  04
454C:  MOVWF  x06
454E:  MOVLW  E5
4550:  MOVWF  x05
4552:  CLRF   x07
4554:  MOVLW  0A
4556:  MOVWF  x08
4558:  CLRF   x09
455A:  MOVLW  01
455C:  MOVWF  x0A
455E:  MOVLB  0
4560:  CALL   162E
....................              
....................             if(Opcion==2)    
4564:  MOVLB  4
4566:  MOVF   xA7,W
4568:  SUBLW  02
456A:  BNZ   45B2
....................                {strcpy(Menus.Letra,"T. Secado"); 
456C:  MOVLW  04
456E:  MOVWF  FEA
4570:  MOVLW  E5
4572:  MOVWF  FE9
4574:  MOVFF  FF2,505
4578:  BCF    FF2.7
457A:  MOVLW  00
457C:  MOVLB  0
457E:  CALL   0B44
4582:  TBLRD*-
4584:  TBLRD*+
4586:  MOVF   FF5,W
4588:  MOVWF  FEE
458A:  IORLW  00
458C:  BNZ   4584
458E:  MOVLB  5
4590:  BTFSC  x05.7
4592:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
4594:  MOVLW  04
4596:  MOVWF  x06
4598:  MOVLW  E5
459A:  MOVWF  x05
459C:  CLRF   x07
459E:  MOVLW  14
45A0:  MOVWF  x08
45A2:  MOVLW  01
45A4:  MOVWF  x09
45A6:  MOVWF  x0A
45A8:  MOVLB  0
45AA:  CALL   162E
....................             else 
45AE:  BRA    45F4
45B0:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
45B2:  MOVLW  04
45B4:  MOVWF  FEA
45B6:  MOVLW  E5
45B8:  MOVWF  FE9
45BA:  MOVFF  FF2,505
45BE:  BCF    FF2.7
45C0:  MOVLW  00
45C2:  MOVLB  0
45C4:  CALL   0B44
45C8:  TBLRD*-
45CA:  TBLRD*+
45CC:  MOVF   FF5,W
45CE:  MOVWF  FEE
45D0:  IORLW  00
45D2:  BNZ   45CA
45D4:  MOVLB  5
45D6:  BTFSC  x05.7
45D8:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
45DA:  MOVLW  04
45DC:  MOVWF  x06
45DE:  MOVLW  E5
45E0:  MOVWF  x05
45E2:  CLRF   x07
45E4:  MOVLW  14
45E6:  MOVWF  x08
45E8:  CLRF   x09
45EA:  MOVLW  01
45EC:  MOVWF  x0A
45EE:  MOVLB  0
45F0:  CALL   162E
....................                 
....................              if(Opcion==3)    
45F4:  MOVLB  4
45F6:  MOVF   xA7,W
45F8:  SUBLW  03
45FA:  BNZ   4642
....................                {strcpy(Menus.Letra,"Temperatura"); 
45FC:  MOVLW  04
45FE:  MOVWF  FEA
4600:  MOVLW  E5
4602:  MOVWF  FE9
4604:  MOVFF  FF2,505
4608:  BCF    FF2.7
460A:  MOVLW  00
460C:  MOVLB  0
460E:  CALL   0B68
4612:  TBLRD*-
4614:  TBLRD*+
4616:  MOVF   FF5,W
4618:  MOVWF  FEE
461A:  IORLW  00
461C:  BNZ   4614
461E:  MOVLB  5
4620:  BTFSC  x05.7
4622:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
4624:  MOVLW  04
4626:  MOVWF  x06
4628:  MOVLW  E5
462A:  MOVWF  x05
462C:  CLRF   x07
462E:  MOVLW  1E
4630:  MOVWF  x08
4632:  MOVLW  01
4634:  MOVWF  x09
4636:  MOVWF  x0A
4638:  MOVLB  0
463A:  CALL   162E
....................             else 
463E:  BRA    4684
4640:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
4642:  MOVLW  04
4644:  MOVWF  FEA
4646:  MOVLW  E5
4648:  MOVWF  FE9
464A:  MOVFF  FF2,505
464E:  BCF    FF2.7
4650:  MOVLW  00
4652:  MOVLB  0
4654:  CALL   0B68
4658:  TBLRD*-
465A:  TBLRD*+
465C:  MOVF   FF5,W
465E:  MOVWF  FEE
4660:  IORLW  00
4662:  BNZ   465A
4664:  MOVLB  5
4666:  BTFSC  x05.7
4668:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
466A:  MOVLW  04
466C:  MOVWF  x06
466E:  MOVLW  E5
4670:  MOVWF  x05
4672:  CLRF   x07
4674:  MOVLW  1E
4676:  MOVWF  x08
4678:  CLRF   x09
467A:  MOVLW  01
467C:  MOVWF  x0A
467E:  MOVLB  0
4680:  CALL   162E
....................                 
....................             if(Opcion==4)    
4684:  MOVLB  4
4686:  MOVF   xA7,W
4688:  SUBLW  04
468A:  BNZ   46D2
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
468C:  MOVLW  04
468E:  MOVWF  FEA
4690:  MOVLW  E5
4692:  MOVWF  FE9
4694:  MOVFF  FF2,505
4698:  BCF    FF2.7
469A:  MOVLW  00
469C:  MOVLB  0
469E:  CALL   0B8E
46A2:  TBLRD*-
46A4:  TBLRD*+
46A6:  MOVF   FF5,W
46A8:  MOVWF  FEE
46AA:  IORLW  00
46AC:  BNZ   46A4
46AE:  MOVLB  5
46B0:  BTFSC  x05.7
46B2:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
46B4:  MOVLW  04
46B6:  MOVWF  x06
46B8:  MOVLW  E5
46BA:  MOVWF  x05
46BC:  CLRF   x07
46BE:  MOVLW  28
46C0:  MOVWF  x08
46C2:  MOVLW  01
46C4:  MOVWF  x09
46C6:  MOVWF  x0A
46C8:  MOVLB  0
46CA:  CALL   162E
....................             else 
46CE:  BRA    4714
46D0:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
46D2:  MOVLW  04
46D4:  MOVWF  FEA
46D6:  MOVLW  E5
46D8:  MOVWF  FE9
46DA:  MOVFF  FF2,505
46DE:  BCF    FF2.7
46E0:  MOVLW  00
46E2:  MOVLB  0
46E4:  CALL   0B8E
46E8:  TBLRD*-
46EA:  TBLRD*+
46EC:  MOVF   FF5,W
46EE:  MOVWF  FEE
46F0:  IORLW  00
46F2:  BNZ   46EA
46F4:  MOVLB  5
46F6:  BTFSC  x05.7
46F8:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
46FA:  MOVLW  04
46FC:  MOVWF  x06
46FE:  MOVLW  E5
4700:  MOVWF  x05
4702:  CLRF   x07
4704:  MOVLW  28
4706:  MOVWF  x08
4708:  CLRF   x09
470A:  MOVLW  01
470C:  MOVWF  x0A
470E:  MOVLB  0
4710:  CALL   162E
....................                 
....................             if(Opcion==5)    
4714:  MOVLB  4
4716:  MOVF   xA7,W
4718:  SUBLW  05
471A:  BNZ   4762
....................                {strcpy(Menus.Letra,"Continuar"); 
471C:  MOVLW  04
471E:  MOVWF  FEA
4720:  MOVLW  E5
4722:  MOVWF  FE9
4724:  MOVFF  FF2,505
4728:  BCF    FF2.7
472A:  MOVLW  00
472C:  MOVLB  0
472E:  CALL   0BBA
4732:  TBLRD*-
4734:  TBLRD*+
4736:  MOVF   FF5,W
4738:  MOVWF  FEE
473A:  IORLW  00
473C:  BNZ   4734
473E:  MOVLB  5
4740:  BTFSC  x05.7
4742:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
4744:  MOVLW  04
4746:  MOVWF  x06
4748:  MOVLW  E5
474A:  MOVWF  x05
474C:  CLRF   x07
474E:  MOVLW  32
4750:  MOVWF  x08
4752:  MOVLW  01
4754:  MOVWF  x09
4756:  MOVWF  x0A
4758:  MOVLB  0
475A:  CALL   162E
....................             else 
475E:  BRA    47A4
4760:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
4762:  MOVLW  04
4764:  MOVWF  FEA
4766:  MOVLW  E5
4768:  MOVWF  FE9
476A:  MOVFF  FF2,505
476E:  BCF    FF2.7
4770:  MOVLW  00
4772:  MOVLB  0
4774:  CALL   0BBA
4778:  TBLRD*-
477A:  TBLRD*+
477C:  MOVF   FF5,W
477E:  MOVWF  FEE
4780:  IORLW  00
4782:  BNZ   477A
4784:  MOVLB  5
4786:  BTFSC  x05.7
4788:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
478A:  MOVLW  04
478C:  MOVWF  x06
478E:  MOVLW  E5
4790:  MOVWF  x05
4792:  CLRF   x07
4794:  MOVLW  32
4796:  MOVWF  x08
4798:  CLRF   x09
479A:  MOVLW  01
479C:  MOVWF  x0A
479E:  MOVLB  0
47A0:  CALL   162E
....................                           
....................             visual=0; 
47A4:  MOVLB  4
47A6:  BCF    x95.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
47A8:  BSF    F92.0
47AA:  BTFSS  F80.0
47AC:  BRA    47C8
....................          {  if(Flanco == 0)  
47AE:  BTFSC  x95.0
47B0:  BRA    47C6
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
47B2:  BSF    x95.0
47B4:  MOVLW  1E
47B6:  MOVLB  5
47B8:  MOVWF  x06
47BA:  MOVLB  0
47BC:  CALL   0F96
47C0:  MOVLB  4
47C2:  DECF   xA7,F
47C4:  BSF    x95.4
....................                } 
....................          } 
....................             else 
47C6:  BRA    47CA
....................                {Flanco = 0;} 
47C8:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
47CA:  BSF    F92.1
47CC:  BTFSS  F80.1
47CE:  BRA    47EA
....................          {  if(Flanco2 == 0)  
47D0:  BTFSC  x95.2
47D2:  BRA    47E8
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
47D4:  BSF    x95.2
47D6:  MOVLW  1E
47D8:  MOVLB  5
47DA:  MOVWF  x06
47DC:  MOVLB  0
47DE:  CALL   0F96
47E2:  MOVLB  4
47E4:  INCF   xA7,F
47E6:  BSF    x95.4
....................                }      
....................          } 
....................             else 
47E8:  BRA    47EC
....................                {Flanco2 = 0;}   
47EA:  BCF    x95.2
....................                 
....................          if(RIGHT)//Si oprime SET 
47EC:  BSF    F92.2
47EE:  BTFSS  F80.2
47F0:  BRA    482A
....................          {  if(Flanco1 == 0)  
47F2:  BTFSC  x95.1
47F4:  BRA    4828
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
47F6:  BSF    x95.1
47F8:  MOVLW  02
47FA:  MOVLB  5
47FC:  MOVWF  x05
47FE:  MOVLW  96
4800:  MOVWF  x06
4802:  MOVLB  0
4804:  CALL   0F96
4808:  MOVLB  5
480A:  DECFSZ x05,F
480C:  BRA    47FE
480E:  MOVLW  0A
4810:  MOVLB  4
4812:  ADDWF  xA7,W
4814:  MOVWF  xA2
4816:  MOVLW  01
4818:  MOVWF  xA7
481A:  MOVLB  5
481C:  CLRF   x06
481E:  MOVLB  0
4820:  CALL   1000
4824:  MOVLB  4
4826:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4828:  BRA    482C
....................                {Flanco1 = 0;}   
482A:  BCF    x95.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
482C:  BSF    F92.3
482E:  BTFSS  F80.3
4830:  BRA    485C
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
4832:  MOVLW  04
4834:  MOVLB  5
4836:  MOVWF  x05
4838:  MOVLW  AF
483A:  MOVWF  x06
483C:  MOVLB  0
483E:  CALL   0F96
4842:  MOVLB  5
4844:  DECFSZ x05,F
4846:  BRA    4838
4848:  MOVLW  01
484A:  MOVLB  4
484C:  MOVWF  xA2
484E:  MOVLB  5
4850:  CLRF   x06
4852:  MOVLB  0
4854:  CALL   1000
4858:  MOVLB  4
485A:  BSF    x95.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
485C:  MOVF   xA2,W
485E:  SUBLW  09
4860:  BTFSS  FD8.2
4862:  BRA    4D18
....................          
....................       strcpy(Menus.Letra,"Clave"); 
4864:  MOVLW  04
4866:  MOVWF  FEA
4868:  MOVLW  E5
486A:  MOVWF  FE9
486C:  MOVFF  FF2,505
4870:  BCF    FF2.7
4872:  MOVLW  00
4874:  MOVLB  0
4876:  CALL   0756
487A:  TBLRD*-
487C:  TBLRD*+
487E:  MOVF   FF5,W
4880:  MOVWF  FEE
4882:  IORLW  00
4884:  BNZ   487C
4886:  MOVLB  5
4888:  BTFSC  x05.7
488A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
488C:  MOVLW  04
488E:  MOVWF  x06
4890:  MOVLW  E5
4892:  MOVWF  x05
4894:  MOVLW  1E
4896:  MOVWF  x07
4898:  CLRF   x08
489A:  MOVLW  01
489C:  MOVWF  x09
489E:  MOVLW  02
48A0:  MOVWF  x0A
48A2:  MOVLB  0
48A4:  CALL   162E
....................        
....................       if(unidad==1) 
48A8:  MOVLB  4
48AA:  DECFSZ xA3,W
48AC:  BRA    490C
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
48AE:  MOVFF  4D2,507
48B2:  MOVLW  14
48B4:  MOVLB  5
48B6:  MOVWF  x08
48B8:  MOVLW  1E
48BA:  MOVWF  x09
48BC:  MOVLW  01
48BE:  MOVWF  x0A
48C0:  MOVLB  0
48C2:  CALL   1854
....................          displayContrasena(Contrasena[1],40,30,0); 
48C6:  MOVFF  4D3,507
48CA:  MOVLW  28
48CC:  MOVLB  5
48CE:  MOVWF  x08
48D0:  MOVLW  1E
48D2:  MOVWF  x09
48D4:  CLRF   x0A
48D6:  MOVLB  0
48D8:  CALL   1854
....................          displayContrasena(Contrasena[2],60,30,0); 
48DC:  MOVFF  4D4,507
48E0:  MOVLW  3C
48E2:  MOVLB  5
48E4:  MOVWF  x08
48E6:  MOVLW  1E
48E8:  MOVWF  x09
48EA:  CLRF   x0A
48EC:  MOVLB  0
48EE:  CALL   1854
....................          displayContrasena(Contrasena[3],80,30,0); 
48F2:  MOVFF  4D5,507
48F6:  MOVLW  50
48F8:  MOVLB  5
48FA:  MOVWF  x08
48FC:  MOVLW  1E
48FE:  MOVWF  x09
4900:  CLRF   x0A
4902:  MOVLB  0
4904:  CALL   1854
....................       } 
....................       else 
4908:  BRA    4A34
490A:  MOVLB  4
....................       { 
....................          if(unidad==2) 
490C:  MOVF   xA3,W
490E:  SUBLW  02
4910:  BNZ   4970
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
4912:  MOVFF  4D2,507
4916:  MOVLW  14
4918:  MOVLB  5
491A:  MOVWF  x08
491C:  MOVLW  1E
491E:  MOVWF  x09
4920:  CLRF   x0A
4922:  MOVLB  0
4924:  CALL   1854
....................             displayContrasena(Contrasena[1],40,30,1); 
4928:  MOVFF  4D3,507
492C:  MOVLW  28
492E:  MOVLB  5
4930:  MOVWF  x08
4932:  MOVLW  1E
4934:  MOVWF  x09
4936:  MOVLW  01
4938:  MOVWF  x0A
493A:  MOVLB  0
493C:  CALL   1854
....................             displayContrasena(Contrasena[2],60,30,0); 
4940:  MOVFF  4D4,507
4944:  MOVLW  3C
4946:  MOVLB  5
4948:  MOVWF  x08
494A:  MOVLW  1E
494C:  MOVWF  x09
494E:  CLRF   x0A
4950:  MOVLB  0
4952:  CALL   1854
....................             displayContrasena(Contrasena[3],80,30,0); 
4956:  MOVFF  4D5,507
495A:  MOVLW  50
495C:  MOVLB  5
495E:  MOVWF  x08
4960:  MOVLW  1E
4962:  MOVWF  x09
4964:  CLRF   x0A
4966:  MOVLB  0
4968:  CALL   1854
....................          } 
....................          else 
496C:  BRA    4A34
496E:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4970:  MOVF   xA3,W
4972:  SUBLW  03
4974:  BNZ   49D4
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4976:  MOVFF  4D2,507
497A:  MOVLW  14
497C:  MOVLB  5
497E:  MOVWF  x08
4980:  MOVLW  1E
4982:  MOVWF  x09
4984:  CLRF   x0A
4986:  MOVLB  0
4988:  CALL   1854
....................                displayContrasena(Contrasena[1],40,30,0); 
498C:  MOVFF  4D3,507
4990:  MOVLW  28
4992:  MOVLB  5
4994:  MOVWF  x08
4996:  MOVLW  1E
4998:  MOVWF  x09
499A:  CLRF   x0A
499C:  MOVLB  0
499E:  CALL   1854
....................                displayContrasena(Contrasena[2],60,30,1); 
49A2:  MOVFF  4D4,507
49A6:  MOVLW  3C
49A8:  MOVLB  5
49AA:  MOVWF  x08
49AC:  MOVLW  1E
49AE:  MOVWF  x09
49B0:  MOVLW  01
49B2:  MOVWF  x0A
49B4:  MOVLB  0
49B6:  CALL   1854
....................                displayContrasena(Contrasena[3],80,30,0); 
49BA:  MOVFF  4D5,507
49BE:  MOVLW  50
49C0:  MOVLB  5
49C2:  MOVWF  x08
49C4:  MOVLW  1E
49C6:  MOVWF  x09
49C8:  CLRF   x0A
49CA:  MOVLB  0
49CC:  CALL   1854
....................             } 
....................             else 
49D0:  BRA    4A34
49D2:  MOVLB  4
....................             { 
....................                if(unidad==4) 
49D4:  MOVF   xA3,W
49D6:  SUBLW  04
49D8:  BNZ   4A36
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
49DA:  MOVFF  4D2,507
49DE:  MOVLW  14
49E0:  MOVLB  5
49E2:  MOVWF  x08
49E4:  MOVLW  1E
49E6:  MOVWF  x09
49E8:  CLRF   x0A
49EA:  MOVLB  0
49EC:  CALL   1854
....................                   displayContrasena(Contrasena[1],40,30,0); 
49F0:  MOVFF  4D3,507
49F4:  MOVLW  28
49F6:  MOVLB  5
49F8:  MOVWF  x08
49FA:  MOVLW  1E
49FC:  MOVWF  x09
49FE:  CLRF   x0A
4A00:  MOVLB  0
4A02:  CALL   1854
....................                   displayContrasena(Contrasena[2],60,30,0); 
4A06:  MOVFF  4D4,507
4A0A:  MOVLW  3C
4A0C:  MOVLB  5
4A0E:  MOVWF  x08
4A10:  MOVLW  1E
4A12:  MOVWF  x09
4A14:  CLRF   x0A
4A16:  MOVLB  0
4A18:  CALL   1854
....................                   displayContrasena(Contrasena[3],80,30,1); 
4A1C:  MOVFF  4D5,507
4A20:  MOVLW  50
4A22:  MOVLB  5
4A24:  MOVWF  x08
4A26:  MOVLW  1E
4A28:  MOVWF  x09
4A2A:  MOVLW  01
4A2C:  MOVWF  x0A
4A2E:  MOVLB  0
4A30:  CALL   1854
4A34:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4A36:  BSF    F92.0
4A38:  BTFSS  F80.0
4A3A:  BRA    4AA4
....................       { 
....................          if(Flanco == 0) 
4A3C:  BTFSC  x95.0
4A3E:  BRA    4AA2
....................          { 
....................             Flanco = 1;delay_ms(30); 
4A40:  BSF    x95.0
4A42:  MOVLW  1E
4A44:  MOVLB  5
4A46:  MOVWF  x06
4A48:  MOVLB  0
4A4A:  CALL   0F96
....................             for(i=1;i<=4;i++) 
4A4E:  MOVLW  01
4A50:  MOVLB  4
4A52:  MOVWF  xA4
4A54:  MOVF   xA4,W
4A56:  SUBLW  04
4A58:  BNC   4AA2
....................             { 
....................                if(unidad==i) 
4A5A:  MOVF   xA4,W
4A5C:  SUBWF  xA3,W
4A5E:  BNZ   4A9E
....................                { 
....................                   Contrasena[i-1]++; 
4A60:  MOVLW  01
4A62:  SUBWF  xA4,W
4A64:  CLRF   03
4A66:  ADDLW  D2
4A68:  MOVWF  FE9
4A6A:  MOVLW  04
4A6C:  ADDWFC 03,W
4A6E:  MOVWF  FEA
4A70:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4A72:  MOVLW  01
4A74:  SUBWF  xA4,W
4A76:  CLRF   03
4A78:  ADDLW  D2
4A7A:  MOVWF  FE9
4A7C:  MOVLW  04
4A7E:  ADDWFC 03,W
4A80:  MOVWF  FEA
4A82:  BTFSC  FEF.7
4A84:  BRA    4A9E
4A86:  MOVF   FEF,W
4A88:  SUBLW  09
4A8A:  BC    4A9E
....................                   { 
....................                      Contrasena[i-1]=0; 
4A8C:  MOVLW  01
4A8E:  SUBWF  xA4,W
4A90:  CLRF   03
4A92:  ADDLW  D2
4A94:  MOVWF  FE9
4A96:  MOVLW  04
4A98:  ADDWFC 03,W
4A9A:  MOVWF  FEA
4A9C:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4A9E:  INCF   xA4,F
4AA0:  BRA    4A54
....................          } 
....................       } 
....................       else 
4AA2:  BRA    4AA6
....................       { 
....................          Flanco = 0; 
4AA4:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4AA6:  BSF    F92.1
4AA8:  BTFSS  F80.1
4AAA:  BRA    4B12
....................       { 
....................          if(Flanco2 == 0) 
4AAC:  BTFSC  x95.2
4AAE:  BRA    4B10
....................             {Flanco2 = 1;delay_ms(30); 
4AB0:  BSF    x95.2
4AB2:  MOVLW  1E
4AB4:  MOVLB  5
4AB6:  MOVWF  x06
4AB8:  MOVLB  0
4ABA:  CALL   0F96
....................                for(i=1;i<=4;i++) 
4ABE:  MOVLW  01
4AC0:  MOVLB  4
4AC2:  MOVWF  xA4
4AC4:  MOVF   xA4,W
4AC6:  SUBLW  04
4AC8:  BNC   4B10
....................                { 
....................                   if(unidad==i) 
4ACA:  MOVF   xA4,W
4ACC:  SUBWF  xA3,W
4ACE:  BNZ   4B0C
....................                   {Contrasena[i-1]--;  
4AD0:  MOVLW  01
4AD2:  SUBWF  xA4,W
4AD4:  CLRF   03
4AD6:  ADDLW  D2
4AD8:  MOVWF  FE9
4ADA:  MOVLW  04
4ADC:  ADDWFC 03,W
4ADE:  MOVWF  FEA
4AE0:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4AE2:  MOVLW  01
4AE4:  SUBWF  xA4,W
4AE6:  CLRF   03
4AE8:  ADDLW  D2
4AEA:  MOVWF  FE9
4AEC:  MOVLW  04
4AEE:  ADDWFC 03,W
4AF0:  MOVWF  FEA
4AF2:  BTFSC  FEF.7
4AF4:  BRA    4AF8
4AF6:  BRA    4B0C
....................                         {Contrasena[i-1]=9;} 
4AF8:  MOVLW  01
4AFA:  SUBWF  xA4,W
4AFC:  CLRF   03
4AFE:  ADDLW  D2
4B00:  MOVWF  FE9
4B02:  MOVLW  04
4B04:  ADDWFC 03,W
4B06:  MOVWF  FEA
4B08:  MOVLW  09
4B0A:  MOVWF  FEF
....................                   } 
....................                }       
4B0C:  INCF   xA4,F
4B0E:  BRA    4AC4
....................             }      
....................       } 
....................       else 
4B10:  BRA    4B14
....................       { 
....................          Flanco2 = 0; 
4B12:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4B14:  BSF    F92.2
4B16:  BTFSS  F80.2
4B18:  BRA    4B3C
....................       { 
....................          if(Flanco1 == 0) 
4B1A:  BTFSC  x95.1
4B1C:  BRA    4B3A
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4B1E:  BSF    x95.1
4B20:  MOVLW  02
4B22:  MOVLB  5
4B24:  MOVWF  x05
4B26:  MOVLW  96
4B28:  MOVWF  x06
4B2A:  MOVLB  0
4B2C:  CALL   0F96
4B30:  MOVLB  5
4B32:  DECFSZ x05,F
4B34:  BRA    4B26
4B36:  MOVLB  4
4B38:  INCF   xA3,F
....................       } 
....................       else 
4B3A:  BRA    4B3E
....................       { 
....................          Flanco1 = 0; 
4B3C:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4B3E:  BSF    F92.3
4B40:  BTFSS  F80.3
4B42:  BRA    4B6C
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4B44:  MOVLW  04
4B46:  MOVLB  5
4B48:  MOVWF  x05
4B4A:  MOVLW  AF
4B4C:  MOVWF  x06
4B4E:  MOVLB  0
4B50:  CALL   0F96
4B54:  MOVLB  5
4B56:  DECFSZ x05,F
4B58:  BRA    4B4A
4B5A:  MOVLW  01
4B5C:  MOVLB  4
4B5E:  MOVWF  xA2
4B60:  MOVLB  5
4B62:  CLRF   x06
4B64:  MOVLB  0
4B66:  CALL   1000
4B6A:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4B6C:  MOVF   xA3,W
4B6E:  SUBLW  04
4B70:  BTFSC  FD8.0
4B72:  BRA    4D18
....................       {glcd_fillScreen(OFF); 
4B74:  MOVLB  5
4B76:  CLRF   x06
4B78:  MOVLB  0
4B7A:  CALL   1000
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4B7E:  MOVLB  4
4B80:  MOVF   xD6,W
4B82:  SUBWF  xD2,W
4B84:  BNZ   4C56
4B86:  MOVF   xD7,W
4B88:  SUBWF  xD3,W
4B8A:  BNZ   4C56
4B8C:  MOVF   xD8,W
4B8E:  SUBWF  xD4,W
4B90:  BNZ   4C56
4B92:  MOVF   xD9,W
4B94:  SUBWF  xD5,W
4B96:  BNZ   4C56
....................          { 
....................             glcd_fillScreen(OFF); 
4B98:  MOVLB  5
4B9A:  CLRF   x06
4B9C:  MOVLB  0
4B9E:  CALL   1000
....................             strcpy(Menus.Letra,"Clave"); 
4BA2:  MOVLW  04
4BA4:  MOVWF  FEA
4BA6:  MOVLW  E5
4BA8:  MOVWF  FE9
4BAA:  MOVFF  FF2,505
4BAE:  BCF    FF2.7
4BB0:  MOVLW  00
4BB2:  CALL   0756
4BB6:  TBLRD*-
4BB8:  TBLRD*+
4BBA:  MOVF   FF5,W
4BBC:  MOVWF  FEE
4BBE:  IORLW  00
4BC0:  BNZ   4BB8
4BC2:  MOVLB  5
4BC4:  BTFSC  x05.7
4BC6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4BC8:  MOVLW  04
4BCA:  MOVWF  x06
4BCC:  MOVLW  E5
4BCE:  MOVWF  x05
4BD0:  MOVLW  1E
4BD2:  MOVWF  x07
4BD4:  CLRF   x08
4BD6:  CLRF   x09
4BD8:  MOVLW  02
4BDA:  MOVWF  x0A
4BDC:  MOVLB  0
4BDE:  CALL   162E
....................             strcpy(Menus.Letra,"Correcta"); 
4BE2:  MOVLW  04
4BE4:  MOVWF  FEA
4BE6:  MOVLW  E5
4BE8:  MOVWF  FE9
4BEA:  MOVFF  FF2,505
4BEE:  BCF    FF2.7
4BF0:  MOVLW  00
4BF2:  CALL   0776
4BF6:  TBLRD*-
4BF8:  TBLRD*+
4BFA:  MOVF   FF5,W
4BFC:  MOVWF  FEE
4BFE:  IORLW  00
4C00:  BNZ   4BF8
4C02:  MOVLB  5
4C04:  BTFSC  x05.7
4C06:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4C08:  MOVLW  04
4C0A:  MOVWF  x06
4C0C:  MOVLW  E5
4C0E:  MOVWF  x05
4C10:  MOVLW  0F
4C12:  MOVWF  x07
4C14:  MOVLW  1E
4C16:  MOVWF  x08
4C18:  CLRF   x09
4C1A:  MOVLW  02
4C1C:  MOVWF  x0A
4C1E:  MOVLB  0
4C20:  CALL   162E
....................             Menu=91;glcd_update();delay_ms(1000); 
4C24:  MOVLW  5B
4C26:  MOVLB  4
4C28:  MOVWF  xA2
4C2A:  MOVLB  0
4C2C:  CALL   105A
4C30:  MOVLW  04
4C32:  MOVLB  5
4C34:  MOVWF  x05
4C36:  MOVLW  FA
4C38:  MOVWF  x06
4C3A:  MOVLB  0
4C3C:  CALL   0F96
4C40:  MOVLB  5
4C42:  DECFSZ x05,F
4C44:  BRA    4C36
....................             glcd_fillScreen(OFF);unidad=1; 
4C46:  CLRF   x06
4C48:  MOVLB  0
4C4A:  CALL   1000
4C4E:  MOVLW  01
4C50:  MOVLB  4
4C52:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4C54:  BRA    4D18
....................          { 
....................             glcd_fillScreen(OFF); 
4C56:  MOVLB  5
4C58:  CLRF   x06
4C5A:  MOVLB  0
4C5C:  CALL   1000
....................             strcpy(Menus.Letra,"Clave"); 
4C60:  MOVLW  04
4C62:  MOVWF  FEA
4C64:  MOVLW  E5
4C66:  MOVWF  FE9
4C68:  MOVFF  FF2,505
4C6C:  BCF    FF2.7
4C6E:  MOVLW  00
4C70:  CALL   0756
4C74:  TBLRD*-
4C76:  TBLRD*+
4C78:  MOVF   FF5,W
4C7A:  MOVWF  FEE
4C7C:  IORLW  00
4C7E:  BNZ   4C76
4C80:  MOVLB  5
4C82:  BTFSC  x05.7
4C84:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4C86:  MOVLW  04
4C88:  MOVWF  x06
4C8A:  MOVLW  E5
4C8C:  MOVWF  x05
4C8E:  MOVLW  1E
4C90:  MOVWF  x07
4C92:  CLRF   x08
4C94:  CLRF   x09
4C96:  MOVLW  02
4C98:  MOVWF  x0A
4C9A:  MOVLB  0
4C9C:  CALL   162E
....................             strcpy(Menus.Letra,"Incorrecta"); 
4CA0:  MOVLW  04
4CA2:  MOVWF  FEA
4CA4:  MOVLW  E5
4CA6:  MOVWF  FE9
4CA8:  MOVFF  FF2,505
4CAC:  BCF    FF2.7
4CAE:  MOVLW  00
4CB0:  CALL   079A
4CB4:  TBLRD*-
4CB6:  TBLRD*+
4CB8:  MOVF   FF5,W
4CBA:  MOVWF  FEE
4CBC:  IORLW  00
4CBE:  BNZ   4CB6
4CC0:  MOVLB  5
4CC2:  BTFSC  x05.7
4CC4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4CC6:  MOVLW  04
4CC8:  MOVWF  x06
4CCA:  MOVLW  E5
4CCC:  MOVWF  x05
4CCE:  CLRF   x07
4CD0:  MOVLW  1E
4CD2:  MOVWF  x08
4CD4:  CLRF   x09
4CD6:  MOVLW  02
4CD8:  MOVWF  x0A
4CDA:  MOVLB  0
4CDC:  CALL   162E
....................             Menu=1;glcd_update();delay_ms(1000); 
4CE0:  MOVLW  01
4CE2:  MOVLB  4
4CE4:  MOVWF  xA2
4CE6:  MOVLB  0
4CE8:  CALL   105A
4CEC:  MOVLW  04
4CEE:  MOVLB  5
4CF0:  MOVWF  x05
4CF2:  MOVLW  FA
4CF4:  MOVWF  x06
4CF6:  MOVLB  0
4CF8:  CALL   0F96
4CFC:  MOVLB  5
4CFE:  DECFSZ x05,F
4D00:  BRA    4CF2
....................             glcd_fillScreen(OFF);unidad=1; 
4D02:  CLRF   x06
4D04:  MOVLB  0
4D06:  CALL   1000
4D0A:  MOVLW  01
4D0C:  MOVLB  4
4D0E:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4D10:  CLRF   xD2
4D12:  CLRF   xD3
4D14:  CLRF   xD4
4D16:  CLRF   xD5
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4D18:  MOVF   xA2,W
4D1A:  SUBLW  5B
4D1C:  BTFSS  FD8.2
4D1E:  BRA    50F8
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4D20:  MOVLW  04
4D22:  MOVWF  FEA
4D24:  MOVLW  E5
4D26:  MOVWF  FE9
4D28:  MOVFF  FF2,505
4D2C:  BCF    FF2.7
4D2E:  MOVLW  00
4D30:  MOVLB  0
4D32:  CALL   0BDE
4D36:  TBLRD*-
4D38:  TBLRD*+
4D3A:  MOVF   FF5,W
4D3C:  MOVWF  FEE
4D3E:  IORLW  00
4D40:  BNZ   4D38
4D42:  MOVLB  5
4D44:  BTFSC  x05.7
4D46:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4D48:  MOVLW  04
4D4A:  MOVWF  x06
4D4C:  MOVLW  E5
4D4E:  MOVWF  x05
4D50:  CLRF   x07
4D52:  CLRF   x08
4D54:  MOVLW  01
4D56:  MOVWF  x09
4D58:  MOVLW  02
4D5A:  MOVWF  x0A
4D5C:  MOVLB  0
4D5E:  CALL   162E
....................        
....................       if(unidad==1) 
4D62:  MOVLB  4
4D64:  DECFSZ xA3,W
4D66:  BRA    4DC6
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4D68:  MOVFF  4D6,507
4D6C:  MOVLW  14
4D6E:  MOVLB  5
4D70:  MOVWF  x08
4D72:  MOVLW  1E
4D74:  MOVWF  x09
4D76:  MOVLW  01
4D78:  MOVWF  x0A
4D7A:  MOVLB  0
4D7C:  CALL   1854
....................          displayContrasena(Password[1],40,30,0); 
4D80:  MOVFF  4D7,507
4D84:  MOVLW  28
4D86:  MOVLB  5
4D88:  MOVWF  x08
4D8A:  MOVLW  1E
4D8C:  MOVWF  x09
4D8E:  CLRF   x0A
4D90:  MOVLB  0
4D92:  CALL   1854
....................          displayContrasena(Password[2],60,30,0); 
4D96:  MOVFF  4D8,507
4D9A:  MOVLW  3C
4D9C:  MOVLB  5
4D9E:  MOVWF  x08
4DA0:  MOVLW  1E
4DA2:  MOVWF  x09
4DA4:  CLRF   x0A
4DA6:  MOVLB  0
4DA8:  CALL   1854
....................          displayContrasena(Password[3],80,30,0); 
4DAC:  MOVFF  4D9,507
4DB0:  MOVLW  50
4DB2:  MOVLB  5
4DB4:  MOVWF  x08
4DB6:  MOVLW  1E
4DB8:  MOVWF  x09
4DBA:  CLRF   x0A
4DBC:  MOVLB  0
4DBE:  CALL   1854
....................       } 
....................       else 
4DC2:  BRA    4EEE
4DC4:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4DC6:  MOVF   xA3,W
4DC8:  SUBLW  02
4DCA:  BNZ   4E2A
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4DCC:  MOVFF  4D6,507
4DD0:  MOVLW  14
4DD2:  MOVLB  5
4DD4:  MOVWF  x08
4DD6:  MOVLW  1E
4DD8:  MOVWF  x09
4DDA:  CLRF   x0A
4DDC:  MOVLB  0
4DDE:  CALL   1854
....................             displayContrasena(Password[1],40,30,1); 
4DE2:  MOVFF  4D7,507
4DE6:  MOVLW  28
4DE8:  MOVLB  5
4DEA:  MOVWF  x08
4DEC:  MOVLW  1E
4DEE:  MOVWF  x09
4DF0:  MOVLW  01
4DF2:  MOVWF  x0A
4DF4:  MOVLB  0
4DF6:  CALL   1854
....................             displayContrasena(Password[2],60,30,0); 
4DFA:  MOVFF  4D8,507
4DFE:  MOVLW  3C
4E00:  MOVLB  5
4E02:  MOVWF  x08
4E04:  MOVLW  1E
4E06:  MOVWF  x09
4E08:  CLRF   x0A
4E0A:  MOVLB  0
4E0C:  CALL   1854
....................             displayContrasena(Password[3],80,30,0); 
4E10:  MOVFF  4D9,507
4E14:  MOVLW  50
4E16:  MOVLB  5
4E18:  MOVWF  x08
4E1A:  MOVLW  1E
4E1C:  MOVWF  x09
4E1E:  CLRF   x0A
4E20:  MOVLB  0
4E22:  CALL   1854
....................          } 
....................          else 
4E26:  BRA    4EEE
4E28:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4E2A:  MOVF   xA3,W
4E2C:  SUBLW  03
4E2E:  BNZ   4E8E
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4E30:  MOVFF  4D6,507
4E34:  MOVLW  14
4E36:  MOVLB  5
4E38:  MOVWF  x08
4E3A:  MOVLW  1E
4E3C:  MOVWF  x09
4E3E:  CLRF   x0A
4E40:  MOVLB  0
4E42:  CALL   1854
....................                displayContrasena(Password[1],40,30,0); 
4E46:  MOVFF  4D7,507
4E4A:  MOVLW  28
4E4C:  MOVLB  5
4E4E:  MOVWF  x08
4E50:  MOVLW  1E
4E52:  MOVWF  x09
4E54:  CLRF   x0A
4E56:  MOVLB  0
4E58:  CALL   1854
....................                displayContrasena(Password[2],60,30,1); 
4E5C:  MOVFF  4D8,507
4E60:  MOVLW  3C
4E62:  MOVLB  5
4E64:  MOVWF  x08
4E66:  MOVLW  1E
4E68:  MOVWF  x09
4E6A:  MOVLW  01
4E6C:  MOVWF  x0A
4E6E:  MOVLB  0
4E70:  CALL   1854
....................                displayContrasena(Password[3],80,30,0); 
4E74:  MOVFF  4D9,507
4E78:  MOVLW  50
4E7A:  MOVLB  5
4E7C:  MOVWF  x08
4E7E:  MOVLW  1E
4E80:  MOVWF  x09
4E82:  CLRF   x0A
4E84:  MOVLB  0
4E86:  CALL   1854
....................             } 
....................             else 
4E8A:  BRA    4EEE
4E8C:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4E8E:  MOVF   xA3,W
4E90:  SUBLW  04
4E92:  BNZ   4EF0
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4E94:  MOVFF  4D6,507
4E98:  MOVLW  14
4E9A:  MOVLB  5
4E9C:  MOVWF  x08
4E9E:  MOVLW  1E
4EA0:  MOVWF  x09
4EA2:  CLRF   x0A
4EA4:  MOVLB  0
4EA6:  CALL   1854
....................                   displayContrasena(Password[1],40,30,0); 
4EAA:  MOVFF  4D7,507
4EAE:  MOVLW  28
4EB0:  MOVLB  5
4EB2:  MOVWF  x08
4EB4:  MOVLW  1E
4EB6:  MOVWF  x09
4EB8:  CLRF   x0A
4EBA:  MOVLB  0
4EBC:  CALL   1854
....................                   displayContrasena(Password[2],60,30,0); 
4EC0:  MOVFF  4D8,507
4EC4:  MOVLW  3C
4EC6:  MOVLB  5
4EC8:  MOVWF  x08
4ECA:  MOVLW  1E
4ECC:  MOVWF  x09
4ECE:  CLRF   x0A
4ED0:  MOVLB  0
4ED2:  CALL   1854
....................                   displayContrasena(Password[3],80,30,1); 
4ED6:  MOVFF  4D9,507
4EDA:  MOVLW  50
4EDC:  MOVLB  5
4EDE:  MOVWF  x08
4EE0:  MOVLW  1E
4EE2:  MOVWF  x09
4EE4:  MOVLW  01
4EE6:  MOVWF  x0A
4EE8:  MOVLB  0
4EEA:  CALL   1854
4EEE:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4EF0:  BSF    F92.0
4EF2:  BTFSS  F80.0
4EF4:  BRA    4F5E
....................       { 
....................          if(Flanco == 0) 
4EF6:  BTFSC  x95.0
4EF8:  BRA    4F5C
....................          { 
....................             Flanco = 1;delay_ms(30); 
4EFA:  BSF    x95.0
4EFC:  MOVLW  1E
4EFE:  MOVLB  5
4F00:  MOVWF  x06
4F02:  MOVLB  0
4F04:  CALL   0F96
....................             for(i=1;i<=4;i++) 
4F08:  MOVLW  01
4F0A:  MOVLB  4
4F0C:  MOVWF  xA4
4F0E:  MOVF   xA4,W
4F10:  SUBLW  04
4F12:  BNC   4F5C
....................             { 
....................                if(unidad==i) 
4F14:  MOVF   xA4,W
4F16:  SUBWF  xA3,W
4F18:  BNZ   4F58
....................                { 
....................                   Password[i-1]++; 
4F1A:  MOVLW  01
4F1C:  SUBWF  xA4,W
4F1E:  CLRF   03
4F20:  ADDLW  D6
4F22:  MOVWF  FE9
4F24:  MOVLW  04
4F26:  ADDWFC 03,W
4F28:  MOVWF  FEA
4F2A:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4F2C:  MOVLW  01
4F2E:  SUBWF  xA4,W
4F30:  CLRF   03
4F32:  ADDLW  D6
4F34:  MOVWF  FE9
4F36:  MOVLW  04
4F38:  ADDWFC 03,W
4F3A:  MOVWF  FEA
4F3C:  BTFSC  FEF.7
4F3E:  BRA    4F58
4F40:  MOVF   FEF,W
4F42:  SUBLW  09
4F44:  BC    4F58
....................                   { 
....................                      Password[i-1]=0; 
4F46:  MOVLW  01
4F48:  SUBWF  xA4,W
4F4A:  CLRF   03
4F4C:  ADDLW  D6
4F4E:  MOVWF  FE9
4F50:  MOVLW  04
4F52:  ADDWFC 03,W
4F54:  MOVWF  FEA
4F56:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4F58:  INCF   xA4,F
4F5A:  BRA    4F0E
....................          } 
....................       } 
....................       else 
4F5C:  BRA    4F60
....................       { 
....................          Flanco = 0; 
4F5E:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4F60:  BSF    F92.1
4F62:  BTFSS  F80.1
4F64:  BRA    4FCC
....................       { 
....................          if(Flanco2 == 0) 
4F66:  BTFSC  x95.2
4F68:  BRA    4FCA
....................             {Flanco2 = 1;delay_ms(30); 
4F6A:  BSF    x95.2
4F6C:  MOVLW  1E
4F6E:  MOVLB  5
4F70:  MOVWF  x06
4F72:  MOVLB  0
4F74:  CALL   0F96
....................                for(i=1;i<=4;i++) 
4F78:  MOVLW  01
4F7A:  MOVLB  4
4F7C:  MOVWF  xA4
4F7E:  MOVF   xA4,W
4F80:  SUBLW  04
4F82:  BNC   4FCA
....................                { 
....................                   if(unidad==i) 
4F84:  MOVF   xA4,W
4F86:  SUBWF  xA3,W
4F88:  BNZ   4FC6
....................                   { 
....................                      Password[i-1]--; 
4F8A:  MOVLW  01
4F8C:  SUBWF  xA4,W
4F8E:  CLRF   03
4F90:  ADDLW  D6
4F92:  MOVWF  FE9
4F94:  MOVLW  04
4F96:  ADDWFC 03,W
4F98:  MOVWF  FEA
4F9A:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4F9C:  MOVLW  01
4F9E:  SUBWF  xA4,W
4FA0:  CLRF   03
4FA2:  ADDLW  D6
4FA4:  MOVWF  FE9
4FA6:  MOVLW  04
4FA8:  ADDWFC 03,W
4FAA:  MOVWF  FEA
4FAC:  BTFSC  FEF.7
4FAE:  BRA    4FB2
4FB0:  BRA    4FC6
....................                      { 
....................                         Password[i-1]=9; 
4FB2:  MOVLW  01
4FB4:  SUBWF  xA4,W
4FB6:  CLRF   03
4FB8:  ADDLW  D6
4FBA:  MOVWF  FE9
4FBC:  MOVLW  04
4FBE:  ADDWFC 03,W
4FC0:  MOVWF  FEA
4FC2:  MOVLW  09
4FC4:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
4FC6:  INCF   xA4,F
4FC8:  BRA    4F7E
....................             }      
....................       } 
....................       else 
4FCA:  BRA    4FCE
....................       { 
....................          Flanco2 = 0; 
4FCC:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4FCE:  BSF    F92.2
4FD0:  BTFSS  F80.2
4FD2:  BRA    4FF6
....................       { 
....................          if(Flanco1 == 0) 
4FD4:  BTFSC  x95.1
4FD6:  BRA    4FF4
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4FD8:  BSF    x95.1
4FDA:  MOVLW  02
4FDC:  MOVLB  5
4FDE:  MOVWF  x05
4FE0:  MOVLW  96
4FE2:  MOVWF  x06
4FE4:  MOVLB  0
4FE6:  CALL   0F96
4FEA:  MOVLB  5
4FEC:  DECFSZ x05,F
4FEE:  BRA    4FE0
4FF0:  MOVLB  4
4FF2:  INCF   xA3,F
....................       } 
....................       else 
4FF4:  BRA    4FF8
....................       { 
....................          Flanco1 = 0; 
4FF6:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4FF8:  BSF    F92.3
4FFA:  BTFSS  F80.3
4FFC:  BRA    5026
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4FFE:  MOVLW  04
5000:  MOVLB  5
5002:  MOVWF  x05
5004:  MOVLW  AF
5006:  MOVWF  x06
5008:  MOVLB  0
500A:  CALL   0F96
500E:  MOVLB  5
5010:  DECFSZ x05,F
5012:  BRA    5004
5014:  MOVLW  01
5016:  MOVLB  4
5018:  MOVWF  xA2
501A:  MOVLB  5
501C:  CLRF   x06
501E:  MOVLB  0
5020:  CALL   1000
5024:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
5026:  MOVF   xA3,W
5028:  SUBLW  04
502A:  BC    50F8
....................       { 
....................          Opcion=1;unidad=1; 
502C:  MOVLW  01
502E:  MOVWF  xA7
5030:  MOVWF  xA3
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
5032:  MOVLW  0A
5034:  MOVWF  FA9
5036:  MOVFF  4D6,FA8
503A:  BCF    FA6.6
503C:  BCF    FA6.7
503E:  BSF    FA6.2
5040:  MOVF   FF2,W
5042:  MOVWF  00
5044:  BCF    FF2.7
5046:  MOVLB  F
5048:  MOVLW  55
504A:  MOVWF  FA7
504C:  MOVLW  AA
504E:  MOVWF  FA7
5050:  BSF    FA6.1
5052:  BTFSC  FA6.1
5054:  BRA    5052
5056:  BCF    FA6.2
5058:  MOVF   00,W
505A:  IORWF  FF2,F
505C:  MOVLW  0B
505E:  MOVWF  FA9
5060:  MOVFF  4D7,FA8
5064:  BCF    FA6.6
5066:  BCF    FA6.7
5068:  BSF    FA6.2
506A:  MOVF   FF2,W
506C:  MOVWF  00
506E:  BCF    FF2.7
5070:  MOVLW  55
5072:  MOVWF  FA7
5074:  MOVLW  AA
5076:  MOVWF  FA7
5078:  BSF    FA6.1
507A:  BTFSC  FA6.1
507C:  BRA    507A
507E:  BCF    FA6.2
5080:  MOVF   00,W
5082:  IORWF  FF2,F
5084:  MOVLW  0C
5086:  MOVWF  FA9
5088:  MOVFF  4D8,FA8
508C:  BCF    FA6.6
508E:  BCF    FA6.7
5090:  BSF    FA6.2
5092:  MOVF   FF2,W
5094:  MOVWF  00
5096:  BCF    FF2.7
5098:  MOVLW  55
509A:  MOVWF  FA7
509C:  MOVLW  AA
509E:  MOVWF  FA7
50A0:  BSF    FA6.1
50A2:  BTFSC  FA6.1
50A4:  BRA    50A2
50A6:  BCF    FA6.2
50A8:  MOVF   00,W
50AA:  IORWF  FF2,F
50AC:  MOVLW  0D
50AE:  MOVWF  FA9
50B0:  MOVFF  4D9,FA8
50B4:  BCF    FA6.6
50B6:  BCF    FA6.7
50B8:  BSF    FA6.2
50BA:  MOVF   FF2,W
50BC:  MOVWF  00
50BE:  BCF    FF2.7
50C0:  MOVLW  55
50C2:  MOVWF  FA7
50C4:  MOVLW  AA
50C6:  MOVWF  FA7
50C8:  BSF    FA6.1
50CA:  BTFSC  FA6.1
50CC:  BRA    50CA
50CE:  BCF    FA6.2
50D0:  MOVF   00,W
50D2:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
50D4:  MOVLW  04
50D6:  MOVLB  5
50D8:  MOVWF  x05
50DA:  MOVLW  FA
50DC:  MOVWF  x06
50DE:  MOVLB  0
50E0:  CALL   0F96
50E4:  MOVLB  5
50E6:  DECFSZ x05,F
50E8:  BRA    50DA
50EA:  CLRF   x06
50EC:  MOVLB  0
50EE:  CALL   1000
50F2:  MOVLW  01
50F4:  MOVLB  4
50F6:  MOVWF  xA2
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
50F8:  MOVF   xA2,W
50FA:  SUBLW  0B
50FC:  BTFSS  FD8.2
50FE:  BRA    5400
....................       
....................       if(visual==1) 
5100:  BTFSS  x95.4
5102:  BRA    528E
....................       { 
....................          if(unidad<1) 
5104:  MOVF   xA3,F
5106:  BNZ   510C
....................          {unidad=4;} 
5108:  MOVLW  04
510A:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
510C:  MOVLW  04
510E:  MOVWF  FEA
5110:  MOVLW  E5
5112:  MOVWF  FE9
5114:  MOVFF  FF2,505
5118:  BCF    FF2.7
511A:  MOVLW  00
511C:  MOVLB  0
511E:  CALL   0C04
5122:  TBLRD*-
5124:  TBLRD*+
5126:  MOVF   FF5,W
5128:  MOVWF  FEE
512A:  IORLW  00
512C:  BNZ   5124
512E:  MOVLB  5
5130:  BTFSC  x05.7
5132:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5134:  MOVLW  04
5136:  MOVWF  x06
5138:  MOVLW  E5
513A:  MOVWF  x05
513C:  CLRF   x07
513E:  CLRF   x08
5140:  MOVLW  01
5142:  MOVWF  x09
5144:  MOVLW  02
5146:  MOVWF  x0A
5148:  MOVLB  0
514A:  CALL   162E
....................           
....................          if(unidad==4) 
514E:  MOVLB  4
5150:  MOVF   xA3,W
5152:  SUBLW  04
5154:  BNZ   5174
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
5156:  MOVFF  4C9,506
515A:  MOVLW  14
515C:  MOVLB  5
515E:  MOVWF  x07
5160:  MOVLW  28
5162:  MOVWF  x08
5164:  MOVLW  01
5166:  MOVWF  x09
5168:  MOVLW  02
516A:  MOVWF  x0A
516C:  MOVLB  0
516E:  CALL   2426
....................          else 
5172:  BRA    518E
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
5174:  MOVFF  4C9,506
5178:  MOVLW  14
517A:  MOVLB  5
517C:  MOVWF  x07
517E:  MOVLW  28
5180:  MOVWF  x08
5182:  CLRF   x09
5184:  MOVLW  02
5186:  MOVWF  x0A
5188:  MOVLB  0
518A:  CALL   2426
....................           
....................          if(unidad==3) 
518E:  MOVLB  4
5190:  MOVF   xA3,W
5192:  SUBLW  03
5194:  BNZ   51B2
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
5196:  MOVFF  4C8,506
519A:  MOVLW  28
519C:  MOVLB  5
519E:  MOVWF  x07
51A0:  MOVWF  x08
51A2:  MOVLW  01
51A4:  MOVWF  x09
51A6:  MOVLW  02
51A8:  MOVWF  x0A
51AA:  MOVLB  0
51AC:  CALL   2426
....................          else 
51B0:  BRA    51CA
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
51B2:  MOVFF  4C8,506
51B6:  MOVLW  28
51B8:  MOVLB  5
51BA:  MOVWF  x07
51BC:  MOVWF  x08
51BE:  CLRF   x09
51C0:  MOVLW  02
51C2:  MOVWF  x0A
51C4:  MOVLB  0
51C6:  CALL   2426
....................           
....................          if(unidad==2) 
51CA:  MOVLB  4
51CC:  MOVF   xA3,W
51CE:  SUBLW  02
51D0:  BNZ   51F0
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
51D2:  MOVFF  4C7,506
51D6:  MOVLW  46
51D8:  MOVLB  5
51DA:  MOVWF  x07
51DC:  MOVLW  28
51DE:  MOVWF  x08
51E0:  MOVLW  01
51E2:  MOVWF  x09
51E4:  MOVLW  02
51E6:  MOVWF  x0A
51E8:  MOVLB  0
51EA:  CALL   2426
....................          else 
51EE:  BRA    520A
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
51F0:  MOVFF  4C7,506
51F4:  MOVLW  46
51F6:  MOVLB  5
51F8:  MOVWF  x07
51FA:  MOVLW  28
51FC:  MOVWF  x08
51FE:  CLRF   x09
5200:  MOVLW  02
5202:  MOVWF  x0A
5204:  MOVLB  0
5206:  CALL   2426
....................           
....................          if(unidad==1) 
520A:  MOVLB  4
520C:  DECFSZ xA3,W
520E:  BRA    522E
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
5210:  MOVFF  4C6,506
5214:  MOVLW  5A
5216:  MOVLB  5
5218:  MOVWF  x07
521A:  MOVLW  28
521C:  MOVWF  x08
521E:  MOVLW  01
5220:  MOVWF  x09
5222:  MOVLW  02
5224:  MOVWF  x0A
5226:  MOVLB  0
5228:  CALL   2426
....................          else 
522C:  BRA    5248
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
522E:  MOVFF  4C6,506
5232:  MOVLW  5A
5234:  MOVLB  5
5236:  MOVWF  x07
5238:  MOVLW  28
523A:  MOVWF  x08
523C:  CLRF   x09
523E:  MOVLW  02
5240:  MOVWF  x0A
5242:  MOVLB  0
5244:  CALL   2426
....................           
....................          strcpy(Menus.Letra,":"); 
5248:  MOVLW  04
524A:  MOVWF  FEA
524C:  MOVLW  E5
524E:  MOVWF  FE9
5250:  MOVFF  FF2,505
5254:  BCF    FF2.7
5256:  MOVLW  00
5258:  CALL   06BE
525C:  TBLRD*-
525E:  TBLRD*+
5260:  MOVF   FF5,W
5262:  MOVWF  FEE
5264:  IORLW  00
5266:  BNZ   525E
5268:  MOVLB  5
526A:  BTFSC  x05.7
526C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
526E:  MOVLW  04
5270:  MOVWF  x06
5272:  MOVLW  E5
5274:  MOVWF  x05
5276:  MOVLW  3C
5278:  MOVWF  x07
527A:  MOVLW  2A
527C:  MOVWF  x08
527E:  MOVLW  02
5280:  MOVWF  x09
5282:  MOVWF  x0A
5284:  MOVLB  0
5286:  CALL   162E
....................           
....................          visual=0; 
528A:  MOVLB  4
528C:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
528E:  BSF    F92.0
5290:  BTFSS  F80.0
5292:  BRA    52D0
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
5294:  MOVLW  01
5296:  SUBWF  xA3,W
5298:  CLRF   03
529A:  ADDLW  C6
529C:  MOVWF  FE9
529E:  MOVLW  04
52A0:  ADDWFC 03,W
52A2:  MOVWF  FEA
52A4:  BTFSC  FEF.7
52A6:  BRA    52AE
52A8:  MOVF   FEF,W
52AA:  SUBLW  08
52AC:  BNC   52D0
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
52AE:  MOVLW  1E
52B0:  MOVLB  5
52B2:  MOVWF  x06
52B4:  MOVLB  0
52B6:  CALL   0F96
52BA:  MOVLW  01
52BC:  MOVLB  4
52BE:  SUBWF  xA3,W
52C0:  CLRF   03
52C2:  ADDLW  C6
52C4:  MOVWF  FE9
52C6:  MOVLW  04
52C8:  ADDWFC 03,W
52CA:  MOVWF  FEA
52CC:  INCF   FEF,F
52CE:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
52D0:  BSF    F92.1
52D2:  BTFSS  F80.1
52D4:  BRA    5312
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
52D6:  MOVLW  01
52D8:  SUBWF  xA3,W
52DA:  CLRF   03
52DC:  ADDLW  C6
52DE:  MOVWF  FE9
52E0:  MOVLW  04
52E2:  ADDWFC 03,W
52E4:  MOVWF  FEA
52E6:  BTFSC  FEF.7
52E8:  BRA    5312
52EA:  MOVF   FEF,W
52EC:  SUBLW  00
52EE:  BC    5312
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
52F0:  MOVLW  1E
52F2:  MOVLB  5
52F4:  MOVWF  x06
52F6:  MOVLB  0
52F8:  CALL   0F96
52FC:  MOVLW  01
52FE:  MOVLB  4
5300:  SUBWF  xA3,W
5302:  CLRF   03
5304:  ADDLW  C6
5306:  MOVWF  FE9
5308:  MOVLW  04
530A:  ADDWFC 03,W
530C:  MOVWF  FEA
530E:  DECF   FEF,F
5310:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5312:  BSF    F92.2
5314:  BTFSS  F80.2
5316:  BRA    532A
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5318:  MOVLW  1E
531A:  MOVLB  5
531C:  MOVWF  x06
531E:  MOVLB  0
5320:  CALL   0F96
5324:  MOVLB  4
5326:  DECF   xA3,F
5328:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
532A:  BSF    F92.3
532C:  BTFSS  F80.3
532E:  BRA    5400
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5330:  MOVLW  04
5332:  MOVLB  5
5334:  MOVWF  x05
5336:  MOVLW  AF
5338:  MOVWF  x06
533A:  MOVLB  0
533C:  CALL   0F96
5340:  MOVLB  5
5342:  DECFSZ x05,F
5344:  BRA    5336
5346:  MOVLW  08
5348:  MOVLB  4
534A:  MOVWF  xA2
534C:  MOVLB  5
534E:  CLRF   x06
5350:  MOVLB  0
5352:  CALL   1000
5356:  MOVLW  01
5358:  MOVLB  4
535A:  MOVWF  xA7
535C:  BSF    x95.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
535E:  CLRF   FA9
5360:  MOVFF  4C6,FA8
5364:  BCF    FA6.6
5366:  BCF    FA6.7
5368:  BSF    FA6.2
536A:  MOVF   FF2,W
536C:  MOVWF  00
536E:  BCF    FF2.7
5370:  MOVLB  F
5372:  MOVLW  55
5374:  MOVWF  FA7
5376:  MOVLW  AA
5378:  MOVWF  FA7
537A:  BSF    FA6.1
537C:  BTFSC  FA6.1
537E:  BRA    537C
5380:  BCF    FA6.2
5382:  MOVF   00,W
5384:  IORWF  FF2,F
5386:  MOVLW  01
5388:  MOVWF  FA9
538A:  MOVFF  4C7,FA8
538E:  BCF    FA6.6
5390:  BCF    FA6.7
5392:  BSF    FA6.2
5394:  MOVF   FF2,W
5396:  MOVWF  00
5398:  BCF    FF2.7
539A:  MOVLW  55
539C:  MOVWF  FA7
539E:  MOVLW  AA
53A0:  MOVWF  FA7
53A2:  BSF    FA6.1
53A4:  BTFSC  FA6.1
53A6:  BRA    53A4
53A8:  BCF    FA6.2
53AA:  MOVF   00,W
53AC:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
53AE:  MOVLW  02
53B0:  MOVWF  FA9
53B2:  MOVFF  4C8,FA8
53B6:  BCF    FA6.6
53B8:  BCF    FA6.7
53BA:  BSF    FA6.2
53BC:  MOVFF  FF2,00
53C0:  BCF    FF2.7
53C2:  MOVLW  55
53C4:  MOVWF  FA7
53C6:  MOVLW  AA
53C8:  MOVWF  FA7
53CA:  BSF    FA6.1
53CC:  BTFSC  FA6.1
53CE:  BRA    53CC
53D0:  BCF    FA6.2
53D2:  MOVF   00,W
53D4:  IORWF  FF2,F
53D6:  MOVLW  03
53D8:  MOVWF  FA9
53DA:  MOVFF  4C9,FA8
53DE:  BCF    FA6.6
53E0:  BCF    FA6.7
53E2:  BSF    FA6.2
53E4:  MOVFF  FF2,00
53E8:  BCF    FF2.7
53EA:  MOVLW  55
53EC:  MOVWF  FA7
53EE:  MOVLW  AA
53F0:  MOVWF  FA7
53F2:  BSF    FA6.1
53F4:  BTFSC  FA6.1
53F6:  BRA    53F4
53F8:  BCF    FA6.2
53FA:  MOVF   00,W
53FC:  IORWF  FF2,F
53FE:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
5400:  MOVF   xA2,W
5402:  SUBLW  0C
5404:  BTFSS  FD8.2
5406:  BRA    570A
....................       
....................       if(visual==1) 
5408:  BTFSS  x95.4
540A:  BRA    5596
....................       { 
....................          if(unidad<1) 
540C:  MOVF   xA3,F
540E:  BNZ   5414
....................          {unidad=4;} 
5410:  MOVLW  04
5412:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra," Secado"); 
5414:  MOVLW  04
5416:  MOVWF  FEA
5418:  MOVLW  E5
541A:  MOVWF  FE9
541C:  MOVFF  FF2,505
5420:  BCF    FF2.7
5422:  MOVLW  00
5424:  MOVLB  0
5426:  CALL   0C28
542A:  TBLRD*-
542C:  TBLRD*+
542E:  MOVF   FF5,W
5430:  MOVWF  FEE
5432:  IORLW  00
5434:  BNZ   542C
5436:  MOVLB  5
5438:  BTFSC  x05.7
543A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
543C:  MOVLW  04
543E:  MOVWF  x06
5440:  MOVLW  E5
5442:  MOVWF  x05
5444:  CLRF   x07
5446:  CLRF   x08
5448:  MOVLW  01
544A:  MOVWF  x09
544C:  MOVLW  02
544E:  MOVWF  x0A
5450:  MOVLB  0
5452:  CALL   162E
....................           
....................          if(unidad==4) 
5456:  MOVLB  4
5458:  MOVF   xA3,W
545A:  SUBLW  04
545C:  BNZ   547C
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
545E:  MOVFF  4D1,506
5462:  MOVLW  14
5464:  MOVLB  5
5466:  MOVWF  x07
5468:  MOVLW  28
546A:  MOVWF  x08
546C:  MOVLW  01
546E:  MOVWF  x09
5470:  MOVLW  02
5472:  MOVWF  x0A
5474:  MOVLB  0
5476:  CALL   2426
....................          else 
547A:  BRA    5496
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
547C:  MOVFF  4D1,506
5480:  MOVLW  14
5482:  MOVLB  5
5484:  MOVWF  x07
5486:  MOVLW  28
5488:  MOVWF  x08
548A:  CLRF   x09
548C:  MOVLW  02
548E:  MOVWF  x0A
5490:  MOVLB  0
5492:  CALL   2426
....................           
....................          if(unidad==3) 
5496:  MOVLB  4
5498:  MOVF   xA3,W
549A:  SUBLW  03
549C:  BNZ   54BA
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
549E:  MOVFF  4D0,506
54A2:  MOVLW  28
54A4:  MOVLB  5
54A6:  MOVWF  x07
54A8:  MOVWF  x08
54AA:  MOVLW  01
54AC:  MOVWF  x09
54AE:  MOVLW  02
54B0:  MOVWF  x0A
54B2:  MOVLB  0
54B4:  CALL   2426
....................          else 
54B8:  BRA    54D2
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
54BA:  MOVFF  4D0,506
54BE:  MOVLW  28
54C0:  MOVLB  5
54C2:  MOVWF  x07
54C4:  MOVWF  x08
54C6:  CLRF   x09
54C8:  MOVLW  02
54CA:  MOVWF  x0A
54CC:  MOVLB  0
54CE:  CALL   2426
....................           
....................          if(unidad==2) 
54D2:  MOVLB  4
54D4:  MOVF   xA3,W
54D6:  SUBLW  02
54D8:  BNZ   54F8
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
54DA:  MOVFF  4CF,506
54DE:  MOVLW  46
54E0:  MOVLB  5
54E2:  MOVWF  x07
54E4:  MOVLW  28
54E6:  MOVWF  x08
54E8:  MOVLW  01
54EA:  MOVWF  x09
54EC:  MOVLW  02
54EE:  MOVWF  x0A
54F0:  MOVLB  0
54F2:  CALL   2426
....................          else 
54F6:  BRA    5512
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
54F8:  MOVFF  4CF,506
54FC:  MOVLW  46
54FE:  MOVLB  5
5500:  MOVWF  x07
5502:  MOVLW  28
5504:  MOVWF  x08
5506:  CLRF   x09
5508:  MOVLW  02
550A:  MOVWF  x0A
550C:  MOVLB  0
550E:  CALL   2426
....................           
....................          if(unidad==1) 
5512:  MOVLB  4
5514:  DECFSZ xA3,W
5516:  BRA    5536
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
5518:  MOVFF  4CE,506
551C:  MOVLW  5A
551E:  MOVLB  5
5520:  MOVWF  x07
5522:  MOVLW  28
5524:  MOVWF  x08
5526:  MOVLW  01
5528:  MOVWF  x09
552A:  MOVLW  02
552C:  MOVWF  x0A
552E:  MOVLB  0
5530:  CALL   2426
....................          else 
5534:  BRA    5550
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
5536:  MOVFF  4CE,506
553A:  MOVLW  5A
553C:  MOVLB  5
553E:  MOVWF  x07
5540:  MOVLW  28
5542:  MOVWF  x08
5544:  CLRF   x09
5546:  MOVLW  02
5548:  MOVWF  x0A
554A:  MOVLB  0
554C:  CALL   2426
....................           
....................          strcpy(Menus.Letra,":"); 
5550:  MOVLW  04
5552:  MOVWF  FEA
5554:  MOVLW  E5
5556:  MOVWF  FE9
5558:  MOVFF  FF2,505
555C:  BCF    FF2.7
555E:  MOVLW  00
5560:  CALL   06BE
5564:  TBLRD*-
5566:  TBLRD*+
5568:  MOVF   FF5,W
556A:  MOVWF  FEE
556C:  IORLW  00
556E:  BNZ   5566
5570:  MOVLB  5
5572:  BTFSC  x05.7
5574:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
5576:  MOVLW  04
5578:  MOVWF  x06
557A:  MOVLW  E5
557C:  MOVWF  x05
557E:  MOVLW  3C
5580:  MOVWF  x07
5582:  MOVLW  2A
5584:  MOVWF  x08
5586:  MOVLW  02
5588:  MOVWF  x09
558A:  MOVWF  x0A
558C:  MOVLB  0
558E:  CALL   162E
....................           
....................          visual=0; 
5592:  MOVLB  4
5594:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5596:  BSF    F92.0
5598:  BTFSS  F80.0
559A:  BRA    55D8
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
559C:  MOVLW  01
559E:  SUBWF  xA3,W
55A0:  CLRF   03
55A2:  ADDLW  CE
55A4:  MOVWF  FE9
55A6:  MOVLW  04
55A8:  ADDWFC 03,W
55AA:  MOVWF  FEA
55AC:  BTFSC  FEF.7
55AE:  BRA    55B6
55B0:  MOVF   FEF,W
55B2:  SUBLW  08
55B4:  BNC   55D8
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
55B6:  MOVLW  1E
55B8:  MOVLB  5
55BA:  MOVWF  x06
55BC:  MOVLB  0
55BE:  CALL   0F96
55C2:  MOVLW  01
55C4:  MOVLB  4
55C6:  SUBWF  xA3,W
55C8:  CLRF   03
55CA:  ADDLW  CE
55CC:  MOVWF  FE9
55CE:  MOVLW  04
55D0:  ADDWFC 03,W
55D2:  MOVWF  FEA
55D4:  INCF   FEF,F
55D6:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
55D8:  BSF    F92.1
55DA:  BTFSS  F80.1
55DC:  BRA    561A
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
55DE:  MOVLW  01
55E0:  SUBWF  xA3,W
55E2:  CLRF   03
55E4:  ADDLW  CE
55E6:  MOVWF  FE9
55E8:  MOVLW  04
55EA:  ADDWFC 03,W
55EC:  MOVWF  FEA
55EE:  BTFSC  FEF.7
55F0:  BRA    561A
55F2:  MOVF   FEF,W
55F4:  SUBLW  00
55F6:  BC    561A
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
55F8:  MOVLW  1E
55FA:  MOVLB  5
55FC:  MOVWF  x06
55FE:  MOVLB  0
5600:  CALL   0F96
5604:  MOVLW  01
5606:  MOVLB  4
5608:  SUBWF  xA3,W
560A:  CLRF   03
560C:  ADDLW  CE
560E:  MOVWF  FE9
5610:  MOVLW  04
5612:  ADDWFC 03,W
5614:  MOVWF  FEA
5616:  DECF   FEF,F
5618:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
561A:  BSF    F92.2
561C:  BTFSS  F80.2
561E:  BRA    5632
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5620:  MOVLW  1E
5622:  MOVLB  5
5624:  MOVWF  x06
5626:  MOVLB  0
5628:  CALL   0F96
562C:  MOVLB  4
562E:  DECF   xA3,F
5630:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5632:  BSF    F92.3
5634:  BTFSS  F80.3
5636:  BRA    570A
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5638:  MOVLW  04
563A:  MOVLB  5
563C:  MOVWF  x05
563E:  MOVLW  AF
5640:  MOVWF  x06
5642:  MOVLB  0
5644:  CALL   0F96
5648:  MOVLB  5
564A:  DECFSZ x05,F
564C:  BRA    563E
564E:  MOVLW  08
5650:  MOVLB  4
5652:  MOVWF  xA2
5654:  MOVLB  5
5656:  CLRF   x06
5658:  MOVLB  0
565A:  CALL   1000
565E:  MOVLW  01
5660:  MOVLB  4
5662:  MOVWF  xA7
5664:  BSF    x95.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
5666:  MOVLW  04
5668:  MOVWF  FA9
566A:  MOVFF  4CE,FA8
566E:  BCF    FA6.6
5670:  BCF    FA6.7
5672:  BSF    FA6.2
5674:  MOVF   FF2,W
5676:  MOVWF  00
5678:  BCF    FF2.7
567A:  MOVLB  F
567C:  MOVLW  55
567E:  MOVWF  FA7
5680:  MOVLW  AA
5682:  MOVWF  FA7
5684:  BSF    FA6.1
5686:  BTFSC  FA6.1
5688:  BRA    5686
568A:  BCF    FA6.2
568C:  MOVF   00,W
568E:  IORWF  FF2,F
5690:  MOVLW  05
5692:  MOVWF  FA9
5694:  MOVFF  4CF,FA8
5698:  BCF    FA6.6
569A:  BCF    FA6.7
569C:  BSF    FA6.2
569E:  MOVF   FF2,W
56A0:  MOVWF  00
56A2:  BCF    FF2.7
56A4:  MOVLW  55
56A6:  MOVWF  FA7
56A8:  MOVLW  AA
56AA:  MOVWF  FA7
56AC:  BSF    FA6.1
56AE:  BTFSC  FA6.1
56B0:  BRA    56AE
56B2:  BCF    FA6.2
56B4:  MOVF   00,W
56B6:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
56B8:  MOVLW  06
56BA:  MOVWF  FA9
56BC:  MOVFF  4D0,FA8
56C0:  BCF    FA6.6
56C2:  BCF    FA6.7
56C4:  BSF    FA6.2
56C6:  MOVFF  FF2,00
56CA:  BCF    FF2.7
56CC:  MOVLW  55
56CE:  MOVWF  FA7
56D0:  MOVLW  AA
56D2:  MOVWF  FA7
56D4:  BSF    FA6.1
56D6:  BTFSC  FA6.1
56D8:  BRA    56D6
56DA:  BCF    FA6.2
56DC:  MOVF   00,W
56DE:  IORWF  FF2,F
56E0:  MOVLW  07
56E2:  MOVWF  FA9
56E4:  MOVFF  4D1,FA8
56E8:  BCF    FA6.6
56EA:  BCF    FA6.7
56EC:  BSF    FA6.2
56EE:  MOVFF  FF2,00
56F2:  BCF    FF2.7
56F4:  MOVLW  55
56F6:  MOVWF  FA7
56F8:  MOVLW  AA
56FA:  MOVWF  FA7
56FC:  BSF    FA6.1
56FE:  BTFSC  FA6.1
5700:  BRA    56FE
5702:  BCF    FA6.2
5704:  MOVF   00,W
5706:  IORWF  FF2,F
5708:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
570A:  MOVF   xA2,W
570C:  SUBLW  0D
570E:  BTFSS  FD8.2
5710:  BRA    5848
....................       
....................       if(visual==1) 
5712:  BTFSS  x95.4
5714:  BRA    577C
....................       { 
....................          glcd_fillScreen(OFF); 
5716:  MOVLB  5
5718:  CLRF   x06
571A:  MOVLB  0
571C:  CALL   1000
....................          strcpy(Menus.Letra,"Temperatura"); 
5720:  MOVLW  04
5722:  MOVWF  FEA
5724:  MOVLW  E5
5726:  MOVWF  FE9
5728:  MOVFF  FF2,505
572C:  BCF    FF2.7
572E:  MOVLW  00
5730:  CALL   0B68
5734:  TBLRD*-
5736:  TBLRD*+
5738:  MOVF   FF5,W
573A:  MOVWF  FEE
573C:  IORLW  00
573E:  BNZ   5736
5740:  MOVLB  5
5742:  BTFSC  x05.7
5744:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5746:  MOVLW  04
5748:  MOVWF  x06
574A:  MOVLW  E5
574C:  MOVWF  x05
574E:  CLRF   x07
5750:  CLRF   x08
5752:  MOVLW  01
5754:  MOVWF  x09
5756:  MOVLW  02
5758:  MOVWF  x0A
575A:  MOVLB  0
575C:  CALL   162E
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
5760:  MOVFF  4A5,506
5764:  MOVLW  1E
5766:  MOVLB  5
5768:  MOVWF  x07
576A:  MOVWF  x08
576C:  CLRF   x09
576E:  MOVLW  03
5770:  MOVWF  x0A
5772:  MOVLB  0
5774:  CALL   2426
....................           
....................          visual=0; 
5778:  MOVLB  4
577A:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
577C:  BSF    F92.0
577E:  BTFSS  F80.0
5780:  BRA    57B4
....................          {   
....................             if(Setpoint<134) 
5782:  MOVF   xA5,W
5784:  SUBLW  85
5786:  BNC   57B4
....................             { 
....................                if(Setpoint<100) 
5788:  MOVF   xA5,W
578A:  SUBLW  63
578C:  BNC   57A2
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
578E:  MOVLW  64
5790:  MOVWF  xA5
5792:  MOVLB  5
5794:  MOVWF  x06
5796:  MOVLB  0
5798:  CALL   0F96
579C:  MOVLB  4
579E:  BSF    x95.4
....................                } 
....................                else 
57A0:  BRA    57B4
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
57A2:  MOVLW  1E
57A4:  MOVLB  5
57A6:  MOVWF  x06
57A8:  MOVLB  0
57AA:  CALL   0F96
57AE:  MOVLB  4
57B0:  INCF   xA5,F
57B2:  BSF    x95.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
57B4:  BSF    F92.1
57B6:  BTFSS  F80.1
57B8:  BRA    57D2
....................          {   
....................             if(Setpoint>105) 
57BA:  MOVF   xA5,W
57BC:  SUBLW  69
57BE:  BC    57D2
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
57C0:  MOVLW  1E
57C2:  MOVLB  5
57C4:  MOVWF  x06
57C6:  MOVLB  0
57C8:  CALL   0F96
57CC:  MOVLB  4
57CE:  DECF   xA5,F
57D0:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
57D2:  BSF    F92.2
57D4:  BTFSS  F80.2
57D6:  BRA    57E8
....................          {   
....................             delay_ms(30);visual=1; 
57D8:  MOVLW  1E
57DA:  MOVLB  5
57DC:  MOVWF  x06
57DE:  MOVLB  0
57E0:  CALL   0F96
57E4:  MOVLB  4
57E6:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
57E8:  BSF    F92.3
57EA:  BTFSS  F80.3
57EC:  BRA    5848
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
57EE:  MOVLW  04
57F0:  MOVLB  5
57F2:  MOVWF  x05
57F4:  MOVLW  AF
57F6:  MOVWF  x06
57F8:  MOVLB  0
57FA:  CALL   0F96
57FE:  MOVLB  5
5800:  DECFSZ x05,F
5802:  BRA    57F4
5804:  MOVLW  08
5806:  MOVLB  4
5808:  MOVWF  xA2
580A:  MOVLB  5
580C:  CLRF   x06
580E:  MOVLB  0
5810:  CALL   1000
5814:  MOVLW  01
5816:  MOVLB  4
5818:  MOVWF  xA7
581A:  BSF    x95.4
....................             write_eeprom(8,Setpoint); 
581C:  MOVLW  08
581E:  MOVWF  FA9
5820:  MOVFF  4A5,FA8
5824:  BCF    FA6.6
5826:  BCF    FA6.7
5828:  BSF    FA6.2
582A:  MOVF   FF2,W
582C:  MOVWF  00
582E:  BCF    FF2.7
5830:  MOVLB  F
5832:  MOVLW  55
5834:  MOVWF  FA7
5836:  MOVLW  AA
5838:  MOVWF  FA7
583A:  BSF    FA6.1
583C:  BTFSC  FA6.1
583E:  BRA    583C
5840:  BCF    FA6.2
5842:  MOVF   00,W
5844:  IORWF  FF2,F
5846:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
5848:  MOVF   xA2,W
584A:  SUBLW  0E
584C:  BTFSS  FD8.2
584E:  BRA    5B3E
....................       if(Nivel>6) 
5850:  MOVF   xB5,F
5852:  BNZ   585A
5854:  MOVF   xB4,W
5856:  SUBLW  06
5858:  BC    5860
....................          Nivel=6; 
585A:  CLRF   xB5
585C:  MOVLW  06
585E:  MOVWF  xB4
....................           
....................       if(visual==1) 
5860:  BTFSS  x95.4
5862:  BRA    58C4
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
5864:  MOVLW  04
5866:  MOVWF  FEA
5868:  MOVLW  E5
586A:  MOVWF  FE9
586C:  MOVFF  FF2,505
5870:  BCF    FF2.7
5872:  MOVLW  00
5874:  MOVLB  0
5876:  CALL   0C4A
587A:  TBLRD*-
587C:  TBLRD*+
587E:  MOVF   FF5,W
5880:  MOVWF  FEE
5882:  IORLW  00
5884:  BNZ   587C
5886:  MOVLB  5
5888:  BTFSC  x05.7
588A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
588C:  MOVLW  04
588E:  MOVWF  x06
5890:  MOVLW  E5
5892:  MOVWF  x05
5894:  CLRF   x07
5896:  CLRF   x08
5898:  MOVLW  01
589A:  MOVWF  x09
589C:  MOVLW  02
589E:  MOVWF  x0A
58A0:  MOVLB  0
58A2:  CALL   162E
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
58A6:  MOVFF  4B4,506
58AA:  MOVLW  32
58AC:  MOVLB  5
58AE:  MOVWF  x07
58B0:  MOVLW  28
58B2:  MOVWF  x08
58B4:  CLRF   x09
58B6:  MOVLW  02
58B8:  MOVWF  x0A
58BA:  MOVLB  0
58BC:  CALL   2426
....................           
....................          visual=0; 
58C0:  MOVLB  4
58C2:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
58C4:  BSF    F92.0
58C6:  BTFSS  F80.0
58C8:  BRA    58EA
....................          {   
....................             if(Nivel<6) 
58CA:  MOVF   xB5,F
58CC:  BNZ   58EA
58CE:  MOVF   xB4,W
58D0:  SUBLW  05
58D2:  BNC   58EA
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
58D4:  MOVLW  1E
58D6:  MOVLB  5
58D8:  MOVWF  x06
58DA:  MOVLB  0
58DC:  CALL   0F96
58E0:  MOVLB  4
58E2:  INCF   xB4,F
58E4:  BTFSC  FD8.2
58E6:  INCF   xB5,F
58E8:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
58EA:  BSF    F92.1
58EC:  BTFSS  F80.1
58EE:  BRA    5912
....................          {   
....................             if(Nivel>1) 
58F0:  MOVF   xB5,F
58F2:  BNZ   58FA
58F4:  MOVF   xB4,W
58F6:  SUBLW  01
58F8:  BC    5912
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
58FA:  MOVLW  1E
58FC:  MOVLB  5
58FE:  MOVWF  x06
5900:  MOVLB  0
5902:  CALL   0F96
5906:  MOVLB  4
5908:  MOVF   xB4,W
590A:  BTFSC  FD8.2
590C:  DECF   xB5,F
590E:  DECF   xB4,F
5910:  BSF    x95.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
5912:  BTFSS  x95.5
5914:  BRA    5ACE
....................          { 
....................             if(RIGHT)//Si oprime SET 
5916:  BSF    F92.2
5918:  BTFSS  F80.2
591A:  BRA    5ACC
....................             {   
....................                write_eeprom(9,Nivel); 
591C:  MOVLW  09
591E:  MOVWF  FA9
5920:  MOVFF  4B4,FA8
5924:  BCF    FA6.6
5926:  BCF    FA6.7
5928:  BSF    FA6.2
592A:  MOVF   FF2,W
592C:  MOVWF  00
592E:  BCF    FF2.7
5930:  MOVLB  F
5932:  MOVLW  55
5934:  MOVWF  FA7
5936:  MOVLW  AA
5938:  MOVWF  FA7
593A:  BSF    FA6.1
593C:  BTFSC  FA6.1
593E:  BRA    593C
5940:  BCF    FA6.2
5942:  MOVF   00,W
5944:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5946:  MOVLW  14
5948:  MOVLB  4
594A:  MOVWF  xA2
594C:  MOVLW  0F
594E:  MOVLB  5
5950:  MOVWF  x1B
5952:  MOVLW  12
5954:  MOVWF  x1C
5956:  MOVLW  1E
5958:  MOVWF  x1D
595A:  MOVLW  35
595C:  MOVWF  x1E
595E:  CLRF   x1F
5960:  MOVLW  01
5962:  MOVWF  x20
5964:  MOVLB  0
5966:  CALL   156C
596A:  MOVLB  4
596C:  CLRF   xA9
596E:  MOVLW  C0
5970:  IORWF  FF2,F
5972:  MOVLB  5
5974:  CLRF   x06
5976:  MOVLB  0
5978:  CALL   1000
....................                strcpy(Menus.Letra,"Calentando"); 
597C:  MOVLW  04
597E:  MOVWF  FEA
5980:  MOVLW  E5
5982:  MOVWF  FE9
5984:  MOVFF  FF2,505
5988:  BCF    FF2.7
598A:  MOVLW  00
598C:  CALL   0964
5990:  TBLRD*-
5992:  TBLRD*+
5994:  MOVF   FF5,W
5996:  MOVWF  FEE
5998:  IORLW  00
599A:  BNZ   5992
599C:  MOVLB  5
599E:  BTFSC  x05.7
59A0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
59A2:  MOVLW  04
59A4:  MOVWF  x06
59A6:  MOVLW  E5
59A8:  MOVWF  x05
59AA:  CLRF   x07
59AC:  MOVLW  37
59AE:  MOVWF  x08
59B0:  MOVLW  02
59B2:  MOVWF  x09
59B4:  MOVLW  01
59B6:  MOVWF  x0A
59B8:  MOVLB  0
59BA:  CALL   162E
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
59BE:  MOVLW  0F
59C0:  MOVLB  5
59C2:  MOVWF  x1B
59C4:  MOVLW  12
59C6:  MOVWF  x1C
59C8:  MOVLW  1E
59CA:  MOVWF  x1D
59CC:  MOVLW  35
59CE:  MOVWF  x1E
59D0:  CLRF   x1F
59D2:  MOVLW  01
59D4:  MOVWF  x20
59D6:  MOVLB  0
59D8:  CALL   156C
....................                glcd_imagen(5); 
59DC:  MOVLW  05
59DE:  MOVLB  5
59E0:  MOVWF  x05
59E2:  MOVLB  0
59E4:  CALL   207A
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
59E8:  MOVLW  04
59EA:  MOVWF  FEA
59EC:  MOVLW  E5
59EE:  MOVWF  FE9
59F0:  MOVFF  FF2,505
59F4:  BCF    FF2.7
59F6:  MOVLW  00
59F8:  CALL   098A
59FC:  TBLRD*-
59FE:  TBLRD*+
5A00:  MOVF   FF5,W
5A02:  MOVWF  FEE
5A04:  IORLW  00
5A06:  BNZ   59FE
5A08:  MOVLB  5
5A0A:  BTFSC  x05.7
5A0C:  BSF    FF2.7
5A0E:  MOVLW  04
5A10:  MOVWF  x06
5A12:  MOVLW  E5
5A14:  MOVWF  x05
5A16:  CLRF   x07
5A18:  CLRF   x08
5A1A:  MOVLW  02
5A1C:  MOVWF  x09
5A1E:  MOVLW  01
5A20:  MOVWF  x0A
5A22:  MOVLB  0
5A24:  CALL   162E
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5A28:  MOVLW  04
5A2A:  MOVWF  FEA
5A2C:  MOVLW  E5
5A2E:  MOVWF  FE9
5A30:  MOVFF  FF2,505
5A34:  BCF    FF2.7
5A36:  MOVLW  00
5A38:  CALL   09AC
5A3C:  TBLRD*-
5A3E:  TBLRD*+
5A40:  MOVF   FF5,W
5A42:  MOVWF  FEE
5A44:  IORLW  00
5A46:  BNZ   5A3E
5A48:  MOVLB  5
5A4A:  BTFSC  x05.7
5A4C:  BSF    FF2.7
5A4E:  MOVLW  04
5A50:  MOVWF  x06
5A52:  MOVLW  E5
5A54:  MOVWF  x05
5A56:  CLRF   x07
5A58:  MOVLW  08
5A5A:  MOVWF  x08
5A5C:  MOVLW  02
5A5E:  MOVWF  x09
5A60:  MOVLW  01
5A62:  MOVWF  x0A
5A64:  MOVLB  0
5A66:  CALL   162E
....................                glcd_circle(95,40,2,NO,ON); 
5A6A:  MOVLW  5F
5A6C:  MOVLB  5
5A6E:  MOVWF  x05
5A70:  MOVLW  28
5A72:  MOVWF  x06
5A74:  MOVLW  02
5A76:  MOVWF  x07
5A78:  CLRF   x08
5A7A:  MOVLW  01
5A7C:  MOVWF  x09
5A7E:  MOVLB  0
5A80:  CALL   2176
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5A84:  MOVLW  04
5A86:  MOVWF  FEA
5A88:  MOVLW  E5
5A8A:  MOVWF  FE9
5A8C:  MOVFF  FF2,505
5A90:  BCF    FF2.7
5A92:  MOVLW  00
5A94:  CALL   09CE
5A98:  TBLRD*-
5A9A:  TBLRD*+
5A9C:  MOVF   FF5,W
5A9E:  MOVWF  FEE
5AA0:  IORLW  00
5AA2:  BNZ   5A9A
5AA4:  MOVLB  5
5AA6:  BTFSC  x05.7
5AA8:  BSF    FF2.7
5AAA:  MOVLW  04
5AAC:  MOVWF  x06
5AAE:  MOVLW  E5
5AB0:  MOVWF  x05
5AB2:  MOVLW  66
5AB4:  MOVWF  x07
5AB6:  MOVLW  28
5AB8:  MOVWF  x08
5ABA:  MOVLW  02
5ABC:  MOVWF  x09
5ABE:  MOVWF  x0A
5AC0:  MOVLB  0
5AC2:  CALL   162E
....................                MuestraTiemposProgramados(); 
5AC6:  CALL   2576
5ACA:  MOVLB  4
....................             }       
....................          } 
....................          else 
5ACC:  BRA    5B3E
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5ACE:  BSF    F92.3
5AD0:  BTFSS  F80.3
5AD2:  BRA    5B3E
....................             { 
....................                if(Nivel<6) 
5AD4:  MOVF   xB5,F
5AD6:  BNZ   5AE2
5AD8:  MOVF   xB4,W
5ADA:  SUBLW  05
5ADC:  BNC   5AE2
....................                { 
....................                   desfoguelento=1; 
5ADE:  BSF    x95.5
....................                } 
....................                else 
5AE0:  BRA    5AE4
....................                { 
....................                   desfoguelento=0; 
5AE2:  BCF    x95.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5AE4:  MOVLW  04
5AE6:  MOVLB  5
5AE8:  MOVWF  x05
5AEA:  MOVLW  AF
5AEC:  MOVWF  x06
5AEE:  MOVLB  0
5AF0:  CALL   0F96
5AF4:  MOVLB  5
5AF6:  DECFSZ x05,F
5AF8:  BRA    5AEA
5AFA:  MOVLW  08
5AFC:  MOVLB  4
5AFE:  MOVWF  xA2
5B00:  MOVLB  5
5B02:  CLRF   x06
5B04:  MOVLB  0
5B06:  CALL   1000
5B0A:  MOVLW  01
5B0C:  MOVLB  4
5B0E:  MOVWF  xA7
5B10:  BSF    x95.4
....................                write_eeprom(9,Nivel); 
5B12:  MOVLW  09
5B14:  MOVWF  FA9
5B16:  MOVFF  4B4,FA8
5B1A:  BCF    FA6.6
5B1C:  BCF    FA6.7
5B1E:  BSF    FA6.2
5B20:  MOVF   FF2,W
5B22:  MOVWF  00
5B24:  BCF    FF2.7
5B26:  MOVLB  F
5B28:  MOVLW  55
5B2A:  MOVWF  FA7
5B2C:  MOVLW  AA
5B2E:  MOVWF  FA7
5B30:  BSF    FA6.1
5B32:  BTFSC  FA6.1
5B34:  BRA    5B32
5B36:  BCF    FA6.2
5B38:  MOVF   00,W
5B3A:  IORWF  FF2,F
5B3C:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5B3E:  MOVF   xA2,W
5B40:  SUBLW  0F
5B42:  BTFSS  FD8.2
5B44:  BRA    5E78
....................        
....................       if(visual==1) 
5B46:  BTFSS  x95.4
5B48:  BRA    5CAE
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5B4A:  MOVLW  04
5B4C:  MOVWF  FEA
5B4E:  MOVLW  E5
5B50:  MOVWF  FE9
5B52:  MOVFF  FF2,505
5B56:  BCF    FF2.7
5B58:  MOVLW  00
5B5A:  MOVLB  0
5B5C:  CALL   0BBA
5B60:  TBLRD*-
5B62:  TBLRD*+
5B64:  MOVF   FF5,W
5B66:  MOVWF  FEE
5B68:  IORLW  00
5B6A:  BNZ   5B62
5B6C:  MOVLB  5
5B6E:  BTFSC  x05.7
5B70:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5B72:  MOVLW  04
5B74:  MOVWF  x06
5B76:  MOVLW  E5
5B78:  MOVWF  x05
5B7A:  CLRF   x07
5B7C:  CLRF   x08
5B7E:  MOVLW  01
5B80:  MOVWF  x09
5B82:  MOVLW  02
5B84:  MOVWF  x0A
5B86:  MOVLB  0
5B88:  CALL   162E
....................           
....................          if(Opcion==2) 
5B8C:  MOVLB  4
5B8E:  MOVF   xA7,W
5B90:  SUBLW  02
5B92:  BNZ   5C1E
....................          {strcpy(Menus.Letra,"SI"); 
5B94:  MOVLW  04
5B96:  MOVWF  FEA
5B98:  MOVLW  E5
5B9A:  MOVWF  FE9
5B9C:  MOVFF  FF2,505
5BA0:  BCF    FF2.7
5BA2:  MOVLW  00
5BA4:  MOVLB  0
5BA6:  CALL   0C6E
5BAA:  TBLRD*-
5BAC:  TBLRD*+
5BAE:  MOVF   FF5,W
5BB0:  MOVWF  FEE
5BB2:  IORLW  00
5BB4:  BNZ   5BAC
5BB6:  MOVLB  5
5BB8:  BTFSC  x05.7
5BBA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5BBC:  MOVLW  04
5BBE:  MOVWF  x06
5BC0:  MOVLW  E5
5BC2:  MOVWF  x05
5BC4:  MOVLW  32
5BC6:  MOVWF  x07
5BC8:  MOVLW  19
5BCA:  MOVWF  x08
5BCC:  MOVLW  01
5BCE:  MOVWF  x09
5BD0:  MOVLW  02
5BD2:  MOVWF  x0A
5BD4:  MOVLB  0
5BD6:  CALL   162E
....................          strcpy(Menus.Letra,"NO"); 
5BDA:  MOVLW  04
5BDC:  MOVWF  FEA
5BDE:  MOVLW  E5
5BE0:  MOVWF  FE9
5BE2:  MOVFF  FF2,505
5BE6:  BCF    FF2.7
5BE8:  MOVLW  00
5BEA:  CALL   0C8C
5BEE:  TBLRD*-
5BF0:  TBLRD*+
5BF2:  MOVF   FF5,W
5BF4:  MOVWF  FEE
5BF6:  IORLW  00
5BF8:  BNZ   5BF0
5BFA:  MOVLB  5
5BFC:  BTFSC  x05.7
5BFE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5C00:  MOVLW  04
5C02:  MOVWF  x06
5C04:  MOVLW  E5
5C06:  MOVWF  x05
5C08:  MOVLW  32
5C0A:  MOVWF  x07
5C0C:  MOVLW  2D
5C0E:  MOVWF  x08
5C10:  CLRF   x09
5C12:  MOVLW  02
5C14:  MOVWF  x0A
5C16:  MOVLB  0
5C18:  CALL   162E
5C1C:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
5C1E:  DECFSZ xA7,W
5C20:  BRA    5CAC
....................          {strcpy(Menus.Letra,"SI"); 
5C22:  MOVLW  04
5C24:  MOVWF  FEA
5C26:  MOVLW  E5
5C28:  MOVWF  FE9
5C2A:  MOVFF  FF2,505
5C2E:  BCF    FF2.7
5C30:  MOVLW  00
5C32:  MOVLB  0
5C34:  CALL   0C6E
5C38:  TBLRD*-
5C3A:  TBLRD*+
5C3C:  MOVF   FF5,W
5C3E:  MOVWF  FEE
5C40:  IORLW  00
5C42:  BNZ   5C3A
5C44:  MOVLB  5
5C46:  BTFSC  x05.7
5C48:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5C4A:  MOVLW  04
5C4C:  MOVWF  x06
5C4E:  MOVLW  E5
5C50:  MOVWF  x05
5C52:  MOVLW  32
5C54:  MOVWF  x07
5C56:  MOVLW  19
5C58:  MOVWF  x08
5C5A:  CLRF   x09
5C5C:  MOVLW  02
5C5E:  MOVWF  x0A
5C60:  MOVLB  0
5C62:  CALL   162E
....................          strcpy(Menus.Letra,"NO"); 
5C66:  MOVLW  04
5C68:  MOVWF  FEA
5C6A:  MOVLW  E5
5C6C:  MOVWF  FE9
5C6E:  MOVFF  FF2,505
5C72:  BCF    FF2.7
5C74:  MOVLW  00
5C76:  CALL   0C8C
5C7A:  TBLRD*-
5C7C:  TBLRD*+
5C7E:  MOVF   FF5,W
5C80:  MOVWF  FEE
5C82:  IORLW  00
5C84:  BNZ   5C7C
5C86:  MOVLB  5
5C88:  BTFSC  x05.7
5C8A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5C8C:  MOVLW  04
5C8E:  MOVWF  x06
5C90:  MOVLW  E5
5C92:  MOVWF  x05
5C94:  MOVLW  32
5C96:  MOVWF  x07
5C98:  MOVLW  2D
5C9A:  MOVWF  x08
5C9C:  MOVLW  01
5C9E:  MOVWF  x09
5CA0:  MOVLW  02
5CA2:  MOVWF  x0A
5CA4:  MOVLB  0
5CA6:  CALL   162E
5CAA:  MOVLB  4
....................          } 
....................          visual=0; 
5CAC:  BCF    x95.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5CAE:  BSF    F92.0
5CB0:  BTFSS  F80.0
5CB2:  BRA    5CBE
....................       { 
....................          if(Opcion<2) 
5CB4:  MOVF   xA7,W
5CB6:  SUBLW  01
5CB8:  BNC   5CBC
....................          { 
....................             Opcion++; 
5CBA:  INCF   xA7,F
....................          } 
....................          visual=1; 
5CBC:  BSF    x95.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5CBE:  BSF    F92.1
5CC0:  BTFSS  F80.1
5CC2:  BRA    5CCE
....................       {   
....................          if(Opcion>1) 
5CC4:  MOVF   xA7,W
5CC6:  SUBLW  01
5CC8:  BC    5CCC
....................          { 
....................             Opcion--; 
5CCA:  DECF   xA7,F
....................          }   
....................          visual=1; 
5CCC:  BSF    x95.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5CCE:  BSF    F92.2
5CD0:  BTFSS  F80.2
5CD2:  BRA    5E44
....................       {   
....................          if(Opcion==2) 
5CD4:  MOVF   xA7,W
5CD6:  SUBLW  02
5CD8:  BTFSS  FD8.2
5CDA:  BRA    5E16
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5CDC:  MOVLW  14
5CDE:  MOVWF  xA2
5CE0:  MOVLW  0F
5CE2:  MOVLB  5
5CE4:  MOVWF  x1B
5CE6:  MOVLW  12
5CE8:  MOVWF  x1C
5CEA:  MOVLW  1E
5CEC:  MOVWF  x1D
5CEE:  MOVLW  35
5CF0:  MOVWF  x1E
5CF2:  CLRF   x1F
5CF4:  MOVLW  01
5CF6:  MOVWF  x20
5CF8:  MOVLB  0
5CFA:  CALL   156C
5CFE:  MOVLB  4
5D00:  CLRF   xA9
5D02:  MOVLW  C0
5D04:  IORWF  FF2,F
5D06:  MOVLB  5
5D08:  CLRF   x06
5D0A:  MOVLB  0
5D0C:  CALL   1000
....................             strcpy(Menus.Letra,"Calentando"); 
5D10:  MOVLW  04
5D12:  MOVWF  FEA
5D14:  MOVLW  E5
5D16:  MOVWF  FE9
5D18:  MOVFF  FF2,505
5D1C:  BCF    FF2.7
5D1E:  MOVLW  00
5D20:  CALL   0964
5D24:  TBLRD*-
5D26:  TBLRD*+
5D28:  MOVF   FF5,W
5D2A:  MOVWF  FEE
5D2C:  IORLW  00
5D2E:  BNZ   5D26
5D30:  MOVLB  5
5D32:  BTFSC  x05.7
5D34:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5D36:  MOVLW  04
5D38:  MOVWF  x06
5D3A:  MOVLW  E5
5D3C:  MOVWF  x05
5D3E:  CLRF   x07
5D40:  MOVLW  37
5D42:  MOVWF  x08
5D44:  MOVLW  02
5D46:  MOVWF  x09
5D48:  MOVLW  01
5D4A:  MOVWF  x0A
5D4C:  MOVLB  0
5D4E:  CALL   162E
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5D52:  MOVLW  0F
5D54:  MOVLB  5
5D56:  MOVWF  x1B
5D58:  MOVLW  12
5D5A:  MOVWF  x1C
5D5C:  MOVLW  1E
5D5E:  MOVWF  x1D
5D60:  MOVLW  35
5D62:  MOVWF  x1E
5D64:  CLRF   x1F
5D66:  MOVLW  01
5D68:  MOVWF  x20
5D6A:  MOVLB  0
5D6C:  CALL   156C
....................             glcd_imagen(5); 
5D70:  MOVLW  05
5D72:  MOVLB  5
5D74:  MOVWF  x05
5D76:  MOVLB  0
5D78:  CALL   207A
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5D7C:  MOVLW  04
5D7E:  MOVWF  FEA
5D80:  MOVLW  E5
5D82:  MOVWF  FE9
5D84:  MOVFF  FF2,505
5D88:  BCF    FF2.7
5D8A:  MOVLW  00
5D8C:  CALL   098A
5D90:  TBLRD*-
5D92:  TBLRD*+
5D94:  MOVF   FF5,W
5D96:  MOVWF  FEE
5D98:  IORLW  00
5D9A:  BNZ   5D92
5D9C:  MOVLB  5
5D9E:  BTFSC  x05.7
5DA0:  BSF    FF2.7
5DA2:  MOVLW  04
5DA4:  MOVWF  x06
5DA6:  MOVLW  E5
5DA8:  MOVWF  x05
5DAA:  CLRF   x07
5DAC:  CLRF   x08
5DAE:  MOVLW  02
5DB0:  MOVWF  x09
5DB2:  MOVLW  01
5DB4:  MOVWF  x0A
5DB6:  MOVLB  0
5DB8:  CALL   162E
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5DBC:  MOVLW  04
5DBE:  MOVWF  FEA
5DC0:  MOVLW  E5
5DC2:  MOVWF  FE9
5DC4:  MOVFF  FF2,505
5DC8:  BCF    FF2.7
5DCA:  MOVLW  00
5DCC:  CALL   09AC
5DD0:  TBLRD*-
5DD2:  TBLRD*+
5DD4:  MOVF   FF5,W
5DD6:  MOVWF  FEE
5DD8:  IORLW  00
5DDA:  BNZ   5DD2
5DDC:  MOVLB  5
5DDE:  BTFSC  x05.7
5DE0:  BSF    FF2.7
5DE2:  MOVLW  04
5DE4:  MOVWF  x06
5DE6:  MOVLW  E5
5DE8:  MOVWF  x05
5DEA:  CLRF   x07
5DEC:  MOVLW  08
5DEE:  MOVWF  x08
5DF0:  MOVLW  02
5DF2:  MOVWF  x09
5DF4:  MOVLW  01
5DF6:  MOVWF  x0A
5DF8:  MOVLB  0
5DFA:  CALL   162E
....................             MuestraTiemposProgramados(); 
5DFE:  CALL   2576
....................             if(Nivel<6) 
5E02:  MOVLB  4
5E04:  MOVF   xB5,F
5E06:  BNZ   5E12
5E08:  MOVF   xB4,W
5E0A:  SUBLW  05
5E0C:  BNC   5E12
....................                { 
....................                   desfoguelento=1; 
5E0E:  BSF    x95.5
....................                } 
....................                else 
5E10:  BRA    5E14
....................                { 
....................                   desfoguelento=0; 
5E12:  BCF    x95.5
....................                } 
....................          } 
....................          else 
5E14:  BRA    5E44
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5E16:  MOVLW  04
5E18:  MOVLB  5
5E1A:  MOVWF  x05
5E1C:  MOVLW  AF
5E1E:  MOVWF  x06
5E20:  MOVLB  0
5E22:  CALL   0F96
5E26:  MOVLB  5
5E28:  DECFSZ x05,F
5E2A:  BRA    5E1C
5E2C:  MOVLW  08
5E2E:  MOVLB  4
5E30:  MOVWF  xA2
5E32:  MOVLB  5
5E34:  CLRF   x06
5E36:  MOVLB  0
5E38:  CALL   1000
5E3C:  MOVLW  01
5E3E:  MOVLB  4
5E40:  MOVWF  xA7
5E42:  BSF    x95.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5E44:  BSF    F92.3
5E46:  BTFSS  F80.3
5E48:  BRA    5E78
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5E4A:  MOVLW  04
5E4C:  MOVLB  5
5E4E:  MOVWF  x05
5E50:  MOVLW  AF
5E52:  MOVWF  x06
5E54:  MOVLB  0
5E56:  CALL   0F96
5E5A:  MOVLB  5
5E5C:  DECFSZ x05,F
5E5E:  BRA    5E50
5E60:  MOVLW  08
5E62:  MOVLB  4
5E64:  MOVWF  xA2
5E66:  MOVLB  5
5E68:  CLRF   x06
5E6A:  MOVLB  0
5E6C:  CALL   1000
5E70:  MOVLW  01
5E72:  MOVLB  4
5E74:  MOVWF  xA7
5E76:  BSF    x95.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
5E78:  MOVF   xA2,W
5E7A:  SUBLW  14
5E7C:  BTFSS  FD8.2
5E7E:  GOTO   6B42
....................     
....................    Lectura_Esclavos(); 
5E82:  MOVLB  0
5E84:  CALL   1EC0
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
5E88:  MOVLB  4
5E8A:  BTFSS  x96.1
5E8C:  BRA    5FD4
5E8E:  DECFSZ x8D,W
5E90:  BRA    5FD4
5E92:  DECFSZ x8E,W
5E94:  BRA    5FD4
5E96:  MOVF   xA8,W
5E98:  SUBLW  01
5E9A:  BTFSS  FD8.0
5E9C:  BRA    5FD4
5E9E:  MOVF   x92,F
5EA0:  BTFSS  FD8.2
5EA2:  BRA    5FD4
5EA4:  MOVF   x93,F
5EA6:  BTFSS  FD8.2
5EA8:  BRA    5FD4
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
5EAA:  MOVF   xA8,F
5EAC:  BNZ   5F46
5EAE:  BTFSC  x96.2
5EB0:  BRA    5F46
....................       { 
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
5EB2:  MOVLW  0F
5EB4:  MOVLB  5
5EB6:  MOVWF  x1B
5EB8:  MOVLW  12
5EBA:  MOVWF  x1C
5EBC:  MOVLW  1E
5EBE:  MOVWF  x1D
5EC0:  MOVLW  35
5EC2:  MOVWF  x1E
5EC4:  CLRF   x1F
5EC6:  MOVLW  01
5EC8:  MOVWF  x20
5ECA:  MOVLB  0
5ECC:  CALL   156C
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5ED0:  MOVLB  5
5ED2:  CLRF   x1B
5ED4:  MOVLW  37
5ED6:  MOVWF  x1C
5ED8:  MOVLW  7F
5EDA:  MOVWF  x1D
5EDC:  MOVLW  3F
5EDE:  MOVWF  x1E
5EE0:  MOVLW  01
5EE2:  MOVWF  x1F
5EE4:  CLRF   x20
5EE6:  MOVLB  0
5EE8:  CALL   156C
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
5EEC:  MOVLW  04
5EEE:  MOVWF  FEA
5EF0:  MOVLW  E5
5EF2:  MOVWF  FE9
5EF4:  MOVFF  FF2,505
5EF8:  BCF    FF2.7
5EFA:  MOVLW  00
5EFC:  CALL   0964
5F00:  TBLRD*-
5F02:  TBLRD*+
5F04:  MOVF   FF5,W
5F06:  MOVWF  FEE
5F08:  IORLW  00
5F0A:  BNZ   5F02
5F0C:  MOVLB  5
5F0E:  BTFSC  x05.7
5F10:  BSF    FF2.7
5F12:  MOVLW  04
5F14:  MOVWF  x06
5F16:  MOVLW  E5
5F18:  MOVWF  x05
5F1A:  CLRF   x07
5F1C:  MOVLW  37
5F1E:  MOVWF  x08
5F20:  MOVLW  02
5F22:  MOVWF  x09
5F24:  MOVLW  01
5F26:  MOVWF  x0A
5F28:  MOVLB  0
5F2A:  CALL   162E
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F2E:  MOVLB  4
5F30:  BSF    x96.2
5F32:  BCF    x96.3
5F34:  BCF    x96.4
5F36:  BCF    x96.5
5F38:  BCF    x96.6
5F3A:  BCF    x96.7
5F3C:  BCF    x97.0
5F3E:  BCF    x97.1
....................          EVDesfogue=0;Control=1; 
5F40:  CLRF   x99
5F42:  MOVLW  01
5F44:  MOVWF  xA0
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
5F46:  DECFSZ xA8,W
5F48:  BRA    5FC6
5F4A:  BTFSC  x96.5
5F4C:  BRA    5FC6
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5F4E:  MOVLB  5
5F50:  CLRF   x1B
5F52:  MOVLW  37
5F54:  MOVWF  x1C
5F56:  MOVLW  7F
5F58:  MOVWF  x1D
5F5A:  MOVLW  3F
5F5C:  MOVWF  x1E
5F5E:  MOVLW  01
5F60:  MOVWF  x1F
5F62:  CLRF   x20
5F64:  MOVLB  0
5F66:  CALL   156C
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
5F6A:  MOVLW  04
5F6C:  MOVWF  FEA
5F6E:  MOVLW  E5
5F70:  MOVWF  FE9
5F72:  MOVFF  FF2,505
5F76:  BCF    FF2.7
5F78:  MOVLW  00
5F7A:  CALL   0CAA
5F7E:  TBLRD*-
5F80:  TBLRD*+
5F82:  MOVF   FF5,W
5F84:  MOVWF  FEE
5F86:  IORLW  00
5F88:  BNZ   5F80
5F8A:  MOVLB  5
5F8C:  BTFSC  x05.7
5F8E:  BSF    FF2.7
5F90:  MOVLW  04
5F92:  MOVWF  x06
5F94:  MOVLW  E5
5F96:  MOVWF  x05
5F98:  CLRF   x07
5F9A:  MOVLW  37
5F9C:  MOVWF  x08
5F9E:  MOVLW  02
5FA0:  MOVWF  x09
5FA2:  MOVLW  01
5FA4:  MOVWF  x0A
5FA6:  MOVLB  0
5FA8:  CALL   162E
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5FAC:  MOVLB  4
5FAE:  BCF    x96.2
5FB0:  BCF    x96.3
5FB2:  BCF    x96.4
5FB4:  BSF    x96.5
5FB6:  BCF    x96.6
5FB8:  BCF    x96.7
5FBA:  BCF    x97.0
5FBC:  BCF    x97.1
....................          EVDesfogue=0;EVTrampa=0;Control=1; 
5FBE:  CLRF   x99
5FC0:  CLRF   x9B
5FC2:  MOVLW  01
5FC4:  MOVWF  xA0
....................       } 
....................           
....................       Control=1; 
5FC6:  MOVLW  01
5FC8:  MOVWF  xA0
....................       Envio_Esclavos(); 
5FCA:  MOVLB  0
5FCC:  CALL   201A
....................    } 
....................    else 
5FD0:  BRA    64B2
5FD2:  MOVLB  4
....................    { 
....................       Control=0; 
5FD4:  CLRF   xA0
....................       if(Alarma>0 || Alarma2>0) 
5FD6:  MOVF   x92,F
5FD8:  BNZ   5FE0
5FDA:  MOVF   x94,F
5FDC:  BTFSC  FD8.2
5FDE:  BRA    615C
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
5FE0:  DECFSZ x92,W
5FE2:  BRA    605A
....................          { 
....................             if(disp_Alarma==0) 
5FE4:  BTFSC  x97.3
5FE6:  BRA    605A
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5FE8:  MOVLB  5
5FEA:  CLRF   x1B
5FEC:  MOVLW  37
5FEE:  MOVWF  x1C
5FF0:  MOVLW  7F
5FF2:  MOVWF  x1D
5FF4:  MOVLW  3F
5FF6:  MOVWF  x1E
5FF8:  MOVLW  01
5FFA:  MOVWF  x1F
5FFC:  CLRF   x20
5FFE:  MOVLB  0
6000:  CALL   156C
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
6004:  MOVLW  04
6006:  MOVWF  FEA
6008:  MOVLW  E5
600A:  MOVWF  FE9
600C:  MOVFF  FF2,505
6010:  BCF    FF2.7
6012:  MOVLW  00
6014:  CALL   0CD2
6018:  TBLRD*-
601A:  TBLRD*+
601C:  MOVF   FF5,W
601E:  MOVWF  FEE
6020:  IORLW  00
6022:  BNZ   601A
6024:  MOVLB  5
6026:  BTFSC  x05.7
6028:  BSF    FF2.7
602A:  MOVLW  04
602C:  MOVWF  x06
602E:  MOVLW  E5
6030:  MOVWF  x05
6032:  CLRF   x07
6034:  MOVLW  37
6036:  MOVWF  x08
6038:  MOVLW  02
603A:  MOVWF  x09
603C:  MOVLW  01
603E:  MOVWF  x0A
6040:  MOVLB  0
6042:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
6046:  MOVLB  4
6048:  BCF    x96.2
604A:  BCF    x96.3
604C:  BCF    x96.4
604E:  BCF    x96.5
6050:  BCF    x96.6
6052:  BCF    x96.7
6054:  BCF    x97.0
6056:  BCF    x97.1
....................                disp_Alarma=1; 
6058:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
605A:  MOVF   x92,W
605C:  SUBLW  02
605E:  BNZ   60DA
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
6060:  CLRF   xA8
6062:  CLRF   xA9
....................             if(disp_Alarma==0) 
6064:  BTFSC  x97.3
6066:  BRA    60DA
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6068:  MOVLB  5
606A:  CLRF   x1B
606C:  MOVLW  37
606E:  MOVWF  x1C
6070:  MOVLW  7F
6072:  MOVWF  x1D
6074:  MOVLW  3F
6076:  MOVWF  x1E
6078:  MOVLW  01
607A:  MOVWF  x1F
607C:  CLRF   x20
607E:  MOVLB  0
6080:  CALL   156C
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6084:  MOVLW  04
6086:  MOVWF  FEA
6088:  MOVLW  E5
608A:  MOVWF  FE9
608C:  MOVFF  FF2,505
6090:  BCF    FF2.7
6092:  MOVLW  00
6094:  CALL   0CF8
6098:  TBLRD*-
609A:  TBLRD*+
609C:  MOVF   FF5,W
609E:  MOVWF  FEE
60A0:  IORLW  00
60A2:  BNZ   609A
60A4:  MOVLB  5
60A6:  BTFSC  x05.7
60A8:  BSF    FF2.7
60AA:  MOVLW  04
60AC:  MOVWF  x06
60AE:  MOVLW  E5
60B0:  MOVWF  x05
60B2:  CLRF   x07
60B4:  MOVLW  37
60B6:  MOVWF  x08
60B8:  MOVLW  02
60BA:  MOVWF  x09
60BC:  MOVLW  01
60BE:  MOVWF  x0A
60C0:  MOVLB  0
60C2:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
60C6:  MOVLB  4
60C8:  BCF    x96.2
60CA:  BCF    x96.3
60CC:  BCF    x96.4
60CE:  BCF    x96.5
60D0:  BCF    x96.6
60D2:  BCF    x96.7
60D4:  BCF    x97.0
60D6:  BCF    x97.1
....................                disp_Alarma=1; 
60D8:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==3) // Alarma de Error de Agua: Error por Bajo Nivel de Agua Durante Funcionamiento 
60DA:  MOVF   x92,W
60DC:  SUBLW  03
60DE:  BNZ   615A
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
60E0:  CLRF   xA8
60E2:  CLRF   xA9
....................             if(disp_Alarma==0) 
60E4:  BTFSC  x97.3
60E6:  BRA    615A
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
60E8:  MOVLB  5
60EA:  CLRF   x1B
60EC:  MOVLW  37
60EE:  MOVWF  x1C
60F0:  MOVLW  7F
60F2:  MOVWF  x1D
60F4:  MOVLW  3F
60F6:  MOVWF  x1E
60F8:  MOVLW  01
60FA:  MOVWF  x1F
60FC:  CLRF   x20
60FE:  MOVLB  0
6100:  CALL   156C
....................                strcpy(Menus.Letra,"Error:EA02");displayMenu(Menus.Letra,0,55,2,1); 
6104:  MOVLW  04
6106:  MOVWF  FEA
6108:  MOVLW  E5
610A:  MOVWF  FE9
610C:  MOVFF  FF2,505
6110:  BCF    FF2.7
6112:  MOVLW  00
6114:  CALL   0D1E
6118:  TBLRD*-
611A:  TBLRD*+
611C:  MOVF   FF5,W
611E:  MOVWF  FEE
6120:  IORLW  00
6122:  BNZ   611A
6124:  MOVLB  5
6126:  BTFSC  x05.7
6128:  BSF    FF2.7
612A:  MOVLW  04
612C:  MOVWF  x06
612E:  MOVLW  E5
6130:  MOVWF  x05
6132:  CLRF   x07
6134:  MOVLW  37
6136:  MOVWF  x08
6138:  MOVLW  02
613A:  MOVWF  x09
613C:  MOVLW  01
613E:  MOVWF  x0A
6140:  MOVLB  0
6142:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
6146:  MOVLB  4
6148:  BCF    x96.2
614A:  BCF    x96.3
614C:  BCF    x96.4
614E:  BCF    x96.5
6150:  BCF    x96.6
6152:  BCF    x96.7
6154:  BCF    x97.0
6156:  BCF    x97.1
....................                disp_Alarma=1; 
6158:  BSF    x97.3
....................             } 
....................          } 
....................           
....................       } 
....................       else 
615A:  BRA    64AC
....................       {  
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
615C:  MOVF   xA8,W
615E:  SUBLW  02
6160:  BTFSS  FD8.2
6162:  BRA    6324
6164:  BTFSS  x96.1
6166:  BRA    6324
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
6168:  BTFSS  x95.5
616A:  BRA    624A
....................             { 
....................                if(z==0) 
616C:  BTFSC  x97.2
616E:  BRA    61C0
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
6170:  MOVLB  5
6172:  CLRF   x05
6174:  MOVLW  5A
6176:  MOVWF  x06
6178:  MOVLW  38
617A:  MOVWF  x07
617C:  MOVLB  0
617E:  CALL   26B6
6182:  MOVLW  19
6184:  MOVLB  5
6186:  MOVWF  x1B
6188:  MOVLW  12
618A:  MOVWF  x1C
618C:  MOVLW  3C
618E:  MOVWF  x1D
6190:  MOVLW  1A
6192:  MOVWF  x1E
6194:  CLRF   x1F
6196:  CLRF   x20
6198:  MOVLB  0
619A:  CALL   156C
619E:  MOVLW  37
61A0:  MOVLB  5
61A2:  MOVWF  x1B
61A4:  MOVLW  12
61A6:  MOVWF  x1C
61A8:  MOVLW  44
61AA:  MOVWF  x1D
61AC:  MOVLW  35
61AE:  MOVWF  x1E
61B0:  CLRF   x1F
61B2:  MOVLW  01
61B4:  MOVWF  x20
61B6:  MOVLB  0
61B8:  CALL   156C
61BC:  MOVLB  4
61BE:  BSF    x97.2
....................                } 
....................                if(disp_Despresurizando==0) 
61C0:  BTFSC  x96.6
61C2:  BRA    6242
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
61C4:  MOVLB  5
61C6:  CLRF   x1B
61C8:  MOVLW  37
61CA:  MOVWF  x1C
61CC:  MOVLW  7F
61CE:  MOVWF  x1D
61D0:  MOVLW  3F
61D2:  MOVWF  x1E
61D4:  MOVLW  01
61D6:  MOVWF  x1F
61D8:  CLRF   x20
61DA:  MOVLB  0
61DC:  CALL   156C
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
61E0:  MOVLW  04
61E2:  MOVWF  FEA
61E4:  MOVLW  E5
61E6:  MOVWF  FE9
61E8:  MOVFF  FF2,505
61EC:  BCF    FF2.7
61EE:  MOVLW  00
61F0:  CALL   0D44
61F4:  TBLRD*-
61F6:  TBLRD*+
61F8:  MOVF   FF5,W
61FA:  MOVWF  FEE
61FC:  IORLW  00
61FE:  BNZ   61F6
6200:  MOVLB  5
6202:  BTFSC  x05.7
6204:  BSF    FF2.7
6206:  MOVLW  04
6208:  MOVWF  x06
620A:  MOVLW  E5
620C:  MOVWF  x05
620E:  CLRF   x07
6210:  MOVLW  37
6212:  MOVWF  x08
6214:  MOVLW  02
6216:  MOVWF  x09
6218:  MOVLW  01
621A:  MOVWF  x0A
621C:  MOVLB  0
621E:  CALL   162E
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6222:  MOVLB  4
6224:  BCF    x96.2
6226:  BCF    x96.3
6228:  BCF    x96.4
622A:  BCF    x96.5
622C:  BSF    x96.6
622E:  BCF    x96.7
6230:  BCF    x97.0
6232:  BCF    x97.1
....................                   glcd_imagen(5); 
6234:  MOVLW  05
6236:  MOVLB  5
6238:  MOVWF  x05
623A:  MOVLB  0
623C:  CALL   207A
6240:  MOVLB  4
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
6242:  MOVLW  02
6244:  MOVWF  xAA
6246:  MOVWF  xA9
....................             } 
....................             else 
6248:  BRA    6324
....................             { 
....................                if(z==0) 
624A:  BTFSC  x97.2
624C:  BRA    629E
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
624E:  MOVLB  5
6250:  CLRF   x05
6252:  MOVLW  5A
6254:  MOVWF  x06
6256:  MOVLW  38
6258:  MOVWF  x07
625A:  MOVLB  0
625C:  CALL   26B6
6260:  MOVLW  19
6262:  MOVLB  5
6264:  MOVWF  x1B
6266:  MOVLW  12
6268:  MOVWF  x1C
626A:  MOVLW  3C
626C:  MOVWF  x1D
626E:  MOVLW  1A
6270:  MOVWF  x1E
6272:  CLRF   x1F
6274:  CLRF   x20
6276:  MOVLB  0
6278:  CALL   156C
627C:  MOVLW  37
627E:  MOVLB  5
6280:  MOVWF  x1B
6282:  MOVLW  12
6284:  MOVWF  x1C
6286:  MOVLW  44
6288:  MOVWF  x1D
628A:  MOVLW  35
628C:  MOVWF  x1E
628E:  CLRF   x1F
6290:  MOVLW  01
6292:  MOVWF  x20
6294:  MOVLB  0
6296:  CALL   156C
629A:  MOVLB  4
629C:  BSF    x97.2
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
629E:  BTFSC  x96.4
62A0:  BRA    6320
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
62A2:  MOVLB  5
62A4:  CLRF   x1B
62A6:  MOVLW  37
62A8:  MOVWF  x1C
62AA:  MOVLW  7F
62AC:  MOVWF  x1D
62AE:  MOVLW  3F
62B0:  MOVWF  x1E
62B2:  MOVLW  01
62B4:  MOVWF  x1F
62B6:  CLRF   x20
62B8:  MOVLB  0
62BA:  CALL   156C
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
62BE:  MOVLW  04
62C0:  MOVWF  FEA
62C2:  MOVLW  E5
62C4:  MOVWF  FE9
62C6:  MOVFF  FF2,505
62CA:  BCF    FF2.7
62CC:  MOVLW  00
62CE:  CALL   0D6E
62D2:  TBLRD*-
62D4:  TBLRD*+
62D6:  MOVF   FF5,W
62D8:  MOVWF  FEE
62DA:  IORLW  00
62DC:  BNZ   62D4
62DE:  MOVLB  5
62E0:  BTFSC  x05.7
62E2:  BSF    FF2.7
62E4:  MOVLW  04
62E6:  MOVWF  x06
62E8:  MOVLW  E5
62EA:  MOVWF  x05
62EC:  CLRF   x07
62EE:  MOVLW  37
62F0:  MOVWF  x08
62F2:  MOVLW  02
62F4:  MOVWF  x09
62F6:  MOVLW  01
62F8:  MOVWF  x0A
62FA:  MOVLB  0
62FC:  CALL   162E
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6300:  MOVLB  4
6302:  BCF    x96.2
6304:  BCF    x96.3
6306:  BSF    x96.4
6308:  BCF    x96.5
630A:  BCF    x96.6
630C:  BCF    x96.7
630E:  BCF    x97.0
6310:  BCF    x97.1
....................                   glcd_imagen(5); 
6312:  MOVLW  05
6314:  MOVLB  5
6316:  MOVWF  x05
6318:  MOVLB  0
631A:  CALL   207A
631E:  MOVLB  4
....................                } 
....................                Exhaust=1; 
6320:  MOVLW  01
6322:  MOVWF  xAA
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0 && AlarmaAgua==0) 
6324:  MOVF   x8D,F
6326:  BNZ   63A8
6328:  MOVF   x93,F
632A:  BNZ   63A8
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0 && flag_agua==1) 
632C:  BTFSC  x97.0
632E:  BRA    63A8
6330:  MOVF   xA6,F
6332:  BNZ   63A8
6334:  BTFSS  x96.1
6336:  BRA    63A8
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6338:  MOVLB  5
633A:  CLRF   x1B
633C:  MOVLW  37
633E:  MOVWF  x1C
6340:  MOVLW  7F
6342:  MOVWF  x1D
6344:  MOVLW  3F
6346:  MOVWF  x1E
6348:  MOVLW  01
634A:  MOVWF  x1F
634C:  CLRF   x20
634E:  MOVLB  0
6350:  CALL   156C
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
6354:  MOVLW  04
6356:  MOVWF  FEA
6358:  MOVLW  E5
635A:  MOVWF  FE9
635C:  MOVFF  FF2,505
6360:  BCF    FF2.7
6362:  MOVLW  00
6364:  CALL   0D90
6368:  TBLRD*-
636A:  TBLRD*+
636C:  MOVF   FF5,W
636E:  MOVWF  FEE
6370:  IORLW  00
6372:  BNZ   636A
6374:  MOVLB  5
6376:  BTFSC  x05.7
6378:  BSF    FF2.7
637A:  MOVLW  04
637C:  MOVWF  x06
637E:  MOVLW  E5
6380:  MOVWF  x05
6382:  CLRF   x07
6384:  MOVLW  37
6386:  MOVWF  x08
6388:  MOVLW  02
638A:  MOVWF  x09
638C:  MOVLW  01
638E:  MOVWF  x0A
6390:  MOVLB  0
6392:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
6396:  MOVLB  4
6398:  BCF    x96.2
639A:  BCF    x96.3
639C:  BCF    x96.4
639E:  BCF    x96.5
63A0:  BCF    x96.6
63A2:  BCF    x96.7
63A4:  BSF    x97.0
63A6:  BCF    x97.1
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          disp_Alarma=0; 
63A8:  BCF    x97.3
....................          if(NivelTanque==1 && flag_agua==0 ) 
63AA:  DECFSZ x90,W
63AC:  BRA    63B6
63AE:  BTFSC  x96.1
63B0:  BRA    63B6
....................          { 
....................             flag_agua=1; 
63B2:  BSF    x96.1
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
63B4:  BRA    64AC
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && flag_agua==0) 
63B6:  MOVF   xA8,F
63B8:  BNZ   6434
63BA:  BTFSC  x96.3
63BC:  BRA    6434
63BE:  BTFSC  x96.1
63C0:  BRA    6434
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
63C2:  MOVLB  5
63C4:  CLRF   x1B
63C6:  MOVLW  37
63C8:  MOVWF  x1C
63CA:  MOVLW  7F
63CC:  MOVWF  x1D
63CE:  MOVLW  3F
63D0:  MOVWF  x1E
63D2:  MOVLW  01
63D4:  MOVWF  x1F
63D6:  CLRF   x20
63D8:  MOVLB  0
63DA:  CALL   156C
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
63DE:  MOVLW  04
63E0:  MOVWF  FEA
63E2:  MOVLW  E5
63E4:  MOVWF  FE9
63E6:  MOVFF  FF2,505
63EA:  BCF    FF2.7
63EC:  MOVLW  00
63EE:  CALL   0DBA
63F2:  TBLRD*-
63F4:  TBLRD*+
63F6:  MOVF   FF5,W
63F8:  MOVWF  FEE
63FA:  IORLW  00
63FC:  BNZ   63F4
63FE:  MOVLB  5
6400:  BTFSC  x05.7
6402:  BSF    FF2.7
6404:  MOVLW  04
6406:  MOVWF  x06
6408:  MOVLW  E5
640A:  MOVWF  x05
640C:  CLRF   x07
640E:  MOVLW  37
6410:  MOVWF  x08
6412:  MOVLW  02
6414:  MOVWF  x09
6416:  MOVLW  01
6418:  MOVWF  x0A
641A:  MOVLB  0
641C:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6420:  MOVLB  4
6422:  BCF    x96.2
6424:  BSF    x96.3
6426:  BCF    x96.4
6428:  BCF    x96.5
642A:  BCF    x96.6
642C:  BCF    x96.7
642E:  BCF    x97.0
6430:  BCF    x97.1
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
6432:  CLRF   xA0
....................             } 
....................              
....................             if(AlarmaAgua==1) 
6434:  DECFSZ x93,W
6436:  BRA    64AC
....................             { 
....................                if(disp_AlarmaAgua==0) 
6438:  BTFSC  x97.4
643A:  BRA    64AC
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
643C:  MOVLB  5
643E:  CLRF   x1B
6440:  MOVLW  37
6442:  MOVWF  x1C
6444:  MOVLW  7F
6446:  MOVWF  x1D
6448:  MOVLW  3F
644A:  MOVWF  x1E
644C:  MOVLW  01
644E:  MOVWF  x1F
6450:  CLRF   x20
6452:  MOVLB  0
6454:  CALL   156C
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
6458:  MOVLW  04
645A:  MOVWF  FEA
645C:  MOVLW  E5
645E:  MOVWF  FE9
6460:  MOVFF  FF2,505
6464:  BCF    FF2.7
6466:  MOVLW  00
6468:  CALL   0DDE
646C:  TBLRD*-
646E:  TBLRD*+
6470:  MOVF   FF5,W
6472:  MOVWF  FEE
6474:  IORLW  00
6476:  BNZ   646E
6478:  MOVLB  5
647A:  BTFSC  x05.7
647C:  BSF    FF2.7
647E:  MOVLW  04
6480:  MOVWF  x06
6482:  MOVLW  E5
6484:  MOVWF  x05
6486:  CLRF   x07
6488:  MOVLW  37
648A:  MOVWF  x08
648C:  MOVLW  02
648E:  MOVWF  x09
6490:  MOVLW  01
6492:  MOVWF  x0A
6494:  MOVLB  0
6496:  CALL   162E
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
649A:  MOVLB  4
649C:  BCF    x96.2
649E:  BCF    x96.4
64A0:  BCF    x96.5
64A2:  BCF    x96.6
64A4:  BCF    x96.7
64A6:  BCF    x97.0
64A8:  BCF    x97.1
....................                   disp_AlarmaAgua=1; 
64AA:  BSF    x97.4
....................                } 
....................             } 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
64AC:  MOVLB  0
64AE:  CALL   201A
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
64B2:  MOVLB  4
64B4:  BTFSS  x95.6
64B6:  BRA    6830
....................    {                       
....................       Lectura=0; 
64B8:  BCF    x95.6
....................       //displayTiempo(PresionCamara,31,35,2,1); 
....................       //displayTiempo(PresionPreCamara,31,44,2,1); 
....................       displayT(PresionCamara,31,35,1); 
64BA:  MOVFF  4BB,506
64BE:  MOVFF  4BA,505
64C2:  MOVLB  0
64C4:  CALL   19EC
64C8:  MOVFF  00,505
64CC:  MOVFF  01,506
64D0:  MOVFF  02,507
64D4:  MOVFF  03,508
64D8:  MOVFF  03,50C
64DC:  MOVFF  02,50B
64E0:  MOVFF  01,50A
64E4:  MOVFF  00,509
64E8:  MOVLW  1F
64EA:  MOVLB  5
64EC:  MOVWF  x0D
64EE:  MOVLW  23
64F0:  MOVWF  x0E
64F2:  MOVLW  01
64F4:  MOVWF  x0F
64F6:  MOVLB  0
64F8:  CALL   2A48
....................       displayT(PresionPreCamara,31,44,1); 
64FC:  MOVFF  4BD,506
6500:  MOVFF  4BC,505
6504:  CALL   19EC
6508:  MOVFF  00,505
650C:  MOVFF  01,506
6510:  MOVFF  02,507
6514:  MOVFF  03,508
6518:  MOVFF  03,50C
651C:  MOVFF  02,50B
6520:  MOVFF  01,50A
6524:  MOVFF  00,509
6528:  MOVLW  1F
652A:  MOVLB  5
652C:  MOVWF  x0D
652E:  MOVLW  2C
6530:  MOVWF  x0E
6532:  MOVLW  01
6534:  MOVWF  x0F
6536:  MOVLB  0
6538:  CALL   2A48
....................       glcd_rect(51, 35, 62, 48, YES, OFF);glcd_text57(52, 35, kpa, 1, ON); 
653C:  MOVLW  33
653E:  MOVLB  5
6540:  MOVWF  x1B
6542:  MOVLW  23
6544:  MOVWF  x1C
6546:  MOVLW  3E
6548:  MOVWF  x1D
654A:  MOVLW  30
654C:  MOVWF  x1E
654E:  MOVLW  01
6550:  MOVWF  x1F
6552:  CLRF   x20
6554:  MOVLB  0
6556:  CALL   156C
655A:  MOVLW  34
655C:  MOVLB  5
655E:  MOVWF  x19
6560:  MOVLW  23
6562:  MOVWF  x1A
6564:  MOVLW  04
6566:  MOVWF  x1C
6568:  MOVLW  89
656A:  MOVWF  x1B
656C:  MOVLW  01
656E:  MOVWF  x1D
6570:  MOVWF  x1E
6572:  MOVLB  0
6574:  CALL   1276
....................       glcd_rect(51, 44, 62, 48, YES, OFF);glcd_text57(52, 44, kpa, 1, ON); 
6578:  MOVLW  33
657A:  MOVLB  5
657C:  MOVWF  x1B
657E:  MOVLW  2C
6580:  MOVWF  x1C
6582:  MOVLW  3E
6584:  MOVWF  x1D
6586:  MOVLW  30
6588:  MOVWF  x1E
658A:  MOVLW  01
658C:  MOVWF  x1F
658E:  CLRF   x20
6590:  MOVLB  0
6592:  CALL   156C
6596:  MOVLW  34
6598:  MOVLB  5
659A:  MOVWF  x19
659C:  MOVLW  2C
659E:  MOVWF  x1A
65A0:  MOVLW  04
65A2:  MOVWF  x1C
65A4:  MOVLW  89
65A6:  MOVWF  x1B
65A8:  MOVLW  01
65AA:  MOVWF  x1D
65AC:  MOVWF  x1E
65AE:  MOVLB  0
65B0:  CALL   1276
....................       displayTT(ADC_Pt100,69,20,2); 
65B4:  MOVFF  4C1,508
65B8:  MOVFF  4C0,507
65BC:  MOVFF  4BF,506
65C0:  MOVFF  4BE,505
65C4:  MOVLW  45
65C6:  MOVLB  5
65C8:  MOVWF  x09
65CA:  MOVLW  14
65CC:  MOVWF  x0A
65CE:  MOVLW  02
65D0:  MOVWF  x0B
65D2:  MOVLB  0
65D4:  GOTO   2ABE
....................       glcd_circle(95,40,2,NO,ON); 
65D8:  MOVLW  5F
65DA:  MOVLB  5
65DC:  MOVWF  x05
65DE:  MOVLW  28
65E0:  MOVWF  x06
65E2:  MOVLW  02
65E4:  MOVWF  x07
65E6:  CLRF   x08
65E8:  MOVLW  01
65EA:  MOVWF  x09
65EC:  MOVLB  0
65EE:  CALL   2176
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
65F2:  MOVLW  04
65F4:  MOVWF  FEA
65F6:  MOVLW  E5
65F8:  MOVWF  FE9
65FA:  MOVFF  FF2,505
65FE:  BCF    FF2.7
6600:  MOVLW  00
6602:  CALL   09CE
6606:  TBLRD*-
6608:  TBLRD*+
660A:  MOVF   FF5,W
660C:  MOVWF  FEE
660E:  IORLW  00
6610:  BNZ   6608
6612:  MOVLB  5
6614:  BTFSC  x05.7
6616:  BSF    FF2.7
6618:  MOVLW  04
661A:  MOVWF  x06
661C:  MOVLW  E5
661E:  MOVWF  x05
6620:  MOVLW  66
6622:  MOVWF  x07
6624:  MOVLW  28
6626:  MOVWF  x08
6628:  MOVLW  02
662A:  MOVWF  x09
662C:  MOVWF  x0A
662E:  MOVLB  0
6630:  CALL   162E
....................       displayTiempo(Setpoint,5,20,2,1); 
6634:  MOVFF  4A5,506
6638:  MOVLW  05
663A:  MOVLB  5
663C:  MOVWF  x07
663E:  MOVLW  14
6640:  MOVWF  x08
6642:  MOVLW  02
6644:  MOVWF  x09
6646:  MOVLW  01
6648:  MOVWF  x0A
664A:  MOVLB  0
664C:  CALL   2426
....................  
....................       glcd_imagen(5); 
6650:  MOVLW  05
6652:  MOVLB  5
6654:  MOVWF  x05
6656:  MOVLB  0
6658:  CALL   207A
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
665C:  MOVLW  04
665E:  MOVWF  FEA
6660:  MOVLW  E5
6662:  MOVWF  FE9
6664:  MOVFF  FF2,505
6668:  BCF    FF2.7
666A:  MOVLW  00
666C:  CALL   098A
6670:  TBLRD*-
6672:  TBLRD*+
6674:  MOVF   FF5,W
6676:  MOVWF  FEE
6678:  IORLW  00
667A:  BNZ   6672
667C:  MOVLB  5
667E:  BTFSC  x05.7
6680:  BSF    FF2.7
6682:  MOVLW  04
6684:  MOVWF  x06
6686:  MOVLW  E5
6688:  MOVWF  x05
668A:  CLRF   x07
668C:  CLRF   x08
668E:  MOVLW  02
6690:  MOVWF  x09
6692:  MOVLW  01
6694:  MOVWF  x0A
6696:  MOVLB  0
6698:  CALL   162E
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
669C:  MOVLW  04
669E:  MOVWF  FEA
66A0:  MOVLW  E5
66A2:  MOVWF  FE9
66A4:  MOVFF  FF2,505
66A8:  BCF    FF2.7
66AA:  MOVLW  00
66AC:  CALL   09AC
66B0:  TBLRD*-
66B2:  TBLRD*+
66B4:  MOVF   FF5,W
66B6:  MOVWF  FEE
66B8:  IORLW  00
66BA:  BNZ   66B2
66BC:  MOVLB  5
66BE:  BTFSC  x05.7
66C0:  BSF    FF2.7
66C2:  MOVLW  04
66C4:  MOVWF  x06
66C6:  MOVLW  E5
66C8:  MOVWF  x05
66CA:  CLRF   x07
66CC:  MOVLW  08
66CE:  MOVWF  x08
66D0:  MOVLW  02
66D2:  MOVWF  x09
66D4:  MOVLW  01
66D6:  MOVWF  x0A
66D8:  MOVLB  0
66DA:  CALL   162E
....................       MuestraTiemposProgramados(); 
66DE:  CALL   2576
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
66E2:  MOVFF  4C5,506
66E6:  MOVLW  50
66E8:  MOVLB  5
66EA:  MOVWF  x07
66EC:  CLRF   x08
66EE:  CLRF   x09
66F0:  MOVLW  01
66F2:  MOVWF  x0A
66F4:  MOVLB  0
66F6:  CALL   2426
66FA:  MOVFF  4C4,506
66FE:  MOVLW  56
6700:  MOVLB  5
6702:  MOVWF  x07
6704:  CLRF   x08
6706:  CLRF   x09
6708:  MOVLW  01
670A:  MOVWF  x0A
670C:  MOVLB  0
670E:  CALL   2426
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
6712:  MOVLW  04
6714:  MOVWF  FEA
6716:  MOVLW  E5
6718:  MOVWF  FE9
671A:  MOVFF  FF2,505
671E:  BCF    FF2.7
6720:  MOVLW  00
6722:  CALL   06BE
6726:  TBLRD*-
6728:  TBLRD*+
672A:  MOVF   FF5,W
672C:  MOVWF  FEE
672E:  IORLW  00
6730:  BNZ   6728
6732:  MOVLB  5
6734:  BTFSC  x05.7
6736:  BSF    FF2.7
6738:  MOVLW  04
673A:  MOVWF  x06
673C:  MOVLW  E5
673E:  MOVWF  x05
6740:  MOVLW  5C
6742:  MOVWF  x07
6744:  CLRF   x08
6746:  MOVLW  02
6748:  MOVWF  x09
674A:  MOVLW  01
674C:  MOVWF  x0A
674E:  MOVLB  0
6750:  CALL   162E
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6754:  MOVFF  4C3,506
6758:  MOVLW  62
675A:  MOVLB  5
675C:  MOVWF  x07
675E:  CLRF   x08
6760:  CLRF   x09
6762:  MOVLW  01
6764:  MOVWF  x0A
6766:  MOVLB  0
6768:  CALL   2426
676C:  MOVFF  4C2,506
6770:  MOVLW  68
6772:  MOVLB  5
6774:  MOVWF  x07
6776:  CLRF   x08
6778:  CLRF   x09
677A:  MOVLW  01
677C:  MOVWF  x0A
677E:  MOVLB  0
6780:  CALL   2426
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
6784:  MOVFF  4CD,506
6788:  MOVLW  50
678A:  MOVLB  5
678C:  MOVWF  x07
678E:  MOVLW  08
6790:  MOVWF  x08
6792:  CLRF   x09
6794:  MOVLW  01
6796:  MOVWF  x0A
6798:  MOVLB  0
679A:  CALL   2426
679E:  MOVFF  4CC,506
67A2:  MOVLW  56
67A4:  MOVLB  5
67A6:  MOVWF  x07
67A8:  MOVLW  08
67AA:  MOVWF  x08
67AC:  CLRF   x09
67AE:  MOVLW  01
67B0:  MOVWF  x0A
67B2:  MOVLB  0
67B4:  CALL   2426
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
67B8:  MOVLW  04
67BA:  MOVWF  FEA
67BC:  MOVLW  E5
67BE:  MOVWF  FE9
67C0:  MOVFF  FF2,505
67C4:  BCF    FF2.7
67C6:  MOVLW  00
67C8:  CALL   06BE
67CC:  TBLRD*-
67CE:  TBLRD*+
67D0:  MOVF   FF5,W
67D2:  MOVWF  FEE
67D4:  IORLW  00
67D6:  BNZ   67CE
67D8:  MOVLB  5
67DA:  BTFSC  x05.7
67DC:  BSF    FF2.7
67DE:  MOVLW  04
67E0:  MOVWF  x06
67E2:  MOVLW  E5
67E4:  MOVWF  x05
67E6:  MOVLW  5C
67E8:  MOVWF  x07
67EA:  MOVLW  08
67EC:  MOVWF  x08
67EE:  MOVLW  02
67F0:  MOVWF  x09
67F2:  MOVLW  01
67F4:  MOVWF  x0A
67F6:  MOVLB  0
67F8:  CALL   162E
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
67FC:  MOVFF  4CB,506
6800:  MOVLW  62
6802:  MOVLB  5
6804:  MOVWF  x07
6806:  MOVLW  08
6808:  MOVWF  x08
680A:  CLRF   x09
680C:  MOVLW  01
680E:  MOVWF  x0A
6810:  MOVLB  0
6812:  CALL   2426
6816:  MOVFF  4CA,506
681A:  MOVLW  68
681C:  MOVLB  5
681E:  MOVWF  x07
6820:  MOVLW  08
6822:  MOVWF  x08
6824:  CLRF   x09
6826:  MOVLW  01
6828:  MOVWF  x0A
682A:  MOVLB  0
682C:  CALL   2426
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint)-0.3)// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
6830:  MOVLB  5
6832:  CLRF   x06
6834:  MOVFF  4A5,505
6838:  MOVLB  0
683A:  CALL   19EC
683E:  MOVFF  00,505
6842:  MOVFF  01,506
6846:  MOVFF  02,507
684A:  MOVFF  03,508
684E:  BSF    FD8.1
6850:  MOVFF  03,50C
6854:  MOVFF  02,50B
6858:  MOVFF  01,50A
685C:  MOVFF  00,509
6860:  MOVLW  9A
6862:  MOVLB  5
6864:  MOVWF  x10
6866:  MOVLW  99
6868:  MOVWF  x0F
686A:  MOVLW  19
686C:  MOVWF  x0E
686E:  MOVLW  7D
6870:  MOVWF  x0D
6872:  MOVLB  0
6874:  CALL   1B82
6878:  MOVFF  03,508
687C:  MOVFF  02,507
6880:  MOVFF  01,506
6884:  MOVFF  00,505
6888:  MOVFF  4C1,50C
688C:  MOVFF  4C0,50B
6890:  MOVFF  4BF,50A
6894:  MOVFF  4BE,509
6898:  CALL   2B38
689C:  BC    68A0
689E:  BNZ   6906
....................    { 
....................       if(est==0) 
68A0:  MOVLB  4
68A2:  BTFSC  x96.0
68A4:  BRA    6908
....................       { 
....................          tiempo_esterilizacion=1; 
68A6:  MOVLW  01
68A8:  MOVWF  xA8
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
68AA:  MOVLB  5
68AC:  CLRF   x05
68AE:  MOVLW  5A
68B0:  MOVWF  x06
68B2:  MOVLW  38
68B4:  MOVWF  x07
68B6:  MOVLB  0
68B8:  CALL   26B6
68BC:  MOVLW  0F
68BE:  MOVLB  5
68C0:  MOVWF  x1B
68C2:  MOVLW  12
68C4:  MOVWF  x1C
68C6:  MOVLW  1E
68C8:  MOVWF  x1D
68CA:  MOVLW  35
68CC:  MOVWF  x1E
68CE:  CLRF   x1F
68D0:  CLRF   x20
68D2:  MOVLB  0
68D4:  CALL   156C
68D8:  MOVLW  19
68DA:  MOVLB  5
68DC:  MOVWF  x1B
68DE:  MOVLW  12
68E0:  MOVWF  x1C
68E2:  MOVLW  3C
68E4:  MOVWF  x1D
68E6:  MOVLW  1A
68E8:  MOVWF  x1E
68EA:  CLRF   x1F
68EC:  MOVLW  01
68EE:  MOVWF  x20
68F0:  MOVLB  0
68F2:  CALL   156C
68F6:  MOVLB  4
68F8:  BSF    x96.0
....................          glcd_imagen(5); 
68FA:  MOVLW  05
68FC:  MOVLB  5
68FE:  MOVWF  x05
6900:  MOVLB  0
6902:  CALL   207A
6906:  MOVLB  4
....................       } 
....................    }   
....................     
....................    if((ADC_Pt100<((float)Setpoint-2.0)) && tiempo_esterilizacion==1) 
6908:  MOVLB  5
690A:  CLRF   x06
690C:  MOVFF  4A5,505
6910:  MOVLB  0
6912:  CALL   19EC
6916:  MOVFF  00,505
691A:  MOVFF  01,506
691E:  MOVFF  02,507
6922:  MOVFF  03,508
6926:  BSF    FD8.1
6928:  MOVFF  03,50C
692C:  MOVFF  02,50B
6930:  MOVFF  01,50A
6934:  MOVFF  00,509
6938:  MOVLB  5
693A:  CLRF   x10
693C:  CLRF   x0F
693E:  CLRF   x0E
6940:  MOVLW  80
6942:  MOVWF  x0D
6944:  MOVLB  0
6946:  CALL   1B82
694A:  MOVFF  4C1,508
694E:  MOVFF  4C0,507
6952:  MOVFF  4BF,506
6956:  MOVFF  4BE,505
695A:  MOVFF  03,50C
695E:  MOVFF  02,50B
6962:  MOVFF  01,50A
6966:  MOVFF  00,509
696A:  CALL   2B38
696E:  BNC   6980
6970:  MOVLB  4
6972:  DECFSZ xA8,W
6974:  BRA    6978
6976:  BRA    697C
6978:  MOVLB  0
697A:  BRA    6980
....................    { 
....................       est=0;tiempo_esterilizacion=0; 
697C:  BCF    x96.0
697E:  CLRF   xA8
....................    } 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
6980:  MOVLB  4
6982:  DECFSZ xAA,W
6984:  BRA    69AE
6986:  MOVF   xA8,W
6988:  SUBLW  02
698A:  BNZ   69AE
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
698C:  CLRF   xA0
....................       if(Presostato<20) 
698E:  MOVF   x91,W
6990:  SUBLW  13
6992:  BNC   6998
....................       { 
....................          EVDesfogue=3; 
6994:  MOVLW  03
6996:  MOVWF  x99
....................       } 
....................       if(Presostato<7) 
6998:  MOVF   x91,W
699A:  SUBLW  06
699C:  BNC   69AA
....................       { 
....................          tiempo_secado=1; 
699E:  MOVLW  01
69A0:  MOVWF  xA9
....................          Control=0;EVDesfogue=3; 
69A2:  CLRF   xA0
69A4:  MOVLW  03
69A6:  MOVWF  x99
....................       } 
....................       else 
69A8:  BRA    69AE
....................       { 
....................          EVDesfogue=1; 
69AA:  MOVLW  01
69AC:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
69AE:  MOVF   xAA,W
69B0:  SUBLW  02
69B2:  BNZ   69E2
69B4:  MOVF   xA8,W
69B6:  SUBLW  02
69B8:  BNZ   69E2
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
69BA:  CLRF   xA0
....................       if(Presostato<20) 
69BC:  MOVF   x91,W
69BE:  SUBLW  13
69C0:  BNC   69C8
....................       { 
....................          EVDesfogue=3; 
69C2:  MOVLW  03
69C4:  MOVWF  x99
....................       } 
....................       else 
69C6:  BRA    69CC
....................       { 
....................          EVDesfogue=2; 
69C8:  MOVLW  02
69CA:  MOVWF  x99
....................       } 
....................       if(Presostato<7) 
69CC:  MOVF   x91,W
69CE:  SUBLW  06
69D0:  BNC   69E2
....................       { 
....................          tiempo_esterilizacion=3; 
69D2:  MOVLW  03
69D4:  MOVWF  xA8
....................          tiempo_secado=2; 
69D6:  MOVLW  02
69D8:  MOVWF  xA9
....................          fin_ciclo=1; 
69DA:  MOVLW  01
69DC:  MOVWF  xA6
....................          EVDesfogue=3; 
69DE:  MOVLW  03
69E0:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1) 
69E2:  MOVF   xC6,W
69E4:  XORLW  80
69E6:  MOVWF  00
69E8:  MOVF   xC2,W
69EA:  XORLW  80
69EC:  SUBWF  00,W
69EE:  BZ    69F2
69F0:  BC    6A2A
69F2:  MOVF   xC7,W
69F4:  XORLW  80
69F6:  MOVWF  00
69F8:  MOVF   xC3,W
69FA:  XORLW  80
69FC:  SUBWF  00,W
69FE:  BZ    6A02
6A00:  BC    6A2A
6A02:  MOVF   xC8,W
6A04:  XORLW  80
6A06:  MOVWF  00
6A08:  MOVF   xC4,W
6A0A:  XORLW  80
6A0C:  SUBWF  00,W
6A0E:  BZ    6A12
6A10:  BC    6A2A
6A12:  MOVF   xC9,W
6A14:  XORLW  80
6A16:  MOVWF  00
6A18:  MOVF   xC5,W
6A1A:  XORLW  80
6A1C:  SUBWF  00,W
6A1E:  BZ    6A22
6A20:  BC    6A2A
6A22:  DECFSZ xA8,W
6A24:  BRA    6A2A
....................    { 
....................       tiempo_esterilizacion=2; 
6A26:  MOVLW  02
6A28:  MOVWF  xA8
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
6A2A:  MOVF   xCE,W
6A2C:  XORLW  80
6A2E:  MOVWF  00
6A30:  MOVF   xCA,W
6A32:  XORLW  80
6A34:  SUBWF  00,W
6A36:  BZ    6A3A
6A38:  BC    6A7A
6A3A:  MOVF   xCF,W
6A3C:  XORLW  80
6A3E:  MOVWF  00
6A40:  MOVF   xCB,W
6A42:  XORLW  80
6A44:  SUBWF  00,W
6A46:  BZ    6A4A
6A48:  BC    6A7A
6A4A:  MOVF   xD0,W
6A4C:  XORLW  80
6A4E:  MOVWF  00
6A50:  MOVF   xCC,W
6A52:  XORLW  80
6A54:  SUBWF  00,W
6A56:  BZ    6A5A
6A58:  BC    6A7A
6A5A:  MOVF   xD1,W
6A5C:  XORLW  80
6A5E:  MOVWF  00
6A60:  MOVF   xCD,W
6A62:  XORLW  80
6A64:  SUBWF  00,W
6A66:  BZ    6A6A
6A68:  BC    6A7A
6A6A:  DECFSZ xA9,W
6A6C:  BRA    6A7A
....................    { 
....................       tiempo_esterilizacion=3; 
6A6E:  MOVLW  03
6A70:  MOVWF  xA8
....................       tiempo_secado=2; 
6A72:  MOVLW  02
6A74:  MOVWF  xA9
....................       fin_ciclo=1; 
6A76:  MOVLW  01
6A78:  MOVWF  xA6
....................    } 
....................     
....................    if(fin_ciclo==1) 
6A7A:  DECFSZ xA6,W
6A7C:  BRA    6AF8
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
6A7E:  CLRF   xA0
6A80:  MOVLW  03
6A82:  MOVWF  x99
....................       if(disp_Fin==0) 
6A84:  BTFSC  x97.1
6A86:  BRA    6AF8
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
6A88:  MOVLB  5
6A8A:  CLRF   x1B
6A8C:  MOVLW  37
6A8E:  MOVWF  x1C
6A90:  MOVLW  7F
6A92:  MOVWF  x1D
6A94:  MOVLW  3F
6A96:  MOVWF  x1E
6A98:  MOVLW  01
6A9A:  MOVWF  x1F
6A9C:  CLRF   x20
6A9E:  MOVLB  0
6AA0:  CALL   156C
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
6AA4:  MOVLW  04
6AA6:  MOVWF  FEA
6AA8:  MOVLW  E5
6AAA:  MOVWF  FE9
6AAC:  MOVFF  FF2,505
6AB0:  BCF    FF2.7
6AB2:  MOVLW  00
6AB4:  CALL   0E04
6AB8:  TBLRD*-
6ABA:  TBLRD*+
6ABC:  MOVF   FF5,W
6ABE:  MOVWF  FEE
6AC0:  IORLW  00
6AC2:  BNZ   6ABA
6AC4:  MOVLB  5
6AC6:  BTFSC  x05.7
6AC8:  BSF    FF2.7
6ACA:  MOVLW  04
6ACC:  MOVWF  x06
6ACE:  MOVLW  E5
6AD0:  MOVWF  x05
6AD2:  CLRF   x07
6AD4:  MOVLW  37
6AD6:  MOVWF  x08
6AD8:  MOVLW  02
6ADA:  MOVWF  x09
6ADC:  MOVLW  01
6ADE:  MOVWF  x0A
6AE0:  MOVLB  0
6AE2:  CALL   162E
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
6AE6:  MOVLB  4
6AE8:  BCF    x96.2
6AEA:  BCF    x96.3
6AEC:  BSF    x96.4
6AEE:  BCF    x96.5
6AF0:  BSF    x96.6
6AF2:  BCF    x96.7
6AF4:  BCF    x97.0
6AF6:  BSF    x97.1
....................       }    
....................        
....................    } 
....................    if(RIGHT) 
6AF8:  BSF    F92.2
6AFA:  BTFSS  F80.2
6AFC:  BRA    6B36
....................    { 
....................       glcd_init(ON); 
6AFE:  MOVLW  01
6B00:  MOVLB  5
6B02:  MOVWF  x05
6B04:  MOVLB  0
6B06:  CALL   1112
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6B0A:  MOVLB  4
6B0C:  BCF    x96.2
6B0E:  BCF    x96.3
6B10:  BCF    x96.4
6B12:  BCF    x96.5
6B14:  BCF    x96.6
6B16:  BCF    x96.7
6B18:  BCF    x97.0
6B1A:  BCF    x97.1
....................       disp_Alarma=0; 
6B1C:  BCF    x97.3
....................       delay_ms(1000); 
6B1E:  MOVLW  04
6B20:  MOVLB  5
6B22:  MOVWF  x05
6B24:  MOVLW  FA
6B26:  MOVWF  x06
6B28:  MOVLB  0
6B2A:  CALL   0F96
6B2E:  MOVLB  5
6B30:  DECFSZ x05,F
6B32:  BRA    6B24
6B34:  MOVLB  4
....................    } 
....................    EVAgua=10; 
6B36:  MOVLW  0A
6B38:  MOVWF  x9A
....................    Envio_Esclavos(); 
6B3A:  MOVLB  0
6B3C:  CALL   201A
6B40:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6B42:  MOVF   xA2,W
6B44:  SUBLW  64
6B46:  BTFSS  FD8.2
6B48:  BRA    6C44
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
6B4A:  MOVFF  4DA,506
6B4E:  MOVLB  5
6B50:  CLRF   x07
6B52:  MOVLW  0A
6B54:  MOVWF  x08
6B56:  MOVLW  02
6B58:  MOVWF  x09
6B5A:  MOVLW  01
6B5C:  MOVWF  x0A
6B5E:  MOVLB  0
6B60:  CALL   2426
....................    displayTiempo(datoRx[1],0,20,2,1); 
6B64:  MOVFF  4DB,506
6B68:  MOVLB  5
6B6A:  CLRF   x07
6B6C:  MOVLW  14
6B6E:  MOVWF  x08
6B70:  MOVLW  02
6B72:  MOVWF  x09
6B74:  MOVLW  01
6B76:  MOVWF  x0A
6B78:  MOVLB  0
6B7A:  CALL   2426
....................    displayTiempo(datoRx[2],0,30,2,1); 
6B7E:  MOVFF  4DC,506
6B82:  MOVLB  5
6B84:  CLRF   x07
6B86:  MOVLW  1E
6B88:  MOVWF  x08
6B8A:  MOVLW  02
6B8C:  MOVWF  x09
6B8E:  MOVLW  01
6B90:  MOVWF  x0A
6B92:  MOVLB  0
6B94:  CALL   2426
....................    displayTiempo(datoRx[3],0,40,2,1); 
6B98:  MOVFF  4DD,506
6B9C:  MOVLB  5
6B9E:  CLRF   x07
6BA0:  MOVLW  28
6BA2:  MOVWF  x08
6BA4:  MOVLW  02
6BA6:  MOVWF  x09
6BA8:  MOVLW  01
6BAA:  MOVWF  x0A
6BAC:  MOVLB  0
6BAE:  CALL   2426
....................    displayTiempo(Opcion,0,50,2,1); 
6BB2:  MOVFF  4A7,506
6BB6:  MOVLB  5
6BB8:  CLRF   x07
6BBA:  MOVLW  32
6BBC:  MOVWF  x08
6BBE:  MOVLW  02
6BC0:  MOVWF  x09
6BC2:  MOVLW  01
6BC4:  MOVWF  x0A
6BC6:  MOVLB  0
6BC8:  CALL   2426
....................    Lectura_Esclavos(); 
6BCC:  CALL   1EC0
....................    Opcion++; 
6BD0:  MOVLB  4
6BD2:  INCF   xA7,F
....................    displayTiempo(Puerta,50,10,2,1); 
6BD4:  MOVFF  48D,506
6BD8:  MOVLW  32
6BDA:  MOVLB  5
6BDC:  MOVWF  x07
6BDE:  MOVLW  0A
6BE0:  MOVWF  x08
6BE2:  MOVLW  02
6BE4:  MOVWF  x09
6BE6:  MOVLW  01
6BE8:  MOVWF  x0A
6BEA:  MOVLB  0
6BEC:  CALL   2426
....................    displayTiempo(Parada,50,20,2,1); 
6BF0:  MOVFF  48E,506
6BF4:  MOVLW  32
6BF6:  MOVLB  5
6BF8:  MOVWF  x07
6BFA:  MOVLW  14
6BFC:  MOVWF  x08
6BFE:  MOVLW  02
6C00:  MOVWF  x09
6C02:  MOVLW  01
6C04:  MOVWF  x0A
6C06:  MOVLB  0
6C08:  CALL   2426
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6C0C:  MOVFF  4C1,508
6C10:  MOVFF  4C0,507
6C14:  MOVFF  4BF,506
6C18:  MOVFF  4BE,505
6C1C:  GOTO   2BB2
6C20:  MOVFF  01,505
6C24:  MOVFF  01,506
6C28:  MOVLW  32
6C2A:  MOVLB  5
6C2C:  MOVWF  x07
6C2E:  MOVLW  1E
6C30:  MOVWF  x08
6C32:  MOVLW  02
6C34:  MOVWF  x09
6C36:  MOVLW  01
6C38:  MOVWF  x0A
6C3A:  MOVLB  0
6C3C:  CALL   2426
....................     
....................  } 
6C40:  MOVLB  4
6C42:  BRA    6B42
....................        
....................       while(Parada==0) 
....................       { 
6C44:  MOVF   x8E,F
6C46:  BNZ   6D00
....................          Lectura_Esclavos(); 
6C48:  MOVLB  0
6C4A:  CALL   1EC0
....................          delay_ms(100); 
6C4E:  MOVLW  64
6C50:  MOVLB  5
6C52:  MOVWF  x06
6C54:  MOVLB  0
6C56:  CALL   0F96
....................          if(disp_Stop==0) 
6C5A:  MOVLB  4
6C5C:  BTFSC  x96.7
6C5E:  BRA    6CFE
....................          { 
....................             glcd_fillScreen(OFF);  
6C60:  MOVLB  5
6C62:  CLRF   x06
6C64:  MOVLB  0
6C66:  CALL   1000
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6C6A:  MOVLW  04
6C6C:  MOVWF  FEA
6C6E:  MOVLW  E5
6C70:  MOVWF  FE9
6C72:  MOVFF  FF2,505
6C76:  BCF    FF2.7
6C78:  MOVLW  00
6C7A:  CALL   0E30
6C7E:  TBLRD*-
6C80:  TBLRD*+
6C82:  MOVF   FF5,W
6C84:  MOVWF  FEE
6C86:  IORLW  00
6C88:  BNZ   6C80
6C8A:  MOVLB  5
6C8C:  BTFSC  x05.7
6C8E:  BSF    FF2.7
6C90:  MOVLW  04
6C92:  MOVWF  x06
6C94:  MOVLW  E5
6C96:  MOVWF  x05
6C98:  CLRF   x07
6C9A:  MOVLW  0A
6C9C:  MOVWF  x08
6C9E:  CLRF   x09
6CA0:  MOVLW  02
6CA2:  MOVWF  x0A
6CA4:  MOVLB  0
6CA6:  CALL   162E
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6CAA:  MOVLW  04
6CAC:  MOVWF  FEA
6CAE:  MOVLW  E5
6CB0:  MOVWF  FE9
6CB2:  MOVFF  FF2,505
6CB6:  BCF    FF2.7
6CB8:  MOVLW  00
6CBA:  CALL   0E56
6CBE:  TBLRD*-
6CC0:  TBLRD*+
6CC2:  MOVF   FF5,W
6CC4:  MOVWF  FEE
6CC6:  IORLW  00
6CC8:  BNZ   6CC0
6CCA:  MOVLB  5
6CCC:  BTFSC  x05.7
6CCE:  BSF    FF2.7
6CD0:  MOVLW  04
6CD2:  MOVWF  x06
6CD4:  MOVLW  E5
6CD6:  MOVWF  x05
6CD8:  CLRF   x07
6CDA:  MOVLW  1E
6CDC:  MOVWF  x08
6CDE:  CLRF   x09
6CE0:  MOVLW  02
6CE2:  MOVWF  x0A
6CE4:  MOVLB  0
6CE6:  CALL   162E
6CEA:  MOVLB  4
6CEC:  BSF    x95.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6CEE:  BCF    x96.2
6CF0:  BCF    x96.3
6CF2:  BCF    x96.4
6CF4:  BCF    x96.5
6CF6:  BCF    x96.6
6CF8:  BSF    x96.7
6CFA:  BCF    x97.0
6CFC:  BCF    x97.1
....................          } 
....................       }    
6CFE:  BRA    6C44
....................       if(Parada==1) 
6D00:  DECFSZ x8E,W
6D02:  BRA    6DAC
....................       { 
....................          while(emergency==1) 
....................          { 
6D04:  BTFSS  x95.3
6D06:  BRA    6DAC
....................             Lectura_Esclavos(); 
6D08:  MOVLB  0
6D0A:  CALL   1EC0
....................             if(disp_Stop==1) 
6D0E:  MOVLB  4
6D10:  BTFSS  x96.7
6D12:  BRA    6D22
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6D14:  MOVLB  5
6D16:  CLRF   x06
6D18:  MOVLB  0
6D1A:  CALL   1000
6D1E:  MOVLB  4
6D20:  BCF    x96.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6D22:  MOVLW  04
6D24:  MOVWF  FEA
6D26:  MOVLW  E5
6D28:  MOVWF  FE9
6D2A:  MOVFF  FF2,505
6D2E:  BCF    FF2.7
6D30:  MOVLW  00
6D32:  MOVLB  0
6D34:  CALL   0E7C
6D38:  TBLRD*-
6D3A:  TBLRD*+
6D3C:  MOVF   FF5,W
6D3E:  MOVWF  FEE
6D40:  IORLW  00
6D42:  BNZ   6D3A
6D44:  MOVLB  5
6D46:  BTFSC  x05.7
6D48:  BSF    FF2.7
6D4A:  MOVLW  04
6D4C:  MOVWF  x06
6D4E:  MOVLW  E5
6D50:  MOVWF  x05
6D52:  CLRF   x07
6D54:  MOVLW  0A
6D56:  MOVWF  x08
6D58:  CLRF   x09
6D5A:  MOVLW  02
6D5C:  MOVWF  x0A
6D5E:  MOVLB  0
6D60:  CALL   162E
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6D64:  MOVLW  04
6D66:  MOVWF  FEA
6D68:  MOVLW  E5
6D6A:  MOVWF  FE9
6D6C:  MOVFF  FF2,505
6D70:  BCF    FF2.7
6D72:  MOVLW  00
6D74:  CALL   0EA2
6D78:  TBLRD*-
6D7A:  TBLRD*+
6D7C:  MOVF   FF5,W
6D7E:  MOVWF  FEE
6D80:  IORLW  00
6D82:  BNZ   6D7A
6D84:  MOVLB  5
6D86:  BTFSC  x05.7
6D88:  BSF    FF2.7
6D8A:  MOVLW  04
6D8C:  MOVWF  x06
6D8E:  MOVLW  E5
6D90:  MOVWF  x05
6D92:  CLRF   x07
6D94:  MOVLW  1E
6D96:  MOVWF  x08
6D98:  CLRF   x09
6D9A:  MOVLW  02
6D9C:  MOVWF  x0A
6D9E:  MOVLB  0
6DA0:  CALL   162E
....................          glcd_update();} 
6DA4:  CALL   105A
6DA8:  MOVLB  4
6DAA:  BRA    6D04
....................       } 
....................    } 
6DAC:  MOVLB  0
6DAE:  GOTO   3044
.................... } 
6DB2:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
