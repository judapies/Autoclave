CCS PCH C Compiler, Version 4.104, 5967               27-oct.-16 13:23

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclaves Vertical\Con Precamara\2016\Autoclave 85L\Autoclave UPTC\Firmware V3\GLCD_Controller\GLCD_Controller.lst

               ROM used: 27636 bytes (84%)
                         Largest free fragment is 5128
               RAM used: 1285 (63%) at main() level
                         1335 (65%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2B86
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0EC8
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0F96:  MOVLW  05
0F98:  MOVWF  FEA
0F9A:  MOVLW  02
0F9C:  MOVWF  FE9
0F9E:  MOVF   FEF,W
0FA0:  BZ    0FBE
0FA2:  MOVLW  0F
0FA4:  MOVWF  01
0FA6:  CLRF   00
0FA8:  DECFSZ 00,F
0FAA:  BRA    0FA8
0FAC:  DECFSZ 01,F
0FAE:  BRA    0FA6
0FB0:  MOVLW  8F
0FB2:  MOVWF  00
0FB4:  DECFSZ 00,F
0FB6:  BRA    0FB4
0FB8:  NOP   
0FBA:  DECFSZ FEF,F
0FBC:  BRA    0FA2
0FBE:  RETLW  00
.................... #use i2c(Master,slow,sda=PIN_B0,scl=PIN_B1) 
*
1916:  MOVLW  08
1918:  MOVWF  01
191A:  MOVLW  11
191C:  MOVWF  00
191E:  DECFSZ 00,F
1920:  BRA    191E
1922:  BCF    F8A.1
1924:  BCF    F93.1
1926:  MOVLW  11
1928:  MOVWF  00
192A:  DECFSZ 00,F
192C:  BRA    192A
192E:  MOVLB  5
1930:  RLCF   x05,F
1932:  BCF    F8A.0
1934:  BTFSC  FD8.0
1936:  BSF    F93.0
1938:  BTFSS  FD8.0
193A:  BCF    F93.0
193C:  BSF    F93.1
193E:  BTFSS  F81.1
1940:  BRA    193E
1942:  DECFSZ 01,F
1944:  BRA    1948
1946:  BRA    194C
1948:  MOVLB  0
194A:  BRA    191A
194C:  MOVLW  11
194E:  MOVWF  00
1950:  DECFSZ 00,F
1952:  BRA    1950
1954:  BCF    F8A.1
1956:  BCF    F93.1
1958:  NOP   
195A:  BSF    F93.0
195C:  MOVLW  11
195E:  MOVWF  00
1960:  DECFSZ 00,F
1962:  BRA    1960
1964:  MOVLW  11
1966:  MOVWF  00
1968:  DECFSZ 00,F
196A:  BRA    1968
196C:  BSF    F93.1
196E:  BTFSS  F81.1
1970:  BRA    196E
1972:  CLRF   01
1974:  MOVLW  11
1976:  MOVWF  00
1978:  DECFSZ 00,F
197A:  BRA    1978
197C:  BTFSC  F81.0
197E:  BSF    01.0
1980:  BCF    F8A.1
1982:  BCF    F93.1
1984:  BCF    F8A.0
1986:  BCF    F93.0
1988:  MOVLB  0
198A:  RETLW  00
198C:  MOVLW  08
198E:  MOVLB  5
1990:  MOVWF  x05
1992:  MOVFF  00,506
1996:  BSF    F93.0
1998:  MOVLW  11
199A:  MOVWF  00
199C:  DECFSZ 00,F
199E:  BRA    199C
19A0:  BSF    F93.1
19A2:  BTFSS  F81.1
19A4:  BRA    19A2
19A6:  BTFSC  F81.0
19A8:  BSF    FD8.0
19AA:  BTFSS  F81.0
19AC:  BCF    FD8.0
19AE:  RLCF   01,F
19B0:  MOVLW  11
19B2:  MOVWF  00
19B4:  DECFSZ 00,F
19B6:  BRA    19B4
19B8:  BCF    F93.1
19BA:  BCF    F8A.1
19BC:  DECFSZ x05,F
19BE:  BRA    1996
19C0:  BSF    F93.0
19C2:  MOVLW  11
19C4:  MOVWF  00
19C6:  DECFSZ 00,F
19C8:  BRA    19C6
19CA:  BCF    F8A.0
19CC:  MOVF   x06,W
19CE:  BTFSS  FD8.2
19D0:  BCF    F93.0
19D2:  NOP   
19D4:  BSF    F93.1
19D6:  BTFSS  F81.1
19D8:  BRA    19D6
19DA:  MOVLW  11
19DC:  MOVWF  00
19DE:  DECFSZ 00,F
19E0:  BRA    19DE
19E2:  BCF    F8A.1
19E4:  BCF    F93.1
19E6:  MOVLW  11
19E8:  MOVWF  00
19EA:  DECFSZ 00,F
19EC:  BRA    19EA
19EE:  BCF    F8A.0
19F0:  BCF    F93.0
19F2:  MOVLB  0
19F4:  GOTO   1F42 (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
1112:  BCF    F93.2
1114:  BSF    F8A.2
....................    output_low(GLCD_E); 
1116:  BCF    F93.7
1118:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
111A:  BCF    F93.3
111C:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
111E:  BCF    F93.4
1120:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
1122:  BCF    F93.5
1124:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1126:  MOVLB  5
1128:  CLRF   x17
112A:  MOVLW  C0
112C:  MOVWF  x18
112E:  MOVLB  0
1130:  RCALL  0FC0
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1132:  MOVLW  01
1134:  MOVLB  5
1136:  MOVWF  x17
1138:  MOVLW  C0
113A:  MOVWF  x18
113C:  MOVLB  0
113E:  RCALL  0FC0
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
1140:  MOVLB  5
1142:  CLRF   x17
1144:  MOVLW  40
1146:  MOVWF  x18
1148:  MOVLB  0
114A:  RCALL  0FC0
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
114C:  MOVLW  01
114E:  MOVLB  5
1150:  MOVWF  x17
1152:  MOVLW  40
1154:  MOVWF  x18
1156:  MOVLB  0
1158:  RCALL  0FC0
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
115A:  MOVLB  5
115C:  CLRF   x17
115E:  MOVLW  B8
1160:  MOVWF  x18
1162:  MOVLB  0
1164:  RCALL  0FC0
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
1166:  MOVLW  01
1168:  MOVLB  5
116A:  MOVWF  x17
116C:  MOVLW  B8
116E:  MOVWF  x18
1170:  MOVLB  0
1172:  RCALL  0FC0
....................  
....................    if(mode == ON) 
1174:  MOVLB  5
1176:  DECFSZ x01,W
1178:  BRA    1196
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
117A:  CLRF   x17
117C:  MOVLW  3F
117E:  MOVWF  x18
1180:  MOVLB  0
1182:  RCALL  0FC0
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
1184:  MOVLW  01
1186:  MOVLB  5
1188:  MOVWF  x17
118A:  MOVLW  3F
118C:  MOVWF  x18
118E:  MOVLB  0
1190:  RCALL  0FC0
....................    } 
....................    else 
1192:  BRA    11AE
1194:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
1196:  CLRF   x17
1198:  MOVLW  3E
119A:  MOVWF  x18
119C:  MOVLB  0
119E:  RCALL  0FC0
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
11A0:  MOVLW  01
11A2:  MOVLB  5
11A4:  MOVWF  x17
11A6:  MOVLW  3E
11A8:  MOVWF  x18
11AA:  MOVLB  0
11AC:  RCALL  0FC0
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
11AE:  MOVLB  5
11B0:  CLRF   x02
11B2:  MOVLB  0
11B4:  RCALL  1000
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
11B6:  RCALL  105A
....................    #endif 
.................... } 
11B8:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
105A:  MOVLB  5
105C:  CLRF   x13
105E:  MOVLW  16
1060:  MOVWF  x12
....................    p2 = displayData.right; 
1062:  MOVLW  02
1064:  MOVWF  x15
1066:  MOVLW  16
1068:  MOVWF  x14
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
106A:  CLRF   x10
106C:  MOVF   x10,W
106E:  SUBLW  07
1070:  BNC   110E
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
1072:  BCF    F93.5
1074:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
1076:  CLRF   x17
1078:  MOVLW  40
107A:  MOVWF  x18
107C:  MOVLB  0
107E:  RCALL  0FC0
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
1080:  MOVLW  01
1082:  MOVLB  5
1084:  MOVWF  x17
1086:  MOVLW  40
1088:  MOVWF  x18
108A:  MOVLB  0
108C:  RCALL  0FC0
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
108E:  MOVLB  5
1090:  MOVF   x10,W
1092:  IORLW  B8
1094:  MOVWF  x16
1096:  CLRF   x17
1098:  MOVWF  x18
109A:  MOVLB  0
109C:  RCALL  0FC0
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
109E:  MOVLB  5
10A0:  MOVF   x10,W
10A2:  IORLW  B8
10A4:  MOVWF  x16
10A6:  MOVLW  01
10A8:  MOVWF  x17
10AA:  MOVFF  516,518
10AE:  MOVLB  0
10B0:  RCALL  0FC0
....................       output_high(GLCD_DI);                     // Set for data 
10B2:  BCF    F93.5
10B4:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
10B6:  MOVLB  5
10B8:  CLRF   x11
10BA:  MOVF   x11,W
10BC:  SUBLW  3F
10BE:  BNC   110A
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
10C0:  MOVFF  513,03
10C4:  MOVF   x12,W
10C6:  INCF   x12,F
10C8:  BTFSC  FD8.2
10CA:  INCF   x13,F
10CC:  MOVWF  FE9
10CE:  MOVFF  03,FEA
10D2:  MOVFF  FEF,516
10D6:  CLRF   x17
10D8:  MOVFF  516,518
10DC:  MOVLB  0
10DE:  RCALL  0FC0
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
10E0:  MOVLB  5
10E2:  MOVFF  515,03
10E6:  MOVF   x14,W
10E8:  INCF   x14,F
10EA:  BTFSC  FD8.2
10EC:  INCF   x15,F
10EE:  MOVWF  FE9
10F0:  MOVFF  03,FEA
10F4:  MOVFF  FEF,516
10F8:  MOVLW  01
10FA:  MOVWF  x17
10FC:  MOVFF  516,518
1100:  MOVLB  0
1102:  RCALL  0FC0
....................       } 
1104:  MOVLB  5
1106:  INCF   x11,F
1108:  BRA    10BA
....................    } 
110A:  INCF   x10,F
110C:  BRA    106C
.................... } 
110E:  MOVLB  0
1110:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
11BA:  MOVLB  5
11BC:  CLRF   x34
11BE:  RRCF   x2F,W
11C0:  MOVWF  x33
11C2:  RRCF   x33,F
11C4:  RRCF   x33,F
11C6:  MOVLW  1F
11C8:  ANDWF  x33,F
....................    temp *= 64; 
11CA:  RLCF   x33,F
11CC:  RLCF   x34,F
11CE:  RLCF   x33,F
11D0:  RLCF   x34,F
11D2:  RLCF   x33,F
11D4:  RLCF   x34,F
11D6:  RLCF   x33,F
11D8:  RLCF   x34,F
11DA:  RLCF   x33,F
11DC:  RLCF   x34,F
11DE:  RLCF   x33,F
11E0:  RLCF   x34,F
11E2:  MOVLW  C0
11E4:  ANDWF  x33,F
....................    temp += x; 
11E6:  MOVF   x2E,W
11E8:  ADDWF  x33,F
11EA:  MOVLW  00
11EC:  ADDWFC x34,F
....................  
....................    if(x > 63) 
11EE:  MOVF   x2E,W
11F0:  SUBLW  3F
11F2:  BC    120E
....................    { 
....................       p = displayData.right + temp - 64; 
11F4:  MOVLW  16
11F6:  ADDWF  x33,W
11F8:  MOVWF  x35
11FA:  MOVLW  02
11FC:  ADDWFC x34,W
11FE:  MOVWF  x36
1200:  MOVLW  40
1202:  SUBWF  x35,W
1204:  MOVWF  x31
1206:  MOVLW  00
1208:  SUBWFB x36,W
120A:  MOVWF  x32
....................    } 
....................    else 
120C:  BRA    121A
....................    { 
....................       p = displayData.left + temp; 
120E:  MOVLW  16
1210:  ADDWF  x33,W
1212:  MOVWF  x31
1214:  MOVLW  00
1216:  ADDWFC x34,W
1218:  MOVWF  x32
....................    } 
....................  
....................    if(color) 
121A:  MOVF   x30,F
121C:  BZ    1248
....................    { 
....................       bit_set(*p, y%8); 
121E:  MOVFF  532,03
1222:  MOVFF  531,FE9
1226:  MOVFF  532,FEA
122A:  MOVF   x2F,W
122C:  ANDLW  07
122E:  MOVWF  x35
1230:  MOVLW  01
1232:  MOVWF  00
1234:  MOVF   x35,W
1236:  MOVWF  01
1238:  BZ    1242
123A:  BCF    FD8.0
123C:  RLCF   00,F
123E:  DECFSZ 01,F
1240:  BRA    123A
1242:  MOVF   00,W
1244:  IORWF  FEF,F
....................    } 
....................    else 
1246:  BRA    1272
....................    { 
....................       bit_clear(*p, y%8); 
1248:  MOVFF  532,03
124C:  MOVFF  531,FE9
1250:  MOVFF  532,FEA
1254:  MOVF   x2F,W
1256:  ANDLW  07
1258:  MOVWF  x35
125A:  MOVLW  01
125C:  MOVWF  00
125E:  MOVF   x35,W
1260:  MOVWF  01
1262:  BZ    126C
1264:  BCF    FD8.0
1266:  RLCF   00,F
1268:  DECFSZ 01,F
126A:  BRA    1264
126C:  MOVF   00,W
126E:  XORLW  FF
1270:  ANDWF  FEF,F
....................    } 
.................... } 
1272:  MOVLB  0
1274:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
1000:  MOVLB  5
1002:  CLRF   x05
1004:  MOVLW  16
1006:  MOVWF  x04
....................    p2 = displayData.right; 
1008:  MOVLW  02
100A:  MOVWF  x07
100C:  MOVLW  16
100E:  MOVWF  x06
....................    data = 0xFF * color; 
1010:  MOVF   x02,W
1012:  MULLW  FF
1014:  MOVFF  FF3,503
....................  
....................    for(i=0; i<512; ++i) 
1018:  CLRF   x09
101A:  CLRF   x08
101C:  MOVF   x09,W
101E:  SUBLW  01
1020:  BNC   1056
....................    { 
....................       *p1++ = data; 
1022:  MOVFF  505,03
1026:  MOVF   x04,W
1028:  INCF   x04,F
102A:  BTFSC  FD8.2
102C:  INCF   x05,F
102E:  MOVWF  FE9
1030:  MOVFF  03,FEA
1034:  MOVFF  503,FEF
....................       *p2++ = data; 
1038:  MOVFF  507,03
103C:  MOVF   x06,W
103E:  INCF   x06,F
1040:  BTFSC  FD8.2
1042:  INCF   x07,F
1044:  MOVWF  FE9
1046:  MOVFF  03,FEA
104A:  MOVFF  503,FEF
....................    } 
104E:  INCF   x08,F
1050:  BTFSC  FD8.2
1052:  INCF   x09,F
1054:  BRA    101C
.................... } 
1056:  MOVLB  0
1058:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0FC0:  MOVLB  5
0FC2:  MOVF   x17,F
0FC4:  BZ    0FCC
....................       output_high(GLCD_CS2); 
0FC6:  BCF    F93.4
0FC8:  BSF    F8A.4
....................    else 
0FCA:  BRA    0FD0
....................       output_high(GLCD_CS1); 
0FCC:  BCF    F93.3
0FCE:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0FD0:  BCF    F93.6
0FD2:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0FD4:  CLRF   F95
0FD6:  MOVFF  518,F8C
....................    delay_cycles(50); 
0FDA:  MOVLW  10
0FDC:  MOVWF  00
0FDE:  DECFSZ 00,F
0FE0:  BRA    0FDE
0FE2:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0FE4:  BCF    F93.7
0FE6:  BSF    F8A.7
....................    delay_cycles(250); 
0FE8:  MOVLW  53
0FEA:  MOVWF  00
0FEC:  DECFSZ 00,F
0FEE:  BRA    0FEC
....................    output_low(GLCD_E); 
0FF0:  BCF    F93.7
0FF2:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0FF4:  BCF    F93.3
0FF6:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0FF8:  BCF    F93.4
0FFA:  BCF    F8A.4
.................... } 
0FFC:  MOVLB  0
0FFE:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
142E:  MOVLW  01
1430:  MOVLB  5
1432:  MOVWF  x27
1434:  MOVWF  x28
1436:  CLRF   x2D
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
1438:  MOVF   x1E,W
143A:  SUBWF  x20,W
143C:  MOVWF  x2E
143E:  MOVF   x2E,W
1440:  BTFSS  x2E.7
1442:  BRA    144A
1444:  MOVLW  00
1446:  BSF    FD8.0
1448:  SUBFWB x2E,W
144A:  CLRF   03
144C:  MOVWF  x25
144E:  MOVFF  03,526
....................    dy = abs((signed int8)(y2 - y1)); 
1452:  MOVF   x1F,W
1454:  SUBWF  x21,W
1456:  MOVWF  x2E
1458:  MOVF   x2E,W
145A:  BTFSS  x2E.7
145C:  BRA    1464
145E:  MOVLW  00
1460:  BSF    FD8.0
1462:  SUBFWB x2E,W
1464:  CLRF   03
1466:  MOVWF  x23
1468:  MOVFF  03,524
....................    #endif 
....................  
....................    if(x1 > x2) 
146C:  MOVF   x1E,W
146E:  SUBWF  x20,W
1470:  BC    1476
....................       addx = -1; 
1472:  MOVLW  FF
1474:  MOVWF  x27
....................    if(y1 > y2) 
1476:  MOVF   x1F,W
1478:  SUBWF  x21,W
147A:  BC    1480
....................       addy = -1; 
147C:  MOVLW  FF
147E:  MOVWF  x28
....................  
....................    if(dx >= dy) 
1480:  MOVF   x24,W
1482:  SUBWF  x26,W
1484:  BNC   14FC
1486:  BNZ   148E
1488:  MOVF   x23,W
148A:  SUBWF  x25,W
148C:  BNC   14FC
....................    { 
....................       dy *= 2; 
148E:  BCF    FD8.0
1490:  RLCF   x23,F
1492:  RLCF   x24,F
....................       P = dy - dx; 
1494:  MOVF   x25,W
1496:  SUBWF  x23,W
1498:  MOVWF  00
149A:  MOVF   x26,W
149C:  SUBWFB x24,W
149E:  MOVFF  00,529
14A2:  MOVWF  x2A
....................       diff = P - dx; 
14A4:  MOVF   x25,W
14A6:  SUBWF  x29,W
14A8:  MOVWF  x2B
14AA:  MOVF   x26,W
14AC:  SUBWFB x2A,W
14AE:  MOVWF  x2C
....................  
....................       for(; i<=dx; ++i) 
14B0:  MOVF   x26,F
14B2:  BNZ   14BA
14B4:  MOVF   x2D,W
14B6:  SUBWF  x25,W
14B8:  BNC   14FA
....................       { 
....................          glcd_pixel(x1, y1, color); 
14BA:  MOVFF  51E,52E
14BE:  MOVFF  51F,52F
14C2:  MOVFF  522,530
14C6:  MOVLB  0
14C8:  RCALL  11BA
....................  
....................          if(P < 0) 
14CA:  MOVLB  5
14CC:  BTFSC  x2A.7
14CE:  BRA    14D2
14D0:  BRA    14E2
....................          { 
....................             P  += dy; 
14D2:  MOVF   x23,W
14D4:  ADDWF  x29,F
14D6:  MOVF   x24,W
14D8:  ADDWFC x2A,F
....................             x1 += addx; 
14DA:  MOVF   x27,W
14DC:  ADDWF  x1E,W
14DE:  MOVWF  x1E
....................          } 
....................          else 
14E0:  BRA    14F6
....................          { 
....................             P  += diff; 
14E2:  MOVF   x2B,W
14E4:  ADDWF  x29,F
14E6:  MOVF   x2C,W
14E8:  ADDWFC x2A,F
....................             x1 += addx; 
14EA:  MOVF   x27,W
14EC:  ADDWF  x1E,W
14EE:  MOVWF  x1E
....................             y1 += addy; 
14F0:  MOVF   x28,W
14F2:  ADDWF  x1F,W
14F4:  MOVWF  x1F
....................          } 
....................       } 
14F6:  INCF   x2D,F
14F8:  BRA    14B0
....................    } 
....................    else 
14FA:  BRA    1568
....................    { 
....................       dx *= 2; 
14FC:  BCF    FD8.0
14FE:  RLCF   x25,F
1500:  RLCF   x26,F
....................       P = dx - dy; 
1502:  MOVF   x23,W
1504:  SUBWF  x25,W
1506:  MOVWF  00
1508:  MOVF   x24,W
150A:  SUBWFB x26,W
150C:  MOVFF  00,529
1510:  MOVWF  x2A
....................       diff = P - dy; 
1512:  MOVF   x23,W
1514:  SUBWF  x29,W
1516:  MOVWF  x2B
1518:  MOVF   x24,W
151A:  SUBWFB x2A,W
151C:  MOVWF  x2C
....................  
....................       for(; i<=dy; ++i) 
151E:  MOVF   x24,F
1520:  BNZ   1528
1522:  MOVF   x2D,W
1524:  SUBWF  x23,W
1526:  BNC   1568
....................       { 
....................          glcd_pixel(x1, y1, color); 
1528:  MOVFF  51E,52E
152C:  MOVFF  51F,52F
1530:  MOVFF  522,530
1534:  MOVLB  0
1536:  RCALL  11BA
....................  
....................          if(P < 0) 
1538:  MOVLB  5
153A:  BTFSC  x2A.7
153C:  BRA    1540
153E:  BRA    1550
....................          { 
....................             P  += dx; 
1540:  MOVF   x25,W
1542:  ADDWF  x29,F
1544:  MOVF   x26,W
1546:  ADDWFC x2A,F
....................             y1 += addy; 
1548:  MOVF   x28,W
154A:  ADDWF  x1F,W
154C:  MOVWF  x1F
....................          } 
....................          else 
154E:  BRA    1564
....................          { 
....................             P  += diff; 
1550:  MOVF   x2B,W
1552:  ADDWF  x29,F
1554:  MOVF   x2C,W
1556:  ADDWFC x2A,F
....................             x1 += addx; 
1558:  MOVF   x27,W
155A:  ADDWF  x1E,W
155C:  MOVWF  x1E
....................             y1 += addy; 
155E:  MOVF   x28,W
1560:  ADDWF  x1F,W
1562:  MOVWF  x1F
....................          } 
....................       } 
1564:  INCF   x2D,F
1566:  BRA    151E
....................    } 
.................... } 
1568:  MOVLB  0
156A:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
156C:  MOVLB  5
156E:  MOVF   x17,F
1570:  BZ    15CE
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1572:  MOVF   x15,W
1574:  SUBWF  x13,W
1576:  BC    1582
....................       { 
....................          xmin = x1; 
1578:  MOVFF  513,51A
....................          xmax = x2; 
157C:  MOVFF  515,51B
....................       } 
....................       else 
1580:  BRA    158A
....................       { 
....................          xmin = x2; 
1582:  MOVFF  515,51A
....................          xmax = x1; 
1586:  MOVFF  513,51B
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
158A:  MOVF   x16,W
158C:  SUBWF  x14,W
158E:  BC    159A
....................       { 
....................          ymin = y1; 
1590:  MOVFF  514,51C
....................          ymax = y2; 
1594:  MOVFF  516,51D
....................       } 
....................       else 
1598:  BRA    15A2
....................       { 
....................          ymin = y2; 
159A:  MOVFF  516,51C
....................          ymax = y1; 
159E:  MOVFF  514,51D
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
15A2:  MOVF   x1A,W
15A4:  SUBWF  x1B,W
15A6:  BNC   15CC
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
15A8:  MOVFF  51C,519
15AC:  MOVF   x19,W
15AE:  SUBWF  x1D,W
15B0:  BNC   15C8
....................          { 
....................             glcd_pixel(xmin, i, color); 
15B2:  MOVFF  51A,52E
15B6:  MOVFF  519,52F
15BA:  MOVFF  518,530
15BE:  MOVLB  0
15C0:  RCALL  11BA
....................          } 
15C2:  MOVLB  5
15C4:  INCF   x19,F
15C6:  BRA    15AC
....................       } 
15C8:  INCF   x1A,F
15CA:  BRA    15A2
....................    } 
....................    else 
15CC:  BRA    162A
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
15CE:  MOVFF  513,51E
15D2:  MOVFF  514,51F
15D6:  MOVFF  515,520
15DA:  MOVFF  514,521
15DE:  MOVFF  518,522
15E2:  MOVLB  0
15E4:  RCALL  142E
....................       glcd_line(x1, y2, x2, y2, color); 
15E6:  MOVFF  513,51E
15EA:  MOVFF  516,51F
15EE:  MOVFF  515,520
15F2:  MOVFF  516,521
15F6:  MOVFF  518,522
15FA:  RCALL  142E
....................       glcd_line(x1, y1, x1, y2, color); 
15FC:  MOVFF  513,51E
1600:  MOVFF  514,51F
1604:  MOVFF  513,520
1608:  MOVFF  516,521
160C:  MOVFF  518,522
1610:  RCALL  142E
....................       glcd_line(x2, y1, x2, y2, color); 
1612:  MOVFF  515,51E
1616:  MOVFF  514,51F
161A:  MOVFF  515,520
161E:  MOVFF  516,521
1622:  MOVFF  518,522
1626:  RCALL  142E
1628:  MOVLB  5
....................    } 
.................... } 
162A:  MOVLB  0
162C:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2172:  MOVLB  5
2174:  CLRF   x06
....................    b = radius; 
2176:  MOVFF  503,507
....................    P = 1 - radius; 
217A:  MOVLW  01
217C:  BSF    FD8.0
217E:  SUBFWB x03,W
2180:  MOVWF  x08
....................  
....................    do 
....................    { 
....................       if(fill) 
2182:  MOVF   x04,F
2184:  BZ    2250
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
2186:  MOVF   x06,W
2188:  SUBWF  x01,W
218A:  MOVWF  x09
218C:  MOVF   x07,W
218E:  ADDWF  x02,W
2190:  MOVWF  x0A
2192:  MOVF   x06,W
2194:  ADDWF  x01,W
2196:  MOVWF  x0B
2198:  MOVF   x07,W
219A:  ADDWF  x02,W
219C:  MOVWF  x0C
219E:  MOVFF  509,51E
21A2:  MOVFF  50A,51F
21A6:  MOVFF  50B,520
21AA:  MOVWF  x21
21AC:  MOVFF  505,522
21B0:  MOVLB  0
21B2:  CALL   142E
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
21B6:  MOVLB  5
21B8:  MOVF   x06,W
21BA:  SUBWF  x01,W
21BC:  MOVWF  x09
21BE:  MOVF   x07,W
21C0:  SUBWF  x02,W
21C2:  MOVWF  x0A
21C4:  MOVF   x06,W
21C6:  ADDWF  x01,W
21C8:  MOVWF  x0B
21CA:  MOVF   x07,W
21CC:  SUBWF  x02,W
21CE:  MOVWF  x0C
21D0:  MOVFF  509,51E
21D4:  MOVFF  50A,51F
21D8:  MOVFF  50B,520
21DC:  MOVWF  x21
21DE:  MOVFF  505,522
21E2:  MOVLB  0
21E4:  CALL   142E
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
21E8:  MOVLB  5
21EA:  MOVF   x07,W
21EC:  SUBWF  x01,W
21EE:  MOVWF  x09
21F0:  MOVF   x06,W
21F2:  ADDWF  x02,W
21F4:  MOVWF  x0A
21F6:  MOVF   x07,W
21F8:  ADDWF  x01,W
21FA:  MOVWF  x0B
21FC:  MOVF   x06,W
21FE:  ADDWF  x02,W
2200:  MOVWF  x0C
2202:  MOVFF  509,51E
2206:  MOVFF  50A,51F
220A:  MOVFF  50B,520
220E:  MOVWF  x21
2210:  MOVFF  505,522
2214:  MOVLB  0
2216:  CALL   142E
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
221A:  MOVLB  5
221C:  MOVF   x07,W
221E:  SUBWF  x01,W
2220:  MOVWF  x09
2222:  MOVF   x06,W
2224:  SUBWF  x02,W
2226:  MOVWF  x0A
2228:  MOVF   x07,W
222A:  ADDWF  x01,W
222C:  MOVWF  x0B
222E:  MOVF   x06,W
2230:  SUBWF  x02,W
2232:  MOVWF  x0C
2234:  MOVFF  509,51E
2238:  MOVFF  50A,51F
223C:  MOVFF  50B,520
2240:  MOVWF  x21
2242:  MOVFF  505,522
2246:  MOVLB  0
2248:  CALL   142E
....................       } 
....................       else 
224C:  BRA    233E
224E:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2250:  MOVF   x01,W
2252:  ADDWF  x06,W
2254:  MOVWF  x09
2256:  MOVF   x02,W
2258:  ADDWF  x07,W
225A:  MOVWF  x0A
225C:  MOVFF  509,52E
2260:  MOVWF  x2F
2262:  MOVFF  505,530
2266:  MOVLB  0
2268:  CALL   11BA
....................          glcd_pixel(b+x, a+y, color); 
226C:  MOVLB  5
226E:  MOVF   x01,W
2270:  ADDWF  x07,W
2272:  MOVWF  x09
2274:  MOVF   x02,W
2276:  ADDWF  x06,W
2278:  MOVWF  x0A
227A:  MOVFF  509,52E
227E:  MOVWF  x2F
2280:  MOVFF  505,530
2284:  MOVLB  0
2286:  CALL   11BA
....................          glcd_pixel(x-a, b+y, color); 
228A:  MOVLB  5
228C:  MOVF   x06,W
228E:  SUBWF  x01,W
2290:  MOVWF  x09
2292:  MOVF   x02,W
2294:  ADDWF  x07,W
2296:  MOVWF  x0A
2298:  MOVFF  509,52E
229C:  MOVWF  x2F
229E:  MOVFF  505,530
22A2:  MOVLB  0
22A4:  CALL   11BA
....................          glcd_pixel(x-b, a+y, color); 
22A8:  MOVLB  5
22AA:  MOVF   x07,W
22AC:  SUBWF  x01,W
22AE:  MOVWF  x09
22B0:  MOVF   x02,W
22B2:  ADDWF  x06,W
22B4:  MOVWF  x0A
22B6:  MOVFF  509,52E
22BA:  MOVWF  x2F
22BC:  MOVFF  505,530
22C0:  MOVLB  0
22C2:  CALL   11BA
....................          glcd_pixel(b+x, y-a, color); 
22C6:  MOVLB  5
22C8:  MOVF   x01,W
22CA:  ADDWF  x07,W
22CC:  MOVWF  x09
22CE:  MOVF   x06,W
22D0:  SUBWF  x02,W
22D2:  MOVWF  x0A
22D4:  MOVFF  509,52E
22D8:  MOVWF  x2F
22DA:  MOVFF  505,530
22DE:  MOVLB  0
22E0:  CALL   11BA
....................          glcd_pixel(a+x, y-b, color); 
22E4:  MOVLB  5
22E6:  MOVF   x01,W
22E8:  ADDWF  x06,W
22EA:  MOVWF  x09
22EC:  MOVF   x07,W
22EE:  SUBWF  x02,W
22F0:  MOVWF  x0A
22F2:  MOVFF  509,52E
22F6:  MOVWF  x2F
22F8:  MOVFF  505,530
22FC:  MOVLB  0
22FE:  CALL   11BA
....................          glcd_pixel(x-a, y-b, color); 
2302:  MOVLB  5
2304:  MOVF   x06,W
2306:  SUBWF  x01,W
2308:  MOVWF  x09
230A:  MOVF   x07,W
230C:  SUBWF  x02,W
230E:  MOVWF  x0A
2310:  MOVFF  509,52E
2314:  MOVWF  x2F
2316:  MOVFF  505,530
231A:  MOVLB  0
231C:  CALL   11BA
....................          glcd_pixel(x-b, y-a, color); 
2320:  MOVLB  5
2322:  MOVF   x07,W
2324:  SUBWF  x01,W
2326:  MOVWF  x09
2328:  MOVF   x06,W
232A:  SUBWF  x02,W
232C:  MOVWF  x0A
232E:  MOVFF  509,52E
2332:  MOVWF  x2F
2334:  MOVFF  505,530
2338:  MOVLB  0
233A:  CALL   11BA
....................       } 
....................  
....................       if(P < 0) 
233E:  MOVLB  5
2340:  BTFSC  x08.7
2342:  BRA    2346
2344:  BRA    2362
....................          P += 3 + 2 * a++; 
2346:  MOVF   x06,W
2348:  INCF   x06,F
234A:  MOVWF  x09
234C:  MOVLW  02
234E:  MOVWF  x0A
2350:  MOVFF  509,50B
2354:  MOVLB  0
2356:  RCALL  2124
2358:  MOVF   01,W
235A:  ADDLW  03
235C:  MOVLB  5
235E:  ADDWF  x08,F
....................       else 
2360:  BRA    2384
....................          P += 5 + 2 * (a++ - b--); 
2362:  MOVF   x06,W
2364:  INCF   x06,F
2366:  MOVWF  x09
2368:  MOVF   x07,W
236A:  DECF   x07,F
236C:  SUBWF  x09,W
236E:  MOVWF  x09
2370:  MOVLW  02
2372:  MOVWF  x0A
2374:  MOVFF  509,50B
2378:  MOVLB  0
237A:  RCALL  2124
237C:  MOVF   01,W
237E:  ADDLW  05
2380:  MOVLB  5
2382:  ADDWF  x08,F
....................     } while(a <= b); 
2384:  MOVF   x06,W
2386:  XORLW  80
2388:  MOVWF  00
238A:  MOVF   x07,W
238C:  XORLW  80
238E:  SUBWF  00,W
2390:  BTFSC  FD8.2
2392:  BRA    2182
2394:  BTFSS  FD8.0
2396:  BRA    2182
.................... } 
2398:  MOVLB  0
239A:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
1276:  MOVFF  515,03
127A:  MOVLB  5
127C:  MOVFF  514,FE9
1280:  MOVFF  515,FEA
1284:  MOVF   FEF,F
1286:  BTFSC  FD8.2
1288:  BRA    142A
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
128A:  MOVFF  515,03
128E:  MOVFF  514,FE9
1292:  MOVFF  515,FEA
1296:  MOVF   FEF,W
1298:  SUBLW  52
129A:  BNC   12EA
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
129C:  MOVFF  515,03
12A0:  MOVFF  514,FE9
12A4:  MOVFF  515,FEA
12A8:  MOVLW  20
12AA:  SUBWF  FEF,W
12AC:  MULLW  05
12AE:  MOVF   FF3,W
12B0:  CLRF   03
12B2:  MOVWF  x21
12B4:  MOVLW  05
12B6:  MOVWF  FEA
12B8:  MOVLW  1C
12BA:  MOVWF  FE9
12BC:  CLRF   x25
12BE:  MOVFF  521,524
12C2:  MOVFF  FF2,522
12C6:  BCF    FF2.7
12C8:  MOVLW  05
12CA:  MOVWF  01
12CC:  CLRF   FF7
12CE:  MOVF   x21,W
12D0:  MOVLB  0
12D2:  CALL   0096
12D6:  TBLRD*-
12D8:  TBLRD*+
12DA:  MOVFF  FF5,FEE
12DE:  DECFSZ 01,F
12E0:  BRA    12D8
12E2:  MOVLB  5
12E4:  BTFSC  x22.7
12E6:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
12E8:  BRA    1354
12EA:  MOVFF  515,03
12EE:  MOVFF  514,FE9
12F2:  MOVFF  515,FEA
12F6:  MOVF   FEF,W
12F8:  SUBLW  7E
12FA:  BNC   134A
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
12FC:  MOVFF  515,03
1300:  MOVFF  514,FE9
1304:  MOVFF  515,FEA
1308:  MOVLW  53
130A:  SUBWF  FEF,W
130C:  MULLW  05
130E:  MOVF   FF3,W
1310:  CLRF   03
1312:  MOVWF  x21
1314:  MOVLW  05
1316:  MOVWF  FEA
1318:  MOVLW  1C
131A:  MOVWF  FE9
131C:  CLRF   x25
131E:  MOVFF  521,524
1322:  MOVFF  FF2,522
1326:  BCF    FF2.7
1328:  MOVLW  05
132A:  MOVWF  01
132C:  CLRF   FF7
132E:  MOVF   x21,W
1330:  MOVLB  0
1332:  CALL   01B0
1336:  TBLRD*-
1338:  TBLRD*+
133A:  MOVFF  FF5,FEE
133E:  DECFSZ 01,F
1340:  BRA    1338
1342:  MOVLB  5
1344:  BTFSC  x22.7
1346:  BSF    FF2.7
....................       else 
1348:  BRA    1354
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
134A:  CLRF   x1C
134C:  CLRF   x1D
134E:  CLRF   x1E
1350:  CLRF   x1F
1352:  CLRF   x20
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1354:  MOVFF  515,03
1358:  MOVF   x14,W
135A:  MOVWF  FE9
135C:  MOVFF  03,FEA
1360:  MOVF   FEF,W
1362:  XORLW  0A
1364:  MOVLB  0
1366:  BZ    136E
1368:  XORLW  07
136A:  BZ    137E
136C:  BRA    1384
....................          case '\n': 
....................             y += 7*size + 1; 
136E:  MOVLB  5
1370:  MOVF   x16,W
1372:  MULLW  07
1374:  MOVF   FF3,W
1376:  ADDLW  01
1378:  ADDWF  x13,F
....................             continue; 
137A:  BRA    141C
137C:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
137E:  MOVLB  5
1380:  CLRF   x12
....................             continue; 
1382:  BRA    141C
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1384:  MOVLB  5
1386:  MOVF   x16,W
1388:  MULLW  05
138A:  MOVF   FF3,W
138C:  ADDWF  x12,W
138E:  SUBLW  7F
1390:  BC    139E
....................       { 
....................          x = 0;                           // Set x at far left position 
1392:  CLRF   x12
....................          y += 7*size + 1;                 // Set y at next position down 
1394:  MOVF   x16,W
1396:  MULLW  07
1398:  MOVF   FF3,W
139A:  ADDLW  01
139C:  ADDWF  x13,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
139E:  CLRF   x18
13A0:  MOVF   x18,W
13A2:  SUBLW  04
13A4:  BNC   141C
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
13A6:  CLRF   x19
13A8:  MOVF   x19,W
13AA:  SUBLW  06
13AC:  BNC   1414
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
13AE:  CLRF   03
13B0:  MOVF   x18,W
13B2:  ADDLW  1C
13B4:  MOVWF  FE9
13B6:  MOVLW  05
13B8:  ADDWFC 03,W
13BA:  MOVWF  FEA
13BC:  MOVFF  FEF,521
13C0:  MOVFF  521,00
13C4:  MOVF   x19,W
13C6:  MOVWF  01
13C8:  BZ    13D2
13CA:  BCF    FD8.0
13CC:  RRCF   00,F
13CE:  DECFSZ 01,F
13D0:  BRA    13CA
13D2:  BTFSS  00.0
13D4:  BRA    1410
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
13D6:  CLRF   x1A
13D8:  MOVF   x16,W
13DA:  SUBWF  x1A,W
13DC:  BC    1410
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
13DE:  CLRF   x1B
13E0:  MOVF   x16,W
13E2:  SUBWF  x1B,W
13E4:  BC    140C
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
13E6:  MOVF   x1B,W
13E8:  ADDWF  x12,W
13EA:  MOVWF  x21
13EC:  MOVF   x19,W
13EE:  MULWF  x16
13F0:  MOVF   FF3,W
13F2:  ADDWF  x13,W
13F4:  ADDWF  x1A,W
13F6:  MOVWF  x22
13F8:  MOVFF  521,52E
13FC:  MOVWF  x2F
13FE:  MOVFF  517,530
1402:  MOVLB  0
1404:  RCALL  11BA
....................                   } 
1406:  MOVLB  5
1408:  INCF   x1B,F
140A:  BRA    13E0
....................                } 
140C:  INCF   x1A,F
140E:  BRA    13D8
....................             } 
....................          } 
1410:  INCF   x19,F
1412:  BRA    13A8
....................       } 
1414:  INCF   x18,F
1416:  MOVF   x16,W
1418:  ADDWF  x12,F
141A:  BRA    13A0
....................    } 
141C:  INCF   x14,F
141E:  BTFSC  FD8.2
1420:  INCF   x15,F
1422:  INCF   x12,F
1424:  MOVLB  0
1426:  BRA    1276
1428:  MOVLB  5
.................... } 
142A:  MOVLB  0
142C:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,Alarma=0,AlarmaAgua=0,Alarma2=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,flag_agua=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoRx[11]; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
162E:  MOVLB  5
1630:  MOVFF  501,01
1634:  MOVFF  502,03
1638:  MOVFF  501,507
163C:  MOVFF  502,508
1640:  MOVLW  04
1642:  MOVWF  FEA
1644:  MOVLW  E1
1646:  MOVWF  FE9
1648:  MOVFF  502,FE2
164C:  MOVFF  501,FE1
1650:  MOVF   FE7,F
1652:  MOVFF  FE6,FEE
1656:  BNZ   1650
....................    if(sombreado==2) 
1658:  MOVF   x05,W
165A:  SUBLW  02
165C:  BNZ   1686
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
165E:  MOVLW  01
1660:  ADDWF  x03,W
1662:  MOVWF  x07
1664:  MOVLW  01
1666:  ADDWF  x04,W
1668:  MOVWF  x08
166A:  MOVFF  507,512
166E:  MOVWF  x13
1670:  MOVLW  04
1672:  MOVWF  x15
1674:  MOVLW  E1
1676:  MOVWF  x14
1678:  MOVFF  506,516
167C:  MOVLW  01
167E:  MOVWF  x17
1680:  MOVLB  0
1682:  RCALL  1276
1684:  MOVLB  5
....................    if(sombreado==1) 
1686:  DECFSZ x05,W
1688:  BRA    16D4
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
168A:  MOVF   x06,W
168C:  MULLW  08
168E:  MOVF   FF3,W
1690:  ADDWF  x04,W
1692:  MOVWF  x07
1694:  CLRF   x13
1696:  MOVFF  504,514
169A:  MOVLW  7F
169C:  MOVWF  x15
169E:  MOVFF  507,516
16A2:  MOVLW  01
16A4:  MOVWF  x17
16A6:  MOVWF  x18
16A8:  MOVLB  0
16AA:  RCALL  156C
16AC:  MOVLW  01
16AE:  MOVLB  5
16B0:  ADDWF  x03,W
16B2:  MOVWF  x07
16B4:  MOVLW  01
16B6:  ADDWF  x04,W
16B8:  MOVWF  x08
16BA:  MOVFF  507,512
16BE:  MOVWF  x13
16C0:  MOVLW  04
16C2:  MOVWF  x15
16C4:  MOVLW  E1
16C6:  MOVWF  x14
16C8:  MOVFF  506,516
16CC:  CLRF   x17
16CE:  MOVLB  0
16D0:  RCALL  1276
16D2:  MOVLB  5
....................    if(sombreado==0) 
16D4:  MOVF   x05,F
16D6:  BNZ   1722
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
16D8:  MOVF   x06,W
16DA:  MULLW  08
16DC:  MOVF   FF3,W
16DE:  ADDWF  x04,W
16E0:  MOVWF  x07
16E2:  CLRF   x13
16E4:  MOVFF  504,514
16E8:  MOVLW  7F
16EA:  MOVWF  x15
16EC:  MOVFF  507,516
16F0:  MOVLW  01
16F2:  MOVWF  x17
16F4:  CLRF   x18
16F6:  MOVLB  0
16F8:  RCALL  156C
16FA:  MOVLW  01
16FC:  MOVLB  5
16FE:  ADDWF  x03,W
1700:  MOVWF  x07
1702:  MOVLW  01
1704:  ADDWF  x04,W
1706:  MOVWF  x08
1708:  MOVFF  507,512
170C:  MOVWF  x13
170E:  MOVLW  04
1710:  MOVWF  x15
1712:  MOVLW  E1
1714:  MOVWF  x14
1716:  MOVFF  506,516
171A:  MOVLW  01
171C:  MOVWF  x17
171E:  MOVLB  0
1720:  RCALL  1276
....................    glcd_update(); 
1722:  MOVLB  0
1724:  RCALL  105A
.................... } 
1726:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
2422:  MOVLB  5
2424:  MOVF   x05,W
2426:  SUBLW  02
2428:  BNZ   249E
....................    { 
....................       sprintf(voltage, "%03u", digito); 
242A:  MOVLW  05
242C:  MOVWF  x00
242E:  MOVLW  07
2430:  MOVLB  4
2432:  MOVWF  xFF
2434:  MOVFF  502,510
2438:  MOVLW  03
243A:  MOVLB  5
243C:  MOVWF  x11
243E:  MOVLB  0
2440:  RCALL  239C
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2442:  MOVLB  5
2444:  MOVF   x06,W
2446:  MULLW  12
2448:  MOVF   FF3,W
244A:  ADDWF  x03,W
244C:  MOVWF  x10
244E:  MOVF   x06,W
2450:  MULLW  08
2452:  MOVF   FF3,W
2454:  ADDWF  x04,W
2456:  MOVWF  x11
2458:  MOVFF  503,513
245C:  MOVFF  504,514
2460:  MOVFF  510,515
2464:  MOVWF  x16
2466:  MOVLW  01
2468:  MOVWF  x17
246A:  MOVWF  x18
246C:  MOVLB  0
246E:  CALL   156C
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2472:  MOVLW  01
2474:  MOVLB  5
2476:  ADDWF  x03,W
2478:  MOVWF  x10
247A:  MOVLW  01
247C:  ADDWF  x04,W
247E:  MOVWF  x11
2480:  MOVFF  510,512
2484:  MOVWF  x13
2486:  MOVLW  05
2488:  MOVWF  x15
248A:  MOVLW  07
248C:  MOVWF  x14
248E:  MOVFF  506,516
2492:  CLRF   x17
2494:  MOVLB  0
2496:  CALL   1276
....................    } 
....................    else 
249A:  BRA    2570
249C:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
249E:  MOVLW  05
24A0:  MOVWF  x00
24A2:  MOVLW  07
24A4:  MOVLB  4
24A6:  MOVWF  xFF
24A8:  MOVFF  502,510
24AC:  MOVLW  1B
24AE:  MOVLB  5
24B0:  MOVWF  x11
24B2:  MOVLB  0
24B4:  RCALL  239C
....................     
....................       if(sombreado==1) 
24B6:  MOVLB  5
24B8:  DECFSZ x05,W
24BA:  BRA    2514
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24BC:  MOVF   x06,W
24BE:  MULLW  05
24C0:  MOVF   FF3,W
24C2:  ADDWF  x03,W
24C4:  MOVWF  x10
24C6:  MOVF   x06,W
24C8:  MULLW  08
24CA:  MOVF   FF3,W
24CC:  ADDWF  x04,W
24CE:  MOVWF  x11
24D0:  MOVFF  503,513
24D4:  MOVFF  504,514
24D8:  MOVFF  510,515
24DC:  MOVWF  x16
24DE:  MOVLW  01
24E0:  MOVWF  x17
24E2:  MOVWF  x18
24E4:  MOVLB  0
24E6:  CALL   156C
24EA:  MOVLW  01
24EC:  MOVLB  5
24EE:  ADDWF  x03,W
24F0:  MOVWF  x10
24F2:  MOVLW  01
24F4:  ADDWF  x04,W
24F6:  MOVWF  x11
24F8:  MOVFF  510,512
24FC:  MOVWF  x13
24FE:  MOVLW  05
2500:  MOVWF  x15
2502:  MOVLW  07
2504:  MOVWF  x14
2506:  MOVFF  506,516
250A:  CLRF   x17
250C:  MOVLB  0
250E:  CALL   1276
2512:  MOVLB  5
....................       if(sombreado==0) 
2514:  MOVF   x05,F
2516:  BNZ   2572
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2518:  MOVF   x06,W
251A:  MULLW  05
251C:  MOVF   FF3,W
251E:  ADDWF  x03,W
2520:  MOVWF  x10
2522:  MOVF   x06,W
2524:  MULLW  08
2526:  MOVF   FF3,W
2528:  ADDWF  x04,W
252A:  MOVWF  x11
252C:  MOVFF  503,513
2530:  MOVFF  504,514
2534:  MOVFF  510,515
2538:  MOVWF  x16
253A:  MOVLW  01
253C:  MOVWF  x17
253E:  CLRF   x18
2540:  MOVLB  0
2542:  CALL   156C
2546:  MOVLW  01
2548:  MOVLB  5
254A:  ADDWF  x03,W
254C:  MOVWF  x10
254E:  MOVLW  01
2550:  ADDWF  x04,W
2552:  MOVWF  x11
2554:  MOVFF  510,512
2558:  MOVWF  x13
255A:  MOVLW  05
255C:  MOVWF  x15
255E:  MOVLW  07
2560:  MOVWF  x14
2562:  MOVFF  506,516
2566:  MOVLW  01
2568:  MOVWF  x17
256A:  MOVLB  0
256C:  CALL   1276
2570:  MOVLB  5
....................    } 
....................    glcd_update(); 
2572:  MOVLB  0
2574:  CALL   105A
.................... } 
2578:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2076:  MOVLB  5
2078:  MOVF   x01,W
207A:  SUBLW  05
207C:  BNZ   2120
....................    for( i = 0 ; i < 64 ; i ++ ) 
207E:  CLRF   x02
2080:  MOVF   x02,W
2082:  SUBLW  3F
2084:  BNC   2120
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2086:  CLRF   x03
2088:  MOVF   x03,W
208A:  SUBLW  0F
208C:  BNC   211C
....................       {     
....................          for(k=7;k>-1;k--) 
208E:  MOVLW  07
2090:  MOVWF  x04
2092:  MOVF   x04,W
2094:  XORLW  80
2096:  SUBLW  7F
2098:  BC    2118
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
209A:  CLRF   x06
209C:  MOVFF  502,505
20A0:  CLRF   x08
20A2:  MOVLW  10
20A4:  MOVWF  x07
20A6:  MOVLB  0
20A8:  BRA    2052
20AA:  MOVFF  02,506
20AE:  MOVFF  01,505
20B2:  MOVLB  5
20B4:  MOVF   x03,W
20B6:  ADDWF  01,W
20B8:  MOVWF  01
20BA:  MOVLW  00
20BC:  ADDWFC 02,W
20BE:  MOVWF  03
20C0:  MOVF   01,W
20C2:  MOVFF  FF2,505
20C6:  BCF    FF2.7
20C8:  MOVFF  03,FF7
20CC:  MOVLB  0
20CE:  CALL   02A6
20D2:  MOVLB  5
20D4:  BTFSC  x05.7
20D6:  BSF    FF2.7
20D8:  MOVWF  x05
20DA:  MOVLW  07
20DC:  BSF    FD8.0
20DE:  SUBFWB x04,W
20E0:  MOVWF  x06
20E2:  MOVFF  505,00
20E6:  MOVF   x06,W
20E8:  MOVWF  01
20EA:  BZ    20F4
20EC:  BCF    FD8.0
20EE:  RRCF   00,F
20F0:  DECFSZ 01,F
20F2:  BRA    20EC
20F4:  BTFSS  00.0
20F6:  BRA    2114
....................                glcd_pixel( j*8+k,i, ON ); 
20F8:  MOVF   x03,W
20FA:  MULLW  08
20FC:  MOVF   FF3,W
20FE:  ADDWF  x04,W
2100:  MOVWF  x05
2102:  MOVWF  x2E
2104:  MOVFF  502,52F
2108:  MOVLW  01
210A:  MOVWF  x30
210C:  MOVLB  0
210E:  CALL   11BA
2112:  MOVLB  5
....................          }   
2114:  DECF   x04,F
2116:  BRA    2092
....................       } 
2118:  INCF   x03,F
211A:  BRA    2088
....................    } 
211C:  INCF   x02,F
211E:  BRA    2080
....................    } 
....................     
.................... } 
2120:  MOVLB  0
2122:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0EC8:  MOVLW  15
0ECA:  MOVWF  FCF
0ECC:  MOVLW  A0
0ECE:  MOVWF  FCE
....................    tiempos++; 
0ED0:  MOVLB  4
0ED2:  INCF   xAC,F
0ED4:  BTFSC  FD8.2
0ED6:  INCF   xAD,F
....................    tiempos3++; 
0ED8:  INCF   xAE,F
0EDA:  BTFSC  FD8.2
0EDC:  INCF   xAF,F
....................    tiempoctrl++; 
0EDE:  INCF   xB0,F
0EE0:  BTFSC  FD8.2
0EE2:  INCF   xB1,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0EE4:  MOVF   xAF,F
0EE6:  BNZ   0EEE
0EE8:  MOVF   xAE,W
0EEA:  SUBLW  27
0EEC:  BC    0F00
0EEE:  MOVF   xAA,W
0EF0:  SUBLW  02
0EF2:  BNZ   0F00
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0EF4:  CLRF   xAF
0EF6:  CLRF   xAE
0EF8:  BSF    x95.7
0EFA:  INCF   xB6,F
0EFC:  BTFSC  FD8.2
0EFE:  INCF   xB7,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0F00:  MOVF   xAC,W
0F02:  SUBLW  C8
0F04:  BNZ   0F8E
0F06:  MOVF   xAD,F
0F08:  BNZ   0F8E
....................    {tiempos=0;Lectura=1;tinicio++; 
0F0A:  CLRF   xAD
0F0C:  CLRF   xAC
0F0E:  BSF    x95.6
0F10:  INCF   xB8,F
0F12:  BTFSC  FD8.2
0F14:  INCF   xB9,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0F16:  DECFSZ xA8,W
0F18:  BRA    0F52
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0F1A:  INCF   xBE,F
....................       if(Testerilizacion[0]>9) 
0F1C:  BTFSC  xBE.7
0F1E:  BRA    0F2A
0F20:  MOVF   xBE,W
0F22:  SUBLW  09
0F24:  BC    0F2A
....................          {Testerilizacion[0]=0; 
0F26:  CLRF   xBE
....................           Testerilizacion[1]++;} 
0F28:  INCF   xBF,F
....................        if(Testerilizacion[1]>5) 
0F2A:  BTFSC  xBF.7
0F2C:  BRA    0F38
0F2E:  MOVF   xBF,W
0F30:  SUBLW  05
0F32:  BC    0F38
....................          {Testerilizacion[1]=0; 
0F34:  CLRF   xBF
....................           Testerilizacion[2]++;} 
0F36:  INCF   xC0,F
....................          if(Testerilizacion[2]>9) 
0F38:  BTFSC  xC0.7
0F3A:  BRA    0F46
0F3C:  MOVF   xC0,W
0F3E:  SUBLW  09
0F40:  BC    0F46
....................             {Testerilizacion[2]=0; 
0F42:  CLRF   xC0
....................              Testerilizacion[3]++;} 
0F44:  INCF   xC1,F
....................             if(Testerilizacion[3]>5) 
0F46:  BTFSC  xC1.7
0F48:  BRA    0F52
0F4A:  MOVF   xC1,W
0F4C:  SUBLW  05
0F4E:  BC    0F52
....................                {Testerilizacion[3]=0;} 
0F50:  CLRF   xC1
....................       }        
....................        
....................     if(tiempo_secado==1) 
0F52:  DECFSZ xA9,W
0F54:  BRA    0F8E
....................       { 
....................                       
....................       Tsecado[0]++; 
0F56:  INCF   xC6,F
....................       if(Tsecado[0]>9) 
0F58:  BTFSC  xC6.7
0F5A:  BRA    0F66
0F5C:  MOVF   xC6,W
0F5E:  SUBLW  09
0F60:  BC    0F66
....................          {Tsecado[0]=0; 
0F62:  CLRF   xC6
....................           Tsecado[1]++;} 
0F64:  INCF   xC7,F
....................        if(Tsecado[1]>5) 
0F66:  BTFSC  xC7.7
0F68:  BRA    0F74
0F6A:  MOVF   xC7,W
0F6C:  SUBLW  05
0F6E:  BC    0F74
....................          {Tsecado[1]=0; 
0F70:  CLRF   xC7
....................           Tsecado[2]++;} 
0F72:  INCF   xC8,F
....................          if(Tsecado[2]>9) 
0F74:  BTFSC  xC8.7
0F76:  BRA    0F82
0F78:  MOVF   xC8,W
0F7A:  SUBLW  09
0F7C:  BC    0F82
....................             {Tsecado[2]=0; 
0F7E:  CLRF   xC8
....................              Tsecado[3]++;} 
0F80:  INCF   xC9,F
....................             if(Tsecado[3]>5) 
0F82:  BTFSC  xC9.7
0F84:  BRA    0F8E
0F86:  MOVF   xC9,W
0F88:  SUBLW  05
0F8A:  BC    0F8E
....................                {Tsecado[3]=0;} 
0F8C:  CLRF   xC9
....................       }   
....................    } 
....................    } 
....................     
0F8E:  BCF    F9E.0
0F90:  MOVLB  0
0F92:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
26BA:  MOVLW  07
26BC:  MOVLB  5
26BE:  ADDWF  x03,W
26C0:  MOVWF  x04
26C2:  MOVFF  501,513
26C6:  MOVFF  503,514
26CA:  MOVFF  502,515
26CE:  MOVWF  x16
26D0:  MOVLW  01
26D2:  MOVWF  x17
26D4:  CLRF   x18
26D6:  MOVLB  0
26D8:  CALL   156C
.................... } 
26DC:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%3.1f",adc); // Converts adc to text 
*
2A4E:  MOVLW  05
2A50:  MOVLB  5
2A52:  MOVWF  x00
2A54:  MOVLW  08
2A56:  MOVLB  4
2A58:  MOVWF  xFF
2A5A:  MOVLW  02
2A5C:  MOVWF  FE9
2A5E:  MOVFF  504,514
2A62:  MOVFF  503,513
2A66:  MOVFF  502,512
2A6A:  MOVFF  501,511
2A6E:  MOVLW  01
2A70:  MOVLB  5
2A72:  MOVWF  x15
2A74:  MOVLB  0
2A76:  BRA    289A
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2A78:  MOVLB  5
2A7A:  MOVF   x07,W
2A7C:  MULLW  1B
2A7E:  MOVF   FF3,W
2A80:  ADDWF  x05,W
2A82:  MOVWF  x11
2A84:  MOVF   x07,W
2A86:  MULLW  08
2A88:  MOVF   FF3,W
2A8A:  ADDWF  x06,W
2A8C:  MOVWF  x12
2A8E:  MOVFF  505,513
2A92:  MOVFF  506,514
2A96:  MOVFF  511,515
2A9A:  MOVWF  x16
2A9C:  MOVLW  01
2A9E:  MOVWF  x17
2AA0:  CLRF   x18
2AA2:  MOVLB  0
2AA4:  CALL   156C
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2AA8:  MOVFF  505,512
2AAC:  MOVFF  506,513
2AB0:  MOVLW  05
2AB2:  MOVLB  5
2AB4:  MOVWF  x15
2AB6:  MOVLW  08
2AB8:  MOVWF  x14
2ABA:  MOVFF  507,516
2ABE:  MOVLW  01
2AC0:  MOVWF  x17
2AC2:  MOVLB  0
2AC4:  CALL   1276
.................... } 
2AC8:  GOTO   64C4 (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
257A:  MOVFF  4C5,502
257E:  MOVLW  24
2580:  MOVLB  5
2582:  MOVWF  x03
2584:  CLRF   x04
2586:  CLRF   x05
2588:  MOVLW  01
258A:  MOVWF  x06
258C:  MOVLB  0
258E:  RCALL  2422
2590:  MOVFF  4C4,502
2594:  MOVLW  2A
2596:  MOVLB  5
2598:  MOVWF  x03
259A:  CLRF   x04
259C:  CLRF   x05
259E:  MOVLW  01
25A0:  MOVWF  x06
25A2:  MOVLB  0
25A4:  RCALL  2422
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
25A6:  MOVLW  04
25A8:  MOVWF  FEA
25AA:  MOVLW  E1
25AC:  MOVWF  FE9
25AE:  MOVFF  FF2,501
25B2:  BCF    FF2.7
25B4:  MOVLW  00
25B6:  CALL   06BE
25BA:  TBLRD*-
25BC:  TBLRD*+
25BE:  MOVF   FF5,W
25C0:  MOVWF  FEE
25C2:  IORLW  00
25C4:  BNZ   25BC
25C6:  MOVLB  5
25C8:  BTFSC  x01.7
25CA:  BSF    FF2.7
25CC:  MOVLW  04
25CE:  MOVWF  x02
25D0:  MOVLW  E1
25D2:  MOVWF  x01
25D4:  MOVLW  31
25D6:  MOVWF  x03
25D8:  CLRF   x04
25DA:  MOVLW  02
25DC:  MOVWF  x05
25DE:  MOVLW  01
25E0:  MOVWF  x06
25E2:  MOVLB  0
25E4:  CALL   162E
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
25E8:  MOVFF  4C3,502
25EC:  MOVLW  36
25EE:  MOVLB  5
25F0:  MOVWF  x03
25F2:  CLRF   x04
25F4:  CLRF   x05
25F6:  MOVLW  01
25F8:  MOVWF  x06
25FA:  MOVLB  0
25FC:  RCALL  2422
25FE:  MOVFF  4C2,502
2602:  MOVLW  3C
2604:  MOVLB  5
2606:  MOVWF  x03
2608:  CLRF   x04
260A:  CLRF   x05
260C:  MOVLW  01
260E:  MOVWF  x06
2610:  MOVLB  0
2612:  RCALL  2422
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
2614:  MOVFF  4CD,502
2618:  MOVLW  24
261A:  MOVLB  5
261C:  MOVWF  x03
261E:  MOVLW  08
2620:  MOVWF  x04
2622:  CLRF   x05
2624:  MOVLW  01
2626:  MOVWF  x06
2628:  MOVLB  0
262A:  RCALL  2422
262C:  MOVFF  4CC,502
2630:  MOVLW  2A
2632:  MOVLB  5
2634:  MOVWF  x03
2636:  MOVLW  08
2638:  MOVWF  x04
263A:  CLRF   x05
263C:  MOVLW  01
263E:  MOVWF  x06
2640:  MOVLB  0
2642:  RCALL  2422
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
2644:  MOVLW  04
2646:  MOVWF  FEA
2648:  MOVLW  E1
264A:  MOVWF  FE9
264C:  MOVFF  FF2,501
2650:  BCF    FF2.7
2652:  MOVLW  00
2654:  CALL   06BE
2658:  TBLRD*-
265A:  TBLRD*+
265C:  MOVF   FF5,W
265E:  MOVWF  FEE
2660:  IORLW  00
2662:  BNZ   265A
2664:  MOVLB  5
2666:  BTFSC  x01.7
2668:  BSF    FF2.7
266A:  MOVLW  04
266C:  MOVWF  x02
266E:  MOVLW  E1
2670:  MOVWF  x01
2672:  MOVLW  31
2674:  MOVWF  x03
2676:  MOVLW  08
2678:  MOVWF  x04
267A:  MOVLW  02
267C:  MOVWF  x05
267E:  MOVLW  01
2680:  MOVWF  x06
2682:  MOVLB  0
2684:  CALL   162E
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
2688:  MOVFF  4CB,502
268C:  MOVLW  36
268E:  MOVLB  5
2690:  MOVWF  x03
2692:  MOVLW  08
2694:  MOVWF  x04
2696:  CLRF   x05
2698:  MOVLW  01
269A:  MOVWF  x06
269C:  MOVLB  0
269E:  RCALL  2422
26A0:  MOVFF  4CA,502
26A4:  MOVLW  3C
26A6:  MOVLB  5
26A8:  MOVWF  x03
26AA:  MOVLW  08
26AC:  MOVWF  x04
26AE:  CLRF   x05
26B0:  MOVLW  01
26B2:  MOVWF  x06
26B4:  MOVLB  0
26B6:  RCALL  2422
.................... } 
26B8:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
185C:  MOVLW  05
185E:  MOVLB  5
1860:  MOVWF  x00
1862:  MOVLW  07
1864:  MOVLB  4
1866:  MOVWF  xFF
1868:  MOVFF  503,510
186C:  MOVLW  1F
186E:  MOVLB  5
1870:  MOVWF  x11
1872:  MOVLB  0
1874:  BRA    177C
....................     
....................    if(sombreado==1) 
1876:  MOVLB  5
1878:  DECFSZ x06,W
187A:  BRA    18CA
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
187C:  MOVLW  12
187E:  ADDWF  x04,W
1880:  MOVWF  x10
1882:  MOVLW  18
1884:  ADDWF  x05,W
1886:  MOVWF  x11
1888:  MOVFF  504,513
188C:  MOVFF  505,514
1890:  MOVFF  510,515
1894:  MOVWF  x16
1896:  MOVLW  01
1898:  MOVWF  x17
189A:  MOVWF  x18
189C:  MOVLB  0
189E:  RCALL  156C
18A0:  MOVLW  02
18A2:  MOVLB  5
18A4:  ADDWF  x04,W
18A6:  MOVWF  x10
18A8:  MOVLW  01
18AA:  ADDWF  x05,W
18AC:  MOVWF  x11
18AE:  MOVFF  510,512
18B2:  MOVWF  x13
18B4:  MOVLW  05
18B6:  MOVWF  x15
18B8:  MOVLW  07
18BA:  MOVWF  x14
18BC:  MOVLW  02
18BE:  MOVWF  x16
18C0:  CLRF   x17
18C2:  MOVLB  0
18C4:  RCALL  1276
....................    else    
18C6:  BRA    1914
18C8:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
18CA:  MOVLW  12
18CC:  ADDWF  x04,W
18CE:  MOVWF  x10
18D0:  MOVLW  18
18D2:  ADDWF  x05,W
18D4:  MOVWF  x11
18D6:  MOVFF  504,513
18DA:  MOVFF  505,514
18DE:  MOVFF  510,515
18E2:  MOVWF  x16
18E4:  CLRF   x17
18E6:  CLRF   x18
18E8:  MOVLB  0
18EA:  RCALL  156C
18EC:  MOVLW  02
18EE:  MOVLB  5
18F0:  ADDWF  x04,W
18F2:  MOVWF  x10
18F4:  MOVLW  01
18F6:  ADDWF  x05,W
18F8:  MOVWF  x11
18FA:  MOVFF  510,512
18FE:  MOVWF  x13
1900:  MOVLW  05
1902:  MOVWF  x15
1904:  MOVLW  07
1906:  MOVWF  x14
1908:  MOVLW  02
190A:  MOVWF  x16
190C:  MOVLW  01
190E:  MOVWF  x17
1910:  MOVLB  0
1912:  RCALL  1276
....................  
.................... } 
1914:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
1FBC:  BSF    F93.0
1FBE:  MOVLW  11
1FC0:  MOVWF  00
1FC2:  DECFSZ 00,F
1FC4:  BRA    1FC2
1FC6:  BSF    F93.1
1FC8:  MOVLW  11
1FCA:  MOVWF  00
1FCC:  DECFSZ 00,F
1FCE:  BRA    1FCC
1FD0:  BCF    F8A.0
1FD2:  BCF    F93.0
1FD4:  MOVLW  11
1FD6:  MOVWF  00
1FD8:  DECFSZ 00,F
1FDA:  BRA    1FD8
1FDC:  BCF    F8A.1
1FDE:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FE0:  MOVFF  502,505
1FE4:  RCALL  1916
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
1FE6:  MOVFF  503,505
1FEA:  RCALL  1916
....................    i2c_write(dato);        // Dato a transmitir 
1FEC:  MOVFF  504,505
1FF0:  RCALL  1916
....................    i2c_stop();             // Fin comunicación 
1FF2:  BCF    F93.0
1FF4:  NOP   
1FF6:  BSF    F93.1
1FF8:  BTFSS  F81.1
1FFA:  BRA    1FF8
1FFC:  MOVLW  11
1FFE:  MOVWF  00
2000:  DECFSZ 00,F
2002:  BRA    2000
2004:  BRA    2006
2006:  NOP   
2008:  BSF    F93.0
200A:  MOVLW  11
200C:  MOVWF  00
200E:  DECFSZ 00,F
2010:  BRA    200E
....................  } 
2012:  GOTO   2048 (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1ED6:  BSF    F93.0
1ED8:  MOVLW  11
1EDA:  MOVWF  00
1EDC:  DECFSZ 00,F
1EDE:  BRA    1EDC
1EE0:  BSF    F93.1
1EE2:  MOVLW  11
1EE4:  MOVWF  00
1EE6:  DECFSZ 00,F
1EE8:  BRA    1EE6
1EEA:  BCF    F8A.0
1EEC:  BCF    F93.0
1EEE:  MOVLW  11
1EF0:  MOVWF  00
1EF2:  DECFSZ 00,F
1EF4:  BRA    1EF2
1EF6:  BCF    F8A.1
1EF8:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1EFA:  MOVFF  501,505
1EFE:  MOVLB  0
1F00:  RCALL  1916
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1F02:  MOVFF  502,505
1F06:  RCALL  1916
....................    i2c_start();            // Reinicio 
1F08:  BSF    F93.0
1F0A:  MOVLW  11
1F0C:  MOVWF  00
1F0E:  DECFSZ 00,F
1F10:  BRA    1F0E
1F12:  BSF    F93.1
1F14:  MOVLW  11
1F16:  MOVWF  00
1F18:  DECFSZ 00,F
1F1A:  BRA    1F18
1F1C:  BTFSS  F81.1
1F1E:  BRA    1F1C
1F20:  BCF    F8A.0
1F22:  BCF    F93.0
1F24:  MOVLW  11
1F26:  MOVWF  00
1F28:  DECFSZ 00,F
1F2A:  BRA    1F28
1F2C:  BCF    F8A.1
1F2E:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1F30:  MOVLW  01
1F32:  MOVLB  5
1F34:  ADDWF  x01,W
1F36:  MOVWF  x03
1F38:  MOVWF  x05
1F3A:  MOVLB  0
1F3C:  RCALL  1916
....................    dato=i2c_read(0);       // Lectura del dato 
1F3E:  CLRF   00
1F40:  BRA    198C
1F42:  MOVFF  01,486
....................    i2c_stop();             // Fin comunicación 
1F46:  BCF    F93.0
1F48:  NOP   
1F4A:  BSF    F93.1
1F4C:  BTFSS  F81.1
1F4E:  BRA    1F4C
1F50:  MOVLW  11
1F52:  MOVWF  00
1F54:  DECFSZ 00,F
1F56:  BRA    1F54
1F58:  BRA    1F5A
1F5A:  NOP   
1F5C:  BSF    F93.0
1F5E:  MOVLW  11
1F60:  MOVWF  00
1F62:  DECFSZ 00,F
1F64:  BRA    1F62
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
1F84:  MOVFF  498,456
....................    SlaveA0Tx[1]=EVDesfogue; 
1F88:  MOVFF  499,457
....................    SlaveA0Tx[2]=EVAgua; 
1F8C:  MOVFF  49A,458
....................    SlaveA0Tx[3]=EVTrampa; 
1F90:  MOVFF  49B,459
....................    SlaveA0Tx[4]=MotorPuerta; 
1F94:  MOVFF  49C,45A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
1F98:  MOVFF  49D,45B
....................    SlaveA0Tx[6]=BombaVacio; 
1F9C:  MOVFF  49E,45C
....................    SlaveA0Tx[7]=BombaAgua; 
1FA0:  MOVFF  49F,45D
....................    SlaveA0Tx[8]=Control; 
1FA4:  MOVFF  4A0,45E
....................    SlaveA0Tx[9]=Setpoint; 
1FA8:  MOVFF  4A5,45F
....................    SlaveA0Tx[10]=20; 
1FAC:  MOVLW  14
1FAE:  MOVLB  4
1FB0:  MOVWF  x60
....................    SlaveA0Tx[12]=Nivel; 
1FB2:  MOVFF  4B4,462
.................... } 
1FB6:  MOVLB  0
1FB8:  GOTO   2018 (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1E06:  MOVFF  416,48D
....................    Parada=txbuf[1]; 
1E0A:  MOVFF  417,48E
....................    NivelReservorio=txbuf[2]; 
1E0E:  MOVFF  418,48F
....................    NivelTanque=txbuf[3]; 
1E12:  MOVFF  419,490
....................    Presostato=txbuf[4]; 
1E16:  MOVFF  41A,491
....................    ADC_Pt100=(float)txbuf[5]; 
1E1A:  MOVLB  5
1E1C:  CLRF   x02
1E1E:  MOVFF  41B,501
1E22:  MOVLB  0
1E24:  RCALL  19F8
1E26:  MOVFF  03,4BD
1E2A:  MOVFF  02,4BC
1E2E:  MOVFF  01,4BB
1E32:  MOVFF  00,4BA
....................    Alarma=txbuf[6]; 
1E36:  MOVFF  41C,492
....................    AlarmaAgua=txbuf[7]; 
1E3A:  MOVFF  41D,493
....................    Chksum=txbuf[8]; 
1E3E:  MOVFF  41E,4AB
....................    Decimal=txbuf[9]; 
1E42:  MOVFF  41F,4A1
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1E46:  MOVLB  5
1E48:  CLRF   x02
1E4A:  MOVFF  4A1,501
1E4E:  MOVLB  0
1E50:  RCALL  19F8
1E52:  MOVFF  00,501
1E56:  MOVFF  01,502
1E5A:  MOVFF  02,503
1E5E:  MOVFF  03,504
1E62:  MOVFF  03,508
1E66:  MOVFF  02,507
1E6A:  MOVFF  01,506
1E6E:  MOVFF  00,505
1E72:  MOVLB  5
1E74:  CLRF   x0C
1E76:  CLRF   x0B
1E78:  MOVLW  20
1E7A:  MOVWF  x0A
1E7C:  MOVLW  82
1E7E:  MOVWF  x09
1E80:  MOVLB  0
1E82:  BRA    1A2E
1E84:  BCF    FD8.1
1E86:  MOVFF  4BD,508
1E8A:  MOVFF  4BC,507
1E8E:  MOVFF  4BB,506
1E92:  MOVFF  4BA,505
1E96:  MOVFF  03,50C
1E9A:  MOVFF  02,50B
1E9E:  MOVFF  01,50A
1EA2:  MOVFF  00,509
1EA6:  RCALL  1B8E
1EA8:  MOVFF  03,4BD
1EAC:  MOVFF  02,4BC
1EB0:  MOVFF  01,4BB
1EB4:  MOVFF  00,4BA
.................... } 
1EB8:  GOTO   1F82 (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
2016:  BRA    1F84
....................    for(i=0;i<13;i++) 
2018:  MOVLB  4
201A:  CLRF   xA4
201C:  MOVF   xA4,W
201E:  SUBLW  0C
2020:  BNC   204E
....................    { 
....................       direccion=0xA0; 
2022:  MOVLW  A0
2024:  MOVWF  x87
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
2026:  CLRF   03
2028:  MOVF   xA4,W
202A:  ADDLW  56
202C:  MOVWF  FE9
202E:  MOVLW  04
2030:  ADDWFC 03,W
2032:  MOVWF  FEA
2034:  MOVFF  FEF,501
2038:  MOVFF  487,502
203C:  MOVFF  4A4,503
2040:  MOVFF  501,504
2044:  MOVLB  0
2046:  BRA    1FBC
....................    }  
2048:  MOVLB  4
204A:  INCF   xA4,F
204C:  BRA    201C
.................... } 
204E:  MOVLB  0
2050:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
1EBC:  MOVLB  4
1EBE:  CLRF   xA4
1EC0:  MOVF   xA4,W
1EC2:  SUBLW  09
1EC4:  BNC   1F7E
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1EC6:  MOVLW  A0
1EC8:  MOVWF  x87
....................       posicion=i;                         //Posición de memoria a leer 
1ECA:  MOVFF  4A4,488
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1ECE:  MOVFF  487,501
1ED2:  MOVFF  488,502
....................       txbuf[i]=(int8)dato; 
*
1F66:  CLRF   03
1F68:  MOVLB  4
1F6A:  MOVF   xA4,W
1F6C:  ADDLW  16
1F6E:  MOVWF  FE9
1F70:  MOVLW  04
1F72:  ADDWFC 03,W
1F74:  MOVWF  FEA
1F76:  MOVFF  486,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
1F7A:  INCF   xA4,F
1F7C:  BRA    1EC0
....................    Lee_Vector(); 
1F7E:  MOVLB  0
1F80:  BRA    1E06
.................... } 
1F82:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2B86:  CLRF   FF8
2B88:  BCF    FD0.7
2B8A:  BSF    07.7
2B8C:  CLRF   FEA
2B8E:  CLRF   FE9
2B90:  MOVLB  4
2B92:  CLRF   x86
2B94:  CLRF   x87
2B96:  CLRF   x88
2B98:  CLRF   x8D
2B9A:  MOVLW  01
2B9C:  MOVWF  x8E
2B9E:  CLRF   x8F
2BA0:  CLRF   x90
2BA2:  CLRF   x91
2BA4:  CLRF   x92
2BA6:  CLRF   x93
2BA8:  CLRF   x94
2BAA:  BCF    x95.0
2BAC:  BCF    x95.1
2BAE:  BCF    x95.2
2BB0:  BCF    x95.3
2BB2:  BSF    x95.4
2BB4:  BCF    x95.5
2BB6:  BCF    x95.6
2BB8:  BCF    x95.7
2BBA:  BCF    x96.0
2BBC:  BCF    x96.1
2BBE:  BCF    x96.2
2BC0:  BCF    x96.3
2BC2:  BCF    x96.4
2BC4:  BCF    x96.5
2BC6:  BCF    x96.6
2BC8:  BCF    x96.7
2BCA:  BCF    x97.0
2BCC:  BCF    x97.1
2BCE:  BCF    x97.2
2BD0:  BCF    x97.3
2BD2:  BCF    x97.4
2BD4:  CLRF   x98
2BD6:  CLRF   x99
2BD8:  CLRF   x9A
2BDA:  CLRF   x9B
2BDC:  CLRF   x9C
2BDE:  CLRF   x9D
2BE0:  CLRF   x9E
2BE2:  CLRF   x9F
2BE4:  CLRF   xA0
2BE6:  CLRF   xA1
2BE8:  CLRF   xA2
2BEA:  MOVWF  xA3
2BEC:  CLRF   xA4
2BEE:  CLRF   xA5
2BF0:  CLRF   xA6
2BF2:  MOVWF  xA7
2BF4:  CLRF   xA8
2BF6:  CLRF   xA9
2BF8:  CLRF   xAA
2BFA:  CLRF   xAB
2BFC:  CLRF   xAD
2BFE:  CLRF   xAC
2C00:  CLRF   xAF
2C02:  CLRF   xAE
2C04:  CLRF   xB1
2C06:  CLRF   xB0
2C08:  CLRF   xB3
2C0A:  MOVLW  0F
2C0C:  MOVWF  xB2
2C0E:  CLRF   xB5
2C10:  CLRF   xB4
2C12:  CLRF   xB7
2C14:  CLRF   xB6
2C16:  CLRF   xB9
2C18:  CLRF   xB8
2C1A:  CLRF   xBD
2C1C:  CLRF   xBC
2C1E:  CLRF   xBB
2C20:  CLRF   xBA
2C22:  MOVF   FC1,W
2C24:  ANDLW  C0
2C26:  IORLW  0F
2C28:  MOVWF  FC1
2C2A:  MOVLW  07
2C2C:  MOVWF  FB4
2C2E:  MOVLW  6B
2C30:  MOVWF  x89
2C32:  MOVLW  50
2C34:  MOVWF  x8A
2C36:  MOVLW  61
2C38:  MOVWF  x8B
2C3A:  CLRF   x8C
2C3C:  CLRF   xBE
2C3E:  CLRF   xBF
2C40:  CLRF   xC0
2C42:  CLRF   xC1
2C44:  CLRF   xC2
2C46:  CLRF   xC3
2C48:  CLRF   xC4
2C4A:  CLRF   xC5
2C4C:  CLRF   xC6
2C4E:  CLRF   xC7
2C50:  CLRF   xC8
2C52:  CLRF   xC9
2C54:  CLRF   xCA
2C56:  CLRF   xCB
2C58:  CLRF   xCC
2C5A:  CLRF   xCD
2C5C:  CLRF   xCE
2C5E:  CLRF   xCF
2C60:  CLRF   xD0
2C62:  CLRF   xD1
2C64:  CLRF   xD2
2C66:  CLRF   xD3
2C68:  CLRF   xD4
2C6A:  CLRF   xD5
2C6C:  CLRF   xFF
2C6E:  MOVLB  5
2C70:  CLRF   x00
....................    Display_on; 
2C72:  BSF    F8D.0
2C74:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2C76:  MOVLB  4
2C78:  CLRF   x88
2C7A:  MOVF   x88,W
2C7C:  SUBLW  0F
2C7E:  BNC   2CB4
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2C80:  CLRF   03
2C82:  MOVF   x88,W
2C84:  ADDLW  56
2C86:  MOVWF  FE9
2C88:  MOVLW  04
2C8A:  ADDWFC 03,W
2C8C:  MOVWF  FEA
2C8E:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2C90:  CLRF   03
2C92:  MOVF   x88,W
2C94:  ADDLW  66
2C96:  MOVWF  FE9
2C98:  MOVLW  04
2C9A:  ADDWFC 03,W
2C9C:  MOVWF  FEA
2C9E:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2CA0:  CLRF   03
2CA2:  MOVF   x88,W
2CA4:  ADDLW  76
2CA6:  MOVWF  FE9
2CA8:  MOVLW  04
2CAA:  ADDWFC 03,W
2CAC:  MOVWF  FEA
2CAE:  CLRF   FEF
....................    } 
2CB0:  INCF   x88,F
2CB2:  BRA    2C7A
....................    output_d(0); 
2CB4:  CLRF   F95
2CB6:  CLRF   F8C
....................    delay_ms(1000);    
2CB8:  MOVLW  04
2CBA:  MOVLB  5
2CBC:  MOVWF  x01
2CBE:  MOVLW  FA
2CC0:  MOVWF  x02
2CC2:  MOVLB  0
2CC4:  CALL   0F96
2CC8:  MOVLB  5
2CCA:  DECFSZ x01,F
2CCC:  BRA    2CBE
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2CCE:  MOVLW  85
2CD0:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2CD2:  BSF    F9D.0
....................    enable_interrupts(global); 
2CD4:  MOVLW  C0
2CD6:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2CD8:  MOVFF  FF2,501
2CDC:  BCF    FF2.7
2CDE:  CLRF   FA9
2CE0:  BCF    FA6.6
2CE2:  BCF    FA6.7
2CE4:  BSF    FA6.0
2CE6:  MOVF   FA8,W
2CE8:  BTFSC  x01.7
2CEA:  BSF    FF2.7
2CEC:  MOVLB  4
2CEE:  MOVWF  xC2
2CF0:  MOVFF  FF2,501
2CF4:  BCF    FF2.7
2CF6:  MOVLW  01
2CF8:  MOVWF  FA9
2CFA:  BCF    FA6.6
2CFC:  BCF    FA6.7
2CFE:  BSF    FA6.0
2D00:  MOVF   FA8,W
2D02:  MOVLB  5
2D04:  BTFSC  x01.7
2D06:  BSF    FF2.7
2D08:  MOVLB  4
2D0A:  MOVWF  xC3
2D0C:  MOVFF  FF2,501
2D10:  BCF    FF2.7
2D12:  MOVLW  02
2D14:  MOVWF  FA9
2D16:  BCF    FA6.6
2D18:  BCF    FA6.7
2D1A:  BSF    FA6.0
2D1C:  MOVF   FA8,W
2D1E:  MOVLB  5
2D20:  BTFSC  x01.7
2D22:  BSF    FF2.7
2D24:  MOVLB  4
2D26:  MOVWF  xC4
2D28:  MOVFF  FF2,501
2D2C:  BCF    FF2.7
2D2E:  MOVLW  03
2D30:  MOVWF  FA9
2D32:  BCF    FA6.6
2D34:  BCF    FA6.7
2D36:  BSF    FA6.0
2D38:  MOVF   FA8,W
2D3A:  MOVLB  5
2D3C:  BTFSC  x01.7
2D3E:  BSF    FF2.7
2D40:  MOVLB  4
2D42:  MOVWF  xC5
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2D44:  MOVFF  FF2,501
2D48:  BCF    FF2.7
2D4A:  MOVLW  04
2D4C:  MOVWF  FA9
2D4E:  BCF    FA6.6
2D50:  BCF    FA6.7
2D52:  BSF    FA6.0
2D54:  MOVF   FA8,W
2D56:  MOVLB  5
2D58:  BTFSC  x01.7
2D5A:  BSF    FF2.7
2D5C:  MOVLB  4
2D5E:  MOVWF  xCA
2D60:  MOVFF  FF2,501
2D64:  BCF    FF2.7
2D66:  MOVLW  05
2D68:  MOVWF  FA9
2D6A:  BCF    FA6.6
2D6C:  BCF    FA6.7
2D6E:  BSF    FA6.0
2D70:  MOVF   FA8,W
2D72:  MOVLB  5
2D74:  BTFSC  x01.7
2D76:  BSF    FF2.7
2D78:  MOVLB  4
2D7A:  MOVWF  xCB
2D7C:  MOVFF  FF2,501
2D80:  BCF    FF2.7
2D82:  MOVLW  06
2D84:  MOVWF  FA9
2D86:  BCF    FA6.6
2D88:  BCF    FA6.7
2D8A:  BSF    FA6.0
2D8C:  MOVF   FA8,W
2D8E:  MOVLB  5
2D90:  BTFSC  x01.7
2D92:  BSF    FF2.7
2D94:  MOVLB  4
2D96:  MOVWF  xCC
2D98:  MOVFF  FF2,501
2D9C:  BCF    FF2.7
2D9E:  MOVLW  07
2DA0:  MOVWF  FA9
2DA2:  BCF    FA6.6
2DA4:  BCF    FA6.7
2DA6:  BSF    FA6.0
2DA8:  MOVF   FA8,W
2DAA:  MOVLB  5
2DAC:  BTFSC  x01.7
2DAE:  BSF    FF2.7
2DB0:  MOVLB  4
2DB2:  MOVWF  xCD
2DB4:  MOVFF  FF2,501
2DB8:  BCF    FF2.7
2DBA:  MOVLW  08
2DBC:  MOVWF  FA9
2DBE:  BCF    FA6.6
2DC0:  BCF    FA6.7
2DC2:  BSF    FA6.0
2DC4:  MOVF   FA8,W
2DC6:  MOVLB  5
2DC8:  BTFSC  x01.7
2DCA:  BSF    FF2.7
2DCC:  MOVLB  4
2DCE:  MOVWF  xA5
....................    Nivel=read_eeprom(9); 
2DD0:  MOVFF  FF2,501
2DD4:  BCF    FF2.7
2DD6:  MOVLW  09
2DD8:  MOVWF  FA9
2DDA:  BCF    FA6.6
2DDC:  BCF    FA6.7
2DDE:  BSF    FA6.0
2DE0:  MOVF   FA8,W
2DE2:  MOVLB  5
2DE4:  BTFSC  x01.7
2DE6:  BSF    FF2.7
2DE8:  MOVLB  4
2DEA:  CLRF   xB5
2DEC:  MOVWF  xB4
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2DEE:  MOVFF  FF2,501
2DF2:  BCF    FF2.7
2DF4:  MOVLW  0A
2DF6:  MOVWF  FA9
2DF8:  BCF    FA6.6
2DFA:  BCF    FA6.7
2DFC:  BSF    FA6.0
2DFE:  MOVF   FA8,W
2E00:  MOVLB  5
2E02:  BTFSC  x01.7
2E04:  BSF    FF2.7
2E06:  MOVLB  4
2E08:  MOVWF  xD2
2E0A:  MOVFF  FF2,501
2E0E:  BCF    FF2.7
2E10:  MOVLW  0B
2E12:  MOVWF  FA9
2E14:  BCF    FA6.6
2E16:  BCF    FA6.7
2E18:  BSF    FA6.0
2E1A:  MOVF   FA8,W
2E1C:  MOVLB  5
2E1E:  BTFSC  x01.7
2E20:  BSF    FF2.7
2E22:  MOVLB  4
2E24:  MOVWF  xD3
2E26:  MOVFF  FF2,501
2E2A:  BCF    FF2.7
2E2C:  MOVLW  0C
2E2E:  MOVWF  FA9
2E30:  BCF    FA6.6
2E32:  BCF    FA6.7
2E34:  BSF    FA6.0
2E36:  MOVF   FA8,W
2E38:  MOVLB  5
2E3A:  BTFSC  x01.7
2E3C:  BSF    FF2.7
2E3E:  MOVLB  4
2E40:  MOVWF  xD4
2E42:  MOVFF  FF2,501
2E46:  BCF    FF2.7
2E48:  MOVLW  0D
2E4A:  MOVWF  FA9
2E4C:  BCF    FA6.6
2E4E:  BCF    FA6.7
2E50:  BSF    FA6.0
2E52:  MOVF   FA8,W
2E54:  MOVLB  5
2E56:  BTFSC  x01.7
2E58:  BSF    FF2.7
2E5A:  MOVLB  4
2E5C:  MOVWF  xD5
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2E5E:  MOVLW  01
2E60:  MOVLB  5
2E62:  MOVWF  x01
2E64:  MOVLB  0
2E66:  CALL   1112
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2E6A:  MOVLB  5
2E6C:  CLRF   x02
2E6E:  MOVLB  0
2E70:  CALL   1000
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2E74:  MOVLW  04
2E76:  MOVWF  FEA
2E78:  MOVLW  E1
2E7A:  MOVWF  FE9
2E7C:  MOVFF  FF2,501
2E80:  BCF    FF2.7
2E82:  MOVLW  00
2E84:  CALL   06DA
2E88:  TBLRD*-
2E8A:  TBLRD*+
2E8C:  MOVF   FF5,W
2E8E:  MOVWF  FEE
2E90:  IORLW  00
2E92:  BNZ   2E8A
2E94:  MOVLB  5
2E96:  BTFSC  x01.7
2E98:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2E9A:  MOVLW  04
2E9C:  MOVWF  x02
2E9E:  MOVLW  E1
2EA0:  MOVWF  x01
2EA2:  CLRF   x03
2EA4:  CLRF   x04
2EA6:  CLRF   x05
2EA8:  MOVLW  02
2EAA:  MOVWF  x06
2EAC:  MOVLB  0
2EAE:  CALL   162E
....................    strcpy(Menus.Letra,"Autoclave Vertical"); 
2EB2:  MOVLW  04
2EB4:  MOVWF  FEA
2EB6:  MOVLW  E1
2EB8:  MOVWF  FE9
2EBA:  MOVFF  FF2,501
2EBE:  BCF    FF2.7
2EC0:  MOVLW  00
2EC2:  CALL   0700
2EC6:  TBLRD*-
2EC8:  TBLRD*+
2ECA:  MOVF   FF5,W
2ECC:  MOVWF  FEE
2ECE:  IORLW  00
2ED0:  BNZ   2EC8
2ED2:  MOVLB  5
2ED4:  BTFSC  x01.7
2ED6:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
2ED8:  MOVLW  04
2EDA:  MOVWF  x02
2EDC:  MOVLW  E1
2EDE:  MOVWF  x01
2EE0:  CLRF   x03
2EE2:  MOVLW  14
2EE4:  MOVWF  x04
2EE6:  CLRF   x05
2EE8:  MOVLW  01
2EEA:  MOVWF  x06
2EEC:  MOVLB  0
2EEE:  CALL   162E
....................    strcpy(Menus.Letra," 85 Litros  "); 
2EF2:  MOVLW  04
2EF4:  MOVWF  FEA
2EF6:  MOVLW  E1
2EF8:  MOVWF  FE9
2EFA:  MOVFF  FF2,501
2EFE:  BCF    FF2.7
2F00:  MOVLW  00
2F02:  CALL   072E
2F06:  TBLRD*-
2F08:  TBLRD*+
2F0A:  MOVF   FF5,W
2F0C:  MOVWF  FEE
2F0E:  IORLW  00
2F10:  BNZ   2F08
2F12:  MOVLB  5
2F14:  BTFSC  x01.7
2F16:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
2F18:  MOVLW  04
2F1A:  MOVWF  x02
2F1C:  MOVLW  E1
2F1E:  MOVWF  x01
2F20:  CLRF   x03
2F22:  MOVLW  23
2F24:  MOVWF  x04
2F26:  CLRF   x05
2F28:  MOVLW  02
2F2A:  MOVWF  x06
2F2C:  MOVLB  0
2F2E:  CALL   162E
....................    delay_ms(1000); 
2F32:  MOVLW  04
2F34:  MOVLB  5
2F36:  MOVWF  x01
2F38:  MOVLW  FA
2F3A:  MOVWF  x02
2F3C:  MOVLB  0
2F3E:  CALL   0F96
2F42:  MOVLB  5
2F44:  DECFSZ x01,F
2F46:  BRA    2F38
....................    delay_ms(1000); 
2F48:  MOVLW  04
2F4A:  MOVWF  x01
2F4C:  MOVLW  FA
2F4E:  MOVWF  x02
2F50:  MOVLB  0
2F52:  CALL   0F96
2F56:  MOVLB  5
2F58:  DECFSZ x01,F
2F5A:  BRA    2F4C
....................    delay_ms(1000); 
2F5C:  MOVLW  04
2F5E:  MOVWF  x01
2F60:  MOVLW  FA
2F62:  MOVWF  x02
2F64:  MOVLB  0
2F66:  CALL   0F96
2F6A:  MOVLB  5
2F6C:  DECFSZ x01,F
2F6E:  BRA    2F60
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2F70:  CLRF   x02
2F72:  MOVLB  0
2F74:  CALL   1000
....................    displayContrasena(Contrasena[0],20,30,1); 
2F78:  MOVFF  4CE,503
2F7C:  MOVLW  14
2F7E:  MOVLB  5
2F80:  MOVWF  x04
2F82:  MOVLW  1E
2F84:  MOVWF  x05
2F86:  MOVLW  01
2F88:  MOVWF  x06
2F8A:  MOVLB  0
2F8C:  CALL   185C
....................    displayContrasena(Contrasena[1],40,30,0); 
2F90:  MOVFF  4CF,503
2F94:  MOVLW  28
2F96:  MOVLB  5
2F98:  MOVWF  x04
2F9A:  MOVLW  1E
2F9C:  MOVWF  x05
2F9E:  CLRF   x06
2FA0:  MOVLB  0
2FA2:  CALL   185C
....................    displayContrasena(Contrasena[2],60,30,0); 
2FA6:  MOVFF  4D0,503
2FAA:  MOVLW  3C
2FAC:  MOVLB  5
2FAE:  MOVWF  x04
2FB0:  MOVLW  1E
2FB2:  MOVWF  x05
2FB4:  CLRF   x06
2FB6:  MOVLB  0
2FB8:  CALL   185C
....................    displayContrasena(Contrasena[3],80,30,0); 
2FBC:  MOVFF  4D1,503
2FC0:  MOVLW  50
2FC2:  MOVLB  5
2FC4:  MOVWF  x04
2FC6:  MOVLW  1E
2FC8:  MOVWF  x05
2FCA:  CLRF   x06
2FCC:  MOVLB  0
2FCE:  CALL   185C
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
2FD2:  CALL   1EBC
....................        
....................       Envio_Esclavos(); 
2FD6:  CALL   2016
....................       glcd_update(); 
2FDA:  CALL   105A
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
2FDE:  BSF    F92.0
2FE0:  BTFSC  F80.0
2FE2:  BRA    2FF6
2FE4:  BSF    F92.1
2FE6:  BTFSC  F80.1
2FE8:  BRA    2FF6
2FEA:  BSF    F92.2
2FEC:  BTFSC  F80.2
2FEE:  BRA    2FF6
2FF0:  BSF    F92.3
2FF2:  BTFSS  F80.3
2FF4:  BRA    2FFE
....................       { 
....................          tinicio=0; 
2FF6:  MOVLB  4
2FF8:  CLRF   xB9
2FFA:  CLRF   xB8
2FFC:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
2FFE:  MOVLB  4
3000:  MOVF   xB9,W
3002:  SUBLW  37
3004:  BC    3022
3006:  XORLW  FF
3008:  BNZ   3010
300A:  MOVF   xB8,W
300C:  SUBLW  3F
300E:  BC    3022
....................          glcd_fillscreen(OFF); 
3010:  MOVLB  5
3012:  CLRF   x02
3014:  MOVLB  0
3016:  CALL   1000
....................          Display_off; 
301A:  BCF    F8D.0
301C:  BCF    F96.0
....................       } 
301E:  BRA    2FFE
3020:  MOVLB  4
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
3022:  MOVF   xA2,F
3024:  BTFSS  FD8.2
3026:  BRA    35BC
....................        
....................       strcpy(Menus.Letra,"Clave"); 
3028:  MOVLW  04
302A:  MOVWF  FEA
302C:  MOVLW  E1
302E:  MOVWF  FE9
3030:  MOVFF  FF2,501
3034:  BCF    FF2.7
3036:  MOVLW  00
3038:  MOVLB  0
303A:  CALL   0756
303E:  TBLRD*-
3040:  TBLRD*+
3042:  MOVF   FF5,W
3044:  MOVWF  FEE
3046:  IORLW  00
3048:  BNZ   3040
304A:  MOVLB  5
304C:  BTFSC  x01.7
304E:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
3050:  MOVLW  04
3052:  MOVWF  x02
3054:  MOVLW  E1
3056:  MOVWF  x01
3058:  MOVLW  1E
305A:  MOVWF  x03
305C:  CLRF   x04
305E:  MOVLW  01
3060:  MOVWF  x05
3062:  MOVLW  02
3064:  MOVWF  x06
3066:  MOVLB  0
3068:  CALL   162E
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
306C:  BSF    F92.0
306E:  BTFSS  F80.0
3070:  BRA    3148
....................       { 
....................          if(Flanco == 0) 
3072:  MOVLB  4
3074:  BTFSC  x95.0
3076:  BRA    3146
....................          { 
....................             Flanco = 1;delay_ms(30); 
3078:  BSF    x95.0
307A:  MOVLW  1E
307C:  MOVLB  5
307E:  MOVWF  x02
3080:  MOVLB  0
3082:  CALL   0F96
....................             for(i=1;i<=4;i++) 
3086:  MOVLW  01
3088:  MOVLB  4
308A:  MOVWF  xA4
308C:  MOVF   xA4,W
308E:  SUBLW  04
3090:  BNC   3146
....................             { 
....................                if(unidad==i) 
3092:  MOVF   xA4,W
3094:  SUBWF  xA3,W
3096:  BNZ   310E
....................                { 
....................                   Contrasena[i-1]++; 
3098:  MOVLW  01
309A:  SUBWF  xA4,W
309C:  CLRF   03
309E:  ADDLW  CE
30A0:  MOVWF  FE9
30A2:  MOVLW  04
30A4:  ADDWFC 03,W
30A6:  MOVWF  FEA
30A8:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
30AA:  MOVLW  01
30AC:  SUBWF  xA4,W
30AE:  CLRF   03
30B0:  ADDLW  CE
30B2:  MOVWF  FE9
30B4:  MOVLW  04
30B6:  ADDWFC 03,W
30B8:  MOVWF  FEA
30BA:  BTFSC  FEF.7
30BC:  BRA    30D6
30BE:  MOVF   FEF,W
30C0:  SUBLW  09
30C2:  BC    30D6
....................                   { 
....................                      Contrasena[i-1]=0; 
30C4:  MOVLW  01
30C6:  SUBWF  xA4,W
30C8:  CLRF   03
30CA:  ADDLW  CE
30CC:  MOVWF  FE9
30CE:  MOVLW  04
30D0:  ADDWFC 03,W
30D2:  MOVWF  FEA
30D4:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
30D6:  MOVLW  01
30D8:  SUBWF  xA4,W
30DA:  CLRF   03
30DC:  ADDLW  CE
30DE:  MOVWF  FE9
30E0:  MOVLW  04
30E2:  ADDWFC 03,W
30E4:  MOVWF  FEA
30E6:  MOVFF  FEF,501
30EA:  MOVF   xA4,W
30EC:  MULLW  14
30EE:  MOVFF  FF3,502
30F2:  MOVLB  5
30F4:  MOVFF  501,503
30F8:  MOVFF  502,504
30FC:  MOVLW  1E
30FE:  MOVWF  x05
3100:  MOVLW  01
3102:  MOVWF  x06
3104:  MOVLB  0
3106:  CALL   185C
....................                } 
....................                else 
310A:  BRA    3140
310C:  MOVLB  4
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
310E:  MOVLW  01
3110:  SUBWF  xA4,W
3112:  CLRF   03
3114:  ADDLW  CE
3116:  MOVWF  FE9
3118:  MOVLW  04
311A:  ADDWFC 03,W
311C:  MOVWF  FEA
311E:  MOVFF  FEF,501
3122:  MOVF   xA4,W
3124:  MULLW  14
3126:  MOVFF  FF3,502
312A:  MOVLB  5
312C:  MOVFF  501,503
3130:  MOVFF  502,504
3134:  MOVLW  1E
3136:  MOVWF  x05
3138:  CLRF   x06
313A:  MOVLB  0
313C:  CALL   185C
....................                } 
....................             } 
3140:  MOVLB  4
3142:  INCF   xA4,F
3144:  BRA    308C
....................          } 
....................       } 
....................          else 
3146:  BRA    314C
....................             {Flanco = 0;} 
3148:  MOVLB  4
314A:  BCF    x95.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
314C:  BSF    F92.1
314E:  BTFSS  F80.1
3150:  BRA    3224
....................       { 
....................          if(Flanco2 == 0) 
3152:  BTFSC  x95.2
3154:  BRA    3222
....................             {Flanco2 = 1;delay_ms(30); 
3156:  BSF    x95.2
3158:  MOVLW  1E
315A:  MOVLB  5
315C:  MOVWF  x02
315E:  MOVLB  0
3160:  CALL   0F96
....................                for(i=1;i<=4;i++) 
3164:  MOVLW  01
3166:  MOVLB  4
3168:  MOVWF  xA4
316A:  MOVF   xA4,W
316C:  SUBLW  04
316E:  BNC   3222
....................                { 
....................                   if(unidad==i) 
3170:  MOVF   xA4,W
3172:  SUBWF  xA3,W
3174:  BNZ   31EA
....................                   {Contrasena[i-1]--;  
3176:  MOVLW  01
3178:  SUBWF  xA4,W
317A:  CLRF   03
317C:  ADDLW  CE
317E:  MOVWF  FE9
3180:  MOVLW  04
3182:  ADDWFC 03,W
3184:  MOVWF  FEA
3186:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
3188:  MOVLW  01
318A:  SUBWF  xA4,W
318C:  CLRF   03
318E:  ADDLW  CE
3190:  MOVWF  FE9
3192:  MOVLW  04
3194:  ADDWFC 03,W
3196:  MOVWF  FEA
3198:  BTFSC  FEF.7
319A:  BRA    319E
319C:  BRA    31B2
....................                         {Contrasena[i-1]=9;} 
319E:  MOVLW  01
31A0:  SUBWF  xA4,W
31A2:  CLRF   03
31A4:  ADDLW  CE
31A6:  MOVWF  FE9
31A8:  MOVLW  04
31AA:  ADDWFC 03,W
31AC:  MOVWF  FEA
31AE:  MOVLW  09
31B0:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
31B2:  MOVLW  01
31B4:  SUBWF  xA4,W
31B6:  CLRF   03
31B8:  ADDLW  CE
31BA:  MOVWF  FE9
31BC:  MOVLW  04
31BE:  ADDWFC 03,W
31C0:  MOVWF  FEA
31C2:  MOVFF  FEF,501
31C6:  MOVF   xA4,W
31C8:  MULLW  14
31CA:  MOVFF  FF3,502
31CE:  MOVLB  5
31D0:  MOVFF  501,503
31D4:  MOVFF  502,504
31D8:  MOVLW  1E
31DA:  MOVWF  x05
31DC:  MOVLW  01
31DE:  MOVWF  x06
31E0:  MOVLB  0
31E2:  CALL   185C
....................                   else 
31E6:  BRA    321C
31E8:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
31EA:  MOVLW  01
31EC:  SUBWF  xA4,W
31EE:  CLRF   03
31F0:  ADDLW  CE
31F2:  MOVWF  FE9
31F4:  MOVLW  04
31F6:  ADDWFC 03,W
31F8:  MOVWF  FEA
31FA:  MOVFF  FEF,501
31FE:  MOVF   xA4,W
3200:  MULLW  14
3202:  MOVFF  FF3,502
3206:  MOVLB  5
3208:  MOVFF  501,503
320C:  MOVFF  502,504
3210:  MOVLW  1E
3212:  MOVWF  x05
3214:  CLRF   x06
3216:  MOVLB  0
3218:  CALL   185C
....................                }       
321C:  MOVLB  4
321E:  INCF   xA4,F
3220:  BRA    316A
....................             }      
....................       } 
....................          else 
3222:  BRA    3226
....................             {Flanco2 = 0;}   
3224:  BCF    x95.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3226:  BSF    F92.2
3228:  BTFSS  F80.2
322A:  BRA    32C4
....................       { 
....................          if(Flanco1 == 0) 
322C:  BTFSC  x95.1
322E:  BRA    32C2
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
3230:  BSF    x95.1
3232:  MOVLW  1E
3234:  MOVLB  5
3236:  MOVWF  x02
3238:  MOVLB  0
323A:  CALL   0F96
323E:  MOVLB  4
3240:  INCF   xA3,F
....................                for(i=1;i<=4;i++) 
3242:  MOVLW  01
3244:  MOVWF  xA4
3246:  MOVF   xA4,W
3248:  SUBLW  04
324A:  BNC   32C2
....................                { 
....................                   if(unidad==i) 
324C:  MOVF   xA4,W
324E:  SUBWF  xA3,W
3250:  BNZ   328A
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
3252:  MOVLW  01
3254:  SUBWF  xA4,W
3256:  CLRF   03
3258:  ADDLW  CE
325A:  MOVWF  FE9
325C:  MOVLW  04
325E:  ADDWFC 03,W
3260:  MOVWF  FEA
3262:  MOVFF  FEF,501
3266:  MOVF   xA4,W
3268:  MULLW  14
326A:  MOVFF  FF3,502
326E:  MOVLB  5
3270:  MOVFF  501,503
3274:  MOVFF  502,504
3278:  MOVLW  1E
327A:  MOVWF  x05
327C:  MOVLW  01
327E:  MOVWF  x06
3280:  MOVLB  0
3282:  CALL   185C
....................                   else 
3286:  BRA    32BC
3288:  MOVLB  4
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
328A:  MOVLW  01
328C:  SUBWF  xA4,W
328E:  CLRF   03
3290:  ADDLW  CE
3292:  MOVWF  FE9
3294:  MOVLW  04
3296:  ADDWFC 03,W
3298:  MOVWF  FEA
329A:  MOVFF  FEF,501
329E:  MOVF   xA4,W
32A0:  MULLW  14
32A2:  MOVFF  FF3,502
32A6:  MOVLB  5
32A8:  MOVFF  501,503
32AC:  MOVFF  502,504
32B0:  MOVLW  1E
32B2:  MOVWF  x05
32B4:  CLRF   x06
32B6:  MOVLB  0
32B8:  CALL   185C
....................                } 
32BC:  MOVLB  4
32BE:  INCF   xA4,F
32C0:  BRA    3246
....................             } 
....................       } 
....................          else 
32C2:  BRA    32C6
....................             {Flanco1 = 0;}   
32C4:  BCF    x95.1
....................      
....................       if(unidad>4) 
32C6:  MOVF   xA3,W
32C8:  SUBLW  04
32CA:  BTFSC  FD8.0
32CC:  BRA    35BC
....................       {glcd_fillScreen(OFF);unidad=4; 
32CE:  MOVLB  5
32D0:  CLRF   x02
32D2:  MOVLB  0
32D4:  CALL   1000
32D8:  MOVLW  04
32DA:  MOVLB  4
32DC:  MOVWF  xA3
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
32DE:  MOVF   xCE,W
32E0:  SUBLW  03
32E2:  BNZ   33CA
32E4:  MOVF   xCF,W
32E6:  SUBLW  08
32E8:  BNZ   33CA
32EA:  MOVF   xD0,W
32EC:  SUBLW  09
32EE:  BNZ   33CA
32F0:  MOVF   xD1,W
32F2:  SUBLW  02
32F4:  BNZ   33CA
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
32F6:  MOVLW  0A
32F8:  MOVWF  FA9
32FA:  CLRF   FA8
32FC:  BCF    FA6.6
32FE:  BCF    FA6.7
3300:  BSF    FA6.2
3302:  MOVF   FF2,W
3304:  MOVWF  00
3306:  BCF    FF2.7
3308:  MOVLB  F
330A:  MOVLW  55
330C:  MOVWF  FA7
330E:  MOVLW  AA
3310:  MOVWF  FA7
3312:  BSF    FA6.1
3314:  BTFSC  FA6.1
3316:  BRA    3314
3318:  BCF    FA6.2
331A:  MOVF   00,W
331C:  IORWF  FF2,F
331E:  MOVLW  14
3320:  MOVLB  5
3322:  MOVWF  x02
3324:  MOVLB  0
3326:  CALL   0F96
332A:  MOVLW  0B
332C:  MOVWF  FA9
332E:  CLRF   FA8
3330:  BCF    FA6.6
3332:  BCF    FA6.7
3334:  BSF    FA6.2
3336:  MOVF   FF2,W
3338:  MOVWF  00
333A:  BCF    FF2.7
333C:  MOVLB  F
333E:  MOVLW  55
3340:  MOVWF  FA7
3342:  MOVLW  AA
3344:  MOVWF  FA7
3346:  BSF    FA6.1
3348:  BTFSC  FA6.1
334A:  BRA    3348
334C:  BCF    FA6.2
334E:  MOVF   00,W
3350:  IORWF  FF2,F
3352:  MOVLW  14
3354:  MOVLB  5
3356:  MOVWF  x02
3358:  MOVLB  0
335A:  CALL   0F96
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
335E:  MOVLW  0C
3360:  MOVWF  FA9
3362:  CLRF   FA8
3364:  BCF    FA6.6
3366:  BCF    FA6.7
3368:  BSF    FA6.2
336A:  MOVF   FF2,W
336C:  MOVWF  00
336E:  BCF    FF2.7
3370:  MOVLB  F
3372:  MOVLW  55
3374:  MOVWF  FA7
3376:  MOVLW  AA
3378:  MOVWF  FA7
337A:  BSF    FA6.1
337C:  BTFSC  FA6.1
337E:  BRA    337C
3380:  BCF    FA6.2
3382:  MOVF   00,W
3384:  IORWF  FF2,F
3386:  MOVLW  14
3388:  MOVLB  5
338A:  MOVWF  x02
338C:  MOVLB  0
338E:  CALL   0F96
3392:  MOVLW  0D
3394:  MOVWF  FA9
3396:  CLRF   FA8
3398:  BCF    FA6.6
339A:  BCF    FA6.7
339C:  BSF    FA6.2
339E:  MOVF   FF2,W
33A0:  MOVWF  00
33A2:  BCF    FF2.7
33A4:  MOVLB  F
33A6:  MOVLW  55
33A8:  MOVWF  FA7
33AA:  MOVLW  AA
33AC:  MOVWF  FA7
33AE:  BSF    FA6.1
33B0:  BTFSC  FA6.1
33B2:  BRA    33B0
33B4:  BCF    FA6.2
33B6:  MOVF   00,W
33B8:  IORWF  FF2,F
33BA:  MOVLW  14
33BC:  MOVLB  5
33BE:  MOVWF  x02
33C0:  MOVLB  0
33C2:  CALL   0F96
....................              reset_cpu();}         
33C6:  RESET
33C8:  MOVLB  4
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
33CA:  MOVF   xD2,W
33CC:  SUBWF  xCE,W
33CE:  BNZ   34A0
33D0:  MOVF   xD3,W
33D2:  SUBWF  xCF,W
33D4:  BNZ   34A0
33D6:  MOVF   xD4,W
33D8:  SUBWF  xD0,W
33DA:  BNZ   34A0
33DC:  MOVF   xD5,W
33DE:  SUBWF  xD1,W
33E0:  BNZ   34A0
....................          { 
....................             glcd_fillScreen(OFF); 
33E2:  MOVLB  5
33E4:  CLRF   x02
33E6:  MOVLB  0
33E8:  CALL   1000
....................             strcpy(Menus.Letra,"Clave"); 
33EC:  MOVLW  04
33EE:  MOVWF  FEA
33F0:  MOVLW  E1
33F2:  MOVWF  FE9
33F4:  MOVFF  FF2,501
33F8:  BCF    FF2.7
33FA:  MOVLW  00
33FC:  CALL   0756
3400:  TBLRD*-
3402:  TBLRD*+
3404:  MOVF   FF5,W
3406:  MOVWF  FEE
3408:  IORLW  00
340A:  BNZ   3402
340C:  MOVLB  5
340E:  BTFSC  x01.7
3410:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3412:  MOVLW  04
3414:  MOVWF  x02
3416:  MOVLW  E1
3418:  MOVWF  x01
341A:  MOVLW  1E
341C:  MOVWF  x03
341E:  CLRF   x04
3420:  CLRF   x05
3422:  MOVLW  02
3424:  MOVWF  x06
3426:  MOVLB  0
3428:  CALL   162E
....................             strcpy(Menus.Letra,"Correcta"); 
342C:  MOVLW  04
342E:  MOVWF  FEA
3430:  MOVLW  E1
3432:  MOVWF  FE9
3434:  MOVFF  FF2,501
3438:  BCF    FF2.7
343A:  MOVLW  00
343C:  CALL   0776
3440:  TBLRD*-
3442:  TBLRD*+
3444:  MOVF   FF5,W
3446:  MOVWF  FEE
3448:  IORLW  00
344A:  BNZ   3442
344C:  MOVLB  5
344E:  BTFSC  x01.7
3450:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
3452:  MOVLW  04
3454:  MOVWF  x02
3456:  MOVLW  E1
3458:  MOVWF  x01
345A:  MOVLW  0F
345C:  MOVWF  x03
345E:  MOVLW  1E
3460:  MOVWF  x04
3462:  CLRF   x05
3464:  MOVLW  02
3466:  MOVWF  x06
3468:  MOVLB  0
346A:  CALL   162E
....................             Menu=1;glcd_update();delay_ms(1000); 
346E:  MOVLW  01
3470:  MOVLB  4
3472:  MOVWF  xA2
3474:  MOVLB  0
3476:  CALL   105A
347A:  MOVLW  04
347C:  MOVLB  5
347E:  MOVWF  x01
3480:  MOVLW  FA
3482:  MOVWF  x02
3484:  MOVLB  0
3486:  CALL   0F96
348A:  MOVLB  5
348C:  DECFSZ x01,F
348E:  BRA    3480
....................             glcd_fillScreen(OFF);unidad=1; 
3490:  CLRF   x02
3492:  MOVLB  0
3494:  CALL   1000
3498:  MOVLW  01
349A:  MOVLB  4
349C:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
349E:  BRA    35BC
....................          { 
....................             glcd_fillScreen(OFF); 
34A0:  MOVLB  5
34A2:  CLRF   x02
34A4:  MOVLB  0
34A6:  CALL   1000
....................             strcpy(Menus.Letra,"Clave"); 
34AA:  MOVLW  04
34AC:  MOVWF  FEA
34AE:  MOVLW  E1
34B0:  MOVWF  FE9
34B2:  MOVFF  FF2,501
34B6:  BCF    FF2.7
34B8:  MOVLW  00
34BA:  CALL   0756
34BE:  TBLRD*-
34C0:  TBLRD*+
34C2:  MOVF   FF5,W
34C4:  MOVWF  FEE
34C6:  IORLW  00
34C8:  BNZ   34C0
34CA:  MOVLB  5
34CC:  BTFSC  x01.7
34CE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
34D0:  MOVLW  04
34D2:  MOVWF  x02
34D4:  MOVLW  E1
34D6:  MOVWF  x01
34D8:  MOVLW  1E
34DA:  MOVWF  x03
34DC:  CLRF   x04
34DE:  CLRF   x05
34E0:  MOVLW  02
34E2:  MOVWF  x06
34E4:  MOVLB  0
34E6:  CALL   162E
....................             strcpy(Menus.Letra,"Incorrecta"); 
34EA:  MOVLW  04
34EC:  MOVWF  FEA
34EE:  MOVLW  E1
34F0:  MOVWF  FE9
34F2:  MOVFF  FF2,501
34F6:  BCF    FF2.7
34F8:  MOVLW  00
34FA:  CALL   079A
34FE:  TBLRD*-
3500:  TBLRD*+
3502:  MOVF   FF5,W
3504:  MOVWF  FEE
3506:  IORLW  00
3508:  BNZ   3500
350A:  MOVLB  5
350C:  BTFSC  x01.7
350E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
3510:  MOVLW  04
3512:  MOVWF  x02
3514:  MOVLW  E1
3516:  MOVWF  x01
3518:  CLRF   x03
351A:  MOVLW  1E
351C:  MOVWF  x04
351E:  CLRF   x05
3520:  MOVLW  02
3522:  MOVWF  x06
3524:  MOVLB  0
3526:  CALL   162E
....................             Menu=0;glcd_update();delay_ms(1000); 
352A:  MOVLB  4
352C:  CLRF   xA2
352E:  MOVLB  0
3530:  CALL   105A
3534:  MOVLW  04
3536:  MOVLB  5
3538:  MOVWF  x01
353A:  MOVLW  FA
353C:  MOVWF  x02
353E:  MOVLB  0
3540:  CALL   0F96
3544:  MOVLB  5
3546:  DECFSZ x01,F
3548:  BRA    353A
....................             glcd_fillScreen(OFF);unidad=1; 
354A:  CLRF   x02
354C:  MOVLB  0
354E:  CALL   1000
3552:  MOVLW  01
3554:  MOVLB  4
3556:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3558:  CLRF   xCE
355A:  CLRF   xCF
355C:  CLRF   xD0
355E:  CLRF   xD1
....................             displayContrasena(Contrasena[0],20,30,1); 
3560:  MOVFF  4CE,503
3564:  MOVLW  14
3566:  MOVLB  5
3568:  MOVWF  x04
356A:  MOVLW  1E
356C:  MOVWF  x05
356E:  MOVLW  01
3570:  MOVWF  x06
3572:  MOVLB  0
3574:  CALL   185C
....................             displayContrasena(Contrasena[1],40,30,0); 
3578:  MOVFF  4CF,503
357C:  MOVLW  28
357E:  MOVLB  5
3580:  MOVWF  x04
3582:  MOVLW  1E
3584:  MOVWF  x05
3586:  CLRF   x06
3588:  MOVLB  0
358A:  CALL   185C
....................             displayContrasena(Contrasena[2],60,30,0); 
358E:  MOVFF  4D0,503
3592:  MOVLW  3C
3594:  MOVLB  5
3596:  MOVWF  x04
3598:  MOVLW  1E
359A:  MOVWF  x05
359C:  CLRF   x06
359E:  MOVLB  0
35A0:  CALL   185C
....................             displayContrasena(Contrasena[3],80,30,0); 
35A4:  MOVFF  4D1,503
35A8:  MOVLW  50
35AA:  MOVLB  5
35AC:  MOVWF  x04
35AE:  MOVLW  1E
35B0:  MOVWF  x05
35B2:  CLRF   x06
35B4:  MOVLB  0
35B6:  CALL   185C
35BA:  MOVLB  4
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
35BC:  DECFSZ xA2,W
35BE:  BRA    39F4
....................        
....................       if(visual==1) 
35C0:  BTFSS  x95.4
35C2:  BRA    397A
....................       { 
....................          if(Opcion>6) 
35C4:  MOVF   xA7,W
35C6:  SUBLW  06
35C8:  BC    35CE
....................          {Opcion=1;} 
35CA:  MOVLW  01
35CC:  MOVWF  xA7
....................          if(Opcion<1) 
35CE:  MOVF   xA7,F
35D0:  BNZ   35D6
....................          {Opcion=6;} 
35D2:  MOVLW  06
35D4:  MOVWF  xA7
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
35D6:  MOVLW  04
35D8:  MOVWF  FEA
35DA:  MOVLW  E1
35DC:  MOVWF  FE9
35DE:  MOVFF  FF2,501
35E2:  BCF    FF2.7
35E4:  MOVLW  00
35E6:  MOVLB  0
35E8:  CALL   07C0
35EC:  TBLRD*-
35EE:  TBLRD*+
35F0:  MOVF   FF5,W
35F2:  MOVWF  FEE
35F4:  IORLW  00
35F6:  BNZ   35EE
35F8:  MOVLB  5
35FA:  BTFSC  x01.7
35FC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
35FE:  MOVLW  04
3600:  MOVWF  x02
3602:  MOVLW  E1
3604:  MOVWF  x01
3606:  MOVLW  1E
3608:  MOVWF  x03
360A:  CLRF   x04
360C:  MOVLW  01
360E:  MOVWF  x05
3610:  MOVWF  x06
3612:  MOVLB  0
3614:  CALL   162E
....................        
....................          if(Opcion==1)    
3618:  MOVLB  4
361A:  DECFSZ xA7,W
361C:  BRA    3664
....................             {strcpy(Menus.Letra,"Caucho"); 
361E:  MOVLW  04
3620:  MOVWF  FEA
3622:  MOVLW  E1
3624:  MOVWF  FE9
3626:  MOVFF  FF2,501
362A:  BCF    FF2.7
362C:  MOVLW  00
362E:  MOVLB  0
3630:  CALL   07EA
3634:  TBLRD*-
3636:  TBLRD*+
3638:  MOVF   FF5,W
363A:  MOVWF  FEE
363C:  IORLW  00
363E:  BNZ   3636
3640:  MOVLB  5
3642:  BTFSC  x01.7
3644:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
3646:  MOVLW  04
3648:  MOVWF  x02
364A:  MOVLW  E1
364C:  MOVWF  x01
364E:  CLRF   x03
3650:  MOVLW  0A
3652:  MOVWF  x04
3654:  MOVLW  01
3656:  MOVWF  x05
3658:  MOVWF  x06
365A:  MOVLB  0
365C:  CALL   162E
....................          else 
3660:  BRA    36A6
3662:  MOVLB  4
....................             {strcpy(Menus.Letra,"Caucho"); 
3664:  MOVLW  04
3666:  MOVWF  FEA
3668:  MOVLW  E1
366A:  MOVWF  FE9
366C:  MOVFF  FF2,501
3670:  BCF    FF2.7
3672:  MOVLW  00
3674:  MOVLB  0
3676:  CALL   07EA
367A:  TBLRD*-
367C:  TBLRD*+
367E:  MOVF   FF5,W
3680:  MOVWF  FEE
3682:  IORLW  00
3684:  BNZ   367C
3686:  MOVLB  5
3688:  BTFSC  x01.7
368A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
368C:  MOVLW  04
368E:  MOVWF  x02
3690:  MOVLW  E1
3692:  MOVWF  x01
3694:  CLRF   x03
3696:  MOVLW  0A
3698:  MOVWF  x04
369A:  CLRF   x05
369C:  MOVLW  01
369E:  MOVWF  x06
36A0:  MOVLB  0
36A2:  CALL   162E
....................           
....................          if(Opcion==2)    
36A6:  MOVLB  4
36A8:  MOVF   xA7,W
36AA:  SUBLW  02
36AC:  BNZ   36F4
....................             {strcpy(Menus.Letra,"Liquidos"); 
36AE:  MOVLW  04
36B0:  MOVWF  FEA
36B2:  MOVLW  E1
36B4:  MOVWF  FE9
36B6:  MOVFF  FF2,501
36BA:  BCF    FF2.7
36BC:  MOVLW  00
36BE:  MOVLB  0
36C0:  CALL   080C
36C4:  TBLRD*-
36C6:  TBLRD*+
36C8:  MOVF   FF5,W
36CA:  MOVWF  FEE
36CC:  IORLW  00
36CE:  BNZ   36C6
36D0:  MOVLB  5
36D2:  BTFSC  x01.7
36D4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
36D6:  MOVLW  04
36D8:  MOVWF  x02
36DA:  MOVLW  E1
36DC:  MOVWF  x01
36DE:  CLRF   x03
36E0:  MOVLW  13
36E2:  MOVWF  x04
36E4:  MOVLW  01
36E6:  MOVWF  x05
36E8:  MOVWF  x06
36EA:  MOVLB  0
36EC:  CALL   162E
....................          else 
36F0:  BRA    3736
36F2:  MOVLB  4
....................             {strcpy(Menus.Letra,"Liquidos"); 
36F4:  MOVLW  04
36F6:  MOVWF  FEA
36F8:  MOVLW  E1
36FA:  MOVWF  FE9
36FC:  MOVFF  FF2,501
3700:  BCF    FF2.7
3702:  MOVLW  00
3704:  MOVLB  0
3706:  CALL   080C
370A:  TBLRD*-
370C:  TBLRD*+
370E:  MOVF   FF5,W
3710:  MOVWF  FEE
3712:  IORLW  00
3714:  BNZ   370C
3716:  MOVLB  5
3718:  BTFSC  x01.7
371A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
371C:  MOVLW  04
371E:  MOVWF  x02
3720:  MOVLW  E1
3722:  MOVWF  x01
3724:  CLRF   x03
3726:  MOVLW  13
3728:  MOVWF  x04
372A:  CLRF   x05
372C:  MOVLW  01
372E:  MOVWF  x06
3730:  MOVLB  0
3732:  CALL   162E
....................              
....................           if(Opcion==3)    
3736:  MOVLB  4
3738:  MOVF   xA7,W
373A:  SUBLW  03
373C:  BNZ   3784
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
373E:  MOVLW  04
3740:  MOVWF  FEA
3742:  MOVLW  E1
3744:  MOVWF  FE9
3746:  MOVFF  FF2,501
374A:  BCF    FF2.7
374C:  MOVLW  00
374E:  MOVLB  0
3750:  CALL   0830
3754:  TBLRD*-
3756:  TBLRD*+
3758:  MOVF   FF5,W
375A:  MOVWF  FEE
375C:  IORLW  00
375E:  BNZ   3756
3760:  MOVLB  5
3762:  BTFSC  x01.7
3764:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
3766:  MOVLW  04
3768:  MOVWF  x02
376A:  MOVLW  E1
376C:  MOVWF  x01
376E:  CLRF   x03
3770:  MOVLW  1C
3772:  MOVWF  x04
3774:  MOVLW  01
3776:  MOVWF  x05
3778:  MOVWF  x06
377A:  MOVLB  0
377C:  CALL   162E
....................          else 
3780:  BRA    37C6
3782:  MOVLB  4
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
3784:  MOVLW  04
3786:  MOVWF  FEA
3788:  MOVLW  E1
378A:  MOVWF  FE9
378C:  MOVFF  FF2,501
3790:  BCF    FF2.7
3792:  MOVLW  00
3794:  MOVLB  0
3796:  CALL   0830
379A:  TBLRD*-
379C:  TBLRD*+
379E:  MOVF   FF5,W
37A0:  MOVWF  FEE
37A2:  IORLW  00
37A4:  BNZ   379C
37A6:  MOVLB  5
37A8:  BTFSC  x01.7
37AA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
37AC:  MOVLW  04
37AE:  MOVWF  x02
37B0:  MOVLW  E1
37B2:  MOVWF  x01
37B4:  CLRF   x03
37B6:  MOVLW  1C
37B8:  MOVWF  x04
37BA:  CLRF   x05
37BC:  MOVLW  01
37BE:  MOVWF  x06
37C0:  MOVLB  0
37C2:  CALL   162E
....................              
....................          if(Opcion==4)    
37C6:  MOVLB  4
37C8:  MOVF   xA7,W
37CA:  SUBLW  04
37CC:  BNZ   3814
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
37CE:  MOVLW  04
37D0:  MOVWF  FEA
37D2:  MOVLW  E1
37D4:  MOVWF  FE9
37D6:  MOVFF  FF2,501
37DA:  BCF    FF2.7
37DC:  MOVLW  00
37DE:  MOVLB  0
37E0:  CALL   085E
37E4:  TBLRD*-
37E6:  TBLRD*+
37E8:  MOVF   FF5,W
37EA:  MOVWF  FEE
37EC:  IORLW  00
37EE:  BNZ   37E6
37F0:  MOVLB  5
37F2:  BTFSC  x01.7
37F4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
37F6:  MOVLW  04
37F8:  MOVWF  x02
37FA:  MOVLW  E1
37FC:  MOVWF  x01
37FE:  CLRF   x03
3800:  MOVLW  25
3802:  MOVWF  x04
3804:  MOVLW  01
3806:  MOVWF  x05
3808:  MOVWF  x06
380A:  MOVLB  0
380C:  CALL   162E
....................          else 
3810:  BRA    3856
3812:  MOVLB  4
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
3814:  MOVLW  04
3816:  MOVWF  FEA
3818:  MOVLW  E1
381A:  MOVWF  FE9
381C:  MOVFF  FF2,501
3820:  BCF    FF2.7
3822:  MOVLW  00
3824:  MOVLB  0
3826:  CALL   085E
382A:  TBLRD*-
382C:  TBLRD*+
382E:  MOVF   FF5,W
3830:  MOVWF  FEE
3832:  IORLW  00
3834:  BNZ   382C
3836:  MOVLB  5
3838:  BTFSC  x01.7
383A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
383C:  MOVLW  04
383E:  MOVWF  x02
3840:  MOVLW  E1
3842:  MOVWF  x01
3844:  CLRF   x03
3846:  MOVLW  25
3848:  MOVWF  x04
384A:  CLRF   x05
384C:  MOVLW  01
384E:  MOVWF  x06
3850:  MOVLB  0
3852:  CALL   162E
....................              
....................          if(Opcion==5)    
3856:  MOVLB  4
3858:  MOVF   xA7,W
385A:  SUBLW  05
385C:  BNZ   38A4
....................             {strcpy(Menus.Letra,"Personalizado"); 
385E:  MOVLW  04
3860:  MOVWF  FEA
3862:  MOVLW  E1
3864:  MOVWF  FE9
3866:  MOVFF  FF2,501
386A:  BCF    FF2.7
386C:  MOVLW  00
386E:  MOVLB  0
3870:  CALL   088E
3874:  TBLRD*-
3876:  TBLRD*+
3878:  MOVF   FF5,W
387A:  MOVWF  FEE
387C:  IORLW  00
387E:  BNZ   3876
3880:  MOVLB  5
3882:  BTFSC  x01.7
3884:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
3886:  MOVLW  04
3888:  MOVWF  x02
388A:  MOVLW  E1
388C:  MOVWF  x01
388E:  CLRF   x03
3890:  MOVLW  2E
3892:  MOVWF  x04
3894:  MOVLW  01
3896:  MOVWF  x05
3898:  MOVWF  x06
389A:  MOVLB  0
389C:  CALL   162E
....................          else 
38A0:  BRA    38E6
38A2:  MOVLB  4
....................             {strcpy(Menus.Letra,"Personalizado"); 
38A4:  MOVLW  04
38A6:  MOVWF  FEA
38A8:  MOVLW  E1
38AA:  MOVWF  FE9
38AC:  MOVFF  FF2,501
38B0:  BCF    FF2.7
38B2:  MOVLW  00
38B4:  MOVLB  0
38B6:  CALL   088E
38BA:  TBLRD*-
38BC:  TBLRD*+
38BE:  MOVF   FF5,W
38C0:  MOVWF  FEE
38C2:  IORLW  00
38C4:  BNZ   38BC
38C6:  MOVLB  5
38C8:  BTFSC  x01.7
38CA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
38CC:  MOVLW  04
38CE:  MOVWF  x02
38D0:  MOVLW  E1
38D2:  MOVWF  x01
38D4:  CLRF   x03
38D6:  MOVLW  2E
38D8:  MOVWF  x04
38DA:  CLRF   x05
38DC:  MOVLW  01
38DE:  MOVWF  x06
38E0:  MOVLB  0
38E2:  CALL   162E
....................              
....................          if(Opcion==6)    
38E6:  MOVLB  4
38E8:  MOVF   xA7,W
38EA:  SUBLW  06
38EC:  BNZ   3934
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
38EE:  MOVLW  04
38F0:  MOVWF  FEA
38F2:  MOVLW  E1
38F4:  MOVWF  FE9
38F6:  MOVFF  FF2,501
38FA:  BCF    FF2.7
38FC:  MOVLW  00
38FE:  MOVLB  0
3900:  CALL   08B6
3904:  TBLRD*-
3906:  TBLRD*+
3908:  MOVF   FF5,W
390A:  MOVWF  FEE
390C:  IORLW  00
390E:  BNZ   3906
3910:  MOVLB  5
3912:  BTFSC  x01.7
3914:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
3916:  MOVLW  04
3918:  MOVWF  x02
391A:  MOVLW  E1
391C:  MOVWF  x01
391E:  CLRF   x03
3920:  MOVLW  37
3922:  MOVWF  x04
3924:  MOVLW  01
3926:  MOVWF  x05
3928:  MOVWF  x06
392A:  MOVLB  0
392C:  CALL   162E
....................          else 
3930:  BRA    3976
3932:  MOVLB  4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3934:  MOVLW  04
3936:  MOVWF  FEA
3938:  MOVLW  E1
393A:  MOVWF  FE9
393C:  MOVFF  FF2,501
3940:  BCF    FF2.7
3942:  MOVLW  00
3944:  MOVLB  0
3946:  CALL   08B6
394A:  TBLRD*-
394C:  TBLRD*+
394E:  MOVF   FF5,W
3950:  MOVWF  FEE
3952:  IORLW  00
3954:  BNZ   394C
3956:  MOVLB  5
3958:  BTFSC  x01.7
395A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
395C:  MOVLW  04
395E:  MOVWF  x02
3960:  MOVLW  E1
3962:  MOVWF  x01
3964:  CLRF   x03
3966:  MOVLW  37
3968:  MOVWF  x04
396A:  CLRF   x05
396C:  MOVLW  01
396E:  MOVWF  x06
3970:  MOVLB  0
3972:  CALL   162E
....................             visual=0; 
3976:  MOVLB  4
3978:  BCF    x95.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
397A:  BSF    F92.0
397C:  BTFSS  F80.0
397E:  BRA    399A
....................          {  if(Flanco == 0)  
3980:  BTFSC  x95.0
3982:  BRA    3998
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3984:  BSF    x95.0
3986:  MOVLW  1E
3988:  MOVLB  5
398A:  MOVWF  x02
398C:  MOVLB  0
398E:  CALL   0F96
3992:  MOVLB  4
3994:  DECF   xA7,F
3996:  BSF    x95.4
....................                } 
....................          } 
....................             else 
3998:  BRA    399C
....................                {Flanco = 0;} 
399A:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
399C:  BSF    F92.1
399E:  BTFSS  F80.1
39A0:  BRA    39BC
....................          {  if(Flanco2 == 0)  
39A2:  BTFSC  x95.2
39A4:  BRA    39BA
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
39A6:  BSF    x95.2
39A8:  MOVLW  1E
39AA:  MOVLB  5
39AC:  MOVWF  x02
39AE:  MOVLB  0
39B0:  CALL   0F96
39B4:  MOVLB  4
39B6:  INCF   xA7,F
39B8:  BSF    x95.4
....................                }      
....................          } 
....................             else 
39BA:  BRA    39BE
....................                {Flanco2 = 0;}   
39BC:  BCF    x95.2
....................                 
....................        if(RIGHT)//Si oprime SET 
39BE:  BSF    F92.2
39C0:  BTFSS  F80.2
39C2:  BRA    39F2
....................          {  if(Flanco1 == 0)  
39C4:  BTFSC  x95.1
39C6:  BRA    39F0
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
39C8:  BSF    x95.1
39CA:  MOVLW  1E
39CC:  MOVLB  5
39CE:  MOVWF  x02
39D0:  MOVLB  0
39D2:  CALL   0F96
39D6:  MOVLW  03
39D8:  MOVLB  4
39DA:  ADDWF  xA7,W
39DC:  MOVWF  xA2
39DE:  MOVLW  01
39E0:  MOVWF  xA7
39E2:  MOVLB  5
39E4:  CLRF   x02
39E6:  MOVLB  0
39E8:  CALL   1000
39EC:  MOVLB  4
39EE:  BSF    x95.4
....................                } 
....................          } 
....................             else 
39F0:  BRA    39F4
....................                {Flanco1 = 0;}   
39F2:  BCF    x95.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
39F4:  MOVF   xA2,W
39F6:  SUBLW  04
39F8:  BTFSS  FD8.2
39FA:  BRA    3D28
....................        
....................       if(visual==1) 
39FC:  BTFSS  x95.4
39FE:  BRA    3B54
....................       { 
....................          glcd_imagen(2); //Guante 
3A00:  MOVLW  02
3A02:  MOVLB  5
3A04:  MOVWF  x01
3A06:  MOVLB  0
3A08:  CALL   2076
....................          strcpy(Menus.Letra,"Caucho"); 
3A0C:  MOVLW  04
3A0E:  MOVWF  FEA
3A10:  MOVLW  E1
3A12:  MOVWF  FE9
3A14:  MOVFF  FF2,501
3A18:  BCF    FF2.7
3A1A:  MOVLW  00
3A1C:  CALL   07EA
3A20:  TBLRD*-
3A22:  TBLRD*+
3A24:  MOVF   FF5,W
3A26:  MOVWF  FEE
3A28:  IORLW  00
3A2A:  BNZ   3A22
3A2C:  MOVLB  5
3A2E:  BTFSC  x01.7
3A30:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3A32:  MOVLW  04
3A34:  MOVWF  x02
3A36:  MOVLW  E1
3A38:  MOVWF  x01
3A3A:  MOVLW  14
3A3C:  MOVWF  x03
3A3E:  CLRF   x04
3A40:  MOVLW  01
3A42:  MOVWF  x05
3A44:  MOVLW  02
3A46:  MOVWF  x06
3A48:  MOVLB  0
3A4A:  CALL   162E
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3A4E:  MOVLW  04
3A50:  MOVWF  FEA
3A52:  MOVLW  E1
3A54:  MOVWF  FE9
3A56:  MOVFF  FF2,501
3A5A:  BCF    FF2.7
3A5C:  MOVLW  00
3A5E:  CALL   07EA
3A62:  TBLRD*-
3A64:  TBLRD*+
3A66:  MOVF   FF5,W
3A68:  MOVWF  FEE
3A6A:  IORLW  00
3A6C:  BNZ   3A64
3A6E:  MOVLB  5
3A70:  BTFSC  x01.7
3A72:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3A74:  MOVLW  04
3A76:  MOVWF  x02
3A78:  MOVLW  E1
3A7A:  MOVWF  x01
3A7C:  MOVLW  07
3A7E:  MOVWF  x03
3A80:  MOVLW  37
3A82:  MOVWF  x04
3A84:  CLRF   x05
3A86:  MOVLW  01
3A88:  MOVWF  x06
3A8A:  MOVLB  0
3A8C:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3A90:  MOVLW  04
3A92:  MOVWF  FEA
3A94:  MOVLW  E1
3A96:  MOVWF  FE9
3A98:  MOVFF  FF2,501
3A9C:  BCF    FF2.7
3A9E:  MOVLW  00
3AA0:  CALL   08DE
3AA4:  TBLRD*-
3AA6:  TBLRD*+
3AA8:  MOVF   FF5,W
3AAA:  MOVWF  FEE
3AAC:  IORLW  00
3AAE:  BNZ   3AA6
3AB0:  MOVLB  5
3AB2:  BTFSC  x01.7
3AB4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3AB6:  MOVLW  04
3AB8:  MOVWF  x02
3ABA:  MOVLW  E1
3ABC:  MOVWF  x01
3ABE:  CLRF   x03
3AC0:  MOVLW  1A
3AC2:  MOVWF  x04
3AC4:  CLRF   x05
3AC6:  MOVLW  01
3AC8:  MOVWF  x06
3ACA:  MOVLB  0
3ACC:  CALL   162E
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
3AD0:  MOVLW  04
3AD2:  MOVWF  FEA
3AD4:  MOVLW  E1
3AD6:  MOVWF  FE9
3AD8:  MOVFF  FF2,501
3ADC:  BCF    FF2.7
3ADE:  MOVLW  00
3AE0:  CALL   090A
3AE4:  TBLRD*-
3AE6:  TBLRD*+
3AE8:  MOVF   FF5,W
3AEA:  MOVWF  FEE
3AEC:  IORLW  00
3AEE:  BNZ   3AE6
3AF0:  MOVLB  5
3AF2:  BTFSC  x01.7
3AF4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3AF6:  MOVLW  04
3AF8:  MOVWF  x02
3AFA:  MOVLW  E1
3AFC:  MOVWF  x01
3AFE:  CLRF   x03
3B00:  MOVLW  24
3B02:  MOVWF  x04
3B04:  CLRF   x05
3B06:  MOVLW  01
3B08:  MOVWF  x06
3B0A:  MOVLB  0
3B0C:  CALL   162E
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3B10:  MOVLW  04
3B12:  MOVWF  FEA
3B14:  MOVLW  E1
3B16:  MOVWF  FE9
3B18:  MOVFF  FF2,501
3B1C:  BCF    FF2.7
3B1E:  MOVLW  00
3B20:  CALL   093A
3B24:  TBLRD*-
3B26:  TBLRD*+
3B28:  MOVF   FF5,W
3B2A:  MOVWF  FEE
3B2C:  IORLW  00
3B2E:  BNZ   3B26
3B30:  MOVLB  5
3B32:  BTFSC  x01.7
3B34:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3B36:  MOVLW  04
3B38:  MOVWF  x02
3B3A:  MOVLW  E1
3B3C:  MOVWF  x01
3B3E:  CLRF   x03
3B40:  MOVLW  2E
3B42:  MOVWF  x04
3B44:  CLRF   x05
3B46:  MOVLW  01
3B48:  MOVWF  x06
3B4A:  MOVLB  0
3B4C:  CALL   162E
....................          visual=0; 
3B50:  MOVLB  4
3B52:  BCF    x95.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3B54:  BSF    F92.3
3B56:  BTFSS  F80.3
3B58:  BRA    3B7A
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3B5A:  MOVLW  1E
3B5C:  MOVLB  5
3B5E:  MOVWF  x02
3B60:  MOVLB  0
3B62:  CALL   0F96
3B66:  MOVLW  01
3B68:  MOVLB  4
3B6A:  MOVWF  xA2
3B6C:  MOVLB  5
3B6E:  CLRF   x02
3B70:  MOVLB  0
3B72:  CALL   1000
3B76:  MOVLB  4
3B78:  BSF    x95.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3B7A:  BSF    F92.2
3B7C:  BTFSS  F80.2
3B7E:  BRA    3D28
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
3B80:  CLRF   xC2
3B82:  CLRF   xC3
3B84:  MOVLW  05
3B86:  MOVWF  xC4
3B88:  MOVLW  02
3B8A:  MOVWF  xC5
3B8C:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3B8E:  CLRF   xCA
3B90:  CLRF   xCB
3B92:  MOVLW  05
3B94:  MOVWF  xCC
3B96:  MOVLW  01
3B98:  MOVWF  xCD
3B9A:  CLRF   xB3
3B9C:  CLRF   xB2
3B9E:  MOVLW  79
3BA0:  MOVWF  xA5
3BA2:  MOVLW  14
3BA4:  MOVWF  xA2
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3BA6:  MOVWF  xA2
3BA8:  MOVLW  0F
3BAA:  MOVLB  5
3BAC:  MOVWF  x13
3BAE:  MOVLW  12
3BB0:  MOVWF  x14
3BB2:  MOVLW  1E
3BB4:  MOVWF  x15
3BB6:  MOVLW  35
3BB8:  MOVWF  x16
3BBA:  CLRF   x17
3BBC:  MOVLW  01
3BBE:  MOVWF  x18
3BC0:  MOVLB  0
3BC2:  CALL   156C
3BC6:  MOVLB  4
3BC8:  CLRF   xA9
3BCA:  MOVLW  C0
3BCC:  IORWF  FF2,F
3BCE:  MOVLB  5
3BD0:  CLRF   x02
3BD2:  MOVLB  0
3BD4:  CALL   1000
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3BD8:  MOVLW  04
3BDA:  MOVWF  FEA
3BDC:  MOVLW  E1
3BDE:  MOVWF  FE9
3BE0:  MOVFF  FF2,501
3BE4:  BCF    FF2.7
3BE6:  MOVLW  00
3BE8:  CALL   0964
3BEC:  TBLRD*-
3BEE:  TBLRD*+
3BF0:  MOVF   FF5,W
3BF2:  MOVWF  FEE
3BF4:  IORLW  00
3BF6:  BNZ   3BEE
3BF8:  MOVLB  5
3BFA:  BTFSC  x01.7
3BFC:  BSF    FF2.7
3BFE:  MOVLW  04
3C00:  MOVWF  x02
3C02:  MOVLW  E1
3C04:  MOVWF  x01
3C06:  CLRF   x03
3C08:  MOVLW  37
3C0A:  MOVWF  x04
3C0C:  MOVLW  02
3C0E:  MOVWF  x05
3C10:  MOVLW  01
3C12:  MOVWF  x06
3C14:  MOVLB  0
3C16:  CALL   162E
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3C1A:  MOVLW  0F
3C1C:  MOVLB  5
3C1E:  MOVWF  x13
3C20:  MOVLW  12
3C22:  MOVWF  x14
3C24:  MOVLW  1E
3C26:  MOVWF  x15
3C28:  MOVLW  35
3C2A:  MOVWF  x16
3C2C:  CLRF   x17
3C2E:  MOVLW  01
3C30:  MOVWF  x18
3C32:  MOVLB  0
3C34:  CALL   156C
....................          glcd_imagen(5); 
3C38:  MOVLW  05
3C3A:  MOVLB  5
3C3C:  MOVWF  x01
3C3E:  MOVLB  0
3C40:  CALL   2076
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3C44:  MOVLW  04
3C46:  MOVWF  FEA
3C48:  MOVLW  E1
3C4A:  MOVWF  FE9
3C4C:  MOVFF  FF2,501
3C50:  BCF    FF2.7
3C52:  MOVLW  00
3C54:  CALL   098A
3C58:  TBLRD*-
3C5A:  TBLRD*+
3C5C:  MOVF   FF5,W
3C5E:  MOVWF  FEE
3C60:  IORLW  00
3C62:  BNZ   3C5A
3C64:  MOVLB  5
3C66:  BTFSC  x01.7
3C68:  BSF    FF2.7
3C6A:  MOVLW  04
3C6C:  MOVWF  x02
3C6E:  MOVLW  E1
3C70:  MOVWF  x01
3C72:  CLRF   x03
3C74:  CLRF   x04
3C76:  MOVLW  02
3C78:  MOVWF  x05
3C7A:  MOVLW  01
3C7C:  MOVWF  x06
3C7E:  MOVLB  0
3C80:  CALL   162E
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3C84:  MOVLW  04
3C86:  MOVWF  FEA
3C88:  MOVLW  E1
3C8A:  MOVWF  FE9
3C8C:  MOVFF  FF2,501
3C90:  BCF    FF2.7
3C92:  MOVLW  00
3C94:  CALL   09AC
3C98:  TBLRD*-
3C9A:  TBLRD*+
3C9C:  MOVF   FF5,W
3C9E:  MOVWF  FEE
3CA0:  IORLW  00
3CA2:  BNZ   3C9A
3CA4:  MOVLB  5
3CA6:  BTFSC  x01.7
3CA8:  BSF    FF2.7
3CAA:  MOVLW  04
3CAC:  MOVWF  x02
3CAE:  MOVLW  E1
3CB0:  MOVWF  x01
3CB2:  CLRF   x03
3CB4:  MOVLW  08
3CB6:  MOVWF  x04
3CB8:  MOVLW  02
3CBA:  MOVWF  x05
3CBC:  MOVLW  01
3CBE:  MOVWF  x06
3CC0:  MOVLB  0
3CC2:  CALL   162E
....................          glcd_circle(95,40,2,NO,ON); 
3CC6:  MOVLW  5F
3CC8:  MOVLB  5
3CCA:  MOVWF  x01
3CCC:  MOVLW  28
3CCE:  MOVWF  x02
3CD0:  MOVLW  02
3CD2:  MOVWF  x03
3CD4:  CLRF   x04
3CD6:  MOVLW  01
3CD8:  MOVWF  x05
3CDA:  MOVLB  0
3CDC:  CALL   2172
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3CE0:  MOVLW  04
3CE2:  MOVWF  FEA
3CE4:  MOVLW  E1
3CE6:  MOVWF  FE9
3CE8:  MOVFF  FF2,501
3CEC:  BCF    FF2.7
3CEE:  MOVLW  00
3CF0:  CALL   09CE
3CF4:  TBLRD*-
3CF6:  TBLRD*+
3CF8:  MOVF   FF5,W
3CFA:  MOVWF  FEE
3CFC:  IORLW  00
3CFE:  BNZ   3CF6
3D00:  MOVLB  5
3D02:  BTFSC  x01.7
3D04:  BSF    FF2.7
3D06:  MOVLW  04
3D08:  MOVWF  x02
3D0A:  MOVLW  E1
3D0C:  MOVWF  x01
3D0E:  MOVLW  66
3D10:  MOVWF  x03
3D12:  MOVLW  28
3D14:  MOVWF  x04
3D16:  MOVLW  02
3D18:  MOVWF  x05
3D1A:  MOVWF  x06
3D1C:  MOVLB  0
3D1E:  CALL   162E
....................          MuestraTiemposProgramados(); 
3D22:  CALL   257A
3D26:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
3D28:  MOVF   xA2,W
3D2A:  SUBLW  05
3D2C:  BTFSS  FD8.2
3D2E:  BRA    3EF4
....................        
....................       if(visual==1) 
3D30:  BTFSS  x95.4
3D32:  BRA    3E8A
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
3D34:  MOVLW  04
3D36:  MOVLB  5
3D38:  MOVWF  x01
3D3A:  MOVLB  0
3D3C:  CALL   2076
....................          strcpy(Menus.Letra,"Liquidos"); 
3D40:  MOVLW  04
3D42:  MOVWF  FEA
3D44:  MOVLW  E1
3D46:  MOVWF  FE9
3D48:  MOVFF  FF2,501
3D4C:  BCF    FF2.7
3D4E:  MOVLW  00
3D50:  CALL   080C
3D54:  TBLRD*-
3D56:  TBLRD*+
3D58:  MOVF   FF5,W
3D5A:  MOVWF  FEE
3D5C:  IORLW  00
3D5E:  BNZ   3D56
3D60:  MOVLB  5
3D62:  BTFSC  x01.7
3D64:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3D66:  MOVLW  04
3D68:  MOVWF  x02
3D6A:  MOVLW  E1
3D6C:  MOVWF  x01
3D6E:  MOVLW  14
3D70:  MOVWF  x03
3D72:  CLRF   x04
3D74:  MOVLW  01
3D76:  MOVWF  x05
3D78:  MOVLW  02
3D7A:  MOVWF  x06
3D7C:  MOVLB  0
3D7E:  CALL   162E
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
3D82:  MOVLW  04
3D84:  MOVWF  FEA
3D86:  MOVLW  E1
3D88:  MOVWF  FE9
3D8A:  MOVFF  FF2,501
3D8E:  BCF    FF2.7
3D90:  MOVLW  00
3D92:  CALL   080C
3D96:  TBLRD*-
3D98:  TBLRD*+
3D9A:  MOVF   FF5,W
3D9C:  MOVWF  FEE
3D9E:  IORLW  00
3DA0:  BNZ   3D98
3DA2:  MOVLB  5
3DA4:  BTFSC  x01.7
3DA6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3DA8:  MOVLW  04
3DAA:  MOVWF  x02
3DAC:  MOVLW  E1
3DAE:  MOVWF  x01
3DB0:  MOVLW  07
3DB2:  MOVWF  x03
3DB4:  MOVLW  37
3DB6:  MOVWF  x04
3DB8:  MOVLW  02
3DBA:  MOVWF  x05
3DBC:  MOVLW  01
3DBE:  MOVWF  x06
3DC0:  MOVLB  0
3DC2:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3DC6:  MOVLW  04
3DC8:  MOVWF  FEA
3DCA:  MOVLW  E1
3DCC:  MOVWF  FE9
3DCE:  MOVFF  FF2,501
3DD2:  BCF    FF2.7
3DD4:  MOVLW  00
3DD6:  CALL   08DE
3DDA:  TBLRD*-
3DDC:  TBLRD*+
3DDE:  MOVF   FF5,W
3DE0:  MOVWF  FEE
3DE2:  IORLW  00
3DE4:  BNZ   3DDC
3DE6:  MOVLB  5
3DE8:  BTFSC  x01.7
3DEA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3DEC:  MOVLW  04
3DEE:  MOVWF  x02
3DF0:  MOVLW  E1
3DF2:  MOVWF  x01
3DF4:  CLRF   x03
3DF6:  MOVLW  1A
3DF8:  MOVWF  x04
3DFA:  CLRF   x05
3DFC:  MOVLW  01
3DFE:  MOVWF  x06
3E00:  MOVLB  0
3E02:  CALL   162E
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
3E06:  MOVLW  04
3E08:  MOVWF  FEA
3E0A:  MOVLW  E1
3E0C:  MOVWF  FE9
3E0E:  MOVFF  FF2,501
3E12:  BCF    FF2.7
3E14:  MOVLW  00
3E16:  CALL   09EA
3E1A:  TBLRD*-
3E1C:  TBLRD*+
3E1E:  MOVF   FF5,W
3E20:  MOVWF  FEE
3E22:  IORLW  00
3E24:  BNZ   3E1C
3E26:  MOVLB  5
3E28:  BTFSC  x01.7
3E2A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3E2C:  MOVLW  04
3E2E:  MOVWF  x02
3E30:  MOVLW  E1
3E32:  MOVWF  x01
3E34:  CLRF   x03
3E36:  MOVLW  24
3E38:  MOVWF  x04
3E3A:  CLRF   x05
3E3C:  MOVLW  01
3E3E:  MOVWF  x06
3E40:  MOVLB  0
3E42:  CALL   162E
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3E46:  MOVLW  04
3E48:  MOVWF  FEA
3E4A:  MOVLW  E1
3E4C:  MOVWF  FE9
3E4E:  MOVFF  FF2,501
3E52:  BCF    FF2.7
3E54:  MOVLW  00
3E56:  CALL   0A1A
3E5A:  TBLRD*-
3E5C:  TBLRD*+
3E5E:  MOVF   FF5,W
3E60:  MOVWF  FEE
3E62:  IORLW  00
3E64:  BNZ   3E5C
3E66:  MOVLB  5
3E68:  BTFSC  x01.7
3E6A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
3E6C:  MOVLW  04
3E6E:  MOVWF  x02
3E70:  MOVLW  E1
3E72:  MOVWF  x01
3E74:  CLRF   x03
3E76:  MOVLW  2E
3E78:  MOVWF  x04
3E7A:  CLRF   x05
3E7C:  MOVLW  01
3E7E:  MOVWF  x06
3E80:  MOVLB  0
3E82:  CALL   162E
....................          visual=0; 
3E86:  MOVLB  4
3E88:  BCF    x95.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
3E8A:  BSF    F92.3
3E8C:  BTFSS  F80.3
3E8E:  BRA    3EB0
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3E90:  MOVLW  1E
3E92:  MOVLB  5
3E94:  MOVWF  x02
3E96:  MOVLB  0
3E98:  CALL   0F96
3E9C:  MOVLW  01
3E9E:  MOVLB  4
3EA0:  MOVWF  xA2
3EA2:  MOVLB  5
3EA4:  CLRF   x02
3EA6:  MOVLB  0
3EA8:  CALL   1000
3EAC:  MOVLB  4
3EAE:  BSF    x95.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
3EB0:  BSF    F92.2
3EB2:  BTFSS  F80.2
3EB4:  BRA    3EF4
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
3EB6:  CLRF   xC2
3EB8:  CLRF   xC3
3EBA:  CLRF   xC4
3EBC:  MOVLW  02
3EBE:  MOVWF  xC5
3EC0:  BSF    x95.5
3EC2:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
3EC4:  CLRF   xCA
3EC6:  CLRF   xCB
3EC8:  CLRF   xCC
3ECA:  CLRF   xCD
3ECC:  MOVLW  79
3ECE:  MOVWF  xA5
3ED0:  MOVLW  0E
3ED2:  MOVWF  xA2
3ED4:  MOVLW  04
3ED6:  MOVLB  5
3ED8:  MOVWF  x01
3EDA:  MOVLW  AF
3EDC:  MOVWF  x02
3EDE:  MOVLB  0
3EE0:  CALL   0F96
3EE4:  MOVLB  5
3EE6:  DECFSZ x01,F
3EE8:  BRA    3EDA
3EEA:  CLRF   x02
3EEC:  MOVLB  0
3EEE:  CALL   1000
3EF2:  MOVLB  4
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
3EF4:  MOVF   xA2,W
3EF6:  SUBLW  06
3EF8:  BTFSS  FD8.2
3EFA:  BRA    40C0
....................        
....................       if(visual==1) 
3EFC:  BTFSS  x95.4
3EFE:  BRA    4054
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
3F00:  MOVLW  03
3F02:  MOVLB  5
3F04:  MOVWF  x01
3F06:  MOVLB  0
3F08:  CALL   2076
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
3F0C:  MOVLW  04
3F0E:  MOVWF  FEA
3F10:  MOVLW  E1
3F12:  MOVWF  FE9
3F14:  MOVFF  FF2,501
3F18:  BCF    FF2.7
3F1A:  MOVLW  00
3F1C:  CALL   0A44
3F20:  TBLRD*-
3F22:  TBLRD*+
3F24:  MOVF   FF5,W
3F26:  MOVWF  FEE
3F28:  IORLW  00
3F2A:  BNZ   3F22
3F2C:  MOVLB  5
3F2E:  BTFSC  x01.7
3F30:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3F32:  MOVLW  04
3F34:  MOVWF  x02
3F36:  MOVLW  E1
3F38:  MOVWF  x01
3F3A:  CLRF   x03
3F3C:  CLRF   x04
3F3E:  MOVLW  01
3F40:  MOVWF  x05
3F42:  MOVLW  02
3F44:  MOVWF  x06
3F46:  MOVLB  0
3F48:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
3F4C:  MOVLW  04
3F4E:  MOVWF  FEA
3F50:  MOVLW  E1
3F52:  MOVWF  FE9
3F54:  MOVFF  FF2,501
3F58:  BCF    FF2.7
3F5A:  MOVLW  00
3F5C:  CALL   0830
3F60:  TBLRD*-
3F62:  TBLRD*+
3F64:  MOVF   FF5,W
3F66:  MOVWF  FEE
3F68:  IORLW  00
3F6A:  BNZ   3F62
3F6C:  MOVLB  5
3F6E:  BTFSC  x01.7
3F70:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3F72:  MOVLW  04
3F74:  MOVWF  x02
3F76:  MOVLW  E1
3F78:  MOVWF  x01
3F7A:  MOVLW  07
3F7C:  MOVWF  x03
3F7E:  MOVLW  37
3F80:  MOVWF  x04
3F82:  MOVLW  02
3F84:  MOVWF  x05
3F86:  MOVLW  01
3F88:  MOVWF  x06
3F8A:  MOVLB  0
3F8C:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3F90:  MOVLW  04
3F92:  MOVWF  FEA
3F94:  MOVLW  E1
3F96:  MOVWF  FE9
3F98:  MOVFF  FF2,501
3F9C:  BCF    FF2.7
3F9E:  MOVLW  00
3FA0:  CALL   08DE
3FA4:  TBLRD*-
3FA6:  TBLRD*+
3FA8:  MOVF   FF5,W
3FAA:  MOVWF  FEE
3FAC:  IORLW  00
3FAE:  BNZ   3FA6
3FB0:  MOVLB  5
3FB2:  BTFSC  x01.7
3FB4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3FB6:  MOVLW  04
3FB8:  MOVWF  x02
3FBA:  MOVLW  E1
3FBC:  MOVWF  x01
3FBE:  CLRF   x03
3FC0:  MOVLW  1A
3FC2:  MOVWF  x04
3FC4:  CLRF   x05
3FC6:  MOVLW  01
3FC8:  MOVWF  x06
3FCA:  MOVLB  0
3FCC:  CALL   162E
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
3FD0:  MOVLW  04
3FD2:  MOVWF  FEA
3FD4:  MOVLW  E1
3FD6:  MOVWF  FE9
3FD8:  MOVFF  FF2,501
3FDC:  BCF    FF2.7
3FDE:  MOVLW  00
3FE0:  CALL   0A6A
3FE4:  TBLRD*-
3FE6:  TBLRD*+
3FE8:  MOVF   FF5,W
3FEA:  MOVWF  FEE
3FEC:  IORLW  00
3FEE:  BNZ   3FE6
3FF0:  MOVLB  5
3FF2:  BTFSC  x01.7
3FF4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3FF6:  MOVLW  04
3FF8:  MOVWF  x02
3FFA:  MOVLW  E1
3FFC:  MOVWF  x01
3FFE:  CLRF   x03
4000:  MOVLW  24
4002:  MOVWF  x04
4004:  CLRF   x05
4006:  MOVLW  01
4008:  MOVWF  x06
400A:  MOVLB  0
400C:  CALL   162E
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
4010:  MOVLW  04
4012:  MOVWF  FEA
4014:  MOVLW  E1
4016:  MOVWF  FE9
4018:  MOVFF  FF2,501
401C:  BCF    FF2.7
401E:  MOVLW  00
4020:  CALL   0A1A
4024:  TBLRD*-
4026:  TBLRD*+
4028:  MOVF   FF5,W
402A:  MOVWF  FEE
402C:  IORLW  00
402E:  BNZ   4026
4030:  MOVLB  5
4032:  BTFSC  x01.7
4034:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4036:  MOVLW  04
4038:  MOVWF  x02
403A:  MOVLW  E1
403C:  MOVWF  x01
403E:  CLRF   x03
4040:  MOVLW  2E
4042:  MOVWF  x04
4044:  CLRF   x05
4046:  MOVLW  01
4048:  MOVWF  x06
404A:  MOVLB  0
404C:  CALL   162E
....................          visual=0; 
4050:  MOVLB  4
4052:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4054:  BSF    F92.3
4056:  BTFSS  F80.3
4058:  BRA    407A
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
405A:  MOVLW  1E
405C:  MOVLB  5
405E:  MOVWF  x02
4060:  MOVLB  0
4062:  CALL   0F96
4066:  MOVLW  01
4068:  MOVLB  4
406A:  MOVWF  xA2
406C:  MOVLB  5
406E:  CLRF   x02
4070:  MOVLB  0
4072:  CALL   1000
4076:  MOVLB  4
4078:  BSF    x95.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
407A:  BSF    F92.2
407C:  BTFSS  F80.2
407E:  BRA    40C0
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
4080:  CLRF   xC2
4082:  CLRF   xC3
4084:  MOVLW  05
4086:  MOVWF  xC4
4088:  MOVLW  01
408A:  MOVWF  xC5
408C:  BSF    x95.5
408E:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
4090:  CLRF   xCA
4092:  CLRF   xCB
4094:  CLRF   xCC
4096:  CLRF   xCD
4098:  MOVLW  79
409A:  MOVWF  xA5
409C:  MOVLW  0E
409E:  MOVWF  xA2
40A0:  MOVLW  04
40A2:  MOVLB  5
40A4:  MOVWF  x01
40A6:  MOVLW  AF
40A8:  MOVWF  x02
40AA:  MOVLB  0
40AC:  CALL   0F96
40B0:  MOVLB  5
40B2:  DECFSZ x01,F
40B4:  BRA    40A6
40B6:  CLRF   x02
40B8:  MOVLB  0
40BA:  CALL   1000
40BE:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
40C0:  MOVF   xA2,W
40C2:  SUBLW  07
40C4:  BTFSS  FD8.2
40C6:  BRA    4406
....................        
....................       if(visual==1) 
40C8:  BTFSS  x95.4
40CA:  BRA    421E
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
40CC:  MOVLW  01
40CE:  MOVLB  5
40D0:  MOVWF  x01
40D2:  MOVLB  0
40D4:  CALL   2076
....................          strcpy(Menus.Letra,"Tex & Ins"); 
40D8:  MOVLW  04
40DA:  MOVWF  FEA
40DC:  MOVLW  E1
40DE:  MOVWF  FE9
40E0:  MOVFF  FF2,501
40E4:  BCF    FF2.7
40E6:  MOVLW  00
40E8:  CALL   0A9A
40EC:  TBLRD*-
40EE:  TBLRD*+
40F0:  MOVF   FF5,W
40F2:  MOVWF  FEE
40F4:  IORLW  00
40F6:  BNZ   40EE
40F8:  MOVLB  5
40FA:  BTFSC  x01.7
40FC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
40FE:  MOVLW  04
4100:  MOVWF  x02
4102:  MOVLW  E1
4104:  MOVWF  x01
4106:  CLRF   x03
4108:  CLRF   x04
410A:  MOVLW  01
410C:  MOVWF  x05
410E:  MOVLW  02
4110:  MOVWF  x06
4112:  MOVLB  0
4114:  CALL   162E
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
4118:  MOVLW  04
411A:  MOVWF  FEA
411C:  MOVLW  E1
411E:  MOVWF  FE9
4120:  MOVFF  FF2,501
4124:  BCF    FF2.7
4126:  MOVLW  00
4128:  CALL   085E
412C:  TBLRD*-
412E:  TBLRD*+
4130:  MOVF   FF5,W
4132:  MOVWF  FEE
4134:  IORLW  00
4136:  BNZ   412E
4138:  MOVLB  5
413A:  BTFSC  x01.7
413C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
413E:  MOVLW  04
4140:  MOVWF  x02
4142:  MOVLW  E1
4144:  MOVWF  x01
4146:  CLRF   x03
4148:  MOVLW  37
414A:  MOVWF  x04
414C:  MOVLW  02
414E:  MOVWF  x05
4150:  MOVLW  01
4152:  MOVWF  x06
4154:  MOVLB  0
4156:  CALL   162E
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
415A:  MOVLW  04
415C:  MOVWF  FEA
415E:  MOVLW  E1
4160:  MOVWF  FE9
4162:  MOVFF  FF2,501
4166:  BCF    FF2.7
4168:  MOVLW  00
416A:  CALL   08DE
416E:  TBLRD*-
4170:  TBLRD*+
4172:  MOVF   FF5,W
4174:  MOVWF  FEE
4176:  IORLW  00
4178:  BNZ   4170
417A:  MOVLB  5
417C:  BTFSC  x01.7
417E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4180:  MOVLW  04
4182:  MOVWF  x02
4184:  MOVLW  E1
4186:  MOVWF  x01
4188:  CLRF   x03
418A:  MOVLW  1A
418C:  MOVWF  x04
418E:  CLRF   x05
4190:  MOVLW  01
4192:  MOVWF  x06
4194:  MOVLB  0
4196:  CALL   162E
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
419A:  MOVLW  04
419C:  MOVWF  FEA
419E:  MOVLW  E1
41A0:  MOVWF  FE9
41A2:  MOVFF  FF2,501
41A6:  BCF    FF2.7
41A8:  MOVLW  00
41AA:  CALL   090A
41AE:  TBLRD*-
41B0:  TBLRD*+
41B2:  MOVF   FF5,W
41B4:  MOVWF  FEE
41B6:  IORLW  00
41B8:  BNZ   41B0
41BA:  MOVLB  5
41BC:  BTFSC  x01.7
41BE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
41C0:  MOVLW  04
41C2:  MOVWF  x02
41C4:  MOVLW  E1
41C6:  MOVWF  x01
41C8:  CLRF   x03
41CA:  MOVLW  24
41CC:  MOVWF  x04
41CE:  CLRF   x05
41D0:  MOVLW  01
41D2:  MOVWF  x06
41D4:  MOVLB  0
41D6:  CALL   162E
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
41DA:  MOVLW  04
41DC:  MOVWF  FEA
41DE:  MOVLW  E1
41E0:  MOVWF  FE9
41E2:  MOVFF  FF2,501
41E6:  BCF    FF2.7
41E8:  MOVLW  00
41EA:  CALL   0ABE
41EE:  TBLRD*-
41F0:  TBLRD*+
41F2:  MOVF   FF5,W
41F4:  MOVWF  FEE
41F6:  IORLW  00
41F8:  BNZ   41F0
41FA:  MOVLB  5
41FC:  BTFSC  x01.7
41FE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4200:  MOVLW  04
4202:  MOVWF  x02
4204:  MOVLW  E1
4206:  MOVWF  x01
4208:  CLRF   x03
420A:  MOVLW  2E
420C:  MOVWF  x04
420E:  CLRF   x05
4210:  MOVLW  01
4212:  MOVWF  x06
4214:  MOVLB  0
4216:  CALL   162E
....................          visual=0; 
421A:  MOVLB  4
421C:  BCF    x95.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
421E:  BSF    F92.3
4220:  BTFSS  F80.3
4222:  BRA    4244
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4224:  MOVLW  1E
4226:  MOVLB  5
4228:  MOVWF  x02
422A:  MOVLB  0
422C:  CALL   0F96
4230:  MOVLW  01
4232:  MOVLB  4
4234:  MOVWF  xA2
4236:  MOVLB  5
4238:  CLRF   x02
423A:  MOVLB  0
423C:  CALL   1000
4240:  MOVLB  4
4242:  BSF    x95.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
4244:  BSF    F92.2
4246:  BTFSS  F80.2
4248:  BRA    4406
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
424A:  CLRF   xC2
424C:  CLRF   xC3
424E:  MOVLW  05
4250:  MOVWF  xC4
4252:  MOVLW  02
4254:  MOVWF  xC5
4256:  BSF    x95.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
4258:  CLRF   xCA
425A:  CLRF   xCB
425C:  CLRF   xCC
425E:  MOVLW  01
4260:  MOVWF  xCD
4262:  MOVLW  79
4264:  MOVWF  xA5
4266:  MOVLW  14
4268:  MOVWF  xA2
426A:  MOVLW  04
426C:  MOVLB  5
426E:  MOVWF  x01
4270:  MOVLW  AF
4272:  MOVWF  x02
4274:  MOVLB  0
4276:  CALL   0F96
427A:  MOVLB  5
427C:  DECFSZ x01,F
427E:  BRA    4270
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
4280:  MOVLW  14
4282:  MOVLB  4
4284:  MOVWF  xA2
4286:  MOVLW  0F
4288:  MOVLB  5
428A:  MOVWF  x13
428C:  MOVLW  12
428E:  MOVWF  x14
4290:  MOVLW  1E
4292:  MOVWF  x15
4294:  MOVLW  35
4296:  MOVWF  x16
4298:  CLRF   x17
429A:  MOVLW  01
429C:  MOVWF  x18
429E:  MOVLB  0
42A0:  CALL   156C
42A4:  MOVLB  4
42A6:  CLRF   xA9
42A8:  MOVLW  C0
42AA:  IORWF  FF2,F
42AC:  MOVLB  5
42AE:  CLRF   x02
42B0:  MOVLB  0
42B2:  CALL   1000
....................          strcpy(Menus.Letra,"Calentando"); 
42B6:  MOVLW  04
42B8:  MOVWF  FEA
42BA:  MOVLW  E1
42BC:  MOVWF  FE9
42BE:  MOVFF  FF2,501
42C2:  BCF    FF2.7
42C4:  MOVLW  00
42C6:  CALL   0964
42CA:  TBLRD*-
42CC:  TBLRD*+
42CE:  MOVF   FF5,W
42D0:  MOVWF  FEE
42D2:  IORLW  00
42D4:  BNZ   42CC
42D6:  MOVLB  5
42D8:  BTFSC  x01.7
42DA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
42DC:  MOVLW  04
42DE:  MOVWF  x02
42E0:  MOVLW  E1
42E2:  MOVWF  x01
42E4:  CLRF   x03
42E6:  MOVLW  37
42E8:  MOVWF  x04
42EA:  MOVLW  02
42EC:  MOVWF  x05
42EE:  MOVLW  01
42F0:  MOVWF  x06
42F2:  MOVLB  0
42F4:  CALL   162E
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
42F8:  MOVLW  0F
42FA:  MOVLB  5
42FC:  MOVWF  x13
42FE:  MOVLW  12
4300:  MOVWF  x14
4302:  MOVLW  1E
4304:  MOVWF  x15
4306:  MOVLW  35
4308:  MOVWF  x16
430A:  CLRF   x17
430C:  MOVLW  01
430E:  MOVWF  x18
4310:  MOVLB  0
4312:  CALL   156C
....................          glcd_imagen(5); 
4316:  MOVLW  05
4318:  MOVLB  5
431A:  MOVWF  x01
431C:  MOVLB  0
431E:  CALL   2076
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4322:  MOVLW  04
4324:  MOVWF  FEA
4326:  MOVLW  E1
4328:  MOVWF  FE9
432A:  MOVFF  FF2,501
432E:  BCF    FF2.7
4330:  MOVLW  00
4332:  CALL   098A
4336:  TBLRD*-
4338:  TBLRD*+
433A:  MOVF   FF5,W
433C:  MOVWF  FEE
433E:  IORLW  00
4340:  BNZ   4338
4342:  MOVLB  5
4344:  BTFSC  x01.7
4346:  BSF    FF2.7
4348:  MOVLW  04
434A:  MOVWF  x02
434C:  MOVLW  E1
434E:  MOVWF  x01
4350:  CLRF   x03
4352:  CLRF   x04
4354:  MOVLW  02
4356:  MOVWF  x05
4358:  MOVLW  01
435A:  MOVWF  x06
435C:  MOVLB  0
435E:  CALL   162E
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
4362:  MOVLW  04
4364:  MOVWF  FEA
4366:  MOVLW  E1
4368:  MOVWF  FE9
436A:  MOVFF  FF2,501
436E:  BCF    FF2.7
4370:  MOVLW  00
4372:  CALL   09AC
4376:  TBLRD*-
4378:  TBLRD*+
437A:  MOVF   FF5,W
437C:  MOVWF  FEE
437E:  IORLW  00
4380:  BNZ   4378
4382:  MOVLB  5
4384:  BTFSC  x01.7
4386:  BSF    FF2.7
4388:  MOVLW  04
438A:  MOVWF  x02
438C:  MOVLW  E1
438E:  MOVWF  x01
4390:  CLRF   x03
4392:  MOVLW  08
4394:  MOVWF  x04
4396:  MOVLW  02
4398:  MOVWF  x05
439A:  MOVLW  01
439C:  MOVWF  x06
439E:  MOVLB  0
43A0:  CALL   162E
....................          glcd_circle(95,40,2,NO,ON); 
43A4:  MOVLW  5F
43A6:  MOVLB  5
43A8:  MOVWF  x01
43AA:  MOVLW  28
43AC:  MOVWF  x02
43AE:  MOVLW  02
43B0:  MOVWF  x03
43B2:  CLRF   x04
43B4:  MOVLW  01
43B6:  MOVWF  x05
43B8:  MOVLB  0
43BA:  CALL   2172
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
43BE:  MOVLW  04
43C0:  MOVWF  FEA
43C2:  MOVLW  E1
43C4:  MOVWF  FE9
43C6:  MOVFF  FF2,501
43CA:  BCF    FF2.7
43CC:  MOVLW  00
43CE:  CALL   09CE
43D2:  TBLRD*-
43D4:  TBLRD*+
43D6:  MOVF   FF5,W
43D8:  MOVWF  FEE
43DA:  IORLW  00
43DC:  BNZ   43D4
43DE:  MOVLB  5
43E0:  BTFSC  x01.7
43E2:  BSF    FF2.7
43E4:  MOVLW  04
43E6:  MOVWF  x02
43E8:  MOVLW  E1
43EA:  MOVWF  x01
43EC:  MOVLW  66
43EE:  MOVWF  x03
43F0:  MOVLW  28
43F2:  MOVWF  x04
43F4:  MOVLW  02
43F6:  MOVWF  x05
43F8:  MOVWF  x06
43FA:  MOVLB  0
43FC:  CALL   162E
....................          MuestraTiemposProgramados(); 
4400:  CALL   257A
4404:  MOVLB  4
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
4406:  MOVF   xA2,W
4408:  SUBLW  08
440A:  BTFSS  FD8.2
440C:  BRA    47EA
....................          
....................          if(visual==1) 
440E:  BTFSS  x95.4
4410:  BRA    4736
....................          { 
....................             if(Opcion>5) 
4412:  MOVF   xA7,W
4414:  SUBLW  05
4416:  BC    441C
....................             {Opcion=1;} 
4418:  MOVLW  01
441A:  MOVWF  xA7
....................             if(Opcion<1) 
441C:  MOVF   xA7,F
441E:  BNZ   4424
....................             {Opcion=5;} 
4420:  MOVLW  05
4422:  MOVWF  xA7
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
4424:  MOVLW  04
4426:  MOVWF  FEA
4428:  MOVLW  E1
442A:  MOVWF  FE9
442C:  MOVFF  FF2,501
4430:  BCF    FF2.7
4432:  MOVLW  00
4434:  MOVLB  0
4436:  CALL   0AE8
443A:  TBLRD*-
443C:  TBLRD*+
443E:  MOVF   FF5,W
4440:  MOVWF  FEE
4442:  IORLW  00
4444:  BNZ   443C
4446:  MOVLB  5
4448:  BTFSC  x01.7
444A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
444C:  MOVLW  04
444E:  MOVWF  x02
4450:  MOVLW  E1
4452:  MOVWF  x01
4454:  CLRF   x03
4456:  CLRF   x04
4458:  MOVLW  01
445A:  MOVWF  x05
445C:  MOVWF  x06
445E:  MOVLB  0
4460:  CALL   162E
....................        
....................             if(Opcion==1)    
4464:  MOVLB  4
4466:  DECFSZ xA7,W
4468:  BRA    44B0
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
446A:  MOVLW  04
446C:  MOVWF  FEA
446E:  MOVLW  E1
4470:  MOVWF  FE9
4472:  MOVFF  FF2,501
4476:  BCF    FF2.7
4478:  MOVLW  00
447A:  MOVLB  0
447C:  CALL   0B18
4480:  TBLRD*-
4482:  TBLRD*+
4484:  MOVF   FF5,W
4486:  MOVWF  FEE
4488:  IORLW  00
448A:  BNZ   4482
448C:  MOVLB  5
448E:  BTFSC  x01.7
4490:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
4492:  MOVLW  04
4494:  MOVWF  x02
4496:  MOVLW  E1
4498:  MOVWF  x01
449A:  CLRF   x03
449C:  MOVLW  0A
449E:  MOVWF  x04
44A0:  MOVLW  01
44A2:  MOVWF  x05
44A4:  MOVWF  x06
44A6:  MOVLB  0
44A8:  CALL   162E
....................             else 
44AC:  BRA    44F2
44AE:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
44B0:  MOVLW  04
44B2:  MOVWF  FEA
44B4:  MOVLW  E1
44B6:  MOVWF  FE9
44B8:  MOVFF  FF2,501
44BC:  BCF    FF2.7
44BE:  MOVLW  00
44C0:  MOVLB  0
44C2:  CALL   0B18
44C6:  TBLRD*-
44C8:  TBLRD*+
44CA:  MOVF   FF5,W
44CC:  MOVWF  FEE
44CE:  IORLW  00
44D0:  BNZ   44C8
44D2:  MOVLB  5
44D4:  BTFSC  x01.7
44D6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
44D8:  MOVLW  04
44DA:  MOVWF  x02
44DC:  MOVLW  E1
44DE:  MOVWF  x01
44E0:  CLRF   x03
44E2:  MOVLW  0A
44E4:  MOVWF  x04
44E6:  CLRF   x05
44E8:  MOVLW  01
44EA:  MOVWF  x06
44EC:  MOVLB  0
44EE:  CALL   162E
....................              
....................             if(Opcion==2)    
44F2:  MOVLB  4
44F4:  MOVF   xA7,W
44F6:  SUBLW  02
44F8:  BNZ   4540
....................                {strcpy(Menus.Letra,"T. Secado"); 
44FA:  MOVLW  04
44FC:  MOVWF  FEA
44FE:  MOVLW  E1
4500:  MOVWF  FE9
4502:  MOVFF  FF2,501
4506:  BCF    FF2.7
4508:  MOVLW  00
450A:  MOVLB  0
450C:  CALL   0B44
4510:  TBLRD*-
4512:  TBLRD*+
4514:  MOVF   FF5,W
4516:  MOVWF  FEE
4518:  IORLW  00
451A:  BNZ   4512
451C:  MOVLB  5
451E:  BTFSC  x01.7
4520:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
4522:  MOVLW  04
4524:  MOVWF  x02
4526:  MOVLW  E1
4528:  MOVWF  x01
452A:  CLRF   x03
452C:  MOVLW  14
452E:  MOVWF  x04
4530:  MOVLW  01
4532:  MOVWF  x05
4534:  MOVWF  x06
4536:  MOVLB  0
4538:  CALL   162E
....................             else 
453C:  BRA    4582
453E:  MOVLB  4
....................                {strcpy(Menus.Letra,"T. Secado"); 
4540:  MOVLW  04
4542:  MOVWF  FEA
4544:  MOVLW  E1
4546:  MOVWF  FE9
4548:  MOVFF  FF2,501
454C:  BCF    FF2.7
454E:  MOVLW  00
4550:  MOVLB  0
4552:  CALL   0B44
4556:  TBLRD*-
4558:  TBLRD*+
455A:  MOVF   FF5,W
455C:  MOVWF  FEE
455E:  IORLW  00
4560:  BNZ   4558
4562:  MOVLB  5
4564:  BTFSC  x01.7
4566:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
4568:  MOVLW  04
456A:  MOVWF  x02
456C:  MOVLW  E1
456E:  MOVWF  x01
4570:  CLRF   x03
4572:  MOVLW  14
4574:  MOVWF  x04
4576:  CLRF   x05
4578:  MOVLW  01
457A:  MOVWF  x06
457C:  MOVLB  0
457E:  CALL   162E
....................                 
....................              if(Opcion==3)    
4582:  MOVLB  4
4584:  MOVF   xA7,W
4586:  SUBLW  03
4588:  BNZ   45D0
....................                {strcpy(Menus.Letra,"Temperatura"); 
458A:  MOVLW  04
458C:  MOVWF  FEA
458E:  MOVLW  E1
4590:  MOVWF  FE9
4592:  MOVFF  FF2,501
4596:  BCF    FF2.7
4598:  MOVLW  00
459A:  MOVLB  0
459C:  CALL   0B68
45A0:  TBLRD*-
45A2:  TBLRD*+
45A4:  MOVF   FF5,W
45A6:  MOVWF  FEE
45A8:  IORLW  00
45AA:  BNZ   45A2
45AC:  MOVLB  5
45AE:  BTFSC  x01.7
45B0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
45B2:  MOVLW  04
45B4:  MOVWF  x02
45B6:  MOVLW  E1
45B8:  MOVWF  x01
45BA:  CLRF   x03
45BC:  MOVLW  1E
45BE:  MOVWF  x04
45C0:  MOVLW  01
45C2:  MOVWF  x05
45C4:  MOVWF  x06
45C6:  MOVLB  0
45C8:  CALL   162E
....................             else 
45CC:  BRA    4612
45CE:  MOVLB  4
....................                {strcpy(Menus.Letra,"Temperatura"); 
45D0:  MOVLW  04
45D2:  MOVWF  FEA
45D4:  MOVLW  E1
45D6:  MOVWF  FE9
45D8:  MOVFF  FF2,501
45DC:  BCF    FF2.7
45DE:  MOVLW  00
45E0:  MOVLB  0
45E2:  CALL   0B68
45E6:  TBLRD*-
45E8:  TBLRD*+
45EA:  MOVF   FF5,W
45EC:  MOVWF  FEE
45EE:  IORLW  00
45F0:  BNZ   45E8
45F2:  MOVLB  5
45F4:  BTFSC  x01.7
45F6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
45F8:  MOVLW  04
45FA:  MOVWF  x02
45FC:  MOVLW  E1
45FE:  MOVWF  x01
4600:  CLRF   x03
4602:  MOVLW  1E
4604:  MOVWF  x04
4606:  CLRF   x05
4608:  MOVLW  01
460A:  MOVWF  x06
460C:  MOVLB  0
460E:  CALL   162E
....................                 
....................             if(Opcion==4)    
4612:  MOVLB  4
4614:  MOVF   xA7,W
4616:  SUBLW  04
4618:  BNZ   4660
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
461A:  MOVLW  04
461C:  MOVWF  FEA
461E:  MOVLW  E1
4620:  MOVWF  FE9
4622:  MOVFF  FF2,501
4626:  BCF    FF2.7
4628:  MOVLW  00
462A:  MOVLB  0
462C:  CALL   0B8E
4630:  TBLRD*-
4632:  TBLRD*+
4634:  MOVF   FF5,W
4636:  MOVWF  FEE
4638:  IORLW  00
463A:  BNZ   4632
463C:  MOVLB  5
463E:  BTFSC  x01.7
4640:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
4642:  MOVLW  04
4644:  MOVWF  x02
4646:  MOVLW  E1
4648:  MOVWF  x01
464A:  CLRF   x03
464C:  MOVLW  28
464E:  MOVWF  x04
4650:  MOVLW  01
4652:  MOVWF  x05
4654:  MOVWF  x06
4656:  MOVLB  0
4658:  CALL   162E
....................             else 
465C:  BRA    46A2
465E:  MOVLB  4
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4660:  MOVLW  04
4662:  MOVWF  FEA
4664:  MOVLW  E1
4666:  MOVWF  FE9
4668:  MOVFF  FF2,501
466C:  BCF    FF2.7
466E:  MOVLW  00
4670:  MOVLB  0
4672:  CALL   0B8E
4676:  TBLRD*-
4678:  TBLRD*+
467A:  MOVF   FF5,W
467C:  MOVWF  FEE
467E:  IORLW  00
4680:  BNZ   4678
4682:  MOVLB  5
4684:  BTFSC  x01.7
4686:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
4688:  MOVLW  04
468A:  MOVWF  x02
468C:  MOVLW  E1
468E:  MOVWF  x01
4690:  CLRF   x03
4692:  MOVLW  28
4694:  MOVWF  x04
4696:  CLRF   x05
4698:  MOVLW  01
469A:  MOVWF  x06
469C:  MOVLB  0
469E:  CALL   162E
....................                 
....................             if(Opcion==5)    
46A2:  MOVLB  4
46A4:  MOVF   xA7,W
46A6:  SUBLW  05
46A8:  BNZ   46F0
....................                {strcpy(Menus.Letra,"Continuar"); 
46AA:  MOVLW  04
46AC:  MOVWF  FEA
46AE:  MOVLW  E1
46B0:  MOVWF  FE9
46B2:  MOVFF  FF2,501
46B6:  BCF    FF2.7
46B8:  MOVLW  00
46BA:  MOVLB  0
46BC:  CALL   0BBA
46C0:  TBLRD*-
46C2:  TBLRD*+
46C4:  MOVF   FF5,W
46C6:  MOVWF  FEE
46C8:  IORLW  00
46CA:  BNZ   46C2
46CC:  MOVLB  5
46CE:  BTFSC  x01.7
46D0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
46D2:  MOVLW  04
46D4:  MOVWF  x02
46D6:  MOVLW  E1
46D8:  MOVWF  x01
46DA:  CLRF   x03
46DC:  MOVLW  32
46DE:  MOVWF  x04
46E0:  MOVLW  01
46E2:  MOVWF  x05
46E4:  MOVWF  x06
46E6:  MOVLB  0
46E8:  CALL   162E
....................             else 
46EC:  BRA    4732
46EE:  MOVLB  4
....................                {strcpy(Menus.Letra,"Continuar"); 
46F0:  MOVLW  04
46F2:  MOVWF  FEA
46F4:  MOVLW  E1
46F6:  MOVWF  FE9
46F8:  MOVFF  FF2,501
46FC:  BCF    FF2.7
46FE:  MOVLW  00
4700:  MOVLB  0
4702:  CALL   0BBA
4706:  TBLRD*-
4708:  TBLRD*+
470A:  MOVF   FF5,W
470C:  MOVWF  FEE
470E:  IORLW  00
4710:  BNZ   4708
4712:  MOVLB  5
4714:  BTFSC  x01.7
4716:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
4718:  MOVLW  04
471A:  MOVWF  x02
471C:  MOVLW  E1
471E:  MOVWF  x01
4720:  CLRF   x03
4722:  MOVLW  32
4724:  MOVWF  x04
4726:  CLRF   x05
4728:  MOVLW  01
472A:  MOVWF  x06
472C:  MOVLB  0
472E:  CALL   162E
....................                           
....................             visual=0; 
4732:  MOVLB  4
4734:  BCF    x95.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
4736:  BSF    F92.0
4738:  BTFSS  F80.0
473A:  BRA    4756
....................          {  if(Flanco == 0)  
473C:  BTFSC  x95.0
473E:  BRA    4754
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4740:  BSF    x95.0
4742:  MOVLW  1E
4744:  MOVLB  5
4746:  MOVWF  x02
4748:  MOVLB  0
474A:  CALL   0F96
474E:  MOVLB  4
4750:  DECF   xA7,F
4752:  BSF    x95.4
....................                } 
....................          } 
....................             else 
4754:  BRA    4758
....................                {Flanco = 0;} 
4756:  BCF    x95.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4758:  BSF    F92.1
475A:  BTFSS  F80.1
475C:  BRA    4778
....................          {  if(Flanco2 == 0)  
475E:  BTFSC  x95.2
4760:  BRA    4776
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4762:  BSF    x95.2
4764:  MOVLW  1E
4766:  MOVLB  5
4768:  MOVWF  x02
476A:  MOVLB  0
476C:  CALL   0F96
4770:  MOVLB  4
4772:  INCF   xA7,F
4774:  BSF    x95.4
....................                }      
....................          } 
....................             else 
4776:  BRA    477A
....................                {Flanco2 = 0;}   
4778:  BCF    x95.2
....................                 
....................          if(RIGHT)//Si oprime SET 
477A:  BSF    F92.2
477C:  BTFSS  F80.2
477E:  BRA    47B8
....................          {  if(Flanco1 == 0)  
4780:  BTFSC  x95.1
4782:  BRA    47B6
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4784:  BSF    x95.1
4786:  MOVLW  02
4788:  MOVLB  5
478A:  MOVWF  x01
478C:  MOVLW  96
478E:  MOVWF  x02
4790:  MOVLB  0
4792:  CALL   0F96
4796:  MOVLB  5
4798:  DECFSZ x01,F
479A:  BRA    478C
479C:  MOVLW  0A
479E:  MOVLB  4
47A0:  ADDWF  xA7,W
47A2:  MOVWF  xA2
47A4:  MOVLW  01
47A6:  MOVWF  xA7
47A8:  MOVLB  5
47AA:  CLRF   x02
47AC:  MOVLB  0
47AE:  CALL   1000
47B2:  MOVLB  4
47B4:  BSF    x95.4
....................                } 
....................          } 
....................             else 
47B6:  BRA    47BA
....................                {Flanco1 = 0;}   
47B8:  BCF    x95.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
47BA:  BSF    F92.3
47BC:  BTFSS  F80.3
47BE:  BRA    47EA
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
47C0:  MOVLW  04
47C2:  MOVLB  5
47C4:  MOVWF  x01
47C6:  MOVLW  AF
47C8:  MOVWF  x02
47CA:  MOVLB  0
47CC:  CALL   0F96
47D0:  MOVLB  5
47D2:  DECFSZ x01,F
47D4:  BRA    47C6
47D6:  MOVLW  01
47D8:  MOVLB  4
47DA:  MOVWF  xA2
47DC:  MOVLB  5
47DE:  CLRF   x02
47E0:  MOVLB  0
47E2:  CALL   1000
47E6:  MOVLB  4
47E8:  BSF    x95.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
47EA:  MOVF   xA2,W
47EC:  SUBLW  09
47EE:  BTFSS  FD8.2
47F0:  BRA    4CA6
....................          
....................       strcpy(Menus.Letra,"Clave"); 
47F2:  MOVLW  04
47F4:  MOVWF  FEA
47F6:  MOVLW  E1
47F8:  MOVWF  FE9
47FA:  MOVFF  FF2,501
47FE:  BCF    FF2.7
4800:  MOVLW  00
4802:  MOVLB  0
4804:  CALL   0756
4808:  TBLRD*-
480A:  TBLRD*+
480C:  MOVF   FF5,W
480E:  MOVWF  FEE
4810:  IORLW  00
4812:  BNZ   480A
4814:  MOVLB  5
4816:  BTFSC  x01.7
4818:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
481A:  MOVLW  04
481C:  MOVWF  x02
481E:  MOVLW  E1
4820:  MOVWF  x01
4822:  MOVLW  1E
4824:  MOVWF  x03
4826:  CLRF   x04
4828:  MOVLW  01
482A:  MOVWF  x05
482C:  MOVLW  02
482E:  MOVWF  x06
4830:  MOVLB  0
4832:  CALL   162E
....................        
....................       if(unidad==1) 
4836:  MOVLB  4
4838:  DECFSZ xA3,W
483A:  BRA    489A
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
483C:  MOVFF  4CE,503
4840:  MOVLW  14
4842:  MOVLB  5
4844:  MOVWF  x04
4846:  MOVLW  1E
4848:  MOVWF  x05
484A:  MOVLW  01
484C:  MOVWF  x06
484E:  MOVLB  0
4850:  CALL   185C
....................          displayContrasena(Contrasena[1],40,30,0); 
4854:  MOVFF  4CF,503
4858:  MOVLW  28
485A:  MOVLB  5
485C:  MOVWF  x04
485E:  MOVLW  1E
4860:  MOVWF  x05
4862:  CLRF   x06
4864:  MOVLB  0
4866:  CALL   185C
....................          displayContrasena(Contrasena[2],60,30,0); 
486A:  MOVFF  4D0,503
486E:  MOVLW  3C
4870:  MOVLB  5
4872:  MOVWF  x04
4874:  MOVLW  1E
4876:  MOVWF  x05
4878:  CLRF   x06
487A:  MOVLB  0
487C:  CALL   185C
....................          displayContrasena(Contrasena[3],80,30,0); 
4880:  MOVFF  4D1,503
4884:  MOVLW  50
4886:  MOVLB  5
4888:  MOVWF  x04
488A:  MOVLW  1E
488C:  MOVWF  x05
488E:  CLRF   x06
4890:  MOVLB  0
4892:  CALL   185C
....................       } 
....................       else 
4896:  BRA    49C2
4898:  MOVLB  4
....................       { 
....................          if(unidad==2) 
489A:  MOVF   xA3,W
489C:  SUBLW  02
489E:  BNZ   48FE
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
48A0:  MOVFF  4CE,503
48A4:  MOVLW  14
48A6:  MOVLB  5
48A8:  MOVWF  x04
48AA:  MOVLW  1E
48AC:  MOVWF  x05
48AE:  CLRF   x06
48B0:  MOVLB  0
48B2:  CALL   185C
....................             displayContrasena(Contrasena[1],40,30,1); 
48B6:  MOVFF  4CF,503
48BA:  MOVLW  28
48BC:  MOVLB  5
48BE:  MOVWF  x04
48C0:  MOVLW  1E
48C2:  MOVWF  x05
48C4:  MOVLW  01
48C6:  MOVWF  x06
48C8:  MOVLB  0
48CA:  CALL   185C
....................             displayContrasena(Contrasena[2],60,30,0); 
48CE:  MOVFF  4D0,503
48D2:  MOVLW  3C
48D4:  MOVLB  5
48D6:  MOVWF  x04
48D8:  MOVLW  1E
48DA:  MOVWF  x05
48DC:  CLRF   x06
48DE:  MOVLB  0
48E0:  CALL   185C
....................             displayContrasena(Contrasena[3],80,30,0); 
48E4:  MOVFF  4D1,503
48E8:  MOVLW  50
48EA:  MOVLB  5
48EC:  MOVWF  x04
48EE:  MOVLW  1E
48F0:  MOVWF  x05
48F2:  CLRF   x06
48F4:  MOVLB  0
48F6:  CALL   185C
....................          } 
....................          else 
48FA:  BRA    49C2
48FC:  MOVLB  4
....................          { 
....................             if(unidad==3) 
48FE:  MOVF   xA3,W
4900:  SUBLW  03
4902:  BNZ   4962
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4904:  MOVFF  4CE,503
4908:  MOVLW  14
490A:  MOVLB  5
490C:  MOVWF  x04
490E:  MOVLW  1E
4910:  MOVWF  x05
4912:  CLRF   x06
4914:  MOVLB  0
4916:  CALL   185C
....................                displayContrasena(Contrasena[1],40,30,0); 
491A:  MOVFF  4CF,503
491E:  MOVLW  28
4920:  MOVLB  5
4922:  MOVWF  x04
4924:  MOVLW  1E
4926:  MOVWF  x05
4928:  CLRF   x06
492A:  MOVLB  0
492C:  CALL   185C
....................                displayContrasena(Contrasena[2],60,30,1); 
4930:  MOVFF  4D0,503
4934:  MOVLW  3C
4936:  MOVLB  5
4938:  MOVWF  x04
493A:  MOVLW  1E
493C:  MOVWF  x05
493E:  MOVLW  01
4940:  MOVWF  x06
4942:  MOVLB  0
4944:  CALL   185C
....................                displayContrasena(Contrasena[3],80,30,0); 
4948:  MOVFF  4D1,503
494C:  MOVLW  50
494E:  MOVLB  5
4950:  MOVWF  x04
4952:  MOVLW  1E
4954:  MOVWF  x05
4956:  CLRF   x06
4958:  MOVLB  0
495A:  CALL   185C
....................             } 
....................             else 
495E:  BRA    49C2
4960:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4962:  MOVF   xA3,W
4964:  SUBLW  04
4966:  BNZ   49C4
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4968:  MOVFF  4CE,503
496C:  MOVLW  14
496E:  MOVLB  5
4970:  MOVWF  x04
4972:  MOVLW  1E
4974:  MOVWF  x05
4976:  CLRF   x06
4978:  MOVLB  0
497A:  CALL   185C
....................                   displayContrasena(Contrasena[1],40,30,0); 
497E:  MOVFF  4CF,503
4982:  MOVLW  28
4984:  MOVLB  5
4986:  MOVWF  x04
4988:  MOVLW  1E
498A:  MOVWF  x05
498C:  CLRF   x06
498E:  MOVLB  0
4990:  CALL   185C
....................                   displayContrasena(Contrasena[2],60,30,0); 
4994:  MOVFF  4D0,503
4998:  MOVLW  3C
499A:  MOVLB  5
499C:  MOVWF  x04
499E:  MOVLW  1E
49A0:  MOVWF  x05
49A2:  CLRF   x06
49A4:  MOVLB  0
49A6:  CALL   185C
....................                   displayContrasena(Contrasena[3],80,30,1); 
49AA:  MOVFF  4D1,503
49AE:  MOVLW  50
49B0:  MOVLB  5
49B2:  MOVWF  x04
49B4:  MOVLW  1E
49B6:  MOVWF  x05
49B8:  MOVLW  01
49BA:  MOVWF  x06
49BC:  MOVLB  0
49BE:  CALL   185C
49C2:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
49C4:  BSF    F92.0
49C6:  BTFSS  F80.0
49C8:  BRA    4A32
....................       { 
....................          if(Flanco == 0) 
49CA:  BTFSC  x95.0
49CC:  BRA    4A30
....................          { 
....................             Flanco = 1;delay_ms(30); 
49CE:  BSF    x95.0
49D0:  MOVLW  1E
49D2:  MOVLB  5
49D4:  MOVWF  x02
49D6:  MOVLB  0
49D8:  CALL   0F96
....................             for(i=1;i<=4;i++) 
49DC:  MOVLW  01
49DE:  MOVLB  4
49E0:  MOVWF  xA4
49E2:  MOVF   xA4,W
49E4:  SUBLW  04
49E6:  BNC   4A30
....................             { 
....................                if(unidad==i) 
49E8:  MOVF   xA4,W
49EA:  SUBWF  xA3,W
49EC:  BNZ   4A2C
....................                { 
....................                   Contrasena[i-1]++; 
49EE:  MOVLW  01
49F0:  SUBWF  xA4,W
49F2:  CLRF   03
49F4:  ADDLW  CE
49F6:  MOVWF  FE9
49F8:  MOVLW  04
49FA:  ADDWFC 03,W
49FC:  MOVWF  FEA
49FE:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4A00:  MOVLW  01
4A02:  SUBWF  xA4,W
4A04:  CLRF   03
4A06:  ADDLW  CE
4A08:  MOVWF  FE9
4A0A:  MOVLW  04
4A0C:  ADDWFC 03,W
4A0E:  MOVWF  FEA
4A10:  BTFSC  FEF.7
4A12:  BRA    4A2C
4A14:  MOVF   FEF,W
4A16:  SUBLW  09
4A18:  BC    4A2C
....................                   { 
....................                      Contrasena[i-1]=0; 
4A1A:  MOVLW  01
4A1C:  SUBWF  xA4,W
4A1E:  CLRF   03
4A20:  ADDLW  CE
4A22:  MOVWF  FE9
4A24:  MOVLW  04
4A26:  ADDWFC 03,W
4A28:  MOVWF  FEA
4A2A:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4A2C:  INCF   xA4,F
4A2E:  BRA    49E2
....................          } 
....................       } 
....................       else 
4A30:  BRA    4A34
....................       { 
....................          Flanco = 0; 
4A32:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4A34:  BSF    F92.1
4A36:  BTFSS  F80.1
4A38:  BRA    4AA0
....................       { 
....................          if(Flanco2 == 0) 
4A3A:  BTFSC  x95.2
4A3C:  BRA    4A9E
....................             {Flanco2 = 1;delay_ms(30); 
4A3E:  BSF    x95.2
4A40:  MOVLW  1E
4A42:  MOVLB  5
4A44:  MOVWF  x02
4A46:  MOVLB  0
4A48:  CALL   0F96
....................                for(i=1;i<=4;i++) 
4A4C:  MOVLW  01
4A4E:  MOVLB  4
4A50:  MOVWF  xA4
4A52:  MOVF   xA4,W
4A54:  SUBLW  04
4A56:  BNC   4A9E
....................                { 
....................                   if(unidad==i) 
4A58:  MOVF   xA4,W
4A5A:  SUBWF  xA3,W
4A5C:  BNZ   4A9A
....................                   {Contrasena[i-1]--;  
4A5E:  MOVLW  01
4A60:  SUBWF  xA4,W
4A62:  CLRF   03
4A64:  ADDLW  CE
4A66:  MOVWF  FE9
4A68:  MOVLW  04
4A6A:  ADDWFC 03,W
4A6C:  MOVWF  FEA
4A6E:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4A70:  MOVLW  01
4A72:  SUBWF  xA4,W
4A74:  CLRF   03
4A76:  ADDLW  CE
4A78:  MOVWF  FE9
4A7A:  MOVLW  04
4A7C:  ADDWFC 03,W
4A7E:  MOVWF  FEA
4A80:  BTFSC  FEF.7
4A82:  BRA    4A86
4A84:  BRA    4A9A
....................                         {Contrasena[i-1]=9;} 
4A86:  MOVLW  01
4A88:  SUBWF  xA4,W
4A8A:  CLRF   03
4A8C:  ADDLW  CE
4A8E:  MOVWF  FE9
4A90:  MOVLW  04
4A92:  ADDWFC 03,W
4A94:  MOVWF  FEA
4A96:  MOVLW  09
4A98:  MOVWF  FEF
....................                   } 
....................                }       
4A9A:  INCF   xA4,F
4A9C:  BRA    4A52
....................             }      
....................       } 
....................       else 
4A9E:  BRA    4AA2
....................       { 
....................          Flanco2 = 0; 
4AA0:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4AA2:  BSF    F92.2
4AA4:  BTFSS  F80.2
4AA6:  BRA    4ACA
....................       { 
....................          if(Flanco1 == 0) 
4AA8:  BTFSC  x95.1
4AAA:  BRA    4AC8
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4AAC:  BSF    x95.1
4AAE:  MOVLW  02
4AB0:  MOVLB  5
4AB2:  MOVWF  x01
4AB4:  MOVLW  96
4AB6:  MOVWF  x02
4AB8:  MOVLB  0
4ABA:  CALL   0F96
4ABE:  MOVLB  5
4AC0:  DECFSZ x01,F
4AC2:  BRA    4AB4
4AC4:  MOVLB  4
4AC6:  INCF   xA3,F
....................       } 
....................       else 
4AC8:  BRA    4ACC
....................       { 
....................          Flanco1 = 0; 
4ACA:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4ACC:  BSF    F92.3
4ACE:  BTFSS  F80.3
4AD0:  BRA    4AFA
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4AD2:  MOVLW  04
4AD4:  MOVLB  5
4AD6:  MOVWF  x01
4AD8:  MOVLW  AF
4ADA:  MOVWF  x02
4ADC:  MOVLB  0
4ADE:  CALL   0F96
4AE2:  MOVLB  5
4AE4:  DECFSZ x01,F
4AE6:  BRA    4AD8
4AE8:  MOVLW  01
4AEA:  MOVLB  4
4AEC:  MOVWF  xA2
4AEE:  MOVLB  5
4AF0:  CLRF   x02
4AF2:  MOVLB  0
4AF4:  CALL   1000
4AF8:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4AFA:  MOVF   xA3,W
4AFC:  SUBLW  04
4AFE:  BTFSC  FD8.0
4B00:  BRA    4CA6
....................       {glcd_fillScreen(OFF); 
4B02:  MOVLB  5
4B04:  CLRF   x02
4B06:  MOVLB  0
4B08:  CALL   1000
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4B0C:  MOVLB  4
4B0E:  MOVF   xD2,W
4B10:  SUBWF  xCE,W
4B12:  BNZ   4BE4
4B14:  MOVF   xD3,W
4B16:  SUBWF  xCF,W
4B18:  BNZ   4BE4
4B1A:  MOVF   xD4,W
4B1C:  SUBWF  xD0,W
4B1E:  BNZ   4BE4
4B20:  MOVF   xD5,W
4B22:  SUBWF  xD1,W
4B24:  BNZ   4BE4
....................          { 
....................             glcd_fillScreen(OFF); 
4B26:  MOVLB  5
4B28:  CLRF   x02
4B2A:  MOVLB  0
4B2C:  CALL   1000
....................             strcpy(Menus.Letra,"Clave"); 
4B30:  MOVLW  04
4B32:  MOVWF  FEA
4B34:  MOVLW  E1
4B36:  MOVWF  FE9
4B38:  MOVFF  FF2,501
4B3C:  BCF    FF2.7
4B3E:  MOVLW  00
4B40:  CALL   0756
4B44:  TBLRD*-
4B46:  TBLRD*+
4B48:  MOVF   FF5,W
4B4A:  MOVWF  FEE
4B4C:  IORLW  00
4B4E:  BNZ   4B46
4B50:  MOVLB  5
4B52:  BTFSC  x01.7
4B54:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4B56:  MOVLW  04
4B58:  MOVWF  x02
4B5A:  MOVLW  E1
4B5C:  MOVWF  x01
4B5E:  MOVLW  1E
4B60:  MOVWF  x03
4B62:  CLRF   x04
4B64:  CLRF   x05
4B66:  MOVLW  02
4B68:  MOVWF  x06
4B6A:  MOVLB  0
4B6C:  CALL   162E
....................             strcpy(Menus.Letra,"Correcta"); 
4B70:  MOVLW  04
4B72:  MOVWF  FEA
4B74:  MOVLW  E1
4B76:  MOVWF  FE9
4B78:  MOVFF  FF2,501
4B7C:  BCF    FF2.7
4B7E:  MOVLW  00
4B80:  CALL   0776
4B84:  TBLRD*-
4B86:  TBLRD*+
4B88:  MOVF   FF5,W
4B8A:  MOVWF  FEE
4B8C:  IORLW  00
4B8E:  BNZ   4B86
4B90:  MOVLB  5
4B92:  BTFSC  x01.7
4B94:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4B96:  MOVLW  04
4B98:  MOVWF  x02
4B9A:  MOVLW  E1
4B9C:  MOVWF  x01
4B9E:  MOVLW  0F
4BA0:  MOVWF  x03
4BA2:  MOVLW  1E
4BA4:  MOVWF  x04
4BA6:  CLRF   x05
4BA8:  MOVLW  02
4BAA:  MOVWF  x06
4BAC:  MOVLB  0
4BAE:  CALL   162E
....................             Menu=91;glcd_update();delay_ms(1000); 
4BB2:  MOVLW  5B
4BB4:  MOVLB  4
4BB6:  MOVWF  xA2
4BB8:  MOVLB  0
4BBA:  CALL   105A
4BBE:  MOVLW  04
4BC0:  MOVLB  5
4BC2:  MOVWF  x01
4BC4:  MOVLW  FA
4BC6:  MOVWF  x02
4BC8:  MOVLB  0
4BCA:  CALL   0F96
4BCE:  MOVLB  5
4BD0:  DECFSZ x01,F
4BD2:  BRA    4BC4
....................             glcd_fillScreen(OFF);unidad=1; 
4BD4:  CLRF   x02
4BD6:  MOVLB  0
4BD8:  CALL   1000
4BDC:  MOVLW  01
4BDE:  MOVLB  4
4BE0:  MOVWF  xA3
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4BE2:  BRA    4CA6
....................          { 
....................             glcd_fillScreen(OFF); 
4BE4:  MOVLB  5
4BE6:  CLRF   x02
4BE8:  MOVLB  0
4BEA:  CALL   1000
....................             strcpy(Menus.Letra,"Clave"); 
4BEE:  MOVLW  04
4BF0:  MOVWF  FEA
4BF2:  MOVLW  E1
4BF4:  MOVWF  FE9
4BF6:  MOVFF  FF2,501
4BFA:  BCF    FF2.7
4BFC:  MOVLW  00
4BFE:  CALL   0756
4C02:  TBLRD*-
4C04:  TBLRD*+
4C06:  MOVF   FF5,W
4C08:  MOVWF  FEE
4C0A:  IORLW  00
4C0C:  BNZ   4C04
4C0E:  MOVLB  5
4C10:  BTFSC  x01.7
4C12:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4C14:  MOVLW  04
4C16:  MOVWF  x02
4C18:  MOVLW  E1
4C1A:  MOVWF  x01
4C1C:  MOVLW  1E
4C1E:  MOVWF  x03
4C20:  CLRF   x04
4C22:  CLRF   x05
4C24:  MOVLW  02
4C26:  MOVWF  x06
4C28:  MOVLB  0
4C2A:  CALL   162E
....................             strcpy(Menus.Letra,"Incorrecta"); 
4C2E:  MOVLW  04
4C30:  MOVWF  FEA
4C32:  MOVLW  E1
4C34:  MOVWF  FE9
4C36:  MOVFF  FF2,501
4C3A:  BCF    FF2.7
4C3C:  MOVLW  00
4C3E:  CALL   079A
4C42:  TBLRD*-
4C44:  TBLRD*+
4C46:  MOVF   FF5,W
4C48:  MOVWF  FEE
4C4A:  IORLW  00
4C4C:  BNZ   4C44
4C4E:  MOVLB  5
4C50:  BTFSC  x01.7
4C52:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4C54:  MOVLW  04
4C56:  MOVWF  x02
4C58:  MOVLW  E1
4C5A:  MOVWF  x01
4C5C:  CLRF   x03
4C5E:  MOVLW  1E
4C60:  MOVWF  x04
4C62:  CLRF   x05
4C64:  MOVLW  02
4C66:  MOVWF  x06
4C68:  MOVLB  0
4C6A:  CALL   162E
....................             Menu=1;glcd_update();delay_ms(1000); 
4C6E:  MOVLW  01
4C70:  MOVLB  4
4C72:  MOVWF  xA2
4C74:  MOVLB  0
4C76:  CALL   105A
4C7A:  MOVLW  04
4C7C:  MOVLB  5
4C7E:  MOVWF  x01
4C80:  MOVLW  FA
4C82:  MOVWF  x02
4C84:  MOVLB  0
4C86:  CALL   0F96
4C8A:  MOVLB  5
4C8C:  DECFSZ x01,F
4C8E:  BRA    4C80
....................             glcd_fillScreen(OFF);unidad=1; 
4C90:  CLRF   x02
4C92:  MOVLB  0
4C94:  CALL   1000
4C98:  MOVLW  01
4C9A:  MOVLB  4
4C9C:  MOVWF  xA3
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4C9E:  CLRF   xCE
4CA0:  CLRF   xCF
4CA2:  CLRF   xD0
4CA4:  CLRF   xD1
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4CA6:  MOVF   xA2,W
4CA8:  SUBLW  5B
4CAA:  BTFSS  FD8.2
4CAC:  BRA    5086
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4CAE:  MOVLW  04
4CB0:  MOVWF  FEA
4CB2:  MOVLW  E1
4CB4:  MOVWF  FE9
4CB6:  MOVFF  FF2,501
4CBA:  BCF    FF2.7
4CBC:  MOVLW  00
4CBE:  MOVLB  0
4CC0:  CALL   0BDE
4CC4:  TBLRD*-
4CC6:  TBLRD*+
4CC8:  MOVF   FF5,W
4CCA:  MOVWF  FEE
4CCC:  IORLW  00
4CCE:  BNZ   4CC6
4CD0:  MOVLB  5
4CD2:  BTFSC  x01.7
4CD4:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4CD6:  MOVLW  04
4CD8:  MOVWF  x02
4CDA:  MOVLW  E1
4CDC:  MOVWF  x01
4CDE:  CLRF   x03
4CE0:  CLRF   x04
4CE2:  MOVLW  01
4CE4:  MOVWF  x05
4CE6:  MOVLW  02
4CE8:  MOVWF  x06
4CEA:  MOVLB  0
4CEC:  CALL   162E
....................        
....................       if(unidad==1) 
4CF0:  MOVLB  4
4CF2:  DECFSZ xA3,W
4CF4:  BRA    4D54
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4CF6:  MOVFF  4D2,503
4CFA:  MOVLW  14
4CFC:  MOVLB  5
4CFE:  MOVWF  x04
4D00:  MOVLW  1E
4D02:  MOVWF  x05
4D04:  MOVLW  01
4D06:  MOVWF  x06
4D08:  MOVLB  0
4D0A:  CALL   185C
....................          displayContrasena(Password[1],40,30,0); 
4D0E:  MOVFF  4D3,503
4D12:  MOVLW  28
4D14:  MOVLB  5
4D16:  MOVWF  x04
4D18:  MOVLW  1E
4D1A:  MOVWF  x05
4D1C:  CLRF   x06
4D1E:  MOVLB  0
4D20:  CALL   185C
....................          displayContrasena(Password[2],60,30,0); 
4D24:  MOVFF  4D4,503
4D28:  MOVLW  3C
4D2A:  MOVLB  5
4D2C:  MOVWF  x04
4D2E:  MOVLW  1E
4D30:  MOVWF  x05
4D32:  CLRF   x06
4D34:  MOVLB  0
4D36:  CALL   185C
....................          displayContrasena(Password[3],80,30,0); 
4D3A:  MOVFF  4D5,503
4D3E:  MOVLW  50
4D40:  MOVLB  5
4D42:  MOVWF  x04
4D44:  MOVLW  1E
4D46:  MOVWF  x05
4D48:  CLRF   x06
4D4A:  MOVLB  0
4D4C:  CALL   185C
....................       } 
....................       else 
4D50:  BRA    4E7C
4D52:  MOVLB  4
....................       { 
....................          if(unidad==2) 
4D54:  MOVF   xA3,W
4D56:  SUBLW  02
4D58:  BNZ   4DB8
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4D5A:  MOVFF  4D2,503
4D5E:  MOVLW  14
4D60:  MOVLB  5
4D62:  MOVWF  x04
4D64:  MOVLW  1E
4D66:  MOVWF  x05
4D68:  CLRF   x06
4D6A:  MOVLB  0
4D6C:  CALL   185C
....................             displayContrasena(Password[1],40,30,1); 
4D70:  MOVFF  4D3,503
4D74:  MOVLW  28
4D76:  MOVLB  5
4D78:  MOVWF  x04
4D7A:  MOVLW  1E
4D7C:  MOVWF  x05
4D7E:  MOVLW  01
4D80:  MOVWF  x06
4D82:  MOVLB  0
4D84:  CALL   185C
....................             displayContrasena(Password[2],60,30,0); 
4D88:  MOVFF  4D4,503
4D8C:  MOVLW  3C
4D8E:  MOVLB  5
4D90:  MOVWF  x04
4D92:  MOVLW  1E
4D94:  MOVWF  x05
4D96:  CLRF   x06
4D98:  MOVLB  0
4D9A:  CALL   185C
....................             displayContrasena(Password[3],80,30,0); 
4D9E:  MOVFF  4D5,503
4DA2:  MOVLW  50
4DA4:  MOVLB  5
4DA6:  MOVWF  x04
4DA8:  MOVLW  1E
4DAA:  MOVWF  x05
4DAC:  CLRF   x06
4DAE:  MOVLB  0
4DB0:  CALL   185C
....................          } 
....................          else 
4DB4:  BRA    4E7C
4DB6:  MOVLB  4
....................          { 
....................             if(unidad==3) 
4DB8:  MOVF   xA3,W
4DBA:  SUBLW  03
4DBC:  BNZ   4E1C
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4DBE:  MOVFF  4D2,503
4DC2:  MOVLW  14
4DC4:  MOVLB  5
4DC6:  MOVWF  x04
4DC8:  MOVLW  1E
4DCA:  MOVWF  x05
4DCC:  CLRF   x06
4DCE:  MOVLB  0
4DD0:  CALL   185C
....................                displayContrasena(Password[1],40,30,0); 
4DD4:  MOVFF  4D3,503
4DD8:  MOVLW  28
4DDA:  MOVLB  5
4DDC:  MOVWF  x04
4DDE:  MOVLW  1E
4DE0:  MOVWF  x05
4DE2:  CLRF   x06
4DE4:  MOVLB  0
4DE6:  CALL   185C
....................                displayContrasena(Password[2],60,30,1); 
4DEA:  MOVFF  4D4,503
4DEE:  MOVLW  3C
4DF0:  MOVLB  5
4DF2:  MOVWF  x04
4DF4:  MOVLW  1E
4DF6:  MOVWF  x05
4DF8:  MOVLW  01
4DFA:  MOVWF  x06
4DFC:  MOVLB  0
4DFE:  CALL   185C
....................                displayContrasena(Password[3],80,30,0); 
4E02:  MOVFF  4D5,503
4E06:  MOVLW  50
4E08:  MOVLB  5
4E0A:  MOVWF  x04
4E0C:  MOVLW  1E
4E0E:  MOVWF  x05
4E10:  CLRF   x06
4E12:  MOVLB  0
4E14:  CALL   185C
....................             } 
....................             else 
4E18:  BRA    4E7C
4E1A:  MOVLB  4
....................             { 
....................                if(unidad==4) 
4E1C:  MOVF   xA3,W
4E1E:  SUBLW  04
4E20:  BNZ   4E7E
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4E22:  MOVFF  4D2,503
4E26:  MOVLW  14
4E28:  MOVLB  5
4E2A:  MOVWF  x04
4E2C:  MOVLW  1E
4E2E:  MOVWF  x05
4E30:  CLRF   x06
4E32:  MOVLB  0
4E34:  CALL   185C
....................                   displayContrasena(Password[1],40,30,0); 
4E38:  MOVFF  4D3,503
4E3C:  MOVLW  28
4E3E:  MOVLB  5
4E40:  MOVWF  x04
4E42:  MOVLW  1E
4E44:  MOVWF  x05
4E46:  CLRF   x06
4E48:  MOVLB  0
4E4A:  CALL   185C
....................                   displayContrasena(Password[2],60,30,0); 
4E4E:  MOVFF  4D4,503
4E52:  MOVLW  3C
4E54:  MOVLB  5
4E56:  MOVWF  x04
4E58:  MOVLW  1E
4E5A:  MOVWF  x05
4E5C:  CLRF   x06
4E5E:  MOVLB  0
4E60:  CALL   185C
....................                   displayContrasena(Password[3],80,30,1); 
4E64:  MOVFF  4D5,503
4E68:  MOVLW  50
4E6A:  MOVLB  5
4E6C:  MOVWF  x04
4E6E:  MOVLW  1E
4E70:  MOVWF  x05
4E72:  MOVLW  01
4E74:  MOVWF  x06
4E76:  MOVLB  0
4E78:  CALL   185C
4E7C:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4E7E:  BSF    F92.0
4E80:  BTFSS  F80.0
4E82:  BRA    4EEC
....................       { 
....................          if(Flanco == 0) 
4E84:  BTFSC  x95.0
4E86:  BRA    4EEA
....................          { 
....................             Flanco = 1;delay_ms(30); 
4E88:  BSF    x95.0
4E8A:  MOVLW  1E
4E8C:  MOVLB  5
4E8E:  MOVWF  x02
4E90:  MOVLB  0
4E92:  CALL   0F96
....................             for(i=1;i<=4;i++) 
4E96:  MOVLW  01
4E98:  MOVLB  4
4E9A:  MOVWF  xA4
4E9C:  MOVF   xA4,W
4E9E:  SUBLW  04
4EA0:  BNC   4EEA
....................             { 
....................                if(unidad==i) 
4EA2:  MOVF   xA4,W
4EA4:  SUBWF  xA3,W
4EA6:  BNZ   4EE6
....................                { 
....................                   Password[i-1]++; 
4EA8:  MOVLW  01
4EAA:  SUBWF  xA4,W
4EAC:  CLRF   03
4EAE:  ADDLW  D2
4EB0:  MOVWF  FE9
4EB2:  MOVLW  04
4EB4:  ADDWFC 03,W
4EB6:  MOVWF  FEA
4EB8:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4EBA:  MOVLW  01
4EBC:  SUBWF  xA4,W
4EBE:  CLRF   03
4EC0:  ADDLW  D2
4EC2:  MOVWF  FE9
4EC4:  MOVLW  04
4EC6:  ADDWFC 03,W
4EC8:  MOVWF  FEA
4ECA:  BTFSC  FEF.7
4ECC:  BRA    4EE6
4ECE:  MOVF   FEF,W
4ED0:  SUBLW  09
4ED2:  BC    4EE6
....................                   { 
....................                      Password[i-1]=0; 
4ED4:  MOVLW  01
4ED6:  SUBWF  xA4,W
4ED8:  CLRF   03
4EDA:  ADDLW  D2
4EDC:  MOVWF  FE9
4EDE:  MOVLW  04
4EE0:  ADDWFC 03,W
4EE2:  MOVWF  FEA
4EE4:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4EE6:  INCF   xA4,F
4EE8:  BRA    4E9C
....................          } 
....................       } 
....................       else 
4EEA:  BRA    4EEE
....................       { 
....................          Flanco = 0; 
4EEC:  BCF    x95.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4EEE:  BSF    F92.1
4EF0:  BTFSS  F80.1
4EF2:  BRA    4F5A
....................       { 
....................          if(Flanco2 == 0) 
4EF4:  BTFSC  x95.2
4EF6:  BRA    4F58
....................             {Flanco2 = 1;delay_ms(30); 
4EF8:  BSF    x95.2
4EFA:  MOVLW  1E
4EFC:  MOVLB  5
4EFE:  MOVWF  x02
4F00:  MOVLB  0
4F02:  CALL   0F96
....................                for(i=1;i<=4;i++) 
4F06:  MOVLW  01
4F08:  MOVLB  4
4F0A:  MOVWF  xA4
4F0C:  MOVF   xA4,W
4F0E:  SUBLW  04
4F10:  BNC   4F58
....................                { 
....................                   if(unidad==i) 
4F12:  MOVF   xA4,W
4F14:  SUBWF  xA3,W
4F16:  BNZ   4F54
....................                   { 
....................                      Password[i-1]--; 
4F18:  MOVLW  01
4F1A:  SUBWF  xA4,W
4F1C:  CLRF   03
4F1E:  ADDLW  D2
4F20:  MOVWF  FE9
4F22:  MOVLW  04
4F24:  ADDWFC 03,W
4F26:  MOVWF  FEA
4F28:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4F2A:  MOVLW  01
4F2C:  SUBWF  xA4,W
4F2E:  CLRF   03
4F30:  ADDLW  D2
4F32:  MOVWF  FE9
4F34:  MOVLW  04
4F36:  ADDWFC 03,W
4F38:  MOVWF  FEA
4F3A:  BTFSC  FEF.7
4F3C:  BRA    4F40
4F3E:  BRA    4F54
....................                      { 
....................                         Password[i-1]=9; 
4F40:  MOVLW  01
4F42:  SUBWF  xA4,W
4F44:  CLRF   03
4F46:  ADDLW  D2
4F48:  MOVWF  FE9
4F4A:  MOVLW  04
4F4C:  ADDWFC 03,W
4F4E:  MOVWF  FEA
4F50:  MOVLW  09
4F52:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
4F54:  INCF   xA4,F
4F56:  BRA    4F0C
....................             }      
....................       } 
....................       else 
4F58:  BRA    4F5C
....................       { 
....................          Flanco2 = 0; 
4F5A:  BCF    x95.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4F5C:  BSF    F92.2
4F5E:  BTFSS  F80.2
4F60:  BRA    4F84
....................       { 
....................          if(Flanco1 == 0) 
4F62:  BTFSC  x95.1
4F64:  BRA    4F82
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4F66:  BSF    x95.1
4F68:  MOVLW  02
4F6A:  MOVLB  5
4F6C:  MOVWF  x01
4F6E:  MOVLW  96
4F70:  MOVWF  x02
4F72:  MOVLB  0
4F74:  CALL   0F96
4F78:  MOVLB  5
4F7A:  DECFSZ x01,F
4F7C:  BRA    4F6E
4F7E:  MOVLB  4
4F80:  INCF   xA3,F
....................       } 
....................       else 
4F82:  BRA    4F86
....................       { 
....................          Flanco1 = 0; 
4F84:  BCF    x95.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4F86:  BSF    F92.3
4F88:  BTFSS  F80.3
4F8A:  BRA    4FB4
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4F8C:  MOVLW  04
4F8E:  MOVLB  5
4F90:  MOVWF  x01
4F92:  MOVLW  AF
4F94:  MOVWF  x02
4F96:  MOVLB  0
4F98:  CALL   0F96
4F9C:  MOVLB  5
4F9E:  DECFSZ x01,F
4FA0:  BRA    4F92
4FA2:  MOVLW  01
4FA4:  MOVLB  4
4FA6:  MOVWF  xA2
4FA8:  MOVLB  5
4FAA:  CLRF   x02
4FAC:  MOVLB  0
4FAE:  CALL   1000
4FB2:  MOVLB  4
....................       } 
....................        
....................       if(unidad>4) 
4FB4:  MOVF   xA3,W
4FB6:  SUBLW  04
4FB8:  BC    5086
....................       { 
....................          Opcion=1;unidad=1; 
4FBA:  MOVLW  01
4FBC:  MOVWF  xA7
4FBE:  MOVWF  xA3
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
4FC0:  MOVLW  0A
4FC2:  MOVWF  FA9
4FC4:  MOVFF  4D2,FA8
4FC8:  BCF    FA6.6
4FCA:  BCF    FA6.7
4FCC:  BSF    FA6.2
4FCE:  MOVF   FF2,W
4FD0:  MOVWF  00
4FD2:  BCF    FF2.7
4FD4:  MOVLB  F
4FD6:  MOVLW  55
4FD8:  MOVWF  FA7
4FDA:  MOVLW  AA
4FDC:  MOVWF  FA7
4FDE:  BSF    FA6.1
4FE0:  BTFSC  FA6.1
4FE2:  BRA    4FE0
4FE4:  BCF    FA6.2
4FE6:  MOVF   00,W
4FE8:  IORWF  FF2,F
4FEA:  MOVLW  0B
4FEC:  MOVWF  FA9
4FEE:  MOVFF  4D3,FA8
4FF2:  BCF    FA6.6
4FF4:  BCF    FA6.7
4FF6:  BSF    FA6.2
4FF8:  MOVF   FF2,W
4FFA:  MOVWF  00
4FFC:  BCF    FF2.7
4FFE:  MOVLW  55
5000:  MOVWF  FA7
5002:  MOVLW  AA
5004:  MOVWF  FA7
5006:  BSF    FA6.1
5008:  BTFSC  FA6.1
500A:  BRA    5008
500C:  BCF    FA6.2
500E:  MOVF   00,W
5010:  IORWF  FF2,F
5012:  MOVLW  0C
5014:  MOVWF  FA9
5016:  MOVFF  4D4,FA8
501A:  BCF    FA6.6
501C:  BCF    FA6.7
501E:  BSF    FA6.2
5020:  MOVF   FF2,W
5022:  MOVWF  00
5024:  BCF    FF2.7
5026:  MOVLW  55
5028:  MOVWF  FA7
502A:  MOVLW  AA
502C:  MOVWF  FA7
502E:  BSF    FA6.1
5030:  BTFSC  FA6.1
5032:  BRA    5030
5034:  BCF    FA6.2
5036:  MOVF   00,W
5038:  IORWF  FF2,F
503A:  MOVLW  0D
503C:  MOVWF  FA9
503E:  MOVFF  4D5,FA8
5042:  BCF    FA6.6
5044:  BCF    FA6.7
5046:  BSF    FA6.2
5048:  MOVF   FF2,W
504A:  MOVWF  00
504C:  BCF    FF2.7
504E:  MOVLW  55
5050:  MOVWF  FA7
5052:  MOVLW  AA
5054:  MOVWF  FA7
5056:  BSF    FA6.1
5058:  BTFSC  FA6.1
505A:  BRA    5058
505C:  BCF    FA6.2
505E:  MOVF   00,W
5060:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
5062:  MOVLW  04
5064:  MOVLB  5
5066:  MOVWF  x01
5068:  MOVLW  FA
506A:  MOVWF  x02
506C:  MOVLB  0
506E:  CALL   0F96
5072:  MOVLB  5
5074:  DECFSZ x01,F
5076:  BRA    5068
5078:  CLRF   x02
507A:  MOVLB  0
507C:  CALL   1000
5080:  MOVLW  01
5082:  MOVLB  4
5084:  MOVWF  xA2
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
5086:  MOVF   xA2,W
5088:  SUBLW  0B
508A:  BTFSS  FD8.2
508C:  BRA    538E
....................       
....................       if(visual==1) 
508E:  BTFSS  x95.4
5090:  BRA    521C
....................       { 
....................          if(unidad<1) 
5092:  MOVF   xA3,F
5094:  BNZ   509A
....................          {unidad=4;} 
5096:  MOVLW  04
5098:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
509A:  MOVLW  04
509C:  MOVWF  FEA
509E:  MOVLW  E1
50A0:  MOVWF  FE9
50A2:  MOVFF  FF2,501
50A6:  BCF    FF2.7
50A8:  MOVLW  00
50AA:  MOVLB  0
50AC:  CALL   0C04
50B0:  TBLRD*-
50B2:  TBLRD*+
50B4:  MOVF   FF5,W
50B6:  MOVWF  FEE
50B8:  IORLW  00
50BA:  BNZ   50B2
50BC:  MOVLB  5
50BE:  BTFSC  x01.7
50C0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
50C2:  MOVLW  04
50C4:  MOVWF  x02
50C6:  MOVLW  E1
50C8:  MOVWF  x01
50CA:  CLRF   x03
50CC:  CLRF   x04
50CE:  MOVLW  01
50D0:  MOVWF  x05
50D2:  MOVLW  02
50D4:  MOVWF  x06
50D6:  MOVLB  0
50D8:  CALL   162E
....................           
....................          if(unidad==4) 
50DC:  MOVLB  4
50DE:  MOVF   xA3,W
50E0:  SUBLW  04
50E2:  BNZ   5102
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
50E4:  MOVFF  4C5,502
50E8:  MOVLW  14
50EA:  MOVLB  5
50EC:  MOVWF  x03
50EE:  MOVLW  28
50F0:  MOVWF  x04
50F2:  MOVLW  01
50F4:  MOVWF  x05
50F6:  MOVLW  02
50F8:  MOVWF  x06
50FA:  MOVLB  0
50FC:  CALL   2422
....................          else 
5100:  BRA    511C
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
5102:  MOVFF  4C5,502
5106:  MOVLW  14
5108:  MOVLB  5
510A:  MOVWF  x03
510C:  MOVLW  28
510E:  MOVWF  x04
5110:  CLRF   x05
5112:  MOVLW  02
5114:  MOVWF  x06
5116:  MOVLB  0
5118:  CALL   2422
....................           
....................          if(unidad==3) 
511C:  MOVLB  4
511E:  MOVF   xA3,W
5120:  SUBLW  03
5122:  BNZ   5140
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
5124:  MOVFF  4C4,502
5128:  MOVLW  28
512A:  MOVLB  5
512C:  MOVWF  x03
512E:  MOVWF  x04
5130:  MOVLW  01
5132:  MOVWF  x05
5134:  MOVLW  02
5136:  MOVWF  x06
5138:  MOVLB  0
513A:  CALL   2422
....................          else 
513E:  BRA    5158
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
5140:  MOVFF  4C4,502
5144:  MOVLW  28
5146:  MOVLB  5
5148:  MOVWF  x03
514A:  MOVWF  x04
514C:  CLRF   x05
514E:  MOVLW  02
5150:  MOVWF  x06
5152:  MOVLB  0
5154:  CALL   2422
....................           
....................          if(unidad==2) 
5158:  MOVLB  4
515A:  MOVF   xA3,W
515C:  SUBLW  02
515E:  BNZ   517E
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
5160:  MOVFF  4C3,502
5164:  MOVLW  46
5166:  MOVLB  5
5168:  MOVWF  x03
516A:  MOVLW  28
516C:  MOVWF  x04
516E:  MOVLW  01
5170:  MOVWF  x05
5172:  MOVLW  02
5174:  MOVWF  x06
5176:  MOVLB  0
5178:  CALL   2422
....................          else 
517C:  BRA    5198
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
517E:  MOVFF  4C3,502
5182:  MOVLW  46
5184:  MOVLB  5
5186:  MOVWF  x03
5188:  MOVLW  28
518A:  MOVWF  x04
518C:  CLRF   x05
518E:  MOVLW  02
5190:  MOVWF  x06
5192:  MOVLB  0
5194:  CALL   2422
....................           
....................          if(unidad==1) 
5198:  MOVLB  4
519A:  DECFSZ xA3,W
519C:  BRA    51BC
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
519E:  MOVFF  4C2,502
51A2:  MOVLW  5A
51A4:  MOVLB  5
51A6:  MOVWF  x03
51A8:  MOVLW  28
51AA:  MOVWF  x04
51AC:  MOVLW  01
51AE:  MOVWF  x05
51B0:  MOVLW  02
51B2:  MOVWF  x06
51B4:  MOVLB  0
51B6:  CALL   2422
....................          else 
51BA:  BRA    51D6
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
51BC:  MOVFF  4C2,502
51C0:  MOVLW  5A
51C2:  MOVLB  5
51C4:  MOVWF  x03
51C6:  MOVLW  28
51C8:  MOVWF  x04
51CA:  CLRF   x05
51CC:  MOVLW  02
51CE:  MOVWF  x06
51D0:  MOVLB  0
51D2:  CALL   2422
....................           
....................          strcpy(Menus.Letra,":"); 
51D6:  MOVLW  04
51D8:  MOVWF  FEA
51DA:  MOVLW  E1
51DC:  MOVWF  FE9
51DE:  MOVFF  FF2,501
51E2:  BCF    FF2.7
51E4:  MOVLW  00
51E6:  CALL   06BE
51EA:  TBLRD*-
51EC:  TBLRD*+
51EE:  MOVF   FF5,W
51F0:  MOVWF  FEE
51F2:  IORLW  00
51F4:  BNZ   51EC
51F6:  MOVLB  5
51F8:  BTFSC  x01.7
51FA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
51FC:  MOVLW  04
51FE:  MOVWF  x02
5200:  MOVLW  E1
5202:  MOVWF  x01
5204:  MOVLW  3C
5206:  MOVWF  x03
5208:  MOVLW  2A
520A:  MOVWF  x04
520C:  MOVLW  02
520E:  MOVWF  x05
5210:  MOVWF  x06
5212:  MOVLB  0
5214:  CALL   162E
....................           
....................          visual=0; 
5218:  MOVLB  4
521A:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
521C:  BSF    F92.0
521E:  BTFSS  F80.0
5220:  BRA    525E
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
5222:  MOVLW  01
5224:  SUBWF  xA3,W
5226:  CLRF   03
5228:  ADDLW  C2
522A:  MOVWF  FE9
522C:  MOVLW  04
522E:  ADDWFC 03,W
5230:  MOVWF  FEA
5232:  BTFSC  FEF.7
5234:  BRA    523C
5236:  MOVF   FEF,W
5238:  SUBLW  08
523A:  BNC   525E
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
523C:  MOVLW  1E
523E:  MOVLB  5
5240:  MOVWF  x02
5242:  MOVLB  0
5244:  CALL   0F96
5248:  MOVLW  01
524A:  MOVLB  4
524C:  SUBWF  xA3,W
524E:  CLRF   03
5250:  ADDLW  C2
5252:  MOVWF  FE9
5254:  MOVLW  04
5256:  ADDWFC 03,W
5258:  MOVWF  FEA
525A:  INCF   FEF,F
525C:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
525E:  BSF    F92.1
5260:  BTFSS  F80.1
5262:  BRA    52A0
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
5264:  MOVLW  01
5266:  SUBWF  xA3,W
5268:  CLRF   03
526A:  ADDLW  C2
526C:  MOVWF  FE9
526E:  MOVLW  04
5270:  ADDWFC 03,W
5272:  MOVWF  FEA
5274:  BTFSC  FEF.7
5276:  BRA    52A0
5278:  MOVF   FEF,W
527A:  SUBLW  00
527C:  BC    52A0
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
527E:  MOVLW  1E
5280:  MOVLB  5
5282:  MOVWF  x02
5284:  MOVLB  0
5286:  CALL   0F96
528A:  MOVLW  01
528C:  MOVLB  4
528E:  SUBWF  xA3,W
5290:  CLRF   03
5292:  ADDLW  C2
5294:  MOVWF  FE9
5296:  MOVLW  04
5298:  ADDWFC 03,W
529A:  MOVWF  FEA
529C:  DECF   FEF,F
529E:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
52A0:  BSF    F92.2
52A2:  BTFSS  F80.2
52A4:  BRA    52B8
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
52A6:  MOVLW  1E
52A8:  MOVLB  5
52AA:  MOVWF  x02
52AC:  MOVLB  0
52AE:  CALL   0F96
52B2:  MOVLB  4
52B4:  DECF   xA3,F
52B6:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
52B8:  BSF    F92.3
52BA:  BTFSS  F80.3
52BC:  BRA    538E
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
52BE:  MOVLW  04
52C0:  MOVLB  5
52C2:  MOVWF  x01
52C4:  MOVLW  AF
52C6:  MOVWF  x02
52C8:  MOVLB  0
52CA:  CALL   0F96
52CE:  MOVLB  5
52D0:  DECFSZ x01,F
52D2:  BRA    52C4
52D4:  MOVLW  08
52D6:  MOVLB  4
52D8:  MOVWF  xA2
52DA:  MOVLB  5
52DC:  CLRF   x02
52DE:  MOVLB  0
52E0:  CALL   1000
52E4:  MOVLW  01
52E6:  MOVLB  4
52E8:  MOVWF  xA7
52EA:  BSF    x95.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
52EC:  CLRF   FA9
52EE:  MOVFF  4C2,FA8
52F2:  BCF    FA6.6
52F4:  BCF    FA6.7
52F6:  BSF    FA6.2
52F8:  MOVF   FF2,W
52FA:  MOVWF  00
52FC:  BCF    FF2.7
52FE:  MOVLB  F
5300:  MOVLW  55
5302:  MOVWF  FA7
5304:  MOVLW  AA
5306:  MOVWF  FA7
5308:  BSF    FA6.1
530A:  BTFSC  FA6.1
530C:  BRA    530A
530E:  BCF    FA6.2
5310:  MOVF   00,W
5312:  IORWF  FF2,F
5314:  MOVLW  01
5316:  MOVWF  FA9
5318:  MOVFF  4C3,FA8
531C:  BCF    FA6.6
531E:  BCF    FA6.7
5320:  BSF    FA6.2
5322:  MOVF   FF2,W
5324:  MOVWF  00
5326:  BCF    FF2.7
5328:  MOVLW  55
532A:  MOVWF  FA7
532C:  MOVLW  AA
532E:  MOVWF  FA7
5330:  BSF    FA6.1
5332:  BTFSC  FA6.1
5334:  BRA    5332
5336:  BCF    FA6.2
5338:  MOVF   00,W
533A:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
533C:  MOVLW  02
533E:  MOVWF  FA9
5340:  MOVFF  4C4,FA8
5344:  BCF    FA6.6
5346:  BCF    FA6.7
5348:  BSF    FA6.2
534A:  MOVFF  FF2,00
534E:  BCF    FF2.7
5350:  MOVLW  55
5352:  MOVWF  FA7
5354:  MOVLW  AA
5356:  MOVWF  FA7
5358:  BSF    FA6.1
535A:  BTFSC  FA6.1
535C:  BRA    535A
535E:  BCF    FA6.2
5360:  MOVF   00,W
5362:  IORWF  FF2,F
5364:  MOVLW  03
5366:  MOVWF  FA9
5368:  MOVFF  4C5,FA8
536C:  BCF    FA6.6
536E:  BCF    FA6.7
5370:  BSF    FA6.2
5372:  MOVFF  FF2,00
5376:  BCF    FF2.7
5378:  MOVLW  55
537A:  MOVWF  FA7
537C:  MOVLW  AA
537E:  MOVWF  FA7
5380:  BSF    FA6.1
5382:  BTFSC  FA6.1
5384:  BRA    5382
5386:  BCF    FA6.2
5388:  MOVF   00,W
538A:  IORWF  FF2,F
538C:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
538E:  MOVF   xA2,W
5390:  SUBLW  0C
5392:  BTFSS  FD8.2
5394:  BRA    5698
....................       
....................       if(visual==1) 
5396:  BTFSS  x95.4
5398:  BRA    5524
....................       { 
....................          if(unidad<1) 
539A:  MOVF   xA3,F
539C:  BNZ   53A2
....................          {unidad=4;} 
539E:  MOVLW  04
53A0:  MOVWF  xA3
....................           
....................          strcpy(Menus.Letra," Secado"); 
53A2:  MOVLW  04
53A4:  MOVWF  FEA
53A6:  MOVLW  E1
53A8:  MOVWF  FE9
53AA:  MOVFF  FF2,501
53AE:  BCF    FF2.7
53B0:  MOVLW  00
53B2:  MOVLB  0
53B4:  CALL   0C28
53B8:  TBLRD*-
53BA:  TBLRD*+
53BC:  MOVF   FF5,W
53BE:  MOVWF  FEE
53C0:  IORLW  00
53C2:  BNZ   53BA
53C4:  MOVLB  5
53C6:  BTFSC  x01.7
53C8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
53CA:  MOVLW  04
53CC:  MOVWF  x02
53CE:  MOVLW  E1
53D0:  MOVWF  x01
53D2:  CLRF   x03
53D4:  CLRF   x04
53D6:  MOVLW  01
53D8:  MOVWF  x05
53DA:  MOVLW  02
53DC:  MOVWF  x06
53DE:  MOVLB  0
53E0:  CALL   162E
....................           
....................          if(unidad==4) 
53E4:  MOVLB  4
53E6:  MOVF   xA3,W
53E8:  SUBLW  04
53EA:  BNZ   540A
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
53EC:  MOVFF  4CD,502
53F0:  MOVLW  14
53F2:  MOVLB  5
53F4:  MOVWF  x03
53F6:  MOVLW  28
53F8:  MOVWF  x04
53FA:  MOVLW  01
53FC:  MOVWF  x05
53FE:  MOVLW  02
5400:  MOVWF  x06
5402:  MOVLB  0
5404:  CALL   2422
....................          else 
5408:  BRA    5424
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
540A:  MOVFF  4CD,502
540E:  MOVLW  14
5410:  MOVLB  5
5412:  MOVWF  x03
5414:  MOVLW  28
5416:  MOVWF  x04
5418:  CLRF   x05
541A:  MOVLW  02
541C:  MOVWF  x06
541E:  MOVLB  0
5420:  CALL   2422
....................           
....................          if(unidad==3) 
5424:  MOVLB  4
5426:  MOVF   xA3,W
5428:  SUBLW  03
542A:  BNZ   5448
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
542C:  MOVFF  4CC,502
5430:  MOVLW  28
5432:  MOVLB  5
5434:  MOVWF  x03
5436:  MOVWF  x04
5438:  MOVLW  01
543A:  MOVWF  x05
543C:  MOVLW  02
543E:  MOVWF  x06
5440:  MOVLB  0
5442:  CALL   2422
....................          else 
5446:  BRA    5460
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
5448:  MOVFF  4CC,502
544C:  MOVLW  28
544E:  MOVLB  5
5450:  MOVWF  x03
5452:  MOVWF  x04
5454:  CLRF   x05
5456:  MOVLW  02
5458:  MOVWF  x06
545A:  MOVLB  0
545C:  CALL   2422
....................           
....................          if(unidad==2) 
5460:  MOVLB  4
5462:  MOVF   xA3,W
5464:  SUBLW  02
5466:  BNZ   5486
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
5468:  MOVFF  4CB,502
546C:  MOVLW  46
546E:  MOVLB  5
5470:  MOVWF  x03
5472:  MOVLW  28
5474:  MOVWF  x04
5476:  MOVLW  01
5478:  MOVWF  x05
547A:  MOVLW  02
547C:  MOVWF  x06
547E:  MOVLB  0
5480:  CALL   2422
....................          else 
5484:  BRA    54A0
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
5486:  MOVFF  4CB,502
548A:  MOVLW  46
548C:  MOVLB  5
548E:  MOVWF  x03
5490:  MOVLW  28
5492:  MOVWF  x04
5494:  CLRF   x05
5496:  MOVLW  02
5498:  MOVWF  x06
549A:  MOVLB  0
549C:  CALL   2422
....................           
....................          if(unidad==1) 
54A0:  MOVLB  4
54A2:  DECFSZ xA3,W
54A4:  BRA    54C4
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
54A6:  MOVFF  4CA,502
54AA:  MOVLW  5A
54AC:  MOVLB  5
54AE:  MOVWF  x03
54B0:  MOVLW  28
54B2:  MOVWF  x04
54B4:  MOVLW  01
54B6:  MOVWF  x05
54B8:  MOVLW  02
54BA:  MOVWF  x06
54BC:  MOVLB  0
54BE:  CALL   2422
....................          else 
54C2:  BRA    54DE
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
54C4:  MOVFF  4CA,502
54C8:  MOVLW  5A
54CA:  MOVLB  5
54CC:  MOVWF  x03
54CE:  MOVLW  28
54D0:  MOVWF  x04
54D2:  CLRF   x05
54D4:  MOVLW  02
54D6:  MOVWF  x06
54D8:  MOVLB  0
54DA:  CALL   2422
....................           
....................          strcpy(Menus.Letra,":"); 
54DE:  MOVLW  04
54E0:  MOVWF  FEA
54E2:  MOVLW  E1
54E4:  MOVWF  FE9
54E6:  MOVFF  FF2,501
54EA:  BCF    FF2.7
54EC:  MOVLW  00
54EE:  CALL   06BE
54F2:  TBLRD*-
54F4:  TBLRD*+
54F6:  MOVF   FF5,W
54F8:  MOVWF  FEE
54FA:  IORLW  00
54FC:  BNZ   54F4
54FE:  MOVLB  5
5500:  BTFSC  x01.7
5502:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
5504:  MOVLW  04
5506:  MOVWF  x02
5508:  MOVLW  E1
550A:  MOVWF  x01
550C:  MOVLW  3C
550E:  MOVWF  x03
5510:  MOVLW  2A
5512:  MOVWF  x04
5514:  MOVLW  02
5516:  MOVWF  x05
5518:  MOVWF  x06
551A:  MOVLB  0
551C:  CALL   162E
....................           
....................          visual=0; 
5520:  MOVLB  4
5522:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5524:  BSF    F92.0
5526:  BTFSS  F80.0
5528:  BRA    5566
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
552A:  MOVLW  01
552C:  SUBWF  xA3,W
552E:  CLRF   03
5530:  ADDLW  CA
5532:  MOVWF  FE9
5534:  MOVLW  04
5536:  ADDWFC 03,W
5538:  MOVWF  FEA
553A:  BTFSC  FEF.7
553C:  BRA    5544
553E:  MOVF   FEF,W
5540:  SUBLW  08
5542:  BNC   5566
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
5544:  MOVLW  1E
5546:  MOVLB  5
5548:  MOVWF  x02
554A:  MOVLB  0
554C:  CALL   0F96
5550:  MOVLW  01
5552:  MOVLB  4
5554:  SUBWF  xA3,W
5556:  CLRF   03
5558:  ADDLW  CA
555A:  MOVWF  FE9
555C:  MOVLW  04
555E:  ADDWFC 03,W
5560:  MOVWF  FEA
5562:  INCF   FEF,F
5564:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5566:  BSF    F92.1
5568:  BTFSS  F80.1
556A:  BRA    55A8
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
556C:  MOVLW  01
556E:  SUBWF  xA3,W
5570:  CLRF   03
5572:  ADDLW  CA
5574:  MOVWF  FE9
5576:  MOVLW  04
5578:  ADDWFC 03,W
557A:  MOVWF  FEA
557C:  BTFSC  FEF.7
557E:  BRA    55A8
5580:  MOVF   FEF,W
5582:  SUBLW  00
5584:  BC    55A8
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
5586:  MOVLW  1E
5588:  MOVLB  5
558A:  MOVWF  x02
558C:  MOVLB  0
558E:  CALL   0F96
5592:  MOVLW  01
5594:  MOVLB  4
5596:  SUBWF  xA3,W
5598:  CLRF   03
559A:  ADDLW  CA
559C:  MOVWF  FE9
559E:  MOVLW  04
55A0:  ADDWFC 03,W
55A2:  MOVWF  FEA
55A4:  DECF   FEF,F
55A6:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
55A8:  BSF    F92.2
55AA:  BTFSS  F80.2
55AC:  BRA    55C0
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
55AE:  MOVLW  1E
55B0:  MOVLB  5
55B2:  MOVWF  x02
55B4:  MOVLB  0
55B6:  CALL   0F96
55BA:  MOVLB  4
55BC:  DECF   xA3,F
55BE:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
55C0:  BSF    F92.3
55C2:  BTFSS  F80.3
55C4:  BRA    5698
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
55C6:  MOVLW  04
55C8:  MOVLB  5
55CA:  MOVWF  x01
55CC:  MOVLW  AF
55CE:  MOVWF  x02
55D0:  MOVLB  0
55D2:  CALL   0F96
55D6:  MOVLB  5
55D8:  DECFSZ x01,F
55DA:  BRA    55CC
55DC:  MOVLW  08
55DE:  MOVLB  4
55E0:  MOVWF  xA2
55E2:  MOVLB  5
55E4:  CLRF   x02
55E6:  MOVLB  0
55E8:  CALL   1000
55EC:  MOVLW  01
55EE:  MOVLB  4
55F0:  MOVWF  xA7
55F2:  BSF    x95.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
55F4:  MOVLW  04
55F6:  MOVWF  FA9
55F8:  MOVFF  4CA,FA8
55FC:  BCF    FA6.6
55FE:  BCF    FA6.7
5600:  BSF    FA6.2
5602:  MOVF   FF2,W
5604:  MOVWF  00
5606:  BCF    FF2.7
5608:  MOVLB  F
560A:  MOVLW  55
560C:  MOVWF  FA7
560E:  MOVLW  AA
5610:  MOVWF  FA7
5612:  BSF    FA6.1
5614:  BTFSC  FA6.1
5616:  BRA    5614
5618:  BCF    FA6.2
561A:  MOVF   00,W
561C:  IORWF  FF2,F
561E:  MOVLW  05
5620:  MOVWF  FA9
5622:  MOVFF  4CB,FA8
5626:  BCF    FA6.6
5628:  BCF    FA6.7
562A:  BSF    FA6.2
562C:  MOVF   FF2,W
562E:  MOVWF  00
5630:  BCF    FF2.7
5632:  MOVLW  55
5634:  MOVWF  FA7
5636:  MOVLW  AA
5638:  MOVWF  FA7
563A:  BSF    FA6.1
563C:  BTFSC  FA6.1
563E:  BRA    563C
5640:  BCF    FA6.2
5642:  MOVF   00,W
5644:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
5646:  MOVLW  06
5648:  MOVWF  FA9
564A:  MOVFF  4CC,FA8
564E:  BCF    FA6.6
5650:  BCF    FA6.7
5652:  BSF    FA6.2
5654:  MOVFF  FF2,00
5658:  BCF    FF2.7
565A:  MOVLW  55
565C:  MOVWF  FA7
565E:  MOVLW  AA
5660:  MOVWF  FA7
5662:  BSF    FA6.1
5664:  BTFSC  FA6.1
5666:  BRA    5664
5668:  BCF    FA6.2
566A:  MOVF   00,W
566C:  IORWF  FF2,F
566E:  MOVLW  07
5670:  MOVWF  FA9
5672:  MOVFF  4CD,FA8
5676:  BCF    FA6.6
5678:  BCF    FA6.7
567A:  BSF    FA6.2
567C:  MOVFF  FF2,00
5680:  BCF    FF2.7
5682:  MOVLW  55
5684:  MOVWF  FA7
5686:  MOVLW  AA
5688:  MOVWF  FA7
568A:  BSF    FA6.1
568C:  BTFSC  FA6.1
568E:  BRA    568C
5690:  BCF    FA6.2
5692:  MOVF   00,W
5694:  IORWF  FF2,F
5696:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
5698:  MOVF   xA2,W
569A:  SUBLW  0D
569C:  BTFSS  FD8.2
569E:  BRA    57D6
....................       
....................       if(visual==1) 
56A0:  BTFSS  x95.4
56A2:  BRA    570A
....................       { 
....................          glcd_fillScreen(OFF); 
56A4:  MOVLB  5
56A6:  CLRF   x02
56A8:  MOVLB  0
56AA:  CALL   1000
....................          strcpy(Menus.Letra,"Temperatura"); 
56AE:  MOVLW  04
56B0:  MOVWF  FEA
56B2:  MOVLW  E1
56B4:  MOVWF  FE9
56B6:  MOVFF  FF2,501
56BA:  BCF    FF2.7
56BC:  MOVLW  00
56BE:  CALL   0B68
56C2:  TBLRD*-
56C4:  TBLRD*+
56C6:  MOVF   FF5,W
56C8:  MOVWF  FEE
56CA:  IORLW  00
56CC:  BNZ   56C4
56CE:  MOVLB  5
56D0:  BTFSC  x01.7
56D2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
56D4:  MOVLW  04
56D6:  MOVWF  x02
56D8:  MOVLW  E1
56DA:  MOVWF  x01
56DC:  CLRF   x03
56DE:  CLRF   x04
56E0:  MOVLW  01
56E2:  MOVWF  x05
56E4:  MOVLW  02
56E6:  MOVWF  x06
56E8:  MOVLB  0
56EA:  CALL   162E
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
56EE:  MOVFF  4A5,502
56F2:  MOVLW  1E
56F4:  MOVLB  5
56F6:  MOVWF  x03
56F8:  MOVWF  x04
56FA:  CLRF   x05
56FC:  MOVLW  03
56FE:  MOVWF  x06
5700:  MOVLB  0
5702:  CALL   2422
....................           
....................          visual=0; 
5706:  MOVLB  4
5708:  BCF    x95.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
570A:  BSF    F92.0
570C:  BTFSS  F80.0
570E:  BRA    5742
....................          {   
....................             if(Setpoint<134) 
5710:  MOVF   xA5,W
5712:  SUBLW  85
5714:  BNC   5742
....................             { 
....................                if(Setpoint<100) 
5716:  MOVF   xA5,W
5718:  SUBLW  63
571A:  BNC   5730
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
571C:  MOVLW  64
571E:  MOVWF  xA5
5720:  MOVLB  5
5722:  MOVWF  x02
5724:  MOVLB  0
5726:  CALL   0F96
572A:  MOVLB  4
572C:  BSF    x95.4
....................                } 
....................                else 
572E:  BRA    5742
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
5730:  MOVLW  1E
5732:  MOVLB  5
5734:  MOVWF  x02
5736:  MOVLB  0
5738:  CALL   0F96
573C:  MOVLB  4
573E:  INCF   xA5,F
5740:  BSF    x95.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5742:  BSF    F92.1
5744:  BTFSS  F80.1
5746:  BRA    5760
....................          {   
....................             if(Setpoint>105) 
5748:  MOVF   xA5,W
574A:  SUBLW  69
574C:  BC    5760
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
574E:  MOVLW  1E
5750:  MOVLB  5
5752:  MOVWF  x02
5754:  MOVLB  0
5756:  CALL   0F96
575A:  MOVLB  4
575C:  DECF   xA5,F
575E:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5760:  BSF    F92.2
5762:  BTFSS  F80.2
5764:  BRA    5776
....................          {   
....................             delay_ms(30);visual=1; 
5766:  MOVLW  1E
5768:  MOVLB  5
576A:  MOVWF  x02
576C:  MOVLB  0
576E:  CALL   0F96
5772:  MOVLB  4
5774:  BSF    x95.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5776:  BSF    F92.3
5778:  BTFSS  F80.3
577A:  BRA    57D6
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
577C:  MOVLW  04
577E:  MOVLB  5
5780:  MOVWF  x01
5782:  MOVLW  AF
5784:  MOVWF  x02
5786:  MOVLB  0
5788:  CALL   0F96
578C:  MOVLB  5
578E:  DECFSZ x01,F
5790:  BRA    5782
5792:  MOVLW  08
5794:  MOVLB  4
5796:  MOVWF  xA2
5798:  MOVLB  5
579A:  CLRF   x02
579C:  MOVLB  0
579E:  CALL   1000
57A2:  MOVLW  01
57A4:  MOVLB  4
57A6:  MOVWF  xA7
57A8:  BSF    x95.4
....................             write_eeprom(8,Setpoint); 
57AA:  MOVLW  08
57AC:  MOVWF  FA9
57AE:  MOVFF  4A5,FA8
57B2:  BCF    FA6.6
57B4:  BCF    FA6.7
57B6:  BSF    FA6.2
57B8:  MOVF   FF2,W
57BA:  MOVWF  00
57BC:  BCF    FF2.7
57BE:  MOVLB  F
57C0:  MOVLW  55
57C2:  MOVWF  FA7
57C4:  MOVLW  AA
57C6:  MOVWF  FA7
57C8:  BSF    FA6.1
57CA:  BTFSC  FA6.1
57CC:  BRA    57CA
57CE:  BCF    FA6.2
57D0:  MOVF   00,W
57D2:  IORWF  FF2,F
57D4:  MOVLB  4
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
57D6:  MOVF   xA2,W
57D8:  SUBLW  0E
57DA:  BTFSS  FD8.2
57DC:  BRA    5ACC
....................       if(Nivel>6) 
57DE:  MOVF   xB5,F
57E0:  BNZ   57E8
57E2:  MOVF   xB4,W
57E4:  SUBLW  06
57E6:  BC    57EE
....................          Nivel=6; 
57E8:  CLRF   xB5
57EA:  MOVLW  06
57EC:  MOVWF  xB4
....................           
....................       if(visual==1) 
57EE:  BTFSS  x95.4
57F0:  BRA    5852
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
57F2:  MOVLW  04
57F4:  MOVWF  FEA
57F6:  MOVLW  E1
57F8:  MOVWF  FE9
57FA:  MOVFF  FF2,501
57FE:  BCF    FF2.7
5800:  MOVLW  00
5802:  MOVLB  0
5804:  CALL   0C4A
5808:  TBLRD*-
580A:  TBLRD*+
580C:  MOVF   FF5,W
580E:  MOVWF  FEE
5810:  IORLW  00
5812:  BNZ   580A
5814:  MOVLB  5
5816:  BTFSC  x01.7
5818:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
581A:  MOVLW  04
581C:  MOVWF  x02
581E:  MOVLW  E1
5820:  MOVWF  x01
5822:  CLRF   x03
5824:  CLRF   x04
5826:  MOVLW  01
5828:  MOVWF  x05
582A:  MOVLW  02
582C:  MOVWF  x06
582E:  MOVLB  0
5830:  CALL   162E
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
5834:  MOVFF  4B4,502
5838:  MOVLW  32
583A:  MOVLB  5
583C:  MOVWF  x03
583E:  MOVLW  28
5840:  MOVWF  x04
5842:  CLRF   x05
5844:  MOVLW  02
5846:  MOVWF  x06
5848:  MOVLB  0
584A:  CALL   2422
....................           
....................          visual=0; 
584E:  MOVLB  4
5850:  BCF    x95.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
5852:  BSF    F92.0
5854:  BTFSS  F80.0
5856:  BRA    5878
....................          {   
....................             if(Nivel<6) 
5858:  MOVF   xB5,F
585A:  BNZ   5878
585C:  MOVF   xB4,W
585E:  SUBLW  05
5860:  BNC   5878
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
5862:  MOVLW  1E
5864:  MOVLB  5
5866:  MOVWF  x02
5868:  MOVLB  0
586A:  CALL   0F96
586E:  MOVLB  4
5870:  INCF   xB4,F
5872:  BTFSC  FD8.2
5874:  INCF   xB5,F
5876:  BSF    x95.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5878:  BSF    F92.1
587A:  BTFSS  F80.1
587C:  BRA    58A0
....................          {   
....................             if(Nivel>1) 
587E:  MOVF   xB5,F
5880:  BNZ   5888
5882:  MOVF   xB4,W
5884:  SUBLW  01
5886:  BC    58A0
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
5888:  MOVLW  1E
588A:  MOVLB  5
588C:  MOVWF  x02
588E:  MOVLB  0
5890:  CALL   0F96
5894:  MOVLB  4
5896:  MOVF   xB4,W
5898:  BTFSC  FD8.2
589A:  DECF   xB5,F
589C:  DECF   xB4,F
589E:  BSF    x95.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
58A0:  BTFSS  x95.5
58A2:  BRA    5A5C
....................          { 
....................             if(RIGHT)//Si oprime SET 
58A4:  BSF    F92.2
58A6:  BTFSS  F80.2
58A8:  BRA    5A5A
....................             {   
....................                write_eeprom(9,Nivel); 
58AA:  MOVLW  09
58AC:  MOVWF  FA9
58AE:  MOVFF  4B4,FA8
58B2:  BCF    FA6.6
58B4:  BCF    FA6.7
58B6:  BSF    FA6.2
58B8:  MOVF   FF2,W
58BA:  MOVWF  00
58BC:  BCF    FF2.7
58BE:  MOVLB  F
58C0:  MOVLW  55
58C2:  MOVWF  FA7
58C4:  MOVLW  AA
58C6:  MOVWF  FA7
58C8:  BSF    FA6.1
58CA:  BTFSC  FA6.1
58CC:  BRA    58CA
58CE:  BCF    FA6.2
58D0:  MOVF   00,W
58D2:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
58D4:  MOVLW  14
58D6:  MOVLB  4
58D8:  MOVWF  xA2
58DA:  MOVLW  0F
58DC:  MOVLB  5
58DE:  MOVWF  x13
58E0:  MOVLW  12
58E2:  MOVWF  x14
58E4:  MOVLW  1E
58E6:  MOVWF  x15
58E8:  MOVLW  35
58EA:  MOVWF  x16
58EC:  CLRF   x17
58EE:  MOVLW  01
58F0:  MOVWF  x18
58F2:  MOVLB  0
58F4:  CALL   156C
58F8:  MOVLB  4
58FA:  CLRF   xA9
58FC:  MOVLW  C0
58FE:  IORWF  FF2,F
5900:  MOVLB  5
5902:  CLRF   x02
5904:  MOVLB  0
5906:  CALL   1000
....................                strcpy(Menus.Letra,"Calentando"); 
590A:  MOVLW  04
590C:  MOVWF  FEA
590E:  MOVLW  E1
5910:  MOVWF  FE9
5912:  MOVFF  FF2,501
5916:  BCF    FF2.7
5918:  MOVLW  00
591A:  CALL   0964
591E:  TBLRD*-
5920:  TBLRD*+
5922:  MOVF   FF5,W
5924:  MOVWF  FEE
5926:  IORLW  00
5928:  BNZ   5920
592A:  MOVLB  5
592C:  BTFSC  x01.7
592E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
5930:  MOVLW  04
5932:  MOVWF  x02
5934:  MOVLW  E1
5936:  MOVWF  x01
5938:  CLRF   x03
593A:  MOVLW  37
593C:  MOVWF  x04
593E:  MOVLW  02
5940:  MOVWF  x05
5942:  MOVLW  01
5944:  MOVWF  x06
5946:  MOVLB  0
5948:  CALL   162E
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
594C:  MOVLW  0F
594E:  MOVLB  5
5950:  MOVWF  x13
5952:  MOVLW  12
5954:  MOVWF  x14
5956:  MOVLW  1E
5958:  MOVWF  x15
595A:  MOVLW  35
595C:  MOVWF  x16
595E:  CLRF   x17
5960:  MOVLW  01
5962:  MOVWF  x18
5964:  MOVLB  0
5966:  CALL   156C
....................                glcd_imagen(5); 
596A:  MOVLW  05
596C:  MOVLB  5
596E:  MOVWF  x01
5970:  MOVLB  0
5972:  CALL   2076
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5976:  MOVLW  04
5978:  MOVWF  FEA
597A:  MOVLW  E1
597C:  MOVWF  FE9
597E:  MOVFF  FF2,501
5982:  BCF    FF2.7
5984:  MOVLW  00
5986:  CALL   098A
598A:  TBLRD*-
598C:  TBLRD*+
598E:  MOVF   FF5,W
5990:  MOVWF  FEE
5992:  IORLW  00
5994:  BNZ   598C
5996:  MOVLB  5
5998:  BTFSC  x01.7
599A:  BSF    FF2.7
599C:  MOVLW  04
599E:  MOVWF  x02
59A0:  MOVLW  E1
59A2:  MOVWF  x01
59A4:  CLRF   x03
59A6:  CLRF   x04
59A8:  MOVLW  02
59AA:  MOVWF  x05
59AC:  MOVLW  01
59AE:  MOVWF  x06
59B0:  MOVLB  0
59B2:  CALL   162E
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
59B6:  MOVLW  04
59B8:  MOVWF  FEA
59BA:  MOVLW  E1
59BC:  MOVWF  FE9
59BE:  MOVFF  FF2,501
59C2:  BCF    FF2.7
59C4:  MOVLW  00
59C6:  CALL   09AC
59CA:  TBLRD*-
59CC:  TBLRD*+
59CE:  MOVF   FF5,W
59D0:  MOVWF  FEE
59D2:  IORLW  00
59D4:  BNZ   59CC
59D6:  MOVLB  5
59D8:  BTFSC  x01.7
59DA:  BSF    FF2.7
59DC:  MOVLW  04
59DE:  MOVWF  x02
59E0:  MOVLW  E1
59E2:  MOVWF  x01
59E4:  CLRF   x03
59E6:  MOVLW  08
59E8:  MOVWF  x04
59EA:  MOVLW  02
59EC:  MOVWF  x05
59EE:  MOVLW  01
59F0:  MOVWF  x06
59F2:  MOVLB  0
59F4:  CALL   162E
....................                glcd_circle(95,40,2,NO,ON); 
59F8:  MOVLW  5F
59FA:  MOVLB  5
59FC:  MOVWF  x01
59FE:  MOVLW  28
5A00:  MOVWF  x02
5A02:  MOVLW  02
5A04:  MOVWF  x03
5A06:  CLRF   x04
5A08:  MOVLW  01
5A0A:  MOVWF  x05
5A0C:  MOVLB  0
5A0E:  CALL   2172
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5A12:  MOVLW  04
5A14:  MOVWF  FEA
5A16:  MOVLW  E1
5A18:  MOVWF  FE9
5A1A:  MOVFF  FF2,501
5A1E:  BCF    FF2.7
5A20:  MOVLW  00
5A22:  CALL   09CE
5A26:  TBLRD*-
5A28:  TBLRD*+
5A2A:  MOVF   FF5,W
5A2C:  MOVWF  FEE
5A2E:  IORLW  00
5A30:  BNZ   5A28
5A32:  MOVLB  5
5A34:  BTFSC  x01.7
5A36:  BSF    FF2.7
5A38:  MOVLW  04
5A3A:  MOVWF  x02
5A3C:  MOVLW  E1
5A3E:  MOVWF  x01
5A40:  MOVLW  66
5A42:  MOVWF  x03
5A44:  MOVLW  28
5A46:  MOVWF  x04
5A48:  MOVLW  02
5A4A:  MOVWF  x05
5A4C:  MOVWF  x06
5A4E:  MOVLB  0
5A50:  CALL   162E
....................                MuestraTiemposProgramados(); 
5A54:  CALL   257A
5A58:  MOVLB  4
....................             }       
....................          } 
....................          else 
5A5A:  BRA    5ACC
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5A5C:  BSF    F92.3
5A5E:  BTFSS  F80.3
5A60:  BRA    5ACC
....................             { 
....................                if(Nivel<6) 
5A62:  MOVF   xB5,F
5A64:  BNZ   5A70
5A66:  MOVF   xB4,W
5A68:  SUBLW  05
5A6A:  BNC   5A70
....................                { 
....................                   desfoguelento=1; 
5A6C:  BSF    x95.5
....................                } 
....................                else 
5A6E:  BRA    5A72
....................                { 
....................                   desfoguelento=0; 
5A70:  BCF    x95.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5A72:  MOVLW  04
5A74:  MOVLB  5
5A76:  MOVWF  x01
5A78:  MOVLW  AF
5A7A:  MOVWF  x02
5A7C:  MOVLB  0
5A7E:  CALL   0F96
5A82:  MOVLB  5
5A84:  DECFSZ x01,F
5A86:  BRA    5A78
5A88:  MOVLW  08
5A8A:  MOVLB  4
5A8C:  MOVWF  xA2
5A8E:  MOVLB  5
5A90:  CLRF   x02
5A92:  MOVLB  0
5A94:  CALL   1000
5A98:  MOVLW  01
5A9A:  MOVLB  4
5A9C:  MOVWF  xA7
5A9E:  BSF    x95.4
....................                write_eeprom(9,Nivel); 
5AA0:  MOVLW  09
5AA2:  MOVWF  FA9
5AA4:  MOVFF  4B4,FA8
5AA8:  BCF    FA6.6
5AAA:  BCF    FA6.7
5AAC:  BSF    FA6.2
5AAE:  MOVF   FF2,W
5AB0:  MOVWF  00
5AB2:  BCF    FF2.7
5AB4:  MOVLB  F
5AB6:  MOVLW  55
5AB8:  MOVWF  FA7
5ABA:  MOVLW  AA
5ABC:  MOVWF  FA7
5ABE:  BSF    FA6.1
5AC0:  BTFSC  FA6.1
5AC2:  BRA    5AC0
5AC4:  BCF    FA6.2
5AC6:  MOVF   00,W
5AC8:  IORWF  FF2,F
5ACA:  MOVLB  4
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5ACC:  MOVF   xA2,W
5ACE:  SUBLW  0F
5AD0:  BTFSS  FD8.2
5AD2:  BRA    5E06
....................        
....................       if(visual==1) 
5AD4:  BTFSS  x95.4
5AD6:  BRA    5C3C
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5AD8:  MOVLW  04
5ADA:  MOVWF  FEA
5ADC:  MOVLW  E1
5ADE:  MOVWF  FE9
5AE0:  MOVFF  FF2,501
5AE4:  BCF    FF2.7
5AE6:  MOVLW  00
5AE8:  MOVLB  0
5AEA:  CALL   0BBA
5AEE:  TBLRD*-
5AF0:  TBLRD*+
5AF2:  MOVF   FF5,W
5AF4:  MOVWF  FEE
5AF6:  IORLW  00
5AF8:  BNZ   5AF0
5AFA:  MOVLB  5
5AFC:  BTFSC  x01.7
5AFE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5B00:  MOVLW  04
5B02:  MOVWF  x02
5B04:  MOVLW  E1
5B06:  MOVWF  x01
5B08:  CLRF   x03
5B0A:  CLRF   x04
5B0C:  MOVLW  01
5B0E:  MOVWF  x05
5B10:  MOVLW  02
5B12:  MOVWF  x06
5B14:  MOVLB  0
5B16:  CALL   162E
....................           
....................          if(Opcion==2) 
5B1A:  MOVLB  4
5B1C:  MOVF   xA7,W
5B1E:  SUBLW  02
5B20:  BNZ   5BAC
....................          {strcpy(Menus.Letra,"SI"); 
5B22:  MOVLW  04
5B24:  MOVWF  FEA
5B26:  MOVLW  E1
5B28:  MOVWF  FE9
5B2A:  MOVFF  FF2,501
5B2E:  BCF    FF2.7
5B30:  MOVLW  00
5B32:  MOVLB  0
5B34:  CALL   0C6E
5B38:  TBLRD*-
5B3A:  TBLRD*+
5B3C:  MOVF   FF5,W
5B3E:  MOVWF  FEE
5B40:  IORLW  00
5B42:  BNZ   5B3A
5B44:  MOVLB  5
5B46:  BTFSC  x01.7
5B48:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5B4A:  MOVLW  04
5B4C:  MOVWF  x02
5B4E:  MOVLW  E1
5B50:  MOVWF  x01
5B52:  MOVLW  32
5B54:  MOVWF  x03
5B56:  MOVLW  19
5B58:  MOVWF  x04
5B5A:  MOVLW  01
5B5C:  MOVWF  x05
5B5E:  MOVLW  02
5B60:  MOVWF  x06
5B62:  MOVLB  0
5B64:  CALL   162E
....................          strcpy(Menus.Letra,"NO"); 
5B68:  MOVLW  04
5B6A:  MOVWF  FEA
5B6C:  MOVLW  E1
5B6E:  MOVWF  FE9
5B70:  MOVFF  FF2,501
5B74:  BCF    FF2.7
5B76:  MOVLW  00
5B78:  CALL   0C8C
5B7C:  TBLRD*-
5B7E:  TBLRD*+
5B80:  MOVF   FF5,W
5B82:  MOVWF  FEE
5B84:  IORLW  00
5B86:  BNZ   5B7E
5B88:  MOVLB  5
5B8A:  BTFSC  x01.7
5B8C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5B8E:  MOVLW  04
5B90:  MOVWF  x02
5B92:  MOVLW  E1
5B94:  MOVWF  x01
5B96:  MOVLW  32
5B98:  MOVWF  x03
5B9A:  MOVLW  2D
5B9C:  MOVWF  x04
5B9E:  CLRF   x05
5BA0:  MOVLW  02
5BA2:  MOVWF  x06
5BA4:  MOVLB  0
5BA6:  CALL   162E
5BAA:  MOVLB  4
....................          } 
....................          if(Opcion==1) 
5BAC:  DECFSZ xA7,W
5BAE:  BRA    5C3A
....................          {strcpy(Menus.Letra,"SI"); 
5BB0:  MOVLW  04
5BB2:  MOVWF  FEA
5BB4:  MOVLW  E1
5BB6:  MOVWF  FE9
5BB8:  MOVFF  FF2,501
5BBC:  BCF    FF2.7
5BBE:  MOVLW  00
5BC0:  MOVLB  0
5BC2:  CALL   0C6E
5BC6:  TBLRD*-
5BC8:  TBLRD*+
5BCA:  MOVF   FF5,W
5BCC:  MOVWF  FEE
5BCE:  IORLW  00
5BD0:  BNZ   5BC8
5BD2:  MOVLB  5
5BD4:  BTFSC  x01.7
5BD6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5BD8:  MOVLW  04
5BDA:  MOVWF  x02
5BDC:  MOVLW  E1
5BDE:  MOVWF  x01
5BE0:  MOVLW  32
5BE2:  MOVWF  x03
5BE4:  MOVLW  19
5BE6:  MOVWF  x04
5BE8:  CLRF   x05
5BEA:  MOVLW  02
5BEC:  MOVWF  x06
5BEE:  MOVLB  0
5BF0:  CALL   162E
....................          strcpy(Menus.Letra,"NO"); 
5BF4:  MOVLW  04
5BF6:  MOVWF  FEA
5BF8:  MOVLW  E1
5BFA:  MOVWF  FE9
5BFC:  MOVFF  FF2,501
5C00:  BCF    FF2.7
5C02:  MOVLW  00
5C04:  CALL   0C8C
5C08:  TBLRD*-
5C0A:  TBLRD*+
5C0C:  MOVF   FF5,W
5C0E:  MOVWF  FEE
5C10:  IORLW  00
5C12:  BNZ   5C0A
5C14:  MOVLB  5
5C16:  BTFSC  x01.7
5C18:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5C1A:  MOVLW  04
5C1C:  MOVWF  x02
5C1E:  MOVLW  E1
5C20:  MOVWF  x01
5C22:  MOVLW  32
5C24:  MOVWF  x03
5C26:  MOVLW  2D
5C28:  MOVWF  x04
5C2A:  MOVLW  01
5C2C:  MOVWF  x05
5C2E:  MOVLW  02
5C30:  MOVWF  x06
5C32:  MOVLB  0
5C34:  CALL   162E
5C38:  MOVLB  4
....................          } 
....................          visual=0; 
5C3A:  BCF    x95.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5C3C:  BSF    F92.0
5C3E:  BTFSS  F80.0
5C40:  BRA    5C4C
....................       { 
....................          if(Opcion<2) 
5C42:  MOVF   xA7,W
5C44:  SUBLW  01
5C46:  BNC   5C4A
....................          { 
....................             Opcion++; 
5C48:  INCF   xA7,F
....................          } 
....................          visual=1; 
5C4A:  BSF    x95.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5C4C:  BSF    F92.1
5C4E:  BTFSS  F80.1
5C50:  BRA    5C5C
....................       {   
....................          if(Opcion>1) 
5C52:  MOVF   xA7,W
5C54:  SUBLW  01
5C56:  BC    5C5A
....................          { 
....................             Opcion--; 
5C58:  DECF   xA7,F
....................          }   
....................          visual=1; 
5C5A:  BSF    x95.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5C5C:  BSF    F92.2
5C5E:  BTFSS  F80.2
5C60:  BRA    5DD2
....................       {   
....................          if(Opcion==2) 
5C62:  MOVF   xA7,W
5C64:  SUBLW  02
5C66:  BTFSS  FD8.2
5C68:  BRA    5DA4
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5C6A:  MOVLW  14
5C6C:  MOVWF  xA2
5C6E:  MOVLW  0F
5C70:  MOVLB  5
5C72:  MOVWF  x13
5C74:  MOVLW  12
5C76:  MOVWF  x14
5C78:  MOVLW  1E
5C7A:  MOVWF  x15
5C7C:  MOVLW  35
5C7E:  MOVWF  x16
5C80:  CLRF   x17
5C82:  MOVLW  01
5C84:  MOVWF  x18
5C86:  MOVLB  0
5C88:  CALL   156C
5C8C:  MOVLB  4
5C8E:  CLRF   xA9
5C90:  MOVLW  C0
5C92:  IORWF  FF2,F
5C94:  MOVLB  5
5C96:  CLRF   x02
5C98:  MOVLB  0
5C9A:  CALL   1000
....................             strcpy(Menus.Letra,"Calentando"); 
5C9E:  MOVLW  04
5CA0:  MOVWF  FEA
5CA2:  MOVLW  E1
5CA4:  MOVWF  FE9
5CA6:  MOVFF  FF2,501
5CAA:  BCF    FF2.7
5CAC:  MOVLW  00
5CAE:  CALL   0964
5CB2:  TBLRD*-
5CB4:  TBLRD*+
5CB6:  MOVF   FF5,W
5CB8:  MOVWF  FEE
5CBA:  IORLW  00
5CBC:  BNZ   5CB4
5CBE:  MOVLB  5
5CC0:  BTFSC  x01.7
5CC2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5CC4:  MOVLW  04
5CC6:  MOVWF  x02
5CC8:  MOVLW  E1
5CCA:  MOVWF  x01
5CCC:  CLRF   x03
5CCE:  MOVLW  37
5CD0:  MOVWF  x04
5CD2:  MOVLW  02
5CD4:  MOVWF  x05
5CD6:  MOVLW  01
5CD8:  MOVWF  x06
5CDA:  MOVLB  0
5CDC:  CALL   162E
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5CE0:  MOVLW  0F
5CE2:  MOVLB  5
5CE4:  MOVWF  x13
5CE6:  MOVLW  12
5CE8:  MOVWF  x14
5CEA:  MOVLW  1E
5CEC:  MOVWF  x15
5CEE:  MOVLW  35
5CF0:  MOVWF  x16
5CF2:  CLRF   x17
5CF4:  MOVLW  01
5CF6:  MOVWF  x18
5CF8:  MOVLB  0
5CFA:  CALL   156C
....................             glcd_imagen(5); 
5CFE:  MOVLW  05
5D00:  MOVLB  5
5D02:  MOVWF  x01
5D04:  MOVLB  0
5D06:  CALL   2076
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5D0A:  MOVLW  04
5D0C:  MOVWF  FEA
5D0E:  MOVLW  E1
5D10:  MOVWF  FE9
5D12:  MOVFF  FF2,501
5D16:  BCF    FF2.7
5D18:  MOVLW  00
5D1A:  CALL   098A
5D1E:  TBLRD*-
5D20:  TBLRD*+
5D22:  MOVF   FF5,W
5D24:  MOVWF  FEE
5D26:  IORLW  00
5D28:  BNZ   5D20
5D2A:  MOVLB  5
5D2C:  BTFSC  x01.7
5D2E:  BSF    FF2.7
5D30:  MOVLW  04
5D32:  MOVWF  x02
5D34:  MOVLW  E1
5D36:  MOVWF  x01
5D38:  CLRF   x03
5D3A:  CLRF   x04
5D3C:  MOVLW  02
5D3E:  MOVWF  x05
5D40:  MOVLW  01
5D42:  MOVWF  x06
5D44:  MOVLB  0
5D46:  CALL   162E
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5D4A:  MOVLW  04
5D4C:  MOVWF  FEA
5D4E:  MOVLW  E1
5D50:  MOVWF  FE9
5D52:  MOVFF  FF2,501
5D56:  BCF    FF2.7
5D58:  MOVLW  00
5D5A:  CALL   09AC
5D5E:  TBLRD*-
5D60:  TBLRD*+
5D62:  MOVF   FF5,W
5D64:  MOVWF  FEE
5D66:  IORLW  00
5D68:  BNZ   5D60
5D6A:  MOVLB  5
5D6C:  BTFSC  x01.7
5D6E:  BSF    FF2.7
5D70:  MOVLW  04
5D72:  MOVWF  x02
5D74:  MOVLW  E1
5D76:  MOVWF  x01
5D78:  CLRF   x03
5D7A:  MOVLW  08
5D7C:  MOVWF  x04
5D7E:  MOVLW  02
5D80:  MOVWF  x05
5D82:  MOVLW  01
5D84:  MOVWF  x06
5D86:  MOVLB  0
5D88:  CALL   162E
....................             MuestraTiemposProgramados(); 
5D8C:  CALL   257A
....................             if(Nivel<6) 
5D90:  MOVLB  4
5D92:  MOVF   xB5,F
5D94:  BNZ   5DA0
5D96:  MOVF   xB4,W
5D98:  SUBLW  05
5D9A:  BNC   5DA0
....................                { 
....................                   desfoguelento=1; 
5D9C:  BSF    x95.5
....................                } 
....................                else 
5D9E:  BRA    5DA2
....................                { 
....................                   desfoguelento=0; 
5DA0:  BCF    x95.5
....................                } 
....................          } 
....................          else 
5DA2:  BRA    5DD2
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DA4:  MOVLW  04
5DA6:  MOVLB  5
5DA8:  MOVWF  x01
5DAA:  MOVLW  AF
5DAC:  MOVWF  x02
5DAE:  MOVLB  0
5DB0:  CALL   0F96
5DB4:  MOVLB  5
5DB6:  DECFSZ x01,F
5DB8:  BRA    5DAA
5DBA:  MOVLW  08
5DBC:  MOVLB  4
5DBE:  MOVWF  xA2
5DC0:  MOVLB  5
5DC2:  CLRF   x02
5DC4:  MOVLB  0
5DC6:  CALL   1000
5DCA:  MOVLW  01
5DCC:  MOVLB  4
5DCE:  MOVWF  xA7
5DD0:  BSF    x95.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5DD2:  BSF    F92.3
5DD4:  BTFSS  F80.3
5DD6:  BRA    5E06
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5DD8:  MOVLW  04
5DDA:  MOVLB  5
5DDC:  MOVWF  x01
5DDE:  MOVLW  AF
5DE0:  MOVWF  x02
5DE2:  MOVLB  0
5DE4:  CALL   0F96
5DE8:  MOVLB  5
5DEA:  DECFSZ x01,F
5DEC:  BRA    5DDE
5DEE:  MOVLW  08
5DF0:  MOVLB  4
5DF2:  MOVWF  xA2
5DF4:  MOVLB  5
5DF6:  CLRF   x02
5DF8:  MOVLB  0
5DFA:  CALL   1000
5DFE:  MOVLW  01
5E00:  MOVLB  4
5E02:  MOVWF  xA7
5E04:  BSF    x95.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
5E06:  MOVF   xA2,W
5E08:  SUBLW  14
5E0A:  BTFSS  FD8.2
5E0C:  GOTO   6986
....................     
....................    Lectura_Esclavos(); 
5E10:  MOVLB  0
5E12:  CALL   1EBC
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
5E16:  MOVLB  4
5E18:  BTFSS  x96.1
5E1A:  BRA    5F62
5E1C:  DECFSZ x8D,W
5E1E:  BRA    5F62
5E20:  DECFSZ x8E,W
5E22:  BRA    5F62
5E24:  MOVF   xA8,W
5E26:  SUBLW  01
5E28:  BTFSS  FD8.0
5E2A:  BRA    5F62
5E2C:  MOVF   x92,F
5E2E:  BTFSS  FD8.2
5E30:  BRA    5F62
5E32:  MOVF   x93,F
5E34:  BTFSS  FD8.2
5E36:  BRA    5F62
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
5E38:  MOVF   xA8,F
5E3A:  BNZ   5ED4
5E3C:  BTFSC  x96.2
5E3E:  BRA    5ED4
....................       { 
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
5E40:  MOVLW  0F
5E42:  MOVLB  5
5E44:  MOVWF  x13
5E46:  MOVLW  12
5E48:  MOVWF  x14
5E4A:  MOVLW  1E
5E4C:  MOVWF  x15
5E4E:  MOVLW  35
5E50:  MOVWF  x16
5E52:  CLRF   x17
5E54:  MOVLW  01
5E56:  MOVWF  x18
5E58:  MOVLB  0
5E5A:  CALL   156C
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5E5E:  MOVLB  5
5E60:  CLRF   x13
5E62:  MOVLW  37
5E64:  MOVWF  x14
5E66:  MOVLW  7F
5E68:  MOVWF  x15
5E6A:  MOVLW  3F
5E6C:  MOVWF  x16
5E6E:  MOVLW  01
5E70:  MOVWF  x17
5E72:  CLRF   x18
5E74:  MOVLB  0
5E76:  CALL   156C
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
5E7A:  MOVLW  04
5E7C:  MOVWF  FEA
5E7E:  MOVLW  E1
5E80:  MOVWF  FE9
5E82:  MOVFF  FF2,501
5E86:  BCF    FF2.7
5E88:  MOVLW  00
5E8A:  CALL   0964
5E8E:  TBLRD*-
5E90:  TBLRD*+
5E92:  MOVF   FF5,W
5E94:  MOVWF  FEE
5E96:  IORLW  00
5E98:  BNZ   5E90
5E9A:  MOVLB  5
5E9C:  BTFSC  x01.7
5E9E:  BSF    FF2.7
5EA0:  MOVLW  04
5EA2:  MOVWF  x02
5EA4:  MOVLW  E1
5EA6:  MOVWF  x01
5EA8:  CLRF   x03
5EAA:  MOVLW  37
5EAC:  MOVWF  x04
5EAE:  MOVLW  02
5EB0:  MOVWF  x05
5EB2:  MOVLW  01
5EB4:  MOVWF  x06
5EB6:  MOVLB  0
5EB8:  CALL   162E
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5EBC:  MOVLB  4
5EBE:  BSF    x96.2
5EC0:  BCF    x96.3
5EC2:  BCF    x96.4
5EC4:  BCF    x96.5
5EC6:  BCF    x96.6
5EC8:  BCF    x96.7
5ECA:  BCF    x97.0
5ECC:  BCF    x97.1
....................          EVDesfogue=0;Control=1; 
5ECE:  CLRF   x99
5ED0:  MOVLW  01
5ED2:  MOVWF  xA0
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
5ED4:  DECFSZ xA8,W
5ED6:  BRA    5F54
5ED8:  BTFSC  x96.5
5EDA:  BRA    5F54
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5EDC:  MOVLB  5
5EDE:  CLRF   x13
5EE0:  MOVLW  37
5EE2:  MOVWF  x14
5EE4:  MOVLW  7F
5EE6:  MOVWF  x15
5EE8:  MOVLW  3F
5EEA:  MOVWF  x16
5EEC:  MOVLW  01
5EEE:  MOVWF  x17
5EF0:  CLRF   x18
5EF2:  MOVLB  0
5EF4:  CALL   156C
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
5EF8:  MOVLW  04
5EFA:  MOVWF  FEA
5EFC:  MOVLW  E1
5EFE:  MOVWF  FE9
5F00:  MOVFF  FF2,501
5F04:  BCF    FF2.7
5F06:  MOVLW  00
5F08:  CALL   0CAA
5F0C:  TBLRD*-
5F0E:  TBLRD*+
5F10:  MOVF   FF5,W
5F12:  MOVWF  FEE
5F14:  IORLW  00
5F16:  BNZ   5F0E
5F18:  MOVLB  5
5F1A:  BTFSC  x01.7
5F1C:  BSF    FF2.7
5F1E:  MOVLW  04
5F20:  MOVWF  x02
5F22:  MOVLW  E1
5F24:  MOVWF  x01
5F26:  CLRF   x03
5F28:  MOVLW  37
5F2A:  MOVWF  x04
5F2C:  MOVLW  02
5F2E:  MOVWF  x05
5F30:  MOVLW  01
5F32:  MOVWF  x06
5F34:  MOVLB  0
5F36:  CALL   162E
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F3A:  MOVLB  4
5F3C:  BCF    x96.2
5F3E:  BCF    x96.3
5F40:  BCF    x96.4
5F42:  BSF    x96.5
5F44:  BCF    x96.6
5F46:  BCF    x96.7
5F48:  BCF    x97.0
5F4A:  BCF    x97.1
....................          EVDesfogue=0;EVTrampa=0;Control=1; 
5F4C:  CLRF   x99
5F4E:  CLRF   x9B
5F50:  MOVLW  01
5F52:  MOVWF  xA0
....................       } 
....................           
....................       Control=1; 
5F54:  MOVLW  01
5F56:  MOVWF  xA0
....................       Envio_Esclavos(); 
5F58:  MOVLB  0
5F5A:  CALL   2016
....................    } 
....................    else 
5F5E:  BRA    6440
5F60:  MOVLB  4
....................    { 
....................       Control=0; 
5F62:  CLRF   xA0
....................       if(Alarma>0 || Alarma2>0) 
5F64:  MOVF   x92,F
5F66:  BNZ   5F6E
5F68:  MOVF   x94,F
5F6A:  BTFSC  FD8.2
5F6C:  BRA    60EA
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
5F6E:  DECFSZ x92,W
5F70:  BRA    5FE8
....................          { 
....................             if(disp_Alarma==0) 
5F72:  BTFSC  x97.3
5F74:  BRA    5FE8
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5F76:  MOVLB  5
5F78:  CLRF   x13
5F7A:  MOVLW  37
5F7C:  MOVWF  x14
5F7E:  MOVLW  7F
5F80:  MOVWF  x15
5F82:  MOVLW  3F
5F84:  MOVWF  x16
5F86:  MOVLW  01
5F88:  MOVWF  x17
5F8A:  CLRF   x18
5F8C:  MOVLB  0
5F8E:  CALL   156C
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
5F92:  MOVLW  04
5F94:  MOVWF  FEA
5F96:  MOVLW  E1
5F98:  MOVWF  FE9
5F9A:  MOVFF  FF2,501
5F9E:  BCF    FF2.7
5FA0:  MOVLW  00
5FA2:  CALL   0CD2
5FA6:  TBLRD*-
5FA8:  TBLRD*+
5FAA:  MOVF   FF5,W
5FAC:  MOVWF  FEE
5FAE:  IORLW  00
5FB0:  BNZ   5FA8
5FB2:  MOVLB  5
5FB4:  BTFSC  x01.7
5FB6:  BSF    FF2.7
5FB8:  MOVLW  04
5FBA:  MOVWF  x02
5FBC:  MOVLW  E1
5FBE:  MOVWF  x01
5FC0:  CLRF   x03
5FC2:  MOVLW  37
5FC4:  MOVWF  x04
5FC6:  MOVLW  02
5FC8:  MOVWF  x05
5FCA:  MOVLW  01
5FCC:  MOVWF  x06
5FCE:  MOVLB  0
5FD0:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
5FD4:  MOVLB  4
5FD6:  BCF    x96.2
5FD8:  BCF    x96.3
5FDA:  BCF    x96.4
5FDC:  BCF    x96.5
5FDE:  BCF    x96.6
5FE0:  BCF    x96.7
5FE2:  BCF    x97.0
5FE4:  BCF    x97.1
....................                disp_Alarma=1; 
5FE6:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
5FE8:  MOVF   x92,W
5FEA:  SUBLW  02
5FEC:  BNZ   6068
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
5FEE:  CLRF   xA8
5FF0:  CLRF   xA9
....................             if(disp_Alarma==0) 
5FF2:  BTFSC  x97.3
5FF4:  BRA    6068
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5FF6:  MOVLB  5
5FF8:  CLRF   x13
5FFA:  MOVLW  37
5FFC:  MOVWF  x14
5FFE:  MOVLW  7F
6000:  MOVWF  x15
6002:  MOVLW  3F
6004:  MOVWF  x16
6006:  MOVLW  01
6008:  MOVWF  x17
600A:  CLRF   x18
600C:  MOVLB  0
600E:  CALL   156C
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6012:  MOVLW  04
6014:  MOVWF  FEA
6016:  MOVLW  E1
6018:  MOVWF  FE9
601A:  MOVFF  FF2,501
601E:  BCF    FF2.7
6020:  MOVLW  00
6022:  CALL   0CF8
6026:  TBLRD*-
6028:  TBLRD*+
602A:  MOVF   FF5,W
602C:  MOVWF  FEE
602E:  IORLW  00
6030:  BNZ   6028
6032:  MOVLB  5
6034:  BTFSC  x01.7
6036:  BSF    FF2.7
6038:  MOVLW  04
603A:  MOVWF  x02
603C:  MOVLW  E1
603E:  MOVWF  x01
6040:  CLRF   x03
6042:  MOVLW  37
6044:  MOVWF  x04
6046:  MOVLW  02
6048:  MOVWF  x05
604A:  MOVLW  01
604C:  MOVWF  x06
604E:  MOVLB  0
6050:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
6054:  MOVLB  4
6056:  BCF    x96.2
6058:  BCF    x96.3
605A:  BCF    x96.4
605C:  BCF    x96.5
605E:  BCF    x96.6
6060:  BCF    x96.7
6062:  BCF    x97.0
6064:  BCF    x97.1
....................                disp_Alarma=1; 
6066:  BSF    x97.3
....................             } 
....................          } 
....................           
....................          if(Alarma==3) // Alarma de Error de Agua: Error por Bajo Nivel de Agua Durante Funcionamiento 
6068:  MOVF   x92,W
606A:  SUBLW  03
606C:  BNZ   60E8
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
606E:  CLRF   xA8
6070:  CLRF   xA9
....................             if(disp_Alarma==0) 
6072:  BTFSC  x97.3
6074:  BRA    60E8
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6076:  MOVLB  5
6078:  CLRF   x13
607A:  MOVLW  37
607C:  MOVWF  x14
607E:  MOVLW  7F
6080:  MOVWF  x15
6082:  MOVLW  3F
6084:  MOVWF  x16
6086:  MOVLW  01
6088:  MOVWF  x17
608A:  CLRF   x18
608C:  MOVLB  0
608E:  CALL   156C
....................                strcpy(Menus.Letra,"Error:EA02");displayMenu(Menus.Letra,0,55,2,1); 
6092:  MOVLW  04
6094:  MOVWF  FEA
6096:  MOVLW  E1
6098:  MOVWF  FE9
609A:  MOVFF  FF2,501
609E:  BCF    FF2.7
60A0:  MOVLW  00
60A2:  CALL   0D1E
60A6:  TBLRD*-
60A8:  TBLRD*+
60AA:  MOVF   FF5,W
60AC:  MOVWF  FEE
60AE:  IORLW  00
60B0:  BNZ   60A8
60B2:  MOVLB  5
60B4:  BTFSC  x01.7
60B6:  BSF    FF2.7
60B8:  MOVLW  04
60BA:  MOVWF  x02
60BC:  MOVLW  E1
60BE:  MOVWF  x01
60C0:  CLRF   x03
60C2:  MOVLW  37
60C4:  MOVWF  x04
60C6:  MOVLW  02
60C8:  MOVWF  x05
60CA:  MOVLW  01
60CC:  MOVWF  x06
60CE:  MOVLB  0
60D0:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
60D4:  MOVLB  4
60D6:  BCF    x96.2
60D8:  BCF    x96.3
60DA:  BCF    x96.4
60DC:  BCF    x96.5
60DE:  BCF    x96.6
60E0:  BCF    x96.7
60E2:  BCF    x97.0
60E4:  BCF    x97.1
....................                disp_Alarma=1; 
60E6:  BSF    x97.3
....................             } 
....................          } 
....................           
....................       } 
....................       else 
60E8:  BRA    643A
....................       {  
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
60EA:  MOVF   xA8,W
60EC:  SUBLW  02
60EE:  BTFSS  FD8.2
60F0:  BRA    62B2
60F2:  BTFSS  x96.1
60F4:  BRA    62B2
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
60F6:  BTFSS  x95.5
60F8:  BRA    61D8
....................             { 
....................                if(z==0) 
60FA:  BTFSC  x97.2
60FC:  BRA    614E
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
60FE:  MOVLB  5
6100:  CLRF   x01
6102:  MOVLW  5A
6104:  MOVWF  x02
6106:  MOVLW  38
6108:  MOVWF  x03
610A:  MOVLB  0
610C:  CALL   26BA
6110:  MOVLW  19
6112:  MOVLB  5
6114:  MOVWF  x13
6116:  MOVLW  12
6118:  MOVWF  x14
611A:  MOVLW  3C
611C:  MOVWF  x15
611E:  MOVLW  1A
6120:  MOVWF  x16
6122:  CLRF   x17
6124:  CLRF   x18
6126:  MOVLB  0
6128:  CALL   156C
612C:  MOVLW  37
612E:  MOVLB  5
6130:  MOVWF  x13
6132:  MOVLW  12
6134:  MOVWF  x14
6136:  MOVLW  44
6138:  MOVWF  x15
613A:  MOVLW  35
613C:  MOVWF  x16
613E:  CLRF   x17
6140:  MOVLW  01
6142:  MOVWF  x18
6144:  MOVLB  0
6146:  CALL   156C
614A:  MOVLB  4
614C:  BSF    x97.2
....................                } 
....................                if(disp_Despresurizando==0) 
614E:  BTFSC  x96.6
6150:  BRA    61D0
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6152:  MOVLB  5
6154:  CLRF   x13
6156:  MOVLW  37
6158:  MOVWF  x14
615A:  MOVLW  7F
615C:  MOVWF  x15
615E:  MOVLW  3F
6160:  MOVWF  x16
6162:  MOVLW  01
6164:  MOVWF  x17
6166:  CLRF   x18
6168:  MOVLB  0
616A:  CALL   156C
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
616E:  MOVLW  04
6170:  MOVWF  FEA
6172:  MOVLW  E1
6174:  MOVWF  FE9
6176:  MOVFF  FF2,501
617A:  BCF    FF2.7
617C:  MOVLW  00
617E:  CALL   0D44
6182:  TBLRD*-
6184:  TBLRD*+
6186:  MOVF   FF5,W
6188:  MOVWF  FEE
618A:  IORLW  00
618C:  BNZ   6184
618E:  MOVLB  5
6190:  BTFSC  x01.7
6192:  BSF    FF2.7
6194:  MOVLW  04
6196:  MOVWF  x02
6198:  MOVLW  E1
619A:  MOVWF  x01
619C:  CLRF   x03
619E:  MOVLW  37
61A0:  MOVWF  x04
61A2:  MOVLW  02
61A4:  MOVWF  x05
61A6:  MOVLW  01
61A8:  MOVWF  x06
61AA:  MOVLB  0
61AC:  CALL   162E
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
61B0:  MOVLB  4
61B2:  BCF    x96.2
61B4:  BCF    x96.3
61B6:  BCF    x96.4
61B8:  BCF    x96.5
61BA:  BSF    x96.6
61BC:  BCF    x96.7
61BE:  BCF    x97.0
61C0:  BCF    x97.1
....................                   glcd_imagen(5); 
61C2:  MOVLW  05
61C4:  MOVLB  5
61C6:  MOVWF  x01
61C8:  MOVLB  0
61CA:  CALL   2076
61CE:  MOVLB  4
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
61D0:  MOVLW  02
61D2:  MOVWF  xAA
61D4:  MOVWF  xA9
....................             } 
....................             else 
61D6:  BRA    62B2
....................             { 
....................                if(z==0) 
61D8:  BTFSC  x97.2
61DA:  BRA    622C
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
61DC:  MOVLB  5
61DE:  CLRF   x01
61E0:  MOVLW  5A
61E2:  MOVWF  x02
61E4:  MOVLW  38
61E6:  MOVWF  x03
61E8:  MOVLB  0
61EA:  CALL   26BA
61EE:  MOVLW  19
61F0:  MOVLB  5
61F2:  MOVWF  x13
61F4:  MOVLW  12
61F6:  MOVWF  x14
61F8:  MOVLW  3C
61FA:  MOVWF  x15
61FC:  MOVLW  1A
61FE:  MOVWF  x16
6200:  CLRF   x17
6202:  CLRF   x18
6204:  MOVLB  0
6206:  CALL   156C
620A:  MOVLW  37
620C:  MOVLB  5
620E:  MOVWF  x13
6210:  MOVLW  12
6212:  MOVWF  x14
6214:  MOVLW  44
6216:  MOVWF  x15
6218:  MOVLW  35
621A:  MOVWF  x16
621C:  CLRF   x17
621E:  MOVLW  01
6220:  MOVWF  x18
6222:  MOVLB  0
6224:  CALL   156C
6228:  MOVLB  4
622A:  BSF    x97.2
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
622C:  BTFSC  x96.4
622E:  BRA    62AE
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6230:  MOVLB  5
6232:  CLRF   x13
6234:  MOVLW  37
6236:  MOVWF  x14
6238:  MOVLW  7F
623A:  MOVWF  x15
623C:  MOVLW  3F
623E:  MOVWF  x16
6240:  MOVLW  01
6242:  MOVWF  x17
6244:  CLRF   x18
6246:  MOVLB  0
6248:  CALL   156C
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
624C:  MOVLW  04
624E:  MOVWF  FEA
6250:  MOVLW  E1
6252:  MOVWF  FE9
6254:  MOVFF  FF2,501
6258:  BCF    FF2.7
625A:  MOVLW  00
625C:  CALL   0D6E
6260:  TBLRD*-
6262:  TBLRD*+
6264:  MOVF   FF5,W
6266:  MOVWF  FEE
6268:  IORLW  00
626A:  BNZ   6262
626C:  MOVLB  5
626E:  BTFSC  x01.7
6270:  BSF    FF2.7
6272:  MOVLW  04
6274:  MOVWF  x02
6276:  MOVLW  E1
6278:  MOVWF  x01
627A:  CLRF   x03
627C:  MOVLW  37
627E:  MOVWF  x04
6280:  MOVLW  02
6282:  MOVWF  x05
6284:  MOVLW  01
6286:  MOVWF  x06
6288:  MOVLB  0
628A:  CALL   162E
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
628E:  MOVLB  4
6290:  BCF    x96.2
6292:  BCF    x96.3
6294:  BSF    x96.4
6296:  BCF    x96.5
6298:  BCF    x96.6
629A:  BCF    x96.7
629C:  BCF    x97.0
629E:  BCF    x97.1
....................                   glcd_imagen(5); 
62A0:  MOVLW  05
62A2:  MOVLB  5
62A4:  MOVWF  x01
62A6:  MOVLB  0
62A8:  CALL   2076
62AC:  MOVLB  4
....................                } 
....................                Exhaust=1; 
62AE:  MOVLW  01
62B0:  MOVWF  xAA
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0 && AlarmaAgua==0) 
62B2:  MOVF   x8D,F
62B4:  BNZ   6336
62B6:  MOVF   x93,F
62B8:  BNZ   6336
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0 && flag_agua==1) 
62BA:  BTFSC  x97.0
62BC:  BRA    6336
62BE:  MOVF   xA6,F
62C0:  BNZ   6336
62C2:  BTFSS  x96.1
62C4:  BRA    6336
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
62C6:  MOVLB  5
62C8:  CLRF   x13
62CA:  MOVLW  37
62CC:  MOVWF  x14
62CE:  MOVLW  7F
62D0:  MOVWF  x15
62D2:  MOVLW  3F
62D4:  MOVWF  x16
62D6:  MOVLW  01
62D8:  MOVWF  x17
62DA:  CLRF   x18
62DC:  MOVLB  0
62DE:  CALL   156C
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
62E2:  MOVLW  04
62E4:  MOVWF  FEA
62E6:  MOVLW  E1
62E8:  MOVWF  FE9
62EA:  MOVFF  FF2,501
62EE:  BCF    FF2.7
62F0:  MOVLW  00
62F2:  CALL   0D90
62F6:  TBLRD*-
62F8:  TBLRD*+
62FA:  MOVF   FF5,W
62FC:  MOVWF  FEE
62FE:  IORLW  00
6300:  BNZ   62F8
6302:  MOVLB  5
6304:  BTFSC  x01.7
6306:  BSF    FF2.7
6308:  MOVLW  04
630A:  MOVWF  x02
630C:  MOVLW  E1
630E:  MOVWF  x01
6310:  CLRF   x03
6312:  MOVLW  37
6314:  MOVWF  x04
6316:  MOVLW  02
6318:  MOVWF  x05
631A:  MOVLW  01
631C:  MOVWF  x06
631E:  MOVLB  0
6320:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
6324:  MOVLB  4
6326:  BCF    x96.2
6328:  BCF    x96.3
632A:  BCF    x96.4
632C:  BCF    x96.5
632E:  BCF    x96.6
6330:  BCF    x96.7
6332:  BSF    x97.0
6334:  BCF    x97.1
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          disp_Alarma=0; 
6336:  BCF    x97.3
....................          if(NivelTanque==1 && flag_agua==0 ) 
6338:  DECFSZ x90,W
633A:  BRA    6344
633C:  BTFSC  x96.1
633E:  BRA    6344
....................          { 
....................             flag_agua=1; 
6340:  BSF    x96.1
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
6342:  BRA    643A
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && flag_agua==0) 
6344:  MOVF   xA8,F
6346:  BNZ   63C2
6348:  BTFSC  x96.3
634A:  BRA    63C2
634C:  BTFSC  x96.1
634E:  BRA    63C2
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6350:  MOVLB  5
6352:  CLRF   x13
6354:  MOVLW  37
6356:  MOVWF  x14
6358:  MOVLW  7F
635A:  MOVWF  x15
635C:  MOVLW  3F
635E:  MOVWF  x16
6360:  MOVLW  01
6362:  MOVWF  x17
6364:  CLRF   x18
6366:  MOVLB  0
6368:  CALL   156C
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
636C:  MOVLW  04
636E:  MOVWF  FEA
6370:  MOVLW  E1
6372:  MOVWF  FE9
6374:  MOVFF  FF2,501
6378:  BCF    FF2.7
637A:  MOVLW  00
637C:  CALL   0DBA
6380:  TBLRD*-
6382:  TBLRD*+
6384:  MOVF   FF5,W
6386:  MOVWF  FEE
6388:  IORLW  00
638A:  BNZ   6382
638C:  MOVLB  5
638E:  BTFSC  x01.7
6390:  BSF    FF2.7
6392:  MOVLW  04
6394:  MOVWF  x02
6396:  MOVLW  E1
6398:  MOVWF  x01
639A:  CLRF   x03
639C:  MOVLW  37
639E:  MOVWF  x04
63A0:  MOVLW  02
63A2:  MOVWF  x05
63A4:  MOVLW  01
63A6:  MOVWF  x06
63A8:  MOVLB  0
63AA:  CALL   162E
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
63AE:  MOVLB  4
63B0:  BCF    x96.2
63B2:  BSF    x96.3
63B4:  BCF    x96.4
63B6:  BCF    x96.5
63B8:  BCF    x96.6
63BA:  BCF    x96.7
63BC:  BCF    x97.0
63BE:  BCF    x97.1
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
63C0:  CLRF   xA0
....................             } 
....................              
....................             if(AlarmaAgua==1) 
63C2:  DECFSZ x93,W
63C4:  BRA    643A
....................             { 
....................                if(disp_AlarmaAgua==0) 
63C6:  BTFSC  x97.4
63C8:  BRA    643A
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
63CA:  MOVLB  5
63CC:  CLRF   x13
63CE:  MOVLW  37
63D0:  MOVWF  x14
63D2:  MOVLW  7F
63D4:  MOVWF  x15
63D6:  MOVLW  3F
63D8:  MOVWF  x16
63DA:  MOVLW  01
63DC:  MOVWF  x17
63DE:  CLRF   x18
63E0:  MOVLB  0
63E2:  CALL   156C
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
63E6:  MOVLW  04
63E8:  MOVWF  FEA
63EA:  MOVLW  E1
63EC:  MOVWF  FE9
63EE:  MOVFF  FF2,501
63F2:  BCF    FF2.7
63F4:  MOVLW  00
63F6:  CALL   0DDE
63FA:  TBLRD*-
63FC:  TBLRD*+
63FE:  MOVF   FF5,W
6400:  MOVWF  FEE
6402:  IORLW  00
6404:  BNZ   63FC
6406:  MOVLB  5
6408:  BTFSC  x01.7
640A:  BSF    FF2.7
640C:  MOVLW  04
640E:  MOVWF  x02
6410:  MOVLW  E1
6412:  MOVWF  x01
6414:  CLRF   x03
6416:  MOVLW  37
6418:  MOVWF  x04
641A:  MOVLW  02
641C:  MOVWF  x05
641E:  MOVLW  01
6420:  MOVWF  x06
6422:  MOVLB  0
6424:  CALL   162E
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6428:  MOVLB  4
642A:  BCF    x96.2
642C:  BCF    x96.4
642E:  BCF    x96.5
6430:  BCF    x96.6
6432:  BCF    x96.7
6434:  BCF    x97.0
6436:  BCF    x97.1
....................                   disp_AlarmaAgua=1; 
6438:  BSF    x97.4
....................                } 
....................             } 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
643A:  MOVLB  0
643C:  CALL   2016
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
6440:  MOVLB  4
6442:  BTFSS  x95.6
6444:  BRA    671C
....................    {                       
....................       Lectura=0; 
6446:  BCF    x95.6
....................       displayTiempo(Presostato,31,40,2,1); 
6448:  MOVFF  491,502
644C:  MOVLW  1F
644E:  MOVLB  5
6450:  MOVWF  x03
6452:  MOVLW  28
6454:  MOVWF  x04
6456:  MOVLW  02
6458:  MOVWF  x05
645A:  MOVLW  01
645C:  MOVWF  x06
645E:  MOVLB  0
6460:  CALL   2422
....................       glcd_rect(51, 40, 62, 48, YES, OFF);glcd_text57(52, 40, kpa, 1, ON); 
6464:  MOVLW  33
6466:  MOVLB  5
6468:  MOVWF  x13
646A:  MOVLW  28
646C:  MOVWF  x14
646E:  MOVLW  3E
6470:  MOVWF  x15
6472:  MOVLW  30
6474:  MOVWF  x16
6476:  MOVLW  01
6478:  MOVWF  x17
647A:  CLRF   x18
647C:  MOVLB  0
647E:  CALL   156C
6482:  MOVLW  34
6484:  MOVLB  5
6486:  MOVWF  x12
6488:  MOVLW  28
648A:  MOVWF  x13
648C:  MOVLW  04
648E:  MOVWF  x15
6490:  MOVLW  89
6492:  MOVWF  x14
6494:  MOVLW  01
6496:  MOVWF  x16
6498:  MOVWF  x17
649A:  MOVLB  0
649C:  CALL   1276
....................       displayT(ADC_Pt100,69,20,2); 
64A0:  MOVFF  4BD,504
64A4:  MOVFF  4BC,503
64A8:  MOVFF  4BB,502
64AC:  MOVFF  4BA,501
64B0:  MOVLW  45
64B2:  MOVLB  5
64B4:  MOVWF  x05
64B6:  MOVLW  14
64B8:  MOVWF  x06
64BA:  MOVLW  02
64BC:  MOVWF  x07
64BE:  MOVLB  0
64C0:  GOTO   2A4E
....................       glcd_circle(95,40,2,NO,ON); 
64C4:  MOVLW  5F
64C6:  MOVLB  5
64C8:  MOVWF  x01
64CA:  MOVLW  28
64CC:  MOVWF  x02
64CE:  MOVLW  02
64D0:  MOVWF  x03
64D2:  CLRF   x04
64D4:  MOVLW  01
64D6:  MOVWF  x05
64D8:  MOVLB  0
64DA:  CALL   2172
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
64DE:  MOVLW  04
64E0:  MOVWF  FEA
64E2:  MOVLW  E1
64E4:  MOVWF  FE9
64E6:  MOVFF  FF2,501
64EA:  BCF    FF2.7
64EC:  MOVLW  00
64EE:  CALL   09CE
64F2:  TBLRD*-
64F4:  TBLRD*+
64F6:  MOVF   FF5,W
64F8:  MOVWF  FEE
64FA:  IORLW  00
64FC:  BNZ   64F4
64FE:  MOVLB  5
6500:  BTFSC  x01.7
6502:  BSF    FF2.7
6504:  MOVLW  04
6506:  MOVWF  x02
6508:  MOVLW  E1
650A:  MOVWF  x01
650C:  MOVLW  66
650E:  MOVWF  x03
6510:  MOVLW  28
6512:  MOVWF  x04
6514:  MOVLW  02
6516:  MOVWF  x05
6518:  MOVWF  x06
651A:  MOVLB  0
651C:  CALL   162E
....................       displayTiempo(Setpoint,5,20,2,1); 
6520:  MOVFF  4A5,502
6524:  MOVLW  05
6526:  MOVLB  5
6528:  MOVWF  x03
652A:  MOVLW  14
652C:  MOVWF  x04
652E:  MOVLW  02
6530:  MOVWF  x05
6532:  MOVLW  01
6534:  MOVWF  x06
6536:  MOVLB  0
6538:  CALL   2422
....................  
....................       glcd_imagen(5); 
653C:  MOVLW  05
653E:  MOVLB  5
6540:  MOVWF  x01
6542:  MOVLB  0
6544:  CALL   2076
....................       strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
6548:  MOVLW  04
654A:  MOVWF  FEA
654C:  MOVLW  E1
654E:  MOVWF  FE9
6550:  MOVFF  FF2,501
6554:  BCF    FF2.7
6556:  MOVLW  00
6558:  CALL   098A
655C:  TBLRD*-
655E:  TBLRD*+
6560:  MOVF   FF5,W
6562:  MOVWF  FEE
6564:  IORLW  00
6566:  BNZ   655E
6568:  MOVLB  5
656A:  BTFSC  x01.7
656C:  BSF    FF2.7
656E:  MOVLW  04
6570:  MOVWF  x02
6572:  MOVLW  E1
6574:  MOVWF  x01
6576:  CLRF   x03
6578:  CLRF   x04
657A:  MOVLW  02
657C:  MOVWF  x05
657E:  MOVLW  01
6580:  MOVWF  x06
6582:  MOVLB  0
6584:  CALL   162E
....................       strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
6588:  MOVLW  04
658A:  MOVWF  FEA
658C:  MOVLW  E1
658E:  MOVWF  FE9
6590:  MOVFF  FF2,501
6594:  BCF    FF2.7
6596:  MOVLW  00
6598:  CALL   09AC
659C:  TBLRD*-
659E:  TBLRD*+
65A0:  MOVF   FF5,W
65A2:  MOVWF  FEE
65A4:  IORLW  00
65A6:  BNZ   659E
65A8:  MOVLB  5
65AA:  BTFSC  x01.7
65AC:  BSF    FF2.7
65AE:  MOVLW  04
65B0:  MOVWF  x02
65B2:  MOVLW  E1
65B4:  MOVWF  x01
65B6:  CLRF   x03
65B8:  MOVLW  08
65BA:  MOVWF  x04
65BC:  MOVLW  02
65BE:  MOVWF  x05
65C0:  MOVLW  01
65C2:  MOVWF  x06
65C4:  MOVLB  0
65C6:  CALL   162E
....................       MuestraTiemposProgramados(); 
65CA:  CALL   257A
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
65CE:  MOVFF  4C1,502
65D2:  MOVLW  50
65D4:  MOVLB  5
65D6:  MOVWF  x03
65D8:  CLRF   x04
65DA:  CLRF   x05
65DC:  MOVLW  01
65DE:  MOVWF  x06
65E0:  MOVLB  0
65E2:  CALL   2422
65E6:  MOVFF  4C0,502
65EA:  MOVLW  56
65EC:  MOVLB  5
65EE:  MOVWF  x03
65F0:  CLRF   x04
65F2:  CLRF   x05
65F4:  MOVLW  01
65F6:  MOVWF  x06
65F8:  MOVLB  0
65FA:  CALL   2422
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
65FE:  MOVLW  04
6600:  MOVWF  FEA
6602:  MOVLW  E1
6604:  MOVWF  FE9
6606:  MOVFF  FF2,501
660A:  BCF    FF2.7
660C:  MOVLW  00
660E:  CALL   06BE
6612:  TBLRD*-
6614:  TBLRD*+
6616:  MOVF   FF5,W
6618:  MOVWF  FEE
661A:  IORLW  00
661C:  BNZ   6614
661E:  MOVLB  5
6620:  BTFSC  x01.7
6622:  BSF    FF2.7
6624:  MOVLW  04
6626:  MOVWF  x02
6628:  MOVLW  E1
662A:  MOVWF  x01
662C:  MOVLW  5C
662E:  MOVWF  x03
6630:  CLRF   x04
6632:  MOVLW  02
6634:  MOVWF  x05
6636:  MOVLW  01
6638:  MOVWF  x06
663A:  MOVLB  0
663C:  CALL   162E
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6640:  MOVFF  4BF,502
6644:  MOVLW  62
6646:  MOVLB  5
6648:  MOVWF  x03
664A:  CLRF   x04
664C:  CLRF   x05
664E:  MOVLW  01
6650:  MOVWF  x06
6652:  MOVLB  0
6654:  CALL   2422
6658:  MOVFF  4BE,502
665C:  MOVLW  68
665E:  MOVLB  5
6660:  MOVWF  x03
6662:  CLRF   x04
6664:  CLRF   x05
6666:  MOVLW  01
6668:  MOVWF  x06
666A:  MOVLB  0
666C:  CALL   2422
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
6670:  MOVFF  4C9,502
6674:  MOVLW  50
6676:  MOVLB  5
6678:  MOVWF  x03
667A:  MOVLW  08
667C:  MOVWF  x04
667E:  CLRF   x05
6680:  MOVLW  01
6682:  MOVWF  x06
6684:  MOVLB  0
6686:  CALL   2422
668A:  MOVFF  4C8,502
668E:  MOVLW  56
6690:  MOVLB  5
6692:  MOVWF  x03
6694:  MOVLW  08
6696:  MOVWF  x04
6698:  CLRF   x05
669A:  MOVLW  01
669C:  MOVWF  x06
669E:  MOVLB  0
66A0:  CALL   2422
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
66A4:  MOVLW  04
66A6:  MOVWF  FEA
66A8:  MOVLW  E1
66AA:  MOVWF  FE9
66AC:  MOVFF  FF2,501
66B0:  BCF    FF2.7
66B2:  MOVLW  00
66B4:  CALL   06BE
66B8:  TBLRD*-
66BA:  TBLRD*+
66BC:  MOVF   FF5,W
66BE:  MOVWF  FEE
66C0:  IORLW  00
66C2:  BNZ   66BA
66C4:  MOVLB  5
66C6:  BTFSC  x01.7
66C8:  BSF    FF2.7
66CA:  MOVLW  04
66CC:  MOVWF  x02
66CE:  MOVLW  E1
66D0:  MOVWF  x01
66D2:  MOVLW  5C
66D4:  MOVWF  x03
66D6:  MOVLW  08
66D8:  MOVWF  x04
66DA:  MOVLW  02
66DC:  MOVWF  x05
66DE:  MOVLW  01
66E0:  MOVWF  x06
66E2:  MOVLB  0
66E4:  CALL   162E
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
66E8:  MOVFF  4C7,502
66EC:  MOVLW  62
66EE:  MOVLB  5
66F0:  MOVWF  x03
66F2:  MOVLW  08
66F4:  MOVWF  x04
66F6:  CLRF   x05
66F8:  MOVLW  01
66FA:  MOVWF  x06
66FC:  MOVLB  0
66FE:  CALL   2422
6702:  MOVFF  4C6,502
6706:  MOVLW  68
6708:  MOVLB  5
670A:  MOVWF  x03
670C:  MOVLW  08
670E:  MOVWF  x04
6710:  CLRF   x05
6712:  MOVLW  01
6714:  MOVWF  x06
6716:  MOVLB  0
6718:  CALL   2422
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint)-0.5)// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
671C:  MOVLB  5
671E:  CLRF   x02
6720:  MOVFF  4A5,501
6724:  MOVLB  0
6726:  CALL   19F8
672A:  MOVFF  00,501
672E:  MOVFF  01,502
6732:  MOVFF  02,503
6736:  MOVFF  03,504
673A:  BSF    FD8.1
673C:  MOVFF  03,508
6740:  MOVFF  02,507
6744:  MOVFF  01,506
6748:  MOVFF  00,505
674C:  MOVLB  5
674E:  CLRF   x0C
6750:  CLRF   x0B
6752:  CLRF   x0A
6754:  MOVLW  7E
6756:  MOVWF  x09
6758:  MOVLB  0
675A:  CALL   1B8E
675E:  MOVFF  03,504
6762:  MOVFF  02,503
6766:  MOVFF  01,502
676A:  MOVFF  00,501
676E:  MOVFF  4BD,508
6772:  MOVFF  4BC,507
6776:  MOVFF  4BB,506
677A:  MOVFF  4BA,505
677E:  GOTO   2ACC
6782:  BC    6786
6784:  BNZ   67EC
....................    { 
....................       if(est==0) 
6786:  MOVLB  4
6788:  BTFSC  x96.0
678A:  BRA    67EE
....................       { 
....................          tiempo_esterilizacion=1; 
678C:  MOVLW  01
678E:  MOVWF  xA8
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
6790:  MOVLB  5
6792:  CLRF   x01
6794:  MOVLW  5A
6796:  MOVWF  x02
6798:  MOVLW  38
679A:  MOVWF  x03
679C:  MOVLB  0
679E:  CALL   26BA
67A2:  MOVLW  0F
67A4:  MOVLB  5
67A6:  MOVWF  x13
67A8:  MOVLW  12
67AA:  MOVWF  x14
67AC:  MOVLW  1E
67AE:  MOVWF  x15
67B0:  MOVLW  35
67B2:  MOVWF  x16
67B4:  CLRF   x17
67B6:  CLRF   x18
67B8:  MOVLB  0
67BA:  CALL   156C
67BE:  MOVLW  19
67C0:  MOVLB  5
67C2:  MOVWF  x13
67C4:  MOVLW  12
67C6:  MOVWF  x14
67C8:  MOVLW  3C
67CA:  MOVWF  x15
67CC:  MOVLW  1A
67CE:  MOVWF  x16
67D0:  CLRF   x17
67D2:  MOVLW  01
67D4:  MOVWF  x18
67D6:  MOVLB  0
67D8:  CALL   156C
67DC:  MOVLB  4
67DE:  BSF    x96.0
....................          glcd_imagen(5); 
67E0:  MOVLW  05
67E2:  MOVLB  5
67E4:  MOVWF  x01
67E6:  MOVLB  0
67E8:  CALL   2076
67EC:  MOVLB  4
....................       } 
....................    }   
....................     
....................    /*if(ADC_Pt100<((float)Setpoint-2.0)) 
....................    { 
....................       glcd_rect(15, 18, 30, 53, NO, ON); 
....................       if(est==1) 
....................       {glcd_rect(25, 18, 60, 26, NO, OFF);} 
....................       est=0;tiempo_esterilizacion=0; 
....................    }*/ 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
67EE:  DECFSZ xAA,W
67F0:  BRA    681A
67F2:  MOVF   xA8,W
67F4:  SUBLW  02
67F6:  BNZ   681A
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
67F8:  CLRF   xA0
....................       if(Presostato<20) 
67FA:  MOVF   x91,W
67FC:  SUBLW  13
67FE:  BNC   6804
....................       { 
....................          EVDesfogue=3; 
6800:  MOVLW  03
6802:  MOVWF  x99
....................       } 
....................       if(Presostato<7) 
6804:  MOVF   x91,W
6806:  SUBLW  06
6808:  BNC   6816
....................       { 
....................          tiempo_secado=1; 
680A:  MOVLW  01
680C:  MOVWF  xA9
....................          Control=0;EVDesfogue=3; 
680E:  CLRF   xA0
6810:  MOVLW  03
6812:  MOVWF  x99
....................       } 
....................       else 
6814:  BRA    681A
....................       { 
....................          EVDesfogue=1; 
6816:  MOVLW  01
6818:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
681A:  MOVF   xAA,W
681C:  SUBLW  02
681E:  BNZ   684E
6820:  MOVF   xA8,W
6822:  SUBLW  02
6824:  BNZ   684E
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
6826:  CLRF   xA0
....................       if(Presostato<20) 
6828:  MOVF   x91,W
682A:  SUBLW  13
682C:  BNC   6834
....................       { 
....................          EVDesfogue=3; 
682E:  MOVLW  03
6830:  MOVWF  x99
....................       } 
....................       else 
6832:  BRA    6838
....................       { 
....................          EVDesfogue=2; 
6834:  MOVLW  02
6836:  MOVWF  x99
....................       } 
....................       if(Presostato<7) 
6838:  MOVF   x91,W
683A:  SUBLW  06
683C:  BNC   684E
....................       { 
....................          tiempo_esterilizacion=3; 
683E:  MOVLW  03
6840:  MOVWF  xA8
....................          tiempo_secado=2; 
6842:  MOVLW  02
6844:  MOVWF  xA9
....................          fin_ciclo=1; 
6846:  MOVLW  01
6848:  MOVWF  xA6
....................          EVDesfogue=3; 
684A:  MOVLW  03
684C:  MOVWF  x99
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]==Testerilizacionp[0])&&(Testerilizacion[1]==Testerilizacionp[1])&&(Testerilizacion[2]==Testerilizacionp[2])&&(Testerilizacion[3]==Testerilizacionp[3]) && tiempo_esterilizacion==1) 
684E:  MOVF   xC2,W
6850:  SUBWF  xBE,W
6852:  BNZ   686E
6854:  MOVF   xC3,W
6856:  SUBWF  xBF,W
6858:  BNZ   686E
685A:  MOVF   xC4,W
685C:  SUBWF  xC0,W
685E:  BNZ   686E
6860:  MOVF   xC5,W
6862:  SUBWF  xC1,W
6864:  BNZ   686E
6866:  DECFSZ xA8,W
6868:  BRA    686E
....................    { 
....................       tiempo_esterilizacion=2; 
686A:  MOVLW  02
686C:  MOVWF  xA8
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
686E:  MOVF   xCA,W
6870:  XORLW  80
6872:  MOVWF  00
6874:  MOVF   xC6,W
6876:  XORLW  80
6878:  SUBWF  00,W
687A:  BZ    687E
687C:  BC    68BE
687E:  MOVF   xCB,W
6880:  XORLW  80
6882:  MOVWF  00
6884:  MOVF   xC7,W
6886:  XORLW  80
6888:  SUBWF  00,W
688A:  BZ    688E
688C:  BC    68BE
688E:  MOVF   xCC,W
6890:  XORLW  80
6892:  MOVWF  00
6894:  MOVF   xC8,W
6896:  XORLW  80
6898:  SUBWF  00,W
689A:  BZ    689E
689C:  BC    68BE
689E:  MOVF   xCD,W
68A0:  XORLW  80
68A2:  MOVWF  00
68A4:  MOVF   xC9,W
68A6:  XORLW  80
68A8:  SUBWF  00,W
68AA:  BZ    68AE
68AC:  BC    68BE
68AE:  DECFSZ xA9,W
68B0:  BRA    68BE
....................    { 
....................       tiempo_esterilizacion=3; 
68B2:  MOVLW  03
68B4:  MOVWF  xA8
....................       tiempo_secado=2; 
68B6:  MOVLW  02
68B8:  MOVWF  xA9
....................       fin_ciclo=1; 
68BA:  MOVLW  01
68BC:  MOVWF  xA6
....................    } 
....................     
....................    if(fin_ciclo==1) 
68BE:  DECFSZ xA6,W
68C0:  BRA    693C
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
68C2:  CLRF   xA0
68C4:  MOVLW  03
68C6:  MOVWF  x99
....................       if(disp_Fin==0) 
68C8:  BTFSC  x97.1
68CA:  BRA    693C
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
68CC:  MOVLB  5
68CE:  CLRF   x13
68D0:  MOVLW  37
68D2:  MOVWF  x14
68D4:  MOVLW  7F
68D6:  MOVWF  x15
68D8:  MOVLW  3F
68DA:  MOVWF  x16
68DC:  MOVLW  01
68DE:  MOVWF  x17
68E0:  CLRF   x18
68E2:  MOVLB  0
68E4:  CALL   156C
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
68E8:  MOVLW  04
68EA:  MOVWF  FEA
68EC:  MOVLW  E1
68EE:  MOVWF  FE9
68F0:  MOVFF  FF2,501
68F4:  BCF    FF2.7
68F6:  MOVLW  00
68F8:  CALL   0E04
68FC:  TBLRD*-
68FE:  TBLRD*+
6900:  MOVF   FF5,W
6902:  MOVWF  FEE
6904:  IORLW  00
6906:  BNZ   68FE
6908:  MOVLB  5
690A:  BTFSC  x01.7
690C:  BSF    FF2.7
690E:  MOVLW  04
6910:  MOVWF  x02
6912:  MOVLW  E1
6914:  MOVWF  x01
6916:  CLRF   x03
6918:  MOVLW  37
691A:  MOVWF  x04
691C:  MOVLW  02
691E:  MOVWF  x05
6920:  MOVLW  01
6922:  MOVWF  x06
6924:  MOVLB  0
6926:  CALL   162E
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
692A:  MOVLB  4
692C:  BCF    x96.2
692E:  BCF    x96.3
6930:  BSF    x96.4
6932:  BCF    x96.5
6934:  BSF    x96.6
6936:  BCF    x96.7
6938:  BCF    x97.0
693A:  BSF    x97.1
....................       }    
....................        
....................    } 
....................    if(RIGHT) 
693C:  BSF    F92.2
693E:  BTFSS  F80.2
6940:  BRA    697A
....................    { 
....................       glcd_init(ON); 
6942:  MOVLW  01
6944:  MOVLB  5
6946:  MOVWF  x01
6948:  MOVLB  0
694A:  CALL   1112
....................       disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
694E:  MOVLB  4
6950:  BCF    x96.2
6952:  BCF    x96.3
6954:  BCF    x96.4
6956:  BCF    x96.5
6958:  BCF    x96.6
695A:  BCF    x96.7
695C:  BCF    x97.0
695E:  BCF    x97.1
....................       disp_Alarma=0; 
6960:  BCF    x97.3
....................       delay_ms(1000); 
6962:  MOVLW  04
6964:  MOVLB  5
6966:  MOVWF  x01
6968:  MOVLW  FA
696A:  MOVWF  x02
696C:  MOVLB  0
696E:  CALL   0F96
6972:  MOVLB  5
6974:  DECFSZ x01,F
6976:  BRA    6968
6978:  MOVLB  4
....................    } 
....................    EVAgua=10; 
697A:  MOVLW  0A
697C:  MOVWF  x9A
....................    Envio_Esclavos(); 
697E:  MOVLB  0
6980:  CALL   2016
6984:  MOVLB  4
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6986:  MOVF   xA2,W
6988:  SUBLW  64
698A:  BTFSS  FD8.2
698C:  BRA    6A88
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
698E:  MOVFF  4D6,502
6992:  MOVLB  5
6994:  CLRF   x03
6996:  MOVLW  0A
6998:  MOVWF  x04
699A:  MOVLW  02
699C:  MOVWF  x05
699E:  MOVLW  01
69A0:  MOVWF  x06
69A2:  MOVLB  0
69A4:  CALL   2422
....................    displayTiempo(datoRx[1],0,20,2,1); 
69A8:  MOVFF  4D7,502
69AC:  MOVLB  5
69AE:  CLRF   x03
69B0:  MOVLW  14
69B2:  MOVWF  x04
69B4:  MOVLW  02
69B6:  MOVWF  x05
69B8:  MOVLW  01
69BA:  MOVWF  x06
69BC:  MOVLB  0
69BE:  CALL   2422
....................    displayTiempo(datoRx[2],0,30,2,1); 
69C2:  MOVFF  4D8,502
69C6:  MOVLB  5
69C8:  CLRF   x03
69CA:  MOVLW  1E
69CC:  MOVWF  x04
69CE:  MOVLW  02
69D0:  MOVWF  x05
69D2:  MOVLW  01
69D4:  MOVWF  x06
69D6:  MOVLB  0
69D8:  CALL   2422
....................    displayTiempo(datoRx[3],0,40,2,1); 
69DC:  MOVFF  4D9,502
69E0:  MOVLB  5
69E2:  CLRF   x03
69E4:  MOVLW  28
69E6:  MOVWF  x04
69E8:  MOVLW  02
69EA:  MOVWF  x05
69EC:  MOVLW  01
69EE:  MOVWF  x06
69F0:  MOVLB  0
69F2:  CALL   2422
....................    displayTiempo(Opcion,0,50,2,1); 
69F6:  MOVFF  4A7,502
69FA:  MOVLB  5
69FC:  CLRF   x03
69FE:  MOVLW  32
6A00:  MOVWF  x04
6A02:  MOVLW  02
6A04:  MOVWF  x05
6A06:  MOVLW  01
6A08:  MOVWF  x06
6A0A:  MOVLB  0
6A0C:  CALL   2422
....................    Lectura_Esclavos(); 
6A10:  CALL   1EBC
....................    Opcion++; 
6A14:  MOVLB  4
6A16:  INCF   xA7,F
....................    displayTiempo(Puerta,50,10,2,1); 
6A18:  MOVFF  48D,502
6A1C:  MOVLW  32
6A1E:  MOVLB  5
6A20:  MOVWF  x03
6A22:  MOVLW  0A
6A24:  MOVWF  x04
6A26:  MOVLW  02
6A28:  MOVWF  x05
6A2A:  MOVLW  01
6A2C:  MOVWF  x06
6A2E:  MOVLB  0
6A30:  CALL   2422
....................    displayTiempo(Parada,50,20,2,1); 
6A34:  MOVFF  48E,502
6A38:  MOVLW  32
6A3A:  MOVLB  5
6A3C:  MOVWF  x03
6A3E:  MOVLW  14
6A40:  MOVWF  x04
6A42:  MOVLW  02
6A44:  MOVWF  x05
6A46:  MOVLW  01
6A48:  MOVWF  x06
6A4A:  MOVLB  0
6A4C:  CALL   2422
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6A50:  MOVFF  4BD,504
6A54:  MOVFF  4BC,503
6A58:  MOVFF  4BB,502
6A5C:  MOVFF  4BA,501
6A60:  GOTO   2B48
6A64:  MOVFF  01,501
6A68:  MOVFF  01,502
6A6C:  MOVLW  32
6A6E:  MOVLB  5
6A70:  MOVWF  x03
6A72:  MOVLW  1E
6A74:  MOVWF  x04
6A76:  MOVLW  02
6A78:  MOVWF  x05
6A7A:  MOVLW  01
6A7C:  MOVWF  x06
6A7E:  MOVLB  0
6A80:  CALL   2422
....................     
....................  } 
6A84:  MOVLB  4
6A86:  BRA    6986
....................        
....................       while(Parada==0) 
....................       { 
6A88:  MOVF   x8E,F
6A8A:  BNZ   6B44
....................          Lectura_Esclavos(); 
6A8C:  MOVLB  0
6A8E:  CALL   1EBC
....................          delay_ms(100); 
6A92:  MOVLW  64
6A94:  MOVLB  5
6A96:  MOVWF  x02
6A98:  MOVLB  0
6A9A:  CALL   0F96
....................          if(disp_Stop==0) 
6A9E:  MOVLB  4
6AA0:  BTFSC  x96.7
6AA2:  BRA    6B42
....................          { 
....................             glcd_fillScreen(OFF);  
6AA4:  MOVLB  5
6AA6:  CLRF   x02
6AA8:  MOVLB  0
6AAA:  CALL   1000
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6AAE:  MOVLW  04
6AB0:  MOVWF  FEA
6AB2:  MOVLW  E1
6AB4:  MOVWF  FE9
6AB6:  MOVFF  FF2,501
6ABA:  BCF    FF2.7
6ABC:  MOVLW  00
6ABE:  CALL   0E30
6AC2:  TBLRD*-
6AC4:  TBLRD*+
6AC6:  MOVF   FF5,W
6AC8:  MOVWF  FEE
6ACA:  IORLW  00
6ACC:  BNZ   6AC4
6ACE:  MOVLB  5
6AD0:  BTFSC  x01.7
6AD2:  BSF    FF2.7
6AD4:  MOVLW  04
6AD6:  MOVWF  x02
6AD8:  MOVLW  E1
6ADA:  MOVWF  x01
6ADC:  CLRF   x03
6ADE:  MOVLW  0A
6AE0:  MOVWF  x04
6AE2:  CLRF   x05
6AE4:  MOVLW  02
6AE6:  MOVWF  x06
6AE8:  MOVLB  0
6AEA:  CALL   162E
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6AEE:  MOVLW  04
6AF0:  MOVWF  FEA
6AF2:  MOVLW  E1
6AF4:  MOVWF  FE9
6AF6:  MOVFF  FF2,501
6AFA:  BCF    FF2.7
6AFC:  MOVLW  00
6AFE:  CALL   0E56
6B02:  TBLRD*-
6B04:  TBLRD*+
6B06:  MOVF   FF5,W
6B08:  MOVWF  FEE
6B0A:  IORLW  00
6B0C:  BNZ   6B04
6B0E:  MOVLB  5
6B10:  BTFSC  x01.7
6B12:  BSF    FF2.7
6B14:  MOVLW  04
6B16:  MOVWF  x02
6B18:  MOVLW  E1
6B1A:  MOVWF  x01
6B1C:  CLRF   x03
6B1E:  MOVLW  1E
6B20:  MOVWF  x04
6B22:  CLRF   x05
6B24:  MOVLW  02
6B26:  MOVWF  x06
6B28:  MOVLB  0
6B2A:  CALL   162E
6B2E:  MOVLB  4
6B30:  BSF    x95.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6B32:  BCF    x96.2
6B34:  BCF    x96.3
6B36:  BCF    x96.4
6B38:  BCF    x96.5
6B3A:  BCF    x96.6
6B3C:  BSF    x96.7
6B3E:  BCF    x97.0
6B40:  BCF    x97.1
....................          } 
....................       }    
6B42:  BRA    6A88
....................       if(Parada==1) 
6B44:  DECFSZ x8E,W
6B46:  BRA    6BF0
....................       { 
....................          while(emergency==1) 
....................          { 
6B48:  BTFSS  x95.3
6B4A:  BRA    6BF0
....................             Lectura_Esclavos(); 
6B4C:  MOVLB  0
6B4E:  CALL   1EBC
....................             if(disp_Stop==1) 
6B52:  MOVLB  4
6B54:  BTFSS  x96.7
6B56:  BRA    6B66
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6B58:  MOVLB  5
6B5A:  CLRF   x02
6B5C:  MOVLB  0
6B5E:  CALL   1000
6B62:  MOVLB  4
6B64:  BCF    x96.7
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6B66:  MOVLW  04
6B68:  MOVWF  FEA
6B6A:  MOVLW  E1
6B6C:  MOVWF  FE9
6B6E:  MOVFF  FF2,501
6B72:  BCF    FF2.7
6B74:  MOVLW  00
6B76:  MOVLB  0
6B78:  CALL   0E7C
6B7C:  TBLRD*-
6B7E:  TBLRD*+
6B80:  MOVF   FF5,W
6B82:  MOVWF  FEE
6B84:  IORLW  00
6B86:  BNZ   6B7E
6B88:  MOVLB  5
6B8A:  BTFSC  x01.7
6B8C:  BSF    FF2.7
6B8E:  MOVLW  04
6B90:  MOVWF  x02
6B92:  MOVLW  E1
6B94:  MOVWF  x01
6B96:  CLRF   x03
6B98:  MOVLW  0A
6B9A:  MOVWF  x04
6B9C:  CLRF   x05
6B9E:  MOVLW  02
6BA0:  MOVWF  x06
6BA2:  MOVLB  0
6BA4:  CALL   162E
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6BA8:  MOVLW  04
6BAA:  MOVWF  FEA
6BAC:  MOVLW  E1
6BAE:  MOVWF  FE9
6BB0:  MOVFF  FF2,501
6BB4:  BCF    FF2.7
6BB6:  MOVLW  00
6BB8:  CALL   0EA2
6BBC:  TBLRD*-
6BBE:  TBLRD*+
6BC0:  MOVF   FF5,W
6BC2:  MOVWF  FEE
6BC4:  IORLW  00
6BC6:  BNZ   6BBE
6BC8:  MOVLB  5
6BCA:  BTFSC  x01.7
6BCC:  BSF    FF2.7
6BCE:  MOVLW  04
6BD0:  MOVWF  x02
6BD2:  MOVLW  E1
6BD4:  MOVWF  x01
6BD6:  CLRF   x03
6BD8:  MOVLW  1E
6BDA:  MOVWF  x04
6BDC:  CLRF   x05
6BDE:  MOVLW  02
6BE0:  MOVWF  x06
6BE2:  MOVLB  0
6BE4:  CALL   162E
....................          glcd_update();} 
6BE8:  CALL   105A
6BEC:  MOVLB  4
6BEE:  BRA    6B48
....................       } 
....................    } 
6BF0:  MOVLB  0
6BF2:  GOTO   2FD2
.................... } 
6BF6:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
