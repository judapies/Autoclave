CCS PCH C Compiler, Version 4.104, 5967               05-Sept.-16 08:42

               Filename: H:\JP\JP\Laboratorio\Autoclave\Autoclaves Vertical\Con Precamara\2016\Autoclave 150L\Cambio de Tarjetas\Firmware V3\GLCD_Controller\GLCD_Controller.lst

               ROM used: 27626 bytes (84%)
                         Largest free fragment is 5138
               RAM used: 1508 (74%) at main() level
                         1561 (76%) worst case
               Stack:    6 worst case (5 in main + 1 for interrupts)

*
0000:  GOTO   2BE4
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0EA2
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses HSPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0F70:  MOVLW  05
0F72:  MOVWF  FEA
0F74:  MOVLW  E1
0F76:  MOVWF  FE9
0F78:  MOVF   FEF,W
0F7A:  BZ    0F98
0F7C:  MOVLW  0F
0F7E:  MOVWF  01
0F80:  CLRF   00
0F82:  DECFSZ 00,F
0F84:  BRA    0F82
0F86:  DECFSZ 01,F
0F88:  BRA    0F80
0F8A:  MOVLW  8F
0F8C:  MOVWF  00
0F8E:  DECFSZ 00,F
0F90:  BRA    0F8E
0F92:  NOP   
0F94:  DECFSZ FEF,F
0F96:  BRA    0F7C
0F98:  RETLW  00
.................... #use i2c(Master,fast,sda=PIN_B0,scl=PIN_B1) 
*
1920:  MOVLW  08
1922:  MOVWF  01
1924:  MOVLW  02
1926:  MOVWF  00
1928:  DECFSZ 00,F
192A:  BRA    1928
192C:  BCF    F8A.1
192E:  BCF    F93.1
1930:  MOVLW  02
1932:  MOVWF  00
1934:  DECFSZ 00,F
1936:  BRA    1934
1938:  MOVLB  5
193A:  RLCF   xE4,F
193C:  BCF    F8A.0
193E:  BTFSC  FD8.0
1940:  BSF    F93.0
1942:  BTFSS  FD8.0
1944:  BCF    F93.0
1946:  BSF    F93.1
1948:  BTFSS  F81.1
194A:  BRA    1948
194C:  DECFSZ 01,F
194E:  BRA    1952
1950:  BRA    1956
1952:  MOVLB  0
1954:  BRA    1924
1956:  MOVLW  02
1958:  MOVWF  00
195A:  DECFSZ 00,F
195C:  BRA    195A
195E:  BCF    F8A.1
1960:  BCF    F93.1
1962:  NOP   
1964:  BSF    F93.0
1966:  MOVLW  02
1968:  MOVWF  00
196A:  DECFSZ 00,F
196C:  BRA    196A
196E:  MOVLW  02
1970:  MOVWF  00
1972:  DECFSZ 00,F
1974:  BRA    1972
1976:  BSF    F93.1
1978:  BTFSS  F81.1
197A:  BRA    1978
197C:  CLRF   01
197E:  MOVLW  02
1980:  MOVWF  00
1982:  DECFSZ 00,F
1984:  BRA    1982
1986:  BTFSC  F81.0
1988:  BSF    01.0
198A:  BCF    F8A.1
198C:  BCF    F93.1
198E:  BCF    F8A.0
1990:  BCF    F93.0
1992:  MOVLB  0
1994:  RETLW  00
1996:  MOVLW  08
1998:  MOVLB  5
199A:  MOVWF  xE4
199C:  MOVFF  00,5E5
19A0:  BSF    F93.0
19A2:  MOVLW  02
19A4:  MOVWF  00
19A6:  DECFSZ 00,F
19A8:  BRA    19A6
19AA:  BSF    F93.1
19AC:  BTFSS  F81.1
19AE:  BRA    19AC
19B0:  BTFSC  F81.0
19B2:  BSF    FD8.0
19B4:  BTFSS  F81.0
19B6:  BCF    FD8.0
19B8:  RLCF   01,F
19BA:  MOVLW  02
19BC:  MOVWF  00
19BE:  DECFSZ 00,F
19C0:  BRA    19BE
19C2:  BCF    F93.1
19C4:  BCF    F8A.1
19C6:  DECFSZ xE4,F
19C8:  BRA    19A0
19CA:  BSF    F93.0
19CC:  MOVLW  02
19CE:  MOVWF  00
19D0:  DECFSZ 00,F
19D2:  BRA    19D0
19D4:  BCF    F8A.0
19D6:  MOVF   xE5,W
19D8:  BTFSS  FD8.2
19DA:  BCF    F93.0
19DC:  NOP   
19DE:  BSF    F93.1
19E0:  BTFSS  F81.1
19E2:  BRA    19E0
19E4:  MOVLW  02
19E6:  MOVWF  00
19E8:  DECFSZ 00,F
19EA:  BRA    19E8
19EC:  BCF    F8A.1
19EE:  BCF    F93.1
19F0:  MOVLW  02
19F2:  MOVWF  00
19F4:  DECFSZ 00,F
19F6:  BRA    19F4
19F8:  BCF    F8A.0
19FA:  BCF    F93.0
19FC:  MOVLB  0
19FE:  GOTO   1F4E (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
10EC:  BCF    F93.2
10EE:  BSF    F8A.2
....................    output_low(GLCD_E); 
10F0:  BCF    F93.7
10F2:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
10F4:  BCF    F93.3
10F6:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
10F8:  BCF    F93.4
10FA:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
10FC:  BCF    F93.5
10FE:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1100:  MOVLB  5
1102:  CLRF   xF6
1104:  MOVLW  C0
1106:  MOVWF  xF7
1108:  MOVLB  0
110A:  RCALL  0F9A
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
110C:  MOVLW  01
110E:  MOVLB  5
1110:  MOVWF  xF6
1112:  MOVLW  C0
1114:  MOVWF  xF7
1116:  MOVLB  0
1118:  RCALL  0F9A
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
111A:  MOVLB  5
111C:  CLRF   xF6
111E:  MOVLW  40
1120:  MOVWF  xF7
1122:  MOVLB  0
1124:  RCALL  0F9A
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
1126:  MOVLW  01
1128:  MOVLB  5
112A:  MOVWF  xF6
112C:  MOVLW  40
112E:  MOVWF  xF7
1130:  MOVLB  0
1132:  RCALL  0F9A
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
1134:  MOVLB  5
1136:  CLRF   xF6
1138:  MOVLW  B8
113A:  MOVWF  xF7
113C:  MOVLB  0
113E:  RCALL  0F9A
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
1140:  MOVLW  01
1142:  MOVLB  5
1144:  MOVWF  xF6
1146:  MOVLW  B8
1148:  MOVWF  xF7
114A:  MOVLB  0
114C:  RCALL  0F9A
....................  
....................    if(mode == ON) 
114E:  MOVLB  5
1150:  DECFSZ xE0,W
1152:  BRA    1170
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
1154:  CLRF   xF6
1156:  MOVLW  3F
1158:  MOVWF  xF7
115A:  MOVLB  0
115C:  RCALL  0F9A
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
115E:  MOVLW  01
1160:  MOVLB  5
1162:  MOVWF  xF6
1164:  MOVLW  3F
1166:  MOVWF  xF7
1168:  MOVLB  0
116A:  RCALL  0F9A
....................    } 
....................    else 
116C:  BRA    1188
116E:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
1170:  CLRF   xF6
1172:  MOVLW  3E
1174:  MOVWF  xF7
1176:  MOVLB  0
1178:  RCALL  0F9A
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
117A:  MOVLW  01
117C:  MOVLB  5
117E:  MOVWF  xF6
1180:  MOVLW  3E
1182:  MOVWF  xF7
1184:  MOVLB  0
1186:  RCALL  0F9A
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
1188:  MOVLB  5
118A:  CLRF   xE1
118C:  MOVLB  0
118E:  RCALL  0FDA
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
1190:  RCALL  1034
....................    #endif 
.................... } 
1192:  GOTO   2FBC (RETURN)
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
1034:  MOVLB  5
1036:  CLRF   xF2
1038:  MOVLW  16
103A:  MOVWF  xF1
....................    p2 = displayData.right; 
103C:  MOVLW  02
103E:  MOVWF  xF4
1040:  MOVLW  16
1042:  MOVWF  xF3
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
1044:  CLRF   xEF
1046:  MOVF   xEF,W
1048:  SUBLW  07
104A:  BNC   10E8
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
104C:  BCF    F93.5
104E:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
1050:  CLRF   xF6
1052:  MOVLW  40
1054:  MOVWF  xF7
1056:  MOVLB  0
1058:  RCALL  0F9A
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
105A:  MOVLW  01
105C:  MOVLB  5
105E:  MOVWF  xF6
1060:  MOVLW  40
1062:  MOVWF  xF7
1064:  MOVLB  0
1066:  RCALL  0F9A
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1068:  MOVLB  5
106A:  MOVF   xEF,W
106C:  IORLW  B8
106E:  MOVWF  xF5
1070:  CLRF   xF6
1072:  MOVWF  xF7
1074:  MOVLB  0
1076:  RCALL  0F9A
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
1078:  MOVLB  5
107A:  MOVF   xEF,W
107C:  IORLW  B8
107E:  MOVWF  xF5
1080:  MOVLW  01
1082:  MOVWF  xF6
1084:  MOVFF  5F5,5F7
1088:  MOVLB  0
108A:  RCALL  0F9A
....................       output_high(GLCD_DI);                     // Set for data 
108C:  BCF    F93.5
108E:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
1090:  MOVLB  5
1092:  CLRF   xF0
1094:  MOVF   xF0,W
1096:  SUBLW  3F
1098:  BNC   10E4
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
109A:  MOVFF  5F2,03
109E:  MOVF   xF1,W
10A0:  INCF   xF1,F
10A2:  BTFSC  FD8.2
10A4:  INCF   xF2,F
10A6:  MOVWF  FE9
10A8:  MOVFF  03,FEA
10AC:  MOVFF  FEF,5F5
10B0:  CLRF   xF6
10B2:  MOVFF  5F5,5F7
10B6:  MOVLB  0
10B8:  RCALL  0F9A
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
10BA:  MOVLB  5
10BC:  MOVFF  5F4,03
10C0:  MOVF   xF3,W
10C2:  INCF   xF3,F
10C4:  BTFSC  FD8.2
10C6:  INCF   xF4,F
10C8:  MOVWF  FE9
10CA:  MOVFF  03,FEA
10CE:  MOVFF  FEF,5F5
10D2:  MOVLW  01
10D4:  MOVWF  xF6
10D6:  MOVFF  5F5,5F7
10DA:  MOVLB  0
10DC:  RCALL  0F9A
....................       } 
10DE:  MOVLB  5
10E0:  INCF   xF0,F
10E2:  BRA    1094
....................    } 
10E4:  INCF   xEF,F
10E6:  BRA    1046
.................... } 
10E8:  MOVLB  0
10EA:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
1196:  MOVLB  6
1198:  CLRF   x13
119A:  RRCF   x0E,W
119C:  MOVWF  x12
119E:  RRCF   x12,F
11A0:  RRCF   x12,F
11A2:  MOVLW  1F
11A4:  ANDWF  x12,F
....................    temp *= 64; 
11A6:  RLCF   x12,F
11A8:  RLCF   x13,F
11AA:  RLCF   x12,F
11AC:  RLCF   x13,F
11AE:  RLCF   x12,F
11B0:  RLCF   x13,F
11B2:  RLCF   x12,F
11B4:  RLCF   x13,F
11B6:  RLCF   x12,F
11B8:  RLCF   x13,F
11BA:  RLCF   x12,F
11BC:  RLCF   x13,F
11BE:  MOVLW  C0
11C0:  ANDWF  x12,F
....................    temp += x; 
11C2:  MOVF   x0D,W
11C4:  ADDWF  x12,F
11C6:  MOVLW  00
11C8:  ADDWFC x13,F
....................  
....................    if(x > 63) 
11CA:  MOVF   x0D,W
11CC:  SUBLW  3F
11CE:  BC    11EA
....................    { 
....................       p = displayData.right + temp - 64; 
11D0:  MOVLW  16
11D2:  ADDWF  x12,W
11D4:  MOVWF  x14
11D6:  MOVLW  02
11D8:  ADDWFC x13,W
11DA:  MOVWF  x15
11DC:  MOVLW  40
11DE:  SUBWF  x14,W
11E0:  MOVWF  x10
11E2:  MOVLW  00
11E4:  SUBWFB x15,W
11E6:  MOVWF  x11
....................    } 
....................    else 
11E8:  BRA    11F6
....................    { 
....................       p = displayData.left + temp; 
11EA:  MOVLW  16
11EC:  ADDWF  x12,W
11EE:  MOVWF  x10
11F0:  MOVLW  00
11F2:  ADDWFC x13,W
11F4:  MOVWF  x11
....................    } 
....................  
....................    if(color) 
11F6:  MOVF   x0F,F
11F8:  BZ    1224
....................    { 
....................       bit_set(*p, y%8); 
11FA:  MOVFF  611,03
11FE:  MOVFF  610,FE9
1202:  MOVFF  611,FEA
1206:  MOVF   x0E,W
1208:  ANDLW  07
120A:  MOVWF  x14
120C:  MOVLW  01
120E:  MOVWF  00
1210:  MOVF   x14,W
1212:  MOVWF  01
1214:  BZ    121E
1216:  BCF    FD8.0
1218:  RLCF   00,F
121A:  DECFSZ 01,F
121C:  BRA    1216
121E:  MOVF   00,W
1220:  IORWF  FEF,F
....................    } 
....................    else 
1222:  BRA    124E
....................    { 
....................       bit_clear(*p, y%8); 
1224:  MOVFF  611,03
1228:  MOVFF  610,FE9
122C:  MOVFF  611,FEA
1230:  MOVF   x0E,W
1232:  ANDLW  07
1234:  MOVWF  x14
1236:  MOVLW  01
1238:  MOVWF  00
123A:  MOVF   x14,W
123C:  MOVWF  01
123E:  BZ    1248
1240:  BCF    FD8.0
1242:  RLCF   00,F
1244:  DECFSZ 01,F
1246:  BRA    1240
1248:  MOVF   00,W
124A:  XORLW  FF
124C:  ANDWF  FEF,F
....................    } 
.................... } 
124E:  MOVLB  0
1250:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
0FDA:  MOVLB  5
0FDC:  CLRF   xE4
0FDE:  MOVLW  16
0FE0:  MOVWF  xE3
....................    p2 = displayData.right; 
0FE2:  MOVLW  02
0FE4:  MOVWF  xE6
0FE6:  MOVLW  16
0FE8:  MOVWF  xE5
....................    data = 0xFF * color; 
0FEA:  MOVF   xE1,W
0FEC:  MULLW  FF
0FEE:  MOVFF  FF3,5E2
....................  
....................    for(i=0; i<512; ++i) 
0FF2:  CLRF   xE8
0FF4:  CLRF   xE7
0FF6:  MOVF   xE8,W
0FF8:  SUBLW  01
0FFA:  BNC   1030
....................    { 
....................       *p1++ = data; 
0FFC:  MOVFF  5E4,03
1000:  MOVF   xE3,W
1002:  INCF   xE3,F
1004:  BTFSC  FD8.2
1006:  INCF   xE4,F
1008:  MOVWF  FE9
100A:  MOVFF  03,FEA
100E:  MOVFF  5E2,FEF
....................       *p2++ = data; 
1012:  MOVFF  5E6,03
1016:  MOVF   xE5,W
1018:  INCF   xE5,F
101A:  BTFSC  FD8.2
101C:  INCF   xE6,F
101E:  MOVWF  FE9
1020:  MOVFF  03,FEA
1024:  MOVFF  5E2,FEF
....................    } 
1028:  INCF   xE7,F
102A:  BTFSC  FD8.2
102C:  INCF   xE8,F
102E:  BRA    0FF6
.................... } 
1030:  MOVLB  0
1032:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0F9A:  MOVLB  5
0F9C:  MOVF   xF6,F
0F9E:  BZ    0FA6
....................       output_high(GLCD_CS2); 
0FA0:  BCF    F93.4
0FA2:  BSF    F8A.4
....................    else 
0FA4:  BRA    0FAA
....................       output_high(GLCD_CS1); 
0FA6:  BCF    F93.3
0FA8:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0FAA:  BCF    F93.6
0FAC:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0FAE:  CLRF   F95
0FB0:  MOVFF  5F7,F8C
....................    delay_cycles(50); 
0FB4:  MOVLW  10
0FB6:  MOVWF  00
0FB8:  DECFSZ 00,F
0FBA:  BRA    0FB8
0FBC:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0FBE:  BCF    F93.7
0FC0:  BSF    F8A.7
....................    delay_cycles(250); 
0FC2:  MOVLW  53
0FC4:  MOVWF  00
0FC6:  DECFSZ 00,F
0FC8:  BRA    0FC6
....................    output_low(GLCD_E); 
0FCA:  BCF    F93.7
0FCC:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0FCE:  BCF    F93.3
0FD0:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0FD2:  BCF    F93.4
0FD4:  BCF    F8A.4
.................... } 
0FD6:  MOVLB  0
0FD8:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
141C:  MOVLW  01
141E:  MOVLB  6
1420:  MOVWF  x06
1422:  MOVWF  x07
1424:  CLRF   x0C
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
1426:  MOVLB  5
1428:  MOVF   xFD,W
142A:  SUBWF  xFF,W
142C:  MOVLB  6
142E:  MOVWF  x0D
1430:  MOVF   x0D,W
1432:  BTFSS  x0D.7
1434:  BRA    143C
1436:  MOVLW  00
1438:  BSF    FD8.0
143A:  SUBFWB x0D,W
143C:  CLRF   03
143E:  MOVWF  x04
1440:  MOVFF  03,605
....................    dy = abs((signed int8)(y2 - y1)); 
1444:  MOVLB  5
1446:  MOVF   xFE,W
1448:  MOVLB  6
144A:  SUBWF  x00,W
144C:  MOVWF  x0D
144E:  MOVF   x0D,W
1450:  BTFSS  x0D.7
1452:  BRA    145A
1454:  MOVLW  00
1456:  BSF    FD8.0
1458:  SUBFWB x0D,W
145A:  CLRF   03
145C:  MOVWF  x02
145E:  MOVFF  03,603
....................    #endif 
....................  
....................    if(x1 > x2) 
1462:  MOVLB  5
1464:  MOVF   xFD,W
1466:  SUBWF  xFF,W
1468:  BC    1472
....................       addx = -1; 
146A:  MOVLW  FF
146C:  MOVLB  6
146E:  MOVWF  x06
1470:  MOVLB  5
....................    if(y1 > y2) 
1472:  MOVF   xFE,W
1474:  MOVLB  6
1476:  SUBWF  x00,W
1478:  BC    147E
....................       addy = -1; 
147A:  MOVLW  FF
147C:  MOVWF  x07
....................  
....................    if(dx >= dy) 
147E:  MOVF   x03,W
1480:  SUBWF  x05,W
1482:  BNC   1506
1484:  BNZ   148C
1486:  MOVF   x02,W
1488:  SUBWF  x04,W
148A:  BNC   1506
....................    { 
....................       dy *= 2; 
148C:  BCF    FD8.0
148E:  RLCF   x02,F
1490:  RLCF   x03,F
....................       P = dy - dx; 
1492:  MOVF   x04,W
1494:  SUBWF  x02,W
1496:  MOVWF  00
1498:  MOVF   x05,W
149A:  SUBWFB x03,W
149C:  MOVFF  00,608
14A0:  MOVWF  x09
....................       diff = P - dx; 
14A2:  MOVF   x04,W
14A4:  SUBWF  x08,W
14A6:  MOVWF  x0A
14A8:  MOVF   x05,W
14AA:  SUBWFB x09,W
14AC:  MOVWF  x0B
....................  
....................       for(; i<=dx; ++i) 
14AE:  MOVF   x05,F
14B0:  BNZ   14B8
14B2:  MOVF   x0C,W
14B4:  SUBWF  x04,W
14B6:  BNC   1504
....................       { 
....................          glcd_pixel(x1, y1, color); 
14B8:  MOVFF  5FD,60D
14BC:  MOVFF  5FE,60E
14C0:  MOVFF  601,60F
14C4:  MOVLB  0
14C6:  RCALL  1196
....................  
....................          if(P < 0) 
14C8:  MOVLB  6
14CA:  BTFSC  x09.7
14CC:  BRA    14D0
14CE:  BRA    14E4
....................          { 
....................             P  += dy; 
14D0:  MOVF   x02,W
14D2:  ADDWF  x08,F
14D4:  MOVF   x03,W
14D6:  ADDWFC x09,F
....................             x1 += addx; 
14D8:  MOVF   x06,W
14DA:  MOVLB  5
14DC:  ADDWF  xFD,W
14DE:  MOVWF  xFD
....................          } 
....................          else 
14E0:  BRA    14FE
14E2:  MOVLB  6
....................          { 
....................             P  += diff; 
14E4:  MOVF   x0A,W
14E6:  ADDWF  x08,F
14E8:  MOVF   x0B,W
14EA:  ADDWFC x09,F
....................             x1 += addx; 
14EC:  MOVF   x06,W
14EE:  MOVLB  5
14F0:  ADDWF  xFD,W
14F2:  MOVWF  xFD
....................             y1 += addy; 
14F4:  MOVLB  6
14F6:  MOVF   x07,W
14F8:  MOVLB  5
14FA:  ADDWF  xFE,W
14FC:  MOVWF  xFE
....................          } 
....................       } 
14FE:  MOVLB  6
1500:  INCF   x0C,F
1502:  BRA    14AE
....................    } 
....................    else 
1504:  BRA    157E
....................    { 
....................       dx *= 2; 
1506:  BCF    FD8.0
1508:  RLCF   x04,F
150A:  RLCF   x05,F
....................       P = dx - dy; 
150C:  MOVF   x02,W
150E:  SUBWF  x04,W
1510:  MOVWF  00
1512:  MOVF   x03,W
1514:  SUBWFB x05,W
1516:  MOVFF  00,608
151A:  MOVWF  x09
....................       diff = P - dy; 
151C:  MOVF   x02,W
151E:  SUBWF  x08,W
1520:  MOVWF  x0A
1522:  MOVF   x03,W
1524:  SUBWFB x09,W
1526:  MOVWF  x0B
....................  
....................       for(; i<=dy; ++i) 
1528:  MOVF   x03,F
152A:  BNZ   1532
152C:  MOVF   x0C,W
152E:  SUBWF  x02,W
1530:  BNC   157E
....................       { 
....................          glcd_pixel(x1, y1, color); 
1532:  MOVFF  5FD,60D
1536:  MOVFF  5FE,60E
153A:  MOVFF  601,60F
153E:  MOVLB  0
1540:  RCALL  1196
....................  
....................          if(P < 0) 
1542:  MOVLB  6
1544:  BTFSC  x09.7
1546:  BRA    154A
1548:  BRA    155E
....................          { 
....................             P  += dx; 
154A:  MOVF   x04,W
154C:  ADDWF  x08,F
154E:  MOVF   x05,W
1550:  ADDWFC x09,F
....................             y1 += addy; 
1552:  MOVF   x07,W
1554:  MOVLB  5
1556:  ADDWF  xFE,W
1558:  MOVWF  xFE
....................          } 
....................          else 
155A:  BRA    1578
155C:  MOVLB  6
....................          { 
....................             P  += diff; 
155E:  MOVF   x0A,W
1560:  ADDWF  x08,F
1562:  MOVF   x0B,W
1564:  ADDWFC x09,F
....................             x1 += addx; 
1566:  MOVF   x06,W
1568:  MOVLB  5
156A:  ADDWF  xFD,W
156C:  MOVWF  xFD
....................             y1 += addy; 
156E:  MOVLB  6
1570:  MOVF   x07,W
1572:  MOVLB  5
1574:  ADDWF  xFE,W
1576:  MOVWF  xFE
....................          } 
....................       } 
1578:  MOVLB  6
157A:  INCF   x0C,F
157C:  BRA    1528
....................    } 
.................... } 
157E:  MOVLB  0
1580:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1582:  MOVLB  5
1584:  MOVF   xF6,F
1586:  BZ    15E4
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1588:  MOVF   xF4,W
158A:  SUBWF  xF2,W
158C:  BC    1598
....................       { 
....................          xmin = x1; 
158E:  MOVFF  5F2,5F9
....................          xmax = x2; 
1592:  MOVFF  5F4,5FA
....................       } 
....................       else 
1596:  BRA    15A0
....................       { 
....................          xmin = x2; 
1598:  MOVFF  5F4,5F9
....................          xmax = x1; 
159C:  MOVFF  5F2,5FA
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
15A0:  MOVF   xF5,W
15A2:  SUBWF  xF3,W
15A4:  BC    15B0
....................       { 
....................          ymin = y1; 
15A6:  MOVFF  5F3,5FB
....................          ymax = y2; 
15AA:  MOVFF  5F5,5FC
....................       } 
....................       else 
15AE:  BRA    15B8
....................       { 
....................          ymin = y2; 
15B0:  MOVFF  5F5,5FB
....................          ymax = y1; 
15B4:  MOVFF  5F3,5FC
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
15B8:  MOVF   xF9,W
15BA:  SUBWF  xFA,W
15BC:  BNC   15E2
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
15BE:  MOVFF  5FB,5F8
15C2:  MOVF   xF8,W
15C4:  SUBWF  xFC,W
15C6:  BNC   15DE
....................          { 
....................             glcd_pixel(xmin, i, color); 
15C8:  MOVFF  5F9,60D
15CC:  MOVFF  5F8,60E
15D0:  MOVFF  5F7,60F
15D4:  MOVLB  0
15D6:  RCALL  1196
....................          } 
15D8:  MOVLB  5
15DA:  INCF   xF8,F
15DC:  BRA    15C2
....................       } 
15DE:  INCF   xF9,F
15E0:  BRA    15B8
....................    } 
....................    else 
15E2:  BRA    1640
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
15E4:  MOVFF  5F2,5FD
15E8:  MOVFF  5F3,5FE
15EC:  MOVFF  5F4,5FF
15F0:  MOVFF  5F3,600
15F4:  MOVFF  5F7,601
15F8:  MOVLB  0
15FA:  RCALL  141C
....................       glcd_line(x1, y2, x2, y2, color); 
15FC:  MOVFF  5F2,5FD
1600:  MOVFF  5F5,5FE
1604:  MOVFF  5F4,5FF
1608:  MOVFF  5F5,600
160C:  MOVFF  5F7,601
1610:  RCALL  141C
....................       glcd_line(x1, y1, x1, y2, color); 
1612:  MOVFF  5F2,5FD
1616:  MOVFF  5F3,5FE
161A:  MOVFF  5F2,5FF
161E:  MOVFF  5F5,600
1622:  MOVFF  5F7,601
1626:  RCALL  141C
....................       glcd_line(x2, y1, x2, y2, color); 
1628:  MOVFF  5F4,5FD
162C:  MOVFF  5F3,5FE
1630:  MOVFF  5F4,5FF
1634:  MOVFF  5F5,600
1638:  MOVFF  5F7,601
163C:  RCALL  141C
163E:  MOVLB  5
....................    } 
.................... } 
1640:  MOVLB  0
1642:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2186:  MOVLB  5
2188:  CLRF   xE5
....................    b = radius; 
218A:  MOVFF  5E2,5E6
....................    P = 1 - radius; 
218E:  MOVLW  01
2190:  BSF    FD8.0
2192:  SUBFWB xE2,W
2194:  MOVWF  xE7
....................  
....................    do 
....................    { 
....................       if(fill) 
2196:  MOVF   xE3,F
2198:  BZ    226C
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
219A:  MOVF   xE5,W
219C:  SUBWF  xE0,W
219E:  MOVWF  xE8
21A0:  MOVF   xE6,W
21A2:  ADDWF  xE1,W
21A4:  MOVWF  xE9
21A6:  MOVF   xE5,W
21A8:  ADDWF  xE0,W
21AA:  MOVWF  xEA
21AC:  MOVF   xE6,W
21AE:  ADDWF  xE1,W
21B0:  MOVWF  xEB
21B2:  MOVFF  5E8,5FD
21B6:  MOVFF  5E9,5FE
21BA:  MOVFF  5EA,5FF
21BE:  MOVFF  FE8,600
21C2:  MOVFF  5E4,601
21C6:  MOVLB  0
21C8:  CALL   141C
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
21CC:  MOVLB  5
21CE:  MOVF   xE5,W
21D0:  SUBWF  xE0,W
21D2:  MOVWF  xE8
21D4:  MOVF   xE6,W
21D6:  SUBWF  xE1,W
21D8:  MOVWF  xE9
21DA:  MOVF   xE5,W
21DC:  ADDWF  xE0,W
21DE:  MOVWF  xEA
21E0:  MOVF   xE6,W
21E2:  SUBWF  xE1,W
21E4:  MOVWF  xEB
21E6:  MOVFF  5E8,5FD
21EA:  MOVFF  5E9,5FE
21EE:  MOVFF  5EA,5FF
21F2:  MOVFF  FE8,600
21F6:  MOVFF  5E4,601
21FA:  MOVLB  0
21FC:  CALL   141C
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
2200:  MOVLB  5
2202:  MOVF   xE6,W
2204:  SUBWF  xE0,W
2206:  MOVWF  xE8
2208:  MOVF   xE5,W
220A:  ADDWF  xE1,W
220C:  MOVWF  xE9
220E:  MOVF   xE6,W
2210:  ADDWF  xE0,W
2212:  MOVWF  xEA
2214:  MOVF   xE5,W
2216:  ADDWF  xE1,W
2218:  MOVWF  xEB
221A:  MOVFF  5E8,5FD
221E:  MOVFF  5E9,5FE
2222:  MOVFF  5EA,5FF
2226:  MOVFF  FE8,600
222A:  MOVFF  5E4,601
222E:  MOVLB  0
2230:  CALL   141C
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
2234:  MOVLB  5
2236:  MOVF   xE6,W
2238:  SUBWF  xE0,W
223A:  MOVWF  xE8
223C:  MOVF   xE5,W
223E:  SUBWF  xE1,W
2240:  MOVWF  xE9
2242:  MOVF   xE6,W
2244:  ADDWF  xE0,W
2246:  MOVWF  xEA
2248:  MOVF   xE5,W
224A:  SUBWF  xE1,W
224C:  MOVWF  xEB
224E:  MOVFF  5E8,5FD
2252:  MOVFF  5E9,5FE
2256:  MOVFF  5EA,5FF
225A:  MOVFF  FE8,600
225E:  MOVFF  5E4,601
2262:  MOVLB  0
2264:  CALL   141C
....................       } 
....................       else 
2268:  BRA    236A
226A:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
226C:  MOVF   xE0,W
226E:  ADDWF  xE5,W
2270:  MOVWF  xE8
2272:  MOVF   xE1,W
2274:  ADDWF  xE6,W
2276:  MOVWF  xE9
2278:  MOVFF  5E8,60D
227C:  MOVFF  FE8,60E
2280:  MOVFF  5E4,60F
2284:  MOVLB  0
2286:  CALL   1196
....................          glcd_pixel(b+x, a+y, color); 
228A:  MOVLB  5
228C:  MOVF   xE0,W
228E:  ADDWF  xE6,W
2290:  MOVWF  xE8
2292:  MOVF   xE1,W
2294:  ADDWF  xE5,W
2296:  MOVWF  xE9
2298:  MOVFF  5E8,60D
229C:  MOVFF  FE8,60E
22A0:  MOVFF  5E4,60F
22A4:  MOVLB  0
22A6:  CALL   1196
....................          glcd_pixel(x-a, b+y, color); 
22AA:  MOVLB  5
22AC:  MOVF   xE5,W
22AE:  SUBWF  xE0,W
22B0:  MOVWF  xE8
22B2:  MOVF   xE1,W
22B4:  ADDWF  xE6,W
22B6:  MOVWF  xE9
22B8:  MOVFF  5E8,60D
22BC:  MOVFF  FE8,60E
22C0:  MOVFF  5E4,60F
22C4:  MOVLB  0
22C6:  CALL   1196
....................          glcd_pixel(x-b, a+y, color); 
22CA:  MOVLB  5
22CC:  MOVF   xE6,W
22CE:  SUBWF  xE0,W
22D0:  MOVWF  xE8
22D2:  MOVF   xE1,W
22D4:  ADDWF  xE5,W
22D6:  MOVWF  xE9
22D8:  MOVFF  5E8,60D
22DC:  MOVFF  FE8,60E
22E0:  MOVFF  5E4,60F
22E4:  MOVLB  0
22E6:  CALL   1196
....................          glcd_pixel(b+x, y-a, color); 
22EA:  MOVLB  5
22EC:  MOVF   xE0,W
22EE:  ADDWF  xE6,W
22F0:  MOVWF  xE8
22F2:  MOVF   xE5,W
22F4:  SUBWF  xE1,W
22F6:  MOVWF  xE9
22F8:  MOVFF  5E8,60D
22FC:  MOVFF  FE8,60E
2300:  MOVFF  5E4,60F
2304:  MOVLB  0
2306:  CALL   1196
....................          glcd_pixel(a+x, y-b, color); 
230A:  MOVLB  5
230C:  MOVF   xE0,W
230E:  ADDWF  xE5,W
2310:  MOVWF  xE8
2312:  MOVF   xE6,W
2314:  SUBWF  xE1,W
2316:  MOVWF  xE9
2318:  MOVFF  5E8,60D
231C:  MOVFF  FE8,60E
2320:  MOVFF  5E4,60F
2324:  MOVLB  0
2326:  CALL   1196
....................          glcd_pixel(x-a, y-b, color); 
232A:  MOVLB  5
232C:  MOVF   xE5,W
232E:  SUBWF  xE0,W
2330:  MOVWF  xE8
2332:  MOVF   xE6,W
2334:  SUBWF  xE1,W
2336:  MOVWF  xE9
2338:  MOVFF  5E8,60D
233C:  MOVFF  FE8,60E
2340:  MOVFF  5E4,60F
2344:  MOVLB  0
2346:  CALL   1196
....................          glcd_pixel(x-b, y-a, color); 
234A:  MOVLB  5
234C:  MOVF   xE6,W
234E:  SUBWF  xE0,W
2350:  MOVWF  xE8
2352:  MOVF   xE5,W
2354:  SUBWF  xE1,W
2356:  MOVWF  xE9
2358:  MOVFF  5E8,60D
235C:  MOVFF  FE8,60E
2360:  MOVFF  5E4,60F
2364:  MOVLB  0
2366:  CALL   1196
....................       } 
....................  
....................       if(P < 0) 
236A:  MOVLB  5
236C:  BTFSC  xE7.7
236E:  BRA    2372
2370:  BRA    238E
....................          P += 3 + 2 * a++; 
2372:  MOVF   xE5,W
2374:  INCF   xE5,F
2376:  MOVWF  xE8
2378:  MOVLW  02
237A:  MOVWF  xE9
237C:  MOVFF  5E8,5EA
2380:  MOVLB  0
2382:  RCALL  2138
2384:  MOVF   01,W
2386:  ADDLW  03
2388:  MOVLB  5
238A:  ADDWF  xE7,F
....................       else 
238C:  BRA    23B0
....................          P += 5 + 2 * (a++ - b--); 
238E:  MOVF   xE5,W
2390:  INCF   xE5,F
2392:  MOVWF  xE8
2394:  MOVF   xE6,W
2396:  DECF   xE6,F
2398:  SUBWF  xE8,W
239A:  MOVWF  xE8
239C:  MOVLW  02
239E:  MOVWF  xE9
23A0:  MOVFF  5E8,5EA
23A4:  MOVLB  0
23A6:  RCALL  2138
23A8:  MOVF   01,W
23AA:  ADDLW  05
23AC:  MOVLB  5
23AE:  ADDWF  xE7,F
....................     } while(a <= b); 
23B0:  MOVF   xE5,W
23B2:  XORLW  80
23B4:  MOVWF  00
23B6:  MOVF   xE6,W
23B8:  XORLW  80
23BA:  SUBWF  00,W
23BC:  BTFSC  FD8.2
23BE:  BRA    2196
23C0:  BTFSS  FD8.0
23C2:  BRA    2196
.................... } 
23C4:  MOVLB  0
23C6:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
1252:  MOVFF  5F4,03
1256:  MOVLB  5
1258:  MOVFF  5F3,FE9
125C:  MOVFF  5F4,FEA
1260:  MOVF   FEF,F
1262:  BTFSC  FD8.2
1264:  BRA    1418
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
1266:  MOVFF  5F4,03
126A:  MOVFF  5F3,FE9
126E:  MOVFF  5F4,FEA
1272:  MOVF   FEF,W
1274:  SUBLW  52
1276:  BNC   12CA
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1278:  MOVFF  5F4,03
127C:  MOVFF  5F3,FE9
1280:  MOVFF  5F4,FEA
1284:  MOVLW  20
1286:  SUBWF  FEF,W
1288:  MULLW  05
128A:  MOVF   FF3,W
128C:  CLRF   03
128E:  MOVLB  6
1290:  MOVWF  x00
1292:  MOVLW  05
1294:  MOVWF  FEA
1296:  MOVLW  FB
1298:  MOVWF  FE9
129A:  CLRF   x04
129C:  MOVFF  600,603
12A0:  MOVFF  FF2,601
12A4:  BCF    FF2.7
12A6:  MOVLW  05
12A8:  MOVWF  01
12AA:  CLRF   FF7
12AC:  MOVF   x00,W
12AE:  MOVLB  0
12B0:  CALL   0096
12B4:  TBLRD*-
12B6:  TBLRD*+
12B8:  MOVFF  FF5,FEE
12BC:  DECFSZ 01,F
12BE:  BRA    12B6
12C0:  MOVLB  6
12C2:  BTFSC  x01.7
12C4:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
12C6:  BRA    133A
12C8:  MOVLB  5
12CA:  MOVFF  5F4,03
12CE:  MOVFF  5F3,FE9
12D2:  MOVFF  5F4,FEA
12D6:  MOVF   FEF,W
12D8:  SUBLW  7E
12DA:  BNC   132E
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
12DC:  MOVFF  5F4,03
12E0:  MOVFF  5F3,FE9
12E4:  MOVFF  5F4,FEA
12E8:  MOVLW  53
12EA:  SUBWF  FEF,W
12EC:  MULLW  05
12EE:  MOVF   FF3,W
12F0:  CLRF   03
12F2:  MOVLB  6
12F4:  MOVWF  x00
12F6:  MOVLW  05
12F8:  MOVWF  FEA
12FA:  MOVLW  FB
12FC:  MOVWF  FE9
12FE:  CLRF   x04
1300:  MOVFF  600,603
1304:  MOVFF  FF2,601
1308:  BCF    FF2.7
130A:  MOVLW  05
130C:  MOVWF  01
130E:  CLRF   FF7
1310:  MOVF   x00,W
1312:  MOVLB  0
1314:  CALL   01B0
1318:  TBLRD*-
131A:  TBLRD*+
131C:  MOVFF  FF5,FEE
1320:  DECFSZ 01,F
1322:  BRA    131A
1324:  MOVLB  6
1326:  BTFSC  x01.7
1328:  BSF    FF2.7
....................       else 
132A:  BRA    133A
132C:  MOVLB  5
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
132E:  CLRF   xFB
1330:  CLRF   xFC
1332:  CLRF   xFD
1334:  CLRF   xFE
1336:  CLRF   xFF
1338:  MOVLB  6
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
133A:  MOVFF  5F4,03
133E:  MOVLB  5
1340:  MOVF   xF3,W
1342:  MOVWF  FE9
1344:  MOVFF  03,FEA
1348:  MOVF   FEF,W
134A:  XORLW  0A
134C:  MOVLB  0
134E:  BZ    1356
1350:  XORLW  07
1352:  BZ    1366
1354:  BRA    136C
....................          case '\n': 
....................             y += 7*size + 1; 
1356:  MOVLB  5
1358:  MOVF   xF5,W
135A:  MULLW  07
135C:  MOVF   FF3,W
135E:  ADDLW  01
1360:  ADDWF  xF2,F
....................             continue; 
1362:  BRA    140A
1364:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1366:  MOVLB  5
1368:  CLRF   xF1
....................             continue; 
136A:  BRA    140A
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
136C:  MOVLB  5
136E:  MOVF   xF5,W
1370:  MULLW  05
1372:  MOVF   FF3,W
1374:  ADDWF  xF1,W
1376:  SUBLW  7F
1378:  BC    1386
....................       { 
....................          x = 0;                           // Set x at far left position 
137A:  CLRF   xF1
....................          y += 7*size + 1;                 // Set y at next position down 
137C:  MOVF   xF5,W
137E:  MULLW  07
1380:  MOVF   FF3,W
1382:  ADDLW  01
1384:  ADDWF  xF2,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1386:  CLRF   xF7
1388:  MOVF   xF7,W
138A:  SUBLW  04
138C:  BNC   140A
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
138E:  CLRF   xF8
1390:  MOVF   xF8,W
1392:  SUBLW  06
1394:  BNC   1402
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1396:  CLRF   03
1398:  MOVF   xF7,W
139A:  ADDLW  FB
139C:  MOVWF  FE9
139E:  MOVLW  05
13A0:  ADDWFC 03,W
13A2:  MOVWF  FEA
13A4:  MOVFF  FEF,600
13A8:  MOVFF  600,00
13AC:  MOVF   xF8,W
13AE:  MOVWF  01
13B0:  BZ    13BA
13B2:  BCF    FD8.0
13B4:  RRCF   00,F
13B6:  DECFSZ 01,F
13B8:  BRA    13B2
13BA:  BTFSS  00.0
13BC:  BRA    13FE
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
13BE:  CLRF   xF9
13C0:  MOVF   xF5,W
13C2:  SUBWF  xF9,W
13C4:  BC    13FE
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
13C6:  CLRF   xFA
13C8:  MOVF   xF5,W
13CA:  SUBWF  xFA,W
13CC:  BC    13FA
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
13CE:  MOVF   xFA,W
13D0:  ADDWF  xF1,W
13D2:  MOVLB  6
13D4:  MOVWF  x00
13D6:  MOVLB  5
13D8:  MOVF   xF8,W
13DA:  MULWF  xF5
13DC:  MOVF   FF3,W
13DE:  ADDWF  xF2,W
13E0:  ADDWF  xF9,W
13E2:  MOVLB  6
13E4:  MOVWF  x01
13E6:  MOVFF  600,60D
13EA:  MOVWF  x0E
13EC:  MOVFF  5F6,60F
13F0:  MOVLB  0
13F2:  RCALL  1196
....................                   } 
13F4:  MOVLB  5
13F6:  INCF   xFA,F
13F8:  BRA    13C8
....................                } 
13FA:  INCF   xF9,F
13FC:  BRA    13C0
....................             } 
....................          } 
13FE:  INCF   xF8,F
1400:  BRA    1390
....................       } 
1402:  INCF   xF7,F
1404:  MOVF   xF5,W
1406:  ADDWF  xF1,F
1408:  BRA    1388
....................    } 
140A:  INCF   xF3,F
140C:  BTFSC  FD8.2
140E:  INCF   xF4,F
1410:  INCF   xF1,F
1412:  MOVLB  0
1414:  BRA    1252
1416:  MOVLB  5
.................... } 
1418:  MOVLB  0
141A:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Tijeras [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1F, 0xF0, 0xFF, 0xF8, 0xFF, 0xFC, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0xFF, 0xF8, 0xFF, 0xFC, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x7E, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x3F, 0x83, 0xFC, 0x01, 0x00, 0x80, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x3F, 0xFF, 0xFC, 0x01, 0x81, 0x80, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x3F, 0xFF, 0xFC, 0x00, 0x83, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x7F, 0xFF, 0xFC, 0x00, 0xC3, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x00, 0x46, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x00, 0x7C, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x0E, 0x3C, 0x78, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0xC3, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0x82, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0x81, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x20, 0x00, 0x88, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x07, 0xFF, 0xE0, 0x0C, 0x00, 0x60, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1F, 0xFF, 0x3F, 0xFF, 0x8F, 0xFF, 0x87, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Guante [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xBF, 0xEF, 0xF9, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x3F, 0xEF, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x06, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x36, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xB6, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xB6, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xFF, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xFF, 0xE0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x20, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x20, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0xFF, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x01, 0xFF, 0xC0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x01, 0xFF, 0xC0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xCF, 0xF9, 0xFE, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xEF, 0xF9, 0xFE, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Delicado [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x7E, 0x7F, 0xDF, 0xFB, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x03, 0xFF, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x02, 0x00, 0x60, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x03, 0xFF, 0xE0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x80, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0xC0, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x80, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x80, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x01, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x02, 0x00, 0x60, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x0E, 0x00, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x0C, 0x00, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x18, 0x00, 0x0C, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x10, 0x1F, 0x84, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x1F, 0xFF, 0xFC, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x7F, 0xDF, 0xFB, 0xFE, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Liquido [64][16] = { 
.................... 0x07, 0xFC, 0x7F, 0xF9, 0xFF, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xFC, 0x7F, 0xF9, 0xFF, 0xF3, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x38, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x03, 0x00, 0x0C, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x0E, 0x00, 0x03, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x18, 0x00, 0x01, 0x80, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x04, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x70, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x04, 0x03, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x03, 0xFF, 0xFF, 0xFF, 0xFE, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x0F, 0xFF, 0xFF, 0xFF, 0xFE, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x0F, 0xFF, 0xFF, 0xFF, 0xFC, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x0F, 0xFF, 0xFF, 0xFF, 0xFC, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x0F, 0xFF, 0xFF, 0xFF, 0xFC, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0xFF, 0xFF, 0xFF, 0xE0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x7F, 0xFF, 0xFF, 0xE0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xFF, 0x9F, 0xFF, 0x9F, 0xFE, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x07, 0xFF, 0x9F, 0xFF, 0x9F, 0xFE, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Proceso [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
....................  
.................... // Definición de teclado - NC 
.................... #define   UP            input(PIN_A0) 
.................... #define   DOWN          input(PIN_A1) 
.................... #define   RIGHT         input(PIN_A2) 
.................... #define   LEFT          input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... //signed  int8 clave[4]={0,0,0,0}; 
.................... //int8 contrasena[4]={0,0,0,0};   // 0=Verdadero, 1=Falso 
.................... const int8 Lenbuf = 64; 
.................... int8 txbuf[Lenbuf]; 
.................... int8 rxbuf[Lenbuf]; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte SlaveB0Tx[0X10]; 
.................... byte SlaveC0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... char kpa[]="kPa"; 
.................... float promedio[20]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... int8 Puerta=0,Parada=1,NivelReservorio=0,NivelTanque=0,Presostato=0,h=0,l=0,Ajuste=0,Ajusten=0,R2=0,Alarma=0,AlarmaAgua=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,emergency=0,visual=1,desfoguelento=0,Lectura=0,Expulsa=0, est=0,Visua=0,flag_agua=0,CadenaRecibida=0; 
.................... short disp_Calentando=0,disp_Llenando=0,disp_Secando=0,disp_Esterilizando=0,disp_Despresurizando=0,disp_Stop=0,disp_Door=0,disp_Fin=0,z=0; 
.................... short disp_Alarma=0,disp_AlarmaAgua=0; 
.................... int8 Resistencia=0,EVDesfogue=0,EVAgua=0,EVTrampa=0,MotorPuerta=0,EVEntradaAgua=0,BombaVacio=0,BombaAgua=0,Control=0,Decimal=0; 
.................... int8 Menu=0, unidad=1,bite=0,TamanoCadena=0,i=0; 
.................... int8 Setpoint=0,fin_ciclo=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,Exhaust=0,Chksum=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,Minutos=15,Nivel=0,tiempo_desfogue=0,tinicio=0; 
.................... float ADC_Pt100=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecado[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Tsecadop[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... char datoTx[14]; 
.................... char datoRx[11]; 
.................... char ADCTemperatura[4]; 
.................... char SetTemperatura[3]={0,0,0}; 
.................... float V0=0.0,R1=6180.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=25.0,Ganancia2=20.0,desvio=0.0,d3=0.0; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
1644:  MOVLB  5
1646:  MOVFF  5E0,01
164A:  MOVFF  5E1,03
164E:  MOVFF  5E0,5E6
1652:  MOVFF  5E1,5E7
1656:  MOVLW  05
1658:  MOVWF  FEA
165A:  MOVLW  C0
165C:  MOVWF  FE9
165E:  MOVFF  5E1,FE2
1662:  MOVFF  5E0,FE1
1666:  MOVF   FE7,F
1668:  MOVFF  FE6,FEE
166C:  BNZ   1666
....................    if(sombreado==2) 
166E:  MOVF   xE4,W
1670:  SUBLW  02
1672:  BNZ   169C
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1674:  MOVLW  01
1676:  ADDWF  xE2,W
1678:  MOVWF  xE6
167A:  MOVLW  01
167C:  ADDWF  xE3,W
167E:  MOVWF  xE7
1680:  MOVFF  5E6,5F1
1684:  MOVWF  xF2
1686:  MOVLW  05
1688:  MOVWF  xF4
168A:  MOVLW  C0
168C:  MOVWF  xF3
168E:  MOVFF  5E5,5F5
1692:  MOVLW  01
1694:  MOVWF  xF6
1696:  MOVLB  0
1698:  RCALL  1252
169A:  MOVLB  5
....................    if(sombreado==1) 
169C:  DECFSZ xE4,W
169E:  BRA    16EA
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
16A0:  MOVF   xE5,W
16A2:  MULLW  08
16A4:  MOVF   FF3,W
16A6:  ADDWF  xE3,W
16A8:  MOVWF  xE6
16AA:  CLRF   xF2
16AC:  MOVFF  5E3,5F3
16B0:  MOVLW  7F
16B2:  MOVWF  xF4
16B4:  MOVFF  5E6,5F5
16B8:  MOVLW  01
16BA:  MOVWF  xF6
16BC:  MOVWF  xF7
16BE:  MOVLB  0
16C0:  RCALL  1582
16C2:  MOVLW  01
16C4:  MOVLB  5
16C6:  ADDWF  xE2,W
16C8:  MOVWF  xE6
16CA:  MOVLW  01
16CC:  ADDWF  xE3,W
16CE:  MOVWF  xE7
16D0:  MOVFF  5E6,5F1
16D4:  MOVWF  xF2
16D6:  MOVLW  05
16D8:  MOVWF  xF4
16DA:  MOVLW  C0
16DC:  MOVWF  xF3
16DE:  MOVFF  5E5,5F5
16E2:  CLRF   xF6
16E4:  MOVLB  0
16E6:  RCALL  1252
16E8:  MOVLB  5
....................    if(sombreado==0) 
16EA:  MOVF   xE4,F
16EC:  BNZ   1738
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
16EE:  MOVF   xE5,W
16F0:  MULLW  08
16F2:  MOVF   FF3,W
16F4:  ADDWF  xE3,W
16F6:  MOVWF  xE6
16F8:  CLRF   xF2
16FA:  MOVFF  5E3,5F3
16FE:  MOVLW  7F
1700:  MOVWF  xF4
1702:  MOVFF  5E6,5F5
1706:  MOVLW  01
1708:  MOVWF  xF6
170A:  CLRF   xF7
170C:  MOVLB  0
170E:  RCALL  1582
1710:  MOVLW  01
1712:  MOVLB  5
1714:  ADDWF  xE2,W
1716:  MOVWF  xE6
1718:  MOVLW  01
171A:  ADDWF  xE3,W
171C:  MOVWF  xE7
171E:  MOVFF  5E6,5F1
1722:  MOVWF  xF2
1724:  MOVLW  05
1726:  MOVWF  xF4
1728:  MOVLW  C0
172A:  MOVWF  xF3
172C:  MOVFF  5E5,5F5
1730:  MOVLW  01
1732:  MOVWF  xF6
1734:  MOVLB  0
1736:  RCALL  1252
....................    glcd_update(); 
1738:  MOVLB  0
173A:  RCALL  1034
.................... } 
173C:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
244E:  MOVLB  5
2450:  MOVF   xE4,W
2452:  SUBLW  02
2454:  BNZ   24C6
....................    { 
....................       sprintf(voltage, "%03u", digito); 
2456:  MOVLW  05
2458:  MOVWF  xDF
245A:  MOVLW  E6
245C:  MOVWF  xDE
245E:  MOVFF  5E1,5EF
2462:  MOVLW  03
2464:  MOVWF  xF0
2466:  MOVLB  0
2468:  RCALL  23C8
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
246A:  MOVLB  5
246C:  MOVF   xE5,W
246E:  MULLW  12
2470:  MOVF   FF3,W
2472:  ADDWF  xE2,W
2474:  MOVWF  xEF
2476:  MOVF   xE5,W
2478:  MULLW  08
247A:  MOVF   FF3,W
247C:  ADDWF  xE3,W
247E:  MOVWF  xF0
2480:  MOVFF  5E2,5F2
2484:  MOVFF  5E3,5F3
2488:  MOVFF  5EF,5F4
248C:  MOVWF  xF5
248E:  MOVLW  01
2490:  MOVWF  xF6
2492:  MOVWF  xF7
2494:  MOVLB  0
2496:  CALL   1582
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
249A:  MOVLW  01
249C:  MOVLB  5
249E:  ADDWF  xE2,W
24A0:  MOVWF  xEF
24A2:  MOVLW  01
24A4:  ADDWF  xE3,W
24A6:  MOVWF  xF0
24A8:  MOVFF  5EF,5F1
24AC:  MOVWF  xF2
24AE:  MOVLW  05
24B0:  MOVWF  xF4
24B2:  MOVLW  E6
24B4:  MOVWF  xF3
24B6:  MOVFF  5E5,5F5
24BA:  CLRF   xF6
24BC:  MOVLB  0
24BE:  CALL   1252
....................    } 
....................    else 
24C2:  BRA    2594
24C4:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%u", digito); 
24C6:  MOVLW  05
24C8:  MOVWF  xDF
24CA:  MOVLW  E6
24CC:  MOVWF  xDE
24CE:  MOVFF  5E1,5EF
24D2:  MOVLW  1B
24D4:  MOVWF  xF0
24D6:  MOVLB  0
24D8:  RCALL  23C8
....................     
....................       if(sombreado==1) 
24DA:  MOVLB  5
24DC:  DECFSZ xE4,W
24DE:  BRA    2538
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24E0:  MOVF   xE5,W
24E2:  MULLW  05
24E4:  MOVF   FF3,W
24E6:  ADDWF  xE2,W
24E8:  MOVWF  xEF
24EA:  MOVF   xE5,W
24EC:  MULLW  08
24EE:  MOVF   FF3,W
24F0:  ADDWF  xE3,W
24F2:  MOVWF  xF0
24F4:  MOVFF  5E2,5F2
24F8:  MOVFF  5E3,5F3
24FC:  MOVFF  5EF,5F4
2500:  MOVWF  xF5
2502:  MOVLW  01
2504:  MOVWF  xF6
2506:  MOVWF  xF7
2508:  MOVLB  0
250A:  CALL   1582
250E:  MOVLW  01
2510:  MOVLB  5
2512:  ADDWF  xE2,W
2514:  MOVWF  xEF
2516:  MOVLW  01
2518:  ADDWF  xE3,W
251A:  MOVWF  xF0
251C:  MOVFF  5EF,5F1
2520:  MOVWF  xF2
2522:  MOVLW  05
2524:  MOVWF  xF4
2526:  MOVLW  E6
2528:  MOVWF  xF3
252A:  MOVFF  5E5,5F5
252E:  CLRF   xF6
2530:  MOVLB  0
2532:  CALL   1252
2536:  MOVLB  5
....................       if(sombreado==0) 
2538:  MOVF   xE4,F
253A:  BNZ   2596
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
253C:  MOVF   xE5,W
253E:  MULLW  05
2540:  MOVF   FF3,W
2542:  ADDWF  xE2,W
2544:  MOVWF  xEF
2546:  MOVF   xE5,W
2548:  MULLW  08
254A:  MOVF   FF3,W
254C:  ADDWF  xE3,W
254E:  MOVWF  xF0
2550:  MOVFF  5E2,5F2
2554:  MOVFF  5E3,5F3
2558:  MOVFF  5EF,5F4
255C:  MOVWF  xF5
255E:  MOVLW  01
2560:  MOVWF  xF6
2562:  CLRF   xF7
2564:  MOVLB  0
2566:  CALL   1582
256A:  MOVLW  01
256C:  MOVLB  5
256E:  ADDWF  xE2,W
2570:  MOVWF  xEF
2572:  MOVLW  01
2574:  ADDWF  xE3,W
2576:  MOVWF  xF0
2578:  MOVFF  5EF,5F1
257C:  MOVWF  xF2
257E:  MOVLW  05
2580:  MOVWF  xF4
2582:  MOVLW  E6
2584:  MOVWF  xF3
2586:  MOVFF  5E5,5F5
258A:  MOVLW  01
258C:  MOVWF  xF6
258E:  MOVLB  0
2590:  CALL   1252
2594:  MOVLB  5
....................    } 
....................    glcd_update(); 
2596:  MOVLB  0
2598:  CALL   1034
.................... } 
259C:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2086:  MOVLB  5
2088:  MOVF   xE0,W
208A:  SUBLW  05
208C:  BNZ   2134
....................    for( i = 0 ; i < 64 ; i ++ ) 
208E:  CLRF   xE1
2090:  MOVF   xE1,W
2092:  SUBLW  3F
2094:  BNC   2134
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2096:  CLRF   xE2
2098:  MOVF   xE2,W
209A:  SUBLW  0F
209C:  BNC   2130
....................       {     
....................          for(k=7;k>-1;k--) 
209E:  MOVLW  07
20A0:  MOVWF  xE3
20A2:  MOVF   xE3,W
20A4:  XORLW  80
20A6:  SUBLW  7F
20A8:  BC    212C
....................          {       
....................             if( bit_test(Proceso[i][j] ,7-k ))  
20AA:  CLRF   xE5
20AC:  MOVFF  5E1,5E4
20B0:  CLRF   xE7
20B2:  MOVLW  10
20B4:  MOVWF  xE6
20B6:  MOVLB  0
20B8:  BRA    2062
20BA:  MOVFF  02,5E5
20BE:  MOVFF  01,5E4
20C2:  MOVLB  5
20C4:  MOVF   xE2,W
20C6:  ADDWF  01,W
20C8:  MOVWF  01
20CA:  MOVLW  00
20CC:  ADDWFC 02,W
20CE:  MOVWF  03
20D0:  MOVF   01,W
20D2:  MOVFF  FF2,5E4
20D6:  BCF    FF2.7
20D8:  MOVFF  03,FF7
20DC:  MOVLB  0
20DE:  CALL   02A6
20E2:  MOVLB  5
20E4:  BTFSC  xE4.7
20E6:  BSF    FF2.7
20E8:  MOVWF  xE4
20EA:  MOVLW  07
20EC:  BSF    FD8.0
20EE:  SUBFWB xE3,W
20F0:  MOVWF  xE5
20F2:  MOVFF  5E4,00
20F6:  MOVF   xE5,W
20F8:  MOVWF  01
20FA:  BZ    2104
20FC:  BCF    FD8.0
20FE:  RRCF   00,F
2100:  DECFSZ 01,F
2102:  BRA    20FC
2104:  BTFSS  00.0
2106:  BRA    2128
....................                glcd_pixel( j*8+k,i, ON ); 
2108:  MOVF   xE2,W
210A:  MULLW  08
210C:  MOVF   FF3,W
210E:  ADDWF  xE3,W
2110:  MOVWF  xE4
2112:  MOVFF  FE8,60D
2116:  MOVFF  5E1,60E
211A:  MOVLW  01
211C:  MOVLB  6
211E:  MOVWF  x0F
2120:  MOVLB  0
2122:  CALL   1196
2126:  MOVLB  5
....................          }   
2128:  DECF   xE3,F
212A:  BRA    20A2
....................       } 
212C:  INCF   xE2,F
212E:  BRA    2098
....................    } 
2130:  INCF   xE1,F
2132:  BRA    2090
....................    } 
....................     
.................... } 
2134:  MOVLB  0
2136:  RETLW  00
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0EA2:  MOVLW  15
0EA4:  MOVWF  FCF
0EA6:  MOVLW  A0
0EA8:  MOVWF  FCE
....................    tiempos++; 
0EAA:  MOVLB  5
0EAC:  INCF   x42,F
0EAE:  BTFSC  FD8.2
0EB0:  INCF   x43,F
....................    tiempos3++; 
0EB2:  INCF   x44,F
0EB4:  BTFSC  FD8.2
0EB6:  INCF   x45,F
....................    tiempoctrl++; 
0EB8:  INCF   x46,F
0EBA:  BTFSC  FD8.2
0EBC:  INCF   x47,F
....................        
....................    if(tiempos3>=40 && Exhaust==2) 
0EBE:  MOVF   x45,F
0EC0:  BNZ   0EC8
0EC2:  MOVF   x44,W
0EC4:  SUBLW  27
0EC6:  BC    0EDA
0EC8:  MOVF   x40,W
0ECA:  SUBLW  02
0ECC:  BNZ   0EDA
....................    {tiempos3=0;Expulsa=1;tiempo_desfogue++;} 
0ECE:  CLRF   x45
0ED0:  CLRF   x44
0ED2:  BSF    x29.7
0ED4:  INCF   x4C,F
0ED6:  BTFSC  FD8.2
0ED8:  INCF   x4D,F
....................     
....................    if(tiempos==200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0EDA:  MOVF   x42,W
0EDC:  SUBLW  C8
0EDE:  BNZ   0F68
0EE0:  MOVF   x43,F
0EE2:  BNZ   0F68
....................    {tiempos=0;Lectura=1;tinicio++; 
0EE4:  CLRF   x43
0EE6:  CLRF   x42
0EE8:  BSF    x29.6
0EEA:  INCF   x4E,F
0EEC:  BTFSC  FD8.2
0EEE:  INCF   x4F,F
....................     
....................    //----------------------------- Tiempo Total-----------------------------// 
....................     
....................    if(tiempo_esterilizacion==1) 
0EF0:  DECFSZ x3E,W
0EF2:  BRA    0F2C
....................       { 
....................                       
....................       Testerilizacion[0]++; 
0EF4:  INCF   x54,F
....................       if(Testerilizacion[0]>9) 
0EF6:  BTFSC  x54.7
0EF8:  BRA    0F04
0EFA:  MOVF   x54,W
0EFC:  SUBLW  09
0EFE:  BC    0F04
....................          {Testerilizacion[0]=0; 
0F00:  CLRF   x54
....................           Testerilizacion[1]++;} 
0F02:  INCF   x55,F
....................        if(Testerilizacion[1]>5) 
0F04:  BTFSC  x55.7
0F06:  BRA    0F12
0F08:  MOVF   x55,W
0F0A:  SUBLW  05
0F0C:  BC    0F12
....................          {Testerilizacion[1]=0; 
0F0E:  CLRF   x55
....................           Testerilizacion[2]++;} 
0F10:  INCF   x56,F
....................          if(Testerilizacion[2]>9) 
0F12:  BTFSC  x56.7
0F14:  BRA    0F20
0F16:  MOVF   x56,W
0F18:  SUBLW  09
0F1A:  BC    0F20
....................             {Testerilizacion[2]=0; 
0F1C:  CLRF   x56
....................              Testerilizacion[3]++;} 
0F1E:  INCF   x57,F
....................             if(Testerilizacion[3]>5) 
0F20:  BTFSC  x57.7
0F22:  BRA    0F2C
0F24:  MOVF   x57,W
0F26:  SUBLW  05
0F28:  BC    0F2C
....................                {Testerilizacion[3]=0;} 
0F2A:  CLRF   x57
....................       }        
....................        
....................     if(tiempo_secado==1) 
0F2C:  DECFSZ x3F,W
0F2E:  BRA    0F68
....................       { 
....................                       
....................       Tsecado[0]++; 
0F30:  INCF   x5C,F
....................       if(Tsecado[0]>9) 
0F32:  BTFSC  x5C.7
0F34:  BRA    0F40
0F36:  MOVF   x5C,W
0F38:  SUBLW  09
0F3A:  BC    0F40
....................          {Tsecado[0]=0; 
0F3C:  CLRF   x5C
....................           Tsecado[1]++;} 
0F3E:  INCF   x5D,F
....................        if(Tsecado[1]>5) 
0F40:  BTFSC  x5D.7
0F42:  BRA    0F4E
0F44:  MOVF   x5D,W
0F46:  SUBLW  05
0F48:  BC    0F4E
....................          {Tsecado[1]=0; 
0F4A:  CLRF   x5D
....................           Tsecado[2]++;} 
0F4C:  INCF   x5E,F
....................          if(Tsecado[2]>9) 
0F4E:  BTFSC  x5E.7
0F50:  BRA    0F5C
0F52:  MOVF   x5E,W
0F54:  SUBLW  09
0F56:  BC    0F5C
....................             {Tsecado[2]=0; 
0F58:  CLRF   x5E
....................              Tsecado[3]++;} 
0F5A:  INCF   x5F,F
....................             if(Tsecado[3]>5) 
0F5C:  BTFSC  x5F.7
0F5E:  BRA    0F68
0F60:  MOVF   x5F,W
0F62:  SUBLW  05
0F64:  BC    0F68
....................                {Tsecado[3]=0;} 
0F66:  CLRF   x5F
....................       }   
....................    } 
....................    } 
....................     
0F68:  BCF    F9E.0
0F6A:  MOVLB  0
0F6C:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
*
26DE:  MOVLW  07
26E0:  MOVLB  5
26E2:  ADDWF  xE2,W
26E4:  MOVWF  xE3
26E6:  MOVFF  5E0,5F2
26EA:  MOVFF  5E2,5F3
26EE:  MOVFF  5E1,5F4
26F2:  MOVWF  xF5
26F4:  MOVLW  01
26F6:  MOVWF  xF6
26F8:  CLRF   xF7
26FA:  MOVLB  0
26FC:  CALL   1582
.................... } 
2700:  RETLW  00
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%3.1f",adc); // Converts adc to text 
*
2AB2:  MOVLW  05
2AB4:  MOVLB  5
2AB6:  MOVWF  xDF
2AB8:  MOVLW  E7
2ABA:  MOVWF  xDE
2ABC:  MOVLW  02
2ABE:  MOVWF  FE9
2AC0:  MOVFF  5E3,5F3
2AC4:  MOVFF  5E2,5F2
2AC8:  MOVFF  5E1,5F1
2ACC:  MOVFF  5E0,5F0
2AD0:  MOVLW  01
2AD2:  MOVWF  xF4
2AD4:  MOVLB  0
2AD6:  BRA    28FC
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2AD8:  MOVLB  5
2ADA:  MOVF   xE6,W
2ADC:  MULLW  1B
2ADE:  MOVF   FF3,W
2AE0:  ADDWF  xE4,W
2AE2:  MOVWF  xF0
2AE4:  MOVF   xE6,W
2AE6:  MULLW  08
2AE8:  MOVF   FF3,W
2AEA:  ADDWF  xE5,W
2AEC:  MOVWF  xF1
2AEE:  MOVFF  5E4,5F2
2AF2:  MOVFF  5E5,5F3
2AF6:  MOVFF  5F0,5F4
2AFA:  MOVWF  xF5
2AFC:  MOVLW  01
2AFE:  MOVWF  xF6
2B00:  CLRF   xF7
2B02:  MOVLB  0
2B04:  CALL   1582
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
2B08:  MOVFF  5E4,5F1
2B0C:  MOVFF  5E5,5F2
2B10:  MOVLW  05
2B12:  MOVLB  5
2B14:  MOVWF  xF4
2B16:  MOVLW  E7
2B18:  MOVWF  xF3
2B1A:  MOVFF  5E6,5F5
2B1E:  MOVLW  01
2B20:  MOVWF  xF6
2B22:  MOVLB  0
2B24:  CALL   1252
.................... } 
2B28:  GOTO   646C (RETURN)
....................  
....................  
.................... void MuestraTiemposProgramados(){ 
.................... // Muestra Valor de esterilizacion programado. 
....................    displayTiempo(Testerilizacionp[3],36,0,0,1);displayTiempo(Testerilizacionp[2],42,0,0,1); 
*
259E:  MOVFF  55B,5E1
25A2:  MOVLW  24
25A4:  MOVLB  5
25A6:  MOVWF  xE2
25A8:  CLRF   xE3
25AA:  CLRF   xE4
25AC:  MOVLW  01
25AE:  MOVWF  xE5
25B0:  MOVLB  0
25B2:  RCALL  244E
25B4:  MOVFF  55A,5E1
25B8:  MOVLW  2A
25BA:  MOVLB  5
25BC:  MOVWF  xE2
25BE:  CLRF   xE3
25C0:  CLRF   xE4
25C2:  MOVLW  01
25C4:  MOVWF  xE5
25C6:  MOVLB  0
25C8:  RCALL  244E
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,0,2,1);  
25CA:  MOVLW  05
25CC:  MOVWF  FEA
25CE:  MOVLW  C0
25D0:  MOVWF  FE9
25D2:  MOVFF  FF2,5E0
25D6:  BCF    FF2.7
25D8:  MOVLW  00
25DA:  CALL   06BE
25DE:  TBLRD*-
25E0:  TBLRD*+
25E2:  MOVF   FF5,W
25E4:  MOVWF  FEE
25E6:  IORLW  00
25E8:  BNZ   25E0
25EA:  MOVLB  5
25EC:  BTFSC  xE0.7
25EE:  BSF    FF2.7
25F0:  MOVLW  05
25F2:  MOVWF  xE1
25F4:  MOVLW  C0
25F6:  MOVWF  xE0
25F8:  MOVLW  31
25FA:  MOVWF  xE2
25FC:  CLRF   xE3
25FE:  MOVLW  02
2600:  MOVWF  xE4
2602:  MOVLW  01
2604:  MOVWF  xE5
2606:  MOVLB  0
2608:  CALL   1644
....................    displayTiempo(Testerilizacionp[1],54,0,0,1);displayTiempo(Testerilizacionp[0],60,0,0,1); 
260C:  MOVFF  559,5E1
2610:  MOVLW  36
2612:  MOVLB  5
2614:  MOVWF  xE2
2616:  CLRF   xE3
2618:  CLRF   xE4
261A:  MOVLW  01
261C:  MOVWF  xE5
261E:  MOVLB  0
2620:  RCALL  244E
2622:  MOVFF  558,5E1
2626:  MOVLW  3C
2628:  MOVLB  5
262A:  MOVWF  xE2
262C:  CLRF   xE3
262E:  CLRF   xE4
2630:  MOVLW  01
2632:  MOVWF  xE5
2634:  MOVLB  0
2636:  RCALL  244E
.................... // Muestra tiempo de secado programado. 
....................    displayTiempo(Tsecadop[3],36,8,0,1);displayTiempo(Tsecadop[2],42,8,0,1); 
2638:  MOVFF  563,5E1
263C:  MOVLW  24
263E:  MOVLB  5
2640:  MOVWF  xE2
2642:  MOVLW  08
2644:  MOVWF  xE3
2646:  CLRF   xE4
2648:  MOVLW  01
264A:  MOVWF  xE5
264C:  MOVLB  0
264E:  RCALL  244E
2650:  MOVFF  562,5E1
2654:  MOVLW  2A
2656:  MOVLB  5
2658:  MOVWF  xE2
265A:  MOVLW  08
265C:  MOVWF  xE3
265E:  CLRF   xE4
2660:  MOVLW  01
2662:  MOVWF  xE5
2664:  MOVLB  0
2666:  RCALL  244E
....................    strcpy(Menus.Letra,":");displayMenu(Menus.Letra,49,8,2,1);  
2668:  MOVLW  05
266A:  MOVWF  FEA
266C:  MOVLW  C0
266E:  MOVWF  FE9
2670:  MOVFF  FF2,5E0
2674:  BCF    FF2.7
2676:  MOVLW  00
2678:  CALL   06BE
267C:  TBLRD*-
267E:  TBLRD*+
2680:  MOVF   FF5,W
2682:  MOVWF  FEE
2684:  IORLW  00
2686:  BNZ   267E
2688:  MOVLB  5
268A:  BTFSC  xE0.7
268C:  BSF    FF2.7
268E:  MOVLW  05
2690:  MOVWF  xE1
2692:  MOVLW  C0
2694:  MOVWF  xE0
2696:  MOVLW  31
2698:  MOVWF  xE2
269A:  MOVLW  08
269C:  MOVWF  xE3
269E:  MOVLW  02
26A0:  MOVWF  xE4
26A2:  MOVLW  01
26A4:  MOVWF  xE5
26A6:  MOVLB  0
26A8:  CALL   1644
....................    displayTiempo(Tsecadop[1],54,8,0,1);displayTiempo(Tsecadop[0],60,8,0,1); 
26AC:  MOVFF  561,5E1
26B0:  MOVLW  36
26B2:  MOVLB  5
26B4:  MOVWF  xE2
26B6:  MOVLW  08
26B8:  MOVWF  xE3
26BA:  CLRF   xE4
26BC:  MOVLW  01
26BE:  MOVWF  xE5
26C0:  MOVLB  0
26C2:  RCALL  244E
26C4:  MOVFF  560,5E1
26C8:  MOVLW  3C
26CA:  MOVLB  5
26CC:  MOVWF  xE2
26CE:  MOVLW  08
26D0:  MOVWF  xE3
26D2:  CLRF   xE4
26D4:  MOVLW  01
26D6:  MOVWF  xE5
26D8:  MOVLB  0
26DA:  RCALL  244E
.................... } 
26DC:  RETLW  00
....................  
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
186A:  MOVLW  05
186C:  MOVLB  5
186E:  MOVWF  xDF
1870:  MOVLW  E6
1872:  MOVWF  xDE
1874:  MOVFF  5E2,5EF
1878:  MOVLW  1F
187A:  MOVWF  xF0
187C:  MOVLB  0
187E:  BRA    178A
....................     
....................    if(sombreado==1) 
1880:  MOVLB  5
1882:  DECFSZ xE5,W
1884:  BRA    18D4
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1886:  MOVLW  12
1888:  ADDWF  xE3,W
188A:  MOVWF  xEF
188C:  MOVLW  18
188E:  ADDWF  xE4,W
1890:  MOVWF  xF0
1892:  MOVFF  5E3,5F2
1896:  MOVFF  5E4,5F3
189A:  MOVFF  5EF,5F4
189E:  MOVWF  xF5
18A0:  MOVLW  01
18A2:  MOVWF  xF6
18A4:  MOVWF  xF7
18A6:  MOVLB  0
18A8:  RCALL  1582
18AA:  MOVLW  02
18AC:  MOVLB  5
18AE:  ADDWF  xE3,W
18B0:  MOVWF  xEF
18B2:  MOVLW  01
18B4:  ADDWF  xE4,W
18B6:  MOVWF  xF0
18B8:  MOVFF  5EF,5F1
18BC:  MOVWF  xF2
18BE:  MOVLW  05
18C0:  MOVWF  xF4
18C2:  MOVLW  E6
18C4:  MOVWF  xF3
18C6:  MOVLW  02
18C8:  MOVWF  xF5
18CA:  CLRF   xF6
18CC:  MOVLB  0
18CE:  RCALL  1252
....................    else    
18D0:  BRA    191E
18D2:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
18D4:  MOVLW  12
18D6:  ADDWF  xE3,W
18D8:  MOVWF  xEF
18DA:  MOVLW  18
18DC:  ADDWF  xE4,W
18DE:  MOVWF  xF0
18E0:  MOVFF  5E3,5F2
18E4:  MOVFF  5E4,5F3
18E8:  MOVFF  5EF,5F4
18EC:  MOVWF  xF5
18EE:  CLRF   xF6
18F0:  CLRF   xF7
18F2:  MOVLB  0
18F4:  RCALL  1582
18F6:  MOVLW  02
18F8:  MOVLB  5
18FA:  ADDWF  xE3,W
18FC:  MOVWF  xEF
18FE:  MOVLW  01
1900:  ADDWF  xE4,W
1902:  MOVWF  xF0
1904:  MOVFF  5EF,5F1
1908:  MOVWF  xF2
190A:  MOVLW  05
190C:  MOVWF  xF4
190E:  MOVLW  E6
1910:  MOVWF  xF3
1912:  MOVLW  02
1914:  MOVWF  xF5
1916:  MOVLW  01
1918:  MOVWF  xF6
191A:  MOVLB  0
191C:  RCALL  1252
....................  
.................... } 
191E:  RETLW  00
....................  
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
1FC8:  BSF    F93.0
1FCA:  MOVLW  02
1FCC:  MOVWF  00
1FCE:  DECFSZ 00,F
1FD0:  BRA    1FCE
1FD2:  BSF    F93.1
1FD4:  MOVLW  02
1FD6:  MOVWF  00
1FD8:  DECFSZ 00,F
1FDA:  BRA    1FD8
1FDC:  BCF    F8A.0
1FDE:  BCF    F93.0
1FE0:  MOVLW  02
1FE2:  MOVWF  00
1FE4:  DECFSZ 00,F
1FE6:  BRA    1FE4
1FE8:  BCF    F8A.1
1FEA:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1FEC:  MOVFF  5E1,5E4
1FF0:  RCALL  1920
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
1FF2:  MOVFF  5E2,5E4
1FF6:  RCALL  1920
....................    i2c_write(dato);        // Dato a transmitir 
1FF8:  MOVFF  5E3,5E4
1FFC:  RCALL  1920
....................    i2c_stop();             // Fin comunicación 
1FFE:  BCF    F93.0
2000:  NOP   
2002:  BSF    F93.1
2004:  BTFSS  F81.1
2006:  BRA    2004
2008:  MOVLW  02
200A:  MOVWF  00
200C:  DECFSZ 00,F
200E:  BRA    200C
2010:  BRA    2012
2012:  NOP   
2014:  BSF    F93.0
2016:  MOVLW  02
2018:  MOVWF  00
201A:  DECFSZ 00,F
201C:  BRA    201A
....................  } 
201E:  GOTO   2058 (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
1EE2:  BSF    F93.0
1EE4:  MOVLW  02
1EE6:  MOVWF  00
1EE8:  DECFSZ 00,F
1EEA:  BRA    1EE8
1EEC:  BSF    F93.1
1EEE:  MOVLW  02
1EF0:  MOVWF  00
1EF2:  DECFSZ 00,F
1EF4:  BRA    1EF2
1EF6:  BCF    F8A.0
1EF8:  BCF    F93.0
1EFA:  MOVLW  02
1EFC:  MOVWF  00
1EFE:  DECFSZ 00,F
1F00:  BRA    1EFE
1F02:  BCF    F8A.1
1F04:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1F06:  MOVFF  5E0,5E4
1F0A:  MOVLB  0
1F0C:  RCALL  1920
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
1F0E:  MOVFF  5E1,5E4
1F12:  RCALL  1920
....................    i2c_start();            // Reinicio 
1F14:  BSF    F93.0
1F16:  MOVLW  02
1F18:  MOVWF  00
1F1A:  DECFSZ 00,F
1F1C:  BRA    1F1A
1F1E:  BSF    F93.1
1F20:  MOVLW  02
1F22:  MOVWF  00
1F24:  DECFSZ 00,F
1F26:  BRA    1F24
1F28:  BTFSS  F81.1
1F2A:  BRA    1F28
1F2C:  BCF    F8A.0
1F2E:  BCF    F93.0
1F30:  MOVLW  02
1F32:  MOVWF  00
1F34:  DECFSZ 00,F
1F36:  BRA    1F34
1F38:  BCF    F8A.1
1F3A:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
1F3C:  MOVLW  01
1F3E:  MOVLB  5
1F40:  ADDWF  xE0,W
1F42:  MOVWF  xE2
1F44:  MOVWF  xE4
1F46:  MOVLB  0
1F48:  RCALL  1920
....................    dato=i2c_read(0);       // Lectura del dato 
1F4A:  CLRF   00
1F4C:  BRA    1996
1F4E:  MOVFF  01,4C6
....................    i2c_stop();             // Fin comunicación 
1F52:  BCF    F93.0
1F54:  NOP   
1F56:  BSF    F93.1
1F58:  BTFSS  F81.1
1F5A:  BRA    1F58
1F5C:  MOVLW  02
1F5E:  MOVWF  00
1F60:  DECFSZ 00,F
1F62:  BRA    1F60
1F64:  BRA    1F66
1F66:  NOP   
1F68:  BSF    F93.0
1F6A:  MOVLW  02
1F6C:  MOVWF  00
1F6E:  DECFSZ 00,F
1F70:  BRA    1F6E
.................... } 
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=Resistencia; 
*
1F90:  MOVFF  52C,496
....................    SlaveA0Tx[1]=EVDesfogue; 
1F94:  MOVFF  52D,497
....................    SlaveA0Tx[2]=EVAgua; 
1F98:  MOVFF  52E,498
....................    SlaveA0Tx[3]=EVTrampa; 
1F9C:  MOVFF  52F,499
....................    SlaveA0Tx[4]=MotorPuerta; 
1FA0:  MOVFF  530,49A
....................    SlaveA0Tx[5]=EVEntradaAgua; 
1FA4:  MOVFF  531,49B
....................    SlaveA0Tx[6]=BombaVacio; 
1FA8:  MOVFF  532,49C
....................    SlaveA0Tx[7]=BombaAgua; 
1FAC:  MOVFF  533,49D
....................    SlaveA0Tx[8]=Control; 
1FB0:  MOVFF  534,49E
....................    SlaveA0Tx[9]=Setpoint; 
1FB4:  MOVFF  53B,49F
....................    SlaveA0Tx[10]=20; 
1FB8:  MOVLW  14
1FBA:  MOVLB  4
1FBC:  MOVWF  xA0
....................    SlaveA0Tx[12]=Nivel; 
1FBE:  MOVFF  54A,4A2
.................... } 
1FC2:  MOVLB  0
1FC4:  GOTO   2024 (RETURN)
....................  
.................... void Lee_Vector(void){ 
....................    Puerta=txbuf[0]; 
*
1E10:  MOVFF  416,51D
....................    Parada=txbuf[1]; 
1E14:  MOVFF  417,51E
....................    NivelReservorio=txbuf[2]; 
1E18:  MOVFF  418,51F
....................    NivelTanque=txbuf[3]; 
1E1C:  MOVFF  419,520
....................    Presostato=txbuf[4]; 
1E20:  MOVFF  41A,521
....................    ADC_Pt100=(float)txbuf[5]; 
1E24:  MOVLB  5
1E26:  CLRF   xE1
1E28:  MOVFF  41B,5E0
1E2C:  MOVLB  0
1E2E:  RCALL  1A02
1E30:  MOVFF  03,553
1E34:  MOVFF  02,552
1E38:  MOVFF  01,551
1E3C:  MOVFF  00,550
....................    Alarma=txbuf[6]; 
1E40:  MOVFF  41C,527
....................    AlarmaAgua=txbuf[7]; 
1E44:  MOVFF  41D,528
....................    Chksum=txbuf[8]; 
1E48:  MOVFF  41E,541
....................    Decimal=txbuf[9]; 
1E4C:  MOVFF  41F,535
....................    ADC_Pt100=ADC_Pt100+((float)Decimal/10); 
1E50:  MOVLB  5
1E52:  CLRF   xE1
1E54:  MOVFF  535,5E0
1E58:  MOVLB  0
1E5A:  RCALL  1A02
1E5C:  MOVFF  00,5E0
1E60:  MOVFF  01,5E1
1E64:  MOVFF  02,5E2
1E68:  MOVFF  03,5E3
1E6C:  MOVFF  03,5E7
1E70:  MOVFF  02,5E6
1E74:  MOVFF  01,5E5
1E78:  MOVFF  00,5E4
1E7C:  MOVLB  5
1E7E:  CLRF   xEB
1E80:  CLRF   xEA
1E82:  MOVLW  20
1E84:  MOVWF  xE9
1E86:  MOVLW  82
1E88:  MOVWF  xE8
1E8A:  MOVLB  0
1E8C:  BRA    1A38
1E8E:  BCF    FD8.1
1E90:  MOVFF  553,5E7
1E94:  MOVFF  552,5E6
1E98:  MOVFF  551,5E5
1E9C:  MOVFF  550,5E4
1EA0:  MOVFF  03,5EB
1EA4:  MOVFF  02,5EA
1EA8:  MOVFF  01,5E9
1EAC:  MOVFF  00,5E8
1EB0:  RCALL  1B98
1EB2:  MOVFF  03,553
1EB6:  MOVFF  02,552
1EBA:  MOVFF  01,551
1EBE:  MOVFF  00,550
.................... } 
1EC2:  GOTO   1F8E (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
2022:  BRA    1F90
....................    for(i=0;i<13;i++) 
2024:  MOVLB  5
2026:  CLRF   x3A
2028:  MOVF   x3A,W
202A:  SUBLW  0C
202C:  BNC   205E
....................    { 
....................       direccion=0xA0; 
202E:  MOVLW  A0
2030:  MOVLB  4
2032:  MOVWF  xC7
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
2034:  CLRF   03
2036:  MOVLB  5
2038:  MOVF   x3A,W
203A:  ADDLW  96
203C:  MOVWF  FE9
203E:  MOVLW  04
2040:  ADDWFC 03,W
2042:  MOVWF  FEA
2044:  MOVFF  FEF,5E0
2048:  MOVFF  4C7,5E1
204C:  MOVFF  53A,5E2
2050:  MOVFF  5E0,5E3
2054:  MOVLB  0
2056:  BRA    1FC8
....................    }  
2058:  MOVLB  5
205A:  INCF   x3A,F
205C:  BRA    2028
.................... } 
205E:  MOVLB  0
2060:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
1EC6:  MOVLB  5
1EC8:  CLRF   x3A
1ECA:  MOVF   x3A,W
1ECC:  SUBLW  09
1ECE:  BNC   1F8A
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
1ED0:  MOVLW  A0
1ED2:  MOVLB  4
1ED4:  MOVWF  xC7
....................       posicion=i;                         //Posición de memoria a leer 
1ED6:  MOVFF  53A,4C8
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
1EDA:  MOVFF  4C7,5E0
1EDE:  MOVFF  4C8,5E1
....................       txbuf[i]=(int8)dato; 
*
1F72:  CLRF   03
1F74:  MOVLB  5
1F76:  MOVF   x3A,W
1F78:  ADDLW  16
1F7A:  MOVWF  FE9
1F7C:  MOVLW  04
1F7E:  ADDWFC 03,W
1F80:  MOVWF  FEA
1F82:  MOVFF  4C6,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
1F86:  INCF   x3A,F
1F88:  BRA    1ECA
....................    Lee_Vector(); 
1F8A:  MOVLB  0
1F8C:  BRA    1E10
.................... } 
1F8E:  RETLW  00
....................  
.................... void main() 
.................... { 
*
2BE4:  CLRF   FF8
2BE6:  BCF    FD0.7
2BE8:  BSF    07.7
2BEA:  CLRF   FEA
2BEC:  CLRF   FE9
2BEE:  MOVLB  4
2BF0:  CLRF   xC6
2BF2:  CLRF   xC7
2BF4:  CLRF   xC8
2BF6:  MOVLB  5
2BF8:  CLRF   x1D
2BFA:  MOVLW  01
2BFC:  MOVWF  x1E
2BFE:  CLRF   x1F
2C00:  CLRF   x20
2C02:  CLRF   x21
2C04:  CLRF   x22
2C06:  CLRF   x23
2C08:  CLRF   x24
2C0A:  CLRF   x25
2C0C:  CLRF   x26
2C0E:  CLRF   x27
2C10:  CLRF   x28
2C12:  BCF    x29.0
2C14:  BCF    x29.1
2C16:  BCF    x29.2
2C18:  BCF    x29.3
2C1A:  BSF    x29.4
2C1C:  BCF    x29.5
2C1E:  BCF    x29.6
2C20:  BCF    x29.7
2C22:  BCF    x2A.0
2C24:  BCF    x2A.1
2C26:  BCF    x2A.2
2C28:  BCF    x2A.3
2C2A:  BCF    x2A.4
2C2C:  BCF    x2A.5
2C2E:  BCF    x2A.6
2C30:  BCF    x2A.7
2C32:  BCF    x2B.0
2C34:  BCF    x2B.1
2C36:  BCF    x2B.2
2C38:  BCF    x2B.3
2C3A:  BCF    x2B.4
2C3C:  BCF    x2B.5
2C3E:  BCF    x2B.6
2C40:  CLRF   x2C
2C42:  CLRF   x2D
2C44:  CLRF   x2E
2C46:  CLRF   x2F
2C48:  CLRF   x30
2C4A:  CLRF   x31
2C4C:  CLRF   x32
2C4E:  CLRF   x33
2C50:  CLRF   x34
2C52:  CLRF   x35
2C54:  CLRF   x36
2C56:  MOVWF  x37
2C58:  CLRF   x38
2C5A:  CLRF   x39
2C5C:  CLRF   x3A
2C5E:  CLRF   x3B
2C60:  CLRF   x3C
2C62:  MOVWF  x3D
2C64:  CLRF   x3E
2C66:  CLRF   x3F
2C68:  CLRF   x40
2C6A:  CLRF   x41
2C6C:  CLRF   x43
2C6E:  CLRF   x42
2C70:  CLRF   x45
2C72:  CLRF   x44
2C74:  CLRF   x47
2C76:  CLRF   x46
2C78:  CLRF   x49
2C7A:  MOVLW  0F
2C7C:  MOVWF  x48
2C7E:  CLRF   x4B
2C80:  CLRF   x4A
2C82:  CLRF   x4D
2C84:  CLRF   x4C
2C86:  CLRF   x4F
2C88:  CLRF   x4E
2C8A:  CLRF   x53
2C8C:  CLRF   x52
2C8E:  CLRF   x51
2C90:  CLRF   x50
2C92:  CLRF   x8F
2C94:  CLRF   x8E
2C96:  CLRF   x8D
2C98:  CLRF   x8C
2C9A:  CLRF   x93
2C9C:  MOVLW  20
2C9E:  MOVWF  x92
2CA0:  MOVLW  41
2CA2:  MOVWF  x91
2CA4:  MOVLW  8B
2CA6:  MOVWF  x90
2CA8:  CLRF   x9B
2CAA:  CLRF   x9A
2CAC:  MOVLW  20
2CAE:  MOVWF  x99
2CB0:  MOVLW  82
2CB2:  MOVWF  x98
2CB4:  CLRF   x9F
2CB6:  CLRF   x9E
2CB8:  CLRF   x9D
2CBA:  CLRF   x9C
2CBC:  CLRF   xA3
2CBE:  CLRF   xA2
2CC0:  CLRF   xA1
2CC2:  CLRF   xA0
2CC4:  CLRF   xA7
2CC6:  CLRF   xA6
2CC8:  CLRF   xA5
2CCA:  CLRF   xA4
2CCC:  CLRF   xAB
2CCE:  CLRF   xAA
2CD0:  CLRF   xA9
2CD2:  CLRF   xA8
2CD4:  CLRF   xAF
2CD6:  CLRF   xAE
2CD8:  CLRF   xAD
2CDA:  CLRF   xAC
2CDC:  CLRF   xB3
2CDE:  CLRF   xB2
2CE0:  MOVLW  48
2CE2:  MOVWF  xB1
2CE4:  MOVLW  83
2CE6:  MOVWF  xB0
2CE8:  CLRF   xB7
2CEA:  CLRF   xB6
2CEC:  MOVLW  20
2CEE:  MOVWF  xB5
2CF0:  MOVLW  83
2CF2:  MOVWF  xB4
2CF4:  CLRF   xBB
2CF6:  CLRF   xBA
2CF8:  CLRF   xB9
2CFA:  CLRF   xB8
2CFC:  CLRF   xBF
2CFE:  CLRF   xBE
2D00:  CLRF   xBD
2D02:  CLRF   xBC
2D04:  MOVF   FC1,W
2D06:  ANDLW  C0
2D08:  IORLW  0F
2D0A:  MOVWF  FC1
2D0C:  MOVLW  07
2D0E:  MOVWF  FB4
2D10:  MOVLW  6B
2D12:  MOVLB  4
2D14:  MOVWF  xC9
2D16:  MOVLW  50
2D18:  MOVWF  xCA
2D1A:  MOVLW  61
2D1C:  MOVWF  xCB
2D1E:  CLRF   xCC
2D20:  CLRF   xCD
2D22:  CLRF   xCE
2D24:  CLRF   xCF
2D26:  CLRF   xD0
2D28:  CLRF   xD1
2D2A:  CLRF   xD2
2D2C:  CLRF   xD3
2D2E:  CLRF   xD4
2D30:  CLRF   xD5
2D32:  CLRF   xD6
2D34:  CLRF   xD7
2D36:  CLRF   xD8
2D38:  CLRF   xD9
2D3A:  CLRF   xDA
2D3C:  CLRF   xDB
2D3E:  CLRF   xDC
2D40:  CLRF   xDD
2D42:  CLRF   xDE
2D44:  CLRF   xDF
2D46:  CLRF   xE0
2D48:  CLRF   xE1
2D4A:  CLRF   xE2
2D4C:  CLRF   xE3
2D4E:  CLRF   xE4
2D50:  CLRF   xE5
2D52:  CLRF   xE6
2D54:  CLRF   xE7
2D56:  CLRF   xE8
2D58:  CLRF   xE9
2D5A:  CLRF   xEA
2D5C:  CLRF   xEB
2D5E:  CLRF   xEC
2D60:  CLRF   xED
2D62:  CLRF   xEE
2D64:  CLRF   xEF
2D66:  CLRF   xF0
2D68:  CLRF   xF1
2D6A:  CLRF   xF2
2D6C:  CLRF   xF3
2D6E:  CLRF   xF4
2D70:  CLRF   xF5
2D72:  CLRF   xF6
2D74:  CLRF   xF7
2D76:  CLRF   xF8
2D78:  CLRF   xF9
2D7A:  CLRF   xFA
2D7C:  CLRF   xFB
2D7E:  CLRF   xFC
2D80:  CLRF   xFD
2D82:  CLRF   xFE
2D84:  CLRF   xFF
2D86:  MOVLB  5
2D88:  CLRF   x00
2D8A:  CLRF   x01
2D8C:  CLRF   x02
2D8E:  CLRF   x03
2D90:  CLRF   x04
2D92:  CLRF   x05
2D94:  CLRF   x06
2D96:  CLRF   x07
2D98:  CLRF   x08
2D9A:  CLRF   x09
2D9C:  CLRF   x0A
2D9E:  CLRF   x0B
2DA0:  CLRF   x0C
2DA2:  CLRF   x0D
2DA4:  CLRF   x0E
2DA6:  CLRF   x0F
2DA8:  CLRF   x10
2DAA:  CLRF   x11
2DAC:  CLRF   x12
2DAE:  CLRF   x13
2DB0:  CLRF   x14
2DB2:  CLRF   x15
2DB4:  CLRF   x16
2DB6:  CLRF   x17
2DB8:  CLRF   x18
2DBA:  CLRF   x19
2DBC:  CLRF   x1A
2DBE:  CLRF   x1B
2DC0:  CLRF   x1C
2DC2:  CLRF   x54
2DC4:  CLRF   x55
2DC6:  CLRF   x56
2DC8:  CLRF   x57
2DCA:  CLRF   x58
2DCC:  CLRF   x59
2DCE:  CLRF   x5A
2DD0:  CLRF   x5B
2DD2:  CLRF   x5C
2DD4:  CLRF   x5D
2DD6:  CLRF   x5E
2DD8:  CLRF   x5F
2DDA:  CLRF   x60
2DDC:  CLRF   x61
2DDE:  CLRF   x62
2DE0:  CLRF   x63
2DE2:  CLRF   x64
2DE4:  CLRF   x65
2DE6:  CLRF   x66
2DE8:  CLRF   x67
2DEA:  CLRF   x68
2DEC:  CLRF   x69
2DEE:  CLRF   x6A
2DF0:  CLRF   x6B
2DF2:  CLRF   x89
2DF4:  CLRF   x8A
2DF6:  CLRF   x8B
2DF8:  CLRF   xDE
2DFA:  CLRF   xDF
....................    Display_on; 
2DFC:  BSF    F8D.0
2DFE:  BCF    F96.0
....................    for (posicion=0;posicion<0x10;posicion++) 
2E00:  MOVLB  4
2E02:  CLRF   xC8
2E04:  MOVF   xC8,W
2E06:  SUBLW  0F
2E08:  BNC   2E3E
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
2E0A:  CLRF   03
2E0C:  MOVF   xC8,W
2E0E:  ADDLW  96
2E10:  MOVWF  FE9
2E12:  MOVLW  04
2E14:  ADDWFC 03,W
2E16:  MOVWF  FEA
2E18:  CLRF   FEF
....................       SlaveB0Tx[posicion] = 0x00; 
2E1A:  CLRF   03
2E1C:  MOVF   xC8,W
2E1E:  ADDLW  A6
2E20:  MOVWF  FE9
2E22:  MOVLW  04
2E24:  ADDWFC 03,W
2E26:  MOVWF  FEA
2E28:  CLRF   FEF
....................       SlaveC0Tx[posicion] = 0x00; 
2E2A:  CLRF   03
2E2C:  MOVF   xC8,W
2E2E:  ADDLW  B6
2E30:  MOVWF  FE9
2E32:  MOVLW  04
2E34:  ADDWFC 03,W
2E36:  MOVWF  FEA
2E38:  CLRF   FEF
....................    } 
2E3A:  INCF   xC8,F
2E3C:  BRA    2E04
....................    output_d(0); 
2E3E:  CLRF   F95
2E40:  CLRF   F8C
....................    delay_ms(1000);    
2E42:  MOVLW  04
2E44:  MOVLB  5
2E46:  MOVWF  xE0
2E48:  MOVLW  FA
2E4A:  MOVWF  xE1
2E4C:  MOVLB  0
2E4E:  CALL   0F70
2E52:  MOVLB  5
2E54:  DECFSZ xE0,F
2E56:  BRA    2E48
....................        
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
2E58:  MOVLW  85
2E5A:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
2E5C:  BSF    F9D.0
....................    enable_interrupts(global); 
2E5E:  MOVLW  C0
2E60:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
2E62:  MOVFF  FF2,5E0
2E66:  BCF    FF2.7
2E68:  CLRF   FA9
2E6A:  BCF    FA6.6
2E6C:  BCF    FA6.7
2E6E:  BSF    FA6.0
2E70:  MOVF   FA8,W
2E72:  BTFSC  xE0.7
2E74:  BSF    FF2.7
2E76:  MOVWF  x58
2E78:  MOVFF  FF2,5E0
2E7C:  BCF    FF2.7
2E7E:  MOVLW  01
2E80:  MOVWF  FA9
2E82:  BCF    FA6.6
2E84:  BCF    FA6.7
2E86:  BSF    FA6.0
2E88:  MOVF   FA8,W
2E8A:  BTFSC  xE0.7
2E8C:  BSF    FF2.7
2E8E:  MOVWF  x59
2E90:  MOVFF  FF2,5E0
2E94:  BCF    FF2.7
2E96:  MOVLW  02
2E98:  MOVWF  FA9
2E9A:  BCF    FA6.6
2E9C:  BCF    FA6.7
2E9E:  BSF    FA6.0
2EA0:  MOVF   FA8,W
2EA2:  BTFSC  xE0.7
2EA4:  BSF    FF2.7
2EA6:  MOVWF  x5A
2EA8:  MOVFF  FF2,5E0
2EAC:  BCF    FF2.7
2EAE:  MOVLW  03
2EB0:  MOVWF  FA9
2EB2:  BCF    FA6.6
2EB4:  BCF    FA6.7
2EB6:  BSF    FA6.0
2EB8:  MOVF   FA8,W
2EBA:  BTFSC  xE0.7
2EBC:  BSF    FF2.7
2EBE:  MOVWF  x5B
....................    Tsecadop[0]=read_eeprom(4);Tsecadop[1]=read_eeprom(5);Tsecadop[2]=read_eeprom(6);Tsecadop[3]=read_eeprom(7);Setpoint=read_eeprom(8); 
2EC0:  MOVFF  FF2,5E0
2EC4:  BCF    FF2.7
2EC6:  MOVLW  04
2EC8:  MOVWF  FA9
2ECA:  BCF    FA6.6
2ECC:  BCF    FA6.7
2ECE:  BSF    FA6.0
2ED0:  MOVF   FA8,W
2ED2:  BTFSC  xE0.7
2ED4:  BSF    FF2.7
2ED6:  MOVWF  x60
2ED8:  MOVFF  FF2,5E0
2EDC:  BCF    FF2.7
2EDE:  MOVLW  05
2EE0:  MOVWF  FA9
2EE2:  BCF    FA6.6
2EE4:  BCF    FA6.7
2EE6:  BSF    FA6.0
2EE8:  MOVF   FA8,W
2EEA:  BTFSC  xE0.7
2EEC:  BSF    FF2.7
2EEE:  MOVWF  x61
2EF0:  MOVFF  FF2,5E0
2EF4:  BCF    FF2.7
2EF6:  MOVLW  06
2EF8:  MOVWF  FA9
2EFA:  BCF    FA6.6
2EFC:  BCF    FA6.7
2EFE:  BSF    FA6.0
2F00:  MOVF   FA8,W
2F02:  BTFSC  xE0.7
2F04:  BSF    FF2.7
2F06:  MOVWF  x62
2F08:  MOVFF  FF2,5E0
2F0C:  BCF    FF2.7
2F0E:  MOVLW  07
2F10:  MOVWF  FA9
2F12:  BCF    FA6.6
2F14:  BCF    FA6.7
2F16:  BSF    FA6.0
2F18:  MOVF   FA8,W
2F1A:  BTFSC  xE0.7
2F1C:  BSF    FF2.7
2F1E:  MOVWF  x63
2F20:  MOVFF  FF2,5E0
2F24:  BCF    FF2.7
2F26:  MOVLW  08
2F28:  MOVWF  FA9
2F2A:  BCF    FA6.6
2F2C:  BCF    FA6.7
2F2E:  BSF    FA6.0
2F30:  MOVF   FA8,W
2F32:  BTFSC  xE0.7
2F34:  BSF    FF2.7
2F36:  MOVWF  x3B
....................    Nivel=read_eeprom(9); 
2F38:  MOVFF  FF2,5E0
2F3C:  BCF    FF2.7
2F3E:  MOVLW  09
2F40:  MOVWF  FA9
2F42:  BCF    FA6.6
2F44:  BCF    FA6.7
2F46:  BSF    FA6.0
2F48:  MOVF   FA8,W
2F4A:  BTFSC  xE0.7
2F4C:  BSF    FF2.7
2F4E:  CLRF   x4B
2F50:  MOVWF  x4A
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
2F52:  MOVFF  FF2,5E0
2F56:  BCF    FF2.7
2F58:  MOVLW  0A
2F5A:  MOVWF  FA9
2F5C:  BCF    FA6.6
2F5E:  BCF    FA6.7
2F60:  BSF    FA6.0
2F62:  MOVF   FA8,W
2F64:  BTFSC  xE0.7
2F66:  BSF    FF2.7
2F68:  MOVWF  x68
2F6A:  MOVFF  FF2,5E0
2F6E:  BCF    FF2.7
2F70:  MOVLW  0B
2F72:  MOVWF  FA9
2F74:  BCF    FA6.6
2F76:  BCF    FA6.7
2F78:  BSF    FA6.0
2F7A:  MOVF   FA8,W
2F7C:  BTFSC  xE0.7
2F7E:  BSF    FF2.7
2F80:  MOVWF  x69
2F82:  MOVFF  FF2,5E0
2F86:  BCF    FF2.7
2F88:  MOVLW  0C
2F8A:  MOVWF  FA9
2F8C:  BCF    FA6.6
2F8E:  BCF    FA6.7
2F90:  BSF    FA6.0
2F92:  MOVF   FA8,W
2F94:  BTFSC  xE0.7
2F96:  BSF    FF2.7
2F98:  MOVWF  x6A
2F9A:  MOVFF  FF2,5E0
2F9E:  BCF    FF2.7
2FA0:  MOVLW  0D
2FA2:  MOVWF  FA9
2FA4:  BCF    FA6.6
2FA6:  BCF    FA6.7
2FA8:  BSF    FA6.0
2FAA:  MOVF   FA8,W
2FAC:  BTFSC  xE0.7
2FAE:  BSF    FF2.7
2FB0:  MOVWF  x6B
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
2FB2:  MOVLW  01
2FB4:  MOVWF  xE0
2FB6:  MOVLB  0
2FB8:  GOTO   10EC
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
2FBC:  MOVLB  5
2FBE:  CLRF   xE1
2FC0:  MOVLB  0
2FC2:  CALL   0FDA
....................    strcpy(Menus.Letra,"JP Inglobal"); 
2FC6:  MOVLW  05
2FC8:  MOVWF  FEA
2FCA:  MOVLW  C0
2FCC:  MOVWF  FE9
2FCE:  MOVFF  FF2,5E0
2FD2:  BCF    FF2.7
2FD4:  MOVLW  00
2FD6:  CALL   06DA
2FDA:  TBLRD*-
2FDC:  TBLRD*+
2FDE:  MOVF   FF5,W
2FE0:  MOVWF  FEE
2FE2:  IORLW  00
2FE4:  BNZ   2FDC
2FE6:  MOVLB  5
2FE8:  BTFSC  xE0.7
2FEA:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
2FEC:  MOVLW  05
2FEE:  MOVWF  xE1
2FF0:  MOVLW  C0
2FF2:  MOVWF  xE0
2FF4:  CLRF   xE2
2FF6:  CLRF   xE3
2FF8:  CLRF   xE4
2FFA:  MOVLW  02
2FFC:  MOVWF  xE5
2FFE:  MOVLB  0
3000:  CALL   1644
....................    strcpy(Menus.Letra,"Autoclave Vertical"); 
3004:  MOVLW  05
3006:  MOVWF  FEA
3008:  MOVLW  C0
300A:  MOVWF  FE9
300C:  MOVFF  FF2,5E0
3010:  BCF    FF2.7
3012:  MOVLW  00
3014:  CALL   0700
3018:  TBLRD*-
301A:  TBLRD*+
301C:  MOVF   FF5,W
301E:  MOVWF  FEE
3020:  IORLW  00
3022:  BNZ   301A
3024:  MOVLB  5
3026:  BTFSC  xE0.7
3028:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
302A:  MOVLW  05
302C:  MOVWF  xE1
302E:  MOVLW  C0
3030:  MOVWF  xE0
3032:  CLRF   xE2
3034:  MOVLW  14
3036:  MOVWF  xE3
3038:  CLRF   xE4
303A:  MOVLW  01
303C:  MOVWF  xE5
303E:  MOVLB  0
3040:  CALL   1644
....................    strcpy(Menus.Letra," 150 Litros  "); 
3044:  MOVLW  05
3046:  MOVWF  FEA
3048:  MOVLW  C0
304A:  MOVWF  FE9
304C:  MOVFF  FF2,5E0
3050:  BCF    FF2.7
3052:  MOVLW  00
3054:  CALL   072E
3058:  TBLRD*-
305A:  TBLRD*+
305C:  MOVF   FF5,W
305E:  MOVWF  FEE
3060:  IORLW  00
3062:  BNZ   305A
3064:  MOVLB  5
3066:  BTFSC  xE0.7
3068:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,35,0,2); 
306A:  MOVLW  05
306C:  MOVWF  xE1
306E:  MOVLW  C0
3070:  MOVWF  xE0
3072:  CLRF   xE2
3074:  MOVLW  23
3076:  MOVWF  xE3
3078:  CLRF   xE4
307A:  MOVLW  02
307C:  MOVWF  xE5
307E:  MOVLB  0
3080:  CALL   1644
....................    delay_ms(1000); 
3084:  MOVLW  04
3086:  MOVLB  5
3088:  MOVWF  xE0
308A:  MOVLW  FA
308C:  MOVWF  xE1
308E:  MOVLB  0
3090:  CALL   0F70
3094:  MOVLB  5
3096:  DECFSZ xE0,F
3098:  BRA    308A
....................    delay_ms(1000); 
309A:  MOVLW  04
309C:  MOVWF  xE0
309E:  MOVLW  FA
30A0:  MOVWF  xE1
30A2:  MOVLB  0
30A4:  CALL   0F70
30A8:  MOVLB  5
30AA:  DECFSZ xE0,F
30AC:  BRA    309E
....................    delay_ms(1000); 
30AE:  MOVLW  04
30B0:  MOVWF  xE0
30B2:  MOVLW  FA
30B4:  MOVWF  xE1
30B6:  MOVLB  0
30B8:  CALL   0F70
30BC:  MOVLB  5
30BE:  DECFSZ xE0,F
30C0:  BRA    30B2
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
30C2:  CLRF   xE1
30C4:  MOVLB  0
30C6:  CALL   0FDA
....................    displayContrasena(Contrasena[0],20,30,1); 
30CA:  MOVFF  564,5E2
30CE:  MOVLW  14
30D0:  MOVLB  5
30D2:  MOVWF  xE3
30D4:  MOVLW  1E
30D6:  MOVWF  xE4
30D8:  MOVLW  01
30DA:  MOVWF  xE5
30DC:  MOVLB  0
30DE:  CALL   186A
....................    displayContrasena(Contrasena[1],40,30,0); 
30E2:  MOVFF  565,5E2
30E6:  MOVLW  28
30E8:  MOVLB  5
30EA:  MOVWF  xE3
30EC:  MOVLW  1E
30EE:  MOVWF  xE4
30F0:  CLRF   xE5
30F2:  MOVLB  0
30F4:  CALL   186A
....................    displayContrasena(Contrasena[2],60,30,0); 
30F8:  MOVFF  566,5E2
30FC:  MOVLW  3C
30FE:  MOVLB  5
3100:  MOVWF  xE3
3102:  MOVLW  1E
3104:  MOVWF  xE4
3106:  CLRF   xE5
3108:  MOVLB  0
310A:  CALL   186A
....................    displayContrasena(Contrasena[3],80,30,0); 
310E:  MOVFF  567,5E2
3112:  MOVLW  50
3114:  MOVLB  5
3116:  MOVWF  xE3
3118:  MOVLW  1E
311A:  MOVWF  xE4
311C:  CLRF   xE5
311E:  MOVLB  0
3120:  CALL   186A
....................    while(true) 
....................    { 
....................       Lectura_Esclavos(); 
3124:  CALL   1EC6
....................        
....................       Envio_Esclavos(); 
3128:  CALL   2022
....................       glcd_update(); 
312C:  CALL   1034
....................        
....................       if(UP || DOWN || RIGHT || LEFT) 
3130:  BSF    F92.0
3132:  BTFSC  F80.0
3134:  BRA    3148
3136:  BSF    F92.1
3138:  BTFSC  F80.1
313A:  BRA    3148
313C:  BSF    F92.2
313E:  BTFSC  F80.2
3140:  BRA    3148
3142:  BSF    F92.3
3144:  BTFSS  F80.3
3146:  BRA    3150
....................       { 
....................          tinicio=0; 
3148:  MOVLB  5
314A:  CLRF   x4F
314C:  CLRF   x4E
314E:  MOVLB  0
....................       } 
....................        
....................       while(tinicio>=14400) 
....................       { 
3150:  MOVLB  5
3152:  MOVF   x4F,W
3154:  SUBLW  37
3156:  BC    3172
3158:  XORLW  FF
315A:  BNZ   3162
315C:  MOVF   x4E,W
315E:  SUBLW  3F
3160:  BC    3172
....................          glcd_fillscreen(OFF); 
3162:  CLRF   xE1
3164:  MOVLB  0
3166:  CALL   0FDA
....................          Display_off; 
316A:  BCF    F8D.0
316C:  BCF    F96.0
....................       } 
316E:  BRA    3150
3170:  MOVLB  5
....................        
....................        
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
3172:  MOVF   x36,F
3174:  BTFSS  FD8.2
3176:  BRA    36F2
....................        
....................       strcpy(Menus.Letra,"Clave"); 
3178:  MOVLW  05
317A:  MOVWF  FEA
317C:  MOVLW  C0
317E:  MOVWF  FE9
3180:  MOVFF  FF2,5E0
3184:  BCF    FF2.7
3186:  MOVLW  00
3188:  MOVLB  0
318A:  CALL   0756
318E:  TBLRD*-
3190:  TBLRD*+
3192:  MOVF   FF5,W
3194:  MOVWF  FEE
3196:  IORLW  00
3198:  BNZ   3190
319A:  MOVLB  5
319C:  BTFSC  xE0.7
319E:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
31A0:  MOVLW  05
31A2:  MOVWF  xE1
31A4:  MOVLW  C0
31A6:  MOVWF  xE0
31A8:  MOVLW  1E
31AA:  MOVWF  xE2
31AC:  CLRF   xE3
31AE:  MOVLW  01
31B0:  MOVWF  xE4
31B2:  MOVLW  02
31B4:  MOVWF  xE5
31B6:  MOVLB  0
31B8:  CALL   1644
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
31BC:  BSF    F92.0
31BE:  BTFSS  F80.0
31C0:  BRA    3292
....................       { 
....................          if(Flanco == 0) 
31C2:  MOVLB  5
31C4:  BTFSC  x29.0
31C6:  BRA    3290
....................          { 
....................             Flanco = 1;delay_ms(30); 
31C8:  BSF    x29.0
31CA:  MOVLW  1E
31CC:  MOVWF  xE1
31CE:  MOVLB  0
31D0:  CALL   0F70
....................             for(i=1;i<=4;i++) 
31D4:  MOVLW  01
31D6:  MOVLB  5
31D8:  MOVWF  x3A
31DA:  MOVF   x3A,W
31DC:  SUBLW  04
31DE:  BNC   3290
....................             { 
....................                if(unidad==i) 
31E0:  MOVF   x3A,W
31E2:  SUBWF  x37,W
31E4:  BNZ   325A
....................                { 
....................                   Contrasena[i-1]++; 
31E6:  MOVLW  01
31E8:  SUBWF  x3A,W
31EA:  CLRF   03
31EC:  ADDLW  64
31EE:  MOVWF  FE9
31F0:  MOVLW  05
31F2:  ADDWFC 03,W
31F4:  MOVWF  FEA
31F6:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
31F8:  MOVLW  01
31FA:  SUBWF  x3A,W
31FC:  CLRF   03
31FE:  ADDLW  64
3200:  MOVWF  FE9
3202:  MOVLW  05
3204:  ADDWFC 03,W
3206:  MOVWF  FEA
3208:  BTFSC  FEF.7
320A:  BRA    3224
320C:  MOVF   FEF,W
320E:  SUBLW  09
3210:  BC    3224
....................                   { 
....................                      Contrasena[i-1]=0; 
3212:  MOVLW  01
3214:  SUBWF  x3A,W
3216:  CLRF   03
3218:  ADDLW  64
321A:  MOVWF  FE9
321C:  MOVLW  05
321E:  ADDWFC 03,W
3220:  MOVWF  FEA
3222:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
3224:  MOVLW  01
3226:  SUBWF  x3A,W
3228:  CLRF   03
322A:  ADDLW  64
322C:  MOVWF  FE9
322E:  MOVLW  05
3230:  ADDWFC 03,W
3232:  MOVWF  FEA
3234:  MOVFF  FEF,5E0
3238:  MOVF   x3A,W
323A:  MULLW  14
323C:  MOVFF  FF3,5E1
3240:  MOVFF  5E0,5E2
3244:  MOVFF  5E1,5E3
3248:  MOVLW  1E
324A:  MOVWF  xE4
324C:  MOVLW  01
324E:  MOVWF  xE5
3250:  MOVLB  0
3252:  CALL   186A
....................                } 
....................                else 
3256:  BRA    328A
3258:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
325A:  MOVLW  01
325C:  SUBWF  x3A,W
325E:  CLRF   03
3260:  ADDLW  64
3262:  MOVWF  FE9
3264:  MOVLW  05
3266:  ADDWFC 03,W
3268:  MOVWF  FEA
326A:  MOVFF  FEF,5E0
326E:  MOVF   x3A,W
3270:  MULLW  14
3272:  MOVFF  FF3,5E1
3276:  MOVFF  5E0,5E2
327A:  MOVFF  5E1,5E3
327E:  MOVLW  1E
3280:  MOVWF  xE4
3282:  CLRF   xE5
3284:  MOVLB  0
3286:  CALL   186A
....................                } 
....................             } 
328A:  MOVLB  5
328C:  INCF   x3A,F
328E:  BRA    31DA
....................          } 
....................       } 
....................          else 
3290:  BRA    3296
....................             {Flanco = 0;} 
3292:  MOVLB  5
3294:  BCF    x29.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3296:  BSF    F92.1
3298:  BTFSS  F80.1
329A:  BRA    3368
....................       { 
....................          if(Flanco2 == 0) 
329C:  BTFSC  x29.2
329E:  BRA    3366
....................             {Flanco2 = 1;delay_ms(30); 
32A0:  BSF    x29.2
32A2:  MOVLW  1E
32A4:  MOVWF  xE1
32A6:  MOVLB  0
32A8:  CALL   0F70
....................                for(i=1;i<=4;i++) 
32AC:  MOVLW  01
32AE:  MOVLB  5
32B0:  MOVWF  x3A
32B2:  MOVF   x3A,W
32B4:  SUBLW  04
32B6:  BNC   3366
....................                { 
....................                   if(unidad==i) 
32B8:  MOVF   x3A,W
32BA:  SUBWF  x37,W
32BC:  BNZ   3330
....................                   {Contrasena[i-1]--;  
32BE:  MOVLW  01
32C0:  SUBWF  x3A,W
32C2:  CLRF   03
32C4:  ADDLW  64
32C6:  MOVWF  FE9
32C8:  MOVLW  05
32CA:  ADDWFC 03,W
32CC:  MOVWF  FEA
32CE:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
32D0:  MOVLW  01
32D2:  SUBWF  x3A,W
32D4:  CLRF   03
32D6:  ADDLW  64
32D8:  MOVWF  FE9
32DA:  MOVLW  05
32DC:  ADDWFC 03,W
32DE:  MOVWF  FEA
32E0:  BTFSC  FEF.7
32E2:  BRA    32E6
32E4:  BRA    32FA
....................                         {Contrasena[i-1]=9;} 
32E6:  MOVLW  01
32E8:  SUBWF  x3A,W
32EA:  CLRF   03
32EC:  ADDLW  64
32EE:  MOVWF  FE9
32F0:  MOVLW  05
32F2:  ADDWFC 03,W
32F4:  MOVWF  FEA
32F6:  MOVLW  09
32F8:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
32FA:  MOVLW  01
32FC:  SUBWF  x3A,W
32FE:  CLRF   03
3300:  ADDLW  64
3302:  MOVWF  FE9
3304:  MOVLW  05
3306:  ADDWFC 03,W
3308:  MOVWF  FEA
330A:  MOVFF  FEF,5E0
330E:  MOVF   x3A,W
3310:  MULLW  14
3312:  MOVFF  FF3,5E1
3316:  MOVFF  5E0,5E2
331A:  MOVFF  5E1,5E3
331E:  MOVLW  1E
3320:  MOVWF  xE4
3322:  MOVLW  01
3324:  MOVWF  xE5
3326:  MOVLB  0
3328:  CALL   186A
....................                   else 
332C:  BRA    3360
332E:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3330:  MOVLW  01
3332:  SUBWF  x3A,W
3334:  CLRF   03
3336:  ADDLW  64
3338:  MOVWF  FE9
333A:  MOVLW  05
333C:  ADDWFC 03,W
333E:  MOVWF  FEA
3340:  MOVFF  FEF,5E0
3344:  MOVF   x3A,W
3346:  MULLW  14
3348:  MOVFF  FF3,5E1
334C:  MOVFF  5E0,5E2
3350:  MOVFF  5E1,5E3
3354:  MOVLW  1E
3356:  MOVWF  xE4
3358:  CLRF   xE5
335A:  MOVLB  0
335C:  CALL   186A
....................                }       
3360:  MOVLB  5
3362:  INCF   x3A,F
3364:  BRA    32B2
....................             }      
....................       } 
....................          else 
3366:  BRA    336A
....................             {Flanco2 = 0;}   
3368:  BCF    x29.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
336A:  BSF    F92.2
336C:  BTFSS  F80.2
336E:  BRA    3402
....................       { 
....................          if(Flanco1 == 0) 
3370:  BTFSC  x29.1
3372:  BRA    3400
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
3374:  BSF    x29.1
3376:  MOVLW  1E
3378:  MOVWF  xE1
337A:  MOVLB  0
337C:  CALL   0F70
3380:  MOVLB  5
3382:  INCF   x37,F
....................                for(i=1;i<=4;i++) 
3384:  MOVLW  01
3386:  MOVWF  x3A
3388:  MOVF   x3A,W
338A:  SUBLW  04
338C:  BNC   3400
....................                { 
....................                   if(unidad==i) 
338E:  MOVF   x3A,W
3390:  SUBWF  x37,W
3392:  BNZ   33CA
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
3394:  MOVLW  01
3396:  SUBWF  x3A,W
3398:  CLRF   03
339A:  ADDLW  64
339C:  MOVWF  FE9
339E:  MOVLW  05
33A0:  ADDWFC 03,W
33A2:  MOVWF  FEA
33A4:  MOVFF  FEF,5E0
33A8:  MOVF   x3A,W
33AA:  MULLW  14
33AC:  MOVFF  FF3,5E1
33B0:  MOVFF  5E0,5E2
33B4:  MOVFF  5E1,5E3
33B8:  MOVLW  1E
33BA:  MOVWF  xE4
33BC:  MOVLW  01
33BE:  MOVWF  xE5
33C0:  MOVLB  0
33C2:  CALL   186A
....................                   else 
33C6:  BRA    33FA
33C8:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
33CA:  MOVLW  01
33CC:  SUBWF  x3A,W
33CE:  CLRF   03
33D0:  ADDLW  64
33D2:  MOVWF  FE9
33D4:  MOVLW  05
33D6:  ADDWFC 03,W
33D8:  MOVWF  FEA
33DA:  MOVFF  FEF,5E0
33DE:  MOVF   x3A,W
33E0:  MULLW  14
33E2:  MOVFF  FF3,5E1
33E6:  MOVFF  5E0,5E2
33EA:  MOVFF  5E1,5E3
33EE:  MOVLW  1E
33F0:  MOVWF  xE4
33F2:  CLRF   xE5
33F4:  MOVLB  0
33F6:  CALL   186A
....................                } 
33FA:  MOVLB  5
33FC:  INCF   x3A,F
33FE:  BRA    3388
....................             } 
....................       } 
....................          else 
3400:  BRA    3404
....................             {Flanco1 = 0;}   
3402:  BCF    x29.1
....................      
....................       if(unidad>4) 
3404:  MOVF   x37,W
3406:  SUBLW  04
3408:  BTFSC  FD8.0
340A:  BRA    36F2
....................       {glcd_fillScreen(OFF);unidad=4; 
340C:  CLRF   xE1
340E:  MOVLB  0
3410:  CALL   0FDA
3414:  MOVLW  04
3416:  MOVLB  5
3418:  MOVWF  x37
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
341A:  MOVF   x64,W
341C:  SUBLW  03
341E:  BNZ   3506
3420:  MOVF   x65,W
3422:  SUBLW  08
3424:  BNZ   3506
3426:  MOVF   x66,W
3428:  SUBLW  09
342A:  BNZ   3506
342C:  MOVF   x67,W
342E:  SUBLW  02
3430:  BNZ   3506
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3432:  MOVLW  0A
3434:  MOVWF  FA9
3436:  CLRF   FA8
3438:  BCF    FA6.6
343A:  BCF    FA6.7
343C:  BSF    FA6.2
343E:  MOVF   FF2,W
3440:  MOVWF  00
3442:  BCF    FF2.7
3444:  MOVLB  F
3446:  MOVLW  55
3448:  MOVWF  FA7
344A:  MOVLW  AA
344C:  MOVWF  FA7
344E:  BSF    FA6.1
3450:  BTFSC  FA6.1
3452:  BRA    3450
3454:  BCF    FA6.2
3456:  MOVF   00,W
3458:  IORWF  FF2,F
345A:  MOVLW  14
345C:  MOVLB  5
345E:  MOVWF  xE1
3460:  MOVLB  0
3462:  CALL   0F70
3466:  MOVLW  0B
3468:  MOVWF  FA9
346A:  CLRF   FA8
346C:  BCF    FA6.6
346E:  BCF    FA6.7
3470:  BSF    FA6.2
3472:  MOVF   FF2,W
3474:  MOVWF  00
3476:  BCF    FF2.7
3478:  MOVLB  F
347A:  MOVLW  55
347C:  MOVWF  FA7
347E:  MOVLW  AA
3480:  MOVWF  FA7
3482:  BSF    FA6.1
3484:  BTFSC  FA6.1
3486:  BRA    3484
3488:  BCF    FA6.2
348A:  MOVF   00,W
348C:  IORWF  FF2,F
348E:  MOVLW  14
3490:  MOVLB  5
3492:  MOVWF  xE1
3494:  MOVLB  0
3496:  CALL   0F70
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
349A:  MOVLW  0C
349C:  MOVWF  FA9
349E:  CLRF   FA8
34A0:  BCF    FA6.6
34A2:  BCF    FA6.7
34A4:  BSF    FA6.2
34A6:  MOVF   FF2,W
34A8:  MOVWF  00
34AA:  BCF    FF2.7
34AC:  MOVLB  F
34AE:  MOVLW  55
34B0:  MOVWF  FA7
34B2:  MOVLW  AA
34B4:  MOVWF  FA7
34B6:  BSF    FA6.1
34B8:  BTFSC  FA6.1
34BA:  BRA    34B8
34BC:  BCF    FA6.2
34BE:  MOVF   00,W
34C0:  IORWF  FF2,F
34C2:  MOVLW  14
34C4:  MOVLB  5
34C6:  MOVWF  xE1
34C8:  MOVLB  0
34CA:  CALL   0F70
34CE:  MOVLW  0D
34D0:  MOVWF  FA9
34D2:  CLRF   FA8
34D4:  BCF    FA6.6
34D6:  BCF    FA6.7
34D8:  BSF    FA6.2
34DA:  MOVF   FF2,W
34DC:  MOVWF  00
34DE:  BCF    FF2.7
34E0:  MOVLB  F
34E2:  MOVLW  55
34E4:  MOVWF  FA7
34E6:  MOVLW  AA
34E8:  MOVWF  FA7
34EA:  BSF    FA6.1
34EC:  BTFSC  FA6.1
34EE:  BRA    34EC
34F0:  BCF    FA6.2
34F2:  MOVF   00,W
34F4:  IORWF  FF2,F
34F6:  MOVLW  14
34F8:  MOVLB  5
34FA:  MOVWF  xE1
34FC:  MOVLB  0
34FE:  CALL   0F70
....................              reset_cpu();}         
3502:  RESET
3504:  MOVLB  5
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
3506:  MOVF   x68,W
3508:  SUBWF  x64,W
350A:  BNZ   35DA
350C:  MOVF   x69,W
350E:  SUBWF  x65,W
3510:  BNZ   35DA
3512:  MOVF   x6A,W
3514:  SUBWF  x66,W
3516:  BNZ   35DA
3518:  MOVF   x6B,W
351A:  SUBWF  x67,W
351C:  BNZ   35DA
....................          { 
....................             glcd_fillScreen(OFF); 
351E:  CLRF   xE1
3520:  MOVLB  0
3522:  CALL   0FDA
....................             strcpy(Menus.Letra,"Clave"); 
3526:  MOVLW  05
3528:  MOVWF  FEA
352A:  MOVLW  C0
352C:  MOVWF  FE9
352E:  MOVFF  FF2,5E0
3532:  BCF    FF2.7
3534:  MOVLW  00
3536:  CALL   0756
353A:  TBLRD*-
353C:  TBLRD*+
353E:  MOVF   FF5,W
3540:  MOVWF  FEE
3542:  IORLW  00
3544:  BNZ   353C
3546:  MOVLB  5
3548:  BTFSC  xE0.7
354A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
354C:  MOVLW  05
354E:  MOVWF  xE1
3550:  MOVLW  C0
3552:  MOVWF  xE0
3554:  MOVLW  1E
3556:  MOVWF  xE2
3558:  CLRF   xE3
355A:  CLRF   xE4
355C:  MOVLW  02
355E:  MOVWF  xE5
3560:  MOVLB  0
3562:  CALL   1644
....................             strcpy(Menus.Letra,"Correcta"); 
3566:  MOVLW  05
3568:  MOVWF  FEA
356A:  MOVLW  C0
356C:  MOVWF  FE9
356E:  MOVFF  FF2,5E0
3572:  BCF    FF2.7
3574:  MOVLW  00
3576:  CALL   0776
357A:  TBLRD*-
357C:  TBLRD*+
357E:  MOVF   FF5,W
3580:  MOVWF  FEE
3582:  IORLW  00
3584:  BNZ   357C
3586:  MOVLB  5
3588:  BTFSC  xE0.7
358A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
358C:  MOVLW  05
358E:  MOVWF  xE1
3590:  MOVLW  C0
3592:  MOVWF  xE0
3594:  MOVLW  0F
3596:  MOVWF  xE2
3598:  MOVLW  1E
359A:  MOVWF  xE3
359C:  CLRF   xE4
359E:  MOVLW  02
35A0:  MOVWF  xE5
35A2:  MOVLB  0
35A4:  CALL   1644
....................             Menu=1;glcd_update();delay_ms(1000); 
35A8:  MOVLW  01
35AA:  MOVLB  5
35AC:  MOVWF  x36
35AE:  MOVLB  0
35B0:  CALL   1034
35B4:  MOVLW  04
35B6:  MOVLB  5
35B8:  MOVWF  xE0
35BA:  MOVLW  FA
35BC:  MOVWF  xE1
35BE:  MOVLB  0
35C0:  CALL   0F70
35C4:  MOVLB  5
35C6:  DECFSZ xE0,F
35C8:  BRA    35BA
....................             glcd_fillScreen(OFF);unidad=1; 
35CA:  CLRF   xE1
35CC:  MOVLB  0
35CE:  CALL   0FDA
35D2:  MOVLW  01
35D4:  MOVLB  5
35D6:  MOVWF  x37
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
35D8:  BRA    36F2
....................          { 
....................             glcd_fillScreen(OFF); 
35DA:  CLRF   xE1
35DC:  MOVLB  0
35DE:  CALL   0FDA
....................             strcpy(Menus.Letra,"Clave"); 
35E2:  MOVLW  05
35E4:  MOVWF  FEA
35E6:  MOVLW  C0
35E8:  MOVWF  FE9
35EA:  MOVFF  FF2,5E0
35EE:  BCF    FF2.7
35F0:  MOVLW  00
35F2:  CALL   0756
35F6:  TBLRD*-
35F8:  TBLRD*+
35FA:  MOVF   FF5,W
35FC:  MOVWF  FEE
35FE:  IORLW  00
3600:  BNZ   35F8
3602:  MOVLB  5
3604:  BTFSC  xE0.7
3606:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3608:  MOVLW  05
360A:  MOVWF  xE1
360C:  MOVLW  C0
360E:  MOVWF  xE0
3610:  MOVLW  1E
3612:  MOVWF  xE2
3614:  CLRF   xE3
3616:  CLRF   xE4
3618:  MOVLW  02
361A:  MOVWF  xE5
361C:  MOVLB  0
361E:  CALL   1644
....................             strcpy(Menus.Letra,"Incorrecta"); 
3622:  MOVLW  05
3624:  MOVWF  FEA
3626:  MOVLW  C0
3628:  MOVWF  FE9
362A:  MOVFF  FF2,5E0
362E:  BCF    FF2.7
3630:  MOVLW  00
3632:  CALL   079A
3636:  TBLRD*-
3638:  TBLRD*+
363A:  MOVF   FF5,W
363C:  MOVWF  FEE
363E:  IORLW  00
3640:  BNZ   3638
3642:  MOVLB  5
3644:  BTFSC  xE0.7
3646:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
3648:  MOVLW  05
364A:  MOVWF  xE1
364C:  MOVLW  C0
364E:  MOVWF  xE0
3650:  CLRF   xE2
3652:  MOVLW  1E
3654:  MOVWF  xE3
3656:  CLRF   xE4
3658:  MOVLW  02
365A:  MOVWF  xE5
365C:  MOVLB  0
365E:  CALL   1644
....................             Menu=0;glcd_update();delay_ms(1000); 
3662:  MOVLB  5
3664:  CLRF   x36
3666:  MOVLB  0
3668:  CALL   1034
366C:  MOVLW  04
366E:  MOVLB  5
3670:  MOVWF  xE0
3672:  MOVLW  FA
3674:  MOVWF  xE1
3676:  MOVLB  0
3678:  CALL   0F70
367C:  MOVLB  5
367E:  DECFSZ xE0,F
3680:  BRA    3672
....................             glcd_fillScreen(OFF);unidad=1; 
3682:  CLRF   xE1
3684:  MOVLB  0
3686:  CALL   0FDA
368A:  MOVLW  01
368C:  MOVLB  5
368E:  MOVWF  x37
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3690:  CLRF   x64
3692:  CLRF   x65
3694:  CLRF   x66
3696:  CLRF   x67
....................             displayContrasena(Contrasena[0],20,30,1); 
3698:  MOVFF  564,5E2
369C:  MOVLW  14
369E:  MOVWF  xE3
36A0:  MOVLW  1E
36A2:  MOVWF  xE4
36A4:  MOVLW  01
36A6:  MOVWF  xE5
36A8:  MOVLB  0
36AA:  CALL   186A
....................             displayContrasena(Contrasena[1],40,30,0); 
36AE:  MOVFF  565,5E2
36B2:  MOVLW  28
36B4:  MOVLB  5
36B6:  MOVWF  xE3
36B8:  MOVLW  1E
36BA:  MOVWF  xE4
36BC:  CLRF   xE5
36BE:  MOVLB  0
36C0:  CALL   186A
....................             displayContrasena(Contrasena[2],60,30,0); 
36C4:  MOVFF  566,5E2
36C8:  MOVLW  3C
36CA:  MOVLB  5
36CC:  MOVWF  xE3
36CE:  MOVLW  1E
36D0:  MOVWF  xE4
36D2:  CLRF   xE5
36D4:  MOVLB  0
36D6:  CALL   186A
....................             displayContrasena(Contrasena[3],80,30,0); 
36DA:  MOVFF  567,5E2
36DE:  MOVLW  50
36E0:  MOVLB  5
36E2:  MOVWF  xE3
36E4:  MOVLW  1E
36E6:  MOVWF  xE4
36E8:  CLRF   xE5
36EA:  MOVLB  0
36EC:  CALL   186A
36F0:  MOVLB  5
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
36F2:  DECFSZ x36,W
36F4:  BRA    3B22
....................        
....................       if(visual==1) 
36F6:  BTFSS  x29.4
36F8:  BRA    3AB0
....................       { 
....................          if(Opcion>6) 
36FA:  MOVF   x3D,W
36FC:  SUBLW  06
36FE:  BC    3704
....................          {Opcion=1;} 
3700:  MOVLW  01
3702:  MOVWF  x3D
....................          if(Opcion<1) 
3704:  MOVF   x3D,F
3706:  BNZ   370C
....................          {Opcion=6;} 
3708:  MOVLW  06
370A:  MOVWF  x3D
....................           
....................          strcpy(Menus.Letra,"Menu Principal"); 
370C:  MOVLW  05
370E:  MOVWF  FEA
3710:  MOVLW  C0
3712:  MOVWF  FE9
3714:  MOVFF  FF2,5E0
3718:  BCF    FF2.7
371A:  MOVLW  00
371C:  MOVLB  0
371E:  CALL   07C0
3722:  TBLRD*-
3724:  TBLRD*+
3726:  MOVF   FF5,W
3728:  MOVWF  FEE
372A:  IORLW  00
372C:  BNZ   3724
372E:  MOVLB  5
3730:  BTFSC  xE0.7
3732:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,1); 
3734:  MOVLW  05
3736:  MOVWF  xE1
3738:  MOVLW  C0
373A:  MOVWF  xE0
373C:  MOVLW  1E
373E:  MOVWF  xE2
3740:  CLRF   xE3
3742:  MOVLW  01
3744:  MOVWF  xE4
3746:  MOVWF  xE5
3748:  MOVLB  0
374A:  CALL   1644
....................        
....................          if(Opcion==1)    
374E:  MOVLB  5
3750:  DECFSZ x3D,W
3752:  BRA    379A
....................             {strcpy(Menus.Letra,"Caucho"); 
3754:  MOVLW  05
3756:  MOVWF  FEA
3758:  MOVLW  C0
375A:  MOVWF  FE9
375C:  MOVFF  FF2,5E0
3760:  BCF    FF2.7
3762:  MOVLW  00
3764:  MOVLB  0
3766:  CALL   07EA
376A:  TBLRD*-
376C:  TBLRD*+
376E:  MOVF   FF5,W
3770:  MOVWF  FEE
3772:  IORLW  00
3774:  BNZ   376C
3776:  MOVLB  5
3778:  BTFSC  xE0.7
377A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
377C:  MOVLW  05
377E:  MOVWF  xE1
3780:  MOVLW  C0
3782:  MOVWF  xE0
3784:  CLRF   xE2
3786:  MOVLW  0A
3788:  MOVWF  xE3
378A:  MOVLW  01
378C:  MOVWF  xE4
378E:  MOVWF  xE5
3790:  MOVLB  0
3792:  CALL   1644
....................          else 
3796:  BRA    37DC
3798:  MOVLB  5
....................             {strcpy(Menus.Letra,"Caucho"); 
379A:  MOVLW  05
379C:  MOVWF  FEA
379E:  MOVLW  C0
37A0:  MOVWF  FE9
37A2:  MOVFF  FF2,5E0
37A6:  BCF    FF2.7
37A8:  MOVLW  00
37AA:  MOVLB  0
37AC:  CALL   07EA
37B0:  TBLRD*-
37B2:  TBLRD*+
37B4:  MOVF   FF5,W
37B6:  MOVWF  FEE
37B8:  IORLW  00
37BA:  BNZ   37B2
37BC:  MOVLB  5
37BE:  BTFSC  xE0.7
37C0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
37C2:  MOVLW  05
37C4:  MOVWF  xE1
37C6:  MOVLW  C0
37C8:  MOVWF  xE0
37CA:  CLRF   xE2
37CC:  MOVLW  0A
37CE:  MOVWF  xE3
37D0:  CLRF   xE4
37D2:  MOVLW  01
37D4:  MOVWF  xE5
37D6:  MOVLB  0
37D8:  CALL   1644
....................           
....................          if(Opcion==2)    
37DC:  MOVLB  5
37DE:  MOVF   x3D,W
37E0:  SUBLW  02
37E2:  BNZ   382A
....................             {strcpy(Menus.Letra,"Liquidos"); 
37E4:  MOVLW  05
37E6:  MOVWF  FEA
37E8:  MOVLW  C0
37EA:  MOVWF  FE9
37EC:  MOVFF  FF2,5E0
37F0:  BCF    FF2.7
37F2:  MOVLW  00
37F4:  MOVLB  0
37F6:  CALL   080C
37FA:  TBLRD*-
37FC:  TBLRD*+
37FE:  MOVF   FF5,W
3800:  MOVWF  FEE
3802:  IORLW  00
3804:  BNZ   37FC
3806:  MOVLB  5
3808:  BTFSC  xE0.7
380A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,1,1);} 
380C:  MOVLW  05
380E:  MOVWF  xE1
3810:  MOVLW  C0
3812:  MOVWF  xE0
3814:  CLRF   xE2
3816:  MOVLW  13
3818:  MOVWF  xE3
381A:  MOVLW  01
381C:  MOVWF  xE4
381E:  MOVWF  xE5
3820:  MOVLB  0
3822:  CALL   1644
....................          else 
3826:  BRA    386C
3828:  MOVLB  5
....................             {strcpy(Menus.Letra,"Liquidos"); 
382A:  MOVLW  05
382C:  MOVWF  FEA
382E:  MOVLW  C0
3830:  MOVWF  FE9
3832:  MOVFF  FF2,5E0
3836:  BCF    FF2.7
3838:  MOVLW  00
383A:  MOVLB  0
383C:  CALL   080C
3840:  TBLRD*-
3842:  TBLRD*+
3844:  MOVF   FF5,W
3846:  MOVWF  FEE
3848:  IORLW  00
384A:  BNZ   3842
384C:  MOVLB  5
384E:  BTFSC  xE0.7
3850:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,19,0,1);}    
3852:  MOVLW  05
3854:  MOVWF  xE1
3856:  MOVLW  C0
3858:  MOVWF  xE0
385A:  CLRF   xE2
385C:  MOVLW  13
385E:  MOVWF  xE3
3860:  CLRF   xE4
3862:  MOVLW  01
3864:  MOVWF  xE5
3866:  MOVLB  0
3868:  CALL   1644
....................              
....................           if(Opcion==3)    
386C:  MOVLB  5
386E:  MOVF   x3D,W
3870:  SUBLW  03
3872:  BNZ   38BA
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
3874:  MOVLW  05
3876:  MOVWF  FEA
3878:  MOVLW  C0
387A:  MOVWF  FE9
387C:  MOVFF  FF2,5E0
3880:  BCF    FF2.7
3882:  MOVLW  00
3884:  MOVLB  0
3886:  CALL   0830
388A:  TBLRD*-
388C:  TBLRD*+
388E:  MOVF   FF5,W
3890:  MOVWF  FEE
3892:  IORLW  00
3894:  BNZ   388C
3896:  MOVLB  5
3898:  BTFSC  xE0.7
389A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,1,1);} 
389C:  MOVLW  05
389E:  MOVWF  xE1
38A0:  MOVLW  C0
38A2:  MOVWF  xE0
38A4:  CLRF   xE2
38A6:  MOVLW  1C
38A8:  MOVWF  xE3
38AA:  MOVLW  01
38AC:  MOVWF  xE4
38AE:  MOVWF  xE5
38B0:  MOVLB  0
38B2:  CALL   1644
....................          else 
38B6:  BRA    38FC
38B8:  MOVLB  5
....................             {strcpy(Menus.Letra,"Instrumental Suave"); 
38BA:  MOVLW  05
38BC:  MOVWF  FEA
38BE:  MOVLW  C0
38C0:  MOVWF  FE9
38C2:  MOVFF  FF2,5E0
38C6:  BCF    FF2.7
38C8:  MOVLW  00
38CA:  MOVLB  0
38CC:  CALL   0830
38D0:  TBLRD*-
38D2:  TBLRD*+
38D4:  MOVF   FF5,W
38D6:  MOVWF  FEE
38D8:  IORLW  00
38DA:  BNZ   38D2
38DC:  MOVLB  5
38DE:  BTFSC  xE0.7
38E0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,28,0,1);} 
38E2:  MOVLW  05
38E4:  MOVWF  xE1
38E6:  MOVLW  C0
38E8:  MOVWF  xE0
38EA:  CLRF   xE2
38EC:  MOVLW  1C
38EE:  MOVWF  xE3
38F0:  CLRF   xE4
38F2:  MOVLW  01
38F4:  MOVWF  xE5
38F6:  MOVLB  0
38F8:  CALL   1644
....................              
....................          if(Opcion==4)    
38FC:  MOVLB  5
38FE:  MOVF   x3D,W
3900:  SUBLW  04
3902:  BNZ   394A
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
3904:  MOVLW  05
3906:  MOVWF  FEA
3908:  MOVLW  C0
390A:  MOVWF  FE9
390C:  MOVFF  FF2,5E0
3910:  BCF    FF2.7
3912:  MOVLW  00
3914:  MOVLB  0
3916:  CALL   085E
391A:  TBLRD*-
391C:  TBLRD*+
391E:  MOVF   FF5,W
3920:  MOVWF  FEE
3922:  IORLW  00
3924:  BNZ   391C
3926:  MOVLB  5
3928:  BTFSC  xE0.7
392A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,1,1);} 
392C:  MOVLW  05
392E:  MOVWF  xE1
3930:  MOVLW  C0
3932:  MOVWF  xE0
3934:  CLRF   xE2
3936:  MOVLW  25
3938:  MOVWF  xE3
393A:  MOVLW  01
393C:  MOVWF  xE4
393E:  MOVWF  xE5
3940:  MOVLB  0
3942:  CALL   1644
....................          else 
3946:  BRA    398C
3948:  MOVLB  5
....................             {strcpy(Menus.Letra,"Textil e Instrumental"); 
394A:  MOVLW  05
394C:  MOVWF  FEA
394E:  MOVLW  C0
3950:  MOVWF  FE9
3952:  MOVFF  FF2,5E0
3956:  BCF    FF2.7
3958:  MOVLW  00
395A:  MOVLB  0
395C:  CALL   085E
3960:  TBLRD*-
3962:  TBLRD*+
3964:  MOVF   FF5,W
3966:  MOVWF  FEE
3968:  IORLW  00
396A:  BNZ   3962
396C:  MOVLB  5
396E:  BTFSC  xE0.7
3970:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,37,0,1);}    
3972:  MOVLW  05
3974:  MOVWF  xE1
3976:  MOVLW  C0
3978:  MOVWF  xE0
397A:  CLRF   xE2
397C:  MOVLW  25
397E:  MOVWF  xE3
3980:  CLRF   xE4
3982:  MOVLW  01
3984:  MOVWF  xE5
3986:  MOVLB  0
3988:  CALL   1644
....................              
....................          if(Opcion==5)    
398C:  MOVLB  5
398E:  MOVF   x3D,W
3990:  SUBLW  05
3992:  BNZ   39DA
....................             {strcpy(Menus.Letra,"Personalizado"); 
3994:  MOVLW  05
3996:  MOVWF  FEA
3998:  MOVLW  C0
399A:  MOVWF  FE9
399C:  MOVFF  FF2,5E0
39A0:  BCF    FF2.7
39A2:  MOVLW  00
39A4:  MOVLB  0
39A6:  CALL   088E
39AA:  TBLRD*-
39AC:  TBLRD*+
39AE:  MOVF   FF5,W
39B0:  MOVWF  FEE
39B2:  IORLW  00
39B4:  BNZ   39AC
39B6:  MOVLB  5
39B8:  BTFSC  xE0.7
39BA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,1,1);} 
39BC:  MOVLW  05
39BE:  MOVWF  xE1
39C0:  MOVLW  C0
39C2:  MOVWF  xE0
39C4:  CLRF   xE2
39C6:  MOVLW  2E
39C8:  MOVWF  xE3
39CA:  MOVLW  01
39CC:  MOVWF  xE4
39CE:  MOVWF  xE5
39D0:  MOVLB  0
39D2:  CALL   1644
....................          else 
39D6:  BRA    3A1C
39D8:  MOVLB  5
....................             {strcpy(Menus.Letra,"Personalizado"); 
39DA:  MOVLW  05
39DC:  MOVWF  FEA
39DE:  MOVLW  C0
39E0:  MOVWF  FE9
39E2:  MOVFF  FF2,5E0
39E6:  BCF    FF2.7
39E8:  MOVLW  00
39EA:  MOVLB  0
39EC:  CALL   088E
39F0:  TBLRD*-
39F2:  TBLRD*+
39F4:  MOVF   FF5,W
39F6:  MOVWF  FEE
39F8:  IORLW  00
39FA:  BNZ   39F2
39FC:  MOVLB  5
39FE:  BTFSC  xE0.7
3A00:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,46,0,1);}   
3A02:  MOVLW  05
3A04:  MOVWF  xE1
3A06:  MOVLW  C0
3A08:  MOVWF  xE0
3A0A:  CLRF   xE2
3A0C:  MOVLW  2E
3A0E:  MOVWF  xE3
3A10:  CLRF   xE4
3A12:  MOVLW  01
3A14:  MOVWF  xE5
3A16:  MOVLB  0
3A18:  CALL   1644
....................              
....................          if(Opcion==6)    
3A1C:  MOVLB  5
3A1E:  MOVF   x3D,W
3A20:  SUBLW  06
3A22:  BNZ   3A6A
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3A24:  MOVLW  05
3A26:  MOVWF  FEA
3A28:  MOVLW  C0
3A2A:  MOVWF  FE9
3A2C:  MOVFF  FF2,5E0
3A30:  BCF    FF2.7
3A32:  MOVLW  00
3A34:  MOVLB  0
3A36:  CALL   08B6
3A3A:  TBLRD*-
3A3C:  TBLRD*+
3A3E:  MOVF   FF5,W
3A40:  MOVWF  FEE
3A42:  IORLW  00
3A44:  BNZ   3A3C
3A46:  MOVLB  5
3A48:  BTFSC  xE0.7
3A4A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,1,1);} 
3A4C:  MOVLW  05
3A4E:  MOVWF  xE1
3A50:  MOVLW  C0
3A52:  MOVWF  xE0
3A54:  CLRF   xE2
3A56:  MOVLW  37
3A58:  MOVWF  xE3
3A5A:  MOVLW  01
3A5C:  MOVWF  xE4
3A5E:  MOVWF  xE5
3A60:  MOVLB  0
3A62:  CALL   1644
....................          else 
3A66:  BRA    3AAC
3A68:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3A6A:  MOVLW  05
3A6C:  MOVWF  FEA
3A6E:  MOVLW  C0
3A70:  MOVWF  FE9
3A72:  MOVFF  FF2,5E0
3A76:  BCF    FF2.7
3A78:  MOVLW  00
3A7A:  MOVLB  0
3A7C:  CALL   08B6
3A80:  TBLRD*-
3A82:  TBLRD*+
3A84:  MOVF   FF5,W
3A86:  MOVWF  FEE
3A88:  IORLW  00
3A8A:  BNZ   3A82
3A8C:  MOVLB  5
3A8E:  BTFSC  xE0.7
3A90:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,0,1);}      
3A92:  MOVLW  05
3A94:  MOVWF  xE1
3A96:  MOVLW  C0
3A98:  MOVWF  xE0
3A9A:  CLRF   xE2
3A9C:  MOVLW  37
3A9E:  MOVWF  xE3
3AA0:  CLRF   xE4
3AA2:  MOVLW  01
3AA4:  MOVWF  xE5
3AA6:  MOVLB  0
3AA8:  CALL   1644
....................             visual=0; 
3AAC:  MOVLB  5
3AAE:  BCF    x29.4
....................       } 
....................       if(UP)//Si oprime hacia arriba 
3AB0:  BSF    F92.0
3AB2:  BTFSS  F80.0
3AB4:  BRA    3ACE
....................          {  if(Flanco == 0)  
3AB6:  BTFSC  x29.0
3AB8:  BRA    3ACC
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3ABA:  BSF    x29.0
3ABC:  MOVLW  1E
3ABE:  MOVWF  xE1
3AC0:  MOVLB  0
3AC2:  CALL   0F70
3AC6:  MOVLB  5
3AC8:  DECF   x3D,F
3ACA:  BSF    x29.4
....................                } 
....................          } 
....................             else 
3ACC:  BRA    3AD0
....................                {Flanco = 0;} 
3ACE:  BCF    x29.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
3AD0:  BSF    F92.1
3AD2:  BTFSS  F80.1
3AD4:  BRA    3AEE
....................          {  if(Flanco2 == 0)  
3AD6:  BTFSC  x29.2
3AD8:  BRA    3AEC
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
3ADA:  BSF    x29.2
3ADC:  MOVLW  1E
3ADE:  MOVWF  xE1
3AE0:  MOVLB  0
3AE2:  CALL   0F70
3AE6:  MOVLB  5
3AE8:  INCF   x3D,F
3AEA:  BSF    x29.4
....................                }      
....................          } 
....................             else 
3AEC:  BRA    3AF0
....................                {Flanco2 = 0;}   
3AEE:  BCF    x29.2
....................                 
....................        if(RIGHT)//Si oprime SET 
3AF0:  BSF    F92.2
3AF2:  BTFSS  F80.2
3AF4:  BRA    3B20
....................          {  if(Flanco1 == 0)  
3AF6:  BTFSC  x29.1
3AF8:  BRA    3B1E
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
3AFA:  BSF    x29.1
3AFC:  MOVLW  1E
3AFE:  MOVWF  xE1
3B00:  MOVLB  0
3B02:  CALL   0F70
3B06:  MOVLW  03
3B08:  MOVLB  5
3B0A:  ADDWF  x3D,W
3B0C:  MOVWF  x36
3B0E:  MOVLW  01
3B10:  MOVWF  x3D
3B12:  CLRF   xE1
3B14:  MOVLB  0
3B16:  CALL   0FDA
3B1A:  MOVLB  5
3B1C:  BSF    x29.4
....................                } 
....................          } 
....................             else 
3B1E:  BRA    3B22
....................                {Flanco1 = 0;}   
3B20:  BCF    x29.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==4){ // Menu de Caucho 
3B22:  MOVF   x36,W
3B24:  SUBLW  04
3B26:  BTFSS  FD8.2
3B28:  BRA    3E4C
....................        
....................       if(visual==1) 
3B2A:  BTFSS  x29.4
3B2C:  BRA    3C80
....................       { 
....................          glcd_imagen(2); //Guante 
3B2E:  MOVLW  02
3B30:  MOVWF  xE0
3B32:  MOVLB  0
3B34:  CALL   2086
....................          strcpy(Menus.Letra,"Caucho"); 
3B38:  MOVLW  05
3B3A:  MOVWF  FEA
3B3C:  MOVLW  C0
3B3E:  MOVWF  FE9
3B40:  MOVFF  FF2,5E0
3B44:  BCF    FF2.7
3B46:  MOVLW  00
3B48:  CALL   07EA
3B4C:  TBLRD*-
3B4E:  TBLRD*+
3B50:  MOVF   FF5,W
3B52:  MOVWF  FEE
3B54:  IORLW  00
3B56:  BNZ   3B4E
3B58:  MOVLB  5
3B5A:  BTFSC  xE0.7
3B5C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3B5E:  MOVLW  05
3B60:  MOVWF  xE1
3B62:  MOVLW  C0
3B64:  MOVWF  xE0
3B66:  MOVLW  14
3B68:  MOVWF  xE2
3B6A:  CLRF   xE3
3B6C:  MOVLW  01
3B6E:  MOVWF  xE4
3B70:  MOVLW  02
3B72:  MOVWF  xE5
3B74:  MOVLB  0
3B76:  CALL   1644
....................          
....................          strcpy(Menus.Letra,"Caucho"); 
3B7A:  MOVLW  05
3B7C:  MOVWF  FEA
3B7E:  MOVLW  C0
3B80:  MOVWF  FE9
3B82:  MOVFF  FF2,5E0
3B86:  BCF    FF2.7
3B88:  MOVLW  00
3B8A:  CALL   07EA
3B8E:  TBLRD*-
3B90:  TBLRD*+
3B92:  MOVF   FF5,W
3B94:  MOVWF  FEE
3B96:  IORLW  00
3B98:  BNZ   3B90
3B9A:  MOVLB  5
3B9C:  BTFSC  xE0.7
3B9E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,0,1); 
3BA0:  MOVLW  05
3BA2:  MOVWF  xE1
3BA4:  MOVLW  C0
3BA6:  MOVWF  xE0
3BA8:  MOVLW  07
3BAA:  MOVWF  xE2
3BAC:  MOVLW  37
3BAE:  MOVWF  xE3
3BB0:  CLRF   xE4
3BB2:  MOVLW  01
3BB4:  MOVWF  xE5
3BB6:  MOVLB  0
3BB8:  CALL   1644
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3BBC:  MOVLW  05
3BBE:  MOVWF  FEA
3BC0:  MOVLW  C0
3BC2:  MOVWF  FE9
3BC4:  MOVFF  FF2,5E0
3BC8:  BCF    FF2.7
3BCA:  MOVLW  00
3BCC:  CALL   08DE
3BD0:  TBLRD*-
3BD2:  TBLRD*+
3BD4:  MOVF   FF5,W
3BD6:  MOVWF  FEE
3BD8:  IORLW  00
3BDA:  BNZ   3BD2
3BDC:  MOVLB  5
3BDE:  BTFSC  xE0.7
3BE0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3BE2:  MOVLW  05
3BE4:  MOVWF  xE1
3BE6:  MOVLW  C0
3BE8:  MOVWF  xE0
3BEA:  CLRF   xE2
3BEC:  MOVLW  1A
3BEE:  MOVWF  xE3
3BF0:  CLRF   xE4
3BF2:  MOVLW  01
3BF4:  MOVWF  xE5
3BF6:  MOVLB  0
3BF8:  CALL   1644
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
3BFC:  MOVLW  05
3BFE:  MOVWF  FEA
3C00:  MOVLW  C0
3C02:  MOVWF  FE9
3C04:  MOVFF  FF2,5E0
3C08:  BCF    FF2.7
3C0A:  MOVLW  00
3C0C:  CALL   090A
3C10:  TBLRD*-
3C12:  TBLRD*+
3C14:  MOVF   FF5,W
3C16:  MOVWF  FEE
3C18:  IORLW  00
3C1A:  BNZ   3C12
3C1C:  MOVLB  5
3C1E:  BTFSC  xE0.7
3C20:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3C22:  MOVLW  05
3C24:  MOVWF  xE1
3C26:  MOVLW  C0
3C28:  MOVWF  xE0
3C2A:  CLRF   xE2
3C2C:  MOVLW  24
3C2E:  MOVWF  xE3
3C30:  CLRF   xE4
3C32:  MOVLW  01
3C34:  MOVWF  xE5
3C36:  MOVLB  0
3C38:  CALL   1644
....................          strcpy(Menus.Letra,"T. Secado= 15m"); 
3C3C:  MOVLW  05
3C3E:  MOVWF  FEA
3C40:  MOVLW  C0
3C42:  MOVWF  FE9
3C44:  MOVFF  FF2,5E0
3C48:  BCF    FF2.7
3C4A:  MOVLW  00
3C4C:  CALL   093A
3C50:  TBLRD*-
3C52:  TBLRD*+
3C54:  MOVF   FF5,W
3C56:  MOVWF  FEE
3C58:  IORLW  00
3C5A:  BNZ   3C52
3C5C:  MOVLB  5
3C5E:  BTFSC  xE0.7
3C60:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1); 
3C62:  MOVLW  05
3C64:  MOVWF  xE1
3C66:  MOVLW  C0
3C68:  MOVWF  xE0
3C6A:  CLRF   xE2
3C6C:  MOVLW  2E
3C6E:  MOVWF  xE3
3C70:  CLRF   xE4
3C72:  MOVLW  01
3C74:  MOVWF  xE5
3C76:  MOVLB  0
3C78:  CALL   1644
....................          visual=0; 
3C7C:  MOVLB  5
3C7E:  BCF    x29.4
....................       } 
....................        
....................       if(LEFT)// Si oprime Izquier|da 
3C80:  BSF    F92.3
3C82:  BTFSS  F80.3
3C84:  BRA    3CA2
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3C86:  MOVLW  1E
3C88:  MOVWF  xE1
3C8A:  MOVLB  0
3C8C:  CALL   0F70
3C90:  MOVLW  01
3C92:  MOVLB  5
3C94:  MOVWF  x36
3C96:  CLRF   xE1
3C98:  MOVLB  0
3C9A:  CALL   0FDA
3C9E:  MOVLB  5
3CA0:  BSF    x29.4
....................       } 
....................  
....................       if(RIGHT)// Si oprime derecha 
3CA2:  BSF    F92.2
3CA4:  BTFSS  F80.2
3CA6:  BRA    3E4C
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
3CA8:  CLRF   x58
3CAA:  CLRF   x59
3CAC:  MOVLW  05
3CAE:  MOVWF  x5A
3CB0:  MOVLW  02
3CB2:  MOVWF  x5B
3CB4:  BSF    x29.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=5;Tsecadop[3]=1;minutos=0;Setpoint=121;Menu=20; 
3CB6:  CLRF   x60
3CB8:  CLRF   x61
3CBA:  MOVLW  05
3CBC:  MOVWF  x62
3CBE:  MOVLW  01
3CC0:  MOVWF  x63
3CC2:  CLRF   x49
3CC4:  CLRF   x48
3CC6:  MOVLW  79
3CC8:  MOVWF  x3B
3CCA:  MOVLW  14
3CCC:  MOVWF  x36
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
3CCE:  MOVWF  x36
3CD0:  MOVLW  0F
3CD2:  MOVWF  xF2
3CD4:  MOVLW  12
3CD6:  MOVWF  xF3
3CD8:  MOVLW  1E
3CDA:  MOVWF  xF4
3CDC:  MOVLW  35
3CDE:  MOVWF  xF5
3CE0:  CLRF   xF6
3CE2:  MOVLW  01
3CE4:  MOVWF  xF7
3CE6:  MOVLB  0
3CE8:  CALL   1582
3CEC:  MOVLB  5
3CEE:  CLRF   x3F
3CF0:  MOVLW  C0
3CF2:  IORWF  FF2,F
3CF4:  CLRF   xE1
3CF6:  MOVLB  0
3CF8:  CALL   0FDA
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
3CFC:  MOVLW  05
3CFE:  MOVWF  FEA
3D00:  MOVLW  C0
3D02:  MOVWF  FE9
3D04:  MOVFF  FF2,5E0
3D08:  BCF    FF2.7
3D0A:  MOVLW  00
3D0C:  CALL   0964
3D10:  TBLRD*-
3D12:  TBLRD*+
3D14:  MOVF   FF5,W
3D16:  MOVWF  FEE
3D18:  IORLW  00
3D1A:  BNZ   3D12
3D1C:  MOVLB  5
3D1E:  BTFSC  xE0.7
3D20:  BSF    FF2.7
3D22:  MOVLW  05
3D24:  MOVWF  xE1
3D26:  MOVLW  C0
3D28:  MOVWF  xE0
3D2A:  CLRF   xE2
3D2C:  MOVLW  37
3D2E:  MOVWF  xE3
3D30:  MOVLW  02
3D32:  MOVWF  xE4
3D34:  MOVLW  01
3D36:  MOVWF  xE5
3D38:  MOVLB  0
3D3A:  CALL   1644
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
3D3E:  MOVLW  0F
3D40:  MOVLB  5
3D42:  MOVWF  xF2
3D44:  MOVLW  12
3D46:  MOVWF  xF3
3D48:  MOVLW  1E
3D4A:  MOVWF  xF4
3D4C:  MOVLW  35
3D4E:  MOVWF  xF5
3D50:  CLRF   xF6
3D52:  MOVLW  01
3D54:  MOVWF  xF7
3D56:  MOVLB  0
3D58:  CALL   1582
....................          glcd_imagen(5); 
3D5C:  MOVLW  05
3D5E:  MOVLB  5
3D60:  MOVWF  xE0
3D62:  MOVLB  0
3D64:  CALL   2086
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
3D68:  MOVLW  05
3D6A:  MOVWF  FEA
3D6C:  MOVLW  C0
3D6E:  MOVWF  FE9
3D70:  MOVFF  FF2,5E0
3D74:  BCF    FF2.7
3D76:  MOVLW  00
3D78:  CALL   098A
3D7C:  TBLRD*-
3D7E:  TBLRD*+
3D80:  MOVF   FF5,W
3D82:  MOVWF  FEE
3D84:  IORLW  00
3D86:  BNZ   3D7E
3D88:  MOVLB  5
3D8A:  BTFSC  xE0.7
3D8C:  BSF    FF2.7
3D8E:  MOVLW  05
3D90:  MOVWF  xE1
3D92:  MOVLW  C0
3D94:  MOVWF  xE0
3D96:  CLRF   xE2
3D98:  CLRF   xE3
3D9A:  MOVLW  02
3D9C:  MOVWF  xE4
3D9E:  MOVLW  01
3DA0:  MOVWF  xE5
3DA2:  MOVLB  0
3DA4:  CALL   1644
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
3DA8:  MOVLW  05
3DAA:  MOVWF  FEA
3DAC:  MOVLW  C0
3DAE:  MOVWF  FE9
3DB0:  MOVFF  FF2,5E0
3DB4:  BCF    FF2.7
3DB6:  MOVLW  00
3DB8:  CALL   09AC
3DBC:  TBLRD*-
3DBE:  TBLRD*+
3DC0:  MOVF   FF5,W
3DC2:  MOVWF  FEE
3DC4:  IORLW  00
3DC6:  BNZ   3DBE
3DC8:  MOVLB  5
3DCA:  BTFSC  xE0.7
3DCC:  BSF    FF2.7
3DCE:  MOVLW  05
3DD0:  MOVWF  xE1
3DD2:  MOVLW  C0
3DD4:  MOVWF  xE0
3DD6:  CLRF   xE2
3DD8:  MOVLW  08
3DDA:  MOVWF  xE3
3DDC:  MOVLW  02
3DDE:  MOVWF  xE4
3DE0:  MOVLW  01
3DE2:  MOVWF  xE5
3DE4:  MOVLB  0
3DE6:  CALL   1644
....................          glcd_circle(95,40,2,NO,ON); 
3DEA:  MOVLW  5F
3DEC:  MOVLB  5
3DEE:  MOVWF  xE0
3DF0:  MOVLW  28
3DF2:  MOVWF  xE1
3DF4:  MOVLW  02
3DF6:  MOVWF  xE2
3DF8:  CLRF   xE3
3DFA:  MOVLW  01
3DFC:  MOVWF  xE4
3DFE:  MOVLB  0
3E00:  CALL   2186
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
3E04:  MOVLW  05
3E06:  MOVWF  FEA
3E08:  MOVLW  C0
3E0A:  MOVWF  FE9
3E0C:  MOVFF  FF2,5E0
3E10:  BCF    FF2.7
3E12:  MOVLW  00
3E14:  CALL   09CE
3E18:  TBLRD*-
3E1A:  TBLRD*+
3E1C:  MOVF   FF5,W
3E1E:  MOVWF  FEE
3E20:  IORLW  00
3E22:  BNZ   3E1A
3E24:  MOVLB  5
3E26:  BTFSC  xE0.7
3E28:  BSF    FF2.7
3E2A:  MOVLW  05
3E2C:  MOVWF  xE1
3E2E:  MOVLW  C0
3E30:  MOVWF  xE0
3E32:  MOVLW  66
3E34:  MOVWF  xE2
3E36:  MOVLW  28
3E38:  MOVWF  xE3
3E3A:  MOVLW  02
3E3C:  MOVWF  xE4
3E3E:  MOVWF  xE5
3E40:  MOVLB  0
3E42:  CALL   1644
....................          MuestraTiemposProgramados(); 
3E46:  CALL   259E
3E4A:  MOVLB  5
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Liquido       
3E4C:  MOVF   x36,W
3E4E:  SUBLW  05
3E50:  BTFSS  FD8.2
3E52:  BRA    4010
....................        
....................       if(visual==1) 
3E54:  BTFSS  x29.4
3E56:  BRA    3FAC
....................       { 
....................          glcd_imagen(4); //ErlenMeyer con Liquido 
3E58:  MOVLW  04
3E5A:  MOVWF  xE0
3E5C:  MOVLB  0
3E5E:  CALL   2086
....................          strcpy(Menus.Letra,"Liquidos"); 
3E62:  MOVLW  05
3E64:  MOVWF  FEA
3E66:  MOVLW  C0
3E68:  MOVWF  FE9
3E6A:  MOVFF  FF2,5E0
3E6E:  BCF    FF2.7
3E70:  MOVLW  00
3E72:  CALL   080C
3E76:  TBLRD*-
3E78:  TBLRD*+
3E7A:  MOVF   FF5,W
3E7C:  MOVWF  FEE
3E7E:  IORLW  00
3E80:  BNZ   3E78
3E82:  MOVLB  5
3E84:  BTFSC  xE0.7
3E86:  BSF    FF2.7
....................          displayMenu(Menus.Letra,20,0,1,2); 
3E88:  MOVLW  05
3E8A:  MOVWF  xE1
3E8C:  MOVLW  C0
3E8E:  MOVWF  xE0
3E90:  MOVLW  14
3E92:  MOVWF  xE2
3E94:  CLRF   xE3
3E96:  MOVLW  01
3E98:  MOVWF  xE4
3E9A:  MOVLW  02
3E9C:  MOVWF  xE5
3E9E:  MOVLB  0
3EA0:  CALL   1644
....................        
....................          strcpy(Menus.Letra,"Liquidos"); 
3EA4:  MOVLW  05
3EA6:  MOVWF  FEA
3EA8:  MOVLW  C0
3EAA:  MOVWF  FE9
3EAC:  MOVFF  FF2,5E0
3EB0:  BCF    FF2.7
3EB2:  MOVLW  00
3EB4:  CALL   080C
3EB8:  TBLRD*-
3EBA:  TBLRD*+
3EBC:  MOVF   FF5,W
3EBE:  MOVWF  FEE
3EC0:  IORLW  00
3EC2:  BNZ   3EBA
3EC4:  MOVLB  5
3EC6:  BTFSC  xE0.7
3EC8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
3ECA:  MOVLW  05
3ECC:  MOVWF  xE1
3ECE:  MOVLW  C0
3ED0:  MOVWF  xE0
3ED2:  MOVLW  07
3ED4:  MOVWF  xE2
3ED6:  MOVLW  37
3ED8:  MOVWF  xE3
3EDA:  MOVLW  02
3EDC:  MOVWF  xE4
3EDE:  MOVLW  01
3EE0:  MOVWF  xE5
3EE2:  MOVLB  0
3EE4:  CALL   1644
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
3EE8:  MOVLW  05
3EEA:  MOVWF  FEA
3EEC:  MOVLW  C0
3EEE:  MOVWF  FE9
3EF0:  MOVFF  FF2,5E0
3EF4:  BCF    FF2.7
3EF6:  MOVLW  00
3EF8:  CALL   08DE
3EFC:  TBLRD*-
3EFE:  TBLRD*+
3F00:  MOVF   FF5,W
3F02:  MOVWF  FEE
3F04:  IORLW  00
3F06:  BNZ   3EFE
3F08:  MOVLB  5
3F0A:  BTFSC  xE0.7
3F0C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
3F0E:  MOVLW  05
3F10:  MOVWF  xE1
3F12:  MOVLW  C0
3F14:  MOVWF  xE0
3F16:  CLRF   xE2
3F18:  MOVLW  1A
3F1A:  MOVWF  xE3
3F1C:  CLRF   xE4
3F1E:  MOVLW  01
3F20:  MOVWF  xE5
3F22:  MOVLB  0
3F24:  CALL   1644
....................          strcpy(Menus.Letra,"T. Esterilizacion:20m"); 
3F28:  MOVLW  05
3F2A:  MOVWF  FEA
3F2C:  MOVLW  C0
3F2E:  MOVWF  FE9
3F30:  MOVFF  FF2,5E0
3F34:  BCF    FF2.7
3F36:  MOVLW  00
3F38:  CALL   09EA
3F3C:  TBLRD*-
3F3E:  TBLRD*+
3F40:  MOVF   FF5,W
3F42:  MOVWF  FEE
3F44:  IORLW  00
3F46:  BNZ   3F3E
3F48:  MOVLB  5
3F4A:  BTFSC  xE0.7
3F4C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
3F4E:  MOVLW  05
3F50:  MOVWF  xE1
3F52:  MOVLW  C0
3F54:  MOVWF  xE0
3F56:  CLRF   xE2
3F58:  MOVLW  24
3F5A:  MOVWF  xE3
3F5C:  CLRF   xE4
3F5E:  MOVLW  01
3F60:  MOVWF  xE5
3F62:  MOVLB  0
3F64:  CALL   1644
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
3F68:  MOVLW  05
3F6A:  MOVWF  FEA
3F6C:  MOVLW  C0
3F6E:  MOVWF  FE9
3F70:  MOVFF  FF2,5E0
3F74:  BCF    FF2.7
3F76:  MOVLW  00
3F78:  CALL   0A1A
3F7C:  TBLRD*-
3F7E:  TBLRD*+
3F80:  MOVF   FF5,W
3F82:  MOVWF  FEE
3F84:  IORLW  00
3F86:  BNZ   3F7E
3F88:  MOVLB  5
3F8A:  BTFSC  xE0.7
3F8C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);     
3F8E:  MOVLW  05
3F90:  MOVWF  xE1
3F92:  MOVLW  C0
3F94:  MOVWF  xE0
3F96:  CLRF   xE2
3F98:  MOVLW  2E
3F9A:  MOVWF  xE3
3F9C:  CLRF   xE4
3F9E:  MOVLW  01
3FA0:  MOVWF  xE5
3FA2:  MOVLB  0
3FA4:  CALL   1644
....................          visual=0; 
3FA8:  MOVLB  5
3FAA:  BCF    x29.4
....................       }    
....................           
....................       if(LEFT)// Si oprime Izquier|da 
3FAC:  BSF    F92.3
3FAE:  BTFSS  F80.3
3FB0:  BRA    3FCE
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
3FB2:  MOVLW  1E
3FB4:  MOVWF  xE1
3FB6:  MOVLB  0
3FB8:  CALL   0F70
3FBC:  MOVLW  01
3FBE:  MOVLB  5
3FC0:  MOVWF  x36
3FC2:  CLRF   xE1
3FC4:  MOVLB  0
3FC6:  CALL   0FDA
3FCA:  MOVLB  5
3FCC:  BSF    x29.4
....................       }                
....................  
....................       if(RIGHT)// Si oprime derecha 
3FCE:  BSF    F92.2
3FD0:  BTFSS  F80.2
3FD2:  BRA    4010
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=0;Testerilizacionp[3]=2;desfoguelento=1;visual=1; 
3FD4:  CLRF   x58
3FD6:  CLRF   x59
3FD8:  CLRF   x5A
3FDA:  MOVLW  02
3FDC:  MOVWF  x5B
3FDE:  BSF    x29.5
3FE0:  BSF    x29.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
3FE2:  CLRF   x60
3FE4:  CLRF   x61
3FE6:  CLRF   x62
3FE8:  CLRF   x63
3FEA:  MOVLW  79
3FEC:  MOVWF  x3B
3FEE:  MOVLW  0E
3FF0:  MOVWF  x36
3FF2:  MOVLW  04
3FF4:  MOVWF  xE0
3FF6:  MOVLW  AF
3FF8:  MOVWF  xE1
3FFA:  MOVLB  0
3FFC:  CALL   0F70
4000:  MOVLB  5
4002:  DECFSZ xE0,F
4004:  BRA    3FF6
4006:  CLRF   xE1
4008:  MOVLB  0
400A:  CALL   0FDA
400E:  MOVLB  5
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Instrumental Suave      
4010:  MOVF   x36,W
4012:  SUBLW  06
4014:  BTFSS  FD8.2
4016:  BRA    41D4
....................        
....................       if(visual==1) 
4018:  BTFSS  x29.4
401A:  BRA    416E
....................       { 
....................          glcd_imagen(3); //Erlen Meyer 
401C:  MOVLW  03
401E:  MOVWF  xE0
4020:  MOVLB  0
4022:  CALL   2086
....................           
....................          strcpy(Menus.Letra,"Ins. Suave"); 
4026:  MOVLW  05
4028:  MOVWF  FEA
402A:  MOVLW  C0
402C:  MOVWF  FE9
402E:  MOVFF  FF2,5E0
4032:  BCF    FF2.7
4034:  MOVLW  00
4036:  CALL   0A44
403A:  TBLRD*-
403C:  TBLRD*+
403E:  MOVF   FF5,W
4040:  MOVWF  FEE
4042:  IORLW  00
4044:  BNZ   403C
4046:  MOVLB  5
4048:  BTFSC  xE0.7
404A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
404C:  MOVLW  05
404E:  MOVWF  xE1
4050:  MOVLW  C0
4052:  MOVWF  xE0
4054:  CLRF   xE2
4056:  CLRF   xE3
4058:  MOVLW  01
405A:  MOVWF  xE4
405C:  MOVLW  02
405E:  MOVWF  xE5
4060:  MOVLB  0
4062:  CALL   1644
....................           
....................          strcpy(Menus.Letra,"Instrumental Suave"); 
4066:  MOVLW  05
4068:  MOVWF  FEA
406A:  MOVLW  C0
406C:  MOVWF  FE9
406E:  MOVFF  FF2,5E0
4072:  BCF    FF2.7
4074:  MOVLW  00
4076:  CALL   0830
407A:  TBLRD*-
407C:  TBLRD*+
407E:  MOVF   FF5,W
4080:  MOVWF  FEE
4082:  IORLW  00
4084:  BNZ   407C
4086:  MOVLB  5
4088:  BTFSC  xE0.7
408A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,7,55,2,1); 
408C:  MOVLW  05
408E:  MOVWF  xE1
4090:  MOVLW  C0
4092:  MOVWF  xE0
4094:  MOVLW  07
4096:  MOVWF  xE2
4098:  MOVLW  37
409A:  MOVWF  xE3
409C:  MOVLW  02
409E:  MOVWF  xE4
40A0:  MOVLW  01
40A2:  MOVWF  xE5
40A4:  MOVLB  0
40A6:  CALL   1644
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
40AA:  MOVLW  05
40AC:  MOVWF  FEA
40AE:  MOVLW  C0
40B0:  MOVWF  FE9
40B2:  MOVFF  FF2,5E0
40B6:  BCF    FF2.7
40B8:  MOVLW  00
40BA:  CALL   08DE
40BE:  TBLRD*-
40C0:  TBLRD*+
40C2:  MOVF   FF5,W
40C4:  MOVWF  FEE
40C6:  IORLW  00
40C8:  BNZ   40C0
40CA:  MOVLB  5
40CC:  BTFSC  xE0.7
40CE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
40D0:  MOVLW  05
40D2:  MOVWF  xE1
40D4:  MOVLW  C0
40D6:  MOVWF  xE0
40D8:  CLRF   xE2
40DA:  MOVLW  1A
40DC:  MOVWF  xE3
40DE:  CLRF   xE4
40E0:  MOVLW  01
40E2:  MOVWF  xE5
40E4:  MOVLB  0
40E6:  CALL   1644
....................          strcpy(Menus.Letra,"T. Esterilizacion:15m"); 
40EA:  MOVLW  05
40EC:  MOVWF  FEA
40EE:  MOVLW  C0
40F0:  MOVWF  FE9
40F2:  MOVFF  FF2,5E0
40F6:  BCF    FF2.7
40F8:  MOVLW  00
40FA:  CALL   0A6A
40FE:  TBLRD*-
4100:  TBLRD*+
4102:  MOVF   FF5,W
4104:  MOVWF  FEE
4106:  IORLW  00
4108:  BNZ   4100
410A:  MOVLB  5
410C:  BTFSC  xE0.7
410E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
4110:  MOVLW  05
4112:  MOVWF  xE1
4114:  MOVLW  C0
4116:  MOVWF  xE0
4118:  CLRF   xE2
411A:  MOVLW  24
411C:  MOVWF  xE3
411E:  CLRF   xE4
4120:  MOVLW  01
4122:  MOVWF  xE5
4124:  MOVLB  0
4126:  CALL   1644
....................          strcpy(Menus.Letra,"T. Secado= N/A"); 
412A:  MOVLW  05
412C:  MOVWF  FEA
412E:  MOVLW  C0
4130:  MOVWF  FE9
4132:  MOVFF  FF2,5E0
4136:  BCF    FF2.7
4138:  MOVLW  00
413A:  CALL   0A1A
413E:  TBLRD*-
4140:  TBLRD*+
4142:  MOVF   FF5,W
4144:  MOVWF  FEE
4146:  IORLW  00
4148:  BNZ   4140
414A:  MOVLB  5
414C:  BTFSC  xE0.7
414E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4150:  MOVLW  05
4152:  MOVWF  xE1
4154:  MOVLW  C0
4156:  MOVWF  xE0
4158:  CLRF   xE2
415A:  MOVLW  2E
415C:  MOVWF  xE3
415E:  CLRF   xE4
4160:  MOVLW  01
4162:  MOVWF  xE5
4164:  MOVLB  0
4166:  CALL   1644
....................          visual=0; 
416A:  MOVLB  5
416C:  BCF    x29.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
416E:  BSF    F92.3
4170:  BTFSS  F80.3
4172:  BRA    4190
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4174:  MOVLW  1E
4176:  MOVWF  xE1
4178:  MOVLB  0
417A:  CALL   0F70
417E:  MOVLW  01
4180:  MOVLB  5
4182:  MOVWF  x36
4184:  CLRF   xE1
4186:  MOVLB  0
4188:  CALL   0FDA
418C:  MOVLB  5
418E:  BSF    x29.4
....................       }             
....................  
....................       if(RIGHT)// Si oprime derecha 
4190:  BSF    F92.2
4192:  BTFSS  F80.2
4194:  BRA    41D4
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=1;desfoguelento=1;visual=1; 
4196:  CLRF   x58
4198:  CLRF   x59
419A:  MOVLW  05
419C:  MOVWF  x5A
419E:  MOVLW  01
41A0:  MOVWF  x5B
41A2:  BSF    x29.5
41A4:  BSF    x29.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=0;Setpoint=121;Menu=14;delay_ms(700);glcd_fillScreen(OFF);     
41A6:  CLRF   x60
41A8:  CLRF   x61
41AA:  CLRF   x62
41AC:  CLRF   x63
41AE:  MOVLW  79
41B0:  MOVWF  x3B
41B2:  MOVLW  0E
41B4:  MOVWF  x36
41B6:  MOVLW  04
41B8:  MOVWF  xE0
41BA:  MOVLW  AF
41BC:  MOVWF  xE1
41BE:  MOVLB  0
41C0:  CALL   0F70
41C4:  MOVLB  5
41C6:  DECFSZ xE0,F
41C8:  BRA    41BA
41CA:  CLRF   xE1
41CC:  MOVLB  0
41CE:  CALL   0FDA
41D2:  MOVLB  5
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==7){ // Menu de textil e instrumental      
41D4:  MOVF   x36,W
41D6:  SUBLW  07
41D8:  BTFSS  FD8.2
41DA:  BRA    450C
....................        
....................       if(visual==1) 
41DC:  BTFSS  x29.4
41DE:  BRA    4330
....................       { 
....................          glcd_imagen(1); //Tijeras y Camisa 
41E0:  MOVLW  01
41E2:  MOVWF  xE0
41E4:  MOVLB  0
41E6:  CALL   2086
....................          strcpy(Menus.Letra,"Tex & Ins"); 
41EA:  MOVLW  05
41EC:  MOVWF  FEA
41EE:  MOVLW  C0
41F0:  MOVWF  FE9
41F2:  MOVFF  FF2,5E0
41F6:  BCF    FF2.7
41F8:  MOVLW  00
41FA:  CALL   0A9A
41FE:  TBLRD*-
4200:  TBLRD*+
4202:  MOVF   FF5,W
4204:  MOVWF  FEE
4206:  IORLW  00
4208:  BNZ   4200
420A:  MOVLB  5
420C:  BTFSC  xE0.7
420E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4210:  MOVLW  05
4212:  MOVWF  xE1
4214:  MOVLW  C0
4216:  MOVWF  xE0
4218:  CLRF   xE2
421A:  CLRF   xE3
421C:  MOVLW  01
421E:  MOVWF  xE4
4220:  MOVLW  02
4222:  MOVWF  xE5
4224:  MOVLB  0
4226:  CALL   1644
....................        
....................          strcpy(Menus.Letra,"Textil e Instrumental"); 
422A:  MOVLW  05
422C:  MOVWF  FEA
422E:  MOVLW  C0
4230:  MOVWF  FE9
4232:  MOVFF  FF2,5E0
4236:  BCF    FF2.7
4238:  MOVLW  00
423A:  CALL   085E
423E:  TBLRD*-
4240:  TBLRD*+
4242:  MOVF   FF5,W
4244:  MOVWF  FEE
4246:  IORLW  00
4248:  BNZ   4240
424A:  MOVLB  5
424C:  BTFSC  xE0.7
424E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
4250:  MOVLW  05
4252:  MOVWF  xE1
4254:  MOVLW  C0
4256:  MOVWF  xE0
4258:  CLRF   xE2
425A:  MOVLW  37
425C:  MOVWF  xE3
425E:  MOVLW  02
4260:  MOVWF  xE4
4262:  MOVLW  01
4264:  MOVWF  xE5
4266:  MOVLB  0
4268:  CALL   1644
....................           
....................          strcpy(Menus.Letra,"Temperatura:121 C"); 
426C:  MOVLW  05
426E:  MOVWF  FEA
4270:  MOVLW  C0
4272:  MOVWF  FE9
4274:  MOVFF  FF2,5E0
4278:  BCF    FF2.7
427A:  MOVLW  00
427C:  CALL   08DE
4280:  TBLRD*-
4282:  TBLRD*+
4284:  MOVF   FF5,W
4286:  MOVWF  FEE
4288:  IORLW  00
428A:  BNZ   4282
428C:  MOVLB  5
428E:  BTFSC  xE0.7
4290:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,26,0,1); 
4292:  MOVLW  05
4294:  MOVWF  xE1
4296:  MOVLW  C0
4298:  MOVWF  xE0
429A:  CLRF   xE2
429C:  MOVLW  1A
429E:  MOVWF  xE3
42A0:  CLRF   xE4
42A2:  MOVLW  01
42A4:  MOVWF  xE5
42A6:  MOVLB  0
42A8:  CALL   1644
....................          strcpy(Menus.Letra,"T. Esterilizacion:25m"); 
42AC:  MOVLW  05
42AE:  MOVWF  FEA
42B0:  MOVLW  C0
42B2:  MOVWF  FE9
42B4:  MOVFF  FF2,5E0
42B8:  BCF    FF2.7
42BA:  MOVLW  00
42BC:  CALL   090A
42C0:  TBLRD*-
42C2:  TBLRD*+
42C4:  MOVF   FF5,W
42C6:  MOVWF  FEE
42C8:  IORLW  00
42CA:  BNZ   42C2
42CC:  MOVLB  5
42CE:  BTFSC  xE0.7
42D0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,36,0,1); 
42D2:  MOVLW  05
42D4:  MOVWF  xE1
42D6:  MOVLW  C0
42D8:  MOVWF  xE0
42DA:  CLRF   xE2
42DC:  MOVLW  24
42DE:  MOVWF  xE3
42E0:  CLRF   xE4
42E2:  MOVLW  01
42E4:  MOVWF  xE5
42E6:  MOVLB  0
42E8:  CALL   1644
....................          strcpy(Menus.Letra,"T. Secado= 10m"); 
42EC:  MOVLW  05
42EE:  MOVWF  FEA
42F0:  MOVLW  C0
42F2:  MOVWF  FE9
42F4:  MOVFF  FF2,5E0
42F8:  BCF    FF2.7
42FA:  MOVLW  00
42FC:  CALL   0ABE
4300:  TBLRD*-
4302:  TBLRD*+
4304:  MOVF   FF5,W
4306:  MOVWF  FEE
4308:  IORLW  00
430A:  BNZ   4302
430C:  MOVLB  5
430E:  BTFSC  xE0.7
4310:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,46,0,1);            
4312:  MOVLW  05
4314:  MOVWF  xE1
4316:  MOVLW  C0
4318:  MOVWF  xE0
431A:  CLRF   xE2
431C:  MOVLW  2E
431E:  MOVWF  xE3
4320:  CLRF   xE4
4322:  MOVLW  01
4324:  MOVWF  xE5
4326:  MOVLB  0
4328:  CALL   1644
....................          visual=0; 
432C:  MOVLB  5
432E:  BCF    x29.4
....................       } 
....................  
....................       if(LEFT)// Si oprime Izquier|da 
4330:  BSF    F92.3
4332:  BTFSS  F80.3
4334:  BRA    4352
....................       {  
....................          delay_ms(30);Menu=1;glcd_fillScreen(OFF);visual=1; 
4336:  MOVLW  1E
4338:  MOVWF  xE1
433A:  MOVLB  0
433C:  CALL   0F70
4340:  MOVLW  01
4342:  MOVLB  5
4344:  MOVWF  x36
4346:  CLRF   xE1
4348:  MOVLB  0
434A:  CALL   0FDA
434E:  MOVLB  5
4350:  BSF    x29.4
....................       }                  
....................  
....................       if(RIGHT)// Si oprime derecha 
4352:  BSF    F92.2
4354:  BTFSS  F80.2
4356:  BRA    450C
....................       { 
....................          Testerilizacionp[0]=0;Testerilizacionp[1]=0;Testerilizacionp[2]=5;Testerilizacionp[3]=2;visual=1; 
4358:  CLRF   x58
435A:  CLRF   x59
435C:  MOVLW  05
435E:  MOVWF  x5A
4360:  MOVLW  02
4362:  MOVWF  x5B
4364:  BSF    x29.4
....................          Tsecadop[0]=0;Tsecadop[1]=0;Tsecadop[2]=0;Tsecadop[3]=1;Setpoint=121;Menu=20;delay_ms(700); 
4366:  CLRF   x60
4368:  CLRF   x61
436A:  CLRF   x62
436C:  MOVLW  01
436E:  MOVWF  x63
4370:  MOVLW  79
4372:  MOVWF  x3B
4374:  MOVLW  14
4376:  MOVWF  x36
4378:  MOVLW  04
437A:  MOVWF  xE0
437C:  MOVLW  AF
437E:  MOVWF  xE1
4380:  MOVLB  0
4382:  CALL   0F70
4386:  MOVLB  5
4388:  DECFSZ xE0,F
438A:  BRA    437C
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
438C:  MOVLW  14
438E:  MOVWF  x36
4390:  MOVLW  0F
4392:  MOVWF  xF2
4394:  MOVLW  12
4396:  MOVWF  xF3
4398:  MOVLW  1E
439A:  MOVWF  xF4
439C:  MOVLW  35
439E:  MOVWF  xF5
43A0:  CLRF   xF6
43A2:  MOVLW  01
43A4:  MOVWF  xF7
43A6:  MOVLB  0
43A8:  CALL   1582
43AC:  MOVLB  5
43AE:  CLRF   x3F
43B0:  MOVLW  C0
43B2:  IORWF  FF2,F
43B4:  CLRF   xE1
43B6:  MOVLB  0
43B8:  CALL   0FDA
....................          strcpy(Menus.Letra,"Calentando"); 
43BC:  MOVLW  05
43BE:  MOVWF  FEA
43C0:  MOVLW  C0
43C2:  MOVWF  FE9
43C4:  MOVFF  FF2,5E0
43C8:  BCF    FF2.7
43CA:  MOVLW  00
43CC:  CALL   0964
43D0:  TBLRD*-
43D2:  TBLRD*+
43D4:  MOVF   FF5,W
43D6:  MOVWF  FEE
43D8:  IORLW  00
43DA:  BNZ   43D2
43DC:  MOVLB  5
43DE:  BTFSC  xE0.7
43E0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
43E2:  MOVLW  05
43E4:  MOVWF  xE1
43E6:  MOVLW  C0
43E8:  MOVWF  xE0
43EA:  CLRF   xE2
43EC:  MOVLW  37
43EE:  MOVWF  xE3
43F0:  MOVLW  02
43F2:  MOVWF  xE4
43F4:  MOVLW  01
43F6:  MOVWF  xE5
43F8:  MOVLB  0
43FA:  CALL   1644
....................          glcd_rect(15, 18, 30, 53, NO, ON); 
43FE:  MOVLW  0F
4400:  MOVLB  5
4402:  MOVWF  xF2
4404:  MOVLW  12
4406:  MOVWF  xF3
4408:  MOVLW  1E
440A:  MOVWF  xF4
440C:  MOVLW  35
440E:  MOVWF  xF5
4410:  CLRF   xF6
4412:  MOVLW  01
4414:  MOVWF  xF7
4416:  MOVLB  0
4418:  CALL   1582
....................          glcd_imagen(5); 
441C:  MOVLW  05
441E:  MOVLB  5
4420:  MOVWF  xE0
4422:  MOVLB  0
4424:  CALL   2086
....................          strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
4428:  MOVLW  05
442A:  MOVWF  FEA
442C:  MOVLW  C0
442E:  MOVWF  FE9
4430:  MOVFF  FF2,5E0
4434:  BCF    FF2.7
4436:  MOVLW  00
4438:  CALL   098A
443C:  TBLRD*-
443E:  TBLRD*+
4440:  MOVF   FF5,W
4442:  MOVWF  FEE
4444:  IORLW  00
4446:  BNZ   443E
4448:  MOVLB  5
444A:  BTFSC  xE0.7
444C:  BSF    FF2.7
444E:  MOVLW  05
4450:  MOVWF  xE1
4452:  MOVLW  C0
4454:  MOVWF  xE0
4456:  CLRF   xE2
4458:  CLRF   xE3
445A:  MOVLW  02
445C:  MOVWF  xE4
445E:  MOVLW  01
4460:  MOVWF  xE5
4462:  MOVLB  0
4464:  CALL   1644
....................          strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
4468:  MOVLW  05
446A:  MOVWF  FEA
446C:  MOVLW  C0
446E:  MOVWF  FE9
4470:  MOVFF  FF2,5E0
4474:  BCF    FF2.7
4476:  MOVLW  00
4478:  CALL   09AC
447C:  TBLRD*-
447E:  TBLRD*+
4480:  MOVF   FF5,W
4482:  MOVWF  FEE
4484:  IORLW  00
4486:  BNZ   447E
4488:  MOVLB  5
448A:  BTFSC  xE0.7
448C:  BSF    FF2.7
448E:  MOVLW  05
4490:  MOVWF  xE1
4492:  MOVLW  C0
4494:  MOVWF  xE0
4496:  CLRF   xE2
4498:  MOVLW  08
449A:  MOVWF  xE3
449C:  MOVLW  02
449E:  MOVWF  xE4
44A0:  MOVLW  01
44A2:  MOVWF  xE5
44A4:  MOVLB  0
44A6:  CALL   1644
....................          glcd_circle(95,40,2,NO,ON); 
44AA:  MOVLW  5F
44AC:  MOVLB  5
44AE:  MOVWF  xE0
44B0:  MOVLW  28
44B2:  MOVWF  xE1
44B4:  MOVLW  02
44B6:  MOVWF  xE2
44B8:  CLRF   xE3
44BA:  MOVLW  01
44BC:  MOVWF  xE4
44BE:  MOVLB  0
44C0:  CALL   2186
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
44C4:  MOVLW  05
44C6:  MOVWF  FEA
44C8:  MOVLW  C0
44CA:  MOVWF  FE9
44CC:  MOVFF  FF2,5E0
44D0:  BCF    FF2.7
44D2:  MOVLW  00
44D4:  CALL   09CE
44D8:  TBLRD*-
44DA:  TBLRD*+
44DC:  MOVF   FF5,W
44DE:  MOVWF  FEE
44E0:  IORLW  00
44E2:  BNZ   44DA
44E4:  MOVLB  5
44E6:  BTFSC  xE0.7
44E8:  BSF    FF2.7
44EA:  MOVLW  05
44EC:  MOVWF  xE1
44EE:  MOVLW  C0
44F0:  MOVWF  xE0
44F2:  MOVLW  66
44F4:  MOVWF  xE2
44F6:  MOVLW  28
44F8:  MOVWF  xE3
44FA:  MOVLW  02
44FC:  MOVWF  xE4
44FE:  MOVWF  xE5
4500:  MOVLB  0
4502:  CALL   1644
....................          MuestraTiemposProgramados(); 
4506:  CALL   259E
450A:  MOVLB  5
....................       } 
....................      
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
.................... // Testerilizacionp[3]<,Tsecadop[3]<,Setpoint 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==8){ // Menu de Proceso Personalizado 
450C:  MOVF   x36,W
450E:  SUBLW  08
4510:  BTFSS  FD8.2
4512:  BRA    48E0
....................          
....................          if(visual==1) 
4514:  BTFSS  x29.4
4516:  BRA    483C
....................          { 
....................             if(Opcion>5) 
4518:  MOVF   x3D,W
451A:  SUBLW  05
451C:  BC    4522
....................             {Opcion=1;} 
451E:  MOVLW  01
4520:  MOVWF  x3D
....................             if(Opcion<1) 
4522:  MOVF   x3D,F
4524:  BNZ   452A
....................             {Opcion=5;} 
4526:  MOVLW  05
4528:  MOVWF  x3D
....................              
....................             strcpy(Menus.Letra,"Proceso Personalizado"); 
452A:  MOVLW  05
452C:  MOVWF  FEA
452E:  MOVLW  C0
4530:  MOVWF  FE9
4532:  MOVFF  FF2,5E0
4536:  BCF    FF2.7
4538:  MOVLW  00
453A:  MOVLB  0
453C:  CALL   0AE8
4540:  TBLRD*-
4542:  TBLRD*+
4544:  MOVF   FF5,W
4546:  MOVWF  FEE
4548:  IORLW  00
454A:  BNZ   4542
454C:  MOVLB  5
454E:  BTFSC  xE0.7
4550:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1); 
4552:  MOVLW  05
4554:  MOVWF  xE1
4556:  MOVLW  C0
4558:  MOVWF  xE0
455A:  CLRF   xE2
455C:  CLRF   xE3
455E:  MOVLW  01
4560:  MOVWF  xE4
4562:  MOVWF  xE5
4564:  MOVLB  0
4566:  CALL   1644
....................        
....................             if(Opcion==1)    
456A:  MOVLB  5
456C:  DECFSZ x3D,W
456E:  BRA    45B6
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
4570:  MOVLW  05
4572:  MOVWF  FEA
4574:  MOVLW  C0
4576:  MOVWF  FE9
4578:  MOVFF  FF2,5E0
457C:  BCF    FF2.7
457E:  MOVLW  00
4580:  MOVLB  0
4582:  CALL   0B18
4586:  TBLRD*-
4588:  TBLRD*+
458A:  MOVF   FF5,W
458C:  MOVWF  FEE
458E:  IORLW  00
4590:  BNZ   4588
4592:  MOVLB  5
4594:  BTFSC  xE0.7
4596:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,1,1);} 
4598:  MOVLW  05
459A:  MOVWF  xE1
459C:  MOVLW  C0
459E:  MOVWF  xE0
45A0:  CLRF   xE2
45A2:  MOVLW  0A
45A4:  MOVWF  xE3
45A6:  MOVLW  01
45A8:  MOVWF  xE4
45AA:  MOVWF  xE5
45AC:  MOVLB  0
45AE:  CALL   1644
....................             else 
45B2:  BRA    45F8
45B4:  MOVLB  5
....................                {strcpy(Menus.Letra,"T. Esterilizacion"); 
45B6:  MOVLW  05
45B8:  MOVWF  FEA
45BA:  MOVLW  C0
45BC:  MOVWF  FE9
45BE:  MOVFF  FF2,5E0
45C2:  BCF    FF2.7
45C4:  MOVLW  00
45C6:  MOVLB  0
45C8:  CALL   0B18
45CC:  TBLRD*-
45CE:  TBLRD*+
45D0:  MOVF   FF5,W
45D2:  MOVWF  FEE
45D4:  IORLW  00
45D6:  BNZ   45CE
45D8:  MOVLB  5
45DA:  BTFSC  xE0.7
45DC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,10,0,1);} 
45DE:  MOVLW  05
45E0:  MOVWF  xE1
45E2:  MOVLW  C0
45E4:  MOVWF  xE0
45E6:  CLRF   xE2
45E8:  MOVLW  0A
45EA:  MOVWF  xE3
45EC:  CLRF   xE4
45EE:  MOVLW  01
45F0:  MOVWF  xE5
45F2:  MOVLB  0
45F4:  CALL   1644
....................              
....................             if(Opcion==2)    
45F8:  MOVLB  5
45FA:  MOVF   x3D,W
45FC:  SUBLW  02
45FE:  BNZ   4646
....................                {strcpy(Menus.Letra,"T. Secado"); 
4600:  MOVLW  05
4602:  MOVWF  FEA
4604:  MOVLW  C0
4606:  MOVWF  FE9
4608:  MOVFF  FF2,5E0
460C:  BCF    FF2.7
460E:  MOVLW  00
4610:  MOVLB  0
4612:  CALL   0B44
4616:  TBLRD*-
4618:  TBLRD*+
461A:  MOVF   FF5,W
461C:  MOVWF  FEE
461E:  IORLW  00
4620:  BNZ   4618
4622:  MOVLB  5
4624:  BTFSC  xE0.7
4626:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,1,1);} 
4628:  MOVLW  05
462A:  MOVWF  xE1
462C:  MOVLW  C0
462E:  MOVWF  xE0
4630:  CLRF   xE2
4632:  MOVLW  14
4634:  MOVWF  xE3
4636:  MOVLW  01
4638:  MOVWF  xE4
463A:  MOVWF  xE5
463C:  MOVLB  0
463E:  CALL   1644
....................             else 
4642:  BRA    4688
4644:  MOVLB  5
....................                {strcpy(Menus.Letra,"T. Secado"); 
4646:  MOVLW  05
4648:  MOVWF  FEA
464A:  MOVLW  C0
464C:  MOVWF  FE9
464E:  MOVFF  FF2,5E0
4652:  BCF    FF2.7
4654:  MOVLW  00
4656:  MOVLB  0
4658:  CALL   0B44
465C:  TBLRD*-
465E:  TBLRD*+
4660:  MOVF   FF5,W
4662:  MOVWF  FEE
4664:  IORLW  00
4666:  BNZ   465E
4668:  MOVLB  5
466A:  BTFSC  xE0.7
466C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,20,0,1);}    
466E:  MOVLW  05
4670:  MOVWF  xE1
4672:  MOVLW  C0
4674:  MOVWF  xE0
4676:  CLRF   xE2
4678:  MOVLW  14
467A:  MOVWF  xE3
467C:  CLRF   xE4
467E:  MOVLW  01
4680:  MOVWF  xE5
4682:  MOVLB  0
4684:  CALL   1644
....................                 
....................              if(Opcion==3)    
4688:  MOVLB  5
468A:  MOVF   x3D,W
468C:  SUBLW  03
468E:  BNZ   46D6
....................                {strcpy(Menus.Letra,"Temperatura"); 
4690:  MOVLW  05
4692:  MOVWF  FEA
4694:  MOVLW  C0
4696:  MOVWF  FE9
4698:  MOVFF  FF2,5E0
469C:  BCF    FF2.7
469E:  MOVLW  00
46A0:  MOVLB  0
46A2:  CALL   0B68
46A6:  TBLRD*-
46A8:  TBLRD*+
46AA:  MOVF   FF5,W
46AC:  MOVWF  FEE
46AE:  IORLW  00
46B0:  BNZ   46A8
46B2:  MOVLB  5
46B4:  BTFSC  xE0.7
46B6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,1,1);} 
46B8:  MOVLW  05
46BA:  MOVWF  xE1
46BC:  MOVLW  C0
46BE:  MOVWF  xE0
46C0:  CLRF   xE2
46C2:  MOVLW  1E
46C4:  MOVWF  xE3
46C6:  MOVLW  01
46C8:  MOVWF  xE4
46CA:  MOVWF  xE5
46CC:  MOVLB  0
46CE:  CALL   1644
....................             else 
46D2:  BRA    4718
46D4:  MOVLB  5
....................                {strcpy(Menus.Letra,"Temperatura"); 
46D6:  MOVLW  05
46D8:  MOVWF  FEA
46DA:  MOVLW  C0
46DC:  MOVWF  FE9
46DE:  MOVFF  FF2,5E0
46E2:  BCF    FF2.7
46E4:  MOVLW  00
46E6:  MOVLB  0
46E8:  CALL   0B68
46EC:  TBLRD*-
46EE:  TBLRD*+
46F0:  MOVF   FF5,W
46F2:  MOVWF  FEE
46F4:  IORLW  00
46F6:  BNZ   46EE
46F8:  MOVLB  5
46FA:  BTFSC  xE0.7
46FC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,1);} 
46FE:  MOVLW  05
4700:  MOVWF  xE1
4702:  MOVLW  C0
4704:  MOVWF  xE0
4706:  CLRF   xE2
4708:  MOVLW  1E
470A:  MOVWF  xE3
470C:  CLRF   xE4
470E:  MOVLW  01
4710:  MOVWF  xE5
4712:  MOVLB  0
4714:  CALL   1644
....................                 
....................             if(Opcion==4)    
4718:  MOVLB  5
471A:  MOVF   x3D,W
471C:  SUBLW  04
471E:  BNZ   4766
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4720:  MOVLW  05
4722:  MOVWF  FEA
4724:  MOVLW  C0
4726:  MOVWF  FE9
4728:  MOVFF  FF2,5E0
472C:  BCF    FF2.7
472E:  MOVLW  00
4730:  MOVLB  0
4732:  CALL   0B8E
4736:  TBLRD*-
4738:  TBLRD*+
473A:  MOVF   FF5,W
473C:  MOVWF  FEE
473E:  IORLW  00
4740:  BNZ   4738
4742:  MOVLB  5
4744:  BTFSC  xE0.7
4746:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,1,1);} 
4748:  MOVLW  05
474A:  MOVWF  xE1
474C:  MOVLW  C0
474E:  MOVWF  xE0
4750:  CLRF   xE2
4752:  MOVLW  28
4754:  MOVWF  xE3
4756:  MOVLW  01
4758:  MOVWF  xE4
475A:  MOVWF  xE5
475C:  MOVLB  0
475E:  CALL   1644
....................             else 
4762:  BRA    47A8
4764:  MOVLB  5
....................                {strcpy(Menus.Letra,"Nivel de desfogue"); 
4766:  MOVLW  05
4768:  MOVWF  FEA
476A:  MOVLW  C0
476C:  MOVWF  FE9
476E:  MOVFF  FF2,5E0
4772:  BCF    FF2.7
4774:  MOVLW  00
4776:  MOVLB  0
4778:  CALL   0B8E
477C:  TBLRD*-
477E:  TBLRD*+
4780:  MOVF   FF5,W
4782:  MOVWF  FEE
4784:  IORLW  00
4786:  BNZ   477E
4788:  MOVLB  5
478A:  BTFSC  xE0.7
478C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,40,0,1);}    
478E:  MOVLW  05
4790:  MOVWF  xE1
4792:  MOVLW  C0
4794:  MOVWF  xE0
4796:  CLRF   xE2
4798:  MOVLW  28
479A:  MOVWF  xE3
479C:  CLRF   xE4
479E:  MOVLW  01
47A0:  MOVWF  xE5
47A2:  MOVLB  0
47A4:  CALL   1644
....................                 
....................             if(Opcion==5)    
47A8:  MOVLB  5
47AA:  MOVF   x3D,W
47AC:  SUBLW  05
47AE:  BNZ   47F6
....................                {strcpy(Menus.Letra,"Continuar"); 
47B0:  MOVLW  05
47B2:  MOVWF  FEA
47B4:  MOVLW  C0
47B6:  MOVWF  FE9
47B8:  MOVFF  FF2,5E0
47BC:  BCF    FF2.7
47BE:  MOVLW  00
47C0:  MOVLB  0
47C2:  CALL   0BBA
47C6:  TBLRD*-
47C8:  TBLRD*+
47CA:  MOVF   FF5,W
47CC:  MOVWF  FEE
47CE:  IORLW  00
47D0:  BNZ   47C8
47D2:  MOVLB  5
47D4:  BTFSC  xE0.7
47D6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,1,1);} 
47D8:  MOVLW  05
47DA:  MOVWF  xE1
47DC:  MOVLW  C0
47DE:  MOVWF  xE0
47E0:  CLRF   xE2
47E2:  MOVLW  32
47E4:  MOVWF  xE3
47E6:  MOVLW  01
47E8:  MOVWF  xE4
47EA:  MOVWF  xE5
47EC:  MOVLB  0
47EE:  CALL   1644
....................             else 
47F2:  BRA    4838
47F4:  MOVLB  5
....................                {strcpy(Menus.Letra,"Continuar"); 
47F6:  MOVLW  05
47F8:  MOVWF  FEA
47FA:  MOVLW  C0
47FC:  MOVWF  FE9
47FE:  MOVFF  FF2,5E0
4802:  BCF    FF2.7
4804:  MOVLW  00
4806:  MOVLB  0
4808:  CALL   0BBA
480C:  TBLRD*-
480E:  TBLRD*+
4810:  MOVF   FF5,W
4812:  MOVWF  FEE
4814:  IORLW  00
4816:  BNZ   480E
4818:  MOVLB  5
481A:  BTFSC  xE0.7
481C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,50,0,1);}   
481E:  MOVLW  05
4820:  MOVWF  xE1
4822:  MOVLW  C0
4824:  MOVWF  xE0
4826:  CLRF   xE2
4828:  MOVLW  32
482A:  MOVWF  xE3
482C:  CLRF   xE4
482E:  MOVLW  01
4830:  MOVWF  xE5
4832:  MOVLB  0
4834:  CALL   1644
....................                           
....................             visual=0; 
4838:  MOVLB  5
483A:  BCF    x29.4
....................          } 
....................          if(UP)//Si oprime hacia arriba 
483C:  BSF    F92.0
483E:  BTFSS  F80.0
4840:  BRA    485A
....................          {  if(Flanco == 0)  
4842:  BTFSC  x29.0
4844:  BRA    4858
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4846:  BSF    x29.0
4848:  MOVLW  1E
484A:  MOVWF  xE1
484C:  MOVLB  0
484E:  CALL   0F70
4852:  MOVLB  5
4854:  DECF   x3D,F
4856:  BSF    x29.4
....................                } 
....................          } 
....................             else 
4858:  BRA    485C
....................                {Flanco = 0;} 
485A:  BCF    x29.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
485C:  BSF    F92.1
485E:  BTFSS  F80.1
4860:  BRA    487A
....................          {  if(Flanco2 == 0)  
4862:  BTFSC  x29.2
4864:  BRA    4878
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4866:  BSF    x29.2
4868:  MOVLW  1E
486A:  MOVWF  xE1
486C:  MOVLB  0
486E:  CALL   0F70
4872:  MOVLB  5
4874:  INCF   x3D,F
4876:  BSF    x29.4
....................                }      
....................          } 
....................             else 
4878:  BRA    487C
....................                {Flanco2 = 0;}   
487A:  BCF    x29.2
....................                 
....................          if(RIGHT)//Si oprime SET 
487C:  BSF    F92.2
487E:  BTFSS  F80.2
4880:  BRA    48B4
....................          {  if(Flanco1 == 0)  
4882:  BTFSC  x29.1
4884:  BRA    48B2
....................                {Flanco1 = 1;delay_ms(300);Menu=Opcion+10;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4886:  BSF    x29.1
4888:  MOVLW  02
488A:  MOVWF  xE0
488C:  MOVLW  96
488E:  MOVWF  xE1
4890:  MOVLB  0
4892:  CALL   0F70
4896:  MOVLB  5
4898:  DECFSZ xE0,F
489A:  BRA    488C
489C:  MOVLW  0A
489E:  ADDWF  x3D,W
48A0:  MOVWF  x36
48A2:  MOVLW  01
48A4:  MOVWF  x3D
48A6:  CLRF   xE1
48A8:  MOVLB  0
48AA:  CALL   0FDA
48AE:  MOVLB  5
48B0:  BSF    x29.4
....................                } 
....................          } 
....................             else 
48B2:  BRA    48B6
....................                {Flanco1 = 0;}   
48B4:  BCF    x29.1
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
48B6:  BSF    F92.3
48B8:  BTFSS  F80.3
48BA:  BRA    48E0
....................          {delay_ms(700);Menu=1;glcd_fillscreen(OFF);visual=1;} 
48BC:  MOVLW  04
48BE:  MOVWF  xE0
48C0:  MOVLW  AF
48C2:  MOVWF  xE1
48C4:  MOVLB  0
48C6:  CALL   0F70
48CA:  MOVLB  5
48CC:  DECFSZ xE0,F
48CE:  BRA    48C0
48D0:  MOVLW  01
48D2:  MOVWF  x36
48D4:  CLRF   xE1
48D6:  MOVLB  0
48D8:  CALL   0FDA
48DC:  MOVLB  5
48DE:  BSF    x29.4
....................           
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==9){ // Menu de Cambio de Contraseña 
48E0:  MOVF   x36,W
48E2:  SUBLW  09
48E4:  BTFSS  FD8.2
48E6:  BRA    4D80
....................          
....................       strcpy(Menus.Letra,"Clave"); 
48E8:  MOVLW  05
48EA:  MOVWF  FEA
48EC:  MOVLW  C0
48EE:  MOVWF  FE9
48F0:  MOVFF  FF2,5E0
48F4:  BCF    FF2.7
48F6:  MOVLW  00
48F8:  MOVLB  0
48FA:  CALL   0756
48FE:  TBLRD*-
4900:  TBLRD*+
4902:  MOVF   FF5,W
4904:  MOVWF  FEE
4906:  IORLW  00
4908:  BNZ   4900
490A:  MOVLB  5
490C:  BTFSC  xE0.7
490E:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4910:  MOVLW  05
4912:  MOVWF  xE1
4914:  MOVLW  C0
4916:  MOVWF  xE0
4918:  MOVLW  1E
491A:  MOVWF  xE2
491C:  CLRF   xE3
491E:  MOVLW  01
4920:  MOVWF  xE4
4922:  MOVLW  02
4924:  MOVWF  xE5
4926:  MOVLB  0
4928:  CALL   1644
....................        
....................       if(unidad==1) 
492C:  MOVLB  5
492E:  DECFSZ x37,W
4930:  BRA    498E
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
4932:  MOVFF  564,5E2
4936:  MOVLW  14
4938:  MOVWF  xE3
493A:  MOVLW  1E
493C:  MOVWF  xE4
493E:  MOVLW  01
4940:  MOVWF  xE5
4942:  MOVLB  0
4944:  CALL   186A
....................          displayContrasena(Contrasena[1],40,30,0); 
4948:  MOVFF  565,5E2
494C:  MOVLW  28
494E:  MOVLB  5
4950:  MOVWF  xE3
4952:  MOVLW  1E
4954:  MOVWF  xE4
4956:  CLRF   xE5
4958:  MOVLB  0
495A:  CALL   186A
....................          displayContrasena(Contrasena[2],60,30,0); 
495E:  MOVFF  566,5E2
4962:  MOVLW  3C
4964:  MOVLB  5
4966:  MOVWF  xE3
4968:  MOVLW  1E
496A:  MOVWF  xE4
496C:  CLRF   xE5
496E:  MOVLB  0
4970:  CALL   186A
....................          displayContrasena(Contrasena[3],80,30,0); 
4974:  MOVFF  567,5E2
4978:  MOVLW  50
497A:  MOVLB  5
497C:  MOVWF  xE3
497E:  MOVLW  1E
4980:  MOVWF  xE4
4982:  CLRF   xE5
4984:  MOVLB  0
4986:  CALL   186A
....................       } 
....................       else 
498A:  BRA    4AB0
498C:  MOVLB  5
....................       { 
....................          if(unidad==2) 
498E:  MOVF   x37,W
4990:  SUBLW  02
4992:  BNZ   49F0
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
4994:  MOVFF  564,5E2
4998:  MOVLW  14
499A:  MOVWF  xE3
499C:  MOVLW  1E
499E:  MOVWF  xE4
49A0:  CLRF   xE5
49A2:  MOVLB  0
49A4:  CALL   186A
....................             displayContrasena(Contrasena[1],40,30,1); 
49A8:  MOVFF  565,5E2
49AC:  MOVLW  28
49AE:  MOVLB  5
49B0:  MOVWF  xE3
49B2:  MOVLW  1E
49B4:  MOVWF  xE4
49B6:  MOVLW  01
49B8:  MOVWF  xE5
49BA:  MOVLB  0
49BC:  CALL   186A
....................             displayContrasena(Contrasena[2],60,30,0); 
49C0:  MOVFF  566,5E2
49C4:  MOVLW  3C
49C6:  MOVLB  5
49C8:  MOVWF  xE3
49CA:  MOVLW  1E
49CC:  MOVWF  xE4
49CE:  CLRF   xE5
49D0:  MOVLB  0
49D2:  CALL   186A
....................             displayContrasena(Contrasena[3],80,30,0); 
49D6:  MOVFF  567,5E2
49DA:  MOVLW  50
49DC:  MOVLB  5
49DE:  MOVWF  xE3
49E0:  MOVLW  1E
49E2:  MOVWF  xE4
49E4:  CLRF   xE5
49E6:  MOVLB  0
49E8:  CALL   186A
....................          } 
....................          else 
49EC:  BRA    4AB0
49EE:  MOVLB  5
....................          { 
....................             if(unidad==3) 
49F0:  MOVF   x37,W
49F2:  SUBLW  03
49F4:  BNZ   4A52
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
49F6:  MOVFF  564,5E2
49FA:  MOVLW  14
49FC:  MOVWF  xE3
49FE:  MOVLW  1E
4A00:  MOVWF  xE4
4A02:  CLRF   xE5
4A04:  MOVLB  0
4A06:  CALL   186A
....................                displayContrasena(Contrasena[1],40,30,0); 
4A0A:  MOVFF  565,5E2
4A0E:  MOVLW  28
4A10:  MOVLB  5
4A12:  MOVWF  xE3
4A14:  MOVLW  1E
4A16:  MOVWF  xE4
4A18:  CLRF   xE5
4A1A:  MOVLB  0
4A1C:  CALL   186A
....................                displayContrasena(Contrasena[2],60,30,1); 
4A20:  MOVFF  566,5E2
4A24:  MOVLW  3C
4A26:  MOVLB  5
4A28:  MOVWF  xE3
4A2A:  MOVLW  1E
4A2C:  MOVWF  xE4
4A2E:  MOVLW  01
4A30:  MOVWF  xE5
4A32:  MOVLB  0
4A34:  CALL   186A
....................                displayContrasena(Contrasena[3],80,30,0); 
4A38:  MOVFF  567,5E2
4A3C:  MOVLW  50
4A3E:  MOVLB  5
4A40:  MOVWF  xE3
4A42:  MOVLW  1E
4A44:  MOVWF  xE4
4A46:  CLRF   xE5
4A48:  MOVLB  0
4A4A:  CALL   186A
....................             } 
....................             else 
4A4E:  BRA    4AB0
4A50:  MOVLB  5
....................             { 
....................                if(unidad==4) 
4A52:  MOVF   x37,W
4A54:  SUBLW  04
4A56:  BNZ   4AB2
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4A58:  MOVFF  564,5E2
4A5C:  MOVLW  14
4A5E:  MOVWF  xE3
4A60:  MOVLW  1E
4A62:  MOVWF  xE4
4A64:  CLRF   xE5
4A66:  MOVLB  0
4A68:  CALL   186A
....................                   displayContrasena(Contrasena[1],40,30,0); 
4A6C:  MOVFF  565,5E2
4A70:  MOVLW  28
4A72:  MOVLB  5
4A74:  MOVWF  xE3
4A76:  MOVLW  1E
4A78:  MOVWF  xE4
4A7A:  CLRF   xE5
4A7C:  MOVLB  0
4A7E:  CALL   186A
....................                   displayContrasena(Contrasena[2],60,30,0); 
4A82:  MOVFF  566,5E2
4A86:  MOVLW  3C
4A88:  MOVLB  5
4A8A:  MOVWF  xE3
4A8C:  MOVLW  1E
4A8E:  MOVWF  xE4
4A90:  CLRF   xE5
4A92:  MOVLB  0
4A94:  CALL   186A
....................                   displayContrasena(Contrasena[3],80,30,1); 
4A98:  MOVFF  567,5E2
4A9C:  MOVLW  50
4A9E:  MOVLB  5
4AA0:  MOVWF  xE3
4AA2:  MOVLW  1E
4AA4:  MOVWF  xE4
4AA6:  MOVLW  01
4AA8:  MOVWF  xE5
4AAA:  MOVLB  0
4AAC:  CALL   186A
4AB0:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4AB2:  BSF    F92.0
4AB4:  BTFSS  F80.0
4AB6:  BRA    4B1E
....................       { 
....................          if(Flanco == 0) 
4AB8:  BTFSC  x29.0
4ABA:  BRA    4B1C
....................          { 
....................             Flanco = 1;delay_ms(30); 
4ABC:  BSF    x29.0
4ABE:  MOVLW  1E
4AC0:  MOVWF  xE1
4AC2:  MOVLB  0
4AC4:  CALL   0F70
....................             for(i=1;i<=4;i++) 
4AC8:  MOVLW  01
4ACA:  MOVLB  5
4ACC:  MOVWF  x3A
4ACE:  MOVF   x3A,W
4AD0:  SUBLW  04
4AD2:  BNC   4B1C
....................             { 
....................                if(unidad==i) 
4AD4:  MOVF   x3A,W
4AD6:  SUBWF  x37,W
4AD8:  BNZ   4B18
....................                { 
....................                   Contrasena[i-1]++; 
4ADA:  MOVLW  01
4ADC:  SUBWF  x3A,W
4ADE:  CLRF   03
4AE0:  ADDLW  64
4AE2:  MOVWF  FE9
4AE4:  MOVLW  05
4AE6:  ADDWFC 03,W
4AE8:  MOVWF  FEA
4AEA:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4AEC:  MOVLW  01
4AEE:  SUBWF  x3A,W
4AF0:  CLRF   03
4AF2:  ADDLW  64
4AF4:  MOVWF  FE9
4AF6:  MOVLW  05
4AF8:  ADDWFC 03,W
4AFA:  MOVWF  FEA
4AFC:  BTFSC  FEF.7
4AFE:  BRA    4B18
4B00:  MOVF   FEF,W
4B02:  SUBLW  09
4B04:  BC    4B18
....................                   { 
....................                      Contrasena[i-1]=0; 
4B06:  MOVLW  01
4B08:  SUBWF  x3A,W
4B0A:  CLRF   03
4B0C:  ADDLW  64
4B0E:  MOVWF  FE9
4B10:  MOVLW  05
4B12:  ADDWFC 03,W
4B14:  MOVWF  FEA
4B16:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4B18:  INCF   x3A,F
4B1A:  BRA    4ACE
....................          } 
....................       } 
....................       else 
4B1C:  BRA    4B20
....................       { 
....................          Flanco = 0; 
4B1E:  BCF    x29.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4B20:  BSF    F92.1
4B22:  BTFSS  F80.1
4B24:  BRA    4B8A
....................       { 
....................          if(Flanco2 == 0) 
4B26:  BTFSC  x29.2
4B28:  BRA    4B88
....................             {Flanco2 = 1;delay_ms(30); 
4B2A:  BSF    x29.2
4B2C:  MOVLW  1E
4B2E:  MOVWF  xE1
4B30:  MOVLB  0
4B32:  CALL   0F70
....................                for(i=1;i<=4;i++) 
4B36:  MOVLW  01
4B38:  MOVLB  5
4B3A:  MOVWF  x3A
4B3C:  MOVF   x3A,W
4B3E:  SUBLW  04
4B40:  BNC   4B88
....................                { 
....................                   if(unidad==i) 
4B42:  MOVF   x3A,W
4B44:  SUBWF  x37,W
4B46:  BNZ   4B84
....................                   {Contrasena[i-1]--;  
4B48:  MOVLW  01
4B4A:  SUBWF  x3A,W
4B4C:  CLRF   03
4B4E:  ADDLW  64
4B50:  MOVWF  FE9
4B52:  MOVLW  05
4B54:  ADDWFC 03,W
4B56:  MOVWF  FEA
4B58:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4B5A:  MOVLW  01
4B5C:  SUBWF  x3A,W
4B5E:  CLRF   03
4B60:  ADDLW  64
4B62:  MOVWF  FE9
4B64:  MOVLW  05
4B66:  ADDWFC 03,W
4B68:  MOVWF  FEA
4B6A:  BTFSC  FEF.7
4B6C:  BRA    4B70
4B6E:  BRA    4B84
....................                         {Contrasena[i-1]=9;} 
4B70:  MOVLW  01
4B72:  SUBWF  x3A,W
4B74:  CLRF   03
4B76:  ADDLW  64
4B78:  MOVWF  FE9
4B7A:  MOVLW  05
4B7C:  ADDWFC 03,W
4B7E:  MOVWF  FEA
4B80:  MOVLW  09
4B82:  MOVWF  FEF
....................                   } 
....................                }       
4B84:  INCF   x3A,F
4B86:  BRA    4B3C
....................             }      
....................       } 
....................       else 
4B88:  BRA    4B8C
....................       { 
....................          Flanco2 = 0; 
4B8A:  BCF    x29.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4B8C:  BSF    F92.2
4B8E:  BTFSS  F80.2
4B90:  BRA    4BB0
....................       { 
....................          if(Flanco1 == 0) 
4B92:  BTFSC  x29.1
4B94:  BRA    4BAE
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4B96:  BSF    x29.1
4B98:  MOVLW  02
4B9A:  MOVWF  xE0
4B9C:  MOVLW  96
4B9E:  MOVWF  xE1
4BA0:  MOVLB  0
4BA2:  CALL   0F70
4BA6:  MOVLB  5
4BA8:  DECFSZ xE0,F
4BAA:  BRA    4B9C
4BAC:  INCF   x37,F
....................       } 
....................       else 
4BAE:  BRA    4BB2
....................       { 
....................          Flanco1 = 0; 
4BB0:  BCF    x29.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4BB2:  BSF    F92.3
4BB4:  BTFSS  F80.3
4BB6:  BRA    4BDA
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4BB8:  MOVLW  04
4BBA:  MOVWF  xE0
4BBC:  MOVLW  AF
4BBE:  MOVWF  xE1
4BC0:  MOVLB  0
4BC2:  CALL   0F70
4BC6:  MOVLB  5
4BC8:  DECFSZ xE0,F
4BCA:  BRA    4BBC
4BCC:  MOVLW  01
4BCE:  MOVWF  x36
4BD0:  CLRF   xE1
4BD2:  MOVLB  0
4BD4:  CALL   0FDA
4BD8:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
4BDA:  MOVF   x37,W
4BDC:  SUBLW  04
4BDE:  BTFSC  FD8.0
4BE0:  BRA    4D80
....................       {glcd_fillScreen(OFF); 
4BE2:  CLRF   xE1
4BE4:  MOVLB  0
4BE6:  CALL   0FDA
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4BEA:  MOVLB  5
4BEC:  MOVF   x68,W
4BEE:  SUBWF  x64,W
4BF0:  BNZ   4CC0
4BF2:  MOVF   x69,W
4BF4:  SUBWF  x65,W
4BF6:  BNZ   4CC0
4BF8:  MOVF   x6A,W
4BFA:  SUBWF  x66,W
4BFC:  BNZ   4CC0
4BFE:  MOVF   x6B,W
4C00:  SUBWF  x67,W
4C02:  BNZ   4CC0
....................          { 
....................             glcd_fillScreen(OFF); 
4C04:  CLRF   xE1
4C06:  MOVLB  0
4C08:  CALL   0FDA
....................             strcpy(Menus.Letra,"Clave"); 
4C0C:  MOVLW  05
4C0E:  MOVWF  FEA
4C10:  MOVLW  C0
4C12:  MOVWF  FE9
4C14:  MOVFF  FF2,5E0
4C18:  BCF    FF2.7
4C1A:  MOVLW  00
4C1C:  CALL   0756
4C20:  TBLRD*-
4C22:  TBLRD*+
4C24:  MOVF   FF5,W
4C26:  MOVWF  FEE
4C28:  IORLW  00
4C2A:  BNZ   4C22
4C2C:  MOVLB  5
4C2E:  BTFSC  xE0.7
4C30:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4C32:  MOVLW  05
4C34:  MOVWF  xE1
4C36:  MOVLW  C0
4C38:  MOVWF  xE0
4C3A:  MOVLW  1E
4C3C:  MOVWF  xE2
4C3E:  CLRF   xE3
4C40:  CLRF   xE4
4C42:  MOVLW  02
4C44:  MOVWF  xE5
4C46:  MOVLB  0
4C48:  CALL   1644
....................             strcpy(Menus.Letra,"Correcta"); 
4C4C:  MOVLW  05
4C4E:  MOVWF  FEA
4C50:  MOVLW  C0
4C52:  MOVWF  FE9
4C54:  MOVFF  FF2,5E0
4C58:  BCF    FF2.7
4C5A:  MOVLW  00
4C5C:  CALL   0776
4C60:  TBLRD*-
4C62:  TBLRD*+
4C64:  MOVF   FF5,W
4C66:  MOVWF  FEE
4C68:  IORLW  00
4C6A:  BNZ   4C62
4C6C:  MOVLB  5
4C6E:  BTFSC  xE0.7
4C70:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4C72:  MOVLW  05
4C74:  MOVWF  xE1
4C76:  MOVLW  C0
4C78:  MOVWF  xE0
4C7A:  MOVLW  0F
4C7C:  MOVWF  xE2
4C7E:  MOVLW  1E
4C80:  MOVWF  xE3
4C82:  CLRF   xE4
4C84:  MOVLW  02
4C86:  MOVWF  xE5
4C88:  MOVLB  0
4C8A:  CALL   1644
....................             Menu=91;glcd_update();delay_ms(1000); 
4C8E:  MOVLW  5B
4C90:  MOVLB  5
4C92:  MOVWF  x36
4C94:  MOVLB  0
4C96:  CALL   1034
4C9A:  MOVLW  04
4C9C:  MOVLB  5
4C9E:  MOVWF  xE0
4CA0:  MOVLW  FA
4CA2:  MOVWF  xE1
4CA4:  MOVLB  0
4CA6:  CALL   0F70
4CAA:  MOVLB  5
4CAC:  DECFSZ xE0,F
4CAE:  BRA    4CA0
....................             glcd_fillScreen(OFF);unidad=1; 
4CB0:  CLRF   xE1
4CB2:  MOVLB  0
4CB4:  CALL   0FDA
4CB8:  MOVLW  01
4CBA:  MOVLB  5
4CBC:  MOVWF  x37
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4CBE:  BRA    4D80
....................          { 
....................             glcd_fillScreen(OFF); 
4CC0:  CLRF   xE1
4CC2:  MOVLB  0
4CC4:  CALL   0FDA
....................             strcpy(Menus.Letra,"Clave"); 
4CC8:  MOVLW  05
4CCA:  MOVWF  FEA
4CCC:  MOVLW  C0
4CCE:  MOVWF  FE9
4CD0:  MOVFF  FF2,5E0
4CD4:  BCF    FF2.7
4CD6:  MOVLW  00
4CD8:  CALL   0756
4CDC:  TBLRD*-
4CDE:  TBLRD*+
4CE0:  MOVF   FF5,W
4CE2:  MOVWF  FEE
4CE4:  IORLW  00
4CE6:  BNZ   4CDE
4CE8:  MOVLB  5
4CEA:  BTFSC  xE0.7
4CEC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4CEE:  MOVLW  05
4CF0:  MOVWF  xE1
4CF2:  MOVLW  C0
4CF4:  MOVWF  xE0
4CF6:  MOVLW  1E
4CF8:  MOVWF  xE2
4CFA:  CLRF   xE3
4CFC:  CLRF   xE4
4CFE:  MOVLW  02
4D00:  MOVWF  xE5
4D02:  MOVLB  0
4D04:  CALL   1644
....................             strcpy(Menus.Letra,"Incorrecta"); 
4D08:  MOVLW  05
4D0A:  MOVWF  FEA
4D0C:  MOVLW  C0
4D0E:  MOVWF  FE9
4D10:  MOVFF  FF2,5E0
4D14:  BCF    FF2.7
4D16:  MOVLW  00
4D18:  CALL   079A
4D1C:  TBLRD*-
4D1E:  TBLRD*+
4D20:  MOVF   FF5,W
4D22:  MOVWF  FEE
4D24:  IORLW  00
4D26:  BNZ   4D1E
4D28:  MOVLB  5
4D2A:  BTFSC  xE0.7
4D2C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4D2E:  MOVLW  05
4D30:  MOVWF  xE1
4D32:  MOVLW  C0
4D34:  MOVWF  xE0
4D36:  CLRF   xE2
4D38:  MOVLW  1E
4D3A:  MOVWF  xE3
4D3C:  CLRF   xE4
4D3E:  MOVLW  02
4D40:  MOVWF  xE5
4D42:  MOVLB  0
4D44:  CALL   1644
....................             Menu=1;glcd_update();delay_ms(1000); 
4D48:  MOVLW  01
4D4A:  MOVLB  5
4D4C:  MOVWF  x36
4D4E:  MOVLB  0
4D50:  CALL   1034
4D54:  MOVLW  04
4D56:  MOVLB  5
4D58:  MOVWF  xE0
4D5A:  MOVLW  FA
4D5C:  MOVWF  xE1
4D5E:  MOVLB  0
4D60:  CALL   0F70
4D64:  MOVLB  5
4D66:  DECFSZ xE0,F
4D68:  BRA    4D5A
....................             glcd_fillScreen(OFF);unidad=1; 
4D6A:  CLRF   xE1
4D6C:  MOVLB  0
4D6E:  CALL   0FDA
4D72:  MOVLW  01
4D74:  MOVLB  5
4D76:  MOVWF  x37
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4D78:  CLRF   x64
4D7A:  CLRF   x65
4D7C:  CLRF   x66
4D7E:  CLRF   x67
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4D80:  MOVF   x36,W
4D82:  SUBLW  5B
4D84:  BTFSS  FD8.2
4D86:  BRA    514A
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4D88:  MOVLW  05
4D8A:  MOVWF  FEA
4D8C:  MOVLW  C0
4D8E:  MOVWF  FE9
4D90:  MOVFF  FF2,5E0
4D94:  BCF    FF2.7
4D96:  MOVLW  00
4D98:  MOVLB  0
4D9A:  CALL   0BDE
4D9E:  TBLRD*-
4DA0:  TBLRD*+
4DA2:  MOVF   FF5,W
4DA4:  MOVWF  FEE
4DA6:  IORLW  00
4DA8:  BNZ   4DA0
4DAA:  MOVLB  5
4DAC:  BTFSC  xE0.7
4DAE:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4DB0:  MOVLW  05
4DB2:  MOVWF  xE1
4DB4:  MOVLW  C0
4DB6:  MOVWF  xE0
4DB8:  CLRF   xE2
4DBA:  CLRF   xE3
4DBC:  MOVLW  01
4DBE:  MOVWF  xE4
4DC0:  MOVLW  02
4DC2:  MOVWF  xE5
4DC4:  MOVLB  0
4DC6:  CALL   1644
....................        
....................       if(unidad==1) 
4DCA:  MOVLB  5
4DCC:  DECFSZ x37,W
4DCE:  BRA    4E2C
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4DD0:  MOVFF  568,5E2
4DD4:  MOVLW  14
4DD6:  MOVWF  xE3
4DD8:  MOVLW  1E
4DDA:  MOVWF  xE4
4DDC:  MOVLW  01
4DDE:  MOVWF  xE5
4DE0:  MOVLB  0
4DE2:  CALL   186A
....................          displayContrasena(Password[1],40,30,0); 
4DE6:  MOVFF  569,5E2
4DEA:  MOVLW  28
4DEC:  MOVLB  5
4DEE:  MOVWF  xE3
4DF0:  MOVLW  1E
4DF2:  MOVWF  xE4
4DF4:  CLRF   xE5
4DF6:  MOVLB  0
4DF8:  CALL   186A
....................          displayContrasena(Password[2],60,30,0); 
4DFC:  MOVFF  56A,5E2
4E00:  MOVLW  3C
4E02:  MOVLB  5
4E04:  MOVWF  xE3
4E06:  MOVLW  1E
4E08:  MOVWF  xE4
4E0A:  CLRF   xE5
4E0C:  MOVLB  0
4E0E:  CALL   186A
....................          displayContrasena(Password[3],80,30,0); 
4E12:  MOVFF  56B,5E2
4E16:  MOVLW  50
4E18:  MOVLB  5
4E1A:  MOVWF  xE3
4E1C:  MOVLW  1E
4E1E:  MOVWF  xE4
4E20:  CLRF   xE5
4E22:  MOVLB  0
4E24:  CALL   186A
....................       } 
....................       else 
4E28:  BRA    4F4E
4E2A:  MOVLB  5
....................       { 
....................          if(unidad==2) 
4E2C:  MOVF   x37,W
4E2E:  SUBLW  02
4E30:  BNZ   4E8E
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4E32:  MOVFF  568,5E2
4E36:  MOVLW  14
4E38:  MOVWF  xE3
4E3A:  MOVLW  1E
4E3C:  MOVWF  xE4
4E3E:  CLRF   xE5
4E40:  MOVLB  0
4E42:  CALL   186A
....................             displayContrasena(Password[1],40,30,1); 
4E46:  MOVFF  569,5E2
4E4A:  MOVLW  28
4E4C:  MOVLB  5
4E4E:  MOVWF  xE3
4E50:  MOVLW  1E
4E52:  MOVWF  xE4
4E54:  MOVLW  01
4E56:  MOVWF  xE5
4E58:  MOVLB  0
4E5A:  CALL   186A
....................             displayContrasena(Password[2],60,30,0); 
4E5E:  MOVFF  56A,5E2
4E62:  MOVLW  3C
4E64:  MOVLB  5
4E66:  MOVWF  xE3
4E68:  MOVLW  1E
4E6A:  MOVWF  xE4
4E6C:  CLRF   xE5
4E6E:  MOVLB  0
4E70:  CALL   186A
....................             displayContrasena(Password[3],80,30,0); 
4E74:  MOVFF  56B,5E2
4E78:  MOVLW  50
4E7A:  MOVLB  5
4E7C:  MOVWF  xE3
4E7E:  MOVLW  1E
4E80:  MOVWF  xE4
4E82:  CLRF   xE5
4E84:  MOVLB  0
4E86:  CALL   186A
....................          } 
....................          else 
4E8A:  BRA    4F4E
4E8C:  MOVLB  5
....................          { 
....................             if(unidad==3) 
4E8E:  MOVF   x37,W
4E90:  SUBLW  03
4E92:  BNZ   4EF0
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4E94:  MOVFF  568,5E2
4E98:  MOVLW  14
4E9A:  MOVWF  xE3
4E9C:  MOVLW  1E
4E9E:  MOVWF  xE4
4EA0:  CLRF   xE5
4EA2:  MOVLB  0
4EA4:  CALL   186A
....................                displayContrasena(Password[1],40,30,0); 
4EA8:  MOVFF  569,5E2
4EAC:  MOVLW  28
4EAE:  MOVLB  5
4EB0:  MOVWF  xE3
4EB2:  MOVLW  1E
4EB4:  MOVWF  xE4
4EB6:  CLRF   xE5
4EB8:  MOVLB  0
4EBA:  CALL   186A
....................                displayContrasena(Password[2],60,30,1); 
4EBE:  MOVFF  56A,5E2
4EC2:  MOVLW  3C
4EC4:  MOVLB  5
4EC6:  MOVWF  xE3
4EC8:  MOVLW  1E
4ECA:  MOVWF  xE4
4ECC:  MOVLW  01
4ECE:  MOVWF  xE5
4ED0:  MOVLB  0
4ED2:  CALL   186A
....................                displayContrasena(Password[3],80,30,0); 
4ED6:  MOVFF  56B,5E2
4EDA:  MOVLW  50
4EDC:  MOVLB  5
4EDE:  MOVWF  xE3
4EE0:  MOVLW  1E
4EE2:  MOVWF  xE4
4EE4:  CLRF   xE5
4EE6:  MOVLB  0
4EE8:  CALL   186A
....................             } 
....................             else 
4EEC:  BRA    4F4E
4EEE:  MOVLB  5
....................             { 
....................                if(unidad==4) 
4EF0:  MOVF   x37,W
4EF2:  SUBLW  04
4EF4:  BNZ   4F50
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4EF6:  MOVFF  568,5E2
4EFA:  MOVLW  14
4EFC:  MOVWF  xE3
4EFE:  MOVLW  1E
4F00:  MOVWF  xE4
4F02:  CLRF   xE5
4F04:  MOVLB  0
4F06:  CALL   186A
....................                   displayContrasena(Password[1],40,30,0); 
4F0A:  MOVFF  569,5E2
4F0E:  MOVLW  28
4F10:  MOVLB  5
4F12:  MOVWF  xE3
4F14:  MOVLW  1E
4F16:  MOVWF  xE4
4F18:  CLRF   xE5
4F1A:  MOVLB  0
4F1C:  CALL   186A
....................                   displayContrasena(Password[2],60,30,0); 
4F20:  MOVFF  56A,5E2
4F24:  MOVLW  3C
4F26:  MOVLB  5
4F28:  MOVWF  xE3
4F2A:  MOVLW  1E
4F2C:  MOVWF  xE4
4F2E:  CLRF   xE5
4F30:  MOVLB  0
4F32:  CALL   186A
....................                   displayContrasena(Password[3],80,30,1); 
4F36:  MOVFF  56B,5E2
4F3A:  MOVLW  50
4F3C:  MOVLB  5
4F3E:  MOVWF  xE3
4F40:  MOVLW  1E
4F42:  MOVWF  xE4
4F44:  MOVLW  01
4F46:  MOVWF  xE5
4F48:  MOVLB  0
4F4A:  CALL   186A
4F4E:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4F50:  BSF    F92.0
4F52:  BTFSS  F80.0
4F54:  BRA    4FBC
....................       { 
....................          if(Flanco == 0) 
4F56:  BTFSC  x29.0
4F58:  BRA    4FBA
....................          { 
....................             Flanco = 1;delay_ms(30); 
4F5A:  BSF    x29.0
4F5C:  MOVLW  1E
4F5E:  MOVWF  xE1
4F60:  MOVLB  0
4F62:  CALL   0F70
....................             for(i=1;i<=4;i++) 
4F66:  MOVLW  01
4F68:  MOVLB  5
4F6A:  MOVWF  x3A
4F6C:  MOVF   x3A,W
4F6E:  SUBLW  04
4F70:  BNC   4FBA
....................             { 
....................                if(unidad==i) 
4F72:  MOVF   x3A,W
4F74:  SUBWF  x37,W
4F76:  BNZ   4FB6
....................                { 
....................                   Password[i-1]++; 
4F78:  MOVLW  01
4F7A:  SUBWF  x3A,W
4F7C:  CLRF   03
4F7E:  ADDLW  68
4F80:  MOVWF  FE9
4F82:  MOVLW  05
4F84:  ADDWFC 03,W
4F86:  MOVWF  FEA
4F88:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4F8A:  MOVLW  01
4F8C:  SUBWF  x3A,W
4F8E:  CLRF   03
4F90:  ADDLW  68
4F92:  MOVWF  FE9
4F94:  MOVLW  05
4F96:  ADDWFC 03,W
4F98:  MOVWF  FEA
4F9A:  BTFSC  FEF.7
4F9C:  BRA    4FB6
4F9E:  MOVF   FEF,W
4FA0:  SUBLW  09
4FA2:  BC    4FB6
....................                   { 
....................                      Password[i-1]=0; 
4FA4:  MOVLW  01
4FA6:  SUBWF  x3A,W
4FA8:  CLRF   03
4FAA:  ADDLW  68
4FAC:  MOVWF  FE9
4FAE:  MOVLW  05
4FB0:  ADDWFC 03,W
4FB2:  MOVWF  FEA
4FB4:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4FB6:  INCF   x3A,F
4FB8:  BRA    4F6C
....................          } 
....................       } 
....................       else 
4FBA:  BRA    4FBE
....................       { 
....................          Flanco = 0; 
4FBC:  BCF    x29.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4FBE:  BSF    F92.1
4FC0:  BTFSS  F80.1
4FC2:  BRA    5028
....................       { 
....................          if(Flanco2 == 0) 
4FC4:  BTFSC  x29.2
4FC6:  BRA    5026
....................             {Flanco2 = 1;delay_ms(30); 
4FC8:  BSF    x29.2
4FCA:  MOVLW  1E
4FCC:  MOVWF  xE1
4FCE:  MOVLB  0
4FD0:  CALL   0F70
....................                for(i=1;i<=4;i++) 
4FD4:  MOVLW  01
4FD6:  MOVLB  5
4FD8:  MOVWF  x3A
4FDA:  MOVF   x3A,W
4FDC:  SUBLW  04
4FDE:  BNC   5026
....................                { 
....................                   if(unidad==i) 
4FE0:  MOVF   x3A,W
4FE2:  SUBWF  x37,W
4FE4:  BNZ   5022
....................                   { 
....................                      Password[i-1]--; 
4FE6:  MOVLW  01
4FE8:  SUBWF  x3A,W
4FEA:  CLRF   03
4FEC:  ADDLW  68
4FEE:  MOVWF  FE9
4FF0:  MOVLW  05
4FF2:  ADDWFC 03,W
4FF4:  MOVWF  FEA
4FF6:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4FF8:  MOVLW  01
4FFA:  SUBWF  x3A,W
4FFC:  CLRF   03
4FFE:  ADDLW  68
5000:  MOVWF  FE9
5002:  MOVLW  05
5004:  ADDWFC 03,W
5006:  MOVWF  FEA
5008:  BTFSC  FEF.7
500A:  BRA    500E
500C:  BRA    5022
....................                      { 
....................                         Password[i-1]=9; 
500E:  MOVLW  01
5010:  SUBWF  x3A,W
5012:  CLRF   03
5014:  ADDLW  68
5016:  MOVWF  FE9
5018:  MOVLW  05
501A:  ADDWFC 03,W
501C:  MOVWF  FEA
501E:  MOVLW  09
5020:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
5022:  INCF   x3A,F
5024:  BRA    4FDA
....................             }      
....................       } 
....................       else 
5026:  BRA    502A
....................       { 
....................          Flanco2 = 0; 
5028:  BCF    x29.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
502A:  BSF    F92.2
502C:  BTFSS  F80.2
502E:  BRA    504E
....................       { 
....................          if(Flanco1 == 0) 
5030:  BTFSC  x29.1
5032:  BRA    504C
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
5034:  BSF    x29.1
5036:  MOVLW  02
5038:  MOVWF  xE0
503A:  MOVLW  96
503C:  MOVWF  xE1
503E:  MOVLB  0
5040:  CALL   0F70
5044:  MOVLB  5
5046:  DECFSZ xE0,F
5048:  BRA    503A
504A:  INCF   x37,F
....................       } 
....................       else 
504C:  BRA    5050
....................       { 
....................          Flanco1 = 0; 
504E:  BCF    x29.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
5050:  BSF    F92.3
5052:  BTFSS  F80.3
5054:  BRA    5078
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
5056:  MOVLW  04
5058:  MOVWF  xE0
505A:  MOVLW  AF
505C:  MOVWF  xE1
505E:  MOVLB  0
5060:  CALL   0F70
5064:  MOVLB  5
5066:  DECFSZ xE0,F
5068:  BRA    505A
506A:  MOVLW  01
506C:  MOVWF  x36
506E:  CLRF   xE1
5070:  MOVLB  0
5072:  CALL   0FDA
5076:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
5078:  MOVF   x37,W
507A:  SUBLW  04
507C:  BC    514A
....................       { 
....................          Opcion=1;unidad=1; 
507E:  MOVLW  01
5080:  MOVWF  x3D
5082:  MOVWF  x37
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
5084:  MOVLW  0A
5086:  MOVWF  FA9
5088:  MOVFF  568,FA8
508C:  BCF    FA6.6
508E:  BCF    FA6.7
5090:  BSF    FA6.2
5092:  MOVF   FF2,W
5094:  MOVWF  00
5096:  BCF    FF2.7
5098:  MOVLB  F
509A:  MOVLW  55
509C:  MOVWF  FA7
509E:  MOVLW  AA
50A0:  MOVWF  FA7
50A2:  BSF    FA6.1
50A4:  BTFSC  FA6.1
50A6:  BRA    50A4
50A8:  BCF    FA6.2
50AA:  MOVF   00,W
50AC:  IORWF  FF2,F
50AE:  MOVLW  0B
50B0:  MOVWF  FA9
50B2:  MOVFF  569,FA8
50B6:  BCF    FA6.6
50B8:  BCF    FA6.7
50BA:  BSF    FA6.2
50BC:  MOVF   FF2,W
50BE:  MOVWF  00
50C0:  BCF    FF2.7
50C2:  MOVLW  55
50C4:  MOVWF  FA7
50C6:  MOVLW  AA
50C8:  MOVWF  FA7
50CA:  BSF    FA6.1
50CC:  BTFSC  FA6.1
50CE:  BRA    50CC
50D0:  BCF    FA6.2
50D2:  MOVF   00,W
50D4:  IORWF  FF2,F
50D6:  MOVLW  0C
50D8:  MOVWF  FA9
50DA:  MOVFF  56A,FA8
50DE:  BCF    FA6.6
50E0:  BCF    FA6.7
50E2:  BSF    FA6.2
50E4:  MOVF   FF2,W
50E6:  MOVWF  00
50E8:  BCF    FF2.7
50EA:  MOVLW  55
50EC:  MOVWF  FA7
50EE:  MOVLW  AA
50F0:  MOVWF  FA7
50F2:  BSF    FA6.1
50F4:  BTFSC  FA6.1
50F6:  BRA    50F4
50F8:  BCF    FA6.2
50FA:  MOVF   00,W
50FC:  IORWF  FF2,F
50FE:  MOVLW  0D
5100:  MOVWF  FA9
5102:  MOVFF  56B,FA8
5106:  BCF    FA6.6
5108:  BCF    FA6.7
510A:  BSF    FA6.2
510C:  MOVF   FF2,W
510E:  MOVWF  00
5110:  BCF    FF2.7
5112:  MOVLW  55
5114:  MOVWF  FA7
5116:  MOVLW  AA
5118:  MOVWF  FA7
511A:  BSF    FA6.1
511C:  BTFSC  FA6.1
511E:  BRA    511C
5120:  BCF    FA6.2
5122:  MOVF   00,W
5124:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
5126:  MOVLW  04
5128:  MOVLB  5
512A:  MOVWF  xE0
512C:  MOVLW  FA
512E:  MOVWF  xE1
5130:  MOVLB  0
5132:  CALL   0F70
5136:  MOVLB  5
5138:  DECFSZ xE0,F
513A:  BRA    512C
513C:  CLRF   xE1
513E:  MOVLB  0
5140:  CALL   0FDA
5144:  MOVLW  01
5146:  MOVLB  5
5148:  MOVWF  x36
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==11){ // Menu de Tiempo de Esterilización 
514A:  MOVF   x36,W
514C:  SUBLW  0B
514E:  BTFSS  FD8.2
5150:  BRA    543E
....................       
....................       if(visual==1) 
5152:  BTFSS  x29.4
5154:  BRA    52D8
....................       { 
....................          if(unidad<1) 
5156:  MOVF   x37,F
5158:  BNZ   515E
....................          {unidad=4;} 
515A:  MOVLW  04
515C:  MOVWF  x37
....................           
....................          strcpy(Menus.Letra,"T. Ester."); 
515E:  MOVLW  05
5160:  MOVWF  FEA
5162:  MOVLW  C0
5164:  MOVWF  FE9
5166:  MOVFF  FF2,5E0
516A:  BCF    FF2.7
516C:  MOVLW  00
516E:  MOVLB  0
5170:  CALL   0C04
5174:  TBLRD*-
5176:  TBLRD*+
5178:  MOVF   FF5,W
517A:  MOVWF  FEE
517C:  IORLW  00
517E:  BNZ   5176
5180:  MOVLB  5
5182:  BTFSC  xE0.7
5184:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5186:  MOVLW  05
5188:  MOVWF  xE1
518A:  MOVLW  C0
518C:  MOVWF  xE0
518E:  CLRF   xE2
5190:  CLRF   xE3
5192:  MOVLW  01
5194:  MOVWF  xE4
5196:  MOVLW  02
5198:  MOVWF  xE5
519A:  MOVLB  0
519C:  CALL   1644
....................           
....................          if(unidad==4) 
51A0:  MOVLB  5
51A2:  MOVF   x37,W
51A4:  SUBLW  04
51A6:  BNZ   51C6
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
51A8:  MOVFF  55B,5E1
51AC:  MOVLW  14
51AE:  MOVWF  xE2
51B0:  MOVLW  28
51B2:  MOVWF  xE3
51B4:  MOVLW  01
51B6:  MOVWF  xE4
51B8:  MOVLW  02
51BA:  MOVWF  xE5
51BC:  MOVLB  0
51BE:  CALL   244E
....................          else 
51C2:  BRA    51DE
51C4:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
51C6:  MOVFF  55B,5E1
51CA:  MOVLW  14
51CC:  MOVWF  xE2
51CE:  MOVLW  28
51D0:  MOVWF  xE3
51D2:  CLRF   xE4
51D4:  MOVLW  02
51D6:  MOVWF  xE5
51D8:  MOVLB  0
51DA:  CALL   244E
....................           
....................          if(unidad==3) 
51DE:  MOVLB  5
51E0:  MOVF   x37,W
51E2:  SUBLW  03
51E4:  BNZ   5202
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
51E6:  MOVFF  55A,5E1
51EA:  MOVLW  28
51EC:  MOVWF  xE2
51EE:  MOVWF  xE3
51F0:  MOVLW  01
51F2:  MOVWF  xE4
51F4:  MOVLW  02
51F6:  MOVWF  xE5
51F8:  MOVLB  0
51FA:  CALL   244E
....................          else 
51FE:  BRA    5218
5200:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
5202:  MOVFF  55A,5E1
5206:  MOVLW  28
5208:  MOVWF  xE2
520A:  MOVWF  xE3
520C:  CLRF   xE4
520E:  MOVLW  02
5210:  MOVWF  xE5
5212:  MOVLB  0
5214:  CALL   244E
....................           
....................          if(unidad==2) 
5218:  MOVLB  5
521A:  MOVF   x37,W
521C:  SUBLW  02
521E:  BNZ   523E
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
5220:  MOVFF  559,5E1
5224:  MOVLW  46
5226:  MOVWF  xE2
5228:  MOVLW  28
522A:  MOVWF  xE3
522C:  MOVLW  01
522E:  MOVWF  xE4
5230:  MOVLW  02
5232:  MOVWF  xE5
5234:  MOVLB  0
5236:  CALL   244E
....................          else 
523A:  BRA    5256
523C:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
523E:  MOVFF  559,5E1
5242:  MOVLW  46
5244:  MOVWF  xE2
5246:  MOVLW  28
5248:  MOVWF  xE3
524A:  CLRF   xE4
524C:  MOVLW  02
524E:  MOVWF  xE5
5250:  MOVLB  0
5252:  CALL   244E
....................           
....................          if(unidad==1) 
5256:  MOVLB  5
5258:  DECFSZ x37,W
525A:  BRA    527A
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
525C:  MOVFF  558,5E1
5260:  MOVLW  5A
5262:  MOVWF  xE2
5264:  MOVLW  28
5266:  MOVWF  xE3
5268:  MOVLW  01
526A:  MOVWF  xE4
526C:  MOVLW  02
526E:  MOVWF  xE5
5270:  MOVLB  0
5272:  CALL   244E
....................          else 
5276:  BRA    5292
5278:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
527A:  MOVFF  558,5E1
527E:  MOVLW  5A
5280:  MOVWF  xE2
5282:  MOVLW  28
5284:  MOVWF  xE3
5286:  CLRF   xE4
5288:  MOVLW  02
528A:  MOVWF  xE5
528C:  MOVLB  0
528E:  CALL   244E
....................           
....................          strcpy(Menus.Letra,":"); 
5292:  MOVLW  05
5294:  MOVWF  FEA
5296:  MOVLW  C0
5298:  MOVWF  FE9
529A:  MOVFF  FF2,5E0
529E:  BCF    FF2.7
52A0:  MOVLW  00
52A2:  CALL   06BE
52A6:  TBLRD*-
52A8:  TBLRD*+
52AA:  MOVF   FF5,W
52AC:  MOVWF  FEE
52AE:  IORLW  00
52B0:  BNZ   52A8
52B2:  MOVLB  5
52B4:  BTFSC  xE0.7
52B6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);      
52B8:  MOVLW  05
52BA:  MOVWF  xE1
52BC:  MOVLW  C0
52BE:  MOVWF  xE0
52C0:  MOVLW  3C
52C2:  MOVWF  xE2
52C4:  MOVLW  2A
52C6:  MOVWF  xE3
52C8:  MOVLW  02
52CA:  MOVWF  xE4
52CC:  MOVWF  xE5
52CE:  MOVLB  0
52D0:  CALL   1644
....................           
....................          visual=0; 
52D4:  MOVLB  5
52D6:  BCF    x29.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
52D8:  BSF    F92.0
52DA:  BTFSS  F80.0
52DC:  BRA    5318
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
52DE:  MOVLW  01
52E0:  SUBWF  x37,W
52E2:  CLRF   03
52E4:  ADDLW  58
52E6:  MOVWF  FE9
52E8:  MOVLW  05
52EA:  ADDWFC 03,W
52EC:  MOVWF  FEA
52EE:  BTFSC  FEF.7
52F0:  BRA    52F8
52F2:  MOVF   FEF,W
52F4:  SUBLW  08
52F6:  BNC   5318
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
52F8:  MOVLW  1E
52FA:  MOVWF  xE1
52FC:  MOVLB  0
52FE:  CALL   0F70
5302:  MOVLW  01
5304:  MOVLB  5
5306:  SUBWF  x37,W
5308:  CLRF   03
530A:  ADDLW  58
530C:  MOVWF  FE9
530E:  MOVLW  05
5310:  ADDWFC 03,W
5312:  MOVWF  FEA
5314:  INCF   FEF,F
5316:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5318:  BSF    F92.1
531A:  BTFSS  F80.1
531C:  BRA    5358
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
531E:  MOVLW  01
5320:  SUBWF  x37,W
5322:  CLRF   03
5324:  ADDLW  58
5326:  MOVWF  FE9
5328:  MOVLW  05
532A:  ADDWFC 03,W
532C:  MOVWF  FEA
532E:  BTFSC  FEF.7
5330:  BRA    5358
5332:  MOVF   FEF,W
5334:  SUBLW  00
5336:  BC    5358
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
5338:  MOVLW  1E
533A:  MOVWF  xE1
533C:  MOVLB  0
533E:  CALL   0F70
5342:  MOVLW  01
5344:  MOVLB  5
5346:  SUBWF  x37,W
5348:  CLRF   03
534A:  ADDLW  58
534C:  MOVWF  FE9
534E:  MOVLW  05
5350:  ADDWFC 03,W
5352:  MOVWF  FEA
5354:  DECF   FEF,F
5356:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5358:  BSF    F92.2
535A:  BTFSS  F80.2
535C:  BRA    536E
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
535E:  MOVLW  1E
5360:  MOVWF  xE1
5362:  MOVLB  0
5364:  CALL   0F70
5368:  MOVLB  5
536A:  DECF   x37,F
536C:  BSF    x29.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
536E:  BSF    F92.3
5370:  BTFSS  F80.3
5372:  BRA    543E
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5374:  MOVLW  04
5376:  MOVWF  xE0
5378:  MOVLW  AF
537A:  MOVWF  xE1
537C:  MOVLB  0
537E:  CALL   0F70
5382:  MOVLB  5
5384:  DECFSZ xE0,F
5386:  BRA    5378
5388:  MOVLW  08
538A:  MOVWF  x36
538C:  CLRF   xE1
538E:  MOVLB  0
5390:  CALL   0FDA
5394:  MOVLW  01
5396:  MOVLB  5
5398:  MOVWF  x3D
539A:  BSF    x29.4
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
539C:  CLRF   FA9
539E:  MOVFF  558,FA8
53A2:  BCF    FA6.6
53A4:  BCF    FA6.7
53A6:  BSF    FA6.2
53A8:  MOVF   FF2,W
53AA:  MOVWF  00
53AC:  BCF    FF2.7
53AE:  MOVLB  F
53B0:  MOVLW  55
53B2:  MOVWF  FA7
53B4:  MOVLW  AA
53B6:  MOVWF  FA7
53B8:  BSF    FA6.1
53BA:  BTFSC  FA6.1
53BC:  BRA    53BA
53BE:  BCF    FA6.2
53C0:  MOVF   00,W
53C2:  IORWF  FF2,F
53C4:  MOVLW  01
53C6:  MOVWF  FA9
53C8:  MOVFF  559,FA8
53CC:  BCF    FA6.6
53CE:  BCF    FA6.7
53D0:  BSF    FA6.2
53D2:  MOVF   FF2,W
53D4:  MOVWF  00
53D6:  BCF    FF2.7
53D8:  MOVLW  55
53DA:  MOVWF  FA7
53DC:  MOVLW  AA
53DE:  MOVWF  FA7
53E0:  BSF    FA6.1
53E2:  BTFSC  FA6.1
53E4:  BRA    53E2
53E6:  BCF    FA6.2
53E8:  MOVF   00,W
53EA:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
53EC:  MOVLW  02
53EE:  MOVWF  FA9
53F0:  MOVFF  55A,FA8
53F4:  BCF    FA6.6
53F6:  BCF    FA6.7
53F8:  BSF    FA6.2
53FA:  MOVFF  FF2,00
53FE:  BCF    FF2.7
5400:  MOVLW  55
5402:  MOVWF  FA7
5404:  MOVLW  AA
5406:  MOVWF  FA7
5408:  BSF    FA6.1
540A:  BTFSC  FA6.1
540C:  BRA    540A
540E:  BCF    FA6.2
5410:  MOVF   00,W
5412:  IORWF  FF2,F
5414:  MOVLW  03
5416:  MOVWF  FA9
5418:  MOVFF  55B,FA8
541C:  BCF    FA6.6
541E:  BCF    FA6.7
5420:  BSF    FA6.2
5422:  MOVFF  FF2,00
5426:  BCF    FF2.7
5428:  MOVLW  55
542A:  MOVWF  FA7
542C:  MOVLW  AA
542E:  MOVWF  FA7
5430:  BSF    FA6.1
5432:  BTFSC  FA6.1
5434:  BRA    5432
5436:  BCF    FA6.2
5438:  MOVF   00,W
543A:  IORWF  FF2,F
543C:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==12){ // Menu de Tiempo de Secado 
543E:  MOVF   x36,W
5440:  SUBLW  0C
5442:  BTFSS  FD8.2
5444:  BRA    5734
....................       
....................       if(visual==1) 
5446:  BTFSS  x29.4
5448:  BRA    55CC
....................       { 
....................          if(unidad<1) 
544A:  MOVF   x37,F
544C:  BNZ   5452
....................          {unidad=4;} 
544E:  MOVLW  04
5450:  MOVWF  x37
....................           
....................          strcpy(Menus.Letra," Secado"); 
5452:  MOVLW  05
5454:  MOVWF  FEA
5456:  MOVLW  C0
5458:  MOVWF  FE9
545A:  MOVFF  FF2,5E0
545E:  BCF    FF2.7
5460:  MOVLW  00
5462:  MOVLB  0
5464:  CALL   0C28
5468:  TBLRD*-
546A:  TBLRD*+
546C:  MOVF   FF5,W
546E:  MOVWF  FEE
5470:  IORLW  00
5472:  BNZ   546A
5474:  MOVLB  5
5476:  BTFSC  xE0.7
5478:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
547A:  MOVLW  05
547C:  MOVWF  xE1
547E:  MOVLW  C0
5480:  MOVWF  xE0
5482:  CLRF   xE2
5484:  CLRF   xE3
5486:  MOVLW  01
5488:  MOVWF  xE4
548A:  MOVLW  02
548C:  MOVWF  xE5
548E:  MOVLB  0
5490:  CALL   1644
....................           
....................          if(unidad==4) 
5494:  MOVLB  5
5496:  MOVF   x37,W
5498:  SUBLW  04
549A:  BNZ   54BA
....................          {displayTiempo(Tsecadop[3],20,40,1,2);} 
549C:  MOVFF  563,5E1
54A0:  MOVLW  14
54A2:  MOVWF  xE2
54A4:  MOVLW  28
54A6:  MOVWF  xE3
54A8:  MOVLW  01
54AA:  MOVWF  xE4
54AC:  MOVLW  02
54AE:  MOVWF  xE5
54B0:  MOVLB  0
54B2:  CALL   244E
....................          else 
54B6:  BRA    54D2
54B8:  MOVLB  5
....................          {displayTiempo(Tsecadop[3],20,40,0,2);} 
54BA:  MOVFF  563,5E1
54BE:  MOVLW  14
54C0:  MOVWF  xE2
54C2:  MOVLW  28
54C4:  MOVWF  xE3
54C6:  CLRF   xE4
54C8:  MOVLW  02
54CA:  MOVWF  xE5
54CC:  MOVLB  0
54CE:  CALL   244E
....................           
....................          if(unidad==3) 
54D2:  MOVLB  5
54D4:  MOVF   x37,W
54D6:  SUBLW  03
54D8:  BNZ   54F6
....................          {displayTiempo(Tsecadop[2],40,40,1,2);} 
54DA:  MOVFF  562,5E1
54DE:  MOVLW  28
54E0:  MOVWF  xE2
54E2:  MOVWF  xE3
54E4:  MOVLW  01
54E6:  MOVWF  xE4
54E8:  MOVLW  02
54EA:  MOVWF  xE5
54EC:  MOVLB  0
54EE:  CALL   244E
....................          else 
54F2:  BRA    550C
54F4:  MOVLB  5
....................          {displayTiempo(Tsecadop[2],40,40,0,2);} 
54F6:  MOVFF  562,5E1
54FA:  MOVLW  28
54FC:  MOVWF  xE2
54FE:  MOVWF  xE3
5500:  CLRF   xE4
5502:  MOVLW  02
5504:  MOVWF  xE5
5506:  MOVLB  0
5508:  CALL   244E
....................           
....................          if(unidad==2) 
550C:  MOVLB  5
550E:  MOVF   x37,W
5510:  SUBLW  02
5512:  BNZ   5532
....................          {displayTiempo(Tsecadop[1],70,40,1,2);} 
5514:  MOVFF  561,5E1
5518:  MOVLW  46
551A:  MOVWF  xE2
551C:  MOVLW  28
551E:  MOVWF  xE3
5520:  MOVLW  01
5522:  MOVWF  xE4
5524:  MOVLW  02
5526:  MOVWF  xE5
5528:  MOVLB  0
552A:  CALL   244E
....................          else 
552E:  BRA    554A
5530:  MOVLB  5
....................          {displayTiempo(Tsecadop[1],70,40,0,2);} 
5532:  MOVFF  561,5E1
5536:  MOVLW  46
5538:  MOVWF  xE2
553A:  MOVLW  28
553C:  MOVWF  xE3
553E:  CLRF   xE4
5540:  MOVLW  02
5542:  MOVWF  xE5
5544:  MOVLB  0
5546:  CALL   244E
....................           
....................          if(unidad==1) 
554A:  MOVLB  5
554C:  DECFSZ x37,W
554E:  BRA    556E
....................          {displayTiempo(Tsecadop[0],90,40,1,2);} 
5550:  MOVFF  560,5E1
5554:  MOVLW  5A
5556:  MOVWF  xE2
5558:  MOVLW  28
555A:  MOVWF  xE3
555C:  MOVLW  01
555E:  MOVWF  xE4
5560:  MOVLW  02
5562:  MOVWF  xE5
5564:  MOVLB  0
5566:  CALL   244E
....................          else 
556A:  BRA    5586
556C:  MOVLB  5
....................          {displayTiempo(Tsecadop[0],90,40,0,2);} 
556E:  MOVFF  560,5E1
5572:  MOVLW  5A
5574:  MOVWF  xE2
5576:  MOVLW  28
5578:  MOVWF  xE3
557A:  CLRF   xE4
557C:  MOVLW  02
557E:  MOVWF  xE5
5580:  MOVLB  0
5582:  CALL   244E
....................           
....................          strcpy(Menus.Letra,":"); 
5586:  MOVLW  05
5588:  MOVWF  FEA
558A:  MOVLW  C0
558C:  MOVWF  FE9
558E:  MOVFF  FF2,5E0
5592:  BCF    FF2.7
5594:  MOVLW  00
5596:  CALL   06BE
559A:  TBLRD*-
559C:  TBLRD*+
559E:  MOVF   FF5,W
55A0:  MOVWF  FEE
55A2:  IORLW  00
55A4:  BNZ   559C
55A6:  MOVLB  5
55A8:  BTFSC  xE0.7
55AA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);  
55AC:  MOVLW  05
55AE:  MOVWF  xE1
55B0:  MOVLW  C0
55B2:  MOVWF  xE0
55B4:  MOVLW  3C
55B6:  MOVWF  xE2
55B8:  MOVLW  2A
55BA:  MOVWF  xE3
55BC:  MOVLW  02
55BE:  MOVWF  xE4
55C0:  MOVWF  xE5
55C2:  MOVLB  0
55C4:  CALL   1644
....................           
....................          visual=0; 
55C8:  MOVLB  5
55CA:  BCF    x29.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
55CC:  BSF    F92.0
55CE:  BTFSS  F80.0
55D0:  BRA    560C
....................          {   
....................             if(Tsecadop[unidad-1]<9) 
55D2:  MOVLW  01
55D4:  SUBWF  x37,W
55D6:  CLRF   03
55D8:  ADDLW  60
55DA:  MOVWF  FE9
55DC:  MOVLW  05
55DE:  ADDWFC 03,W
55E0:  MOVWF  FEA
55E2:  BTFSC  FEF.7
55E4:  BRA    55EC
55E6:  MOVF   FEF,W
55E8:  SUBLW  08
55EA:  BNC   560C
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]++;visual=1; 
55EC:  MOVLW  1E
55EE:  MOVWF  xE1
55F0:  MOVLB  0
55F2:  CALL   0F70
55F6:  MOVLW  01
55F8:  MOVLB  5
55FA:  SUBWF  x37,W
55FC:  CLRF   03
55FE:  ADDLW  60
5600:  MOVWF  FE9
5602:  MOVLW  05
5604:  ADDWFC 03,W
5606:  MOVWF  FEA
5608:  INCF   FEF,F
560A:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
560C:  BSF    F92.1
560E:  BTFSS  F80.1
5610:  BRA    564C
....................          {   
....................             if(Tsecadop[unidad-1]>0) 
5612:  MOVLW  01
5614:  SUBWF  x37,W
5616:  CLRF   03
5618:  ADDLW  60
561A:  MOVWF  FE9
561C:  MOVLW  05
561E:  ADDWFC 03,W
5620:  MOVWF  FEA
5622:  BTFSC  FEF.7
5624:  BRA    564C
5626:  MOVF   FEF,W
5628:  SUBLW  00
562A:  BC    564C
....................             { 
....................                delay_ms(30);Tsecadop[unidad-1]--;visual=1;      
562C:  MOVLW  1E
562E:  MOVWF  xE1
5630:  MOVLB  0
5632:  CALL   0F70
5636:  MOVLW  01
5638:  MOVLB  5
563A:  SUBWF  x37,W
563C:  CLRF   03
563E:  ADDLW  60
5640:  MOVWF  FE9
5642:  MOVLW  05
5644:  ADDWFC 03,W
5646:  MOVWF  FEA
5648:  DECF   FEF,F
564A:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
564C:  BSF    F92.2
564E:  BTFSS  F80.2
5650:  BRA    5662
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5652:  MOVLW  1E
5654:  MOVWF  xE1
5656:  MOVLB  0
5658:  CALL   0F70
565C:  MOVLB  5
565E:  DECF   x37,F
5660:  BSF    x29.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5662:  BSF    F92.3
5664:  BTFSS  F80.3
5666:  BRA    5734
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5668:  MOVLW  04
566A:  MOVWF  xE0
566C:  MOVLW  AF
566E:  MOVWF  xE1
5670:  MOVLB  0
5672:  CALL   0F70
5676:  MOVLB  5
5678:  DECFSZ xE0,F
567A:  BRA    566C
567C:  MOVLW  08
567E:  MOVWF  x36
5680:  CLRF   xE1
5682:  MOVLB  0
5684:  CALL   0FDA
5688:  MOVLW  01
568A:  MOVLB  5
568C:  MOVWF  x3D
568E:  BSF    x29.4
....................             write_eeprom(4,Tsecadop[0]);write_eeprom(5,Tsecadop[1]); 
5690:  MOVLW  04
5692:  MOVWF  FA9
5694:  MOVFF  560,FA8
5698:  BCF    FA6.6
569A:  BCF    FA6.7
569C:  BSF    FA6.2
569E:  MOVF   FF2,W
56A0:  MOVWF  00
56A2:  BCF    FF2.7
56A4:  MOVLB  F
56A6:  MOVLW  55
56A8:  MOVWF  FA7
56AA:  MOVLW  AA
56AC:  MOVWF  FA7
56AE:  BSF    FA6.1
56B0:  BTFSC  FA6.1
56B2:  BRA    56B0
56B4:  BCF    FA6.2
56B6:  MOVF   00,W
56B8:  IORWF  FF2,F
56BA:  MOVLW  05
56BC:  MOVWF  FA9
56BE:  MOVFF  561,FA8
56C2:  BCF    FA6.6
56C4:  BCF    FA6.7
56C6:  BSF    FA6.2
56C8:  MOVF   FF2,W
56CA:  MOVWF  00
56CC:  BCF    FF2.7
56CE:  MOVLW  55
56D0:  MOVWF  FA7
56D2:  MOVLW  AA
56D4:  MOVWF  FA7
56D6:  BSF    FA6.1
56D8:  BTFSC  FA6.1
56DA:  BRA    56D8
56DC:  BCF    FA6.2
56DE:  MOVF   00,W
56E0:  IORWF  FF2,F
....................             write_eeprom(6,Tsecadop[2]);write_eeprom(7,Tsecadop[3]); 
56E2:  MOVLW  06
56E4:  MOVWF  FA9
56E6:  MOVFF  562,FA8
56EA:  BCF    FA6.6
56EC:  BCF    FA6.7
56EE:  BSF    FA6.2
56F0:  MOVFF  FF2,00
56F4:  BCF    FF2.7
56F6:  MOVLW  55
56F8:  MOVWF  FA7
56FA:  MOVLW  AA
56FC:  MOVWF  FA7
56FE:  BSF    FA6.1
5700:  BTFSC  FA6.1
5702:  BRA    5700
5704:  BCF    FA6.2
5706:  MOVF   00,W
5708:  IORWF  FF2,F
570A:  MOVLW  07
570C:  MOVWF  FA9
570E:  MOVFF  563,FA8
5712:  BCF    FA6.6
5714:  BCF    FA6.7
5716:  BSF    FA6.2
5718:  MOVFF  FF2,00
571C:  BCF    FF2.7
571E:  MOVLW  55
5720:  MOVWF  FA7
5722:  MOVLW  AA
5724:  MOVWF  FA7
5726:  BSF    FA6.1
5728:  BTFSC  FA6.1
572A:  BRA    5728
572C:  BCF    FA6.2
572E:  MOVF   00,W
5730:  IORWF  FF2,F
5732:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==13){ // Menu de Temperatura 
5734:  MOVF   x36,W
5736:  SUBLW  0D
5738:  BTFSS  FD8.2
573A:  BRA    5862
....................       
....................       if(visual==1) 
573C:  BTFSS  x29.4
573E:  BRA    57A4
....................       { 
....................          glcd_fillScreen(OFF); 
5740:  CLRF   xE1
5742:  MOVLB  0
5744:  CALL   0FDA
....................          strcpy(Menus.Letra,"Temperatura"); 
5748:  MOVLW  05
574A:  MOVWF  FEA
574C:  MOVLW  C0
574E:  MOVWF  FE9
5750:  MOVFF  FF2,5E0
5754:  BCF    FF2.7
5756:  MOVLW  00
5758:  CALL   0B68
575C:  TBLRD*-
575E:  TBLRD*+
5760:  MOVF   FF5,W
5762:  MOVWF  FEE
5764:  IORLW  00
5766:  BNZ   575E
5768:  MOVLB  5
576A:  BTFSC  xE0.7
576C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
576E:  MOVLW  05
5770:  MOVWF  xE1
5772:  MOVLW  C0
5774:  MOVWF  xE0
5776:  CLRF   xE2
5778:  CLRF   xE3
577A:  MOVLW  01
577C:  MOVWF  xE4
577E:  MOVLW  02
5780:  MOVWF  xE5
5782:  MOVLB  0
5784:  CALL   1644
....................           
....................          displayTiempo(Setpoint,30,30,0,3); 
5788:  MOVFF  53B,5E1
578C:  MOVLW  1E
578E:  MOVLB  5
5790:  MOVWF  xE2
5792:  MOVWF  xE3
5794:  CLRF   xE4
5796:  MOVLW  03
5798:  MOVWF  xE5
579A:  MOVLB  0
579C:  CALL   244E
....................           
....................          visual=0; 
57A0:  MOVLB  5
57A2:  BCF    x29.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
57A4:  BSF    F92.0
57A6:  BTFSS  F80.0
57A8:  BRA    57D8
....................          {   
....................             if(Setpoint<134) 
57AA:  MOVF   x3B,W
57AC:  SUBLW  85
57AE:  BNC   57D8
....................             { 
....................                if(Setpoint<100) 
57B0:  MOVF   x3B,W
57B2:  SUBLW  63
57B4:  BNC   57C8
....................                { 
....................                   Setpoint=100;delay_ms(100);visual=1; 
57B6:  MOVLW  64
57B8:  MOVWF  x3B
57BA:  MOVWF  xE1
57BC:  MOVLB  0
57BE:  CALL   0F70
57C2:  MOVLB  5
57C4:  BSF    x29.4
....................                } 
....................                else 
57C6:  BRA    57D8
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
57C8:  MOVLW  1E
57CA:  MOVWF  xE1
57CC:  MOVLB  0
57CE:  CALL   0F70
57D2:  MOVLB  5
57D4:  INCF   x3B,F
57D6:  BSF    x29.4
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
57D8:  BSF    F92.1
57DA:  BTFSS  F80.1
57DC:  BRA    57F4
....................          {   
....................             if(Setpoint>105) 
57DE:  MOVF   x3B,W
57E0:  SUBLW  69
57E2:  BC    57F4
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
57E4:  MOVLW  1E
57E6:  MOVWF  xE1
57E8:  MOVLB  0
57EA:  CALL   0F70
57EE:  MOVLB  5
57F0:  DECF   x3B,F
57F2:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
57F4:  BSF    F92.2
57F6:  BTFSS  F80.2
57F8:  BRA    5808
....................          {   
....................             delay_ms(30);visual=1; 
57FA:  MOVLW  1E
57FC:  MOVWF  xE1
57FE:  MOVLB  0
5800:  CALL   0F70
5804:  MOVLB  5
5806:  BSF    x29.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5808:  BSF    F92.3
580A:  BTFSS  F80.3
580C:  BRA    5862
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
580E:  MOVLW  04
5810:  MOVWF  xE0
5812:  MOVLW  AF
5814:  MOVWF  xE1
5816:  MOVLB  0
5818:  CALL   0F70
581C:  MOVLB  5
581E:  DECFSZ xE0,F
5820:  BRA    5812
5822:  MOVLW  08
5824:  MOVWF  x36
5826:  CLRF   xE1
5828:  MOVLB  0
582A:  CALL   0FDA
582E:  MOVLW  01
5830:  MOVLB  5
5832:  MOVWF  x3D
5834:  BSF    x29.4
....................             write_eeprom(8,Setpoint); 
5836:  MOVLW  08
5838:  MOVWF  FA9
583A:  MOVFF  53B,FA8
583E:  BCF    FA6.6
5840:  BCF    FA6.7
5842:  BSF    FA6.2
5844:  MOVF   FF2,W
5846:  MOVWF  00
5848:  BCF    FF2.7
584A:  MOVLB  F
584C:  MOVLW  55
584E:  MOVWF  FA7
5850:  MOVLW  AA
5852:  MOVWF  FA7
5854:  BSF    FA6.1
5856:  BTFSC  FA6.1
5858:  BRA    5856
585A:  BCF    FA6.2
585C:  MOVF   00,W
585E:  IORWF  FF2,F
5860:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==14){ // Menu de Desfogue 
5862:  MOVF   x36,W
5864:  SUBLW  0E
5866:  BTFSS  FD8.2
5868:  BRA    5B4A
....................       if(Nivel>6) 
586A:  MOVF   x4B,F
586C:  BNZ   5874
586E:  MOVF   x4A,W
5870:  SUBLW  06
5872:  BC    587A
....................          Nivel=6; 
5874:  CLRF   x4B
5876:  MOVLW  06
5878:  MOVWF  x4A
....................           
....................       if(visual==1) 
587A:  BTFSS  x29.4
587C:  BRA    58DE
....................       {          
....................          strcpy(Menus.Letra," Desfogue"); 
587E:  MOVLW  05
5880:  MOVWF  FEA
5882:  MOVLW  C0
5884:  MOVWF  FE9
5886:  MOVFF  FF2,5E0
588A:  BCF    FF2.7
588C:  MOVLW  00
588E:  MOVLB  0
5890:  CALL   0C4A
5894:  TBLRD*-
5896:  TBLRD*+
5898:  MOVF   FF5,W
589A:  MOVWF  FEE
589C:  IORLW  00
589E:  BNZ   5896
58A0:  MOVLB  5
58A2:  BTFSC  xE0.7
58A4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
58A6:  MOVLW  05
58A8:  MOVWF  xE1
58AA:  MOVLW  C0
58AC:  MOVWF  xE0
58AE:  CLRF   xE2
58B0:  CLRF   xE3
58B2:  MOVLW  01
58B4:  MOVWF  xE4
58B6:  MOVLW  02
58B8:  MOVWF  xE5
58BA:  MOVLB  0
58BC:  CALL   1644
....................           
....................          displayTiempo(Nivel,50,40,0,2); 
58C0:  MOVFF  54A,5E1
58C4:  MOVLW  32
58C6:  MOVLB  5
58C8:  MOVWF  xE2
58CA:  MOVLW  28
58CC:  MOVWF  xE3
58CE:  CLRF   xE4
58D0:  MOVLW  02
58D2:  MOVWF  xE5
58D4:  MOVLB  0
58D6:  CALL   244E
....................           
....................          visual=0; 
58DA:  MOVLB  5
58DC:  BCF    x29.4
....................       } 
....................        
....................        
....................          if(UP)//Si oprime hacia arriba 
58DE:  BSF    F92.0
58E0:  BTFSS  F80.0
58E2:  BRA    5902
....................          {   
....................             if(Nivel<6) 
58E4:  MOVF   x4B,F
58E6:  BNZ   5902
58E8:  MOVF   x4A,W
58EA:  SUBLW  05
58EC:  BNC   5902
....................             { 
....................                delay_ms(30);Nivel++;visual=1; 
58EE:  MOVLW  1E
58F0:  MOVWF  xE1
58F2:  MOVLB  0
58F4:  CALL   0F70
58F8:  MOVLB  5
58FA:  INCF   x4A,F
58FC:  BTFSC  FD8.2
58FE:  INCF   x4B,F
5900:  BSF    x29.4
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5902:  BSF    F92.1
5904:  BTFSS  F80.1
5906:  BRA    5928
....................          {   
....................             if(Nivel>1) 
5908:  MOVF   x4B,F
590A:  BNZ   5912
590C:  MOVF   x4A,W
590E:  SUBLW  01
5910:  BC    5928
....................             { 
....................                delay_ms(30);Nivel--;visual=1;      
5912:  MOVLW  1E
5914:  MOVWF  xE1
5916:  MOVLB  0
5918:  CALL   0F70
591C:  MOVLB  5
591E:  MOVF   x4A,W
5920:  BTFSC  FD8.2
5922:  DECF   x4B,F
5924:  DECF   x4A,F
5926:  BSF    x29.4
....................             } 
....................          } 
....................           
....................          if(desfoguelento==1) 
5928:  BTFSS  x29.5
592A:  BRA    5AE0
....................          { 
....................             if(RIGHT)//Si oprime SET 
592C:  BSF    F92.2
592E:  BTFSS  F80.2
5930:  BRA    5ADE
....................             {   
....................                write_eeprom(9,Nivel); 
5932:  MOVLW  09
5934:  MOVWF  FA9
5936:  MOVFF  54A,FA8
593A:  BCF    FA6.6
593C:  BCF    FA6.7
593E:  BSF    FA6.2
5940:  MOVF   FF2,W
5942:  MOVWF  00
5944:  BCF    FF2.7
5946:  MOVLB  F
5948:  MOVLW  55
594A:  MOVWF  FA7
594C:  MOVLW  AA
594E:  MOVWF  FA7
5950:  BSF    FA6.1
5952:  BTFSC  FA6.1
5954:  BRA    5952
5956:  BCF    FA6.2
5958:  MOVF   00,W
595A:  IORWF  FF2,F
....................                Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
595C:  MOVLW  14
595E:  MOVLB  5
5960:  MOVWF  x36
5962:  MOVLW  0F
5964:  MOVWF  xF2
5966:  MOVLW  12
5968:  MOVWF  xF3
596A:  MOVLW  1E
596C:  MOVWF  xF4
596E:  MOVLW  35
5970:  MOVWF  xF5
5972:  CLRF   xF6
5974:  MOVLW  01
5976:  MOVWF  xF7
5978:  MOVLB  0
597A:  CALL   1582
597E:  MOVLB  5
5980:  CLRF   x3F
5982:  MOVLW  C0
5984:  IORWF  FF2,F
5986:  CLRF   xE1
5988:  MOVLB  0
598A:  CALL   0FDA
....................                strcpy(Menus.Letra,"Calentando"); 
598E:  MOVLW  05
5990:  MOVWF  FEA
5992:  MOVLW  C0
5994:  MOVWF  FE9
5996:  MOVFF  FF2,5E0
599A:  BCF    FF2.7
599C:  MOVLW  00
599E:  CALL   0964
59A2:  TBLRD*-
59A4:  TBLRD*+
59A6:  MOVF   FF5,W
59A8:  MOVWF  FEE
59AA:  IORLW  00
59AC:  BNZ   59A4
59AE:  MOVLB  5
59B0:  BTFSC  xE0.7
59B2:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
59B4:  MOVLW  05
59B6:  MOVWF  xE1
59B8:  MOVLW  C0
59BA:  MOVWF  xE0
59BC:  CLRF   xE2
59BE:  MOVLW  37
59C0:  MOVWF  xE3
59C2:  MOVLW  02
59C4:  MOVWF  xE4
59C6:  MOVLW  01
59C8:  MOVWF  xE5
59CA:  MOVLB  0
59CC:  CALL   1644
....................                glcd_rect(15, 18, 30, 53, NO, ON); 
59D0:  MOVLW  0F
59D2:  MOVLB  5
59D4:  MOVWF  xF2
59D6:  MOVLW  12
59D8:  MOVWF  xF3
59DA:  MOVLW  1E
59DC:  MOVWF  xF4
59DE:  MOVLW  35
59E0:  MOVWF  xF5
59E2:  CLRF   xF6
59E4:  MOVLW  01
59E6:  MOVWF  xF7
59E8:  MOVLB  0
59EA:  CALL   1582
....................                glcd_imagen(5); 
59EE:  MOVLW  05
59F0:  MOVLB  5
59F2:  MOVWF  xE0
59F4:  MOVLB  0
59F6:  CALL   2086
....................                strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
59FA:  MOVLW  05
59FC:  MOVWF  FEA
59FE:  MOVLW  C0
5A00:  MOVWF  FE9
5A02:  MOVFF  FF2,5E0
5A06:  BCF    FF2.7
5A08:  MOVLW  00
5A0A:  CALL   098A
5A0E:  TBLRD*-
5A10:  TBLRD*+
5A12:  MOVF   FF5,W
5A14:  MOVWF  FEE
5A16:  IORLW  00
5A18:  BNZ   5A10
5A1A:  MOVLB  5
5A1C:  BTFSC  xE0.7
5A1E:  BSF    FF2.7
5A20:  MOVLW  05
5A22:  MOVWF  xE1
5A24:  MOVLW  C0
5A26:  MOVWF  xE0
5A28:  CLRF   xE2
5A2A:  CLRF   xE3
5A2C:  MOVLW  02
5A2E:  MOVWF  xE4
5A30:  MOVLW  01
5A32:  MOVWF  xE5
5A34:  MOVLB  0
5A36:  CALL   1644
....................                strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5A3A:  MOVLW  05
5A3C:  MOVWF  FEA
5A3E:  MOVLW  C0
5A40:  MOVWF  FE9
5A42:  MOVFF  FF2,5E0
5A46:  BCF    FF2.7
5A48:  MOVLW  00
5A4A:  CALL   09AC
5A4E:  TBLRD*-
5A50:  TBLRD*+
5A52:  MOVF   FF5,W
5A54:  MOVWF  FEE
5A56:  IORLW  00
5A58:  BNZ   5A50
5A5A:  MOVLB  5
5A5C:  BTFSC  xE0.7
5A5E:  BSF    FF2.7
5A60:  MOVLW  05
5A62:  MOVWF  xE1
5A64:  MOVLW  C0
5A66:  MOVWF  xE0
5A68:  CLRF   xE2
5A6A:  MOVLW  08
5A6C:  MOVWF  xE3
5A6E:  MOVLW  02
5A70:  MOVWF  xE4
5A72:  MOVLW  01
5A74:  MOVWF  xE5
5A76:  MOVLB  0
5A78:  CALL   1644
....................                glcd_circle(95,40,2,NO,ON); 
5A7C:  MOVLW  5F
5A7E:  MOVLB  5
5A80:  MOVWF  xE0
5A82:  MOVLW  28
5A84:  MOVWF  xE1
5A86:  MOVLW  02
5A88:  MOVWF  xE2
5A8A:  CLRF   xE3
5A8C:  MOVLW  01
5A8E:  MOVWF  xE4
5A90:  MOVLB  0
5A92:  CALL   2186
....................                strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
5A96:  MOVLW  05
5A98:  MOVWF  FEA
5A9A:  MOVLW  C0
5A9C:  MOVWF  FE9
5A9E:  MOVFF  FF2,5E0
5AA2:  BCF    FF2.7
5AA4:  MOVLW  00
5AA6:  CALL   09CE
5AAA:  TBLRD*-
5AAC:  TBLRD*+
5AAE:  MOVF   FF5,W
5AB0:  MOVWF  FEE
5AB2:  IORLW  00
5AB4:  BNZ   5AAC
5AB6:  MOVLB  5
5AB8:  BTFSC  xE0.7
5ABA:  BSF    FF2.7
5ABC:  MOVLW  05
5ABE:  MOVWF  xE1
5AC0:  MOVLW  C0
5AC2:  MOVWF  xE0
5AC4:  MOVLW  66
5AC6:  MOVWF  xE2
5AC8:  MOVLW  28
5ACA:  MOVWF  xE3
5ACC:  MOVLW  02
5ACE:  MOVWF  xE4
5AD0:  MOVWF  xE5
5AD2:  MOVLB  0
5AD4:  CALL   1644
....................                MuestraTiemposProgramados(); 
5AD8:  CALL   259E
5ADC:  MOVLB  5
....................             }       
....................          } 
....................          else 
5ADE:  BRA    5B4A
....................          { 
....................             if(LEFT)//Si oprime boton de Toma. 
5AE0:  BSF    F92.3
5AE2:  BTFSS  F80.3
5AE4:  BRA    5B4A
....................             { 
....................                if(Nivel<6) 
5AE6:  MOVF   x4B,F
5AE8:  BNZ   5AF4
5AEA:  MOVF   x4A,W
5AEC:  SUBLW  05
5AEE:  BNC   5AF4
....................                { 
....................                   desfoguelento=1; 
5AF0:  BSF    x29.5
....................                } 
....................                else 
5AF2:  BRA    5AF6
....................                { 
....................                   desfoguelento=0; 
5AF4:  BCF    x29.5
....................                } 
....................                delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5AF6:  MOVLW  04
5AF8:  MOVWF  xE0
5AFA:  MOVLW  AF
5AFC:  MOVWF  xE1
5AFE:  MOVLB  0
5B00:  CALL   0F70
5B04:  MOVLB  5
5B06:  DECFSZ xE0,F
5B08:  BRA    5AFA
5B0A:  MOVLW  08
5B0C:  MOVWF  x36
5B0E:  CLRF   xE1
5B10:  MOVLB  0
5B12:  CALL   0FDA
5B16:  MOVLW  01
5B18:  MOVLB  5
5B1A:  MOVWF  x3D
5B1C:  BSF    x29.4
....................                write_eeprom(9,Nivel); 
5B1E:  MOVLW  09
5B20:  MOVWF  FA9
5B22:  MOVFF  54A,FA8
5B26:  BCF    FA6.6
5B28:  BCF    FA6.7
5B2A:  BSF    FA6.2
5B2C:  MOVF   FF2,W
5B2E:  MOVWF  00
5B30:  BCF    FF2.7
5B32:  MOVLB  F
5B34:  MOVLW  55
5B36:  MOVWF  FA7
5B38:  MOVLW  AA
5B3A:  MOVWF  FA7
5B3C:  BSF    FA6.1
5B3E:  BTFSC  FA6.1
5B40:  BRA    5B3E
5B42:  BCF    FA6.2
5B44:  MOVF   00,W
5B46:  IORWF  FF2,F
5B48:  MOVLB  5
....................             } 
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==15){ //Menu de Continuar 
5B4A:  MOVF   x36,W
5B4C:  SUBLW  0F
5B4E:  BTFSS  FD8.2
5B50:  BRA    5E74
....................        
....................       if(visual==1) 
5B52:  BTFSS  x29.4
5B54:  BRA    5CBA
....................       { 
....................          strcpy(Menus.Letra,"Continuar"); 
5B56:  MOVLW  05
5B58:  MOVWF  FEA
5B5A:  MOVLW  C0
5B5C:  MOVWF  FE9
5B5E:  MOVFF  FF2,5E0
5B62:  BCF    FF2.7
5B64:  MOVLW  00
5B66:  MOVLB  0
5B68:  CALL   0BBA
5B6C:  TBLRD*-
5B6E:  TBLRD*+
5B70:  MOVF   FF5,W
5B72:  MOVWF  FEE
5B74:  IORLW  00
5B76:  BNZ   5B6E
5B78:  MOVLB  5
5B7A:  BTFSC  xE0.7
5B7C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5B7E:  MOVLW  05
5B80:  MOVWF  xE1
5B82:  MOVLW  C0
5B84:  MOVWF  xE0
5B86:  CLRF   xE2
5B88:  CLRF   xE3
5B8A:  MOVLW  01
5B8C:  MOVWF  xE4
5B8E:  MOVLW  02
5B90:  MOVWF  xE5
5B92:  MOVLB  0
5B94:  CALL   1644
....................           
....................          if(Opcion==2) 
5B98:  MOVLB  5
5B9A:  MOVF   x3D,W
5B9C:  SUBLW  02
5B9E:  BNZ   5C2A
....................          {strcpy(Menus.Letra,"SI"); 
5BA0:  MOVLW  05
5BA2:  MOVWF  FEA
5BA4:  MOVLW  C0
5BA6:  MOVWF  FE9
5BA8:  MOVFF  FF2,5E0
5BAC:  BCF    FF2.7
5BAE:  MOVLW  00
5BB0:  MOVLB  0
5BB2:  CALL   0C6E
5BB6:  TBLRD*-
5BB8:  TBLRD*+
5BBA:  MOVF   FF5,W
5BBC:  MOVWF  FEE
5BBE:  IORLW  00
5BC0:  BNZ   5BB8
5BC2:  MOVLB  5
5BC4:  BTFSC  xE0.7
5BC6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
5BC8:  MOVLW  05
5BCA:  MOVWF  xE1
5BCC:  MOVLW  C0
5BCE:  MOVWF  xE0
5BD0:  MOVLW  32
5BD2:  MOVWF  xE2
5BD4:  MOVLW  19
5BD6:  MOVWF  xE3
5BD8:  MOVLW  01
5BDA:  MOVWF  xE4
5BDC:  MOVLW  02
5BDE:  MOVWF  xE5
5BE0:  MOVLB  0
5BE2:  CALL   1644
....................          strcpy(Menus.Letra,"NO"); 
5BE6:  MOVLW  05
5BE8:  MOVWF  FEA
5BEA:  MOVLW  C0
5BEC:  MOVWF  FE9
5BEE:  MOVFF  FF2,5E0
5BF2:  BCF    FF2.7
5BF4:  MOVLW  00
5BF6:  CALL   0C8C
5BFA:  TBLRD*-
5BFC:  TBLRD*+
5BFE:  MOVF   FF5,W
5C00:  MOVWF  FEE
5C02:  IORLW  00
5C04:  BNZ   5BFC
5C06:  MOVLB  5
5C08:  BTFSC  xE0.7
5C0A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
5C0C:  MOVLW  05
5C0E:  MOVWF  xE1
5C10:  MOVLW  C0
5C12:  MOVWF  xE0
5C14:  MOVLW  32
5C16:  MOVWF  xE2
5C18:  MOVLW  2D
5C1A:  MOVWF  xE3
5C1C:  CLRF   xE4
5C1E:  MOVLW  02
5C20:  MOVWF  xE5
5C22:  MOVLB  0
5C24:  CALL   1644
5C28:  MOVLB  5
....................          } 
....................          if(Opcion==1) 
5C2A:  DECFSZ x3D,W
5C2C:  BRA    5CB8
....................          {strcpy(Menus.Letra,"SI"); 
5C2E:  MOVLW  05
5C30:  MOVWF  FEA
5C32:  MOVLW  C0
5C34:  MOVWF  FE9
5C36:  MOVFF  FF2,5E0
5C3A:  BCF    FF2.7
5C3C:  MOVLW  00
5C3E:  MOVLB  0
5C40:  CALL   0C6E
5C44:  TBLRD*-
5C46:  TBLRD*+
5C48:  MOVF   FF5,W
5C4A:  MOVWF  FEE
5C4C:  IORLW  00
5C4E:  BNZ   5C46
5C50:  MOVLB  5
5C52:  BTFSC  xE0.7
5C54:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
5C56:  MOVLW  05
5C58:  MOVWF  xE1
5C5A:  MOVLW  C0
5C5C:  MOVWF  xE0
5C5E:  MOVLW  32
5C60:  MOVWF  xE2
5C62:  MOVLW  19
5C64:  MOVWF  xE3
5C66:  CLRF   xE4
5C68:  MOVLW  02
5C6A:  MOVWF  xE5
5C6C:  MOVLB  0
5C6E:  CALL   1644
....................          strcpy(Menus.Letra,"NO"); 
5C72:  MOVLW  05
5C74:  MOVWF  FEA
5C76:  MOVLW  C0
5C78:  MOVWF  FE9
5C7A:  MOVFF  FF2,5E0
5C7E:  BCF    FF2.7
5C80:  MOVLW  00
5C82:  CALL   0C8C
5C86:  TBLRD*-
5C88:  TBLRD*+
5C8A:  MOVF   FF5,W
5C8C:  MOVWF  FEE
5C8E:  IORLW  00
5C90:  BNZ   5C88
5C92:  MOVLB  5
5C94:  BTFSC  xE0.7
5C96:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
5C98:  MOVLW  05
5C9A:  MOVWF  xE1
5C9C:  MOVLW  C0
5C9E:  MOVWF  xE0
5CA0:  MOVLW  32
5CA2:  MOVWF  xE2
5CA4:  MOVLW  2D
5CA6:  MOVWF  xE3
5CA8:  MOVLW  01
5CAA:  MOVWF  xE4
5CAC:  MOVLW  02
5CAE:  MOVWF  xE5
5CB0:  MOVLB  0
5CB2:  CALL   1644
5CB6:  MOVLB  5
....................          } 
....................          visual=0; 
5CB8:  BCF    x29.4
....................       } 
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
5CBA:  BSF    F92.0
5CBC:  BTFSS  F80.0
5CBE:  BRA    5CCA
....................       { 
....................          if(Opcion<2) 
5CC0:  MOVF   x3D,W
5CC2:  SUBLW  01
5CC4:  BNC   5CC8
....................          { 
....................             Opcion++; 
5CC6:  INCF   x3D,F
....................          } 
....................          visual=1; 
5CC8:  BSF    x29.4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5CCA:  BSF    F92.1
5CCC:  BTFSS  F80.1
5CCE:  BRA    5CDA
....................       {   
....................          if(Opcion>1) 
5CD0:  MOVF   x3D,W
5CD2:  SUBLW  01
5CD4:  BC    5CD8
....................          { 
....................             Opcion--; 
5CD6:  DECF   x3D,F
....................          }   
....................          visual=1; 
5CD8:  BSF    x29.4
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5CDA:  BSF    F92.2
5CDC:  BTFSS  F80.2
5CDE:  BRA    5E46
....................       {   
....................          if(Opcion==2) 
5CE0:  MOVF   x3D,W
5CE2:  SUBLW  02
5CE4:  BTFSS  FD8.2
5CE6:  BRA    5E1E
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;enable_interrupts(global);glcd_fillScreen(OFF); 
5CE8:  MOVLW  14
5CEA:  MOVWF  x36
5CEC:  MOVLW  0F
5CEE:  MOVWF  xF2
5CF0:  MOVLW  12
5CF2:  MOVWF  xF3
5CF4:  MOVLW  1E
5CF6:  MOVWF  xF4
5CF8:  MOVLW  35
5CFA:  MOVWF  xF5
5CFC:  CLRF   xF6
5CFE:  MOVLW  01
5D00:  MOVWF  xF7
5D02:  MOVLB  0
5D04:  CALL   1582
5D08:  MOVLB  5
5D0A:  CLRF   x3F
5D0C:  MOVLW  C0
5D0E:  IORWF  FF2,F
5D10:  CLRF   xE1
5D12:  MOVLB  0
5D14:  CALL   0FDA
....................             strcpy(Menus.Letra,"Calentando"); 
5D18:  MOVLW  05
5D1A:  MOVWF  FEA
5D1C:  MOVLW  C0
5D1E:  MOVWF  FE9
5D20:  MOVFF  FF2,5E0
5D24:  BCF    FF2.7
5D26:  MOVLW  00
5D28:  CALL   0964
5D2C:  TBLRD*-
5D2E:  TBLRD*+
5D30:  MOVF   FF5,W
5D32:  MOVWF  FEE
5D34:  IORLW  00
5D36:  BNZ   5D2E
5D38:  MOVLB  5
5D3A:  BTFSC  xE0.7
5D3C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5D3E:  MOVLW  05
5D40:  MOVWF  xE1
5D42:  MOVLW  C0
5D44:  MOVWF  xE0
5D46:  CLRF   xE2
5D48:  MOVLW  37
5D4A:  MOVWF  xE3
5D4C:  MOVLW  02
5D4E:  MOVWF  xE4
5D50:  MOVLW  01
5D52:  MOVWF  xE5
5D54:  MOVLB  0
5D56:  CALL   1644
....................             glcd_rect(15, 18, 30, 53, NO, ON); 
5D5A:  MOVLW  0F
5D5C:  MOVLB  5
5D5E:  MOVWF  xF2
5D60:  MOVLW  12
5D62:  MOVWF  xF3
5D64:  MOVLW  1E
5D66:  MOVWF  xF4
5D68:  MOVLW  35
5D6A:  MOVWF  xF5
5D6C:  CLRF   xF6
5D6E:  MOVLW  01
5D70:  MOVWF  xF7
5D72:  MOVLB  0
5D74:  CALL   1582
....................             glcd_imagen(5); 
5D78:  MOVLW  05
5D7A:  MOVLB  5
5D7C:  MOVWF  xE0
5D7E:  MOVLB  0
5D80:  CALL   2086
....................             strcpy(Menus.Letra,"T est:");displayMenu(Menus.Letra,0,0,2,1); 
5D84:  MOVLW  05
5D86:  MOVWF  FEA
5D88:  MOVLW  C0
5D8A:  MOVWF  FE9
5D8C:  MOVFF  FF2,5E0
5D90:  BCF    FF2.7
5D92:  MOVLW  00
5D94:  CALL   098A
5D98:  TBLRD*-
5D9A:  TBLRD*+
5D9C:  MOVF   FF5,W
5D9E:  MOVWF  FEE
5DA0:  IORLW  00
5DA2:  BNZ   5D9A
5DA4:  MOVLB  5
5DA6:  BTFSC  xE0.7
5DA8:  BSF    FF2.7
5DAA:  MOVLW  05
5DAC:  MOVWF  xE1
5DAE:  MOVLW  C0
5DB0:  MOVWF  xE0
5DB2:  CLRF   xE2
5DB4:  CLRF   xE3
5DB6:  MOVLW  02
5DB8:  MOVWF  xE4
5DBA:  MOVLW  01
5DBC:  MOVWF  xE5
5DBE:  MOVLB  0
5DC0:  CALL   1644
....................             strcpy(Menus.Letra,"T sec:");displayMenu(Menus.Letra,0,8,2,1); 
5DC4:  MOVLW  05
5DC6:  MOVWF  FEA
5DC8:  MOVLW  C0
5DCA:  MOVWF  FE9
5DCC:  MOVFF  FF2,5E0
5DD0:  BCF    FF2.7
5DD2:  MOVLW  00
5DD4:  CALL   09AC
5DD8:  TBLRD*-
5DDA:  TBLRD*+
5DDC:  MOVF   FF5,W
5DDE:  MOVWF  FEE
5DE0:  IORLW  00
5DE2:  BNZ   5DDA
5DE4:  MOVLB  5
5DE6:  BTFSC  xE0.7
5DE8:  BSF    FF2.7
5DEA:  MOVLW  05
5DEC:  MOVWF  xE1
5DEE:  MOVLW  C0
5DF0:  MOVWF  xE0
5DF2:  CLRF   xE2
5DF4:  MOVLW  08
5DF6:  MOVWF  xE3
5DF8:  MOVLW  02
5DFA:  MOVWF  xE4
5DFC:  MOVLW  01
5DFE:  MOVWF  xE5
5E00:  MOVLB  0
5E02:  CALL   1644
....................             MuestraTiemposProgramados(); 
5E06:  CALL   259E
....................             if(Nivel<6) 
5E0A:  MOVLB  5
5E0C:  MOVF   x4B,F
5E0E:  BNZ   5E1A
5E10:  MOVF   x4A,W
5E12:  SUBLW  05
5E14:  BNC   5E1A
....................                { 
....................                   desfoguelento=1; 
5E16:  BSF    x29.5
....................                } 
....................                else 
5E18:  BRA    5E1C
....................                { 
....................                   desfoguelento=0; 
5E1A:  BCF    x29.5
....................                } 
....................          } 
....................          else 
5E1C:  BRA    5E46
....................          { 
....................             delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5E1E:  MOVLW  04
5E20:  MOVWF  xE0
5E22:  MOVLW  AF
5E24:  MOVWF  xE1
5E26:  MOVLB  0
5E28:  CALL   0F70
5E2C:  MOVLB  5
5E2E:  DECFSZ xE0,F
5E30:  BRA    5E22
5E32:  MOVLW  08
5E34:  MOVWF  x36
5E36:  CLRF   xE1
5E38:  MOVLB  0
5E3A:  CALL   0FDA
5E3E:  MOVLW  01
5E40:  MOVLB  5
5E42:  MOVWF  x3D
5E44:  BSF    x29.4
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5E46:  BSF    F92.3
5E48:  BTFSS  F80.3
5E4A:  BRA    5E74
....................       { 
....................          delay_ms(700);Menu=8;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5E4C:  MOVLW  04
5E4E:  MOVWF  xE0
5E50:  MOVLW  AF
5E52:  MOVWF  xE1
5E54:  MOVLB  0
5E56:  CALL   0F70
5E5A:  MOVLB  5
5E5C:  DECFSZ xE0,F
5E5E:  BRA    5E50
5E60:  MOVLW  08
5E62:  MOVWF  x36
5E64:  CLRF   xE1
5E66:  MOVLB  0
5E68:  CALL   0FDA
5E6C:  MOVLW  01
5E6E:  MOVLB  5
5E70:  MOVWF  x3D
5E72:  BSF    x29.4
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................    if(Menu==20){ // Este es el menu de cuando el proceso se inicio. 
5E74:  MOVF   x36,W
5E76:  SUBLW  14
5E78:  BTFSS  FD8.2
5E7A:  GOTO   6986
....................     
....................    Lectura_Esclavos(); 
5E7E:  MOVLB  0
5E80:  CALL   1EC6
....................    if(flag_agua==1 && Puerta==1 && Parada==1 && tiempo_esterilizacion<2 && Alarma==0 && AlarmaAgua==0) 
5E84:  MOVLB  5
5E86:  BTFSS  x2A.2
5E88:  BRA    5FAE
5E8A:  DECFSZ x1D,W
5E8C:  BRA    5FAE
5E8E:  DECFSZ x1E,W
5E90:  BRA    5FAE
5E92:  MOVF   x3E,W
5E94:  SUBLW  01
5E96:  BTFSS  FD8.0
5E98:  BRA    5FAE
5E9A:  MOVF   x27,F
5E9C:  BTFSS  FD8.2
5E9E:  BRA    5FAE
5EA0:  MOVF   x28,F
5EA2:  BTFSS  FD8.2
5EA4:  BRA    5FAE
....................    {   
....................       // Debe enviar a Hardware_Controller flag que indique que puede realizar control. En Hardware_Controller si esta activado el flag** 
....................       // de control debe tener automaticamente la electrovalvula de desfogue cerrada.** 
....................       if(tiempo_esterilizacion==0 && disp_Calentando==0) 
5EA6:  MOVF   x3E,F
5EA8:  BNZ   5F22
5EAA:  BTFSC  x2A.4
5EAC:  BRA    5F22
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5EAE:  CLRF   xF2
5EB0:  MOVLW  37
5EB2:  MOVWF  xF3
5EB4:  MOVLW  7F
5EB6:  MOVWF  xF4
5EB8:  MOVLW  3F
5EBA:  MOVWF  xF5
5EBC:  MOVLW  01
5EBE:  MOVWF  xF6
5EC0:  CLRF   xF7
5EC2:  MOVLB  0
5EC4:  CALL   1582
....................          strcpy(Menus.Letra,"Calentando");displayMenu(Menus.Letra,0,55,2,1); 
5EC8:  MOVLW  05
5ECA:  MOVWF  FEA
5ECC:  MOVLW  C0
5ECE:  MOVWF  FE9
5ED0:  MOVFF  FF2,5E0
5ED4:  BCF    FF2.7
5ED6:  MOVLW  00
5ED8:  CALL   0964
5EDC:  TBLRD*-
5EDE:  TBLRD*+
5EE0:  MOVF   FF5,W
5EE2:  MOVWF  FEE
5EE4:  IORLW  00
5EE6:  BNZ   5EDE
5EE8:  MOVLB  5
5EEA:  BTFSC  xE0.7
5EEC:  BSF    FF2.7
5EEE:  MOVLW  05
5EF0:  MOVWF  xE1
5EF2:  MOVLW  C0
5EF4:  MOVWF  xE0
5EF6:  CLRF   xE2
5EF8:  MOVLW  37
5EFA:  MOVWF  xE3
5EFC:  MOVLW  02
5EFE:  MOVWF  xE4
5F00:  MOVLW  01
5F02:  MOVWF  xE5
5F04:  MOVLB  0
5F06:  CALL   1644
....................          disp_Calentando=1;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F0A:  MOVLB  5
5F0C:  BSF    x2A.4
5F0E:  BCF    x2A.5
5F10:  BCF    x2A.6
5F12:  BCF    x2A.7
5F14:  BCF    x2B.0
5F16:  BCF    x2B.1
5F18:  BCF    x2B.2
5F1A:  BCF    x2B.3
....................          EVDesfogue=0;Control=1; 
5F1C:  CLRF   x2D
5F1E:  MOVLW  01
5F20:  MOVWF  x34
....................       } 
....................       if(tiempo_esterilizacion==1 && disp_Esterilizando==0) 
5F22:  DECFSZ x3E,W
5F24:  BRA    5FA0
5F26:  BTFSC  x2A.7
5F28:  BRA    5FA0
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5F2A:  CLRF   xF2
5F2C:  MOVLW  37
5F2E:  MOVWF  xF3
5F30:  MOVLW  7F
5F32:  MOVWF  xF4
5F34:  MOVLW  3F
5F36:  MOVWF  xF5
5F38:  MOVLW  01
5F3A:  MOVWF  xF6
5F3C:  CLRF   xF7
5F3E:  MOVLB  0
5F40:  CALL   1582
....................          strcpy(Menus.Letra,"Esterilizando");displayMenu(Menus.Letra,0,55,2,1); 
5F44:  MOVLW  05
5F46:  MOVWF  FEA
5F48:  MOVLW  C0
5F4A:  MOVWF  FE9
5F4C:  MOVFF  FF2,5E0
5F50:  BCF    FF2.7
5F52:  MOVLW  00
5F54:  CALL   0CAA
5F58:  TBLRD*-
5F5A:  TBLRD*+
5F5C:  MOVF   FF5,W
5F5E:  MOVWF  FEE
5F60:  IORLW  00
5F62:  BNZ   5F5A
5F64:  MOVLB  5
5F66:  BTFSC  xE0.7
5F68:  BSF    FF2.7
5F6A:  MOVLW  05
5F6C:  MOVWF  xE1
5F6E:  MOVLW  C0
5F70:  MOVWF  xE0
5F72:  CLRF   xE2
5F74:  MOVLW  37
5F76:  MOVWF  xE3
5F78:  MOVLW  02
5F7A:  MOVWF  xE4
5F7C:  MOVLW  01
5F7E:  MOVWF  xE5
5F80:  MOVLB  0
5F82:  CALL   1644
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=1;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
5F86:  MOVLB  5
5F88:  BCF    x2A.4
5F8A:  BCF    x2A.5
5F8C:  BCF    x2A.6
5F8E:  BSF    x2A.7
5F90:  BCF    x2B.0
5F92:  BCF    x2B.1
5F94:  BCF    x2B.2
5F96:  BCF    x2B.3
....................          EVDesfogue=0;EVTrampa=0;Control=1; 
5F98:  CLRF   x2D
5F9A:  CLRF   x2F
5F9C:  MOVLW  01
5F9E:  MOVWF  x34
....................       } 
....................       Control=1; 
5FA0:  MOVLW  01
5FA2:  MOVWF  x34
....................       Envio_Esclavos(); 
5FA4:  MOVLB  0
5FA6:  CALL   2022
....................    } 
....................    else 
5FAA:  BRA    63EA
5FAC:  MOVLB  5
....................    { 
....................       Control=0; 
5FAE:  CLRF   x34
....................       if(Alarma>0) 
5FB0:  MOVF   x27,F
5FB2:  BTFSC  FD8.2
5FB4:  BRA    60AE
....................       { 
....................          if(Alarma==1) // Alarma de Error de Tiempo: Error por exceso de tiempo de calentamiento. 
5FB6:  DECFSZ x27,W
5FB8:  BRA    602E
....................          { 
....................             if(disp_Alarma==0) 
5FBA:  BTFSC  x2B.5
5FBC:  BRA    602E
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
5FBE:  CLRF   xF2
5FC0:  MOVLW  37
5FC2:  MOVWF  xF3
5FC4:  MOVLW  7F
5FC6:  MOVWF  xF4
5FC8:  MOVLW  3F
5FCA:  MOVWF  xF5
5FCC:  MOVLW  01
5FCE:  MOVWF  xF6
5FD0:  CLRF   xF7
5FD2:  MOVLB  0
5FD4:  CALL   1582
....................                strcpy(Menus.Letra,"Error:ET01");displayMenu(Menus.Letra,0,55,2,1); 
5FD8:  MOVLW  05
5FDA:  MOVWF  FEA
5FDC:  MOVLW  C0
5FDE:  MOVWF  FE9
5FE0:  MOVFF  FF2,5E0
5FE4:  BCF    FF2.7
5FE6:  MOVLW  00
5FE8:  CALL   0CD2
5FEC:  TBLRD*-
5FEE:  TBLRD*+
5FF0:  MOVF   FF5,W
5FF2:  MOVWF  FEE
5FF4:  IORLW  00
5FF6:  BNZ   5FEE
5FF8:  MOVLB  5
5FFA:  BTFSC  xE0.7
5FFC:  BSF    FF2.7
5FFE:  MOVLW  05
6000:  MOVWF  xE1
6002:  MOVLW  C0
6004:  MOVWF  xE0
6006:  CLRF   xE2
6008:  MOVLW  37
600A:  MOVWF  xE3
600C:  MOVLW  02
600E:  MOVWF  xE4
6010:  MOVLW  01
6012:  MOVWF  xE5
6014:  MOVLB  0
6016:  CALL   1644
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
601A:  MOVLB  5
601C:  BCF    x2A.4
601E:  BCF    x2A.5
6020:  BCF    x2A.6
6022:  BCF    x2A.7
6024:  BCF    x2B.0
6026:  BCF    x2B.1
6028:  BCF    x2B.2
602A:  BCF    x2B.3
....................                disp_Alarma=1; 
602C:  BSF    x2B.5
....................             } 
....................          } 
....................           
....................          if(Alarma==2) // Alarma de Error de Tiempo: Error por Cambio brusco en la Temperatura 
602E:  MOVF   x27,W
6030:  SUBLW  02
6032:  BNZ   60AC
....................          { 
....................             tiempo_esterilizacion=0;tiempo_secado=0; 
6034:  CLRF   x3E
6036:  CLRF   x3F
....................             if(disp_Alarma==0) 
6038:  BTFSC  x2B.5
603A:  BRA    60AC
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
603C:  CLRF   xF2
603E:  MOVLW  37
6040:  MOVWF  xF3
6042:  MOVLW  7F
6044:  MOVWF  xF4
6046:  MOVLW  3F
6048:  MOVWF  xF5
604A:  MOVLW  01
604C:  MOVWF  xF6
604E:  CLRF   xF7
6050:  MOVLB  0
6052:  CALL   1582
....................                strcpy(Menus.Letra,"Error:ET02");displayMenu(Menus.Letra,0,55,2,1); 
6056:  MOVLW  05
6058:  MOVWF  FEA
605A:  MOVLW  C0
605C:  MOVWF  FE9
605E:  MOVFF  FF2,5E0
6062:  BCF    FF2.7
6064:  MOVLW  00
6066:  CALL   0CF8
606A:  TBLRD*-
606C:  TBLRD*+
606E:  MOVF   FF5,W
6070:  MOVWF  FEE
6072:  IORLW  00
6074:  BNZ   606C
6076:  MOVLB  5
6078:  BTFSC  xE0.7
607A:  BSF    FF2.7
607C:  MOVLW  05
607E:  MOVWF  xE1
6080:  MOVLW  C0
6082:  MOVWF  xE0
6084:  CLRF   xE2
6086:  MOVLW  37
6088:  MOVWF  xE3
608A:  MOVLW  02
608C:  MOVWF  xE4
608E:  MOVLW  01
6090:  MOVWF  xE5
6092:  MOVLB  0
6094:  CALL   1644
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0;  
6098:  MOVLB  5
609A:  BCF    x2A.4
609C:  BCF    x2A.5
609E:  BCF    x2A.6
60A0:  BCF    x2A.7
60A2:  BCF    x2B.0
60A4:  BCF    x2B.1
60A6:  BCF    x2B.2
60A8:  BCF    x2B.3
....................                disp_Alarma=1; 
60AA:  BSF    x2B.5
....................             } 
....................          } 
....................       } 
....................       else 
60AC:  BRA    63E4
....................       { 
....................          disp_Alarma=0; 
60AE:  BCF    x2B.5
....................          if(NivelTanque==1 && flag_agua==0 ) 
60B0:  DECFSZ x20,W
60B2:  BRA    60BC
60B4:  BTFSC  x2A.2
60B6:  BRA    60BC
....................          { 
....................             flag_agua=1; 
60B8:  BSF    x2A.2
....................             // Debe enviar a Hardware_Controller que cierre EV de agua 
....................          }  
....................          else 
60BA:  BRA    61AE
....................          { 
....................             if(tiempo_esterilizacion==0 && disp_Llenando==0 && Puerta==1) 
60BC:  MOVF   x3E,F
60BE:  BNZ   6138
60C0:  BTFSC  x2A.5
60C2:  BRA    6138
60C4:  DECFSZ x1D,W
60C6:  BRA    6138
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
60C8:  CLRF   xF2
60CA:  MOVLW  37
60CC:  MOVWF  xF3
60CE:  MOVLW  7F
60D0:  MOVWF  xF4
60D2:  MOVLW  3F
60D4:  MOVWF  xF5
60D6:  MOVLW  01
60D8:  MOVWF  xF6
60DA:  CLRF   xF7
60DC:  MOVLB  0
60DE:  CALL   1582
....................                strcpy(Menus.Letra,"Llenando");displayMenu(Menus.Letra,0,55,2,1); 
60E2:  MOVLW  05
60E4:  MOVWF  FEA
60E6:  MOVLW  C0
60E8:  MOVWF  FE9
60EA:  MOVFF  FF2,5E0
60EE:  BCF    FF2.7
60F0:  MOVLW  00
60F2:  CALL   0D1E
60F6:  TBLRD*-
60F8:  TBLRD*+
60FA:  MOVF   FF5,W
60FC:  MOVWF  FEE
60FE:  IORLW  00
6100:  BNZ   60F8
6102:  MOVLB  5
6104:  BTFSC  xE0.7
6106:  BSF    FF2.7
6108:  MOVLW  05
610A:  MOVWF  xE1
610C:  MOVLW  C0
610E:  MOVWF  xE0
6110:  CLRF   xE2
6112:  MOVLW  37
6114:  MOVWF  xE3
6116:  MOVLW  02
6118:  MOVWF  xE4
611A:  MOVLW  01
611C:  MOVWF  xE5
611E:  MOVLB  0
6120:  CALL   1644
....................                disp_Calentando=0;disp_Llenando=1;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6124:  MOVLB  5
6126:  BCF    x2A.4
6128:  BSF    x2A.5
612A:  BCF    x2A.6
612C:  BCF    x2A.7
612E:  BCF    x2B.0
6130:  BCF    x2B.1
6132:  BCF    x2B.2
6134:  BCF    x2B.3
....................                // Debe enviar a Hardware_Controller que abra EV de agua y que apague Resistencia 
....................                Control=0; 
6136:  CLRF   x34
....................             } 
....................              
....................             if(AlarmaAgua==1) 
6138:  DECFSZ x28,W
613A:  BRA    61AE
....................             { 
....................                if(disp_AlarmaAgua==0) 
613C:  BTFSC  x2B.6
613E:  BRA    61AE
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6140:  CLRF   xF2
6142:  MOVLW  37
6144:  MOVWF  xF3
6146:  MOVLW  7F
6148:  MOVWF  xF4
614A:  MOVLW  3F
614C:  MOVWF  xF5
614E:  MOVLW  01
6150:  MOVWF  xF6
6152:  CLRF   xF7
6154:  MOVLB  0
6156:  CALL   1582
....................                   strcpy(Menus.Letra,"Error:EA01");displayMenu(Menus.Letra,0,55,2,1); 
615A:  MOVLW  05
615C:  MOVWF  FEA
615E:  MOVLW  C0
6160:  MOVWF  FE9
6162:  MOVFF  FF2,5E0
6166:  BCF    FF2.7
6168:  MOVLW  00
616A:  CALL   0D42
616E:  TBLRD*-
6170:  TBLRD*+
6172:  MOVF   FF5,W
6174:  MOVWF  FEE
6176:  IORLW  00
6178:  BNZ   6170
617A:  MOVLB  5
617C:  BTFSC  xE0.7
617E:  BSF    FF2.7
6180:  MOVLW  05
6182:  MOVWF  xE1
6184:  MOVLW  C0
6186:  MOVWF  xE0
6188:  CLRF   xE2
618A:  MOVLW  37
618C:  MOVWF  xE3
618E:  MOVLW  02
6190:  MOVWF  xE4
6192:  MOVLW  01
6194:  MOVWF  xE5
6196:  MOVLB  0
6198:  CALL   1644
....................                   disp_Calentando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
619C:  MOVLB  5
619E:  BCF    x2A.4
61A0:  BCF    x2A.6
61A2:  BCF    x2A.7
61A4:  BCF    x2B.0
61A6:  BCF    x2B.1
61A8:  BCF    x2B.2
61AA:  BCF    x2B.3
....................                   disp_AlarmaAgua=1; 
61AC:  BSF    x2B.6
....................                } 
....................             } 
....................          } 
....................           
....................          if(tiempo_esterilizacion==2 && flag_agua==1) 
61AE:  MOVF   x3E,W
61B0:  SUBLW  02
61B2:  BTFSS  FD8.2
61B4:  BRA    636A
61B6:  BTFSS  x2A.2
61B8:  BRA    636A
....................          { 
....................             // Si hay desfogue lento, muestra desfogue lento y hace rampa. Al finalizar la rampa hace fin de ciclo. 
....................             if(desfoguelento==1)    
61BA:  BTFSS  x29.5
61BC:  BRA    6296
....................             { 
....................                if(z==0) 
61BE:  BTFSC  x2B.4
61C0:  BRA    6210
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
61C2:  CLRF   xE0
61C4:  MOVLW  5A
61C6:  MOVWF  xE1
61C8:  MOVLW  38
61CA:  MOVWF  xE2
61CC:  MOVLB  0
61CE:  CALL   26DE
61D2:  MOVLW  19
61D4:  MOVLB  5
61D6:  MOVWF  xF2
61D8:  MOVLW  12
61DA:  MOVWF  xF3
61DC:  MOVLW  3C
61DE:  MOVWF  xF4
61E0:  MOVLW  1A
61E2:  MOVWF  xF5
61E4:  CLRF   xF6
61E6:  CLRF   xF7
61E8:  MOVLB  0
61EA:  CALL   1582
61EE:  MOVLW  37
61F0:  MOVLB  5
61F2:  MOVWF  xF2
61F4:  MOVLW  12
61F6:  MOVWF  xF3
61F8:  MOVLW  44
61FA:  MOVWF  xF4
61FC:  MOVLW  35
61FE:  MOVWF  xF5
6200:  CLRF   xF6
6202:  MOVLW  01
6204:  MOVWF  xF7
6206:  MOVLB  0
6208:  CALL   1582
620C:  MOVLB  5
620E:  BSF    x2B.4
....................                } 
....................                if(disp_Despresurizando==0) 
6210:  BTFSC  x2B.0
6212:  BRA    628E
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
6214:  CLRF   xF2
6216:  MOVLW  37
6218:  MOVWF  xF3
621A:  MOVLW  7F
621C:  MOVWF  xF4
621E:  MOVLW  3F
6220:  MOVWF  xF5
6222:  MOVLW  01
6224:  MOVWF  xF6
6226:  CLRF   xF7
6228:  MOVLB  0
622A:  CALL   1582
....................                   strcpy(Menus.Letra,"Despresurizando");displayMenu(Menus.Letra,0,55,2,1); 
622E:  MOVLW  05
6230:  MOVWF  FEA
6232:  MOVLW  C0
6234:  MOVWF  FE9
6236:  MOVFF  FF2,5E0
623A:  BCF    FF2.7
623C:  MOVLW  00
623E:  CALL   0D68
6242:  TBLRD*-
6244:  TBLRD*+
6246:  MOVF   FF5,W
6248:  MOVWF  FEE
624A:  IORLW  00
624C:  BNZ   6244
624E:  MOVLB  5
6250:  BTFSC  xE0.7
6252:  BSF    FF2.7
6254:  MOVLW  05
6256:  MOVWF  xE1
6258:  MOVLW  C0
625A:  MOVWF  xE0
625C:  CLRF   xE2
625E:  MOVLW  37
6260:  MOVWF  xE3
6262:  MOVLW  02
6264:  MOVWF  xE4
6266:  MOVLW  01
6268:  MOVWF  xE5
626A:  MOVLB  0
626C:  CALL   1644
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6270:  MOVLB  5
6272:  BCF    x2A.4
6274:  BCF    x2A.5
6276:  BCF    x2A.6
6278:  BCF    x2A.7
627A:  BSF    x2B.0
627C:  BCF    x2B.1
627E:  BCF    x2B.2
6280:  BCF    x2B.3
....................                   glcd_imagen(5); 
6282:  MOVLW  05
6284:  MOVWF  xE0
6286:  MOVLB  0
6288:  CALL   2086
628C:  MOVLB  5
....................                } 
....................                Exhaust=2;tiempo_secado=2; 
628E:  MOVLW  02
6290:  MOVWF  x40
6292:  MOVWF  x3F
....................             } 
....................             else 
6294:  BRA    636A
....................             { 
....................                if(z==0) 
6296:  BTFSC  x2B.4
6298:  BRA    62E8
....................                { 
....................                   Limpia(0,90,56);glcd_rect(25, 18, 60, 26, NO, OFF);glcd_rect(55, 18, 68, 53, NO, ON);z=1; 
629A:  CLRF   xE0
629C:  MOVLW  5A
629E:  MOVWF  xE1
62A0:  MOVLW  38
62A2:  MOVWF  xE2
62A4:  MOVLB  0
62A6:  CALL   26DE
62AA:  MOVLW  19
62AC:  MOVLB  5
62AE:  MOVWF  xF2
62B0:  MOVLW  12
62B2:  MOVWF  xF3
62B4:  MOVLW  3C
62B6:  MOVWF  xF4
62B8:  MOVLW  1A
62BA:  MOVWF  xF5
62BC:  CLRF   xF6
62BE:  CLRF   xF7
62C0:  MOVLB  0
62C2:  CALL   1582
62C6:  MOVLW  37
62C8:  MOVLB  5
62CA:  MOVWF  xF2
62CC:  MOVLW  12
62CE:  MOVWF  xF3
62D0:  MOVLW  44
62D2:  MOVWF  xF4
62D4:  MOVLW  35
62D6:  MOVWF  xF5
62D8:  CLRF   xF6
62DA:  MOVLW  01
62DC:  MOVWF  xF7
62DE:  MOVLB  0
62E0:  CALL   1582
62E4:  MOVLB  5
62E6:  BSF    x2B.4
....................                   //tiempo_secado=1; 
....................                } 
....................                if(disp_Secando==0) 
62E8:  BTFSC  x2A.6
62EA:  BRA    6366
....................                { 
....................                   glcd_rect(0, 55, 127, 63, YES, OFF); 
62EC:  CLRF   xF2
62EE:  MOVLW  37
62F0:  MOVWF  xF3
62F2:  MOVLW  7F
62F4:  MOVWF  xF4
62F6:  MOVLW  3F
62F8:  MOVWF  xF5
62FA:  MOVLW  01
62FC:  MOVWF  xF6
62FE:  CLRF   xF7
6300:  MOVLB  0
6302:  CALL   1582
....................                   strcpy(Menus.Letra,"Secando");displayMenu(Menus.Letra,0,55,2,1); 
6306:  MOVLW  05
6308:  MOVWF  FEA
630A:  MOVLW  C0
630C:  MOVWF  FE9
630E:  MOVFF  FF2,5E0
6312:  BCF    FF2.7
6314:  MOVLW  00
6316:  CALL   0D92
631A:  TBLRD*-
631C:  TBLRD*+
631E:  MOVF   FF5,W
6320:  MOVWF  FEE
6322:  IORLW  00
6324:  BNZ   631C
6326:  MOVLB  5
6328:  BTFSC  xE0.7
632A:  BSF    FF2.7
632C:  MOVLW  05
632E:  MOVWF  xE1
6330:  MOVLW  C0
6332:  MOVWF  xE0
6334:  CLRF   xE2
6336:  MOVLW  37
6338:  MOVWF  xE3
633A:  MOVLW  02
633C:  MOVWF  xE4
633E:  MOVLW  01
6340:  MOVWF  xE5
6342:  MOVLB  0
6344:  CALL   1644
....................                   disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=0;disp_Fin=0; 
6348:  MOVLB  5
634A:  BCF    x2A.4
634C:  BCF    x2A.5
634E:  BSF    x2A.6
6350:  BCF    x2A.7
6352:  BCF    x2B.0
6354:  BCF    x2B.1
6356:  BCF    x2B.2
6358:  BCF    x2B.3
....................                   glcd_imagen(5); 
635A:  MOVLW  05
635C:  MOVWF  xE0
635E:  MOVLB  0
6360:  CALL   2086
6364:  MOVLB  5
....................                } 
....................                Exhaust=1; 
6366:  MOVLW  01
6368:  MOVWF  x40
....................             } 
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................           
....................          if(Puerta==0) 
636A:  MOVF   x1D,F
636C:  BNZ   63E4
....................          { 
....................             if(disp_Door==0 && fin_ciclo==0) 
636E:  BTFSC  x2B.2
6370:  BRA    63E4
6372:  MOVF   x3C,F
6374:  BNZ   63E4
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6376:  CLRF   xF2
6378:  MOVLW  37
637A:  MOVWF  xF3
637C:  MOVLW  7F
637E:  MOVWF  xF4
6380:  MOVLW  3F
6382:  MOVWF  xF5
6384:  MOVLW  01
6386:  MOVWF  xF6
6388:  CLRF   xF7
638A:  MOVLB  0
638C:  CALL   1582
....................                strcpy(Menus.Letra,"Puerta Abierta");displayMenu(Menus.Letra,0,55,2,1); 
6390:  MOVLW  05
6392:  MOVWF  FEA
6394:  MOVLW  C0
6396:  MOVWF  FE9
6398:  MOVFF  FF2,5E0
639C:  BCF    FF2.7
639E:  MOVLW  00
63A0:  CALL   0DB4
63A4:  TBLRD*-
63A6:  TBLRD*+
63A8:  MOVF   FF5,W
63AA:  MOVWF  FEE
63AC:  IORLW  00
63AE:  BNZ   63A6
63B0:  MOVLB  5
63B2:  BTFSC  xE0.7
63B4:  BSF    FF2.7
63B6:  MOVLW  05
63B8:  MOVWF  xE1
63BA:  MOVLW  C0
63BC:  MOVWF  xE0
63BE:  CLRF   xE2
63C0:  MOVLW  37
63C2:  MOVWF  xE3
63C4:  MOVLW  02
63C6:  MOVWF  xE4
63C8:  MOVLW  01
63CA:  MOVWF  xE5
63CC:  MOVLB  0
63CE:  CALL   1644
....................                disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=0;disp_Door=1;disp_Fin=0; 
63D2:  MOVLB  5
63D4:  BCF    x2A.4
63D6:  BCF    x2A.5
63D8:  BCF    x2A.6
63DA:  BCF    x2A.7
63DC:  BCF    x2B.0
63DE:  BCF    x2B.1
63E0:  BSF    x2B.2
63E2:  BCF    x2B.3
....................             }    
....................             // Debe enviar a Hardware_Controller que apague Resistencia 
....................          } 
....................       } 
....................       Envio_Esclavos(); 
63E4:  MOVLB  0
63E6:  CALL   2022
....................    } 
....................  
....................    if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
63EA:  MOVLB  5
63EC:  BTFSS  x29.6
63EE:  BRA    6742
....................    {                       
....................       Lectura=0; 
63F0:  BCF    x29.6
....................       //displayTiempo(NivelTanque,40,30,2,1);  
....................       //displayTiempo(Presostato,40,40,2,1);  
....................       //displayTiempo(ADCTemperatura[2],20,30,2,1);  
....................       //displayT(Prom,20,30,2); 
....................       displayTiempo(Presostato,31,40,2,1); 
63F2:  MOVFF  521,5E1
63F6:  MOVLW  1F
63F8:  MOVWF  xE2
63FA:  MOVLW  28
63FC:  MOVWF  xE3
63FE:  MOVLW  02
6400:  MOVWF  xE4
6402:  MOVLW  01
6404:  MOVWF  xE5
6406:  MOVLB  0
6408:  CALL   244E
....................       glcd_rect(51, 40, 62, 48, YES, OFF);glcd_text57(52, 40, kpa, 1, ON); 
640C:  MOVLW  33
640E:  MOVLB  5
6410:  MOVWF  xF2
6412:  MOVLW  28
6414:  MOVWF  xF3
6416:  MOVLW  3E
6418:  MOVWF  xF4
641A:  MOVLW  30
641C:  MOVWF  xF5
641E:  MOVLW  01
6420:  MOVWF  xF6
6422:  CLRF   xF7
6424:  MOVLB  0
6426:  CALL   1582
642A:  MOVLW  34
642C:  MOVLB  5
642E:  MOVWF  xF1
6430:  MOVLW  28
6432:  MOVWF  xF2
6434:  MOVLW  04
6436:  MOVWF  xF4
6438:  MOVLW  C9
643A:  MOVWF  xF3
643C:  MOVLW  01
643E:  MOVWF  xF5
6440:  MOVWF  xF6
6442:  MOVLB  0
6444:  CALL   1252
....................       displayT(ADC_Pt100,69,20,2); 
6448:  MOVFF  553,5E3
644C:  MOVFF  552,5E2
6450:  MOVFF  551,5E1
6454:  MOVFF  550,5E0
6458:  MOVLW  45
645A:  MOVLB  5
645C:  MOVWF  xE4
645E:  MOVLW  14
6460:  MOVWF  xE5
6462:  MOVLW  02
6464:  MOVWF  xE6
6466:  MOVLB  0
6468:  GOTO   2AB2
....................       glcd_circle(95,40,2,NO,ON); 
646C:  MOVLW  5F
646E:  MOVLB  5
6470:  MOVWF  xE0
6472:  MOVLW  28
6474:  MOVWF  xE1
6476:  MOVLW  02
6478:  MOVWF  xE2
647A:  CLRF   xE3
647C:  MOVLW  01
647E:  MOVWF  xE4
6480:  MOVLB  0
6482:  CALL   2186
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,102,40,2,2); 
6486:  MOVLW  05
6488:  MOVWF  FEA
648A:  MOVLW  C0
648C:  MOVWF  FE9
648E:  MOVFF  FF2,5E0
6492:  BCF    FF2.7
6494:  MOVLW  00
6496:  CALL   09CE
649A:  TBLRD*-
649C:  TBLRD*+
649E:  MOVF   FF5,W
64A0:  MOVWF  FEE
64A2:  IORLW  00
64A4:  BNZ   649C
64A6:  MOVLB  5
64A8:  BTFSC  xE0.7
64AA:  BSF    FF2.7
64AC:  MOVLW  05
64AE:  MOVWF  xE1
64B0:  MOVLW  C0
64B2:  MOVWF  xE0
64B4:  MOVLW  66
64B6:  MOVWF  xE2
64B8:  MOVLW  28
64BA:  MOVWF  xE3
64BC:  MOVLW  02
64BE:  MOVWF  xE4
64C0:  MOVWF  xE5
64C2:  MOVLB  0
64C4:  CALL   1644
....................       //displayT(Pt,1,20,3); 
....................       displayTiempo(Setpoint,5,20,2,1); 
64C8:  MOVFF  53B,5E1
64CC:  MOVLW  05
64CE:  MOVLB  5
64D0:  MOVWF  xE2
64D2:  MOVLW  14
64D4:  MOVWF  xE3
64D6:  MOVLW  02
64D8:  MOVWF  xE4
64DA:  MOVLW  01
64DC:  MOVWF  xE5
64DE:  MOVLB  0
64E0:  CALL   244E
....................          
....................       if(Visua==1)// Si se activo la visualización desde software 
64E4:  MOVLB  5
64E6:  BTFSS  x2A.1
64E8:  BRA    65F4
....................       { 
....................          displayTiempo((int8)desvio,5,30,4,1); 
64EA:  MOVFF  5BB,5E3
64EE:  MOVFF  5BA,5E2
64F2:  MOVFF  5B9,5E1
64F6:  MOVFF  5B8,5E0
64FA:  MOVLB  0
64FC:  CALL   2B2C
6500:  MOVFF  01,5E0
6504:  MOVFF  01,5E1
6508:  MOVLW  05
650A:  MOVLB  5
650C:  MOVWF  xE2
650E:  MOVLW  1E
6510:  MOVWF  xE3
6512:  MOVLW  04
6514:  MOVWF  xE4
6516:  MOVLW  01
6518:  MOVWF  xE5
651A:  MOVLB  0
651C:  CALL   244E
....................          displayTiempo((int8)Tpulso,5,40,4,1); 
6520:  MOVFF  59F,5E3
6524:  MOVFF  59E,5E2
6528:  MOVFF  59D,5E1
652C:  MOVFF  59C,5E0
6530:  CALL   2B2C
6534:  MOVFF  01,5E0
6538:  MOVFF  01,5E1
653C:  MOVLW  05
653E:  MOVLB  5
6540:  MOVWF  xE2
6542:  MOVLW  28
6544:  MOVWF  xE3
6546:  MOVLW  04
6548:  MOVWF  xE4
654A:  MOVLW  01
654C:  MOVWF  xE5
654E:  MOVLB  0
6550:  CALL   244E
....................          displayTiempo((int8)Ganancia,30,40,4,1); 
6554:  MOVFF  5B3,5E3
6558:  MOVFF  5B2,5E2
655C:  MOVFF  5B1,5E1
6560:  MOVFF  5B0,5E0
6564:  CALL   2B2C
6568:  MOVFF  01,5E0
656C:  MOVFF  01,5E1
6570:  MOVLW  1E
6572:  MOVLB  5
6574:  MOVWF  xE2
6576:  MOVLW  28
6578:  MOVWF  xE3
657A:  MOVLW  04
657C:  MOVWF  xE4
657E:  MOVLW  01
6580:  MOVWF  xE5
6582:  MOVLB  0
6584:  CALL   244E
....................          displayTiempo((int8)Ajuste,30,30,4,1); 
6588:  MOVFF  524,5E1
658C:  MOVLW  1E
658E:  MOVLB  5
6590:  MOVWF  xE2
6592:  MOVWF  xE3
6594:  MOVLW  04
6596:  MOVWF  xE4
6598:  MOVLW  01
659A:  MOVWF  xE5
659C:  MOVLB  0
659E:  CALL   244E
....................          displayTiempo((int8)Ajusten,30,20,4,1); 
65A2:  MOVFF  525,5E1
65A6:  MOVLW  1E
65A8:  MOVLB  5
65AA:  MOVWF  xE2
65AC:  MOVLW  14
65AE:  MOVWF  xE3
65B0:  MOVLW  04
65B2:  MOVWF  xE4
65B4:  MOVLW  01
65B6:  MOVWF  xE5
65B8:  MOVLB  0
65BA:  CALL   244E
....................          displayTiempo((int8)Ganancia2,50,40,4,1); 
65BE:  MOVFF  5B7,5E3
65C2:  MOVFF  5B6,5E2
65C6:  MOVFF  5B5,5E1
65CA:  MOVFF  5B4,5E0
65CE:  CALL   2B2C
65D2:  MOVFF  01,5E0
65D6:  MOVFF  01,5E1
65DA:  MOVLW  32
65DC:  MOVLB  5
65DE:  MOVWF  xE2
65E0:  MOVLW  28
65E2:  MOVWF  xE3
65E4:  MOVLW  04
65E6:  MOVWF  xE4
65E8:  MOVLW  01
65EA:  MOVWF  xE5
65EC:  MOVLB  0
65EE:  CALL   244E
65F2:  MOVLB  5
....................       } 
....................           
....................       // Muestra Valor de esterilizacion actual. 
....................       displayTiempo(Testerilizacion[3],80,0,0,1);displayTiempo(Testerilizacion[2],86,0,0,1); 
65F4:  MOVFF  557,5E1
65F8:  MOVLW  50
65FA:  MOVWF  xE2
65FC:  CLRF   xE3
65FE:  CLRF   xE4
6600:  MOVLW  01
6602:  MOVWF  xE5
6604:  MOVLB  0
6606:  CALL   244E
660A:  MOVFF  556,5E1
660E:  MOVLW  56
6610:  MOVLB  5
6612:  MOVWF  xE2
6614:  CLRF   xE3
6616:  CLRF   xE4
6618:  MOVLW  01
661A:  MOVWF  xE5
661C:  MOVLB  0
661E:  CALL   244E
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,0,2,1);  
6622:  MOVLW  05
6624:  MOVWF  FEA
6626:  MOVLW  C0
6628:  MOVWF  FE9
662A:  MOVFF  FF2,5E0
662E:  BCF    FF2.7
6630:  MOVLW  00
6632:  CALL   06BE
6636:  TBLRD*-
6638:  TBLRD*+
663A:  MOVF   FF5,W
663C:  MOVWF  FEE
663E:  IORLW  00
6640:  BNZ   6638
6642:  MOVLB  5
6644:  BTFSC  xE0.7
6646:  BSF    FF2.7
6648:  MOVLW  05
664A:  MOVWF  xE1
664C:  MOVLW  C0
664E:  MOVWF  xE0
6650:  MOVLW  5C
6652:  MOVWF  xE2
6654:  CLRF   xE3
6656:  MOVLW  02
6658:  MOVWF  xE4
665A:  MOVLW  01
665C:  MOVWF  xE5
665E:  MOVLB  0
6660:  CALL   1644
....................       displayTiempo(Testerilizacion[1],98,0,0,1);displayTiempo(Testerilizacion[0],104,0,0,1); 
6664:  MOVFF  555,5E1
6668:  MOVLW  62
666A:  MOVLB  5
666C:  MOVWF  xE2
666E:  CLRF   xE3
6670:  CLRF   xE4
6672:  MOVLW  01
6674:  MOVWF  xE5
6676:  MOVLB  0
6678:  CALL   244E
667C:  MOVFF  554,5E1
6680:  MOVLW  68
6682:  MOVLB  5
6684:  MOVWF  xE2
6686:  CLRF   xE3
6688:  CLRF   xE4
668A:  MOVLW  01
668C:  MOVWF  xE5
668E:  MOVLB  0
6690:  CALL   244E
....................       // Muestra tiempo de secado actual. 
....................       displayTiempo(Tsecado[3],80,8,0,1);displayTiempo(Tsecado[2],86,8,0,1); 
6694:  MOVFF  55F,5E1
6698:  MOVLW  50
669A:  MOVLB  5
669C:  MOVWF  xE2
669E:  MOVLW  08
66A0:  MOVWF  xE3
66A2:  CLRF   xE4
66A4:  MOVLW  01
66A6:  MOVWF  xE5
66A8:  MOVLB  0
66AA:  CALL   244E
66AE:  MOVFF  55E,5E1
66B2:  MOVLW  56
66B4:  MOVLB  5
66B6:  MOVWF  xE2
66B8:  MOVLW  08
66BA:  MOVWF  xE3
66BC:  CLRF   xE4
66BE:  MOVLW  01
66C0:  MOVWF  xE5
66C2:  MOVLB  0
66C4:  CALL   244E
....................       strcpy(Menus.Letra,":");displayMenu(Menus.Letra,92,8,2,1);  
66C8:  MOVLW  05
66CA:  MOVWF  FEA
66CC:  MOVLW  C0
66CE:  MOVWF  FE9
66D0:  MOVFF  FF2,5E0
66D4:  BCF    FF2.7
66D6:  MOVLW  00
66D8:  CALL   06BE
66DC:  TBLRD*-
66DE:  TBLRD*+
66E0:  MOVF   FF5,W
66E2:  MOVWF  FEE
66E4:  IORLW  00
66E6:  BNZ   66DE
66E8:  MOVLB  5
66EA:  BTFSC  xE0.7
66EC:  BSF    FF2.7
66EE:  MOVLW  05
66F0:  MOVWF  xE1
66F2:  MOVLW  C0
66F4:  MOVWF  xE0
66F6:  MOVLW  5C
66F8:  MOVWF  xE2
66FA:  MOVLW  08
66FC:  MOVWF  xE3
66FE:  MOVLW  02
6700:  MOVWF  xE4
6702:  MOVLW  01
6704:  MOVWF  xE5
6706:  MOVLB  0
6708:  CALL   1644
....................       displayTiempo(Tsecado[1],98,8,0,1);displayTiempo(Tsecado[0],104,8,0,1); 
670C:  MOVFF  55D,5E1
6710:  MOVLW  62
6712:  MOVLB  5
6714:  MOVWF  xE2
6716:  MOVLW  08
6718:  MOVWF  xE3
671A:  CLRF   xE4
671C:  MOVLW  01
671E:  MOVWF  xE5
6720:  MOVLB  0
6722:  CALL   244E
6726:  MOVFF  55C,5E1
672A:  MOVLW  68
672C:  MOVLB  5
672E:  MOVWF  xE2
6730:  MOVLW  08
6732:  MOVWF  xE3
6734:  CLRF   xE4
6736:  MOVLW  01
6738:  MOVWF  xE5
673A:  MOVLB  0
673C:  CALL   244E
6740:  MOVLB  5
....................    } 
....................           
....................    if(ADC_Pt100>=((float)Setpoint-1.0))// Si activa alarma de esterilización. Inicia tiempo de esterilización. 
6742:  CLRF   xE1
6744:  MOVFF  53B,5E0
6748:  MOVLB  0
674A:  CALL   1A02
674E:  MOVFF  00,5E0
6752:  MOVFF  01,5E1
6756:  MOVFF  02,5E2
675A:  MOVFF  03,5E3
675E:  BSF    FD8.1
6760:  MOVFF  03,5E7
6764:  MOVFF  02,5E6
6768:  MOVFF  01,5E5
676C:  MOVFF  00,5E4
6770:  MOVLB  5
6772:  CLRF   xEB
6774:  CLRF   xEA
6776:  CLRF   xE9
6778:  MOVLW  7F
677A:  MOVWF  xE8
677C:  MOVLB  0
677E:  CALL   1B98
6782:  MOVFF  03,5E3
6786:  MOVFF  02,5E2
678A:  MOVFF  01,5E1
678E:  MOVFF  00,5E0
6792:  MOVFF  553,5E7
6796:  MOVFF  552,5E6
679A:  MOVFF  551,5E5
679E:  MOVFF  550,5E4
67A2:  GOTO   2B68
67A6:  BC    67AA
67A8:  BNZ   680C
....................    { 
....................       if(est==0) 
67AA:  MOVLB  5
67AC:  BTFSC  x2A.0
67AE:  BRA    680E
....................       { 
....................          tiempo_esterilizacion=1; 
67B0:  MOVLW  01
67B2:  MOVWF  x3E
....................          Limpia(0,90,56);glcd_rect(15, 18, 30, 53, NO, OFF);glcd_rect(25, 18, 60, 26, NO, ON);est=1; 
67B4:  CLRF   xE0
67B6:  MOVLW  5A
67B8:  MOVWF  xE1
67BA:  MOVLW  38
67BC:  MOVWF  xE2
67BE:  MOVLB  0
67C0:  CALL   26DE
67C4:  MOVLW  0F
67C6:  MOVLB  5
67C8:  MOVWF  xF2
67CA:  MOVLW  12
67CC:  MOVWF  xF3
67CE:  MOVLW  1E
67D0:  MOVWF  xF4
67D2:  MOVLW  35
67D4:  MOVWF  xF5
67D6:  CLRF   xF6
67D8:  CLRF   xF7
67DA:  MOVLB  0
67DC:  CALL   1582
67E0:  MOVLW  19
67E2:  MOVLB  5
67E4:  MOVWF  xF2
67E6:  MOVLW  12
67E8:  MOVWF  xF3
67EA:  MOVLW  3C
67EC:  MOVWF  xF4
67EE:  MOVLW  1A
67F0:  MOVWF  xF5
67F2:  CLRF   xF6
67F4:  MOVLW  01
67F6:  MOVWF  xF7
67F8:  MOVLB  0
67FA:  CALL   1582
67FE:  MOVLB  5
6800:  BSF    x2A.0
....................          glcd_imagen(5); 
6802:  MOVLW  05
6804:  MOVWF  xE0
6806:  MOVLB  0
6808:  CALL   2086
680C:  MOVLB  5
....................       } 
....................    }   
....................     
....................    /*if(ADC_Pt100<((float)Setpoint-2.0)) 
....................    { 
....................       glcd_rect(15, 18, 30, 53, NO, ON); 
....................       if(est==1) 
....................       {glcd_rect(25, 18, 60, 26, NO, OFF);} 
....................       est=0;tiempo_esterilizacion=0; 
....................    }*/ 
....................     
....................    if(Exhaust==1 && tiempo_esterilizacion==2)// Si realiza desfogue rapido 
680E:  DECFSZ x40,W
6810:  BRA    683A
6812:  MOVF   x3E,W
6814:  SUBLW  02
6816:  BNZ   683A
....................    { 
....................       // Debe enviar a Hardware_Controller que abra EV de desfogue 
....................       Control=0; 
6818:  CLRF   x34
....................       if(Presostato<20) 
681A:  MOVF   x21,W
681C:  SUBLW  13
681E:  BNC   6824
....................       { 
....................          EVDesfogue=3; 
6820:  MOVLW  03
6822:  MOVWF  x2D
....................       } 
....................       if(Presostato<8) 
6824:  MOVF   x21,W
6826:  SUBLW  07
6828:  BNC   6836
....................       { 
....................          tiempo_secado=1; 
682A:  MOVLW  01
682C:  MOVWF  x3F
....................          Control=0;EVDesfogue=3; 
682E:  CLRF   x34
6830:  MOVLW  03
6832:  MOVWF  x2D
....................       } 
....................       else 
6834:  BRA    683A
....................       { 
....................          EVDesfogue=1; 
6836:  MOVLW  01
6838:  MOVWF  x2D
....................       } 
....................    } 
....................     
....................    if(Exhaust==2 && tiempo_esterilizacion==2 )// Si Debe realizar Rampa 
683A:  MOVF   x40,W
683C:  SUBLW  02
683E:  BNZ   686E
6840:  MOVF   x3E,W
6842:  SUBLW  02
6844:  BNZ   686E
....................    {      
....................       // Debe enviar a Hardware_Controller que abra Ejecute modo rampa. 
....................       Control=0; 
6846:  CLRF   x34
....................       if(Presostato<20) 
6848:  MOVF   x21,W
684A:  SUBLW  13
684C:  BNC   6854
....................       { 
....................          EVDesfogue=3; 
684E:  MOVLW  03
6850:  MOVWF  x2D
....................       } 
....................       else 
6852:  BRA    6858
....................       { 
....................          EVDesfogue=2; 
6854:  MOVLW  02
6856:  MOVWF  x2D
....................       } 
....................       if(Presostato<8) 
6858:  MOVF   x21,W
685A:  SUBLW  07
685C:  BNC   686E
....................       { 
....................          tiempo_esterilizacion=3; 
685E:  MOVLW  03
6860:  MOVWF  x3E
....................          tiempo_secado=2; 
6862:  MOVLW  02
6864:  MOVWF  x3F
....................          fin_ciclo=1; 
6866:  MOVLW  01
6868:  MOVWF  x3C
....................          EVDesfogue=3; 
686A:  MOVLW  03
686C:  MOVWF  x2D
....................       } 
....................    } 
....................     
....................    // Si cumplio el tiempo de esterilización, verifique si existe tiempo de secado. 
....................    if((Testerilizacion[0]==Testerilizacionp[0])&&(Testerilizacion[1]==Testerilizacionp[1])&&(Testerilizacion[2]==Testerilizacionp[2])&&(Testerilizacion[3]==Testerilizacionp[3]) && tiempo_esterilizacion==1) 
686E:  MOVF   x58,W
6870:  SUBWF  x54,W
6872:  BNZ   688E
6874:  MOVF   x59,W
6876:  SUBWF  x55,W
6878:  BNZ   688E
687A:  MOVF   x5A,W
687C:  SUBWF  x56,W
687E:  BNZ   688E
6880:  MOVF   x5B,W
6882:  SUBWF  x57,W
6884:  BNZ   688E
6886:  DECFSZ x3E,W
6888:  BRA    688E
....................    { 
....................       tiempo_esterilizacion=2; 
688A:  MOVLW  02
688C:  MOVWF  x3E
....................    }  
....................     
....................    // Si cumplio el tiempo de secado. 
....................    if((Tsecado[0]>=Tsecadop[0])&&(Tsecado[1]>=Tsecadop[1])&&(Tsecado[2]>=Tsecadop[2])&&(Tsecado[3]>=Tsecadop[3]) && tiempo_secado==1) 
688E:  MOVF   x60,W
6890:  XORLW  80
6892:  MOVWF  00
6894:  MOVF   x5C,W
6896:  XORLW  80
6898:  SUBWF  00,W
689A:  BZ    689E
689C:  BC    68DE
689E:  MOVF   x61,W
68A0:  XORLW  80
68A2:  MOVWF  00
68A4:  MOVF   x5D,W
68A6:  XORLW  80
68A8:  SUBWF  00,W
68AA:  BZ    68AE
68AC:  BC    68DE
68AE:  MOVF   x62,W
68B0:  XORLW  80
68B2:  MOVWF  00
68B4:  MOVF   x5E,W
68B6:  XORLW  80
68B8:  SUBWF  00,W
68BA:  BZ    68BE
68BC:  BC    68DE
68BE:  MOVF   x63,W
68C0:  XORLW  80
68C2:  MOVWF  00
68C4:  MOVF   x5F,W
68C6:  XORLW  80
68C8:  SUBWF  00,W
68CA:  BZ    68CE
68CC:  BC    68DE
68CE:  DECFSZ x3F,W
68D0:  BRA    68DE
....................    { 
....................       tiempo_esterilizacion=3; 
68D2:  MOVLW  03
68D4:  MOVWF  x3E
....................       tiempo_secado=2; 
68D6:  MOVLW  02
68D8:  MOVWF  x3F
....................       fin_ciclo=1; 
68DA:  MOVLW  01
68DC:  MOVWF  x3C
....................    } 
....................     
....................    if(fin_ciclo==1) 
68DE:  DECFSZ x3C,W
68E0:  BRA    697A
....................    { 
....................       // Debe enviar a Hardware_Controller que apague Resistencia y que cierre EV de desfogue 
....................       Control=0;EVDesfogue=3; 
68E2:  CLRF   x34
68E4:  MOVLW  03
68E6:  MOVWF  x2D
....................       if(disp_Fin==0) 
68E8:  BTFSC  x2B.3
68EA:  BRA    695A
....................       { 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
68EC:  CLRF   xF2
68EE:  MOVLW  37
68F0:  MOVWF  xF3
68F2:  MOVLW  7F
68F4:  MOVWF  xF4
68F6:  MOVLW  3F
68F8:  MOVWF  xF5
68FA:  MOVLW  01
68FC:  MOVWF  xF6
68FE:  CLRF   xF7
6900:  MOVLB  0
6902:  CALL   1582
....................          strcpy(Menus.Letra,"Ciclo Finalizado");displayMenu(Menus.Letra,0,55,2,1); 
6906:  MOVLW  05
6908:  MOVWF  FEA
690A:  MOVLW  C0
690C:  MOVWF  FE9
690E:  MOVFF  FF2,5E0
6912:  BCF    FF2.7
6914:  MOVLW  00
6916:  CALL   0DDE
691A:  TBLRD*-
691C:  TBLRD*+
691E:  MOVF   FF5,W
6920:  MOVWF  FEE
6922:  IORLW  00
6924:  BNZ   691C
6926:  MOVLB  5
6928:  BTFSC  xE0.7
692A:  BSF    FF2.7
692C:  MOVLW  05
692E:  MOVWF  xE1
6930:  MOVLW  C0
6932:  MOVWF  xE0
6934:  CLRF   xE2
6936:  MOVLW  37
6938:  MOVWF  xE3
693A:  MOVLW  02
693C:  MOVWF  xE4
693E:  MOVLW  01
6940:  MOVWF  xE5
6942:  MOVLB  0
6944:  CALL   1644
....................          disp_Calentando=0;disp_Llenando=0;disp_Secando=1;disp_Esterilizando=0;disp_Despresurizando=1;disp_Stop=0;disp_Door=0;disp_Fin=1; 
6948:  MOVLB  5
694A:  BCF    x2A.4
694C:  BCF    x2A.5
694E:  BSF    x2A.6
6950:  BCF    x2A.7
6952:  BSF    x2B.0
6954:  BCF    x2B.1
6956:  BCF    x2B.2
6958:  BSF    x2B.3
....................       }    
....................        
....................       if(RIGHT) 
695A:  BSF    F92.2
695C:  BTFSS  F80.2
695E:  BRA    697A
....................       { 
....................          Control=3; 
6960:  MOVLW  03
6962:  MOVWF  x34
....................          delay_ms(1000); 
6964:  MOVLW  04
6966:  MOVWF  xE0
6968:  MOVLW  FA
696A:  MOVWF  xE1
696C:  MOVLB  0
696E:  CALL   0F70
6972:  MOVLB  5
6974:  DECFSZ xE0,F
6976:  BRA    6968
....................          reset_cpu(); 
6978:  RESET
....................       } 
....................    } 
....................    EVAgua=10; 
697A:  MOVLW  0A
697C:  MOVWF  x2E
....................    Envio_Esclavos(); 
697E:  MOVLB  0
6980:  CALL   2022
6984:  MOVLB  5
....................   } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  while(Menu==100) 
....................  { 
6986:  MOVF   x36,W
6988:  SUBLW  64
698A:  BNZ   6A82
....................     
....................    displayTiempo(datoRx[0],0,10,2,1); 
698C:  MOVFF  57A,5E1
6990:  CLRF   xE2
6992:  MOVLW  0A
6994:  MOVWF  xE3
6996:  MOVLW  02
6998:  MOVWF  xE4
699A:  MOVLW  01
699C:  MOVWF  xE5
699E:  MOVLB  0
69A0:  CALL   244E
....................    displayTiempo(datoRx[1],0,20,2,1); 
69A4:  MOVFF  57B,5E1
69A8:  MOVLB  5
69AA:  CLRF   xE2
69AC:  MOVLW  14
69AE:  MOVWF  xE3
69B0:  MOVLW  02
69B2:  MOVWF  xE4
69B4:  MOVLW  01
69B6:  MOVWF  xE5
69B8:  MOVLB  0
69BA:  CALL   244E
....................    displayTiempo(datoRx[2],0,30,2,1); 
69BE:  MOVFF  57C,5E1
69C2:  MOVLB  5
69C4:  CLRF   xE2
69C6:  MOVLW  1E
69C8:  MOVWF  xE3
69CA:  MOVLW  02
69CC:  MOVWF  xE4
69CE:  MOVLW  01
69D0:  MOVWF  xE5
69D2:  MOVLB  0
69D4:  CALL   244E
....................    displayTiempo(datoRx[3],0,40,2,1); 
69D8:  MOVFF  57D,5E1
69DC:  MOVLB  5
69DE:  CLRF   xE2
69E0:  MOVLW  28
69E2:  MOVWF  xE3
69E4:  MOVLW  02
69E6:  MOVWF  xE4
69E8:  MOVLW  01
69EA:  MOVWF  xE5
69EC:  MOVLB  0
69EE:  CALL   244E
....................    displayTiempo(Opcion,0,50,2,1); 
69F2:  MOVFF  53D,5E1
69F6:  MOVLB  5
69F8:  CLRF   xE2
69FA:  MOVLW  32
69FC:  MOVWF  xE3
69FE:  MOVLW  02
6A00:  MOVWF  xE4
6A02:  MOVLW  01
6A04:  MOVWF  xE5
6A06:  MOVLB  0
6A08:  CALL   244E
....................    Lectura_Esclavos(); 
6A0C:  CALL   1EC6
....................    Opcion++; 
6A10:  MOVLB  5
6A12:  INCF   x3D,F
....................    displayTiempo(Puerta,50,10,2,1); 
6A14:  MOVFF  51D,5E1
6A18:  MOVLW  32
6A1A:  MOVWF  xE2
6A1C:  MOVLW  0A
6A1E:  MOVWF  xE3
6A20:  MOVLW  02
6A22:  MOVWF  xE4
6A24:  MOVLW  01
6A26:  MOVWF  xE5
6A28:  MOVLB  0
6A2A:  CALL   244E
....................    displayTiempo(Parada,50,20,2,1); 
6A2E:  MOVFF  51E,5E1
6A32:  MOVLW  32
6A34:  MOVLB  5
6A36:  MOVWF  xE2
6A38:  MOVLW  14
6A3A:  MOVWF  xE3
6A3C:  MOVLW  02
6A3E:  MOVWF  xE4
6A40:  MOVLW  01
6A42:  MOVWF  xE5
6A44:  MOVLB  0
6A46:  CALL   244E
....................    displayTiempo(ADC_Pt100,50,30,2,1);      
6A4A:  MOVFF  553,5E3
6A4E:  MOVFF  552,5E2
6A52:  MOVFF  551,5E1
6A56:  MOVFF  550,5E0
6A5A:  CALL   2B2C
6A5E:  MOVFF  01,5E0
6A62:  MOVFF  01,5E1
6A66:  MOVLW  32
6A68:  MOVLB  5
6A6A:  MOVWF  xE2
6A6C:  MOVLW  1E
6A6E:  MOVWF  xE3
6A70:  MOVLW  02
6A72:  MOVWF  xE4
6A74:  MOVLW  01
6A76:  MOVWF  xE5
6A78:  MOVLB  0
6A7A:  CALL   244E
....................     
....................  } 
6A7E:  MOVLB  5
6A80:  BRA    6986
....................        
....................       while(Parada==0) 
....................       { 
6A82:  MOVF   x1E,F
6A84:  BNZ   6B3C
....................          Lectura_Esclavos(); 
6A86:  MOVLB  0
6A88:  CALL   1EC6
....................          delay_ms(100); 
6A8C:  MOVLW  64
6A8E:  MOVLB  5
6A90:  MOVWF  xE1
6A92:  MOVLB  0
6A94:  CALL   0F70
....................          if(disp_Stop==0) 
6A98:  MOVLB  5
6A9A:  BTFSC  x2B.1
6A9C:  BRA    6B3A
....................          { 
....................             glcd_fillScreen(OFF);  
6A9E:  CLRF   xE1
6AA0:  MOVLB  0
6AA2:  CALL   0FDA
....................             strcpy(Menus.Letra,"  !Parada!");displayMenu(Menus.Letra,0,10,0,2); 
6AA6:  MOVLW  05
6AA8:  MOVWF  FEA
6AAA:  MOVLW  C0
6AAC:  MOVWF  FE9
6AAE:  MOVFF  FF2,5E0
6AB2:  BCF    FF2.7
6AB4:  MOVLW  00
6AB6:  CALL   0E0A
6ABA:  TBLRD*-
6ABC:  TBLRD*+
6ABE:  MOVF   FF5,W
6AC0:  MOVWF  FEE
6AC2:  IORLW  00
6AC4:  BNZ   6ABC
6AC6:  MOVLB  5
6AC8:  BTFSC  xE0.7
6ACA:  BSF    FF2.7
6ACC:  MOVLW  05
6ACE:  MOVWF  xE1
6AD0:  MOVLW  C0
6AD2:  MOVWF  xE0
6AD4:  CLRF   xE2
6AD6:  MOVLW  0A
6AD8:  MOVWF  xE3
6ADA:  CLRF   xE4
6ADC:  MOVLW  02
6ADE:  MOVWF  xE5
6AE0:  MOVLB  0
6AE2:  CALL   1644
....................             strcpy(Menus.Letra," !Activada!");displayMenu(Menus.Letra,0,30,0,2);emergency=1; 
6AE6:  MOVLW  05
6AE8:  MOVWF  FEA
6AEA:  MOVLW  C0
6AEC:  MOVWF  FE9
6AEE:  MOVFF  FF2,5E0
6AF2:  BCF    FF2.7
6AF4:  MOVLW  00
6AF6:  CALL   0E30
6AFA:  TBLRD*-
6AFC:  TBLRD*+
6AFE:  MOVF   FF5,W
6B00:  MOVWF  FEE
6B02:  IORLW  00
6B04:  BNZ   6AFC
6B06:  MOVLB  5
6B08:  BTFSC  xE0.7
6B0A:  BSF    FF2.7
6B0C:  MOVLW  05
6B0E:  MOVWF  xE1
6B10:  MOVLW  C0
6B12:  MOVWF  xE0
6B14:  CLRF   xE2
6B16:  MOVLW  1E
6B18:  MOVWF  xE3
6B1A:  CLRF   xE4
6B1C:  MOVLW  02
6B1E:  MOVWF  xE5
6B20:  MOVLB  0
6B22:  CALL   1644
6B26:  MOVLB  5
6B28:  BSF    x29.3
....................             disp_Calentando=0;disp_Llenando=0;disp_Secando=0;disp_Esterilizando=0;disp_Despresurizando=0;disp_Stop=1;disp_Door=0;disp_Fin=0; 
6B2A:  BCF    x2A.4
6B2C:  BCF    x2A.5
6B2E:  BCF    x2A.6
6B30:  BCF    x2A.7
6B32:  BCF    x2B.0
6B34:  BSF    x2B.1
6B36:  BCF    x2B.2
6B38:  BCF    x2B.3
....................          } 
....................       }    
6B3A:  BRA    6A82
....................       if(Parada==1) 
6B3C:  DECFSZ x1E,W
6B3E:  BRA    6BE6
....................       { 
....................          while(emergency==1) 
....................          { 
6B40:  BTFSS  x29.3
6B42:  BRA    6BE6
....................             Lectura_Esclavos(); 
6B44:  MOVLB  0
6B46:  CALL   1EC6
....................             if(disp_Stop==1) 
6B4A:  MOVLB  5
6B4C:  BTFSS  x2B.1
6B4E:  BRA    6B5C
....................             { 
....................                glcd_fillScreen(OFF);disp_Stop=0; 
6B50:  CLRF   xE1
6B52:  MOVLB  0
6B54:  CALL   0FDA
6B58:  MOVLB  5
6B5A:  BCF    x2B.1
....................             } 
....................          strcpy(Menus.Letra,"!Reinicie!");displayMenu(Menus.Letra,0,10,0,2); 
6B5C:  MOVLW  05
6B5E:  MOVWF  FEA
6B60:  MOVLW  C0
6B62:  MOVWF  FE9
6B64:  MOVFF  FF2,5E0
6B68:  BCF    FF2.7
6B6A:  MOVLW  00
6B6C:  MOVLB  0
6B6E:  CALL   0E56
6B72:  TBLRD*-
6B74:  TBLRD*+
6B76:  MOVF   FF5,W
6B78:  MOVWF  FEE
6B7A:  IORLW  00
6B7C:  BNZ   6B74
6B7E:  MOVLB  5
6B80:  BTFSC  xE0.7
6B82:  BSF    FF2.7
6B84:  MOVLW  05
6B86:  MOVWF  xE1
6B88:  MOVLW  C0
6B8A:  MOVWF  xE0
6B8C:  CLRF   xE2
6B8E:  MOVLW  0A
6B90:  MOVWF  xE3
6B92:  CLRF   xE4
6B94:  MOVLW  02
6B96:  MOVWF  xE5
6B98:  MOVLB  0
6B9A:  CALL   1644
....................          strcpy(Menus.Letra,"!el Equipo!");displayMenu(Menus.Letra,0,30,0,2); 
6B9E:  MOVLW  05
6BA0:  MOVWF  FEA
6BA2:  MOVLW  C0
6BA4:  MOVWF  FE9
6BA6:  MOVFF  FF2,5E0
6BAA:  BCF    FF2.7
6BAC:  MOVLW  00
6BAE:  CALL   0E7C
6BB2:  TBLRD*-
6BB4:  TBLRD*+
6BB6:  MOVF   FF5,W
6BB8:  MOVWF  FEE
6BBA:  IORLW  00
6BBC:  BNZ   6BB4
6BBE:  MOVLB  5
6BC0:  BTFSC  xE0.7
6BC2:  BSF    FF2.7
6BC4:  MOVLW  05
6BC6:  MOVWF  xE1
6BC8:  MOVLW  C0
6BCA:  MOVWF  xE0
6BCC:  CLRF   xE2
6BCE:  MOVLW  1E
6BD0:  MOVWF  xE3
6BD2:  CLRF   xE4
6BD4:  MOVLW  02
6BD6:  MOVWF  xE5
6BD8:  MOVLB  0
6BDA:  CALL   1644
....................          glcd_update();} 
6BDE:  CALL   1034
6BE2:  MOVLB  5
6BE4:  BRA    6B40
....................       } 
....................    } 
6BE6:  MOVLB  0
6BE8:  GOTO   3124
.................... } 
6BEC:  SLEEP 

Configuration Fuses:
   Word  1: CE20   IESO FCMEN HSPLL PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
